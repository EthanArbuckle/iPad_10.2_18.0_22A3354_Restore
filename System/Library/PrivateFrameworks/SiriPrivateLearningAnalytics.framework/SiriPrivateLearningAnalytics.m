uint64_t SiriUserFeedbackLearningPluginDiscovery.findPlugins()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t aBlock[6];

  v0 = type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin();
  v36 = *(_QWORD *)(v0 - 8);
  v37 = v0;
  MEMORY[0x1E0C80A78]();
  v2 = (uint64_t *)((char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED88E518 != -1)
    swift_once();
  v3 = sub_1CB8466D8();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED890248);
  v4 = sub_1CB8466C0();
  v5 = sub_1CB846C84();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    aBlock[0] = v7;
    *(_DWORD *)v6 = 136315138;
    v38 = sub_1CB775A54(0x67756C50646E6966, 0xED00002928736E69, aBlock);
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v4, v5, "PluginDiscovery.%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v7, -1, -1);
    MEMORY[0x1D179FE84](v6, -1, -1);
  }

  aBlock[4] = (uint64_t)sub_1CB774774;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1CB7748CC;
  aBlock[3] = (uint64_t)&block_descriptor;
  v8 = _Block_copy(aBlock);
  v9 = objc_msgSend((id)objc_opt_self(), sel_predicateWithBlock_, v8);
  _Block_release(v8);
  swift_release();
  v10 = objc_allocWithZone(MEMORY[0x1E0CAA560]);
  v11 = v9;
  v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v13 = objc_msgSend(v10, sel_initWithExtensionPointIdentifier_predicate_, v12, v11);

  v14 = objc_msgSend((id)objc_opt_self(), sel_executeQuery_, v13);
  sub_1CB777FA8(0, &qword_1EF99C4B0);
  v15 = sub_1CB846A5C();

  if (!(v15 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v16)
      goto LABEL_7;
LABEL_17:
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    v32 = sub_1CB77498C(v19);

    swift_bridgeObjectRelease();
    return v32;
  }
  swift_bridgeObjectRetain();
  v16 = sub_1CB847044();
  swift_bridgeObjectRelease();
  if (!v16)
    goto LABEL_17;
LABEL_7:
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  result = sub_1CB776088(0, v16 & ~(v16 >> 63), 0);
  if ((v16 & 0x8000000000000000) == 0)
  {
    v33 = v13;
    v34 = v11;
    v18 = 0;
    v19 = aBlock[0];
    v35 = v15 & 0xC000000000000001;
    v20 = v15;
    do
    {
      if (v35)
        v21 = (id)MEMORY[0x1D179F320](v18, v15);
      else
        v21 = *(id *)(v15 + 8 * v18 + 32);
      v22 = v21;
      v23 = objc_msgSend(v21, sel_bundleIdentifier, v33, v34);
      v24 = sub_1CB8468A0();
      v26 = v25;

      v27 = objc_msgSend(v22, sel_url);
      v28 = (char *)v2 + *(int *)(v37 + 20);
      sub_1CB845F34();

      *v2 = v24;
      v2[1] = v26;
      v29 = sub_1CB845F58();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);

      aBlock[0] = v19;
      v31 = *(_QWORD *)(v19 + 16);
      v30 = *(_QWORD *)(v19 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1CB776088(v30 > 1, v31 + 1, 1);
        v19 = aBlock[0];
      }
      ++v18;
      *(_QWORD *)(v19 + 16) = v31 + 1;
      sub_1CB7760B4((uint64_t)v2, v19+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v31);
      v15 = v20;
    }
    while (v16 != v18);
    swift_bridgeObjectRelease();
    v13 = v33;
    v11 = v34;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB774774(uint64_t a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  id v6;
  __int128 v7;
  __int128 v8;

  sub_1CB778150(a1, (uint64_t)&v7);
  if (!*((_QWORD *)&v8 + 1))
  {
    sub_1CB778110((uint64_t)&v7);
    goto LABEL_7;
  }
  sub_1CB777FA8(0, &qword_1EF99C4B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v7 = 0u;
    v8 = 0u;
LABEL_8:
    sub_1CB778110((uint64_t)&v7);
    return 0;
  }
  v1 = objc_msgSend(v6, sel_attributes);

  v2 = sub_1CB8467EC();
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_1CB779A70(0xD00000000000001ELL, 0x80000001CB852610), (v4 & 1) != 0))
  {
    sub_1CB778000(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v7);
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v8 + 1))
    goto LABEL_8;
  if ((swift_dynamicCast() & 1) != 0)
    return v6;
  return 0;
}

uint64_t sub_1CB7748CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(__int128 *, uint64_t);
  char v6;
  __int128 v8;
  __int128 v9;

  v3 = a3;
  v5 = *(uint64_t (**)(__int128 *, uint64_t))(a1 + 32);
  if (!a2)
  {
    v8 = 0u;
    v9 = 0u;
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  *((_QWORD *)&v9 + 1) = swift_getObjectType();
  *(_QWORD *)&v8 = a2;
  if (v3)
LABEL_3:
    v3 = sub_1CB8467EC();
LABEL_4:
  swift_retain();
  swift_unknownObjectRetain();
  v6 = v5(&v8, v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1CB778110((uint64_t)&v8);
  return v6 & 1;
}

uint64_t sub_1CB77498C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *boxed_opaque_existential_1;
  __int128 v14;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;

  v2 = type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1CB77605C(0, v6, 0);
    v7 = v17;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1CB77803C(v8, (uint64_t)v5);
      v17 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1CB77605C(v10 > 1, v11 + 1, 1);
        v7 = v17;
      }
      v15 = v2;
      v16 = &protocol witness table for SiriUserFeedbackLearningMLRuntimePlugin;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_1CB77803C((uint64_t)v5, (uint64_t)boxed_opaque_existential_1);
      *(_QWORD *)(v7 + 16) = v11 + 1;
      sub_1CB7780BC(&v14, v7 + 40 * v11 + 32);
      sub_1CB7780D4((uint64_t)v5);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1CB774ADC(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v16 = MEMORY[0x1E0DEE9D8];
  result = sub_1CB7763A8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v16;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x1D179F320](v5, a1);
        v16 = v3;
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1CB7763A8(v7 > 1, v8 + 1, 1);
          v3 = v16;
        }
        ++v5;
        v14 = type metadata accessor for SiriCorrectionsUndoResponse();
        v15 = sub_1CB7762AC((unint64_t *)&unk_1EF99C6B0, (uint64_t (*)(uint64_t))type metadata accessor for SiriCorrectionsUndoResponse, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
        *(_QWORD *)&v13 = v6;
        *(_QWORD *)(v3 + 16) = v8 + 1;
        sub_1CB7780BC(&v13, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (uint64_t *)(a1 + 32);
      do
      {
        v10 = *v9;
        v16 = v3;
        v12 = *(_QWORD *)(v3 + 16);
        v11 = *(_QWORD *)(v3 + 24);
        swift_retain();
        if (v12 >= v11 >> 1)
        {
          sub_1CB7763A8(v11 > 1, v12 + 1, 1);
          v3 = v16;
        }
        v14 = type metadata accessor for SiriCorrectionsUndoResponse();
        v15 = sub_1CB7762AC((unint64_t *)&unk_1EF99C6B0, (uint64_t (*)(uint64_t))type metadata accessor for SiriCorrectionsUndoResponse, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
        *(_QWORD *)&v13 = v10;
        *(_QWORD *)(v3 + 16) = v12 + 1;
        sub_1CB7780BC(&v13, v3 + 40 * v12 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB774CE4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1CB7763D4(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CB7763D4(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1CB7763D4(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1CB777CAC(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1CB774E08(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1CB7763D4(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CB7763D4(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1CB7763D4(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1CB777CAC(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1CB774F28(unint64_t a1)
{
  return sub_1CB775070(a1, (unint64_t *)&unk_1ED88DE50);
}

uint64_t sub_1CB774F3C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1CB7763D4(0, v1, 0);
    v4 = a1 + 32;
    type metadata accessor for BMSiriExecutionTaskStepType(0);
    do
    {
      v4 += 8;
      swift_dynamicCast();
      v2 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CB7763D4(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1CB7763D4(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1CB777CAC(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1CB77505C(unint64_t a1)
{
  return sub_1CB775070(a1, (unint64_t *)&qword_1EF9A0BF0);
}

uint64_t sub_1CB775070(unint64_t a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  id *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v15 = MEMORY[0x1E0DEE9D8];
  result = sub_1CB7763D4(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        MEMORY[0x1D179F320](i, a1);
        sub_1CB777FA8(0, a2);
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CB7763D4(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v9 = *(_QWORD *)(v5 + 16);
        v8 = *(_QWORD *)(v5 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_1CB7763D4(v8 > 1, v9 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v9 + 1;
        sub_1CB777CAC(v14, (_OWORD *)(v5 + 32 * v9 + 32));
      }
    }
    else
    {
      v10 = (id *)(a1 + 32);
      sub_1CB777FA8(0, a2);
      do
      {
        v11 = *v10;
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CB7763D4(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v13 = *(_QWORD *)(v5 + 16);
        v12 = *(_QWORD *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1CB7763D4(v12 > 1, v13 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v13 + 1;
        sub_1CB777CAC(v14, (_OWORD *)(v5 + 32 * v13 + 32));
        ++v10;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB7752C0()
{
  return SiriUserFeedbackLearningPluginDiscovery.findPlugins()();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_1CB775308()
{
  return sub_1CB8472FC();
}

uint64_t sub_1CB775334()
{
  return sub_1CB846BF4();
}

uint64_t sub_1CB77533C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x1D179EFC0](a1, &v6);
  v4 = v6;
  v5 = v7;
  if (v7)
    v4 = 0;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1CB77538C(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = sub_1CB846C0C();
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_1CB7753E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1CB846C18();
  *a1 = result;
  return result;
}

void sub_1CB775404(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void sub_1CB775410(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1CB77541C(uint64_t a1, uint64_t a2)
{
  return sub_1CB7754E4(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1CB775428()
{
  sub_1CB8468A0();
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB775468()
{
  uint64_t v0;

  sub_1CB8468A0();
  sub_1CB8472E4();
  sub_1CB846924();
  v0 = sub_1CB847314();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB7754D8(uint64_t a1, uint64_t a2)
{
  return sub_1CB7754E4(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1CB7754E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1CB8468A0();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1CB775520(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1CB846888();
  *a2 = 0;
  return result;
}

uint64_t sub_1CB775594(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1CB846894();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1CB775610@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1CB8468A0();
  v2 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1CB775650()
{
  sub_1CB8472E4();
  sub_1CB8472FC();
  return sub_1CB847314();
}

uint64_t sub_1CB775694()
{
  sub_1CB8472E4();
  sub_1CB8472FC();
  return sub_1CB847314();
}

_DWORD *sub_1CB7756D4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

BOOL sub_1CB7756E4(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_1CB7756F8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_1CB77570C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1CB77571C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_1CB775728(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1CB775730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1CB8468A0();
  v2 = v1;
  if (v0 == sub_1CB8468A0() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

_QWORD *sub_1CB7757B8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1CB7757C4()
{
  sub_1CB7762AC(&qword_1EF99C618, (uint64_t (*)(uint64_t))type metadata accessor for BPSDemand, (uint64_t)&unk_1CB8483B0);
  sub_1CB7762AC(&qword_1EF99C620, (uint64_t (*)(uint64_t))type metadata accessor for BPSDemand, (uint64_t)&unk_1CB848350);
  return sub_1CB847098();
}

uint64_t sub_1CB775858@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1CB77589C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1CB8468A0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1CB7758C4()
{
  sub_1CB7762AC(&qword_1ED88A758, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1CB8487B8);
  sub_1CB7762AC((unint64_t *)&unk_1EF99C7D0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1CB8485F8);
  return sub_1CB847098();
}

uint64_t sub_1CB775948()
{
  return sub_1CB846C24();
}

uint64_t sub_1CB775950()
{
  return sub_1CB8472F0();
}

uint64_t sub_1CB775978()
{
  return sub_1CB8472D8();
}

uint64_t sub_1CB775980(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1CB775990(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1CB7759C4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1CB7759E4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1CB775A54(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1CB846E58();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1CB775A54(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1CB775B24(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1CB778000((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1CB778000((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1CB775B24(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1CB846E64();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1CB775CDC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1CB846F9C();
  if (!v8)
  {
    sub_1CB847038();
    __break(1u);
LABEL_17:
    result = sub_1CB847074();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1CB775CDC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1CB775D70(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1CB775EE4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1CB775EE4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1CB775D70(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1CB7E9F34(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1CB846F3C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1CB847038();
      __break(1u);
LABEL_10:
      v2 = sub_1CB846978();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1CB847074();
    __break(1u);
LABEL_14:
    result = sub_1CB847038();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1CB775EE4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E508);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

_BYTE **sub_1CB776030(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1CB776040(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CB7765D4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CB77605C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CB776A1C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1EF99C790, &qword_1ED888748);
  *v3 = result;
  return result;
}

uint64_t sub_1CB776088(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CB777434(a1, a2, a3, (_QWORD *)*v3, &qword_1EF99C7A0, (uint64_t (*)(_QWORD))type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin);
  *v3 = result;
  return result;
}

uint64_t sub_1CB7760B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPluginDiscovering.findPlugins()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPluginDiscovery()
{
  return &type metadata for SiriUserFeedbackLearningPluginDiscovery;
}

uint64_t initializeBufferWithCopyOfBuffer for FeatureResolver(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy200_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t sub_1CB776188(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 200))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1CB7761A8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 200) = v3;
  return result;
}

void type metadata accessor for _opaque_pthread_rwlock_t(uint64_t a1)
{
  sub_1CB7781E8(a1, (unint64_t *)&unk_1EF99C518);
}

void type metadata accessor for BPSDemand(uint64_t a1)
{
  sub_1CB7781E8(a1, (unint64_t *)&unk_1ED88DE60);
}

void type metadata accessor for PLUSSchemaPLUSSuggestionGenerationDomain(uint64_t a1)
{
  sub_1CB7781E8(a1, (unint64_t *)&unk_1EF99C528);
}

void type metadata accessor for SISchemaComponentName(uint64_t a1)
{
  sub_1CB7781E8(a1, (unint64_t *)&unk_1ED88BF10);
}

uint64_t sub_1CB776254()
{
  return sub_1CB7762AC(&qword_1EF99C5F8, (uint64_t (*)(uint64_t))type metadata accessor for SISchemaComponentName, (uint64_t)&unk_1CB848238);
}

uint64_t sub_1CB776280()
{
  return sub_1CB7762AC(&qword_1EF99C600, (uint64_t (*)(uint64_t))type metadata accessor for BPSDemand, (uint64_t)&unk_1CB848314);
}

uint64_t sub_1CB7762AC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1D179FD88](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CB7762EC()
{
  return sub_1CB7762AC(&qword_1EF99C608, (uint64_t (*)(uint64_t))type metadata accessor for BPSDemand, (uint64_t)&unk_1CB8482E8);
}

uint64_t sub_1CB776318()
{
  return sub_1CB7762AC(&qword_1EF99C610, (uint64_t (*)(uint64_t))type metadata accessor for BPSDemand, (uint64_t)&unk_1CB848384);
}

uint64_t sub_1CB776344(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CB77673C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1CB776360(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CB7768C4(a1, a2, a3, *v3, &qword_1EF99C778);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CB776384(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CB7768C4(a1, a2, a3, *v3, (uint64_t *)&unk_1EF99C780);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CB7763A8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CB776A1C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1ED88BFE8, &qword_1ED88BC30);
  *v3 = result;
  return result;
}

uint64_t sub_1CB7763D4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CB776BC0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CB7763F0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CB776D2C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CB77640C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CB776E78(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1CB776428(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CB777434(a1, a2, a3, (_QWORD *)*v3, &qword_1EF99C748, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
  *v3 = result;
  return result;
}

uint64_t sub_1CB776454(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CB776FFC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CB776470(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CB777164(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CB77648C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CB777434(a1, a2, a3, (_QWORD *)*v3, &qword_1EF99C770, (uint64_t (*)(_QWORD))MEMORY[0x1E0D9F1C0]);
  *v3 = result;
  return result;
}

uint64_t sub_1CB7764B8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CB777434(a1, a2, a3, (_QWORD *)*v3, &qword_1EF99C768, (uint64_t (*)(_QWORD))MEMORY[0x1E0D9F218]);
  *v3 = result;
  return result;
}

uint64_t sub_1CB7764E4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CB7772CC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CB776500(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CB777434(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1ED88BFC8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
  *v3 = result;
  return result;
}

uint64_t sub_1CB77652C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CB777614(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CB776548(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CB77777C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CB776564(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CB777928(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1CB776580(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CB777AB0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1CB77659C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CB777CBC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CB7765B8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CB777E24(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1CB7765D4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E080);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB77673C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C008);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF20);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7768C4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9])
      memmove(v14, v15, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB776A1C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB776BC0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF99C638);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB776D2C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99C750);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB776E78(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8895E8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  v15 = 2 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v10 + 4, a4 + 4, v15 * 8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8895F0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB776FFC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99C740);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB777164(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99C6A8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7772CC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A800);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB777434(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB777614(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF99C758);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB77777C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF99C628);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D179FD70]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1CB777928(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BFF8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DDE0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB777AB0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFD8);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D590) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D590) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

void type metadata accessor for BMSiriExecutionTaskStepType(uint64_t a1)
{
  sub_1CB7781E8(a1, (unint64_t *)&unk_1EF99C7A8);
}

_OWORD *sub_1CB777CAC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1CB777CBC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF99C720);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB777E24(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99C730);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  v15 = 4 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v10 + 4, a4 + 4, v15 * 8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99C738);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB777FA8(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1CB778000(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1CB77803C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1CB7780BC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1CB7780D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CB778110(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E088);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CB778150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void type metadata accessor for SISchemaDismissalReason(uint64_t a1)
{
  sub_1CB7781E8(a1, &qword_1ED88BF50);
}

void type metadata accessor for FLOWSchemaFLOWStateType(uint64_t a1)
{
  sub_1CB7781E8(a1, &qword_1ED88BF38);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_1CB7781E8(a1, &qword_1ED88A770);
}

void type metadata accessor for BPSCompletionState(uint64_t a1)
{
  sub_1CB7781E8(a1, &qword_1ED88DE10);
}

void sub_1CB7781E8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1CB77822C()
{
  return sub_1CB7762AC(&qword_1EF99C7B8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1CB8485BC);
}

uint64_t sub_1CB778258()
{
  return sub_1CB7762AC(&qword_1EF99C7C0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1CB848590);
}

uint64_t sub_1CB778284()
{
  return sub_1CB7762AC(&qword_1EF99C7C8, (uint64_t (*)(uint64_t))type metadata accessor for SISchemaDismissalReason, (uint64_t)&unk_1CB848750);
}

uint64_t sub_1CB7782B0()
{
  return sub_1CB7762AC((unint64_t *)&unk_1ED88A760, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1CB84862C);
}

void sub_1CB7782FC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(uint64_t, char *, uint64_t);
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  int v54;
  id v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  id v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v3 = sub_1CB8466D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v8 = MEMORY[0x1E0C80A78](v7);
  v64 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v57 - v10;
  v12 = sub_1CB846084();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v62 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v57 - v16;
  v18 = objc_msgSend(a1, sel_source);
  v65 = v6;
  v66 = v4;
  if (!v18)
    goto LABEL_11;
  v19 = v18;
  v20 = objc_msgSend(v18, sel_uuid);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_8:

    goto LABEL_9;
  }
  v21 = v20;
  v60 = v1;
  v61 = v17;
  v22 = objc_msgSend(v20, sel_value);
  if (v22)
  {
    v23 = v22;
    v24 = v3;
    v25 = sub_1CB845F94();
    v27 = v26;

    sub_1CB7B601C(v25, v27);
    v28 = v25;
    v3 = v24;
    sub_1CB779034(v28, v27);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  v29 = (uint64_t)v61;

  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v30(v11, 1, v12) == 1)
    goto LABEL_8;
  v42 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  v42(v29, v11, v12);
  v43 = objc_msgSend(a1, sel_target);
  if (!v43)
  {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v29, v12);

    goto LABEL_10;
  }
  v44 = v43;
  v58 = (void (*)(char *, char *, uint64_t))v42;
  v45 = objc_msgSend(v43, sel_uuid);
  v59 = v44;
  if (v45)
  {
    v46 = v45;
    v47 = objc_msgSend(v45, sel_value);
    if (v47)
    {
      v48 = v47;
      v49 = sub_1CB845F94();
      v63 = v3;
      v51 = v50;

      v11 = v64;
      sub_1CB7B601C(v49, v51);
      v52 = v51;
      v3 = v63;
      sub_1CB779034(v49, v52);
    }
    else
    {
      v11 = v64;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v64, 1, 1, v12);
    }
    v29 = (uint64_t)v61;

    if (v30(v11, 1, v12) != 1)
    {
      v53 = (uint64_t)v62;
      v58(v62, v11, v12);
      v54 = objc_msgSend(v19, sel_component);
      v55 = v59;
      sub_1CB77890C(v54, v29, (int)objc_msgSend(v59, sel_component), v53);
      sub_1CB77890C((int)objc_msgSend(v55, sel_component), v53, (int)objc_msgSend(v19, sel_component), v29);

      v56 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v56(v53, v12);
      v56(v29, v12);
      return;
    }
  }
  else
  {
    v11 = v64;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v64, 1, 1, v12);
  }

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v29, v12);
LABEL_9:
  sub_1CB778FF4((uint64_t)v11);
LABEL_10:
  v6 = v65;
  v4 = v66;
LABEL_11:
  if (qword_1ED88E518 != -1)
    swift_once();
  v31 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED890248);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v31, v3);
  v32 = a1;
  v33 = sub_1CB8466C0();
  v34 = sub_1CB846C90();
  if (os_log_type_enabled(v33, v34))
  {
    v63 = v3;
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v68 = v36;
    *(_DWORD *)v35 = 136315138;
    v37 = objc_msgSend(v32, sel_dictionaryRepresentation);
    if (v37)
    {
      v38 = v37;
      v64 = (char *)(v35 + 4);
      sub_1CB8467EC();

      v39 = sub_1CB8467F8();
      v41 = v40;
      swift_bridgeObjectRelease();
      v67 = sub_1CB775A54(v39, v41, &v68);
      sub_1CB846E58();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v33, v34, "RequestLink skipped due to incomplete data for message: %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v36, -1, -1);
      MEMORY[0x1D179FE84](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v63);
    }
    else
    {

      __break(1u);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1CB77890C(int a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  char v23;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v9 = sub_1CB846084();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t *)(v4 + 16);
  swift_beginAccess();
  v14 = *(_QWORD *)(v4 + 16);
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_1CB779AD4(a1), (v16 & 1) != 0))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = sub_1CB78745C(MEMORY[0x1E0DEE9D8]);
  }
  HIDWORD(v25) = a1;
  if (*(_QWORD *)(v17 + 16) && (v18 = sub_1CB779AD8(a2), (v19 & 1) != 0))
  {
    v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BC90);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = MEMORY[0x1E0DEE9E0];
  }
  sub_1CB82550C(a3, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v27 = v17;
  sub_1CB82E49C(v20, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
  v22 = v27;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v23 = swift_isUniquelyReferenced_nonNull_native();
  v26 = *v13;
  *v13 = 0x8000000000000000;
  sub_1CB82E488(v22, SHIDWORD(v25), v23);
  *v13 = v26;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_1CB778B18(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t result;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(unint64_t, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  char *v32;
  unint64_t v33;
  char v34;
  char v35;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = sub_1CB846084();
  v5 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  v11 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v11 + 16) && (v12 = sub_1CB779AD4(a1), (v13 & 1) != 0))
  {
    v49 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    v14 = sub_1CB825874(a2);
    if (v14)
      goto LABEL_7;
  }
  else
  {
    v49 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BC90);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = MEMORY[0x1E0DEE9E0];
LABEL_7:
  v15 = v14;
  swift_beginAccess();
  v37 = v15;
  v16 = swift_bridgeObjectRetain();
  v17 = sub_1CB7F473C(v16);
  result = swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v17 + 16);
  if (v19)
  {
    v20 = 0;
    v21 = v17 + 32;
    v44 = v10;
    v45 = v5;
    v39 = v19;
    v40 = v17;
    v38 = v17 + 32;
    while (v20 < *(_QWORD *)(v17 + 16))
    {
      v22 = *v43;
      if (*(_QWORD *)(*v43 + 16))
      {
        v23 = *(_QWORD *)(v21 + 16 * v20 + 8);
        result = sub_1CB779AD4(*(_DWORD *)(v21 + 16 * v20));
        if ((v24 & 1) != 0)
        {
          v41 = v23;
          v42 = v20;
          v25 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * result);
          v26 = *(_QWORD *)(v23 + 16);
          if (v26)
          {
            v27 = v23 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v28 = *(_QWORD *)(v5 + 72);
            v46 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
            v29 = v47;
            v46(v10, v27, v47);
            while (1)
            {
              v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
              v31(v10, 0, 1, v29);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v29) == 1)
                break;
              (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v29);
              swift_bridgeObjectRetain();
              v32 = v7;
              v33 = sub_1CB779AD8((uint64_t)v7);
              v35 = v34;
              swift_bridgeObjectRelease();
              if ((v35 & 1) != 0)
              {
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v48 = v25;
                if (!isUniquelyReferenced_nonNull_native)
                {
                  sub_1CB77E4C4();
                  v25 = v48;
                }
                v30 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
                v29 = v47;
                v30(*(_QWORD *)(v25 + 48) + v33 * v28, v47);
                v25 = v48;
                sub_1CB825DDC(v33, v48);
                swift_release();
                swift_bridgeObjectRelease();
              }
              else
              {
                v30 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
                v29 = v47;
              }
              v7 = v32;
              v30((unint64_t)v32, v29);
              v27 += v28;
              --v26;
              v10 = v44;
              v5 = v45;
              if (!v26)
                goto LABEL_26;
              v46(v44, v27, v29);
            }
            v19 = v39;
            v17 = v40;
            v20 = v42;
            v21 = v38;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_26:
            v20 = v42;
            v21 = v38;
            v31(v10, 1, 1, v47);
            v19 = v39;
            v17 = v40;
          }
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
        }
      }
      if (++v20 == v19)
        goto LABEL_27;
    }
    __break(1u);
  }
  else
  {
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v37;
  }
  return result;
}

uint64_t sub_1CB778EAC(int a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;

  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 16);
  if (!*(_QWORD *)(v7 + 16))
    return MEMORY[0x1E0DEE9D8];
  v8 = sub_1CB779AD4(a1);
  if ((v9 & 1) == 0)
    return MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
  if (!*(_QWORD *)(v10 + 16))
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v11 = sub_1CB779AD8(a2);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v14 = *(_QWORD *)(v13 + 16);
  if (!*(_QWORD *)(v14 + 16) || (v15 = sub_1CB779AD4(a3), (v16 & 1) == 0))
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_release();
  return v17;
}

uint64_t _s28SiriPrivateLearningAnalytics23ASRBestPostITNUtteranceCfD_0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RequestLinkTable()
{
  return objc_opt_self();
}

uint64_t sub_1CB778FF4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CB779034(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t FeatureProvider.targetName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureProvider.featureNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeatureProvider.__allocating_init(features:targetName:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  FeatureProvider.init(features:targetName:)(a1, a2, a3);
  return v6;
}

uint64_t FeatureProvider.init(features:targetName:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v4 = a1;
  v3[2] = MEMORY[0x1E0DEE9E0];
  v3[3] = a2;
  v5 = v3 + 2;
  v3[4] = a3;
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v6 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_3:
      v31 = v4 & 0xC000000000000001;
      v7 = 4;
      while (1)
      {
        v9 = v7 - 4;
        if (v31)
        {
          v10 = MEMORY[0x1D179F320](v7 - 4, v4);
          v11 = v7 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_23;
        }
        else
        {
          v10 = *(_QWORD *)(v4 + 8 * v7);
          swift_retain();
          v11 = v7 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        v32 = v11;
        v12 = sub_1CB79A968();
        v4 = v13;
        swift_beginAccess();
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v3 = (_QWORD *)*v5;
        v33 = (_QWORD *)*v5;
        *v5 = 0x8000000000000000;
        v16 = sub_1CB779A70(v12, v4);
        v17 = v3[2];
        v18 = (v15 & 1) == 0;
        v19 = v17 + v18;
        if (__OFADD__(v17, v18))
          goto LABEL_24;
        v20 = v15;
        if (v3[3] >= v19)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v3 = v33;
            if ((v15 & 1) != 0)
              goto LABEL_4;
          }
          else
          {
            sub_1CB77E89C();
            v3 = v33;
            if ((v20 & 1) != 0)
              goto LABEL_4;
          }
        }
        else
        {
          sub_1CB77AC68(v19, isUniquelyReferenced_nonNull_native);
          v21 = sub_1CB779A70(v12, v4);
          if ((v20 & 1) != (v22 & 1))
          {
            result = sub_1CB847290();
            __break(1u);
            return result;
          }
          v16 = v21;
          v3 = v33;
          if ((v20 & 1) != 0)
          {
LABEL_4:
            v8 = v3[7];
            swift_release();
            *(_QWORD *)(v8 + 8 * v16) = v10;
            goto LABEL_5;
          }
        }
        v3[(v16 >> 6) + 8] |= 1 << v16;
        v23 = (uint64_t *)(v3[6] + 16 * v16);
        *v23 = v12;
        v23[1] = v4;
        *(_QWORD *)(v3[7] + 8 * v16) = v10;
        v24 = v3[2];
        v25 = __OFADD__(v24, 1);
        v26 = v24 + 1;
        if (v25)
          goto LABEL_25;
        v3[2] = v26;
        swift_bridgeObjectRetain();
LABEL_5:
        *v5 = v3;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release();
        ++v7;
        v4 = v30;
        if (v32 == v6)
        {
          swift_bridgeObjectRelease();
          v3 = v29;
          goto LABEL_28;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_28:
  swift_beginAccess();
  v27 = swift_bridgeObjectRetain();
  v3[5] = sub_1CB779404(v27);
  return (uint64_t)v3;
}

uint64_t sub_1CB779404(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1CB846BE8();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1CB829A3C(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1CB779598(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_1CB779A70(a1, a2);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = *(_BYTE *)(v8 + 32);
      v29 = *(_OWORD *)(v8 + 16);
      LOBYTE(v30) = v9;
      sub_1CB79AEFC();
      if (v10)
      {
        v11 = v10;
        swift_release();
      }
      else
      {
        v18 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
        v11 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithString_, v18, v29, v30);

        if (qword_1ED88E518 != -1)
          swift_once();
        v19 = sub_1CB8466D8();
        __swift_project_value_buffer(v19, (uint64_t)qword_1ED890248);
        swift_retain_n();
        v20 = sub_1CB8466C0();
        v21 = sub_1CB846C90();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          v23 = swift_slowAlloc();
          *(_QWORD *)&v29 = v23;
          *(_DWORD *)v22 = 136315138;
          v24 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 104);
          v25 = swift_retain();
          v26 = v24(v25);
          v28 = v27;
          swift_release();
          v31 = sub_1CB775A54(v26, v28, (uint64_t *)&v29);
          sub_1CB846E58();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1CB771000, v20, v21, "No known conversion of FeatureValue %s to StringMLFeatureValue", v22, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D179FE84](v23, -1, -1);
          MEMORY[0x1D179FE84](v22, -1, -1);
          swift_release();

        }
        else
        {

          swift_release_n();
        }
      }
      return v11;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v12 = sub_1CB8466D8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED890248);
  swift_bridgeObjectRetain_n();
  v13 = sub_1CB8466C0();
  v14 = sub_1CB846C90();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    *(_QWORD *)&v29 = v16;
    *(_DWORD *)v15 = 136315138;
    swift_bridgeObjectRetain();
    v31 = sub_1CB775A54(a1, a2, (uint64_t *)&v29);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CB771000, v13, v14, "%s is not a supported feature", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v16, -1, -1);
    MEMORY[0x1D179FE84](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t FeatureProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeatureProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1CB779A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1CB8472E4();
  sub_1CB846924();
  v4 = sub_1CB847314();
  return sub_1CB779DE4(a1, a2, v4);
}

unint64_t sub_1CB779AD8(uint64_t a1)
{
  uint64_t v2;

  sub_1CB846084();
  sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
  v2 = sub_1CB846810();
  return sub_1CB779EC4(a1, v2);
}

void sub_1CB779B3C(char a1)
{
  sub_1CB8472E4();
  __asm { BR              X10 }
}

uint64_t sub_1CB779B8C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1CB846924();
  swift_bridgeObjectRelease();
  v1 = sub_1CB847314();
  return sub_1CB779FFC(v0, v1);
}

unint64_t sub_1CB779C18(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CB8472D8();
  return sub_1CB77A1EC(a1, v2);
}

unint64_t sub_1CB779C48(uint64_t a1)
{
  uint64_t v2;

  sub_1CB8468A0();
  sub_1CB8472E4();
  sub_1CB846924();
  v2 = sub_1CB847314();
  swift_bridgeObjectRelease();
  return sub_1CB77A288(a1, v2);
}

unint64_t sub_1CB779CC8(int a1)
{
  uint64_t v2;

  sub_1CB8472E4();
  sub_1CB8472FC();
  v2 = sub_1CB847314();
  return sub_1CB77A3FC(a1, v2);
}

unint64_t sub_1CB779D2C(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1CB8472E4();
  sub_1CB8472F0();
  v2 = sub_1CB847314();
  return sub_1CB77A498(a1, v2);
}

unint64_t sub_1CB779D88(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_1CB8472E4();
  sub_1CB8472F0();
  v2 = sub_1CB847314();
  return sub_1CB77A538(v1, v2);
}

unint64_t sub_1CB779DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1CB8471A0() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1CB8471A0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1CB779EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1CB846084();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_1CB77EA90((unint64_t *)&qword_1ED88BBD0, MEMORY[0x1E0CB09D0]);
      v14 = sub_1CB846864();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_1CB779FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1CB77A1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1CB77A288(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1CB8468A0();
    v8 = v7;
    if (v6 == sub_1CB8468A0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1CB8468A0();
          v15 = v14;
          if (v13 == sub_1CB8468A0() && v15 == v16)
            break;
          v18 = sub_1CB8471A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1CB77A3FC(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1CB77A498(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1CB77A538(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1CB77A5F4(uint64_t a1, char a2)
{
  return sub_1CB77A99C(a1, a2, &qword_1ED88BFB0);
}

uint64_t sub_1CB77A600(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  int v43;

  v3 = v2;
  v5 = sub_1CB846084();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF80);
  v43 = a2;
  v10 = sub_1CB84705C();
  v11 = v9;
  v12 = v10;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = *(_QWORD *)(v11 + 64);
  v41 = (_QWORD *)(v11 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v39 = v3;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v17 = v10 + 64;
  result = swift_retain();
  v19 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = v41;
    v25 = v41[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_34;
      v25 = v41[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v41[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v19 >= v40)
              goto LABEL_34;
            v25 = v41[v19];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v19 = v26;
      }
    }
LABEL_21:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v11 + 48) + v27 * v22;
    if ((v43 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v28, v5);
      v29 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v28, v5);
      v29 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v22);
      swift_retain();
    }
    sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
    result = sub_1CB846810();
    v30 = -1 << *(_BYTE *)(v12 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v17 + 8 * v32);
      }
      while (v36 == -1);
      v20 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v37 = 1 << *(_BYTE *)(v11 + 32);
  if (v37 >= 64)
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v37;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1CB77A990(uint64_t a1, char a2)
{
  return sub_1CB77A99C(a1, a2, (uint64_t *)&unk_1ED88BFB8);
}

uint64_t sub_1CB77A99C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_1CB84705C();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v31 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v30 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v20 >= v30)
          goto LABEL_33;
        v21 = v31[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v30)
            goto LABEL_33;
          v21 = v31[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v6 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v9 >= v30)
                  goto LABEL_33;
                v21 = v31[v9];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v9 = v22;
          }
        }
LABEL_30:
        v12 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v27 = *(_DWORD *)(*(_QWORD *)(v6 + 48) + 4 * v19);
      v28 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v19);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1CB8472E4();
      sub_1CB8472FC();
      result = sub_1CB847314();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_DWORD *)(*(_QWORD *)(v8 + 48) + 4 * v17) = v27;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v17) = v28;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_1CB77AC68(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAE8);
  v36 = a2;
  v6 = sub_1CB84705C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1CB8472E4();
    sub_1CB846924();
    result = sub_1CB847314();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CB77AF7C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t i;
  uint64_t v47;
  int v48;
  uint64_t v49;

  v3 = v2;
  v5 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  v47 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CB846084();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF88);
  v48 = a2;
  v12 = v11;
  v13 = sub_1CB84705C();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_41;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v45 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v43 = v2;
  v44 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  result = swift_retain();
  v21 = 0;
  for (i = v12; ; v12 = i)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v21;
    if (!v27)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_34;
      v27 = v45[v21];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v21 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v21 >= v44)
              goto LABEL_34;
            v27 = v45[v21];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v21 = v28;
      }
    }
LABEL_21:
    v18 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v12 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v12 + 56);
      v32 = *(_QWORD *)(v47 + 72);
      sub_1CB780DC4(v31 + v32 * v24, v49);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v12 + 56);
      v32 = *(_QWORD *)(v47 + 72);
      sub_1CB780D80(v33 + v32 * v24, v49);
    }
    sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
    result = sub_1CB846810();
    v34 = -1 << *(_BYTE *)(v14 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v14 + 48) + v29 * v22, v10, v7);
    result = sub_1CB780DC4(v49, *(_QWORD *)(v14 + 56) + v32 * v22);
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v12 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v14;
  return result;
}

uint64_t sub_1CB77B368(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  int v43;

  v3 = v2;
  v5 = sub_1CB846084();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BFA0);
  v43 = a2;
  v10 = sub_1CB84705C();
  v11 = v9;
  v12 = v10;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = *(_QWORD *)(v11 + 64);
  v41 = (_QWORD *)(v11 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v39 = v3;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v17 = v10 + 64;
  result = swift_retain();
  v19 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = v41;
    v25 = v41[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_34;
      v25 = v41[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v41[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v19 >= v40)
              goto LABEL_34;
            v25 = v41[v19];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v19 = v26;
      }
    }
LABEL_21:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v11 + 48) + v27 * v22;
    if ((v43 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v28, v5);
      v29 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v28, v5);
      v29 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v22);
    }
    sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
    result = sub_1CB846810();
    v30 = -1 << *(_BYTE *)(v12 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v17 + 8 * v32);
      }
      while (v36 == -1);
      v20 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v37 = 1 << *(_BYTE *)(v11 + 32);
  if (v37 >= 64)
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v37;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1CB77B6F8(uint64_t a1, char a2)
{
  return sub_1CB77CE28(a1, a2, &qword_1EF99CAE0);
}

uint64_t sub_1CB77B704(uint64_t a1, int a2)
{
  return sub_1CB77B71C(a1, a2, &qword_1ED88BF90);
}

uint64_t sub_1CB77B710(uint64_t a1, int a2)
{
  return sub_1CB77B71C(a1, a2, &qword_1EF99CAB0);
}

uint64_t sub_1CB77B71C(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t i;
  int v45;

  v5 = v3;
  v7 = sub_1CB846084();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v45 = a2;
  v12 = sub_1CB84705C();
  v13 = v11;
  v14 = v12;
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_41;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = *(_QWORD *)(v13 + 64);
  v43 = (_QWORD *)(v13 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v41 = v5;
  v42 = (unint64_t)(v15 + 63) >> 6;
  v19 = v12 + 64;
  result = swift_retain();
  v21 = 0;
  for (i = v13; ; v13 = i)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v42)
      break;
    v26 = v43;
    v27 = v43[v25];
    ++v21;
    if (!v27)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v42)
        goto LABEL_34;
      v27 = v43[v21];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v42)
        {
LABEL_34:
          swift_release();
          v5 = v41;
          if ((v45 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v43[v28];
        if (!v27)
        {
          while (1)
          {
            v21 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v21 >= v42)
              goto LABEL_34;
            v27 = v43[v21];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v21 = v28;
      }
    }
LABEL_21:
    v18 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v13 + 48) + v29 * v24;
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v24);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v31 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v24);
      swift_bridgeObjectRetain();
    }
    sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
    result = sub_1CB846810();
    v32 = -1 << *(_BYTE *)(v14 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v19 + 8 * (v33 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v19 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v19 + 8 * v34);
      }
      while (v38 == -1);
      v22 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v14 + 48) + v29 * v22, v10, v7);
    *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v22) = v31;
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release();
  v5 = v41;
  v26 = v43;
  if ((v45 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v13 + 32);
  if (v39 >= 64)
    bzero(v26, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v39;
  *(_QWORD *)(v13 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v5 = v14;
  return result;
}

uint64_t sub_1CB77BAB0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BFA8);
  result = sub_1CB84705C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_retain();
      sub_1CB8472E4();
      sub_1CB8472FC();
      result = sub_1CB847314();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1CB77BD80(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t i;
  int v47;

  v3 = v2;
  v5 = sub_1CB846084();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAB8);
  v47 = a2;
  v10 = sub_1CB84705C();
  v11 = v10;
  if (*(_QWORD *)(v9 + 16))
  {
    v42 = v2;
    v12 = 1 << *(_BYTE *)(v9 + 32);
    v13 = *(_QWORD *)(v9 + 64);
    v44 = (_QWORD *)(v9 + 64);
    if (v12 < 64)
      v14 = ~(-1 << v12);
    else
      v14 = -1;
    v15 = v14 & v13;
    v43 = (unint64_t)(v12 + 63) >> 6;
    v16 = v10 + 64;
    result = swift_retain();
    v18 = 0;
    v45 = v6;
    for (i = v9; ; v9 = i)
    {
      if (v15)
      {
        v22 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v23 = v22 | (v18 << 6);
      }
      else
      {
        v24 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v43)
          goto LABEL_34;
        v25 = v44[v24];
        ++v18;
        if (!v25)
        {
          v18 = v24 + 1;
          if (v24 + 1 >= v43)
            goto LABEL_34;
          v25 = v44[v18];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v43)
            {
LABEL_34:
              swift_release();
              v3 = v42;
              if ((v47 & 1) != 0)
              {
                v41 = 1 << *(_BYTE *)(v9 + 32);
                if (v41 >= 64)
                  bzero(v44, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v44 = -1 << v41;
                *(_QWORD *)(v9 + 16) = 0;
              }
              break;
            }
            v25 = v44[v26];
            if (!v25)
            {
              while (1)
              {
                v18 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v18 >= v43)
                  goto LABEL_34;
                v25 = v44[v18];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v18 = v26;
          }
        }
LABEL_21:
        v15 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v18 << 6);
      }
      v27 = v6;
      v28 = *(_QWORD *)(v6 + 72);
      v29 = *(_QWORD *)(v9 + 48) + v28 * v23;
      if ((v47 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v27 + 32))(v8, v29, v5);
        v30 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 16 * v23);
        v31 = *v30;
        v32 = v30[1];
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v8, v29, v5);
        v33 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 16 * v23);
        v31 = *v33;
        v32 = v33[1];
        swift_retain();
        swift_retain();
      }
      sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
      result = sub_1CB846810();
      v34 = -1 << *(_BYTE *)(v11 + 32);
      v35 = result & ~v34;
      v36 = v35 >> 6;
      if (((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v37 = 0;
        v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v39 = v36 == v38;
          if (v36 == v38)
            v36 = 0;
          v37 |= v39;
          v40 = *(_QWORD *)(v16 + 8 * v36);
        }
        while (v40 == -1);
        v19 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = *(_QWORD *)(v11 + 48) + v28 * v19;
      v6 = v45;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 32))(v20, v8, v5);
      v21 = (_QWORD *)(*(_QWORD *)(v11 + 56) + 16 * v19);
      *v21 = v31;
      v21[1] = v32;
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1CB77C114(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v5 = sub_1CB846084();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAD8);
  v10 = sub_1CB84705C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v43 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v41 = v2;
  v42 = (unint64_t)(v12 + 63) >> 6;
  v16 = a2;
  v17 = v10 + 64;
  v45 = v9;
  result = swift_retain();
  v19 = 0;
  HIDWORD(v40) = v16;
  v20 = 16;
  if ((v16 & 1) != 0)
    v20 = 32;
  v44 = v20;
  while (1)
  {
    if (v15)
    {
      v22 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v23 = v22 | (v19 << 6);
      goto LABEL_24;
    }
    v24 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v42)
      break;
    v25 = v43;
    v26 = v43[v24];
    ++v19;
    if (!v26)
    {
      v19 = v24 + 1;
      if (v24 + 1 >= v42)
        goto LABEL_34;
      v26 = v43[v19];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v42)
        {
LABEL_34:
          v38 = v45;
          swift_release();
          v3 = v41;
          if ((v40 & 0x100000000) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v43[v27];
        if (!v26)
        {
          while (1)
          {
            v19 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v19 >= v42)
              goto LABEL_34;
            v26 = v43[v19];
            ++v27;
            if (v26)
              goto LABEL_23;
          }
        }
        v19 = v27;
      }
    }
LABEL_23:
    v15 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v19 << 6);
LABEL_24:
    v28 = v45;
    v29 = *(_QWORD *)(v6 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + v44))(v8, *(_QWORD *)(v45 + 48) + v29 * v23, v5);
    v30 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v23);
    sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
    result = sub_1CB846810();
    v31 = -1 << *(_BYTE *)(v11 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v17 + 8 * (v32 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v17 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v17 + 8 * v33);
      }
      while (v37 == -1);
      v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v17 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v29 * v21, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v21) = v30;
    ++*(_QWORD *)(v11 + 16);
  }
  v38 = v45;
  swift_release();
  v3 = v41;
  v25 = v43;
  if ((v40 & 0x100000000) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v38 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v38 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1CB77C4A4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A860);
  result = sub_1CB84705C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1CB8472E4();
      sub_1CB8472F0();
      result = sub_1CB847314();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1CB77C770(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v3 = v2;
  v5 = sub_1CB846084();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF98);
  v10 = sub_1CB84705C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_40;
  v39 = v2;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v41 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  v38 = a2;
  v19 = 16;
  if ((a2 & 1) != 0)
    v19 = 32;
  v42 = v19;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_24;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = v41;
    v25 = v41[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = v41[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = v41[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v18 >= v40)
              goto LABEL_33;
            v25 = v41[v18];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v18 = v26;
      }
    }
LABEL_23:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v6 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + v42))(v8, *(_QWORD *)(v9 + 48) + v27 * v22, v5);
    v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v22);
    sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
    result = sub_1CB846810();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v20 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v27 * v20, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v20) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = v41;
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1CB77CAF0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  char v37;
  __int128 v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAD0);
  v37 = a2;
  v6 = sub_1CB84705C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35)
          goto LABEL_33;
        v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_33;
          v23 = v36[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v37 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v35)
                  goto LABEL_33;
                v23 = v36[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 24 * v21;
      v38 = *(_OWORD *)v32;
      v33 = *(_QWORD *)(v32 + 16);
      if ((v37 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1CB8472E4();
      sub_1CB846924();
      result = sub_1CB847314();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
      *(_OWORD *)v19 = v38;
      *(_QWORD *)(v19 + 16) = v33;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CB77CE1C(uint64_t a1, char a2)
{
  return sub_1CB77CE28(a1, a2, &qword_1EF99CAC8);
}

uint64_t sub_1CB77CE28(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_1CB84705C();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v33 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v34 = 1 << *(_BYTE *)(v6 + 32);
    v35 = v4;
    v36 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v36)
          goto LABEL_33;
        v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v36)
            goto LABEL_33;
          v23 = v10[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v35;
                goto LABEL_40;
              }
              if (v34 >= 64)
                bzero((void *)(v6 + 64), 8 * v36);
              else
                *v10 = v33;
              v4 = v35;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v9 >= v36)
                  goto LABEL_33;
                v23 = v10[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v13 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = 8 * v21;
      v30 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v29);
      v31 = *(void **)(*(_QWORD *)(v6 + 56) + v29);
      if ((a2 & 1) == 0)
        v32 = v31;
      result = sub_1CB8472D8();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v31;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_1CB77D0D4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  unsigned __int8 *v29;
  int v30;
  unsigned __int8 v31;
  uint64_t v32;
  unsigned __int8 *v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  int v51;
  int v52;
  char *v53;
  uint64_t v54;

  v3 = v2;
  v5 = sub_1CB846084();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAA8);
  v49 = a2;
  v10 = sub_1CB84705C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v53 = v8;
  v54 = v5;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v46 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v44 = v2;
  v45 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  v47 = v9;
  v48 = v6;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v45)
      break;
    v24 = v46;
    v25 = v46[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v45)
        goto LABEL_34;
      v25 = v46[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v45)
        {
LABEL_34:
          swift_release();
          v3 = v44;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v46[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v18 >= v45)
              goto LABEL_34;
            v25 = v46[v18];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v18 = v26;
      }
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v9 + 48) + v27 * v22;
    if ((v49 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v53, v28, v54);
      v29 = (unsigned __int8 *)(*(_QWORD *)(v9 + 56) + 16 * v22);
      v30 = *v29;
      v51 = v29[1];
      v52 = v30;
      v50 = v29[2];
      v31 = v29[3];
      v32 = *((_QWORD *)v29 + 1);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v53, v28, v54);
      v33 = (unsigned __int8 *)(*(_QWORD *)(v9 + 56) + 16 * v22);
      v34 = *v33;
      v51 = v33[1];
      v52 = v34;
      v50 = v33[2];
      v31 = v33[3];
      v32 = *((_QWORD *)v33 + 1);
      swift_unknownObjectRetain();
    }
    sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
    result = sub_1CB846810();
    v35 = -1 << *(_BYTE *)(v11 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v16 + 8 * (v36 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v16 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      v6 = v48;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      v6 = v48;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v16 + 8 * v37);
      }
      while (v41 == -1);
      v19 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v27 * v19, v53, v54);
    v20 = *(_QWORD *)(v11 + 56) + 16 * v19;
    *(_BYTE *)v20 = v52;
    *(_BYTE *)(v20 + 1) = v51;
    *(_BYTE *)(v20 + 2) = v50;
    *(_BYTE *)(v20 + 3) = v31;
    *(_QWORD *)(v20 + 8) = v32;
    ++*(_QWORD *)(v11 + 16);
    v9 = v47;
  }
  swift_release();
  v3 = v44;
  v24 = v46;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v42 = 1 << *(_BYTE *)(v9 + 32);
  if (v42 >= 64)
    bzero(v24, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v42;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1CB77D4C8(uint64_t a1, int a2)
{
  return sub_1CB77B71C(a1, a2, &qword_1EF99CA98);
}

uint64_t sub_1CB77D4D4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, _BYTE *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(_BYTE *, unint64_t, uint64_t);
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[4];
  int v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_1CB846084();
  v52 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v51 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v9 = &v44[-v8];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAA0);
  v11 = sub_1CB84705C();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v48 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v46 = v2;
  v47 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v50 = v10;
  result = swift_retain();
  v19 = 0;
  v45 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v49 = v20;
  v21 = v50;
  while (1)
  {
    if (v16)
    {
      v26 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v27 = v26 | (v19 << 6);
      goto LABEL_24;
    }
    v28 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v47)
      break;
    v29 = v48;
    v30 = v48[v28];
    ++v19;
    if (!v30)
    {
      v19 = v28 + 1;
      if (v28 + 1 >= v47)
        goto LABEL_34;
      v30 = v48[v19];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v47)
        {
LABEL_34:
          v42 = v50;
          swift_release();
          v3 = v46;
          if ((v45 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v30 = v48[v31];
        if (!v30)
        {
          while (1)
          {
            v19 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_43;
            if (v19 >= v47)
              goto LABEL_34;
            v30 = v48[v19];
            ++v31;
            if (v30)
              goto LABEL_23;
          }
        }
        v19 = v31;
      }
    }
LABEL_23:
    v16 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v19 << 6);
LABEL_24:
    v32 = *(_QWORD *)(v52 + 72);
    v33 = v32 * v27;
    v34 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v52 + v49);
    v34(v9, *(_QWORD *)(v21 + 48) + v32 * v27, v5);
    v34(v51, *(_QWORD *)(v21 + 56) + v33, v5);
    sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
    result = sub_1CB846810();
    v35 = -1 << *(_BYTE *)(v12 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v17 + 8 * (v36 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v17 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v17 + 8 * v37);
      }
      while (v41 == -1);
      v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v23 = v32 * v22;
    v24 = *(_QWORD *)(v12 + 48) + v32 * v22;
    v25 = *(void (**)(unint64_t, _BYTE *, uint64_t))(v52 + 32);
    v25(v24, v9, v5);
    result = ((uint64_t (*)(unint64_t, _BYTE *, uint64_t))v25)(*(_QWORD *)(v12 + 56) + v23, v51, v5);
    ++*(_QWORD *)(v12 + 16);
  }
  v42 = v50;
  swift_release();
  v3 = v46;
  v29 = v48;
  if ((v45 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v43 = 1 << *(_BYTE *)(v42 + 32);
  if (v43 >= 64)
    bzero(v29, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v43;
  *(_QWORD *)(v42 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1CB77D8A8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CA90);
  result = sub_1CB84705C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = a2;
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_31;
        v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_31;
          v18 = v31[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v12)
                  goto LABEL_31;
                v18 = v31[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
      sub_1CB8472E4();
      sub_1CB8472F0();
      result = sub_1CB847314();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v14) = v20;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1CB77DB6C(uint64_t a1, char a2)
{
  return sub_1CB77DB84(a1, a2, (uint64_t *)&unk_1ED88E070);
}

uint64_t sub_1CB77DB78(uint64_t a1, char a2)
{
  return sub_1CB77DB84(a1, a2, &qword_1ED88A7C8);
}

uint64_t sub_1CB77DB84(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_1CB84705C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_1CB8472E4();
    sub_1CB846924();
    result = sub_1CB847314();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1CB77DE8C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7D0);
  v37 = a2;
  v6 = sub_1CB84705C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1CB8472E4();
    sub_1CB846924();
    result = sub_1CB847314();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CB77E194(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAC0);
  v42 = a2;
  v6 = sub_1CB84705C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1CB8472E4();
    sub_1CB846924();
    result = sub_1CB847314();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_1CB77E4B8()
{
  return sub_1CB77E700(&qword_1ED88BFB0);
}

void *sub_1CB77E4C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1CB846084();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF80);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1CB847050();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CB77E6F4()
{
  return sub_1CB77E700((uint64_t *)&unk_1ED88BFB8);
}

void *sub_1CB77E700(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1CB847050();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 4 * v16;
    v18 = *(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v16);
    v19 = 8 * v16;
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v19);
    *(_DWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CB77E89C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAE8);
  v2 = *v0;
  v3 = sub_1CB847050();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FeatureProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for FeatureProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeatureProvider.__allocating_init(features:targetName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeatureProvider.featureValue(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_1CB77EA90(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1CB846084();
    result = MEMORY[0x1D179FD88](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1CB77EAD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  v27 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1CB846084();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF88);
  v24 = v0;
  v8 = *v0;
  v9 = sub_1CB847050();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v24 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v25 = v8 + 64;
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v26 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v26)
        goto LABEL_23;
      v22 = *(_QWORD *)(v25 + 8 * v13);
      if (!v22)
        break;
    }
LABEL_22:
    v16 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    v19 = *(_QWORD *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v19, v4);
    v20 = *(_QWORD *)(v27 + 72) * v18;
    sub_1CB780D80(*(_QWORD *)(v8 + 56) + v20, (uint64_t)v3);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v19, v7, v4);
    result = (void *)sub_1CB780DC4((uint64_t)v3, *(_QWORD *)(v10 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v26)
    goto LABEL_23;
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1CB77ED4C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1CB846084();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BFA0);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1CB847050();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v24 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CB77EF74()
{
  return sub_1CB77FB94(&qword_1EF99CAE0);
}

void *sub_1CB77EF80()
{
  return sub_1CB77FFEC(&qword_1ED88BF90);
}

void *sub_1CB77EF8C()
{
  return sub_1CB77FFEC(&qword_1EF99CAB0);
}

void *sub_1CB77EF98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BFA8);
  v2 = *v0;
  v3 = sub_1CB847050();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 8 * v15;
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CB77F13C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = sub_1CB846084();
  v1 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v36 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAB8);
  v33 = v0;
  v3 = *v0;
  v4 = sub_1CB847050();
  v5 = *(_QWORD *)(v3 + 16);
  v39 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v31 = v39;
    v30 = v33;
LABEL_28:
    *v30 = v31;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    v6 = v39;
  }
  v34 = v3 + 64;
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v38 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v15 = v36;
  v14 = v37;
  v16 = v39;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v10 << 6);
      v19 = v38;
      goto LABEL_12;
    }
    v27 = v10 + 1;
    v19 = v38;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v35)
      goto LABEL_26;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    ++v10;
    if (!v28)
    {
      v10 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_26;
      v28 = *(_QWORD *)(v34 + 8 * v10);
      if (!v28)
        break;
    }
LABEL_25:
    v13 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = *(_QWORD *)(v19 + 56);
    v22 = 16 * v18;
    v23 = (uint64_t *)(v21 + 16 * v18);
    v24 = *v23;
    v25 = v23[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v26 = (_QWORD *)(*(_QWORD *)(v16 + 56) + v22);
    *v26 = v24;
    v26[1] = v25;
    swift_retain();
    result = (void *)swift_retain();
  }
  v29 = v27 + 2;
  if (v29 >= v35)
  {
LABEL_26:
    result = (void *)swift_release();
    v30 = v33;
    v31 = v39;
    goto LABEL_28;
  }
  v28 = *(_QWORD *)(v34 + 8 * v29);
  if (v28)
  {
    v10 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v10 >= v35)
      goto LABEL_26;
    v28 = *(_QWORD *)(v34 + 8 * v10);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CB77F3B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1CB846084();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAD8);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1CB847050();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CB77F5D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A860);
  v2 = *v0;
  v3 = sub_1CB847050();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CB77F778()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = sub_1CB846084();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF98);
  v6 = *v0;
  v7 = sub_1CB847050();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v26 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v20);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CB77F9AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __int128 v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAD0);
  v2 = *v0;
  v3 = sub_1CB847050();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)(v21 + 16);
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v24 = *(_OWORD *)v21;
    *v23 = v18;
    v23[1] = v19;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)v25 = v24;
    *(_QWORD *)(v25 + 16) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CB77FB88()
{
  return sub_1CB77FB94(&qword_1EF99CAC8);
}

id sub_1CB77FB94(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1CB847050();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CB77FD2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  const void *v36;
  int64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  int v45;

  v1 = sub_1CB846084();
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  MEMORY[0x1E0C80A78](v1);
  v38 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAA8);
  v35 = v0;
  v3 = *v0;
  v4 = sub_1CB847050();
  v5 = *(_QWORD *)(v3 + 16);
  v42 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v33 = v42;
    v32 = v35;
LABEL_28:
    *v32 = v33;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v36 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, v36, 8 * v8);
    v6 = v42;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v41 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v37 = (unint64_t)(v11 + 63) >> 6;
  v15 = v38;
  v14 = v39;
  v16 = v40;
  v17 = v42;
  while (1)
  {
    if (v13)
    {
      v43 = (v13 - 1) & v13;
      v44 = v10;
      v18 = __clz(__rbit64(v13)) | (v10 << 6);
      v19 = v41;
      goto LABEL_12;
    }
    v28 = v10 + 1;
    v19 = v41;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v37)
      goto LABEL_26;
    v29 = *((_QWORD *)v36 + v28);
    v30 = v10 + 1;
    if (!v29)
    {
      v30 = v10 + 2;
      if (v10 + 2 >= v37)
        goto LABEL_26;
      v29 = *((_QWORD *)v36 + v30);
      if (!v29)
        break;
    }
LABEL_25:
    v43 = (v29 - 1) & v29;
    v44 = v30;
    v18 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v14 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v16);
    v21 = 16 * v18;
    v22 = *(_QWORD *)(v19 + 56) + 16 * v18;
    v23 = *(_BYTE *)v22;
    v45 = *(unsigned __int8 *)(v22 + 1);
    v24 = *(_BYTE *)(v22 + 2);
    v25 = *(_BYTE *)(v22 + 3);
    v26 = *(_QWORD *)(v22 + 8);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v17 + 48) + v20, v15, v16);
    v27 = *(_QWORD *)(v17 + 56) + v21;
    *(_BYTE *)v27 = v23;
    *(_BYTE *)(v27 + 1) = v45;
    *(_BYTE *)(v27 + 2) = v24;
    *(_BYTE *)(v27 + 3) = v25;
    *(_QWORD *)(v27 + 8) = v26;
    result = (void *)swift_unknownObjectRetain();
    v13 = v43;
    v10 = v44;
  }
  v31 = v10 + 3;
  if (v10 + 3 >= v37)
  {
LABEL_26:
    result = (void *)swift_release();
    v32 = v35;
    v33 = v42;
    goto LABEL_28;
  }
  v29 = *((_QWORD *)v36 + v31);
  if (v29)
  {
    v30 = v10 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v37)
      goto LABEL_26;
    v29 = *((_QWORD *)v36 + v30);
    ++v31;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CB77FFE0()
{
  return sub_1CB77FFEC(&qword_1EF99CA98);
}

void *sub_1CB77FFEC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v3 = sub_1CB846084();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v26 = v1;
  v7 = *v1;
  v8 = sub_1CB847050();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v26 = v9;
    return result;
  }
  result = (void *)(v8 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  v27 = v7 + 64;
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 64);
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_26;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_25:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 48) + v19, v3);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v9 + 48) + v19, v6, v3);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_26;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CB78021C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  void (*v21)(unint64_t, char *, uint64_t);
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v1 = sub_1CB846084();
  v2 = *(_QWORD **)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v25 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAA0);
  v26 = v0;
  v8 = *v0;
  v9 = sub_1CB847050();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v26 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v27 = v8 + 64;
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v28)
      goto LABEL_23;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_23;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_22:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_9:
    v19 = v2[9] * v18;
    v20 = (void (*)(char *, unint64_t, uint64_t))v2[2];
    v20(v7, *(_QWORD *)(v8 + 48) + v19, v1);
    v20(v5, *(_QWORD *)(v8 + 56) + v19, v1);
    v21 = (void (*)(unint64_t, char *, uint64_t))v2[4];
    v21(*(_QWORD *)(v10 + 48) + v19, v7, v1);
    result = (void *)((uint64_t (*)(unint64_t, char *, uint64_t))v21)(*(_QWORD *)(v10 + 56) + v19, v5, v1);
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_23;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_23;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1CB780478()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CA90);
  v2 = *v0;
  v3 = sub_1CB847050();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CB780604()
{
  return sub_1CB78061C((uint64_t *)&unk_1ED88E070);
}

id sub_1CB780610()
{
  return sub_1CB78061C(&qword_1ED88A7C8);
}

id sub_1CB78061C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1CB847050();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CB7807C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7D0);
  v2 = *v0;
  v3 = sub_1CB847050();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CB780970()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAC0);
  v2 = *v0;
  v3 = sub_1CB847050();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1CB780B28(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1CB846BE8();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1CB829A3C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1CB780BBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v2 = sub_1CB846084();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
  v18 = sub_1CB846BE8();
  if (v12)
  {
    v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v17 = *(_QWORD *)(v3 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v14(v11, v13, v2);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v15(v11, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
      sub_1CB829BE8((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v13 += v17;
      if (!--v12)
        goto LABEL_7;
    }
  }
  else
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v15(v11, 1, 1, v2);
  }
  return v18;
}

uint64_t sub_1CB780D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB780DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *MaximumRecordCountPolicy.__allocating_init(maximumRecordCount:evictor:evictionPolicy:countKeyPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v8;
  _QWORD *v9;

  v8 = (char *)swift_allocObject();
  v9 = *(_QWORD **)v8;
  *((_QWORD *)v8 + 2) = a1;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9[12] - 8) + 32))(&v8[v9[17]], a2);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9[13] - 8) + 32))(&v8[*(_QWORD *)(*(_QWORD *)v8 + 144)], a3);
  *(_QWORD *)&v8[*(_QWORD *)(*(_QWORD *)v8 + 152)] = a4;
  return v8;
}

char *MaximumRecordCountPolicy.init(maximumRecordCount:evictor:evictionPolicy:countKeyPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  _QWORD *v7;

  v7 = *(_QWORD **)v4;
  *((_QWORD *)v4 + 2) = a1;
  (*(void (**)(char *))(*(_QWORD *)(v7[12] - 8) + 32))(&v4[v7[17]]);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7[13] - 8) + 32))(&v4[*(_QWORD *)(*(_QWORD *)v4 + 144)], a3);
  *(_QWORD *)&v4[*(_QWORD *)(*(_QWORD *)v4 + 152)] = a4;
  return v4;
}

void sub_1CB780F20(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  void *ObjCClassFromMetadata;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  char v42;
  id v43;
  _QWORD *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  _QWORD v57[2];
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  uint64_t (*v63)(void);
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  id v72[4];

  v2 = v1;
  v72[3] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (_QWORD *)*v1;
  if (qword_1ED88E518 != -1)
    swift_once();
  v5 = sub_1CB8466D8();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED890248);
  swift_retain_n();
  v67 = v6;
  v7 = sub_1CB8466C0();
  v8 = sub_1CB846C84();
  v68 = v4;
  if (os_log_type_enabled(v7, v8))
  {
    v69 = a1;
    v9 = v2;
    v10 = swift_slowAlloc();
    v11 = (void *)swift_slowAlloc();
    v72[0] = v11;
    *(_DWORD *)v10 = 136315394;
    v65 = v4[10];
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v13 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
    v14 = objc_msgSend(v13, sel_name);

    if (v14)
    {
      v15 = sub_1CB8468A0();
      v17 = v16;

    }
    else
    {
      v17 = 0xE300000000000000;
      v15 = 7104878;
    }
    v71 = sub_1CB775A54(v15, v17, (uint64_t *)v72);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2048;
    v19 = v9;
    v20 = v9[2];
    swift_release();
    v71 = v20;
    v2 = v19;
    sub_1CB846E58();
    swift_release();
    _os_log_impl(&dword_1CB771000, v7, v8, "Checking record count for entity type (%s) does not exceed %ld", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v11, -1, -1);
    MEMORY[0x1D179FE84](v10, -1, -1);

    a1 = v69;
    v18 = v65;
  }
  else
  {

    swift_release_n();
    v18 = v4[10];
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  }
  v21 = objc_msgSend(ObjCClassFromMetadata, sel_fetchRequest);
  v72[0] = 0;
  v22 = (char *)objc_msgSend(a1, sel_countForFetchRequest_error_, v21, v72);

  if (v72[0])
  {
    v72[0];
    swift_willThrow();
    return;
  }
  v69 = a1;
  swift_retain_n();
  v23 = sub_1CB8466C0();
  v24 = sub_1CB846C84();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    *(_DWORD *)v25 = 134218240;
    v72[0] = v22;
    sub_1CB846E58();
    *(_WORD *)(v25 + 12) = 2048;
    v26 = (void *)v2[2];
    swift_release();
    v72[0] = v26;
    sub_1CB846E58();
    swift_release();
    _os_log_impl(&dword_1CB771000, v23, v24, "Record Count: %ld/%ld", (uint8_t *)v25, 0x16u);
    MEMORY[0x1D179FE84](v25, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v27 = v68;
  v28 = v69;
  v29 = v2[2];
  if (v29 >= (uint64_t)v22)
  {
    v51 = sub_1CB8466C0();
    v52 = sub_1CB846C84();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_1CB771000, v51, v52, "Total records less than maximum. Skipping Policy.", v53, 2u);
      MEMORY[0x1D179FE84](v53, -1, -1);
    }

  }
  else
  {
    v30 = &v22[-v29];
    if (__OFSUB__(v22, v29))
      goto LABEL_40;
    v31 = sub_1CB8466C0();
    v32 = sub_1CB846C84();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v33 = 134217984;
      v72[0] = v30;
      sub_1CB846E58();
      _os_log_impl(&dword_1CB771000, v31, v32, "Evicting %ld records from the store.", v33, 0xCu);
      v34 = v33;
      v27 = v68;
      MEMORY[0x1D179FE84](v34, -1, -1);
    }

    v35 = v27[13];
    v36 = (*(uint64_t (**)(char *, void *, uint64_t, _QWORD))(v27[15] + 16))(v30, v28, v35, v27[15]);
    if (!v66)
    {
      v37 = v36;
      v71 = 0;
      if (MEMORY[0x1D179EEB8](v36, v18))
      {
        v57[1] = v35;
        v58 = v30;
        v38 = v27[14];
        v64 = 0;
        v65 = v38;
        v39 = *(uint64_t (**)(void))(v38 + 24);
        v40 = *v2;
        v62 = (char *)v2 + *(_QWORD *)(*v2 + 136);
        v63 = v39;
        v59 = *(_QWORD *)(v40 + 152);
        v60 = v2;
        v41 = 4;
        v61 = v37;
        while (1)
        {
          v42 = sub_1CB846AC8();
          sub_1CB846A8C();
          v43 = (v42 & 1) != 0 ? *(id *)(v37 + 8 * v41) : (id)sub_1CB846F54();
          v44 = v68;
          if (__OFADD__(v41 - 4, 1))
            break;
          v66 = v41 - 3;
          v45 = v43;
          v46 = (void *)v63();
          if (*(_QWORD *)((char *)v60 + v59))
          {
            v64 = v57;
            v72[0] = v46;
            MEMORY[0x1E0C80A78](v46);
            v47 = sub_1CB846B04();
            swift_retain();
            MEMORY[0x1D179FD88](MEMORY[0x1E0DEAF38], v47);
            sub_1CB8469FC();
            swift_bridgeObjectRelease();
            swift_release();

            v48 = (_QWORD *)v71;
          }
          else
          {
            v49 = MEMORY[0x1D179EEA0](v46, v44[11]);
            swift_bridgeObjectRelease();

            v48 = (_QWORD *)((char *)v64 + v49);
            if (__OFADD__(v64, v49))
              goto LABEL_41;
            v71 = (uint64_t)v64 + v49;
          }
          v37 = v61;
          if ((uint64_t)v48 < (uint64_t)v58)
          {
            v64 = v48;
            v50 = MEMORY[0x1D179EEB8](v61, v18);
            ++v41;
            if (v66 != v50)
              continue;
          }
          goto LABEL_35;
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
      }
LABEL_35:
      swift_bridgeObjectRelease();
      v54 = sub_1CB8466C0();
      v55 = sub_1CB846C84();
      if (os_log_type_enabled(v54, v55))
      {
        v56 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v56 = 134217984;
        swift_beginAccess();
        v70 = v71;
        sub_1CB846E58();
        _os_log_impl(&dword_1CB771000, v54, v55, "Evicted a total of %ld records. Policy finished.", v56, 0xCu);
        MEMORY[0x1D179FE84](v56, -1, -1);
      }

    }
  }
}

void sub_1CB781764(id *a1, uint64_t a2, _QWORD *a3)
{
  id v4;
  uint64_t v5;
  char v6;

  v4 = *a1;
  swift_getAtKeyPath();

  if (v6 != 1)
  {
    if (__OFADD__(*a3, v5))
      __break(1u);
    else
      *a3 += v5;
  }
}

uint64_t *MaximumRecordCountPolicy.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*v0 + 96) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 136));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 104) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 144));
  swift_release();
  return v0;
}

uint64_t MaximumRecordCountPolicy.__deallocating_deinit()
{
  MaximumRecordCountPolicy.deinit();
  return swift_deallocClassInstance();
}

void sub_1CB78186C(void **a1)
{
  sub_1CB780F20(*a1);
}

void *sub_1CB781890(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_1CB847074();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_1CB781924@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

void sub_1CB78194C(id *a1)
{
  uint64_t v1;

  sub_1CB781764(a1, *(_QWORD *)(v1 + 56), *(_QWORD **)(v1 + 64));
}

uint64_t sub_1CB781974()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

void type metadata accessor for MaximumRecordCountPolicy()
{
  JUMPOUT(0x1D179FD04);
}

uint64_t method lookup function for MaximumRecordCountPolicy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MaximumRecordCountPolicy.__allocating_init(maximumRecordCount:evictor:evictionPolicy:countKeyPath:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of MaximumRecordCountPolicy.runPolicy(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_1CB781A58@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(char *, uint64_t);
  id v32;
  uint64_t v33;
  _QWORD *v34;
  void *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  __int128 v44;
  __int128 v45;

  v36 = (void *)a1;
  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8895B8);
  v39 = *(_QWORD *)(v6 - 8);
  v40 = *(_QWORD *)(v39 + 64);
  v41 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v38 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v43 = (char *)&v36 - v9;
  v10 = sub_1CB846018();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v36 - v15;
  sub_1CB84600C();
  v17 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v37 = v16;
  v17(v5, v16, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  sub_1CB781F24(a1, (uint64_t)v5, &v45);
  sub_1CB785B54((uint64_t)v5, &qword_1ED88D550);
  v44 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8892C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889568);
  sub_1CB785DB0(&qword_1ED8892B8, &qword_1ED8892C0, (uint64_t)&protocol conformance descriptor for AnyAsyncSequence<A>);
  v18 = v43;
  sub_1CB847020();
  v17(v14, v16, v10);
  v19 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v20 = swift_allocObject();
  v21 = v36;
  *(_QWORD *)(v20 + 16) = v36;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v20 + v19, v14, v10);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1CB785C08;
  *(_QWORD *)(v22 + 24) = v20;
  v24 = v38;
  v23 = v39;
  v25 = v41;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v38, v18, v41);
  v26 = v23;
  v27 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v28 = (v40 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v29 + v27, v24, v25);
  v30 = (_QWORD *)(v29 + v28);
  *v30 = sub_1CB785C58;
  v30[1] = v22;
  v31 = *(void (**)(char *, uint64_t))(v26 + 8);
  v32 = v21;
  v31(v43, v25);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = sub_1CB785CE0;
  *(_QWORD *)(v33 + 24) = v29;
  v34 = v42;
  *v42 = sub_1CB785D54;
  v34[1] = v33;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v37, v10);
}

uint64_t sub_1CB781D98(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1CB781DB4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)v0[2];
  *v1 = v0[3];
  v1[1] = 0;
  v3 = (uint64_t (*)(void))v0[1];
  swift_retain();
  return v3();
}

uint64_t sub_1CB781DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  char *v15;
  char *v16;
  char *v17;
  objc_super v19;

  v6 = sub_1CB846018();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name);
  v10 = *(_QWORD *)(a3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a4, v6);
  swift_bridgeObjectRetain();
  sub_1CB845FB8();
  v13 = v12;
  v14 = (objc_class *)type metadata accessor for StreamBookmark();
  v15 = (char *)objc_allocWithZone(v14);
  v16 = &v15[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  *(_QWORD *)v16 = v11;
  *((_QWORD *)v16 + 1) = v10;
  *(_QWORD *)&v15[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = 0;
  v17 = &v15[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
  *(_QWORD *)v17 = v13;
  v17[8] = 0;
  v19.receiver = v15;
  v19.super_class = v14;
  objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_retain();
}

uint64_t sub_1CB781F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  id v20;
  uint64_t result;
  uint64_t (*v22)@<X0>(_QWORD *@<X8>);
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark);
    v10 = *(unsigned __int8 *)(a1
                             + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate
                             + 8);
    swift_unknownObjectRetain();
  }
  else
  {
    v9 = 0;
    v10 = 1;
  }
  sub_1CB785AC8(a2, (uint64_t)v8, &qword_1ED88D550);
  v11 = sub_1CB846018();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11);
  if (v13 == 1)
  {
    sub_1CB785B54((uint64_t)v8, &qword_1ED88D550);
    v14 = 0;
    if (!v10)
      goto LABEL_10;
  }
  else
  {
    sub_1CB845FB8();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
    v14 = v16;
    if (!v10)
      goto LABEL_10;
  }
  if (v9)
  {
    v17 = swift_unknownObjectRetain();
    sub_1CB782F00(v17);
    v19 = v18;
    swift_unknownObjectRelease();
    if ((v19 & 1) != 0)
    {
      swift_unknownObjectRelease();
      result = swift_allocObject();
      *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9D8];
      v22 = sub_1CB785914;
      goto LABEL_11;
    }
  }
LABEL_10:
  v20 = sub_1CB782D40(v14, v13 == 1);
  swift_unknownObjectRelease();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v20;
  v22 = sub_1CB78590C;
LABEL_11:
  *a3 = v22;
  a3[1] = result;
  return result;
}

uint64_t sub_1CB78211C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t (**v30)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  void (*v31)(char *, uint64_t);
  id v32;
  uint64_t v33;
  _QWORD *v34;
  void *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  __int128 v44;
  __int128 v45;

  v36 = (void *)a1;
  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7B0);
  v39 = *(_QWORD *)(v6 - 8);
  v40 = *(_QWORD *)(v39 + 64);
  v41 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v38 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v43 = (char *)&v36 - v9;
  v10 = sub_1CB846018();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v36 - v15;
  sub_1CB84600C();
  v17 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v37 = v16;
  v17(v5, v16, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  sub_1CB7825C0(a1, (uint64_t)v5, &v45);
  sub_1CB785B54((uint64_t)v5, &qword_1ED88D550);
  v44 = v45;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88A398);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A298);
  sub_1CB785DB0(&qword_1ED88A390, (uint64_t *)&unk_1ED88A398, (uint64_t)&protocol conformance descriptor for AnyAsyncSequence<A>);
  v18 = v43;
  sub_1CB847020();
  v17(v14, v16, v10);
  v19 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v20 = swift_allocObject();
  v21 = v36;
  *(_QWORD *)(v20 + 16) = v36;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v20 + v19, v14, v10);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1CB785860;
  *(_QWORD *)(v22 + 24) = v20;
  v24 = v38;
  v23 = v39;
  v25 = v41;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v38, v18, v41);
  v26 = v23;
  v27 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v28 = (v40 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v29 + v27, v24, v25);
  v30 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v29 + v28);
  *v30 = sub_1CB7858B8;
  v30[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v22;
  v31 = *(void (**)(char *, uint64_t))(v26 + 8);
  v32 = v21;
  v31(v43, v25);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = sub_1CB7858CC;
  *(_QWORD *)(v33 + 24) = v29;
  v34 = v42;
  *v42 = sub_1CB7858E0;
  v34[1] = v33;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v37, v10);
}

uint64_t sub_1CB78245C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

id sub_1CB782478(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  char *v19;
  char *v20;
  char *v21;
  id v22;
  objc_super v24;

  v9 = sub_1CB846018();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2;
  v15 = *(_QWORD *)(a4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name);
  v14 = *(_QWORD *)(a4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a5, v9);
  swift_bridgeObjectRetain();
  sub_1CB845FB8();
  v17 = v16;
  v18 = (objc_class *)type metadata accessor for StreamBookmark();
  v19 = (char *)objc_allocWithZone(v18);
  v20 = &v19[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  *(_QWORD *)v20 = v15;
  *((_QWORD *)v20 + 1) = v14;
  *(_QWORD *)&v19[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = 0;
  v21 = &v19[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
  *(_QWORD *)v21 = v17;
  v21[8] = 0;
  v24.receiver = v19;
  v24.super_class = v18;
  v22 = objc_msgSendSuper2(&v24, sel_init);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *a1 = v13;
  swift_retain();
  return v22;
}

uint64_t sub_1CB7825C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  id v25;
  objc_class *v26;
  char *v27;
  id v28;
  id v29;
  char *v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  objc_super v47;

  v42 = a3;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7C0);
  v5 = *(_QWORD *)(v41 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v41);
  v40 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v37 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark);
    v38 = *(_QWORD *)(a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate);
    v13 = *(unsigned __int8 *)(a1
                             + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate
                             + 8);
    swift_unknownObjectRetain();
  }
  else
  {
    v38 = 0;
    v12 = 0;
    v13 = 1;
  }
  sub_1CB785AC8(a2, (uint64_t)v11, &qword_1ED88D550);
  v14 = sub_1CB846018();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14);
  if (v16 == 1)
  {
    sub_1CB785B54((uint64_t)v11, &qword_1ED88D550);
    v17 = 0;
    if (!v13)
      goto LABEL_11;
  }
  else
  {
    sub_1CB845FB8();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
    v17 = v19;
    if (!v13)
    {
LABEL_11:
      v24 = v42;
      v25 = sub_1CB782D40(v17, v16 == 1);
      swift_unknownObjectRelease();
      v26 = (objc_class *)_s17ScanConversationsCMa();
      v27 = (char *)objc_allocWithZone(v26);
      *(_QWORD *)&v27[OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers17ScanConversations_inner] = 0;
      *(_QWORD *)&v27[OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers17ScanConversations_upstream] = v25;
      v47.receiver = v27;
      v47.super_class = v26;
      v28 = v25;
      v43 = objc_msgSendSuper2(&v47, sel_init);
      v44 = 0x402E000000000000;
      v45 = &unk_1EF99CB60;
      v46 = 0;
      v29 = v43;
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED88A568);
      sub_1CB785DB0(&qword_1ED88A560, qword_1ED88A568, (uint64_t)&unk_1CB84F200);
      v30 = v39;
      sub_1CB847020();
      v32 = v40;
      v31 = v41;
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v40, v30, v41);
      v33 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v34 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v34 + v33, v32, v31);

      *v24 = sub_1CB7856D0;
      v24[1] = v34;
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v30, v31);
    }
  }
  if (!v12)
    goto LABEL_11;
  v20 = swift_unknownObjectRetain();
  v21 = sub_1CB782F00(v20);
  v23 = v22;
  swift_unknownObjectRelease();
  if ((v23 & 1) == 0)
  {
    v38 = v21;
    goto LABEL_11;
  }
  swift_unknownObjectRelease();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9D8];
  v36 = v42;
  *v42 = sub_1CB785734;
  v36[1] = result;
  return result;
}

void sub_1CB782944(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1)
  {
    v9 = *(_QWORD *)(a1 + 16);
    v1 = sub_1CB782B2C();
    v3 = v2;
  }
  else
  {
    v3 = 0xE500000000000000;
    v1 = 0x3E6C696E3CLL;
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v4 = sub_1CB8466D8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED890248);
  swift_bridgeObjectRetain();
  v5 = sub_1CB8466C0();
  v6 = sub_1CB846C9C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v9 = v8;
    *(_DWORD *)v7 = 134218242;
    sub_1CB846E58();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1CB775A54(v1, v3, &v9);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CB771000, v5, v6, "BiomeAsyncSequence next element threshold exceeded: delta=%f, counts=%s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v8, -1, -1);
    MEMORY[0x1D179FE84](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1CB782B2C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_retain();
  sub_1CB846FF0();
  result = sub_1CB84708C();
  v1 = v3;
  if (v3)
  {
    v2 = 0;
    while (!__OFADD__(v2, 1))
    {
      v4 = sub_1CB847170();
      sub_1CB846954();
      if (*(_QWORD *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1CB847044();
        swift_bridgeObjectRelease();
      }
      sub_1CB847170();
      sub_1CB846954();
      swift_bridgeObjectRelease();
      sub_1CB846954();
      sub_1CB846954();
      swift_release();
      swift_bridgeObjectRelease();
      result = sub_1CB84708C();
      v1 = v4;
      ++v2;
      if (!v4)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
LABEL_7:
    swift_release();
    swift_release();
    return 124;
  }
  return result;
}

uint64_t sub_1CB782CC8(uint64_t *a1)
{
  uint64_t v1;

  sub_1CB782944(*a1);
  return sub_1CB785854(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1CB782CFC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(void);

  *a1 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  v3 = *(uint64_t (**)(void))(v2 + 8);
  swift_retain();
  return sub_1CB785854(v3);
}

id sub_1CB782D40(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  objc_class *v16;
  char *v17;
  id v18;
  id v19;
  void (*v20)(char *, uint64_t);
  objc_super v22;

  v4 = sub_1CB846018();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v22 - v9;
  sub_1CB845FAC();
  v11 = *(void **)(v2 + 16);
  v12 = (void *)sub_1CB846BB8();
  v13 = 0;
  if ((a2 & 1) == 0)
    v13 = (void *)sub_1CB846BB8();
  v14 = objc_msgSend(v11, sel_publisherWithStartTime_endTime_maxEvents_reversed_, v12, v13, 0, 0);

  v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v15(v8, v10, v4);
  v16 = (objc_class *)_s9ScanTurnsCMa(0);
  v17 = (char *)objc_allocWithZone(v16);
  *(_QWORD *)&v17[OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_inner] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_upstream] = v14;
  v15(&v17[OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_turnsStartDateTime], v8, v4);
  v22.receiver = v17;
  v22.super_class = v16;
  v18 = v14;
  v19 = objc_msgSendSuper2(&v22, sel_init);
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v8, v4);

  v20(v10, v4);
  return v19;
}

uint64_t sub_1CB782F00(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t (*v19)(void *);
  uint64_t v20;

  v3 = *(void **)(v1 + 16);
  sub_1CB7855B0();
  v4 = (void *)sub_1CB846E04();
  v5 = (void *)sub_1CB846E04();
  v6 = objc_msgSend(v3, sel_publisherWithStartTime_endTime_maxEvents_reversed_, v4, 0, v5, 0);

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  *(_BYTE *)(v7 + 24) = 1;
  v19 = (uint64_t (*)(void *))nullsub_1;
  v20 = 0;
  v8 = MEMORY[0x1E0C809B0];
  v15 = MEMORY[0x1E0C809B0];
  v16 = 1107296256;
  v17 = sub_1CB7830D0;
  v18 = &block_descriptor_0;
  v9 = _Block_copy(&v15);
  v19 = sub_1CB785614;
  v20 = v7;
  v15 = v8;
  v16 = 1107296256;
  v17 = sub_1CB783140;
  v18 = &block_descriptor_41;
  v10 = _Block_copy(&v15);
  v11 = v6;
  swift_retain();
  swift_release();
  v12 = objc_msgSend(v11, sel_sinkWithBookmark_completion_receiveInput_, a1, v9, v10);

  _Block_release(v10);
  _Block_release(v9);

  swift_beginAccess();
  v13 = *(_QWORD *)(v7 + 16);
  swift_release();
  return v13;
}

void sub_1CB7830D0(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v5)(id, uint64_t);
  id v6;

  v5 = *(void (**)(id, uint64_t))(a1 + 32);
  swift_retain();
  v6 = a2;
  swift_unknownObjectRetain();
  v5(v6, a3);
  swift_release();
  swift_unknownObjectRelease();

}

void sub_1CB783140(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1CB783190()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

double sub_1CB7831B4@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  __int128 v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CB846018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1CB781F24(0, (uint64_t)v4, &v8);
  sub_1CB785B54((uint64_t)v4, &qword_1ED88D550);
  v6 = swift_allocObject();
  result = *(double *)&v8;
  *(_OWORD *)(v6 + 16) = v8;
  *a1 = sub_1CB785E2C;
  a1[1] = v6;
  return result;
}

double sub_1CB783288@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  __int128 v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CB846018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1CB7825C0(0, (uint64_t)v4, &v8);
  sub_1CB785B54((uint64_t)v4, &qword_1ED88D550);
  v6 = swift_allocObject();
  result = *(double *)&v8;
  *(_OWORD *)(v6 + 16) = v8;
  *a1 = sub_1CB785E28;
  a1[1] = v6;
  return result;
}

double sub_1CB78335C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  __int128 v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CB846018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1CB781F24(a1, (uint64_t)v6, &v10);
  sub_1CB785B54((uint64_t)v6, &qword_1ED88D550);
  v8 = swift_allocObject();
  result = *(double *)&v10;
  *(_OWORD *)(v8 + 16) = v10;
  *a2 = sub_1CB7854D0;
  a2[1] = v8;
  return result;
}

uint64_t sub_1CB78343C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1CB781A58(a1, a2);
}

double sub_1CB78345C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  __int128 v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CB846018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1CB7825C0(a1, (uint64_t)v6, &v10);
  sub_1CB785B54((uint64_t)v6, &qword_1ED88D550);
  v8 = swift_allocObject();
  result = *(double *)&v10;
  *(_OWORD *)(v8 + 16) = v10;
  *a2 = sub_1CB785420;
  a2[1] = v8;
  return result;
}

uint64_t sub_1CB78353C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1CB78211C(a1, a2);
}

id makeAsyncBiomeSignalReaderForTesting()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id result;

  v2 = type metadata accessor for AsyncBiomeSignalReader();
  v3 = swift_allocObject();
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D02760]), sel_init);
  *(_QWORD *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E868B1C0;
  a1[5] = (uint64_t)&off_1E868B1A8;
  *a1 = v3;
  return result;
}

uint64_t type metadata accessor for AsyncBiomeSignalReader()
{
  return objc_opt_self();
}

uint64_t sub_1CB7835F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD v19[3];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED889588);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)v19 - v6;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v19 - v8;
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v11 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58);
  v12 = *(void **)((char *)v0 + v11);
  if ((unint64_t)v12 >= 2)
    v13 = v12;
  else
    v13 = 0;
  *(_QWORD *)((char *)v0 + v11) = 1;
  sub_1CB785AB8(v12);
  objc_msgSend(v13, sel_cancel);
  v14 = (uint64_t)v0 + *(_QWORD *)((*v10 & *v0) + 0x60);
  swift_beginAccess();
  sub_1CB785AC8(v14, (uint64_t)v9, (uint64_t *)&unk_1ED889588);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889580);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v7, 1, 1, v15);
  swift_beginAccess();
  sub_1CB785B0C((uint64_t)v7, v14);
  swift_endAccess();
  sub_1CB785AC8((uint64_t)v9, (uint64_t)v4, (uint64_t *)&unk_1ED889588);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v4, 1, v15) == 1)
  {
    sub_1CB785B54((uint64_t)v9, (uint64_t *)&unk_1ED889588);

    return sub_1CB785B54((uint64_t)v4, (uint64_t *)&unk_1ED889588);
  }
  else
  {
    sub_1CB846B4C();
    sub_1CB785A70();
    v18 = swift_allocError();
    sub_1CB8467D4();
    v19[0] = v18;
    sub_1CB846B28();

    sub_1CB785B54((uint64_t)v9, (uint64_t *)&unk_1ED889588);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v4, v15);
  }
}

void sub_1CB78383C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  void *v14;
  id v15;
  _QWORD v16[3];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED889588);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v16 - v7;
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v10 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x60);
  swift_beginAccess();
  sub_1CB785AC8(v10, (uint64_t)v8, (uint64_t *)&unk_1ED889588);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889580);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11);
  sub_1CB785B54((uint64_t)v8, (uint64_t *)&unk_1ED889588);
  if (v13 == 1)
  {
    v14 = *(void **)((char *)v1 + *(_QWORD *)((*v9 & *v1) + 0x58));
    if (v14)
    {
      if (v14 == (void *)1)
      {
        v16[0] = 0;
        sub_1CB846B34();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v6, a1, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
        swift_beginAccess();
        v15 = v14;
        sub_1CB785B0C((uint64_t)v6, v10);
        swift_endAccess();
        objc_msgSend(v15, sel_requestDemand_, BPSDemandMax());
        sub_1CB785AB8(v14);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v6, a1, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
      swift_beginAccess();
      sub_1CB785B0C((uint64_t)v6, v10);
      swift_endAccess();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1CB783A6C(uint64_t a1)
{
  _QWORD *v1;

  v1[5] = a1;
  v1[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7A0);
  v1[7] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1CB783AC4()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  sub_1CB785DB0(&qword_1ED88A798, &qword_1ED88A7A0, MEMORY[0x1E0DF0C48]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1CB783B50;
  return sub_1CB846B58();
}

uint64_t sub_1CB783B50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CB783BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_task_switch();
}

uint64_t sub_1CB783BDC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  v1 = v0[6];
  swift_beginAccess();
  v4 = (uint64_t (*)(_QWORD))(**(int **)(v1 + 16) + *(_QWORD *)(v1 + 16));
  v2 = (_QWORD *)swift_task_alloc();
  v0[7] = v2;
  *v2 = v0;
  v2[1] = sub_1CB783C50;
  return v4(v0[5]);
}

uint64_t sub_1CB783C50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB783CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_task_switch();
}

uint64_t sub_1CB783CCC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  swift_beginAccess();
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_1EF99CB50 + dword_1EF99CB50);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_1CB783D48;
  return v3(*(_QWORD *)(v0 + 40));
}

uint64_t sub_1CB783D48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CB783DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_task_switch();
}

uint64_t sub_1CB783DD4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  v1 = v0[6];
  swift_beginAccess();
  v4 = (uint64_t (*)(_QWORD))(**(int **)(v1 + 16) + *(_QWORD *)(v1 + 16));
  v2 = (_QWORD *)swift_task_alloc();
  v0[7] = v2;
  *v2 = v0;
  v2[1] = sub_1CB783E48;
  return v4(v0[5]);
}

uint64_t sub_1CB783E48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB783EAC()
{
  uint64_t v0;

  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB783EE0()
{
  uint64_t v0;

  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB783F14(uint64_t a1)
{
  _QWORD *v1;

  v1[5] = a1;
  v1[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CB38);
  v1[7] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1CB783F6C()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  sub_1CB785DB0(&qword_1EF99CB40, &qword_1EF99CB38, MEMORY[0x1E0DF0C48]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1CB783FF8;
  return sub_1CB846B58();
}

uint64_t sub_1CB783FF8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CB78406C()
{
  uint64_t v0;

  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7840A0(uint64_t a1)
{
  _QWORD *v1;

  v1[5] = a1;
  v1[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CBE0);
  v1[7] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1CB7840F8()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  sub_1CB785DB0(&qword_1EF99CC00, &qword_1EF99CBE0, MEMORY[0x1E0DF0DA0]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1CB783B50;
  return sub_1CB846B58();
}

uint64_t sub_1CB784184(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_1CB78419C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 40);
  result = swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1CB847044();
    result = swift_bridgeObjectRelease();
    if (v3 == v6)
      goto LABEL_3;
  }
  else if (v3 == *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v5 = 0;
LABEL_11:
    swift_endAccess();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 16);
  if ((v7 & 0xC000000000000001) == 0)
  {
    if ((v3 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v3 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v5 = *(_QWORD *)(v7 + 8 * v3 + 32);
      result = swift_retain();
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_15;
  }
  result = MEMORY[0x1D179F320](v3);
  v5 = result;
LABEL_9:
  v8 = *(_QWORD *)(v1 + 24);
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (!v9)
  {
    *(_QWORD *)(v1 + 24) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1CB7842B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_task_switch();
}

uint64_t sub_1CB7842CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(v0 + 48);
  result = swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v4 + 16);
  if (v3 == v5)
  {
    **(_QWORD **)(v0 + 40) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (v3 < v5)
  {
    **(_QWORD **)(v0 + 40) = *(_QWORD *)(v4 + 8 * v3 + 32);
    *(_QWORD *)(v1 + 24) = v3 + 1;
    swift_retain();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB784350(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_task_switch();
}

uint64_t sub_1CB784368()
{
  uint64_t v0;

  swift_beginAccess();
  sub_1CB84708C();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7843CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return swift_task_switch();
}

uint64_t sub_1CB7843E4()
{
  uint64_t v0;
  int **v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)();
  int *v5;
  int *v6;
  int *v7;
  uint64_t (*v9)(uint64_t);

  v1 = *(int ***)(v0 + 64);
  if (((_BYTE)v1[4] & 1) != 0)
  {
    v2 = v0 + 48;
    *((_BYTE *)v1 + 32) = 0;
    v9 = (uint64_t (*)(uint64_t))((char *)*v1 + **v1);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v3;
    v4 = sub_1CB7844D0;
LABEL_5:
    *v3 = v0;
    v3[1] = v4;
    return v9(v2);
  }
  v5 = v1[5];
  v6 = v1[6];
  *(_QWORD *)(v0 + 88) = v6;
  *(_QWORD *)(v0 + 96) = v5;
  if (v5)
  {
    v2 = v0 + 32;
    *(_QWORD *)(v0 + 16) = v5;
    *(_QWORD *)(v0 + 24) = v6;
    v9 = (uint64_t (*)(uint64_t))((char *)*v1 + **v1);
    swift_retain();
    v7 = v6;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v3;
    v4 = sub_1CB78460C;
    goto LABEL_5;
  }
  return (*(uint64_t (**)(_QWORD, int *))(v0 + 8))(0, v6);
}

uint64_t sub_1CB7844D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB784534()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v2 = *(void **)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  sub_1CB785584(*(_QWORD *)(v1 + 40), *(void **)(v1 + 48));
  *(_QWORD *)(v1 + 40) = v3;
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 96) = v3;
  if (!v3)
    return (*(uint64_t (**)(_QWORD, void *))(v0 + 8))(0, v2);
  v4 = *(_QWORD **)(v0 + 64);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v2;
  v8 = (uint64_t (*)(uint64_t))(*(int *)*v4 + *v4);
  swift_retain();
  v5 = v2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v6;
  *v6 = v0;
  v6[1] = sub_1CB78460C;
  return v8(v0 + 32);
}

uint64_t sub_1CB784600()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB78460C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB784670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 96);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v0 + 64) + 16))(v7, v0 + 16);
    swift_release();

    v4 = v7[0];
    v3 = v7[1];
  }
  v5 = *(_QWORD *)(v0 + 64);
  sub_1CB785584(*(_QWORD *)(v5 + 40), *(void **)(v5 + 48));
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v3);
}

uint64_t sub_1CB784700()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB78473C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch();
}

uint64_t sub_1CB784754()
{
  uint64_t v0;
  int **v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)();
  int *v5;
  int *v6;
  int *v7;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t);

  v1 = *(int ***)(v0 + 72);
  if (((_BYTE)v1[4] & 1) != 0)
  {
    v2 = v0 + 48;
    *((_BYTE *)v1 + 32) = 0;
    v10 = (uint64_t (*)(uint64_t))((char *)*v1 + **v1);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v3;
    v4 = sub_1CB784844;
LABEL_5:
    *v3 = v0;
    v3[1] = v4;
    return v10(v2);
  }
  v5 = v1[5];
  v6 = v1[6];
  *(_QWORD *)(v0 + 96) = v6;
  *(_QWORD *)(v0 + 104) = v5;
  if (v5)
  {
    v2 = v0 + 32;
    *(_QWORD *)(v0 + 16) = v5;
    *(_QWORD *)(v0 + 24) = v6;
    v10 = (uint64_t (*)(uint64_t))((char *)*v1 + **v1);
    swift_retain();
    v7 = v6;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v3;
    v4 = sub_1CB784980;
    goto LABEL_5;
  }
  v9 = *(_QWORD **)(v0 + 64);
  *v9 = 0;
  v9[1] = v6;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB784844()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB7848A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  id v5;
  _QWORD *v6;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(void **)(v0 + 56);
  sub_1CB785584(*(_QWORD *)(v1 + 40), *(void **)(v1 + 48));
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v3;
  *(_QWORD *)(v0 + 96) = v3;
  *(_QWORD *)(v0 + 104) = v2;
  if (v2)
  {
    v4 = *(_QWORD **)(v0 + 72);
    *(_QWORD *)(v0 + 16) = v2;
    *(_QWORD *)(v0 + 24) = v3;
    v9 = (uint64_t (*)(uint64_t))(*(int *)*v4 + *v4);
    swift_retain();
    v5 = v3;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v6;
    *v6 = v0;
    v6[1] = sub_1CB784980;
    return v9(v0 + 32);
  }
  else
  {
    v8 = *(_QWORD **)(v0 + 64);
    *v8 = 0;
    v8[1] = v3;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1CB784974()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB784980()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB7849E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v9[2];

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v4 = *(_QWORD *)(v0 + 96);
    v3 = *(_QWORD *)(v0 + 104);
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v0 + 72) + 16))(v9, v0 + 16);
    v5 = *(void **)(v0 + 24);
    swift_release();

    v3 = v9[0];
    v4 = v9[1];
  }
  v7 = *(_QWORD **)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  sub_1CB785584(*(_QWORD *)(v6 + 40), *(void **)(v6 + 48));
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *v7 = v3;
  v7[1] = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB784A74()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB784AB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1CB784AC8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 24);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  if ((sub_1CB846B94() & 1) != 0)
  {
    *(_BYTE *)(v1 + 24) = 1;
    sub_1CB7835F0();
    sub_1CB846B4C();
    sub_1CB785A70();
    swift_allocError();
    sub_1CB8467D4();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 32) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889560);
    *v3 = v0;
    v3[1] = sub_1CB784BF0;
    return sub_1CB847278();
  }
}

uint64_t sub_1CB784BF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB784C54()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 16))
    *(_BYTE *)(*(_QWORD *)(v0 + 24) + 24) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB784C74()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB784C80@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7C0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7A0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v18 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1CB785DB0(&qword_1ED88A7B8, &qword_1ED88A7C0, MEMORY[0x1E0DF0C70]);
  sub_1CB846BA0();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  v15 = swift_allocBox();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16, v12, v8);
  *a2 = &unk_1EF99CB88;
  a2[1] = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_1CB784DEC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CBD8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CBE0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v18 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1CB785DB0(&qword_1EF99CBE8, &qword_1EF99CBD8, MEMORY[0x1E0DF0DB8]);
  sub_1CB846BA0();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  v15 = swift_allocBox();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16, v12, v8);
  *a2 = &unk_1EF99CBF8;
  a2[1] = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_1CB784F58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1CB784FBC;
  v4[5] = a2;
  return swift_task_switch();
}

uint64_t sub_1CB784FBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1CB785018@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t result;

  v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8892D0);
  v4 = swift_allocObject();
  v5 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED8892C8));
  v6 = v3;
  v7 = objc_msgSend(v5, sel_init);
  *(_QWORD *)(v4 + 16) = v7;
  *(_BYTE *)(v4 + 24) = 0;
  objc_msgSend(v6, sel_subscribe_, v7);

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v4;
  *a2 = &unk_1EF99CBB8;
  a2[1] = result;
  return result;
}

uint64_t sub_1CB7850CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_task_switch();
}

uint64_t sub_1CB7850E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  swift_beginAccess();
  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EF99CBC0 + dword_1EF99CBC0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_1CB785158;
  return v3();
}

uint64_t sub_1CB785158(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v6;

  v4 = *v2;
  *(_QWORD *)(v4 + 64) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v6 = *(_QWORD **)(v4 + 40);
  swift_endAccess();
  *v6 = a1;
  return (*(uint64_t (**)(void))(v4 + 8))();
}

double sub_1CB7851E8@<D0>(void (**a1)(__int128 *__return_ptr, uint64_t)@<X0>, _QWORD *a2@<X8>)
{
  void (*v3)(__int128 *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t v5;
  double result;
  __int128 v7;

  v3 = *a1;
  v4 = swift_retain();
  v3(&v7, v4);
  swift_release();
  v5 = swift_allocObject();
  result = *(double *)&v7;
  *(_OWORD *)(v5 + 16) = v7;
  *a2 = &unk_1EF99CB20;
  a2[1] = v5;
  return result;
}

uint64_t sub_1CB785258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch();
}

uint64_t sub_1CB785270()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0 + 56);
  swift_beginAccess();
  v4 = (uint64_t (*)(uint64_t))(**(int **)(v1 + 16) + *(_QWORD *)(v1 + 16));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_1CB7852EC;
  return v4(v0 + 40);
}

uint64_t sub_1CB7852EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB785350()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD **)(v0 + 48);
  swift_endAccess();
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1CB78538C@<D0>(void (**a1)(__int128 *__return_ptr, uint64_t)@<X0>, _QWORD *a2@<X8>)
{
  void (*v3)(__int128 *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t v5;
  double result;
  __int128 v7;

  v3 = *a1;
  v4 = swift_retain();
  v3(&v7, v4);
  swift_release();
  v5 = swift_allocObject();
  result = *(double *)&v7;
  *(_OWORD *)(v5 + 16) = v7;
  *a2 = &unk_1EF99CB10;
  a2[1] = v5;
  return result;
}

uint64_t sub_1CB7853FC()
{
  swift_release();
  return swift_deallocObject();
}

double sub_1CB785420@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1CB78538C((void (**)(__int128 *__return_ptr, uint64_t))(v1 + 16), a1);
}

uint64_t sub_1CB785428(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB785488;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_1CB785488()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

double sub_1CB7854D0@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1CB7851E8((void (**)(__int128 *__return_ptr, uint64_t))(v1 + 16), a1);
}

uint64_t sub_1CB7854D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB785DF4;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF99CB18 + dword_1EF99CB18))(a1, v1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D179FD7C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_1CB785584(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_release();

  }
}

unint64_t sub_1CB7855B0()
{
  unint64_t result;

  result = qword_1ED88DE40;
  if (!qword_1ED88DE40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED88DE40);
  }
  return result;
}

uint64_t sub_1CB7855EC()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_1CB785614(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  objc_msgSend(a1, sel_timestamp);
  v3 = v2;
  result = swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v3;
  *(_BYTE *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1CB78566C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7C0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CB7856D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7C0) - 8) + 80);
  return sub_1CB784C80(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1CB785710()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CB785734@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = 0;
  *a1 = &unk_1EF99CB78;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CB78577C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CB7857A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB785DF4;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_1CB785800(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CB785DF4;
  return sub_1CB783A6C(a1);
}

uint64_t sub_1CB785854(uint64_t (*a1)(void))
{
  return a1();
}

id sub_1CB785860(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CB846018() - 8) + 80);
  return sub_1CB782478(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + ((v7 + 24) & ~v7));
}

uint64_t sub_1CB7858B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1CB7AB0E4(a1, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 16), a2);
}

uint64_t sub_1CB7858C0()
{
  return objectdestroy_62Tm(&qword_1ED88A7B0);
}

uint64_t sub_1CB7858CC()
{
  return sub_1CB785CF4(&qword_1ED88A7B0, (uint64_t (*)(unint64_t, _QWORD, _QWORD))sub_1CB7ADF0C);
}

void sub_1CB7858E0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1CB7AE558((void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 16), a1);
}

uint64_t sub_1CB7858E8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1CB78590C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1CB785018((void **)(v1 + 16), a1);
}

uint64_t sub_1CB785914@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = 0;
  *a1 = &unk_1EF99CBA0;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CB78595C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB785DF4;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF99CB98 + dword_1EF99CB98))(a1, v1);
}

uint64_t sub_1CB7859C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB7859E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB785DF4;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF99CBB0 + dword_1EF99CBB0))(a1, v1);
}

void sub_1CB785A50(uint64_t a1)
{
  sub_1CB78383C(a1);
}

unint64_t sub_1CB785A70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF99CBC8;
  if (!qword_1EF99CBC8)
  {
    v1 = sub_1CB846B4C();
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DF05E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF99CBC8);
  }
  return result;
}

void sub_1CB785AB8(id a1)
{
  if ((unint64_t)a1 >= 2)

}

uint64_t sub_1CB785AC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CB785B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED889588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB785B54(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t objectdestroy_56Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CB846018();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CB785C08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CB846018() - 8) + 80);
  return sub_1CB781DF0(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_1CB785C58@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1CB7AB0B0(a1, *(uint64_t (**)(_QWORD, _QWORD))(v2 + 16), a2);
}

uint64_t sub_1CB785C60()
{
  return objectdestroy_62Tm(&qword_1ED8895B8);
}

uint64_t objectdestroy_62Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB785CE0()
{
  return sub_1CB785CF4(&qword_1ED8895B8, (uint64_t (*)(unint64_t, _QWORD, _QWORD))sub_1CB7AE2A8);
}

uint64_t sub_1CB785CF4(uint64_t *a1, uint64_t (*a2)(unint64_t, _QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (_QWORD *)(v2 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a2(v2 + v4, *v5, v5[1]);
}

double sub_1CB785D54@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1CB7AE0F8((void (**)(_OWORD *__return_ptr, uint64_t))(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_1CB785D5C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CB785DF4;
  return sub_1CB7840A0(a1);
}

uint64_t sub_1CB785DB0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D179FD88](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static SELFStoreMaintenance.resetStore()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D5A0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB785EF0();
  sub_1CB84618C();
  sub_1CB846168();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

unint64_t sub_1CB785EF0()
{
  unint64_t result;

  result = qword_1ED88DE20;
  if (!qword_1ED88DE20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED88DE20);
  }
  return result;
}

uint64_t sub_1CB785F2C()
{
  return 1;
}

ValueMetadata *type metadata accessor for SELFStoreMaintenance()
{
  return &type metadata for SELFStoreMaintenance;
}

SiriPrivateLearningAnalytics::SiriUserFeedbackLearningPlatformFeature_optional __swiftcall SiriUserFeedbackLearningPlatformFeature.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  SiriPrivateLearningAnalytics::SiriUserFeedbackLearningPlatformFeature_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CB8470B0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static SiriUserFeedbackLearningPlatformFeature.allCases.getter()
{
  return &unk_1E868A0C0;
}

unint64_t SiriUserFeedbackLearningPlatformFeature.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001DLL;
  else
    return 0xD000000000000023;
}

uint64_t sub_1CB785FF0(char *a1, char *a2)
{
  return sub_1CB80C5BC(*a1, *a2);
}

uint64_t sub_1CB785FFC()
{
  return sub_1CB820D20();
}

uint64_t sub_1CB786004()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB786064()
{
  return sub_1CB821140();
}

SiriPrivateLearningAnalytics::SiriUserFeedbackLearningPlatformFeature_optional sub_1CB78606C(Swift::String *a1)
{
  return SiriUserFeedbackLearningPlatformFeature.init(rawValue:)(*a1);
}

void sub_1CB786078(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD00000000000001DLL;
  else
    v2 = 0xD000000000000023;
  v3 = 0x80000001CB851EC0;
  if (*v1)
    v3 = 0x80000001CB851EF0;
  *a1 = v2;
  a1[1] = v3;
}

void sub_1CB7860BC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E868A0E8;
}

uint64_t SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.init()();
  return v0;
}

uint64_t SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[6];
  uint64_t v20;
  uint64_t v21;

  v1 = sub_1CB846108();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 276);
  v5 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_1CB8460B4();

  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  CurrentLocales.init(deviceLocale:siriPreferences:)((uint64_t)v3, v6, (uint64_t)v19);
  v17 = v19[1];
  v18 = v19[0];
  v15 = v19[3];
  v16 = v19[2];
  v13 = v19[5];
  v14 = v19[4];
  v7 = v20;
  v8 = v21;
  *(_QWORD *)(v0 + 40) = &type metadata for EnvironmentFeatureFlags;
  *(_QWORD *)(v0 + 48) = &protocol witness table for EnvironmentFeatureFlags;
  *(_QWORD *)(v0 + 232) = &type metadata for OSTypeResolver;
  *(_QWORD *)(v0 + 240) = &protocol witness table for OSTypeResolver;
  *(_QWORD *)(v0 + 80) = sub_1CB786710();
  *(_QWORD *)(v0 + 88) = &protocol witness table for TRIClient;
  *(_QWORD *)(v0 + 56) = v4;
  v9 = v17;
  *(_OWORD *)(v0 + 96) = v18;
  *(_OWORD *)(v0 + 112) = v9;
  v10 = v15;
  *(_OWORD *)(v0 + 128) = v16;
  *(_OWORD *)(v0 + 144) = v10;
  v11 = v13;
  *(_OWORD *)(v0 + 160) = v14;
  *(_OWORD *)(v0 + 176) = v11;
  *(_QWORD *)(v0 + 192) = v7;
  *(_QWORD *)(v0 + 200) = v8;
  return v0;
}

void SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.__allocating_init(trialStatus:featureFlags:currentLocales:osResolver:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.init(trialStatus:featureFlags:currentLocales:osResolver:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.deinit()
{
  uint64_t v0;

  sub_1CB78674C(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  return v0;
}

uint64_t SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.__deallocating_deinit()
{
  uint64_t v0;

  sub_1CB78674C(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  return swift_deallocClassInstance();
}

_QWORD *sub_1CB786400()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8895D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CB848A50;
  *(_BYTE *)(inited + 32) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8895D0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1CB848A60;
  *(_QWORD *)(v1 + 56) = &type metadata for SiriPrivateLearningFeatureFlag;
  *(_QWORD *)(v1 + 64) = sub_1CB7869D8();
  *(_BYTE *)(v1 + 32) = 14;
  *(_BYTE *)(v1 + 72) = 1;
  type metadata accessor for TrialFlagFactor(0);
  v2 = swift_initStaticObject();
  if (qword_1ED8892B0 != -1)
    swift_once();
  v4 = qword_1ED8892A0;
  v3 = *(_QWORD *)algn_1ED8892A8;
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v4;
  *(_QWORD *)(v1 + 96) = v3;
  *(_BYTE *)(v1 + 120) = 0;
  *(_QWORD *)(inited + 40) = v1;
  *(_BYTE *)(inited + 48) = 0;
  swift_bridgeObjectRetain();
  sub_1CB7875F0(inited);
  v6 = v5;
  type metadata accessor for AnyFeature();
  result = (_QWORD *)swift_allocObject();
  result[2] = 0xD000000000000023;
  result[3] = 0x80000001CB851EC0;
  result[4] = MEMORY[0x1E0DEE9D8];
  result[5] = v6;
  qword_1ED8891E8 = (uint64_t)result;
  return result;
}

uint64_t static SiriUserFeedbackLearningPlatformFeatures.UniversalSuggestionsOfflineLearning.getter()
{
  return sub_1CB7866D8(qword_1ED8891F0);
}

_QWORD *sub_1CB78656C()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8895D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CB848A50;
  *(_BYTE *)(inited + 32) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8895D0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1CB848A60;
  *(_QWORD *)(v1 + 56) = &type metadata for SiriPrivateLearningFeatureFlag;
  *(_QWORD *)(v1 + 64) = sub_1CB7869D8();
  *(_BYTE *)(v1 + 32) = 15;
  *(_BYTE *)(v1 + 72) = 1;
  type metadata accessor for TrialFlagFactor(0);
  v2 = swift_initStaticObject();
  if (qword_1ED8892B0 != -1)
    swift_once();
  v4 = qword_1ED8892A0;
  v3 = *(_QWORD *)algn_1ED8892A8;
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v4;
  *(_QWORD *)(v1 + 96) = v3;
  *(_BYTE *)(v1 + 120) = 0;
  *(_QWORD *)(inited + 40) = v1;
  *(_BYTE *)(inited + 48) = 0;
  swift_bridgeObjectRetain();
  sub_1CB7875F0(inited);
  v6 = v5;
  type metadata accessor for AnyFeature();
  result = (_QWORD *)swift_allocObject();
  result[2] = 0xD00000000000001DLL;
  result[3] = 0x80000001CB851EF0;
  result[4] = MEMORY[0x1E0DEE9D8];
  result[5] = v6;
  qword_1EF99CC10 = (uint64_t)result;
  return result;
}

uint64_t static SiriUserFeedbackLearningPlatformFeatures.UniversalSuggestionsSurfacing.getter()
{
  return sub_1CB7866D8(&qword_1EF99C388);
}

uint64_t sub_1CB7866D8(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

unint64_t sub_1CB786710()
{
  unint64_t result;

  result = qword_1ED88E4B8;
  if (!qword_1ED88E4B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED88E4B8);
  }
  return result;
}

uint64_t sub_1CB78674C(uint64_t a1)
{
  destroy for FeatureResolver(a1);
  return a1;
}

unint64_t sub_1CB786784()
{
  unint64_t result;

  result = qword_1EF99CC18;
  if (!qword_1EF99CC18)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriUserFeedbackLearningPlatformFeature, &type metadata for SiriUserFeedbackLearningPlatformFeature);
    atomic_store(result, (unint64_t *)&qword_1EF99CC18);
  }
  return result;
}

unint64_t sub_1CB7867CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF99CC20;
  if (!qword_1EF99CC20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF99CC28);
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF99CC20);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningPlatformFeature(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningPlatformFeature(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CB786900 + 4 * byte_1CB848A75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CB786934 + 4 * byte_1CB848A70[v4]))();
}

uint64_t sub_1CB786934(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB78693C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB786944);
  return result;
}

uint64_t sub_1CB786950(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB786958);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CB78695C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB786964(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB786970(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1CB786978(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPlatformFeature()
{
  return &type metadata for SiriUserFeedbackLearningPlatformFeature;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPlatformFeatures()
{
  return &type metadata for SiriUserFeedbackLearningPlatformFeatures;
}

uint64_t type metadata accessor for SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

unint64_t sub_1CB7869D8()
{
  unint64_t result;

  result = qword_1ED88E288;
  if (!qword_1ED88E288)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriPrivateLearningFeatureFlag, &type metadata for SiriPrivateLearningFeatureFlag);
    atomic_store(result, (unint64_t *)&qword_1ED88E288);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ConcurrencyError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ConcurrencyError()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ConcurrencyError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for ConcurrencyError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConcurrencyError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConcurrencyError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConcurrencyError()
{
  return &type metadata for ConcurrencyError;
}

uint64_t PluginRunner.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED88C1B8 != -1)
    swift_once();
  v2 = sub_1CB845F58();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED890200);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t PluginRunner.init(pluginPath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CB845F58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t PluginRunner.runPlugin(pluginName:context:)(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 56) = a3;
  *(_QWORD *)(v5 + 64) = v4;
  *(_QWORD *)(v5 + 40) = a1;
  *(_QWORD *)(v5 + 48) = a2;
  *(_BYTE *)(v5 + 96) = *a4;
  return swift_task_switch();
}

uint64_t sub_1CB786C44()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = sub_1CB816D84(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  *(_QWORD *)(v0 + 72) = v1;
  v2 = v1;
  v3 = *(_BYTE *)(v0 + 96);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v5;
  *v5 = v0;
  v5[1] = sub_1CB786DD8;
  return sub_1CB847188();
}

uint64_t sub_1CB786DD8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB786E34()
{
  uint64_t v0;

  swift_release();
  *(_OWORD *)*(_QWORD *)(v0 + 40) = *(_OWORD *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB786E70(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  unint64_t v11;
  uint64_t v12;
  _BYTE v14[15];
  char v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CCD8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = *(_QWORD *)(a2 + 24);
  ObjectType = swift_getObjectType();
  v15 = a3;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(&v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v6);
  v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v7 + 32))(v12 + v11, &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v6);
  (*(void (**)(char *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 16))(&v15, sub_1CB78741C, v12, ObjectType, v9);
  return swift_release();
}

uint64_t sub_1CB786F84()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CCD8);
  return sub_1CB846B34();
}

uint64_t sub_1CB786FCC(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;

  v10 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *(_QWORD *)v10 = v5;
  *(_QWORD *)(v10 + 8) = sub_1CB785488;
  *(_QWORD *)(v10 + 56) = a3;
  *(_QWORD *)(v10 + 64) = v4;
  *(_QWORD *)(v10 + 40) = a1;
  *(_QWORD *)(v10 + 48) = a2;
  *(_BYTE *)(v10 + 96) = *a4;
  return swift_task_switch();
}

uint64_t sub_1CB787054(uint64_t a1)
{
  uint64_t v1;

  return sub_1CB786E70(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t dispatch thunk of PluginRunning.runPlugin(pluginName:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 8)
                                                                                     + *(_QWORD *)(a6 + 8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1CB785DF4;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t initializeBufferWithCopyOfBuffer for PluginRunner(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CB845F58();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for PluginRunner(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CB845F58();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for PluginRunner(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CB845F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PluginRunner(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CB845F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PluginRunner(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CB845F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PluginRunner(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CB845F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginRunner()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB78728C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CB845F58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PluginRunner()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB7872D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CB845F58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PluginRunner()
{
  uint64_t result;

  result = qword_1EF99CCA0;
  if (!qword_1EF99CCA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CB787350()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB845F58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CB7873B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CCD8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CB78741C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CCD8);
  return sub_1CB786F84();
}

unint64_t sub_1CB78745C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BBD8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF80);
  v6 = sub_1CB847068();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CB785AC8(v12, (uint64_t)v5, &qword_1ED88BBD8);
    result = sub_1CB779AD8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1CB846084();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1CB7875F0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unsigned __int8 *v4;
  char v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (*(_QWORD *)(a1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_1ED8895C0),
        v2 = (_QWORD *)sub_1CB847068(),
        (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (unsigned __int8 *)(a1 + 48);
    while (1)
    {
      v5 = *(v4 - 16);
      v6 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      j__swift_bridgeObjectRetain(v6, *v4);
      sub_1CB779B3C(v5);
      if ((v9 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
      *(_BYTE *)(v2[6] + v8) = v5;
      v10 = v2[7] + 16 * v8;
      *(_QWORD *)v10 = v6;
      *(_BYTE *)(v10 + 8) = v7;
      v11 = v2[2];
      v12 = __OFADD__(v11, 1);
      v13 = v11 + 1;
      if (v12)
        goto LABEL_10;
      v2[2] = v13;
      v4 += 24;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1CB787708(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E270);
  v2 = sub_1CB847068();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1CB785AC8(v6, (uint64_t)&v15, &qword_1ED88E260);
    v7 = v15;
    v8 = v16;
    result = sub_1CB779A70(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1CB777CAC(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CB78783C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7D0);
  v2 = (_QWORD *)sub_1CB847068();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1CB779A70(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CB78794C(uint64_t a1)
{
  return sub_1CB787E4C(a1, &qword_1ED88A7C8);
}

unint64_t sub_1CB787958(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CD08);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAD8);
  v6 = sub_1CB847068();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CB785AC8(v12, (uint64_t)v5, &qword_1EF99CD08);
    result = sub_1CB779AD8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1CB846084();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CB787AEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88D580);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAA8);
  v6 = sub_1CB847068();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CB785AC8(v12, (uint64_t)v5, (uint64_t *)&unk_1ED88D580);
    result = sub_1CB779AD8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1CB846084();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7] + 16 * v16;
    v20 = v9[1];
    v21 = v9[2];
    v22 = v9[3];
    v23 = *((_QWORD *)v9 + 1);
    *(_BYTE *)v19 = *v9;
    *(_BYTE *)(v19 + 1) = v20;
    *(_BYTE *)(v19 + 2) = v21;
    *(_BYTE *)(v19 + 3) = v22;
    *(_QWORD *)(v19 + 8) = v23;
    v24 = v7[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_11;
    v7[2] = v26;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CB787CAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8891A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CA98);
  v6 = sub_1CB847068();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CB785AC8(v12, (uint64_t)v5, &qword_1ED8891A8);
    result = sub_1CB779AD8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1CB846084();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CB787E40(uint64_t a1)
{
  return sub_1CB787E4C(a1, (uint64_t *)&unk_1ED88E070);
}

unint64_t sub_1CB787E4C(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1CB847068();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_1CB779A70(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CB787F60(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAC0);
  v2 = (_QWORD *)sub_1CB847068();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1CB779A70(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t SiriUserFeedbackLearningTaskResult.Status.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (!v1)
    return 0x73736563637573;
  if (v1 == 1)
    return 0x64657070696B73;
  sub_1CB846954();
  return 0x3A6572756C696166;
}

BOOL sub_1CB788110(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s28SiriPrivateLearningAnalytics27PLUSSuggestionSurfacedStateO9hashValueSivg_0()
{
  sub_1CB8472E4();
  sub_1CB8472F0();
  return sub_1CB847314();
}

uint64_t sub_1CB788168()
{
  return sub_1CB8472F0();
}

uint64_t sub_1CB788190()
{
  sub_1CB8472E4();
  sub_1CB8472F0();
  return sub_1CB847314();
}

uint64_t sub_1CB7881D0()
{
  char *v0;

  return *(_QWORD *)&aSuccess_2[8 * *v0];
}

uint64_t sub_1CB7881E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CB78B698(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CB78820C()
{
  return 0;
}

void sub_1CB788218(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1CB788224()
{
  sub_1CB78A46C();
  return sub_1CB84738C();
}

uint64_t sub_1CB78824C()
{
  sub_1CB78A46C();
  return sub_1CB847398();
}

uint64_t sub_1CB788274()
{
  sub_1CB8472E4();
  sub_1CB8472F0();
  return sub_1CB847314();
}

uint64_t sub_1CB7882B4()
{
  return sub_1CB8472F0();
}

uint64_t sub_1CB7882D8()
{
  sub_1CB8472E4();
  sub_1CB8472F0();
  return sub_1CB847314();
}

uint64_t sub_1CB788314()
{
  return 0x6567617373656DLL;
}

uint64_t sub_1CB78832C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CB8471A0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1CB7883C0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1CB7883CC()
{
  sub_1CB78A4F4();
  return sub_1CB84738C();
}

uint64_t sub_1CB7883F4()
{
  sub_1CB78A4F4();
  return sub_1CB847398();
}

uint64_t sub_1CB78841C()
{
  return 0;
}

uint64_t sub_1CB788428@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1CB788454()
{
  sub_1CB78A4B0();
  return sub_1CB84738C();
}

uint64_t sub_1CB78847C()
{
  sub_1CB78A4B0();
  return sub_1CB847398();
}

uint64_t sub_1CB7884A4()
{
  sub_1CB78A538();
  return sub_1CB84738C();
}

uint64_t sub_1CB7884CC()
{
  sub_1CB78A538();
  return sub_1CB847398();
}

uint64_t SiriUserFeedbackLearningTaskResult.Status.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v2 = v1;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C248);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v20 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C240);
  v21 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C250);
  v7 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C238);
  v25 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v2;
  v14 = v2[1];
  v18[1] = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB78A46C();
  sub_1CB847350();
  if (!v14)
  {
    v26 = 0;
    sub_1CB78A538();
    sub_1CB847110();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v10);
  }
  if (v14 == 1)
  {
    v28 = 2;
    sub_1CB78A4B0();
    v15 = v20;
    sub_1CB847110();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v10);
  }
  v27 = 1;
  sub_1CB78A4F4();
  sub_1CB847110();
  v17 = v23;
  sub_1CB847128();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v10);
}

uint64_t SiriUserFeedbackLearningTaskResult.Status.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;

  v39 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C220);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  MEMORY[0x1E0C80A78](v3);
  v41 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C218);
  v38 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v40 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C228);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C210);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1CB78A46C();
  v16 = v43;
  sub_1CB847338();
  if (!v16)
  {
    v34 = v7;
    v17 = v40;
    v18 = v41;
    v43 = v12;
    v19 = sub_1CB847104();
    if (*(_QWORD *)(v19 + 16) == 1)
    {
      if (*(_BYTE *)(v19 + 32))
      {
        if (*(_BYTE *)(v19 + 32) == 1)
        {
          v45 = 1;
          sub_1CB78A4F4();
          v20 = v17;
          sub_1CB8470BC();
          v21 = v11;
          v22 = v35;
          v23 = sub_1CB8470E0();
          v24 = v20;
          v25 = v43;
          v30 = v23;
          v32 = v31;
          (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v22);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v21);
        }
        else
        {
          v46 = 2;
          sub_1CB78A4B0();
          sub_1CB8470BC();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v36);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v11);
          v30 = 0;
          v32 = 1;
        }
      }
      else
      {
        v44 = 0;
        sub_1CB78A538();
        sub_1CB8470BC();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v34);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v11);
        v30 = 0;
        v32 = 0;
      }
      v33 = v39;
      *v39 = v30;
      v33[1] = v32;
    }
    else
    {
      v26 = sub_1CB846F90();
      swift_allocError();
      v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CCE8);
      *v28 = &type metadata for SiriUserFeedbackLearningTaskResult.Status;
      sub_1CB8470C8();
      sub_1CB846F78();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x1E0DEC450], v26);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v11);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
}

uint64_t sub_1CB788C10@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SiriUserFeedbackLearningTaskResult.Status.init(from:)(a1, a2);
}

uint64_t sub_1CB788C24(_QWORD *a1)
{
  return SiriUserFeedbackLearningTaskResult.Status.encode(to:)(a1);
}

uint64_t sub_1CB788C38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (!v1)
    return 0x73736563637573;
  if (v1 == 1)
    return 0x64657070696B73;
  sub_1CB846954();
  return 0x3A6572756C696166;
}

uint64_t SiriUserFeedbackLearningTaskResult.status.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1CB78A57C(v2, v3);
}

id SiriUserFeedbackLearningTaskResult.mlrTaskResult.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void *SiriUserFeedbackLearningTaskResult.error.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t SiriUserFeedbackLearningTaskResult.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  if (v2 > 1)
  {
    swift_bridgeObjectRetain();
    sub_1CB846954();
  }
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB78A590(v1, v2);
  return 0x203A737574617473;
}

double SiriUserFeedbackLearningTaskResult.init(result:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1[1];
  if (v3)
  {
    v7 = *a1;
    v8 = v3;
  }
  else
  {
    v7 = 0;
    v8 = 0;
  }
  SiriUserFeedbackLearningTaskResult.init(status:)(&v7, (uint64_t *)&v9);
  result = *(double *)&v9;
  v5 = v10;
  v6 = v11;
  *(_OWORD *)a2 = v9;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v6;
  return result;
}

uint64_t SiriUserFeedbackLearningTaskResult.init(status:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  id v23;
  void *v24;
  id v25;
  uint64_t result;
  uint64_t *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v36 = a2;
  v3 = sub_1CB8468D0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  v7 = a1[1];
  if (qword_1ED88E518 != -1)
    swift_once();
  v8 = sub_1CB8466D8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED890248);
  sub_1CB78A57C(v6, v7);
  sub_1CB78A57C(v6, v7);
  v9 = sub_1CB8466C0();
  v10 = sub_1CB846C84();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v37 = v12;
    *(_DWORD *)v11 = 136315394;
    v38 = sub_1CB775A54(0x6174732874696E69, 0xED0000293A737574, &v37);
    sub_1CB846E58();
    *(_WORD *)(v11 + 12) = 2080;
    v35 = (uint64_t)v5;
    if (v7)
    {
      if (v7 == 1)
      {
        v13 = 0xE700000000000000;
        v14 = 0x64657070696B73;
      }
      else
      {
        v38 = 0x3A6572756C696166;
        v39 = 0xE900000000000020;
        swift_bridgeObjectRetain();
        sub_1CB846954();
        sub_1CB78A590(v6, v7);
        v14 = v38;
        v13 = v39;
      }
    }
    else
    {
      v14 = 0x73736563637573;
      v13 = 0xE700000000000000;
    }
    v38 = sub_1CB775A54(v14, v13, &v37);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    sub_1CB78A590(v6, v7);
    sub_1CB78A590(v6, v7);
    _os_log_impl(&dword_1CB771000, v9, v10, "SiriUserFeedbackLearningTaskResult.%s status: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v12, -1, -1);
    MEMORY[0x1D179FE84](v11, -1, -1);

  }
  else
  {
    sub_1CB78A590(v6, v7);
    sub_1CB78A590(v6, v7);

  }
  sub_1CB845DC0();
  swift_allocObject();
  sub_1CB78A57C(v6, v7);
  sub_1CB845DB4();
  v38 = v6;
  v39 = v7;
  sub_1CB78A5A4();
  v15 = sub_1CB845DA8();
  v17 = v16;
  sub_1CB8468C4();
  v18 = sub_1CB8468B8();
  if (v19)
  {
    v20 = v18;
    v21 = v19;
    sub_1CB78A590(v6, v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E278);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CB848A50;
    *(_QWORD *)(inited + 32) = 0x737574617473;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v20;
    *(_QWORD *)(inited + 56) = v21;
    sub_1CB787708(inited);
    v23 = objc_allocWithZone(MEMORY[0x1E0D46590]);
    v24 = (void *)sub_1CB8467E0();
    swift_bridgeObjectRelease();
    v25 = objc_msgSend(v23, sel_initWithJSONResult_unprivatizedVector_, v24, 0);

    sub_1CB779034(v15, v17);
    result = swift_release();
    v27 = v36;
  }
  else
  {
    sub_1CB78A57C(v6, v7);
    v28 = sub_1CB8466C0();
    v29 = sub_1CB846C90();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v37 = v35;
      *(_DWORD *)v30 = 136315138;
      if (v7)
      {
        if (v7 == 1)
        {
          v31 = 0xE700000000000000;
          v32 = 0x64657070696B73;
        }
        else
        {
          v38 = 0x3A6572756C696166;
          v39 = 0xE900000000000020;
          swift_bridgeObjectRetain();
          sub_1CB846954();
          sub_1CB78A590(v6, v7);
          v32 = v38;
          v31 = v39;
        }
      }
      else
      {
        v32 = 0x73736563637573;
        v31 = 0xE700000000000000;
      }
      v38 = sub_1CB775A54(v32, v31, &v37);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      sub_1CB78A590(v6, v7);
      sub_1CB78A590(v6, v7);
      _os_log_impl(&dword_1CB771000, v28, v29, "SiriUserFeedbackLearningTaskResult: Unable to encode %s to string", v30, 0xCu);
      v33 = v35;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v33, -1, -1);
      MEMORY[0x1D179FE84](v30, -1, -1);
    }
    else
    {
      sub_1CB78A590(v6, v7);
      sub_1CB78A590(v6, v7);
    }

    v27 = v36;
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D46590]), sel_initWithJSONResult_unprivatizedVector_, 0, 0);
    sub_1CB779034(v15, v17);
    result = swift_release();
  }
  *v27 = v6;
  v27[1] = v7;
  v27[2] = (uint64_t)v25;
  v27[3] = 0;
  return result;
}

void SiriUserFeedbackLearningTaskResult.init(mlrTaskResult:error:)(void *a1@<X0>, void *a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char *v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  _QWORD *v54;
  id v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t ErrorValue;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t *v74;
  uint64_t v75;
  void *v76;
  id v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;

  v77 = a2;
  v82 = *MEMORY[0x1E0C80C00];
  v73 = sub_1CB8468D0();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v71 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CB845DE4();
  v70 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v69 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED88E518 != -1)
    swift_once();
  v8 = sub_1CB8466D8();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED890248);
  v10 = a1;
  v11 = v77;
  v12 = v77;
  v13 = v10;
  v14 = v11;
  v75 = v9;
  v15 = sub_1CB8466C0();
  v16 = sub_1CB846C84();
  v17 = os_log_type_enabled(v15, v16);
  v76 = a1;
  if (v17)
  {
    v68 = v6;
    v74 = a3;
    v18 = swift_slowAlloc();
    v19 = (_QWORD *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    *(_QWORD *)&v80 = v20;
    *(_DWORD *)v18 = 136315650;
    *(_QWORD *)&v78 = sub_1CB775A54(0xD00000000000001ALL, 0x80000001CB852A60, (uint64_t *)&v80);
    sub_1CB846E58();
    *(_WORD *)(v18 + 12) = 2112;
    if (a1)
    {
      *(_QWORD *)&v78 = v13;
      v21 = v13;
    }
    else
    {
      *(_QWORD *)&v78 = 0;
    }
    sub_1CB846E58();
    *v19 = v76;

    *(_WORD *)(v18 + 22) = 2112;
    if (v77)
    {
      v44 = v77;
      v45 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v78 = v45;
      sub_1CB846E58();
    }
    else
    {
      *(_QWORD *)&v78 = 0;
      sub_1CB846E58();
      v45 = 0;
    }
    v19[1] = v45;
    v46 = v77;

    _os_log_impl(&dword_1CB771000, v15, v16, "SiriUserFeedbackLearningTaskResult.%s mlrTaskResult: %@, error: %@", (uint8_t *)v18, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v20, -1, -1);
    MEMORY[0x1D179FE84](v18, -1, -1);

    a3 = v74;
    v6 = v68;
    if (!v76)
    {
LABEL_27:
      v47 = v77;
      v48 = v77;
      v49 = v47;
      v50 = v47;
      v51 = sub_1CB8466C0();
      v52 = sub_1CB846C90();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        v54 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v53 = 138412290;
        if (v77)
        {
          v55 = v77;
          v56 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)&v80 = v56;
          sub_1CB846E58();
        }
        else
        {
          *(_QWORD *)&v80 = 0;
          sub_1CB846E58();
          v56 = 0;
        }
        *v54 = v56;
        v58 = v77;

        _os_log_impl(&dword_1CB771000, v51, v52, "SiriUserFeedbackLearningTaskResult: MLR task result is nil, error: %@", v53, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v54, -1, -1);
        MEMORY[0x1D179FE84](v53, -1, -1);
      }
      else
      {
        v57 = v77;

      }
      v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D46590]), sel_initWithJSONResult_unprivatizedVector_, 0, 0);
      *(_QWORD *)&v80 = 0;
      *((_QWORD *)&v80 + 1) = 0xE000000000000000;
      sub_1CB846F30();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v80 = 0xD00000000000001ALL;
      *((_QWORD *)&v80 + 1) = 0x80000001CB8529E0;
      if (v77)
      {
        ErrorValue = swift_getErrorValue();
        v60 = v23;
        v61 = v79;
        v62 = *(_QWORD *)(v79 - 8);
        MEMORY[0x1E0C80A78](ErrorValue);
        v64 = (char *)&v67 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v62 + 16))(v64);
        sub_1CB84729C();
        v65 = v61;
        v23 = v60;
        (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v65);
      }
      sub_1CB846954();
      swift_bridgeObjectRelease();

      goto LABEL_36;
    }
  }
  else
  {

    v22 = v77;
    if (!a1)
      goto LABEL_27;
  }
  v23 = v13;
  v24 = v77;
  v25 = objc_msgSend(v23, sel_JSONResult);
  if (!v25)
  {
    v81 = 0u;
    v80 = 0u;
LABEL_17:
    sub_1CB785B54((uint64_t)&v80, &qword_1ED88E088);
    goto LABEL_18;
  }
  v26 = v25;
  v27 = sub_1CB8467EC();

  if (*(_QWORD *)(v27 + 16) && (v28 = sub_1CB779A70(0x737574617473, 0xE600000000000000), (v29 & 1) != 0))
  {
    sub_1CB778000(*(_QWORD *)(v27 + 56) + 32 * v28, (uint64_t)&v80);
  }
  else
  {
    v81 = 0u;
    v80 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v81 + 1))
    goto LABEL_17;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v80 = v78;
    v30 = v69;
    sub_1CB845DCC();
    sub_1CB78A5E8();
    sub_1CB846E94();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v30, v6);
    swift_bridgeObjectRelease();
    v31 = v71;
    sub_1CB8468C4();
    v32 = sub_1CB8468AC();
    v34 = v33;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v31, v73);
    if (v34 >> 60 != 15)
    {
      sub_1CB845D78();
      swift_allocObject();
      sub_1CB845D6C();
      sub_1CB78A62C();
      sub_1CB845D60();

      swift_release();
      sub_1CB78A670(v32, v34);
LABEL_36:
      v43 = *((_QWORD *)&v80 + 1);
      v42 = v80;
      goto LABEL_37;
    }
  }
LABEL_18:
  v23 = v23;
  v35 = sub_1CB8466C0();
  v36 = sub_1CB846C90();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v38 = (_QWORD *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    *(_QWORD *)&v80 = v39;
    *(_DWORD *)v37 = 138412546;
    *(_QWORD *)&v78 = v23;
    v74 = a3;
    v40 = v23;
    v41 = v23;
    sub_1CB846E58();
    *v38 = v76;

    v23 = v40;
    *(_WORD *)(v37 + 12) = 2080;
    *(_QWORD *)&v78 = sub_1CB775A54(0x737574617473, 0xE600000000000000, (uint64_t *)&v80);
    a3 = v74;
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v35, v36, "SiriUserFeedbackLearningTaskResult: Unable to get json result value from %@ for parameter: \"%s\"", (uint8_t *)v37, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v38, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v39, -1, -1);
    MEMORY[0x1D179FE84](v37, -1, -1);

  }
  else
  {

  }
  v42 = 0xD000000000000026;
  v43 = 0x80000001CB852A00;
LABEL_37:
  *a3 = v42;
  a3[1] = v43;
  v66 = (unint64_t)v77;
  a3[2] = (unint64_t)v23;
  a3[3] = v66;
}

uint64_t static SiriUserFeedbackLearningTaskResult.toPrivateLearningPluginResult(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  if (v4 > 1)
  {
    *a2 = v3;
    a2[1] = v4;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return sub_1CB78A57C(v3, v4);
}

uint64_t sub_1CB78A29C(uint64_t (*a1)(void))
{
  uint64_t result;

  result = a1();
  if (result)
    return _swift_stdlib_bridgeErrorToNSError();
  return result;
}

void sub_1CB78A2C4(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_1CB846E58();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t _s28SiriPrivateLearningAnalytics0a12UserFeedbackC10TaskResultV6StatusO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      v3 = 0;
      v6 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v3 != 1)
  {
    if (v5 >= 2)
    {
      if (v2 == v4 && v3 == v5)
        v6 = 1;
      else
        v6 = sub_1CB8471A0();
      goto LABEL_9;
    }
LABEL_8:
    v6 = 0;
LABEL_9:
    sub_1CB78A57C(v4, v5);
    sub_1CB78A57C(v2, v3);
    goto LABEL_10;
  }
  if (v5 != 1)
    goto LABEL_8;
  v3 = 1;
  v6 = 1;
LABEL_10:
  sub_1CB78A590(v2, v3);
  sub_1CB78A590(v4, v5);
  return v6 & 1;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1CB78A46C()
{
  unint64_t result;

  result = qword_1ED88E160;
  if (!qword_1ED88E160)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB8491B4, &type metadata for SiriUserFeedbackLearningTaskResult.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E160);
  }
  return result;
}

unint64_t sub_1CB78A4B0()
{
  unint64_t result;

  result = qword_1ED88E188;
  if (!qword_1ED88E188)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB849164, &type metadata for SiriUserFeedbackLearningTaskResult.Status.SkippedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E188);
  }
  return result;
}

unint64_t sub_1CB78A4F4()
{
  unint64_t result;

  result = qword_1EF99CCE0;
  if (!qword_1EF99CCE0)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB849114, &type metadata for SiriUserFeedbackLearningTaskResult.Status.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99CCE0);
  }
  return result;
}

unint64_t sub_1CB78A538()
{
  unint64_t result;

  result = qword_1ED88E1A0;
  if (!qword_1ED88E1A0)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB8490C4, &type metadata for SiriUserFeedbackLearningTaskResult.Status.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E1A0);
  }
  return result;
}

uint64_t sub_1CB78A57C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1CB78A590(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1CB78A5A4()
{
  unint64_t result;

  result = qword_1ED88C1C8;
  if (!qword_1ED88C1C8)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriUserFeedbackLearningTaskResult.Status, &type metadata for SiriUserFeedbackLearningTaskResult.Status);
    atomic_store(result, (unint64_t *)&qword_1ED88C1C8);
  }
  return result;
}

unint64_t sub_1CB78A5E8()
{
  unint64_t result;

  result = qword_1ED88E500;
  if (!qword_1ED88E500)
  {
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED88E500);
  }
  return result;
}

unint64_t sub_1CB78A62C()
{
  unint64_t result;

  result = qword_1ED88C1D0;
  if (!qword_1ED88C1D0)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriUserFeedbackLearningTaskResult.Status, &type metadata for SiriUserFeedbackLearningTaskResult.Status);
    atomic_store(result, (unint64_t *)&qword_1ED88C1D0);
  }
  return result;
}

uint64_t sub_1CB78A670(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1CB779034(a1, a2);
  return a1;
}

void destroy for SiriUserFeedbackLearningTaskResult(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) >= 2uLL)
    swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for SiriUserFeedbackLearningTaskResult(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v4 = a2[1];
  if (v4 >= 2)
  {
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = (void *)a2[2];
  v6 = (void *)a2[3];
  a1[2] = v5;
  v7 = v5;
  v8 = v6;
  a1[3] = v6;
  return a1;
}

_QWORD *assignWithCopy for SiriUserFeedbackLearningTaskResult(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v4 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1CB785B54((uint64_t)a1, &qword_1EF99CCF0);
    goto LABEL_6;
  }
  if (v4 < 2)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
LABEL_8:
  v5 = (void *)a2[2];
  v6 = (void *)a1[2];
  a1[2] = v5;
  v7 = v5;

  v8 = (void *)a1[3];
  v9 = (void *)a2[3];
  v10 = v9;
  a1[3] = v9;

  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for SiriUserFeedbackLearningTaskResult(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  void *v5;
  void *v6;

  if (a1[1] >= 2uLL)
  {
    v4 = a2[1];
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1CB785B54((uint64_t)a1, &qword_1EF99CCF0);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  v5 = (void *)a1[2];
  a1[2] = a2[2];

  v6 = (void *)a1[3];
  a1[3] = a2[3];

  return a1;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskResult()
{
  return &type metadata for SiriUserFeedbackLearningTaskResult;
}

unint64_t destroy for SiriUserFeedbackLearningTaskResult.Status(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningTaskResultV6StatusOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for SiriUserFeedbackLearningTaskResult.Status(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SiriUserFeedbackLearningTaskResult.Status(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult.Status(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult.Status(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_1CB78AB24(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1CB78AB3C(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskResult.Status()
{
  return &type metadata for SiriUserFeedbackLearningTaskResult.Status;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult.Status.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult.Status.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CB78AC48 + 4 * byte_1CB848D05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CB78AC7C + 4 * byte_1CB848D00[v4]))();
}

uint64_t sub_1CB78AC7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB78AC84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB78AC8CLL);
  return result;
}

uint64_t sub_1CB78AC98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB78ACA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CB78ACA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB78ACAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1CB78ACB8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskResult.Status.CodingKeys()
{
  return &type metadata for SiriUserFeedbackLearningTaskResult.Status.CodingKeys;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskResult.Status.SuccessCodingKeys()
{
  return &type metadata for SiriUserFeedbackLearningTaskResult.Status.SuccessCodingKeys;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult.Status.FailureCodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult.Status.FailureCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CB78AD74 + 4 * byte_1CB848D0A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CB78AD94 + 4 * byte_1CB848D0F[v4]))();
}

_BYTE *sub_1CB78AD74(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CB78AD94(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CB78AD9C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CB78ADA4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CB78ADAC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CB78ADB4(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1CB78ADC0()
{
  return 0;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskResult.Status.FailureCodingKeys()
{
  return &type metadata for SiriUserFeedbackLearningTaskResult.Status.FailureCodingKeys;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskResult.Status.SkippedCodingKeys()
{
  return &type metadata for SiriUserFeedbackLearningTaskResult.Status.SkippedCodingKeys;
}

unint64_t sub_1CB78ADEC()
{
  unint64_t result;

  result = qword_1EF99CCF8;
  if (!qword_1EF99CCF8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB848F94, &type metadata for SiriUserFeedbackLearningTaskResult.Status.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99CCF8);
  }
  return result;
}

unint64_t sub_1CB78AE34()
{
  unint64_t result;

  result = qword_1EF99CD00;
  if (!qword_1EF99CD00)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84909C, &type metadata for SiriUserFeedbackLearningTaskResult.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99CD00);
  }
  return result;
}

unint64_t sub_1CB78AE7C()
{
  unint64_t result;

  result = qword_1ED88E1B0;
  if (!qword_1ED88E1B0)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB848FBC, &type metadata for SiriUserFeedbackLearningTaskResult.Status.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E1B0);
  }
  return result;
}

unint64_t sub_1CB78AEC4()
{
  unint64_t result;

  result = qword_1ED88E1A8;
  if (!qword_1ED88E1A8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB848FE4, &type metadata for SiriUserFeedbackLearningTaskResult.Status.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E1A8);
  }
  return result;
}

unint64_t sub_1CB78AF0C()
{
  unint64_t result;

  result = qword_1ED88E180;
  if (!qword_1ED88E180)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB848F04, &type metadata for SiriUserFeedbackLearningTaskResult.Status.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E180);
  }
  return result;
}

unint64_t sub_1CB78AF54()
{
  unint64_t result;

  result = qword_1ED88E178;
  if (!qword_1ED88E178)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB848F2C, &type metadata for SiriUserFeedbackLearningTaskResult.Status.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E178);
  }
  return result;
}

unint64_t sub_1CB78AF9C()
{
  unint64_t result;

  result = qword_1ED88E198;
  if (!qword_1ED88E198)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB848EB4, &type metadata for SiriUserFeedbackLearningTaskResult.Status.SkippedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E198);
  }
  return result;
}

unint64_t sub_1CB78AFE4()
{
  unint64_t result;

  result = qword_1ED88E190;
  if (!qword_1ED88E190)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB848EDC, &type metadata for SiriUserFeedbackLearningTaskResult.Status.SkippedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E190);
  }
  return result;
}

unint64_t sub_1CB78B02C()
{
  unint64_t result;

  result = qword_1ED88E170;
  if (!qword_1ED88E170)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84900C, &type metadata for SiriUserFeedbackLearningTaskResult.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E170);
  }
  return result;
}

unint64_t sub_1CB78B074()
{
  unint64_t result;

  result = qword_1ED88E168;
  if (!qword_1ED88E168)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB849034, &type metadata for SiriUserFeedbackLearningTaskResult.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E168);
  }
  return result;
}

unint64_t sub_1CB78B0B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BFB0);
  v3 = (_QWORD *)sub_1CB847068();
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_1CB779AD4(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_DWORD *)v8 - 2);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_1CB779AD4(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1CB78B1B8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  unint64_t result;
  char v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  char v16;
  id v17;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAC8);
  v3 = (_QWORD *)sub_1CB847068();
  v4 = a1[4];
  v5 = (void *)a1[5];
  result = sub_1CB779C18(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v17 = v5;
    return (unint64_t)v3;
  }
  v8 = (void **)(a1 + 7);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v4;
    *(_QWORD *)(v3[7] + v9) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = (uint64_t)*(v8 - 1);
    v14 = *v8;
    v15 = v5;
    result = sub_1CB779C18(v4);
    v8 = v13;
    v5 = v14;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1CB78B2AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CD10);
  v3 = (_QWORD *)sub_1CB847068();
  v4 = *(_DWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  result = sub_1CB779AD4(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v6;
    v10[1] = v5;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *((_DWORD *)v9 - 4);
    v6 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_1CB779AD4(v4);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1CB78B3B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A860);
  v3 = (_QWORD *)sub_1CB847068();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_1CB779D2C(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_1CB779D2C(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1CB78B4B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  unsigned __int8 v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  unsigned __int8 v11[8];
  __int128 v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A8E8);
    v3 = (_QWORD *)sub_1CB847068();
    for (i = a1 + 32; ; i += 48)
    {
      sub_1CB785AC8(i, (uint64_t)v11, qword_1ED88AB40);
      v5 = v11[0];
      result = sub_1CB779D2C(v11[0]);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      result = sub_1CB7780BC(&v12, v3[7] + 40 * result);
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1CB78B5C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  char v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CA90);
    v3 = (_QWORD *)sub_1CB847068();
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      result = sub_1CB779D88(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

uint64_t sub_1CB78B698(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1CB8471A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000 || (sub_1CB8471A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64657070696B73 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

const char *SiriPrivateLearningFeatureFlag.domain.getter()
{
  return "SiriPrivateLearning";
}

uint64_t SiriPrivateLearningFeatureFlag.feature.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1CB78B830 + 4 * aA[*v0]))("AnalyticsEvents", 15);
}

const char *sub_1CB78B830()
{
  return "EntityRestatements";
}

const char *sub_1CB78B870()
{
  return "TMDCRuntimeCorrections";
}

const char *sub_1CB78B87C()
{
  return "TMDCRuntimeLocalStorage";
}

const char *sub_1CB78B890()
{
  return "RECTIFIPatternExtraction";
}

const char *sub_1CB78B8A4()
{
  return "PIMSShadowLogging";
}

const char *sub_1CB78B8D8()
{
  return "PICSAdaptiveSuggestionGeneration";
}

const char *sub_1CB78B8EC()
{
  return "AIMLInstrumentationStreamsTurns";
}

const char *sub_1CB78B914()
{
  return "UniversalUserFeedbackOfflineLearning";
}

const char *sub_1CB78B928()
{
  return "UniversalUserFeedbackSurfacing";
}

BOOL static SiriPrivateLearningFeatureFlag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SiriPrivateLearningFeatureFlag.hash(into:)()
{
  return sub_1CB8472F0();
}

uint64_t SiriPrivateLearningFeatureFlag.hashValue.getter()
{
  sub_1CB8472E4();
  sub_1CB8472F0();
  return sub_1CB847314();
}

unint64_t sub_1CB78B9C0()
{
  unint64_t result;

  result = qword_1EF99CD18;
  if (!qword_1EF99CD18)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriPrivateLearningFeatureFlag, &type metadata for SiriPrivateLearningFeatureFlag);
    atomic_store(result, (unint64_t *)&qword_1EF99CD18);
  }
  return result;
}

const char *sub_1CB78BA04()
{
  return "SiriPrivateLearning";
}

uint64_t sub_1CB78BA18()
{
  return SiriPrivateLearningFeatureFlag.feature.getter();
}

uint64_t getEnumTagSinglePayload for SiriPrivateLearningFeatureFlag(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriPrivateLearningFeatureFlag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1CB78BB0C + 4 * byte_1CB849235[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1CB78BB40 + 4 * byte_1CB849230[v4]))();
}

uint64_t sub_1CB78BB40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB78BB48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB78BB50);
  return result;
}

uint64_t sub_1CB78BB5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB78BB64);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1CB78BB68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB78BB70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SiriPrivateLearningFeatureFlag()
{
  return &type metadata for SiriPrivateLearningFeatureFlag;
}

ValueMetadata *type metadata accessor for BiomeStreamError()
{
  return &type metadata for BiomeStreamError;
}

id ASRLogLinks.rawRecognitionLinkId.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void *ASRLogLinks.postITNLinkID.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

uint64_t ASRFeatureExtractor.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  id v4;
  id v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[6];
  uint64_t v15;
  uint64_t v16;

  v0 = sub_1CB846108();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = swift_allocObject();
  v4 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_1CB8460B4();

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  CurrentLocales.init(deviceLocale:siriPreferences:)((uint64_t)v2, v5, (uint64_t)v14);
  v6 = v14[1];
  v7 = v14[2];
  v8 = v14[3];
  v9 = v14[4];
  v10 = v14[5];
  v11 = v15;
  v12 = v16;
  *(_OWORD *)(v3 + 16) = v14[0];
  *(_OWORD *)(v3 + 32) = v6;
  *(_OWORD *)(v3 + 48) = v7;
  *(_OWORD *)(v3 + 64) = v8;
  *(_OWORD *)(v3 + 80) = v9;
  *(_OWORD *)(v3 + 96) = v10;
  *(_QWORD *)(v3 + 112) = v11;
  *(_QWORD *)(v3 + 120) = v12;
  return v3;
}

uint64_t ASRFeatureExtractor.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[6];
  uint64_t v15;
  uint64_t v16;

  v1 = sub_1CB846108();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_1CB8460B4();

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  CurrentLocales.init(deviceLocale:siriPreferences:)((uint64_t)v3, v5, (uint64_t)v14);
  v6 = v14[1];
  v7 = v14[2];
  v8 = v14[3];
  v9 = v14[4];
  v10 = v14[5];
  v11 = v15;
  v12 = v16;
  *(_OWORD *)(v0 + 16) = v14[0];
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_OWORD *)(v0 + 64) = v8;
  *(_OWORD *)(v0 + 80) = v9;
  *(_OWORD *)(v0 + 96) = v10;
  *(_QWORD *)(v0 + 112) = v11;
  *(_QWORD *)(v0 + 120) = v12;
  return v0;
}

uint64_t sub_1CB78BDBC(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  if ((result & 0x8000000000000000) == 0)
  {
    v3 = result;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v4 = sub_1CB847044();
      result = swift_bridgeObjectRelease();
      if (v4 > v3)
      {
LABEL_4:
        if ((a2 & 0xC000000000000001) != 0)
          return MEMORY[0x1D179F320](v3, a2);
        if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)v3)
          return (uint64_t)*(id *)(a2 + 8 * v3 + 32);
        __break(1u);
        return result;
      }
    }
    else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      goto LABEL_4;
    }
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v5 = sub_1CB8466D8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED890248);
  v6 = sub_1CB8466C0();
  v7 = sub_1CB846C90();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CB771000, v6, v7, "[ASRFeatureExtractor] Error joining recognition tokens by their indices. ", v8, 2u);
    MEMORY[0x1D179FE84](v8, -1, -1);
  }

  sub_1CB78E6EC();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_1CB78BF48(unint64_t a1)
{
  _QWORD *v1;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;

  v3 = (void *)MEMORY[0x1D179F824]();
  v4 = (void *)MEMORY[0x1D179F824]();
  sub_1CB78C020(a1, v1, &v7);
  objc_autoreleasePoolPop(v4);
  v5 = v7;
  swift_bridgeObjectRelease();
  objc_autoreleasePoolPop(v3);
  return v5;
}

uint64_t sub_1CB78BFC4(unint64_t a1)
{
  _QWORD *v1;
  void *v3;
  uint64_t v5;

  v3 = (void *)MEMORY[0x1D179F824]();
  sub_1CB78C020(a1, v1, &v5);
  objc_autoreleasePoolPop(v3);
  return v5;
}

uint64_t sub_1CB78C020@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v3;
  uint64_t p_base_prots;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t i;
  id v32;
  id v33;
  uint64_t j;
  id v35;
  void *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t k;
  id v41;
  void *v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t result;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  void *v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  id v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  _QWORD *v156;
  __int128 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  id v170;

  v6 = a1;
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v157 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1CB847044();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      if (v8 >= 1)
      {
        v3 = 0;
        v9 = v6 & 0xC000000000000001;
        p_base_prots = (uint64_t)&SupportedLocalesPListStore.base_prots;
        v170 = (id)v6;
        while (1)
        {
          v10 = v9 ? (id)MEMORY[0x1D179F320](v3, v6) : *(id *)(v6 + 8 * v3 + 32);
          v11 = v10;
          if (objc_msgSend(v10, *(SEL *)(p_base_prots + 1360)) != 6)
            break;
          v12 = objc_msgSend(v11, sel_payload);
          if (v12)
          {
            v13 = sub_1CB845F94();
            v15 = v14;

            v12 = (id)sub_1CB845F88();
            v16 = v13;
            p_base_prots = 0x1E869F000;
            sub_1CB779034(v16, v15);
          }
          v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A460]), sel_initWithData_, v12);

          if (v17)
          {
            v18 = objc_msgSend(v17, sel_event);

            if (v18)
              goto LABEL_17;
          }

LABEL_6:
          if (v8 == ++v3)
          {
            swift_bridgeObjectRelease();
            v6 = v157;
            v7 = MEMORY[0x1E0DEE9D8];
            goto LABEL_33;
          }
        }
        v18 = v11;
LABEL_17:
        v19 = sub_1CB777FA8(0, (unint64_t *)&unk_1ED88BF28);
        objc_msgSend(v18, *(SEL *)(p_base_prots + 1360));
        v20 = sub_1CB846D80();
        if (v20 && v19 == v20)
        {
          v21 = objc_msgSend(v18, sel_payload);
          if (v21)
          {
            v22 = sub_1CB845F94();
            v23 = v8;
            v24 = v9;
            v26 = v25;

            v27 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            v21 = (id)sub_1CB845F88();
            v28 = v26;
            v9 = v24;
            v8 = v23;
            v6 = (unint64_t)v170;
            sub_1CB779034(v22, v28);
          }
          else
          {
            v27 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
          }
          v29 = objc_msgSend(v27, sel_initWithData_, v21);

          if (v29)
          {
            objc_opt_self();
            v30 = swift_dynamicCastObjCClass();

            if (v30)
            {
              MEMORY[0x1D179EDF8]();
              if (*(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1CB846AA4();
              sub_1CB846AD4();
              sub_1CB846A74();
            }
            else
            {

            }
          }
          else
          {

          }
          p_base_prots = 0x1E869F000;
        }
        else
        {

        }
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_145;
    }
  }
  swift_bridgeObjectRelease();
  v6 = MEMORY[0x1E0DEE9D8];
LABEL_33:
  *(_QWORD *)&v157 = v7;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1CB847044();
    if (v5)
      goto LABEL_35;
LABEL_47:
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x1E0DEE9D8];
    goto LABEL_48;
  }
  v5 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_47;
LABEL_35:
  if (v5 < 1)
  {
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
      v32 = (id)MEMORY[0x1D179F320](i, v6);
    else
      v32 = *(id *)(v6 + 8 * i + 32);
    v7 = (uint64_t)v32;
    v33 = objc_msgSend(v32, sel_packageGenerated);

    if (v33)
    {
      MEMORY[0x1D179EDF8]();
      if (*(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1CB846AA4();
      sub_1CB846AD4();
      v7 = (uint64_t)&v157;
      sub_1CB846A74();
    }
  }
  swift_bridgeObjectRelease();
  v3 = v157;
LABEL_48:
  *(_QWORD *)&v157 = MEMORY[0x1E0DEE9D8];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    p_base_prots = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (p_base_prots)
      goto LABEL_50;
  }
  else
  {
    p_base_prots = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (p_base_prots)
    {
LABEL_50:
      if (p_base_prots < 1)
      {
LABEL_146:
        __break(1u);
        goto LABEL_147;
      }
      v170 = (id)v5;
      for (j = 0; j != p_base_prots; ++j)
      {
        if ((v3 & 0xC000000000000001) != 0)
          v35 = (id)MEMORY[0x1D179F320](j, v3);
        else
          v35 = *(id *)(v3 + 8 * j + 32);
        v36 = v35;
        if (objc_msgSend(v35, sel_isFinal))
        {
          sub_1CB846FB4();
          sub_1CB846FD8();
          sub_1CB846FE4();
          sub_1CB846FC0();
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v37 = (uint64_t *)v157;
      v5 = (uint64_t)v170;
      goto LABEL_62;
    }
  }
  swift_bridgeObjectRelease();
  v37 = (uint64_t *)MEMORY[0x1E0DEE9D8];
LABEL_62:
  if (qword_1ED88E518 != -1)
    swift_once();
  v38 = sub_1CB8466D8();
  __swift_project_value_buffer(v38, (uint64_t)qword_1ED890248);
  swift_retain_n();
  v7 = sub_1CB8466C0();
  LOBYTE(v3) = sub_1CB846C78();
  v141 = (unint64_t)v37;
  if (!os_log_type_enabled((os_log_t)v7, (os_log_type_t)v3))
  {

    swift_release_n();
    goto LABEL_70;
  }
  p_base_prots = swift_slowAlloc();
  *(_DWORD *)p_base_prots = 134217984;
  if (((unint64_t)v37 & 0x8000000000000000) != 0 || ((unint64_t)v37 & 0x4000000000000000) != 0)
    goto LABEL_149;
  v39 = v37[2];
  while (1)
  {
    swift_release();
    *(_QWORD *)&v157 = v39;
    sub_1CB846E58();
    swift_release();
    _os_log_impl(&dword_1CB771000, (os_log_t)v7, (os_log_type_t)v3, "[ASRFeatureExtractor] ASR final package events count: %ld", (uint8_t *)p_base_prots, 0xCu);
    MEMORY[0x1D179FE84](p_base_prots, -1, -1);

LABEL_70:
    v3 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v157 = MEMORY[0x1E0DEE9D8];
    if (v5)
    {
      if (v5 < 1)
      {
LABEL_147:
        __break(1u);
        goto LABEL_148;
      }
      swift_bridgeObjectRetain();
      for (k = 0; k != v5; ++k)
      {
        if ((v6 & 0xC000000000000001) != 0)
          v41 = (id)MEMORY[0x1D179F320](k, v6);
        else
          v41 = *(id *)(v6 + 8 * k + 32);
        v42 = v41;
        v43 = objc_msgSend(v41, sel_recognitionResultTier1);

        if (v43)
        {
          MEMORY[0x1D179EDF8]();
          p_base_prots = *(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if ((unint64_t)p_base_prots >= *(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      swift_bridgeObjectRelease();
      v3 = v157;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    v44 = sub_1CB8466C0();
    v45 = sub_1CB846C78();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v46 = 134217984;
      if (v3 >> 62)
      {
        swift_bridgeObjectRetain();
        v47 = sub_1CB847044();
        swift_bridgeObjectRelease();
      }
      else
      {
        v47 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)&v157 = v47;
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v44, v45, "[ASRFeatureExtractor] ASR recognition events count: %ld", v46, 0xCu);
      MEMORY[0x1D179FE84](v46, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v6 = v141;
    if ((v141 & 0x8000000000000000) != 0 || (v141 & 0x4000000000000000) != 0)
      break;
    v7 = *(_QWORD *)(v141 + 16);
    if (!v7)
      goto LABEL_142;
LABEL_90:
    if (v7 >= 1)
    {
      v48 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v49 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v144 = v3;
      v140 = v7;
      v50 = 0;
      while (1)
      {
        v152 = v50;
        v51 = v3;
        if ((v141 & 0xC000000000000001) != 0)
          v52 = (id)MEMORY[0x1D179F320](v50, v6);
        else
          v52 = *(id *)(v6 + 8 * v50 + 32);
        v53 = v52;
        v54 = objc_msgSend(v52, sel_package);
        v55 = objc_msgSend(v54, sel_postItn);

        v56 = objc_msgSend(v55, sel_linkId);
        v170 = v53;
        v57 = objc_msgSend(v53, sel_package);
        v58 = objc_msgSend(v57, sel_rawRecognition);

        v59 = objc_msgSend(v58, sel_linkId);
        v60 = v59;
        v150 = v56;
        v151 = v60;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v48 = sub_1CB78F74C(0, v48[2] + 1, 1, v48);
        v62 = v48[2];
        v61 = v48[3];
        if (v62 >= v61 >> 1)
          v48 = sub_1CB78F74C((_QWORD *)(v61 > 1), v62 + 1, 1, v48);
        v48[2] = v62 + 1;
        v63 = &v48[2 * v62];
        v148 = v59;
        v63[4] = v59;
        v63[5] = v56;
        v64 = v170;
        v65 = objc_msgSend(v170, sel_package);
        v66 = objc_msgSend(v65, sel_postItn);

        v67 = (void *)sub_1CB78DB90(v66);
        swift_bridgeObjectRelease();
        v68 = objc_msgSend(v64, sel_package);
        v69 = objc_msgSend(v68, sel_rawRecognition);

        v146 = (void *)sub_1CB78DB90(v69);
        v71 = v70;

        v3 = v51;
        v72 = sub_1CB78E1DC(v51, v56, v67);
        v74 = v73;
        swift_bridgeObjectRelease();
        v153 = v71;
        v154 = v48;
        if (*(_QWORD *)(v72 + 16))
        {
          v75 = type metadata accessor for ASRBestPostITNUtterance(0);
          v76 = swift_allocObject();
          *(_QWORD *)(v76 + 16) = v72;
          swift_bridgeObjectRetain();
          v143 = v74;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v49 = sub_1CB78F738(0, v49[2] + 1, 1, v49);
          v78 = v49[2];
          v77 = v49[3];
          if (v78 >= v77 >> 1)
            v49 = sub_1CB78F738((_QWORD *)(v77 > 1), v78 + 1, 1, v49);
          v159 = v75;
          v160 = sub_1CB78E6AC(&qword_1EF99D2B8, type metadata accessor for ASRBestPostITNUtterance);
          v155 = v49;
          *(_QWORD *)&v157 = v76;
          v49[2] = v78 + 1;
          sub_1CB7780BC(&v157, (uint64_t)&v49[5 * v78 + 4]);
          v79 = sub_1CB8466C0();
          v80 = sub_1CB846C90();
          if (os_log_type_enabled(v79, v80))
          {
            v81 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v81 = 0;
            _os_log_impl(&dword_1CB771000, v79, v80, "[ASRFeatureExtractor] Attempting to trim wake words for ASRBestPostITNUtterance...", v81, 2u);
            MEMORY[0x1D179FE84](v81, -1, -1);
          }

          v82 = a2[3];
          v83 = a2[4];
          v84 = a2[5];
          v85 = a2[6];
          v86 = a2[7];
          v87 = a2[8];
          v88 = a2[9];
          v89 = a2[10];
          v90 = a2[11];
          v91 = a2[12];
          v92 = a2[13];
          v93 = a2[14];
          v94 = a2[15];
          *(_QWORD *)&v157 = a2[2];
          *((_QWORD *)&v157 + 1) = v82;
          v158 = v83;
          v159 = v84;
          v160 = v85;
          v161 = v86;
          v162 = v87;
          v163 = v88;
          v164 = v89;
          v165 = v90;
          v166 = v91;
          v167 = v92;
          v168 = v93;
          v169 = v94;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v142 = WakeWordTrimmer.trim(tokens:)(v72);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v95 = type metadata accessor for ASRBestPostITNTrimmedUtterance(0);
          v96 = swift_allocObject();
          *(_QWORD *)(v96 + 16) = v142;
          v49 = v155;
          v98 = v155[2];
          v97 = v155[3];
          if (v98 >= v97 >> 1)
            v49 = sub_1CB78F738((_QWORD *)(v97 > 1), v98 + 1, 1, v155);
          v3 = v144;
          v71 = v153;
          v48 = v154;
          v159 = v95;
          v160 = sub_1CB78E6AC(&qword_1EF99D2C0, type metadata accessor for ASRBestPostITNTrimmedUtterance);
          *(_QWORD *)&v157 = v96;
          v49[2] = v98 + 1;
          sub_1CB7780BC(&v157, (uint64_t)&v49[5 * v98 + 4]);
          v74 = v143;
          if (!*(_QWORD *)(v143 + 16))
          {
LABEL_117:
            swift_bridgeObjectRelease();
            goto LABEL_118;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          if (!*(_QWORD *)(v74 + 16))
            goto LABEL_117;
        }
        v99 = type metadata accessor for ASRBestPostITNPhonemes(0);
        v100 = swift_allocObject();
        *(_QWORD *)(v100 + 16) = v74;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v49 = sub_1CB78F738(0, v49[2] + 1, 1, v49);
        v102 = v49[2];
        v101 = v49[3];
        if (v102 >= v101 >> 1)
          v49 = sub_1CB78F738((_QWORD *)(v101 > 1), v102 + 1, 1, v49);
        v159 = v99;
        v160 = sub_1CB78E6AC(&qword_1EF99D2C8, type metadata accessor for ASRBestPostITNPhonemes);
        *(_QWORD *)&v157 = v100;
        v49[2] = v102 + 1;
        sub_1CB7780BC(&v157, (uint64_t)&v49[5 * v102 + 4]);
LABEL_118:
        v103 = sub_1CB78E1DC(v3, v148, v146);
        v105 = v104;
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v103 + 16))
        {
          v106 = type metadata accessor for ASRBestRawRecognitionUtterance(0);
          v107 = swift_allocObject();
          *(_QWORD *)(v107 + 16) = v103;
          swift_bridgeObjectRetain();
          v149 = v105;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v49 = sub_1CB78F738(0, v49[2] + 1, 1, v49);
          v109 = v49[2];
          v108 = v49[3];
          if (v109 >= v108 >> 1)
            v49 = sub_1CB78F738((_QWORD *)(v108 > 1), v109 + 1, 1, v49);
          v159 = v106;
          v160 = sub_1CB78E6AC(&qword_1EF99D2D0, type metadata accessor for ASRBestRawRecognitionUtterance);
          v156 = v49;
          *(_QWORD *)&v157 = v107;
          v49[2] = v109 + 1;
          sub_1CB7780BC(&v157, (uint64_t)&v49[5 * v109 + 4]);
          v110 = sub_1CB8466C0();
          v111 = sub_1CB846C90();
          if (os_log_type_enabled(v110, v111))
          {
            v112 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v112 = 0;
            _os_log_impl(&dword_1CB771000, v110, v111, "[ASRFeatureExtractor] Attempting to trim wake words for ASRBestRawRecognitionUtterance...", v112, 2u);
            MEMORY[0x1D179FE84](v112, -1, -1);
          }

          v113 = a2[3];
          v114 = a2[4];
          v115 = a2[5];
          v116 = a2[6];
          v117 = a2[7];
          v118 = a2[8];
          v119 = a2[9];
          v120 = a2[10];
          v121 = a2[11];
          v122 = a2[12];
          v123 = a2[13];
          v124 = a2[14];
          v125 = a2[15];
          *(_QWORD *)&v157 = a2[2];
          *((_QWORD *)&v157 + 1) = v113;
          v158 = v114;
          v159 = v115;
          v160 = v116;
          v161 = v117;
          v162 = v118;
          v163 = v119;
          v164 = v120;
          v165 = v121;
          v166 = v122;
          v167 = v123;
          v168 = v124;
          v169 = v125;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v147 = WakeWordTrimmer.trim(tokens:)(v103);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v126 = type metadata accessor for ASRBestRawRecognitionTrimmedUtterance(0);
          v127 = swift_allocObject();
          *(_QWORD *)(v127 + 16) = v147;
          v49 = v156;
          v129 = v156[2];
          v128 = v156[3];
          if (v129 >= v128 >> 1)
            v49 = sub_1CB78F738((_QWORD *)(v128 > 1), v129 + 1, 1, v156);
          v3 = v144;
          v71 = v153;
          v48 = v154;
          v159 = v126;
          v160 = sub_1CB78E6AC(&qword_1EF99D2D8, type metadata accessor for ASRBestRawRecognitionTrimmedUtterance);
          *(_QWORD *)&v157 = v127;
          v49[2] = v129 + 1;
          sub_1CB7780BC(&v157, (uint64_t)&v49[5 * v129 + 4]);
          v105 = v149;
          if (!*(_QWORD *)(v149 + 16))
          {
LABEL_135:
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v71 + 16))
              goto LABEL_136;
            goto LABEL_92;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          if (!*(_QWORD *)(v105 + 16))
            goto LABEL_135;
        }
        v130 = type metadata accessor for ASRBestRawRecognitionPhonemes(0);
        v131 = swift_allocObject();
        *(_QWORD *)(v131 + 16) = v105;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v49 = sub_1CB78F738(0, v49[2] + 1, 1, v49);
        v133 = v49[2];
        v132 = v49[3];
        if (v133 >= v132 >> 1)
          v49 = sub_1CB78F738((_QWORD *)(v132 > 1), v133 + 1, 1, v49);
        v159 = v130;
        v160 = sub_1CB78E6AC(&qword_1EF99D2E0, type metadata accessor for ASRBestRawRecognitionPhonemes);
        *(_QWORD *)&v157 = v131;
        v49[2] = v133 + 1;
        sub_1CB7780BC(&v157, (uint64_t)&v49[5 * v133 + 4]);
        if (*(_QWORD *)(v71 + 16))
        {
LABEL_136:
          v134 = type metadata accessor for ASRBestRawRecognitionConfidence(0);
          v135 = swift_allocObject();
          *(_QWORD *)(v135 + 16) = v71;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v49 = sub_1CB78F738(0, v49[2] + 1, 1, v49);
          v137 = v49[2];
          v136 = v49[3];
          if (v137 >= v136 >> 1)
            v49 = sub_1CB78F738((_QWORD *)(v136 > 1), v137 + 1, 1, v49);
          v159 = v134;
          v160 = sub_1CB78E6AC(&qword_1EF99D2E8, type metadata accessor for ASRBestRawRecognitionConfidence);
          *(_QWORD *)&v157 = v135;
          v49[2] = v137 + 1;
          sub_1CB7780BC(&v157, (uint64_t)&v49[5 * v137 + 4]);
          goto LABEL_93;
        }
LABEL_92:
        swift_bridgeObjectRelease();
LABEL_93:
        v50 = v152 + 1;

        v6 = v141;
        if (v140 == v152 + 1)
          goto LABEL_143;
      }
    }
LABEL_148:
    __break(1u);
LABEL_149:
    swift_bridgeObjectRetain();
    v39 = sub_1CB847044();
    swift_release();
  }
  swift_bridgeObjectRetain();
  v7 = sub_1CB847044();
  swift_release();
  if (v7)
    goto LABEL_90;
LABEL_142:
  v48 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v49 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_143:
  swift_bridgeObjectRelease();
  result = swift_release();
  *a3 = v49;
  a3[1] = v48;
  return result;
}

uint64_t ASRBestPostITNPhonemes.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

{
  return sub_1CB78D6E0(a1, &qword_1EF99CD20);
}

uint64_t ASRFeatureExtractor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ASRFeatureExtractor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CB78D47C(unint64_t *a1)
{
  return sub_1CB78BF48(*a1);
}

uint64_t ASRBestPostITNUtterance.__allocating_init(value:)(uint64_t a1)
{
  return sub_1CB78D6E0(a1, &qword_1EF99CD20);
}

uint64_t ASRBestPostITNUtterance.init(value:)(uint64_t a1)
{
  return sub_1CB78D75C(a1, &qword_1EF99CD20);
}

uint64_t sub_1CB78D4BC(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for ASRBestPostITNUtterance);
}

uint64_t sub_1CB78D4C8(uint64_t *a1)
{
  return sub_1CB78D54C(a1, (void (*)(_QWORD))type metadata accessor for ASRBestPostITNUtterance, &qword_1EF99CD20);
}

uint64_t ASRBestPostITNTrimmedUtterance.__allocating_init(value:)(uint64_t a1)
{
  return sub_1CB78D6E0(a1, &qword_1EF99CD20);
}

uint64_t ASRBestPostITNTrimmedUtterance.init(value:)(uint64_t a1)
{
  return sub_1CB78D75C(a1, &qword_1EF99CD20);
}

uint64_t sub_1CB78D4F8(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for ASRBestPostITNTrimmedUtterance);
}

uint64_t sub_1CB78D504(uint64_t *a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  a2(0);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  return result;
}

uint64_t sub_1CB78D538(uint64_t *a1)
{
  return sub_1CB78D54C(a1, (void (*)(_QWORD))type metadata accessor for ASRBestPostITNTrimmedUtterance, &qword_1EF99CD20);
}

uint64_t sub_1CB78D54C(uint64_t *a1, void (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  a2(0);
  v5 = swift_allocObject();
  v6 = v5;
  if (v4)
  {
    *(_QWORD *)(v5 + 16) = v4;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v6;
}

uint64_t ASRBestPostITNPhonemes.init(value:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

{
  return sub_1CB78D75C(a1, &qword_1EF99CD20);
}

uint64_t ASRBestPostITNPhonemes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB78D600(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for ASRBestPostITNPhonemes);
}

uint64_t sub_1CB78D60C(uint64_t *a1)
{
  return sub_1CB78D54C(a1, (void (*)(_QWORD))type metadata accessor for ASRBestPostITNPhonemes, &qword_1EF99CD20);
}

uint64_t ASRBestRawRecognitionUtterance.__allocating_init(value:)(uint64_t a1)
{
  return sub_1CB78D6E0(a1, &qword_1EF99CD20);
}

uint64_t ASRBestRawRecognitionUtterance.init(value:)(uint64_t a1)
{
  return sub_1CB78D75C(a1, &qword_1EF99CD20);
}

uint64_t sub_1CB78D63C(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for ASRBestRawRecognitionUtterance);
}

uint64_t sub_1CB78D648(uint64_t *a1)
{
  return sub_1CB78D54C(a1, (void (*)(_QWORD))type metadata accessor for ASRBestRawRecognitionUtterance, &qword_1EF99CD20);
}

uint64_t ASRBestRawRecognitionTrimmedUtterance.__allocating_init(value:)(uint64_t a1)
{
  return sub_1CB78D6E0(a1, &qword_1EF99CD20);
}

uint64_t ASRBestRawRecognitionTrimmedUtterance.init(value:)(uint64_t a1)
{
  return sub_1CB78D75C(a1, &qword_1EF99CD20);
}

uint64_t sub_1CB78D678(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for ASRBestRawRecognitionTrimmedUtterance);
}

uint64_t sub_1CB78D684(uint64_t *a1)
{
  return sub_1CB78D54C(a1, (void (*)(_QWORD))type metadata accessor for ASRBestRawRecognitionTrimmedUtterance, &qword_1EF99CD20);
}

uint64_t ASRBestRawRecognitionPhonemes.__allocating_init(value:)(uint64_t a1)
{
  return sub_1CB78D6E0(a1, &qword_1EF99CD20);
}

uint64_t ASRBestRawRecognitionPhonemes.init(value:)(uint64_t a1)
{
  return sub_1CB78D75C(a1, &qword_1EF99CD20);
}

uint64_t sub_1CB78D6B4(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for ASRBestRawRecognitionPhonemes);
}

uint64_t sub_1CB78D6C0(uint64_t *a1)
{
  return sub_1CB78D54C(a1, (void (*)(_QWORD))type metadata accessor for ASRBestRawRecognitionPhonemes, &qword_1EF99CD20);
}

uint64_t ASRBestRawRecognitionConfidence.__allocating_init(value:)(uint64_t a1)
{
  return sub_1CB78D6E0(a1, &qword_1EF99CD28);
}

uint64_t sub_1CB78D6E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  v5 = v4;
  if (a1)
  {
    *(_QWORD *)(v4 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t ASRBestRawRecognitionConfidence.init(value:)(uint64_t a1)
{
  return sub_1CB78D75C(a1, &qword_1EF99CD28);
}

uint64_t sub_1CB78D75C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  if (a1)
  {
    *(_QWORD *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v2;
}

_QWORD *initializeBufferWithCopyOfBuffer for ASRLogLinks(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for ASRLogLinks(id *a1)
{

}

uint64_t assignWithCopy for ASRLogLinks(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for ASRLogLinks(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ASRLogLinks(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASRLogLinks(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASRLogLinks()
{
  return &type metadata for ASRLogLinks;
}

uint64_t type metadata accessor for ASRFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for ASRFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ASRFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ASRFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t type metadata accessor for ASRBestPostITNUtterance(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED88BD88);
}

uint64_t type metadata accessor for ASRBestPostITNTrimmedUtterance(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99CD70);
}

uint64_t type metadata accessor for ASRBestPostITNPhonemes(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99CE58);
}

uint64_t type metadata accessor for ASRBestRawRecognitionUtterance(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99CF40);
}

uint64_t type metadata accessor for ASRBestRawRecognitionTrimmedUtterance(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99D028);
}

uint64_t type metadata accessor for ASRBestRawRecognitionPhonemes(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99D110);
}

uint64_t type metadata accessor for ASRBestRawRecognitionConfidence(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99D1F8);
}

uint64_t sub_1CB78DA28(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CB78DA5C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1CB78DA90(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for ASRBestRawRecognitionConfidence);
}

uint64_t sub_1CB78DA9C(uint64_t *a1)
{
  return sub_1CB78D54C(a1, (void (*)(_QWORD))type metadata accessor for ASRBestRawRecognitionConfidence, &qword_1EF99CD28);
}

uint64_t sub_1CB78DAB0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t *i;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1CB846FCC();
    for (i = (uint64_t *)(a1 + 32); ; ++i)
    {
      if (a2)
      {
        sub_1CB78BDBC(*i, a2);
        if (v2)
          break;
      }
      sub_1CB846FB4();
      sub_1CB846FD8();
      sub_1CB846FE4();
      sub_1CB846FC0();
      if (!--v4)
        return v8;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1CB78DB90(void *a1)
{
  id *v1;
  unint64_t v2;
  uint64_t v3;
  id *v5;
  unint64_t v6;
  id v7;
  void *v8;
  id *v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __objc2_prot_list **p_base_prots;
  id *v16;
  id *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  id *v23;
  id v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  id *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  unsigned int v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  signed int v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  id *v58;
  id *v59;
  _QWORD v60[2];
  uint64_t v61;

  v3 = MEMORY[0x1E0DEE9D8];
  v60[1] = MEMORY[0x1E0DEE9D8];
  v61 = MEMORY[0x1E0DEE9D8];
  if (a1)
  {
    v5 = (id *)objc_msgSend(a1, sel_utterances);
    if (v5)
    {
      v1 = v5;
      sub_1CB777FA8(0, &qword_1EF99D320);
      v6 = sub_1CB846A5C();

    }
    else
    {
      v6 = MEMORY[0x1E0DEE9D8];
    }
    v7 = objc_msgSend(a1, sel_phrases);
    if (v7)
    {
      v8 = v7;
      sub_1CB777FA8(0, &qword_1EF99D318);
      v3 = sub_1CB846A5C();

    }
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
  }
  if (v6 >> 62)
    goto LABEL_65;
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        v9 = (id *)MEMORY[0x1D179F320](0, v6);
      }
      else
      {
        if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_69:
          swift_bridgeObjectRetain();
          v12 = sub_1CB847044();
          swift_bridgeObjectRelease();
          if (!v12)
          {
LABEL_70:

            swift_bridgeObjectRelease();
            v46 = MEMORY[0x1E0DEE9D8];
            goto LABEL_71;
          }
          goto LABEL_17;
        }
        v9 = (id *)*(id *)(v6 + 32);
      }
      v1 = v9;
      swift_bridgeObjectRelease();
      v10 = objc_msgSend(v1, sel_interpretationIndices);
      v2 = MEMORY[0x1E0DEE9D8];
      if (v10)
      {
        v11 = v10;
        sub_1CB777FA8(0, (unint64_t *)&qword_1ED88DE40);
        v2 = sub_1CB846A5C();

      }
      if (v2 >> 62)
        goto LABEL_69;
      v12 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v12)
        goto LABEL_70;
LABEL_17:
      v48 = v1;
      v49 = v12;
      v6 = 0;
      v13 = v2 & 0xC000000000000001;
      v14 = v3 & 0xC000000000000001;
      v54 = v2 + 32;
      v55 = v2 & 0xFFFFFFFFFFFFFF8;
      v52 = v3 + 32;
      v53 = v3 & 0xFFFFFFFFFFFFFF8;
      p_base_prots = &SupportedLocalesPListStore.base_prots;
      v56 = v3 & 0xC000000000000001;
      v57 = v2 & 0xC000000000000001;
      v50 = v2;
      v51 = v3;
      while (1)
      {
        if (v13)
        {
          v16 = (id *)MEMORY[0x1D179F320](v6, v2);
        }
        else
        {
          if (v6 >= *(_QWORD *)(v55 + 16))
            goto LABEL_62;
          v16 = (id *)*(id *)(v54 + 8 * v6);
        }
        v59 = v16;
        v17 = (id *)(v6 + 1);
        if (__OFADD__(v6, 1))
          break;
        if (v14)
        {
          v18 = (id)MEMORY[0x1D179F320](v6, v3);
        }
        else
        {
          if (v6 >= *(_QWORD *)(v53 + 16))
            goto LABEL_63;
          v18 = *(id *)(v52 + 8 * v6);
        }
        v19 = v18;
        v20 = objc_msgSend(v18, (SEL)p_base_prots[185], v48);

        if (v20)
        {
          sub_1CB777FA8(0, &qword_1EF99D308);
          v21 = sub_1CB846A5C();

          v6 = (unint64_t)v59;
          v22 = (unint64_t)objc_msgSend(v59, sel_integerValue);
          if ((v21 & 0xC000000000000001) != 0)
          {
            v23 = (id *)MEMORY[0x1D179F320](v22, v21);
          }
          else
          {
            if ((v22 & 0x8000000000000000) != 0)
              goto LABEL_60;
            if (v22 >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_61;
            v23 = (id *)*(id *)(v21 + 8 * v22 + 32);
          }
          v1 = v23;
          swift_bridgeObjectRelease();
          v24 = objc_msgSend(v1, sel_tokens);
          if (v24)
          {
            v25 = v24;
            v58 = v1;
            sub_1CB777FA8(0, &qword_1EF99D310);
            v26 = sub_1CB846A5C();

            if (v26 >> 62)
            {
              swift_bridgeObjectRetain();
              v27 = sub_1CB847044();
              swift_bridgeObjectRelease();
              v28 = v1;
              if (!v27)
                goto LABEL_55;
LABEL_37:
              v60[0] = MEMORY[0x1E0DEE9D8];
              v6 = (unint64_t)v60;
              sub_1CB776384(0, v27 & ~(v27 >> 63), 0);
              if (v27 < 0)
                goto LABEL_64;
              v29 = 0;
              v30 = v60[0];
              v31 = v26 & 0xC000000000000001;
              do
              {
                if (v31)
                  v32 = (id)MEMORY[0x1D179F320](v29, v26);
                else
                  v32 = *(id *)(v26 + 8 * v29 + 32);
                v33 = v32;
                v34 = objc_msgSend(v32, sel_linkIndex);

                v60[0] = v30;
                v36 = *(_QWORD *)(v30 + 16);
                v35 = *(_QWORD *)(v30 + 24);
                if (v36 >= v35 >> 1)
                {
                  sub_1CB776384(v35 > 1, v36 + 1, 1);
                  v30 = v60[0];
                }
                ++v29;
                *(_QWORD *)(v30 + 16) = v36 + 1;
                *(_QWORD *)(v30 + 8 * v36 + 32) = v34;
              }
              while (v27 != v29);
              sub_1CB7F0AA4(v30);
              v60[0] = MEMORY[0x1E0DEE9D8];
              sub_1CB776360(0, v27 & ~(v27 >> 63), 0);
              v37 = 0;
              v38 = v60[0];
              do
              {
                if (v31)
                  v39 = (id)MEMORY[0x1D179F320](v37, v26);
                else
                  v39 = *(id *)(v26 + 8 * v37 + 32);
                v40 = v39;
                v41 = objc_msgSend(v39, sel_confidence);

                v60[0] = v38;
                v43 = *(_QWORD *)(v38 + 16);
                v42 = *(_QWORD *)(v38 + 24);
                if (v43 >= v42 >> 1)
                {
                  sub_1CB776360(v42 > 1, v43 + 1, 1);
                  v38 = v60[0];
                }
                ++v37;
                *(_QWORD *)(v38 + 16) = v43 + 1;
                *(_QWORD *)(v38 + 8 * v43 + 32) = v41;
              }
              while (v27 != v37);
              swift_bridgeObjectRelease();
              v2 = v50;
              v3 = v51;
              v12 = v49;
              v28 = v58;
            }
            else
            {
              v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
              v28 = v1;
              if (v27)
                goto LABEL_37;
LABEL_55:
              v38 = MEMORY[0x1E0DEE9D8];
              sub_1CB7F0AA4(MEMORY[0x1E0DEE9D8]);
              swift_bridgeObjectRelease();
            }
            sub_1CB7F0BEC(v38);
            v1 = v59;
            v6 = (unint64_t)v28;
            v14 = v56;
            v13 = v57;
            p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
          }

          goto LABEL_19;
        }
        v6 = (unint64_t)v59;
LABEL_19:

        v6 = (unint64_t)v17;
        if (v17 == (id *)v12)
        {

          swift_bridgeObjectRelease();
          v44 = v61;
          goto LABEL_72;
        }
      }
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      swift_bridgeObjectRetain();
      v45 = sub_1CB847044();
      swift_bridgeObjectRelease();
    }
    while (v45);
  }
  swift_bridgeObjectRelease();
  v46 = MEMORY[0x1E0DEE9D8];
LABEL_71:
  v44 = v46;
LABEL_72:
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_1CB78E1DC(unint64_t a1, void *a2, id a3)
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v47;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  if (!a2)
    return MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2;
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_4;
LABEL_37:

    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_36:
  v45 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1CB847044();
  if (!v5)
    goto LABEL_37;
LABEL_4:
  v47 = (uint64_t)a3;
  v7 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v8 = (id)MEMORY[0x1D179F320](v7 - 4, a1);
    else
      v8 = *(id *)(a1 + 8 * v7);
    v9 = v8;
    v10 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    v11 = objc_msgSend(v8, sel_linkId);
    if (v11)
    {
      v12 = v11;
      sub_1CB777FA8(0, &qword_1EF99D2F0);
      v13 = a2;
      a3 = v12;
      LOBYTE(v12) = sub_1CB846E10();

      if ((v12 & 1) != 0)
        break;
    }

    ++v7;
    if (v10 == v5)
      goto LABEL_37;
  }
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v9, sel_tokens);
  if (v14)
  {
    v15 = v14;
    sub_1CB777FA8(0, &qword_1EF99D2F8);
    v16 = sub_1CB846A5C();

  }
  else
  {
    v16 = 0;
  }
  swift_bridgeObjectRetain();
  v18 = sub_1CB78DAB0(v47, v16);
  swift_bridgeObjectRelease_n();
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
  {
    swift_bridgeObjectRelease();

    return MEMORY[0x1E0DEE9D8];
  }
  v50 = MEMORY[0x1E0DEE9D8];
  sub_1CB776040(0, v19, 0);
  v20 = 0;
  v17 = v50;
  v49 = v19;
  do
  {
    v21 = v18;
    v22 = *(void **)(v18 + 8 * v20 + 32);
    if (v22 && (v23 = v22, (v24 = objc_msgSend(v23, sel_text)) != 0))
    {
      v25 = v24;
      v26 = sub_1CB8468A0();
      v28 = v27;

    }
    else
    {

      v26 = 0;
      v28 = 0xE000000000000000;
    }
    v30 = *(_QWORD *)(v50 + 16);
    v29 = *(_QWORD *)(v50 + 24);
    if (v30 >= v29 >> 1)
      sub_1CB776040(v29 > 1, v30 + 1, 1);
    ++v20;
    *(_QWORD *)(v50 + 16) = v30 + 1;
    v31 = v50 + 16 * v30;
    *(_QWORD *)(v31 + 32) = v26;
    *(_QWORD *)(v31 + 40) = v28;
    v18 = v21;
  }
  while (v49 != v20);
  v51 = MEMORY[0x1E0DEE9D8];
  sub_1CB776040(0, v49, 0);
  v32 = 0;
  v33 = v51;
  do
  {
    v34 = v33;
    v35 = *(void **)(v18 + 8 * v32 + 32);
    if (v35
      && (v36 = v35, (v37 = objc_msgSend(v36, sel_phoneSequence)) != 0))
    {
      v38 = v37;
      v39 = sub_1CB8468A0();
      v41 = v40;

    }
    else
    {

      v39 = 0;
      v41 = 0xE000000000000000;
    }
    v33 = v34;
    v52 = v34;
    v42 = *(_QWORD *)(v34 + 16);
    v43 = *(_QWORD *)(v33 + 24);
    if (v42 >= v43 >> 1)
    {
      sub_1CB776040(v43 > 1, v42 + 1, 1);
      v33 = v52;
    }
    ++v32;
    *(_QWORD *)(v33 + 16) = v42 + 1;
    v44 = v33 + 16 * v42;
    *(_QWORD *)(v44 + 32) = v39;
    *(_QWORD *)(v44 + 40) = v41;
    v18 = v21;
  }
  while (v49 != v32);
  swift_bridgeObjectRelease();

  return v17;
}

uint64_t sub_1CB78E6AC(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for TypedNamedFeature<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CB78E6EC()
{
  unint64_t result;

  result = qword_1EF99D300;
  if (!qword_1EF99D300)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84963C, &type metadata for ASRFeatureExtractorError);
    atomic_store(result, (unint64_t *)&qword_1EF99D300);
  }
  return result;
}

ValueMetadata *type metadata accessor for ASRFeatureExtractorError()
{
  return &type metadata for ASRFeatureExtractorError;
}

uint64_t storeEnumTagSinglePayload for ASRFeatureExtractorErrorReason(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CB78E780 + 4 * byte_1CB849410[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CB78E7A0 + 4 * byte_1CB849415[v4]))();
}

_BYTE *sub_1CB78E780(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CB78E7A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CB78E7A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CB78E7B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CB78E7B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CB78E7C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ASRFeatureExtractorErrorReason()
{
  return &type metadata for ASRFeatureExtractorErrorReason;
}

unint64_t sub_1CB78E7E0()
{
  unint64_t result;

  result = qword_1EF99D328;
  if (!qword_1EF99D328)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB8496E0, &type metadata for ASRFeatureExtractorErrorReason);
    atomic_store(result, (unint64_t *)&qword_1EF99D328);
  }
  return result;
}

uint64_t INAddTaskIntentFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t INAddTaskIntentFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1CB78E888(id *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;

  v1 = *a1;
  v2 = objc_msgSend(v1, sel_intent);
  objc_opt_self();
  v3 = swift_dynamicCastObjCClass();
  if (!v3)
  {

    return MEMORY[0x1E0DEE9D8];
  }
  v4 = (void *)v3;
  v52 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1CB848A60;
  v6 = objc_msgSend(v4, sel_typeName);
  v7 = sub_1CB8468A0();
  v9 = v8;

  v10 = type metadata accessor for AddTaskEventFeature.EventType(0);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v7;
  *(_QWORD *)(v11 + 24) = v9;
  *(_QWORD *)(v5 + 56) = v10;
  *(_QWORD *)(v5 + 64) = sub_1CB78E6AC(&qword_1EF99D330, type metadata accessor for AddTaskEventFeature.EventType);
  *(_QWORD *)(v5 + 32) = v11;
  LOBYTE(v10) = objc_msgSend(v1, sel__donatedBySiri);
  v12 = type metadata accessor for AddTaskEventFeature.DonatedBySiri(0);
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v10;
  *(_QWORD *)(v5 + 96) = v12;
  *(_QWORD *)(v5 + 104) = sub_1CB78E6AC(&qword_1EF99D338, type metadata accessor for AddTaskEventFeature.DonatedBySiri);
  *(_QWORD *)(v5 + 72) = v13;
  v14 = objc_msgSend(v4, sel_targetTaskList);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, sel_title);

    if (v16)
    {
      v17 = objc_msgSend(v16, sel_spokenPhrase);
      v18 = sub_1CB8468A0();
      v20 = v19;

      v21 = type metadata accessor for AddTaskEventFeature.TargetTaskListTitle(0);
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = v18;
      *(_QWORD *)(v22 + 24) = v20;
      v5 = (uint64_t)sub_1CB790358((_QWORD *)1, 3, 1, (_QWORD *)v5, (uint64_t *)&unk_1ED88BFE8, &qword_1ED88BC30);
      v54 = v21;
      v55 = sub_1CB78E6AC(&qword_1EF99D350, type metadata accessor for AddTaskEventFeature.TargetTaskListTitle);
      *(_QWORD *)&v53 = v22;
      *(_QWORD *)(v5 + 16) = 3;
      sub_1CB7780BC(&v53, v5 + 112);

    }
  }
  v23 = v52;
  v24 = objc_msgSend(v4, sel_taskTitles);
  if (!v24)
  {

LABEL_24:
    return v5;
  }
  v25 = v24;
  sub_1CB78EEB0();
  v26 = sub_1CB846A5C();

  if (!(v26 >> 62))
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    v51 = v1;
    if (v27)
      goto LABEL_8;
LABEL_20:
    swift_bridgeObjectRelease();
    v30 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    v40 = type metadata accessor for AddTaskEventFeature.TaskContents(0);
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v30;
    v54 = v40;
    v42 = sub_1CB78E6AC(&qword_1EF99D348, type metadata accessor for AddTaskEventFeature.TaskContents);
    v55 = v42;
    v56 = (_QWORD *)v5;
    *(_QWORD *)&v53 = v41;
    v44 = *(_QWORD *)(v5 + 16);
    v43 = *(_QWORD *)(v5 + 24);
    if (v44 >= v43 >> 1)
      v56 = sub_1CB790358((_QWORD *)(v43 > 1), v44 + 1, 1, (_QWORD *)v5, (uint64_t *)&unk_1ED88BFE8, &qword_1ED88BC30);
    v45 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v53, v40);
    MEMORY[0x1E0C80A78](v45);
    v47 = (char *)&v49 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v48 + 16))(v47);
    sub_1CB790854(v44, (uint64_t)v47, (uint64_t *)&v56, v40, v42);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v53);
    v5 = (uint64_t)v56;

    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  v27 = sub_1CB847044();
  swift_bridgeObjectRelease();
  v51 = v1;
  if (!v27)
    goto LABEL_20;
LABEL_8:
  *(_QWORD *)&v53 = MEMORY[0x1E0DEE9D8];
  result = sub_1CB776040(0, v27 & ~(v27 >> 63), 0);
  if ((v27 & 0x8000000000000000) == 0)
  {
    v50 = v5;
    v29 = 0;
    v30 = v53;
    do
    {
      if ((v26 & 0xC000000000000001) != 0)
        v31 = (id)MEMORY[0x1D179F320](v29, v26);
      else
        v31 = *(id *)(v26 + 8 * v29 + 32);
      v32 = v31;
      v33 = objc_msgSend(v31, sel_spokenPhrase);
      v34 = sub_1CB8468A0();
      v36 = v35;

      *(_QWORD *)&v53 = v30;
      v38 = *(_QWORD *)(v30 + 16);
      v37 = *(_QWORD *)(v30 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_1CB776040(v37 > 1, v38 + 1, 1);
        v30 = v53;
      }
      ++v29;
      *(_QWORD *)(v30 + 16) = v38 + 1;
      v39 = v30 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v34;
      *(_QWORD *)(v39 + 40) = v36;
    }
    while (v27 != v29);
    swift_bridgeObjectRelease();
    v23 = v52;
    v5 = v50;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t AddTaskEventFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = a1;
  return result;
}

uint64_t _s28SiriPrivateLearningAnalytics19AddTaskEventFeatureV0G4TypeC5valueAESS_tcfC_0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t AddTaskEventFeature.TaskContents.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = v2;
  if (a1)
  {
    *(_QWORD *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CD20);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t type metadata accessor for AddTaskEventFeature.EventType(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99D430);
}

uint64_t INAddTaskIntentFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t INAddTaskIntentFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AddTaskEventFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99D518);
}

uint64_t sub_1CB78EE8C(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for AddTaskEventFeature.EventType);
}

uint64_t sub_1CB78EE98(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for AddTaskEventFeature.EventType);
}

uint64_t AddTaskEventFeature.DonatedBySiri.init(value:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

unint64_t sub_1CB78EEB0()
{
  unint64_t result;

  result = qword_1EF99D340;
  if (!qword_1EF99D340)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF99D340);
  }
  return result;
}

uint64_t AddTaskEventFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1;
  v3 = swift_allocObject();
  v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t AddTaskEventFeature.DonatedBySiri.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AddTaskEventFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB78EFD8(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for AddTaskEventFeature.DonatedBySiri(0);
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB78F00C(unsigned __int8 *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  type metadata accessor for AddTaskEventFeature.DonatedBySiri(0);
  v2 = swift_allocObject();
  v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t AddTaskEventFeature.TargetTaskListTitle.init(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t _s28SiriPrivateLearningAnalytics19AddTaskEventFeatureV0G4TypeC5valueAESgSSSg_tcfC_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  v5 = v4;
  if (a2)
  {
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D358);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t _s28SiriPrivateLearningAnalytics19AddTaskEventFeatureV0G4TypeC5valueAESgSSSg_tcfc_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (a2)
  {
    *(_QWORD *)(v2 + 16) = a1;
    *(_QWORD *)(v2 + 24) = a2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D358);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v2;
}

uint64_t AddTaskEventFeature.TargetTaskListTitle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _s28SiriPrivateLearningAnalytics19AddTaskEventFeatureV0G4TypeCfD_0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CB78F194(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for AddTaskEventFeature.TargetTaskListTitle);
}

uint64_t sub_1CB78F1A0(uint64_t *a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  a2(0);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v3;
  return result;
}

uint64_t sub_1CB78F1D4(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for AddTaskEventFeature.TargetTaskListTitle);
}

uint64_t sub_1CB78F1E0(uint64_t *a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v2 = a1[1];
  a2(0);
  v4 = swift_allocObject();
  v5 = v4;
  if (v2)
  {
    *(_QWORD *)(v4 + 16) = v3;
    *(_QWORD *)(v4 + 24) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D358);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t AddTaskEventFeature.TaskContents.init(value:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1)
  {
    *(_QWORD *)(v1 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CD20);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t AddTaskEventFeature.TaskContents.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AddTaskEventFeature.TaskContents.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CB78F350(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for AddTaskEventFeature.TaskContents(0);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB78F384(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  type metadata accessor for AddTaskEventFeature.TaskContents(0);
  v2 = swift_allocObject();
  v3 = v2;
  if (v1)
  {
    *(_QWORD *)(v2 + 16) = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CD20);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

_QWORD *sub_1CB78F3EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E080);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CB790958(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB78F4F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CB78FA90(a1, a2, a3, a4, (uint64_t *)&unk_1ED88BFC8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

_QWORD *sub_1CB78F50C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CB78F524(a1, a2, a3, a4, &qword_1EF99C778);
}

_QWORD *sub_1CB78F518(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CB78F524(a1, a2, a3, a4, (uint64_t *)&unk_1EF99C780);
}

_QWORD *sub_1CB78F524(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CB790A48(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB78F62C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D828);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CB790B30(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB78F738(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CB790358(a1, a2, a3, a4, (uint64_t *)&unk_1ED88BFE8, &qword_1ED88BC30);
}

_QWORD *sub_1CB78F74C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D830);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CB790C20(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB78F858(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C000);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CB790A48(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1CB78F964(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1CB790110(a1, a2, a3, a4, &qword_1ED88C010);
}

char *sub_1CB78F970(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99C750);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CB790DF8(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB78FA68(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CB79022C(a1, a2, a3, a4, &qword_1EF99D7F0, &qword_1EF99D7F8);
}

uint64_t sub_1CB78FA7C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CB78FA90(a1, a2, a3, a4, &qword_1EF99D7D8, type metadata accessor for UniversalSuggestionSummary);
}

uint64_t sub_1CB78FA90(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1CB847038();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1CB7915CC(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1CB78FC9C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D820);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CB790EDC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB78FDA8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CB78FFEC(a1, a2, a3, a4, &qword_1ED888770);
}

char *sub_1CB78FDBC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E508);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CB790DF8(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB78FEB4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D810);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CB7910D0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB78FFD8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CB78FFEC(a1, a2, a3, a4, &qword_1ED88A800);
}

_QWORD *sub_1CB78FFEC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 4])
          memmove(v14, a4 + 4, 32 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CB790FE4(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_1CB790104(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1CB790110(a1, a2, a3, a4, (uint64_t *)&unk_1ED88C018);
}

char *sub_1CB790110(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 29;
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
      v14 = v11 + 32;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)MEMORY[0x1E0DEE9D8];
      v14 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 32])
          memmove(v14, a4 + 32, 4 * v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1CB790D10(0, v9, v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB790218(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CB79022C(a1, a2, a3, a4, &qword_1EF99D800, &qword_1EF99D808);
}

_QWORD *sub_1CB79022C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CB7911DC(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB790344(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CB790358(a1, a2, a3, a4, &qword_1ED88A870, &qword_1ED88A858);
}

_QWORD *sub_1CB790358(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CB7912E0(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB790484(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CB790358(a1, a2, a3, a4, &qword_1EF99D7C0, (uint64_t *)&unk_1ED88AD78);
}

uint64_t sub_1CB790498(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CB78FA90(a1, a2, a3, a4, &qword_1EF99D7A8, type metadata accessor for UniversalCandidate);
}

uint64_t sub_1CB7904AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CB78FA90(a1, a2, a3, a4, &qword_1EF99D7B8, type metadata accessor for UniversalSuggestion);
}

uint64_t sub_1CB7904C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CB78FA90(a1, a2, a3, a4, &qword_1EF99D7B0, type metadata accessor for UniversalRuntimeSuggestion);
}

_QWORD *sub_1CB7904D4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CB79072C(a1, a2, a3, a4, &qword_1ED88A808, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_1CB7916E4);
}

_QWORD *sub_1CB7904E8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D7E8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CB7914DC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB7905F4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D7E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CB7913E8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB790718(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CB79072C(a1, a2, a3, a4, &qword_1EF99D7C8, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_1CB7917D4);
}

_QWORD *sub_1CB79072C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, void (*a6)(_QWORD, int64_t, _QWORD *, _QWORD *))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 1;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 5);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[4 * v11 + 4])
          memmove(v16, a4 + 4, 32 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a6(0, v11, v16, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AddTaskEventFeature.TaskContents(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99D6E8);
}

uint64_t sub_1CB790854(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1CB7780BC(&v12, v10 + 40 * a1 + 32);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t type metadata accessor for AddTaskEventFeature.TargetTaskListTitle(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99D600);
}

uint64_t type metadata accessor for INAddTaskIntentFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for INAddTaskIntentFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of INAddTaskIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of INAddTaskIntentFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

ValueMetadata *type metadata accessor for AddTaskEventFeature()
{
  return &type metadata for AddTaskEventFeature;
}

uint64_t sub_1CB790958(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

char *sub_1CB790A48(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB790B30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB790C20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

char *sub_1CB790D10(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1CB847074();
  __break(1u);
  return result;
}

char *sub_1CB790DF8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB790EDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB790FE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7910D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D818);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7911DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7912E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7913E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7914DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7915CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7916E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7917D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D7D0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

void *sub_1CB7918E8(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  __objc2_prot_list **p_base_prots;
  __objc2_prot_list **v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  __objc2_prot_list **v19;
  __objc2_prot_list **v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  void *v27;
  id v28;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain_n();
    v32 = sub_1CB847044();
    if (v32)
      goto LABEL_3;
  }
  else
  {
    v32 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v32)
    {
LABEL_3:
      v30 = v1;
      v31 = v1 & 0xC000000000000001;
      v2 = 4;
      p_base_prots = &SupportedLocalesPListStore.base_prots;
      v4 = &SupportedLocalesPListStore.base_prots;
      v5 = 0x1E0D9A000uLL;
      do
      {
        if (v31)
          v6 = (id)MEMORY[0x1D179F320](v2 - 4, v1);
        else
          v6 = *(id *)(v1 + 8 * v2);
        v7 = v6;
        v8 = v2 - 3;
        if (__OFADD__(v2 - 4, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
        if (objc_msgSend(v6, (SEL)p_base_prots[170]) == 6)
        {
          v9 = objc_msgSend(v7, (SEL)v4[178]);
          if (v9)
          {
            v10 = sub_1CB845F94();
            v12 = v11;

            v9 = (id)sub_1CB845F88();
            sub_1CB779034(v10, v12);
          }
          v13 = objc_msgSend(objc_allocWithZone(*(Class *)(v5 + 1120)), sel_initWithData_, v9);

          v14 = objc_msgSend(v13, sel_event);
          if (!v14)
          {
            v14 = v7;
            goto LABEL_5;
          }
        }
        else
        {
          v14 = v7;
        }
        v15 = sub_1CB792C48();
        objc_msgSend(v14, (SEL)p_base_prots[170]);
        v16 = sub_1CB846D80();
        if (!v16 || v15 != v16)
          goto LABEL_4;
        v17 = objc_msgSend(v14, (SEL)v4[178]);
        if (v17)
        {
          v18 = sub_1CB845F94();
          v19 = v4;
          v20 = p_base_prots;
          v22 = v21;

          v23 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
          v17 = (id)sub_1CB845F88();
          v24 = v18;
          v1 = v30;
          v25 = v22;
          p_base_prots = v20;
          v4 = v19;
          v5 = 0x1E0D9A000;
          sub_1CB779034(v24, v25);
        }
        else
        {
          v23 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        }
        v26 = objc_msgSend(v23, sel_initWithData_, v17);

        if (v26)
        {
          objc_opt_self();
          v27 = (void *)swift_dynamicCastObjCClass();

          if (v27)
          {
            v28 = objc_msgSend(v27, sel_deviceDynamicContext);

            v14 = v26;
            if (v28)
            {
              swift_bridgeObjectRelease_n();
              return v27;
            }
          }
          else
          {
            v14 = v26;
          }
        }
        else
        {
LABEL_4:

        }
LABEL_5:

        ++v2;
      }
      while (v8 != v32);
    }
  }
  swift_bridgeObjectRelease_n();
  return 0;
}

double sub_1CB791BEC(uint64_t a1, double result)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  double *v6;
  double v7;
  double v8;
  double v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = *(double *)(a1 + 32);
    v5 = v2 - 1;
    if (v2 != 1)
    {
      result = v4;
      v6 = (double *)(a1 + 40);
      v7 = v4;
      do
      {
        v8 = *v6++;
        v9 = v8;
        if (v8 < result)
          result = v9;
        if (v9 >= v7)
          v7 = v9;
        --v5;
      }
      while (v5);
    }
  }
  return result;
}

uint64_t UEITurnDurationFeature.__allocating_init(value:)(double a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(double *)(result + 16) = a1;
  return result;
}

uint64_t UEISaidDialogIdentifier.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t UEIFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t UEIFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t UEIFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t UEIFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1CB791CE4(uint64_t *a1)
{
  return sub_1CB7921E4(*a1);
}

uint64_t FirstUEIEventTimestampFeature.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1CB791CFC(uint64_t *a1)
{
  return sub_1CB791D30(a1, (void (*)(_QWORD))type metadata accessor for FirstUEIEventTimestampFeature);
}

uint64_t sub_1CB791D08(uint64_t *a1)
{
  return sub_1CB791D70(a1, (void (*)(_QWORD))type metadata accessor for FirstUEIEventTimestampFeature);
}

uint64_t LastUEIEventTimestampFeature.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1CB791D24(uint64_t *a1)
{
  return sub_1CB791D30(a1, (void (*)(_QWORD))type metadata accessor for LastUEIEventTimestampFeature);
}

uint64_t sub_1CB791D30(uint64_t *a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  a2(0);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  return result;
}

uint64_t sub_1CB791D64(uint64_t *a1)
{
  return sub_1CB791D70(a1, (void (*)(_QWORD))type metadata accessor for LastUEIEventTimestampFeature);
}

uint64_t sub_1CB791D70(uint64_t *a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  a2(0);
  v4 = swift_allocObject();
  v5 = v4;
  if ((v3 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D838);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v2;
  }
  return v5;
}

uint64_t UEITurnDurationFeature.init(value:)(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = v1;
  *(double *)(v1 + 16) = a1;
  return result;
}

uint64_t _s28SiriPrivateLearningAnalytics29FirstUEIEventTimestampFeatureC5valueACSgSdSg_tcfC_0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  v5 = v4;
  if ((a2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D838);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_QWORD *)(v4 + 16) = a1;
  }
  return v5;
}

uint64_t _s28SiriPrivateLearningAnalytics29FirstUEIEventTimestampFeatureC5valueACSgSdSg_tcfc_0(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D838);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_QWORD *)(v2 + 16) = a1;
  }
  return v2;
}

uint64_t UEITurnDurationFeature.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t UEITurnDurationFeature.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB791ED0(uint64_t *a1)
{
  return sub_1CB791D30(a1, (void (*)(_QWORD))type metadata accessor for UEITurnDurationFeature);
}

uint64_t sub_1CB791EDC(uint64_t *a1)
{
  return sub_1CB791D70(a1, (void (*)(_QWORD))type metadata accessor for UEITurnDurationFeature);
}

uint64_t UEISaidDialogIdentifier.init(value:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t UEISaidDialogIdentifier.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB791F1C(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for UEISaidDialogIdentifier);
}

uint64_t sub_1CB791F28(uint64_t *a1)
{
  return sub_1CB79200C(a1, (void (*)(_QWORD))type metadata accessor for UEISaidDialogIdentifier);
}

uint64_t _s28SiriPrivateLearningAnalytics23UEISaidDialogIdentifierC5valueACSgSaySSGSg_tcfC_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = v2;
  if (a1)
  {
    *(_QWORD *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CD20);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t _s28SiriPrivateLearningAnalytics23UEISaidDialogIdentifierC5valueACSgSaySSGSg_tcfc_0(uint64_t a1)
{
  uint64_t v1;

  if (a1)
  {
    *(_QWORD *)(v1 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CD20);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t sub_1CB791FF4(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for UEIShownDialogIdentifier);
}

uint64_t sub_1CB792000(uint64_t *a1)
{
  return sub_1CB79200C(a1, (void (*)(_QWORD))type metadata accessor for UEIShownDialogIdentifier);
}

uint64_t sub_1CB79200C(uint64_t *a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  a2(0);
  v3 = swift_allocObject();
  v4 = v3;
  if (v2)
  {
    *(_QWORD *)(v3 + 16) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CD20);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v4;
}

_QWORD *sub_1CB792074(unint64_t a1, void *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  unint64_t v14;

  if (a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1CB847044())
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D179F320](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      getEventTimestampFromContext(from:context:)(v6, a2);
      v10 = v9;
      v12 = v11;

      if ((v12 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_1CB78F858(0, v4[2] + 1, 1, v4);
        v14 = v4[2];
        v13 = v4[3];
        if (v14 >= v13 >> 1)
          v4 = sub_1CB78F858((_QWORD *)(v13 > 1), v14 + 1, 1, v4);
        v4[2] = v14 + 1;
        v4[v14 + 4] = v10;
      }
      ++v5;
      if (v8 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_18:
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1CB7921E4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  double *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __objc2_prot_list **p_base_prots;
  __objc2_prot_list **v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  __objc2_prot_list **v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  id v33;
  _QWORD *v34;
  double v35;
  double *v36;
  double v37;
  double v38;
  char v39;
  char v40;
  uint64_t UEIEventTimestampFeature;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  id v58;
  void *v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  __objc2_prot_list **v70;
  id v71;
  void *v72;
  id v73;
  void *v74;
  id v75;
  uint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  unint64_t v79;
  __objc2_prot_list **v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  double *v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  _QWORD *v94;
  _QWORD *v95;
  unint64_t v96;
  double *v97;
  __int128 v98;
  unint64_t v99;
  uint64_t v100;

  v4 = a1;
  *(_QWORD *)&v98 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v1 = a1;
    else
      v1 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = sub_1CB847044();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      if (v5 >= 1)
      {
        v6 = 0;
        v94 = (_QWORD *)v4;
        v96 = v4 & 0xC000000000000001;
        p_base_prots = &SupportedLocalesPListStore.base_prots;
        v8 = &SupportedLocalesPListStore.base_prots;
        v9 = 0x1E0D9A000uLL;
        while (1)
        {
          v10 = v96 ? (id)MEMORY[0x1D179F320](v6, v4) : *(id *)(v4 + 8 * v6 + 32);
          v11 = v10;
          if (objc_msgSend(v10, (SEL)p_base_prots[170], v94) != 6)
            break;
          v12 = objc_msgSend(v11, (SEL)v8[178]);
          if (v12)
          {
            v13 = sub_1CB845F94();
            v15 = v14;

            v12 = (id)sub_1CB845F88();
            sub_1CB779034(v13, v15);
          }
          v16 = objc_msgSend(objc_allocWithZone(*(Class *)(v9 + 1120)), sel_initWithData_, v12);

          *(double *)&v3 = COERCE_DOUBLE(objc_msgSend(v16, sel_event));
          if (*(double *)&v3 != 0.0)
            goto LABEL_16;

LABEL_6:
          if (v5 == ++v6)
          {
            swift_bridgeObjectRelease();
            v1 = v98;
            goto LABEL_34;
          }
        }
        *(double *)&v3 = COERCE_DOUBLE(v11);
LABEL_16:
        v17 = sub_1CB792C48();
        objc_msgSend(v3, (SEL)p_base_prots[170]);
        v18 = sub_1CB846D80();
        if (v18 && v17 == v18)
        {
          v19 = objc_msgSend(v3, (SEL)v8[178]);
          if (v19)
          {
            v20 = v19;
            v21 = sub_1CB845F94();
            v22 = p_base_prots;
            v24 = v23;

            v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            v26 = (void *)sub_1CB845F88();
            v27 = v21;
            v4 = (unint64_t)v94;
            v28 = v24;
            p_base_prots = v22;
            sub_1CB779034(v27, v28);
          }
          else
          {
            v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            v26 = 0;
          }
          v29 = objc_msgSend(v25, sel_initWithData_, v26);

          if (v29)
          {
            objc_opt_self();
            v30 = swift_dynamicCastObjCClass();

            v8 = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
            v9 = 0x1E0D9A000;
            if (v30)
            {
              MEMORY[0x1D179EDF8]();
              v3 = *(double **)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if ((unint64_t)v3 >= *(_QWORD *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1CB846AA4();
              sub_1CB846AD4();
              sub_1CB846A74();
            }
            else
            {

            }
          }
          else
          {

            v8 = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
            v9 = 0x1E0D9A000;
          }
        }
        else
        {

        }
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_91;
    }
  }
  swift_bridgeObjectRelease();
  v1 = MEMORY[0x1E0DEE9D8];
LABEL_34:
  v31 = swift_bridgeObjectRetain();
  v32 = sub_1CB7918E8(v31);
  swift_bridgeObjectRelease();
  if (!v32)
    goto LABEL_44;
  v33 = v32;
  v34 = sub_1CB792074(v1, v33);

  sub_1CB791BEC((uint64_t)v34, v35);
  v3 = v36;
  v38 = v37;
  v40 = v39;
  swift_bridgeObjectRelease();
  if ((v40 & 1) != 0)
  {

LABEL_44:
    v4 = MEMORY[0x1E0DEE9D8];
    goto LABEL_45;
  }
  UEIEventTimestampFeature = type metadata accessor for FirstUEIEventTimestampFeature(0);
  v42 = swift_allocObject();
  *(double *)(v42 + 16) = *(double *)&v3;
  v43 = sub_1CB78F738(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v45 = v43[2];
  v44 = v43[3];
  v4 = (unint64_t)v43;
  if (v45 >= v44 >> 1)
    v4 = (unint64_t)sub_1CB78F738((_QWORD *)(v44 > 1), v45 + 1, 1, v43);
  v46 = *(double *)&v3;
  v47 = v38;
  v99 = UEIEventTimestampFeature;
  v100 = sub_1CB78E6AC(&qword_1ED88BE18, type metadata accessor for FirstUEIEventTimestampFeature);
  *(_QWORD *)&v98 = v42;
  *(_QWORD *)(v4 + 16) = v45 + 1;
  sub_1CB7780BC(&v98, v4 + 40 * v45 + 32);
  v48 = type metadata accessor for LastUEIEventTimestampFeature(0);
  v49 = swift_allocObject();
  *(double *)(v49 + 16) = v38;
  v51 = *(_QWORD *)(v4 + 16);
  v50 = *(_QWORD *)(v4 + 24);
  if (v51 >= v50 >> 1)
    v4 = (unint64_t)sub_1CB78F738((_QWORD *)(v50 > 1), v51 + 1, 1, (_QWORD *)v4);
  v99 = v48;
  v100 = sub_1CB78E6AC(&qword_1ED88BE00, type metadata accessor for LastUEIEventTimestampFeature);
  *(_QWORD *)&v98 = v49;
  *(_QWORD *)(v4 + 16) = v51 + 1;
  sub_1CB7780BC(&v98, v4 + 40 * v51 + 32);
  v52 = type metadata accessor for UEITurnDurationFeature(0);
  *(double *)&v3 = COERCE_DOUBLE(swift_allocObject());
  v3[2] = v47 - v46;
  v54 = *(_QWORD *)(v4 + 16);
  v53 = *(_QWORD *)(v4 + 24);
  if (v54 >= v53 >> 1)
    v4 = (unint64_t)sub_1CB78F738((_QWORD *)(v53 > 1), v54 + 1, 1, (_QWORD *)v4);
  v99 = v52;
  v100 = sub_1CB78E6AC(&qword_1ED88BD70, type metadata accessor for UEITurnDurationFeature);
  *(_QWORD *)&v98 = v3;
  *(_QWORD *)(v4 + 16) = v54 + 1;
  sub_1CB7780BC(&v98, v4 + 40 * v54 + 32);

LABEL_45:
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1CB847044();
    if (v2)
      goto LABEL_47;
LABEL_76:
    *(double *)&v3 = MEMORY[0x1E0DEE9D8];
    v57 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_77;
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_76;
LABEL_47:
  if (v2 < 1)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    v4 = (unint64_t)sub_1CB78F738(0, *(_QWORD *)(v4 + 16) + 1, 1, (_QWORD *)v4);
LABEL_79:
    v88 = *(_QWORD *)(v4 + 16);
    v87 = *(_QWORD *)(v4 + 24);
    if (v88 >= v87 >> 1)
      v4 = (unint64_t)sub_1CB78F738((_QWORD *)(v87 > 1), v88 + 1, 1, (_QWORD *)v4);
    v99 = v1;
    v100 = sub_1CB78E6AC(&qword_1EF99D858, type metadata accessor for UEISaidDialogIdentifier);
    *(_QWORD *)&v98 = v2;
    *(_QWORD *)(v4 + 16) = v88 + 1;
    sub_1CB7780BC(&v98, v4 + 40 * v88 + 32);
    if (*((_QWORD *)v3 + 2))
      goto LABEL_82;
LABEL_88:
    swift_bridgeObjectRelease();
    return v4;
  }
  v95 = (_QWORD *)v4;
  v55 = 0;
  v56 = v1 & 0xC000000000000001;
  v57 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (v56)
      v58 = (id)MEMORY[0x1D179F320](v55, v1);
    else
      v58 = *(id *)(v1 + 8 * v55 + 32);
    v59 = v58;
    v60 = objc_msgSend(v58, sel_uufrSaid, v95);
    if (v60
      && (v61 = v60,
          v62 = objc_msgSend(v60, sel_dialogIdentifier),
          v61,
          v62))
    {
      v63 = sub_1CB8468A0();
      v65 = v64;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v57 = sub_1CB78F3EC(0, v57[2] + 1, 1, v57);
      v67 = v57[2];
      v66 = v57[3];
      if (v67 >= v66 >> 1)
        v57 = sub_1CB78F3EC((_QWORD *)(v66 > 1), v67 + 1, 1, v57);
      v57[2] = v67 + 1;
      v68 = &v57[2 * v67];
      v68[4] = v63;
      v68[5] = v65;
    }
    else
    {

    }
    ++v55;
  }
  while (v2 != v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v69 = 0;
  *(double *)&v97 = MEMORY[0x1E0DEE9D8];
  v70 = &SupportedLocalesPListStore.base_prots;
  do
  {
    if (v56)
      v71 = (id)MEMORY[0x1D179F320](v69, v1);
    else
      v71 = *(id *)(v1 + 8 * v69 + 32);
    v72 = v71;
    v73 = objc_msgSend(v71, (SEL)v70[200]);
    if (v73
      && (v74 = v73,
          v75 = objc_msgSend(v73, sel_dialogIdentifier),
          v74,
          v75))
    {
      v76 = v2;
      v77 = v56;
      v78 = v57;
      v79 = v1;
      v80 = v70;
      v81 = sub_1CB8468A0();
      v83 = v82;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        *(double *)&v97 = COERCE_DOUBLE(sub_1CB78F3EC(0, *((_QWORD *)v97 + 2) + 1, 1, v97));
      v85 = *((_QWORD *)v97 + 2);
      v84 = *((_QWORD *)v97 + 3);
      if (v85 >= v84 >> 1)
        *(double *)&v97 = COERCE_DOUBLE(sub_1CB78F3EC((_QWORD *)(v84 > 1), v85 + 1, 1, v97));
      *((_QWORD *)v97 + 2) = v85 + 1;
      v86 = &v97[2 * v85];
      *((_QWORD *)v86 + 4) = v81;
      *((_QWORD *)v86 + 5) = v83;
      v70 = v80;
      v1 = v79;
      v57 = v78;
      v56 = v77;
      v2 = v76;
    }
    else
    {

    }
    ++v69;
  }
  while (v2 != v69);
  v4 = (unint64_t)v95;
  v3 = v97;
LABEL_77:
  swift_bridgeObjectRelease_n();
  if (v57[2])
  {
    v1 = type metadata accessor for UEISaidDialogIdentifier(0);
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_79;
    goto LABEL_92;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)v3 + 2))
    goto LABEL_88;
LABEL_82:
  v89 = type metadata accessor for UEIShownDialogIdentifier(0);
  v90 = swift_allocObject();
  *(double *)(v90 + 16) = *(double *)&v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = (unint64_t)sub_1CB78F738(0, *(_QWORD *)(v4 + 16) + 1, 1, (_QWORD *)v4);
  v92 = *(_QWORD *)(v4 + 16);
  v91 = *(_QWORD *)(v4 + 24);
  if (v92 >= v91 >> 1)
    v4 = (unint64_t)sub_1CB78F738((_QWORD *)(v91 > 1), v92 + 1, 1, (_QWORD *)v4);
  v99 = v89;
  v100 = sub_1CB78E6AC((unint64_t *)&unk_1EF99D860, type metadata accessor for UEIShownDialogIdentifier);
  *(_QWORD *)&v98 = v90;
  *(_QWORD *)(v4 + 16) = v92 + 1;
  sub_1CB7780BC(&v98, v4 + 40 * v92 + 32);
  return v4;
}

uint64_t type metadata accessor for UEIFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for UEIFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UEIFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of UEIFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for FirstUEIEventTimestampFeature(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1ED88BE20);
}

uint64_t type metadata accessor for LastUEIEventTimestampFeature(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED88BE08);
}

uint64_t type metadata accessor for UEITurnDurationFeature(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED88BD78);
}

uint64_t type metadata accessor for UEISaidDialogIdentifier(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED88BD98);
}

uint64_t type metadata accessor for UEIShownDialogIdentifier(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED88BDA8);
}

unint64_t sub_1CB792C48()
{
  unint64_t result;

  result = qword_1EF9A0BC0;
  if (!qword_1EF9A0BC0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF9A0BC0);
  }
  return result;
}

uint64_t dispatch thunk of FeatureFlagsResolving.isFeatureEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t static PLUSSchemaConverters.convertToSuggestionSurfaced(state:)(char *a1)
{
  return dword_1CB849A2C[*a1];
}

uint64_t static PLUSSchemaConverters.convertToSuggestionNoveltyState(state:)(char *a1)
{
  return dword_1CB849A2C[*a1];
}

uint64_t static PLUSSchemaConverters.convertToSuggestionRedundancyState(state:)(unsigned __int8 *a1)
{
  int v1;
  unsigned int v2;

  v1 = *a1;
  if ((v1 & 1) != 0)
    v2 = 2;
  else
    v2 = 1;
  if (v1 == 2)
    return 0;
  else
    return v2;
}

ValueMetadata *type metadata accessor for PLUSSchemaConverters()
{
  return &type metadata for PLUSSchemaConverters;
}

ValueMetadata *type metadata accessor for PLUSSchemaConverters.ConversionError()
{
  return &type metadata for PLUSSchemaConverters.ConversionError;
}

uint64_t dispatch thunk of StorePolicy.runPolicy(store:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CoreDataRecordEvictor.evictRecord(record:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of CoreDataEvictionPolicy.evictionCandidates(count:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

_QWORD *initializeBufferWithCopyOfBuffer for StorePolicyError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StorePolicyError()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for StorePolicyError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for StorePolicyError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorePolicyError(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorePolicyError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorePolicyError()
{
  return &type metadata for StorePolicyError;
}

uint64_t TrialFactor.__allocating_init(factorName:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t TrialFactor.init(factorName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t TrialFactor.factorName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrialFactor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TrialFactor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id static Int.fromLevel(level:)(void *a1)
{
  unsigned int v2;

  v2 = objc_msgSend(a1, sel_levelOneOfCase);
  if (v2 == 13)
    return objc_msgSend(a1, sel_longValue);
  if (v2 == 12)
    return (id)(int)objc_msgSend(a1, sel_intValue);
  return 0;
}

id sub_1CB792FC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4;
  char v5;
  id result;

  v4 = objc_msgSend(a1, sel_levelOneOfCase);
  if (v4 == 13)
  {
    result = objc_msgSend(a1, sel_longValue);
    v5 = 0;
  }
  else if (v4 == 12)
  {
    LODWORD(result) = objc_msgSend(a1, sel_intValue);
    v5 = 0;
    result = (id)(int)result;
  }
  else
  {
    result = 0;
    v5 = 1;
  }
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t static Bool.fromLevel(level:)(void *a1)
{
  if (objc_msgSend(a1, sel_levelOneOfCase) == 10)
    return (uint64_t)objc_msgSend(a1, sel_BOOLeanValue);
  else
    return 2;
}

uint64_t sub_1CB79308C@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  if (objc_msgSend(a1, sel_levelOneOfCase) == 10)
    result = (uint64_t)objc_msgSend(a1, sel_BOOLeanValue);
  else
    result = 2;
  *a2 = result;
  return result;
}

double static Double.fromLevel(level:)(void *a1)
{
  double result;

  if (objc_msgSend(a1, sel_levelOneOfCase) == 15)
    objc_msgSend(a1, sel_doubleValue);
  return result;
}

id sub_1CB793134@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id result;
  int v5;
  uint64_t v6;

  result = objc_msgSend(a1, sel_levelOneOfCase);
  v5 = (int)result;
  v6 = 0;
  if ((_DWORD)result == 15)
    result = objc_msgSend(a1, sel_doubleValue, 0.0);
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = v5 != 15;
  return result;
}

uint64_t TrialFlagFactor.init(factorName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t TrialFlagFactor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB7931D0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TrialFactor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TrialFactor);
}

uint64_t method lookup function for TrialFactor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TrialFactor.__allocating_init(factorName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for TrialFactorScope()
{
  return &type metadata for TrialFactorScope;
}

uint64_t dispatch thunk of static TrialFactorType.fromLevel(level:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for TrialFlagFactor(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED88E148);
}

uint64_t type metadata accessor for TrialDoubleFactor(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1ED88A450);
}

uint64_t sub_1CB793274()
{
  return swift_initClassMetadata2();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1D179FD04](a1, v6, a5);
}

uint64_t sub_1CB7932DC()
{
  uint64_t result;
  unint64_t v1;

  sub_1CB846E40();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED88DEA0);
  sub_1CB846B40();
  result = sub_1CB846E40();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1CB79338C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x58);
  v3 = *(void **)((char *)v1 + v2);
  *(_QWORD *)((char *)v1 + v2) = a1;
  sub_1CB785AB8(v3);
}

uint64_t sub_1CB7933B4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x60);
  swift_beginAccess();
  sub_1CB846E40();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED88DEA0);
  sub_1CB846B40();
  v4 = sub_1CB846E40();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1CB793468(uint64_t a1)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x60);
  swift_beginAccess();
  sub_1CB846E40();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED88DEA0);
  sub_1CB846B40();
  v4 = sub_1CB846E40();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

id sub_1CB793524(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  int v12;
  id result;
  uint64_t v14;

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  sub_1CB846E40();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED88DEA0);
  v4 = sub_1CB846B40();
  v5 = sub_1CB846E40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)(v3 + 88);
  v10 = *(void **)((char *)v1 + v9);
  *(_QWORD *)((char *)v1 + v9) = a1;
  v11 = a1;
  sub_1CB785AB8(v10);
  sub_1CB7933B4((uint64_t)v8);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v8, 1, v4);
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v12 != 1)
    return objc_msgSend(v11, sel_requestDemand_, BPSDemandMax());
  return result;
}

void sub_1CB793654(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1CB793524(v4);

}

uint64_t sub_1CB7936A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t DynamicType;
  uint64_t v46;
  _QWORD v47[4];

  v3 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v4 = sub_1CB846E40();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED88DEA0);
  v5 = sub_1CB846B40();
  v40 = sub_1CB846E40();
  v38 = *(_QWORD *)(v40 - 8);
  v6 = MEMORY[0x1E0C80A78](v40);
  v41 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v37 - v9;
  v43 = *(_QWORD *)(v5 - 8);
  v11 = MEMORY[0x1E0C80A78](v8);
  v42 = (char *)&v37 - v12;
  v13 = *(_QWORD *)(v4 - 8);
  v14 = MEMORY[0x1E0C80A78](v11);
  v39 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v37 - v17;
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v37 - v20;
  v44 = a1;
  sub_1CB778000(a1, (uint64_t)v47);
  v22 = swift_dynamicCast();
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  if (v22)
  {
    v23(v18, 0, 1, v3);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v18, v3);
    sub_1CB7933B4((uint64_t)v10);
    v24 = v43;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v10, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v40);
    }
    else
    {
      v32 = v42;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v42, v10, v5);
      v33 = (uint64_t)v41;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v41, 1, 1, v5);
      sub_1CB793468(v33);
      v34 = v39;
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v39, v21, v3);
      v23(v34, 0, 1, v3);
      sub_1CB846B34();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v32, v5);
    }
    v35 = *MEMORY[0x1E0D02400];
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v3);
  }
  else
  {
    v23(v18, 1, 1, v3);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v4);
    if (qword_1ED88E518 != -1)
      swift_once();
    v25 = sub_1CB8466D8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED890248);
    sub_1CB778000(v44, (uint64_t)v47);
    v26 = sub_1CB8466C0();
    v27 = sub_1CB846C84();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v46 = v29;
      *(_DWORD *)v28 = 136315138;
      __swift_project_boxed_opaque_existential_1(v47, v47[3]);
      DynamicType = swift_getDynamicType();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF9A0BD0);
      v30 = sub_1CB8468DC();
      DynamicType = sub_1CB775A54(v30, v31, &v46);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
      _os_log_impl(&dword_1CB771000, v26, v27, "AsyncAwaitAdapter ignored unexpected input type %s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v29, -1, -1);
      MEMORY[0x1D179FE84](v28, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
    }

    return BPSDemandMax();
  }
  return v35;
}

uint64_t sub_1CB793B3C(void *a1)
{
  id v2;
  uint64_t v3;
  _BYTE v5[32];

  swift_unknownObjectRetain();
  v2 = a1;
  sub_1CB846EB8();
  swift_unknownObjectRelease();
  v3 = sub_1CB7936A8((uint64_t)v5);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
  return v3;
}

void sub_1CB793BA4(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  id v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  unint64_t v54;

  v48 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v3 = sub_1CB846E40();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v47 - v4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED88DEA0);
  v6 = sub_1CB846B40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v49 = (char *)&v47 - v9;
  v50 = v8;
  v51 = sub_1CB846E40();
  v10 = *(_QWORD *)(v51 - 8);
  v11 = MEMORY[0x1E0C80A78](v51);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v47 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v47 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v47 - v20;
  v22 = a1;
  v23 = objc_msgSend(a1, sel_state);
  if (v23 == (id)1)
  {
    v28 = objc_msgSend(a1, sel_error);
    if (!v28)
    {
      v24 = v1;
      sub_1CB7933B4((uint64_t)v16);
      v25 = v50;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v16, 1, v50))
      {
        v26 = *(void (**)(char *, uint64_t))(v10 + 8);
        v27 = v16;
        goto LABEL_14;
      }
      v36 = v49;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v49, v16, v25);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v51);
      sub_1CB79488C();
      v45 = swift_allocError();
      *v46 = 0xD00000000000003BLL;
      v46[1] = 0x80000001CB853390;
      v53 = v45;
      sub_1CB846B28();
LABEL_20:
      v26 = *(void (**)(char *, uint64_t))(v7 + 8);
      v27 = v36;
      v37 = v25;
      goto LABEL_21;
    }
    v29 = v28;
    v30 = v1;
    sub_1CB7933B4((uint64_t)v19);
    v31 = v50;
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v19, 1, v50))
    {
      v43 = v49;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v49, v19, v31);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v51);
      v53 = (unint64_t)v29;
      sub_1CB846B28();
      v32 = *(void (**)(char *, uint64_t))(v7 + 8);
      v33 = v43;
      v35 = v31;
      goto LABEL_17;
    }

    v32 = *(void (**)(char *, uint64_t))(v10 + 8);
    v33 = v19;
LABEL_10:
    v35 = v51;
LABEL_17:
    v32(v33, v35);
    goto LABEL_18;
  }
  if (!v23)
  {
    v24 = v1;
    sub_1CB7933B4((uint64_t)v21);
    v25 = v50;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v21, 1, v50))
    {
      v26 = *(void (**)(char *, uint64_t))(v10 + 8);
      v27 = v21;
LABEL_14:
      v37 = v51;
LABEL_21:
      v26(v27, v37);
      v44 = v24;
      goto LABEL_22;
    }
    v36 = v49;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v49, v21, v25);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v51);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v5, 1, 1);
    sub_1CB846B34();
    goto LABEL_20;
  }
  v30 = v1;
  sub_1CB7933B4((uint64_t)v13);
  v34 = v50;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v50))
  {
    v32 = *(void (**)(char *, uint64_t))(v10 + 8);
    v33 = v13;
    goto LABEL_10;
  }
  v38 = v49;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v49, v13, v34);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v51);
  v53 = 0;
  v54 = 0xE000000000000000;
  sub_1CB846F30();
  swift_bridgeObjectRelease();
  v53 = 0xD00000000000001DLL;
  v54 = 0x80000001CB853370;
  v52 = objc_msgSend(v22, sel_state);
  type metadata accessor for BPSCompletionState(0);
  sub_1CB8468DC();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  v39 = v53;
  v40 = v54;
  sub_1CB79488C();
  v41 = swift_allocError();
  *v42 = v39;
  v42[1] = v40;
  v53 = v41;
  sub_1CB846B28();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v38, v34);
LABEL_18:
  v44 = v30;
LABEL_22:
  sub_1CB794048(v44);
}

void sub_1CB794048(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  sub_1CB846E40();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED88DEA0);
  v3 = sub_1CB846B40();
  v4 = sub_1CB846E40();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - v5;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))((char *)&v9 - v5, 1, 1, v3);
  sub_1CB793468((uint64_t)v6);
  v7 = *(_QWORD *)((*v2 & *a1) + 0x58);
  v8 = *(void **)((char *)a1 + v7);
  *(_QWORD *)((char *)a1 + v7) = 1;
  sub_1CB785AB8(v8);
}

void sub_1CB79413C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1CB793BA4(v4);

}

uint64_t sub_1CB794190()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  _QWORD v22[2];

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = *MEMORY[0x1E0DEEDD8] & *v0;
  sub_1CB846E40();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED88DEA0);
  v3 = sub_1CB846B40();
  v4 = sub_1CB846E40();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v22 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v22 - v12;
  v14 = *(_QWORD *)(v2 + 88);
  v15 = *(void **)((char *)v0 + v14);
  if ((unint64_t)v15 >= 2)
  {
    sub_1CB79487C(*(id *)((char *)v0 + v14));
    v2 = *v1 & *v0;
  }
  else
  {
    v15 = 0;
  }
  v16 = *(_QWORD *)(v2 + 88);
  v17 = *(void **)((char *)v0 + v16);
  *(_QWORD *)((char *)v0 + v16) = 1;
  sub_1CB785AB8(v17);
  objc_msgSend(v15, sel_cancel);
  sub_1CB7933B4((uint64_t)v13);
  v18 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v11, 1, 1, v3);
  sub_1CB793468((uint64_t)v11);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v13, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v3) == 1)
  {
    v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v13, v4);

    return ((uint64_t (*)(char *, uint64_t))v19)(v8, v4);
  }
  else
  {
    sub_1CB846B4C();
    sub_1CB785A70();
    v21 = swift_allocError();
    sub_1CB8467D4();
    v22[1] = v21;
    sub_1CB846B28();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v3);
  }
}

void sub_1CB7943C8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1CB794190();

}

void sub_1CB7943FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  v18 = a1;
  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v3 = sub_1CB846E40();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - v4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED88DEA0);
  v6 = sub_1CB846B40();
  v7 = sub_1CB846E40();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v17 - v12;
  sub_1CB7933B4((uint64_t)&v17 - v12);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  if (v15 == 1)
  {
    v16 = *(void **)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x58));
    if (v16)
    {
      if (v16 == (void *)1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v5, 1, 1, v2);
        sub_1CB846B34();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, v18, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v6);
        sub_1CB79487C(v16);
        sub_1CB793468((uint64_t)v11);
        objc_msgSend(v16, sel_requestDemand_, BPSDemandMax());
        sub_1CB785AB8(v16);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, v18, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v6);
      sub_1CB793468((uint64_t)v11);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_1CB794640()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  objc_super v6;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  sub_1CB794190();
  v4 = (objc_class *)_s17AsyncAwaitAdapterCMa(0, *(_QWORD *)(v1 + 80), v2, v3);
  v6.receiver = v0;
  v6.super_class = v4;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

id sub_1CB794698(void *a1)
{
  id v1;

  v1 = a1;
  return sub_1CB794640();
}

uint64_t sub_1CB7946BC(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  sub_1CB785AB8(*(id *)((char *)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x58)));
  v3 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x60);
  sub_1CB846E40();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED88DEA0);
  sub_1CB846B40();
  v4 = sub_1CB846E40();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

id sub_1CB794764()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id sub_1CB794784()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = *MEMORY[0x1E0DEEDD8] & *v0;
  *(_QWORD *)((char *)v0 + *(_QWORD *)(v2 + 0x58)) = 0;
  v3 = (char *)v0 + *(_QWORD *)((*v1 & *v0) + 0x60);
  v4 = *(_QWORD *)(v2 + 80);
  sub_1CB846E40();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED88DEA0);
  v5 = sub_1CB846B40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
  v9.receiver = v0;
  v9.super_class = (Class)_s17AsyncAwaitAdapterCMa(0, v4, v6, v7);
  return objc_msgSendSuper2(&v9, sel_init);
}

id sub_1CB794850()
{
  return sub_1CB794784();
}

uint64_t _s17AsyncAwaitAdapterCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s17AsyncAwaitAdapterCMn);
}

id sub_1CB79487C(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

unint64_t sub_1CB79488C()
{
  unint64_t result;

  result = qword_1EF99D8D0;
  if (!qword_1EF99D8D0)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB849394, &type metadata for BiomeStreamError);
    atomic_store(result, (unint64_t *)&qword_1EF99D8D0);
  }
  return result;
}

SiriPrivateLearningAnalytics::UniversalSuggestionsCoreDataStorePolicies __swiftcall UniversalSuggestionsCoreDataStorePolicies.init()()
{
  _QWORD *v0;
  SiriPrivateLearningAnalytics::UniversalSuggestionsCoreDataStorePolicies result;

  *v0 = 100;
  return result;
}

void UniversalSuggestionsCoreDataStorePolicies.runPolicy(store:)(uint64_t a1)
{
  id v1;

  v1 = *(id *)(a1 + 24);
  sub_1CB846DA4();

}

uint64_t sub_1CB794944(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t inited;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8895C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CB848A50;
  type metadata accessor for UniversalSuggestionEvictor();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1CB794CFC;
  *(_QWORD *)(v7 + 24) = 0;
  KeyPath = swift_getKeyPath();
  v9 = swift_getKeyPath();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889508);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = v7;
  v11[4] = KeyPath;
  v11[5] = v9;
  *(_QWORD *)(inited + 56) = v10;
  *(_QWORD *)(inited + 64) = &protocol witness table for MaximumRecordCountPolicy<A, B, C, D>;
  *(_QWORD *)(inited + 32) = v11;
  v12 = a2;
  swift_retain();
  v13 = sub_1CB794D6C(inited, v12, a3);

  swift_release();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8892E8);
  swift_arrayDestroy();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    v15 = (_BYTE *)(v13 + 40);
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if (*v15 == 1)
      {
        v17 = (void *)*((_QWORD *)v15 - 1);
        v18 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v16 = sub_1CB78FC9C(0, v16[2] + 1, 1, v16);
        v20 = v16[2];
        v19 = v16[3];
        if (v20 >= v19 >> 1)
          v16 = sub_1CB78FC9C((_QWORD *)(v19 > 1), v20 + 1, 1, v16);
        v16[2] = v20 + 1;
        v16[v20 + 4] = v17;
      }
      v15 += 16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  if (!v16[2])
    return swift_bridgeObjectRelease();
  sub_1CB794F34();
  swift_allocError();
  *v21 = v16;
  return swift_willThrow();
}

uint64_t sub_1CB794BA4()
{
  uint64_t v0;

  return sub_1CB794944(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1CB794BC0(uint64_t a1)
{
  id v1;

  v1 = *(id *)(*(_QWORD *)a1 + 24);
  sub_1CB846DA4();

}

ValueMetadata *type metadata accessor for UniversalSuggestionsCoreDataStorePolicies()
{
  return &type metadata for UniversalSuggestionsCoreDataStorePolicies;
}

uint64_t sub_1CB794C3C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UniversalSuggestionEvictor()
{
  uint64_t result;

  result = qword_1ED889510;
  if (!qword_1ED889510)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CB794C9C()
{
  return swift_initClassMetadata2();
}

void sub_1CB794CD0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1CB794CFC()
{
  return swift_getKeyPath();
}

char *keypath_get_selector_lastUpdated()
{
  return sel_lastUpdated;
}

char *keypath_get_selector_candidates()
{
  return sel_candidates;
}

char *keypath_get_selector_count()
{
  return sel_count;
}

id sub_1CB794D3C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_count);
  *a2 = result;
  return result;
}

uint64_t sub_1CB794D6C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *i;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v24 = *MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1CB77640C(0, v5, 0);
    v6 = v23;
    for (i = (_QWORD *)(a1 + 32); ; i += 5)
    {
      v10 = i[3];
      v9 = i[4];
      __swift_project_boxed_opaque_existential_1(i, v10);
      v22 = a2;
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v9 + 8) + 16))(&v22, v10);
      if (v4)
        break;
      v11 = *(void **)(a3 + 24);
      v22 = 0;
      if ((objc_msgSend(v11, sel_save_, &v22) & 1) == 0)
      {
        v14 = v22;
        v10 = sub_1CB845E80();

        swift_willThrow();
        goto LABEL_8;
      }
      v12 = v22;
      v13 = 0;
LABEL_9:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v23 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1CB77640C(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v23;
      }
      v17 = *(_QWORD *)(v6 + 16);
      v16 = *(_QWORD *)(v6 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1CB77640C(v16 > 1, v17 + 1, 1);
        v6 = v23;
      }
      *(_QWORD *)(v6 + 16) = v17 + 1;
      v18 = v6 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v10;
      *(_BYTE *)(v18 + 40) = v13;
      if (!--v5)
        return v6;
    }
    v10 = v4;
LABEL_8:
    v4 = 0;
    v13 = 1;
    goto LABEL_9;
  }
  return v6;
}

unint64_t sub_1CB794F34()
{
  unint64_t result;

  result = qword_1EF99D8F0;
  if (!qword_1EF99D8F0)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for StorePolicyError, &type metadata for StorePolicyError);
    atomic_store(result, (unint64_t *)&qword_1EF99D8F0);
  }
  return result;
}

char *keypath_get_selector_candidateForUniversalSuggestion()
{
  return sel_candidateForUniversalSuggestion;
}

uint64_t sub_1CB794F8C()
{
  return sub_1CB794BA4();
}

uint64_t UniversalSuggestion.queryEntityName.getter()
{
  return sub_1CB794FFC(type metadata accessor for UniversalSuggestion);
}

uint64_t type metadata accessor for UniversalSuggestion(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED8892F0);
}

uint64_t UniversalSuggestion.candidates.getter()
{
  type metadata accessor for UniversalSuggestion(0);
  return swift_bridgeObjectRetain();
}

uint64_t UniversalRuntimeSuggestion.queryEntityName.getter()
{
  return sub_1CB794FFC(type metadata accessor for UniversalRuntimeSuggestion);
}

uint64_t sub_1CB794FFC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 20));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t UniversalRuntimeSuggestion.topCandidate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CB7953DC(type metadata accessor for UniversalRuntimeSuggestion, sub_1CB795690, a1);
}

uint64_t UniversalRuntimeSuggestion.needsDisambiguation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for UniversalRuntimeSuggestion(0) + 28));
}

double static UniversalCandidate.startingScore.getter()
{
  return 0.2;
}

uint64_t UniversalCandidate.candidateEntity.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for UniversalCandidate(0) + 20));
  return swift_retain();
}

double UniversalCandidate.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for UniversalCandidate(0) + 24));
}

uint64_t UniversalCandidate.score.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for UniversalCandidate(0);
  *(double *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*UniversalCandidate.score.modify())(_QWORD)
{
  type metadata accessor for UniversalCandidate(0);
  return nullsub_1;
}

double UniversalCandidate.lastSurfaced.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for UniversalCandidate(0) + 28));
}

uint64_t UniversalCandidate.lastSurfaced.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for UniversalCandidate(0);
  *(double *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*UniversalCandidate.lastSurfaced.modify())(_QWORD)
{
  type metadata accessor for UniversalCandidate(0);
  return nullsub_1;
}

int *UniversalCandidate.init(id:node:score:lastSurfaced:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v11;
  uint64_t v12;
  int *result;
  double v14;

  v11 = *a2;
  v12 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a5, a1, v12);
  result = (int *)type metadata accessor for UniversalCandidate(0);
  *(_QWORD *)(a5 + result[5]) = v11;
  *(double *)(a5 + result[6]) = a6;
  v14 = a3;
  if ((a4 & 1) != 0)
    v14 = 0.0;
  *(double *)(a5 + result[7]) = v14;
  return result;
}

uint64_t static UniversalCandidate.== infix(_:_:)()
{
  type metadata accessor for UniversalCandidate(0);
  return _s28SiriPrivateLearningAnalytics15UniversalEntityO2eeoiySbAC_ACtFZ_0() & 1;
}

BOOL static UniversalCandidate.> infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UniversalCandidate(0);
  return *(double *)(a2 + *(int *)(v4 + 24)) < *(double *)(a1 + *(int *)(v4 + 24));
}

uint64_t sub_1CB7952BC()
{
  return _s28SiriPrivateLearningAnalytics15UniversalEntityO2eeoiySbAC_ACtFZ_0() & 1;
}

uint64_t UniversalSuggestionCandidate.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
  v4 = sub_1CB846084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

double UniversalSuggestionCandidate.score.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
  return *(double *)(v1 + *(int *)(type metadata accessor for UniversalCandidate(0) + 24));
}

BOOL UniversalSuggestionCandidate.surfacedBefore.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
  return *(double *)(v1 + *(int *)(type metadata accessor for UniversalCandidate(0) + 28)) > 0.0;
}

uint64_t UniversalSuggestionCandidate.needsDisambiguation.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t UniversalSuggestionCandidate.leftHandKey.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_retain();
}

uint64_t UniversalSuggestionCandidate.rightHandValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CB7953DC(type metadata accessor for UniversalSuggestionCandidate, sub_1CB795700, a1);
}

uint64_t sub_1CB7953DC@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = v3 + *(int *)(a1(0) + 24);
  return a2(v5, a3);
}

uint64_t UniversalSuggestionCandidate.init(leftHandKey:rightHandValue:needsDisambiguation:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t result;

  *(_QWORD *)(a4 + 8) = *a1;
  v7 = type metadata accessor for UniversalSuggestionCandidate(0);
  result = sub_1CB795744(a2, a4 + *(int *)(v7 + 24));
  *(_BYTE *)a4 = a3;
  return result;
}

uint64_t _s28SiriPrivateLearningAnalytics19UniversalSuggestionV2id10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CB846084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t UniversalSuggestionSurfaced.init(suggestionId:timestamp:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v8 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for UniversalSuggestionSurfaced(0);
  v10 = a4 + *(int *)(result + 20);
  *(_QWORD *)v10 = a2;
  *(_BYTE *)(v10 + 8) = a3 & 1;
  return result;
}

uint64_t static UniversalSuggestionSurfaced.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double *v5;
  char v6;
  double *v7;
  char v8;

  if ((sub_1CB846048() & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for UniversalSuggestionSurfaced(0) + 20);
  v5 = (double *)(a1 + v4);
  v6 = *(_BYTE *)(a1 + v4 + 8);
  v7 = (double *)(a2 + v4);
  v8 = *(_BYTE *)(a2 + v4 + 8);
  if ((v6 & 1) != 0)
  {
    if ((v8 & 1) == 0)
      return 0;
  }
  else
  {
    if (*v5 != *v7)
      v8 = 1;
    if ((v8 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t sub_1CB795584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  double *v7;
  char v8;
  double *v9;
  int v10;

  if ((sub_1CB846048() & 1) != 0)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (double *)(a1 + v6);
    v8 = *(_BYTE *)(a1 + v6 + 8);
    v9 = (double *)(a2 + v6);
    v10 = *(unsigned __int8 *)(a2 + v6 + 8);
    if ((v8 & 1) != 0)
    {
      if (v10)
        return 1;
    }
    else
    {
      if (*v7 != *v9)
        LOBYTE(v10) = 1;
      if ((v10 & 1) == 0)
        return 1;
    }
  }
  return 0;
}

uint64_t _s28SiriPrivateLearningAnalytics19UniversalSuggestionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;

  if ((sub_1CB846048() & 1) != 0
    && ((v4 = type metadata accessor for UniversalSuggestion(0),
         v5 = *(int *)(v4 + 20),
         v6 = *(_QWORD *)(a1 + v5),
         v7 = *(_QWORD *)(a1 + v5 + 8),
         v8 = (_QWORD *)(a2 + v5),
         v6 == *v8)
      ? (v9 = v7 == v8[1])
      : (v9 = 0),
        v9 || (sub_1CB8471A0() & 1) != 0))
  {
    return sub_1CB79A064(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a2 + *(int *)(v4 + 24)));
  }
  else
  {
    return 0;
  }
}

uint64_t type metadata accessor for UniversalRuntimeSuggestion(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1EF99D958);
}

uint64_t sub_1CB795690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for UniversalCandidate(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED8892D8);
}

uint64_t type metadata accessor for UniversalSuggestionCandidate(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED889530);
}

uint64_t sub_1CB795700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UniversalCandidate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB795744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UniversalCandidate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for UniversalSuggestionSurfaced(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED889520);
}

uint64_t *initializeBufferWithCopyOfBuffer for UniversalSuggestion(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CB846084();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for UniversalSuggestion(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UniversalSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UniversalSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for UniversalSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for UniversalSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalSuggestion()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB795A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalSuggestion()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB795B20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1CB846084();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1CB795B9C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB846084();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for UniversalRuntimeSuggestion(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, int *);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, int *);
  void (*v22)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CB846084();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v22(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = &a1[v8];
    v11 = &a2[v8];
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = &a1[v9];
    v14 = &a2[v9];
    v15 = (int *)type metadata accessor for UniversalCandidate(0);
    v16 = *((_QWORD *)v15 - 1);
    v17 = *(unsigned int (**)(char *, uint64_t, int *))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v22(v13, v14, v7);
      *(_QWORD *)&v13[v15[5]] = *(_QWORD *)&v14[v15[5]];
      *(_QWORD *)&v13[v15[6]] = *(_QWORD *)&v14[v15[6]];
      *(_QWORD *)&v13[v15[7]] = *(_QWORD *)&v14[v15[7]];
      v20 = *(void (**)(char *, _QWORD, uint64_t, int *))(v16 + 56);
      swift_retain();
      v20(v13, 0, 1, v15);
    }
    a1[a3[7]] = a2[a3[7]];
  }
  return a1;
}

uint64_t destroy for UniversalRuntimeSuggestion(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_1CB846084();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for UniversalCandidate(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v5(v6, v4);
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for UniversalRuntimeSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, int *);
  uint64_t v18;
  void (*v19)(char *, _QWORD, uint64_t, int *);
  uint64_t v21;

  v6 = sub_1CB846084();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v21 = a3;
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (char *)(a1 + v9);
  v14 = (char *)(a2 + v9);
  v15 = (int *)type metadata accessor for UniversalCandidate(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(unsigned int (**)(char *, uint64_t, int *))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v13, (uint64_t)v14, v6);
    *(_QWORD *)&v13[v15[5]] = *(_QWORD *)&v14[v15[5]];
    *(_QWORD *)&v13[v15[6]] = *(_QWORD *)&v14[v15[6]];
    *(_QWORD *)&v13[v15[7]] = *(_QWORD *)&v14[v15[7]];
    v19 = *(void (**)(char *, _QWORD, uint64_t, int *))(v16 + 56);
    swift_retain();
    v19(v13, 0, 1, v15);
  }
  *(_BYTE *)(a1 + *(int *)(v21 + 28)) = *(_BYTE *)(a2 + *(int *)(v21 + 28));
  return a1;
}

uint64_t assignWithCopy for UniversalRuntimeSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, int *);
  int v17;
  int v18;
  void (*v19)(char *, _QWORD, uint64_t, int *);
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1CB846084();
  v22 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 24);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3;
  v11 = *(int *)(a3 + 24);
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = (int *)type metadata accessor for UniversalCandidate(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(uint64_t (**)(char *, uint64_t, int *))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      v7((uint64_t)v12, (uint64_t)v13, v6);
      *(_QWORD *)&v12[v14[5]] = *(_QWORD *)&v13[v14[5]];
      swift_retain();
      swift_release();
      *(_QWORD *)&v12[v14[6]] = *(_QWORD *)&v13[v14[6]];
      *(_QWORD *)&v12[v14[7]] = *(_QWORD *)&v13[v14[7]];
      goto LABEL_7;
    }
    sub_1CB796158((uint64_t)v12);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v12, v13, v6);
  *(_QWORD *)&v12[v14[5]] = *(_QWORD *)&v13[v14[5]];
  *(_QWORD *)&v12[v14[6]] = *(_QWORD *)&v13[v14[6]];
  *(_QWORD *)&v12[v14[7]] = *(_QWORD *)&v13[v14[7]];
  v19 = *(void (**)(char *, _QWORD, uint64_t, int *))(v15 + 56);
  swift_retain();
  v19(v12, 0, 1, v14);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(v23 + 28)) = *(_BYTE *)(a2 + *(int *)(v23 + 28));
  return a1;
}

uint64_t sub_1CB796158(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UniversalCandidate(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for UniversalRuntimeSuggestion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1CB846084();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for UniversalCandidate(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    *(_QWORD *)&v9[v11[5]] = *(_QWORD *)&v10[v11[5]];
    *(_QWORD *)&v9[v11[6]] = *(_QWORD *)&v10[v11[6]];
    *(_QWORD *)&v9[v11[7]] = *(_QWORD *)&v10[v11[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for UniversalRuntimeSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, int *);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1CB846084();
  v23 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v24 = a3;
  v13 = *(int *)(a3 + 24);
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = (int *)type metadata accessor for UniversalCandidate(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(char *, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      v7((uint64_t)v14, (uint64_t)v15, v6);
      *(_QWORD *)&v14[v16[5]] = *(_QWORD *)&v15[v16[5]];
      swift_release();
      *(_QWORD *)&v14[v16[6]] = *(_QWORD *)&v15[v16[6]];
      *(_QWORD *)&v14[v16[7]] = *(_QWORD *)&v15[v16[7]];
      goto LABEL_7;
    }
    sub_1CB796158((uint64_t)v14);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v14, v15, v6);
  *(_QWORD *)&v14[v16[5]] = *(_QWORD *)&v15[v16[5]];
  *(_QWORD *)&v14[v16[6]] = *(_QWORD *)&v15[v16[6]];
  *(_QWORD *)&v14[v16[7]] = *(_QWORD *)&v15[v16[7]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(v24 + 28)) = *(_BYTE *)(a2 + *(int *)(v24 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalRuntimeSuggestion()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB79647C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalRuntimeSuggestion()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB796538(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1CB846084();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1CB7965E4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1CB846084();
  if (v0 <= 0x3F)
  {
    sub_1CB796678();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1CB796678()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF99D968[0])
  {
    type metadata accessor for UniversalCandidate(255);
    v0 = sub_1CB846E40();
    if (!v1)
      atomic_store(v0, qword_1EF99D968);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for UniversalCandidate(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1CB846084();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for UniversalCandidate(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for UniversalCandidate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for UniversalCandidate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for UniversalCandidate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for UniversalCandidate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  v7 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalCandidate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB796998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalCandidate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB796A20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1CB846084();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1CB796A98()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB846084();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for UniversalSuggestionCandidate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1CB846084();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_retain();
    v9(v6, v7, v8);
    v10 = (int *)type metadata accessor for UniversalCandidate(0);
    *(_QWORD *)&v6[v10[5]] = *(_QWORD *)&v7[v10[5]];
    *(_QWORD *)&v6[v10[6]] = *(_QWORD *)&v7[v10[6]];
    *(_QWORD *)&v6[v10[7]] = *(_QWORD *)&v7[v10[7]];
  }
  swift_retain();
  return v3;
}

uint64_t destroy for UniversalSuggestionCandidate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for UniversalCandidate(0);
  return swift_release();
}

uint64_t initializeWithCopy for UniversalSuggestionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1CB846084();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  v9 = (int *)type metadata accessor for UniversalCandidate(0);
  *(_QWORD *)(v5 + v9[5]) = *(_QWORD *)(v6 + v9[5]);
  *(_QWORD *)(v5 + v9[6]) = *(_QWORD *)(v6 + v9[6]);
  *(_QWORD *)(v5 + v9[7]) = *(_QWORD *)(v6 + v9[7]);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for UniversalSuggestionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for UniversalCandidate(0);
  *(_QWORD *)(v7 + v10[5]) = *(_QWORD *)(v8 + v10[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v7 + v10[6]) = *(_QWORD *)(v8 + v10[6]);
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  return a1;
}

uint64_t initializeWithTake for UniversalSuggestionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  v8 = (int *)type metadata accessor for UniversalCandidate(0);
  *(_QWORD *)(v5 + v8[5]) = *(_QWORD *)(v6 + v8[5]);
  *(_QWORD *)(v5 + v8[6]) = *(_QWORD *)(v6 + v8[6]);
  *(_QWORD *)(v5 + v8[7]) = *(_QWORD *)(v6 + v8[7]);
  return a1;
}

uint64_t assignWithTake for UniversalSuggestionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for UniversalCandidate(0);
  *(_QWORD *)(v7 + v10[5]) = *(_QWORD *)(v8 + v10[5]);
  swift_release();
  *(_QWORD *)(v7 + v10[6]) = *(_QWORD *)(v8 + v10[6]);
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalSuggestionCandidate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB796F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UniversalCandidate(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for UniversalSuggestionCandidate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB796F8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UniversalCandidate(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1CB797000()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UniversalCandidate(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for UniversalSuggestionSurfaced(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CB846084();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
  }
  return a1;
}

uint64_t destroy for UniversalSuggestionSurfaced(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CB846084();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for UniversalSuggestionSurfaced(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t assignWithCopy for UniversalSuggestionSurfaced(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  return a1;
}

uint64_t initializeWithTake for UniversalSuggestionSurfaced(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t assignWithTake for UniversalSuggestionSurfaced(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalSuggestionSurfaced()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB797308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CB846084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for UniversalSuggestionSurfaced()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB797350(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CB846084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1CB797390()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB846084();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t SELFFeatureExtractor.extract(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
  return (*(uint64_t (**)(uint64_t *))(*(_QWORD *)(a3 + 8) + 16))(&v4);
}

uint64_t IntentFeatureExtractor.intentTypes.getter()
{
  uint64_t v0;

  sub_1CB7976DC();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CB848A50;
  *(_QWORD *)(v0 + 32) = swift_getAssociatedTypeWitness();
  return v0;
}

uint64_t IntentFeatureExtractor.extract(from:)(id *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;

  v5 = objc_msgSend(*a1, sel_intent);
  swift_getAssociatedTypeWitness();
  v6 = swift_dynamicCastUnknownClass();
  if (v6)
    v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 24))(v6, a2, a3);
  else
    v7 = MEMORY[0x1E0DEE9D8];

  return v7;
}

uint64_t BiomeEventFeatureExtractorBase.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t BiomeEventFeatureExtractorBase.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t BiomeEventFeatureExtractorBase.extract(from:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  if (objc_msgSend(a1, sel_error) != 1)
    return MEMORY[0x1E0DEE9D8];
  if (!objc_msgSend(a1, sel_eventBody))
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DA00);
  if ((swift_dynamicCast() & 1) == 0)
    return MEMORY[0x1E0DEE9D8];
  v3 = (*(uint64_t (**)())(*(_QWORD *)v1 + 96))();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t BiomeEventFeatureExtractorBase.eventType.getter()
{
  uint64_t v0;

  return nullsub_1(*(_QWORD *)(*(_QWORD *)v0 + 80));
}

uint64_t sub_1CB797634()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t BiomeEventFeatureExtractorBase.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BiomeEventFeatureExtractorBase.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB797658(uint64_t a1)
{
  return nullsub_1(*(_QWORD *)(a1 + 80));
}

uint64_t sub_1CB797660(void **a1)
{
  return BiomeEventFeatureExtractorBase.extract(from:)(*a1);
}

uint64_t sub_1CB797684()
{
  unint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = UniversalSuggestionSummaryExtractor.extract(from:)(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1CB7976DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BF70);
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_1ED88DE80;
  else
    v2 = (uint64_t *)&unk_1ED88C028;
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

uint64_t dispatch thunk of FeatureExtractor.extract(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SELFFeatureExtractor.extract(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AppInteractionFeatureExtractor.extract(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of IntentFeatureExtractor.extract(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BiomeEventFeatureExtractor.eventType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1CB797750()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for BiomeEventFeatureExtractorBase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BiomeEventFeatureExtractorBase);
}

uint64_t method lookup function for BiomeEventFeatureExtractorBase()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiomeEventFeatureExtractorBase.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of BiomeEventFeatureExtractorBase.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

id GroundTruthRecord.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id GroundTruthRecord.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for GroundTruthRecord();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for GroundTruthRecord()
{
  return objc_opt_self();
}

uint64_t sub_1CB7978E0()
{
  sub_1CB797A24();
  return sub_1CB84738C();
}

uint64_t sub_1CB797908()
{
  sub_1CB797A24();
  return sub_1CB847398();
}

id GroundTruthRecord.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroundTruthRecord();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CB797960(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DAA0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB797A24();
  sub_1CB847350();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1CB797A24()
{
  unint64_t result;

  result = qword_1EF99DAA8;
  if (!qword_1EF99DAA8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84A284, &type metadata for GroundTruthRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99DAA8);
  }
  return result;
}

uint64_t method lookup function for GroundTruthRecord()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GroundTruthRecord.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

ValueMetadata *type metadata accessor for GroundTruthRecord.CodingKeys()
{
  return &type metadata for GroundTruthRecord.CodingKeys;
}

unint64_t sub_1CB797AB4()
{
  unint64_t result;

  result = qword_1EF99DAB0;
  if (!qword_1EF99DAB0)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84A234, &type metadata for GroundTruthRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99DAB0);
  }
  return result;
}

unint64_t sub_1CB797AFC()
{
  unint64_t result;

  result = qword_1EF99DAB8;
  if (!qword_1EF99DAB8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84A25C, &type metadata for GroundTruthRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99DAB8);
  }
  return result;
}

uint64_t PLUSSchemaEventConstructor.__allocating_init(plusId:suggestionGenerationDomain:)(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  v5 = v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId;
  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  *(_DWORD *)(v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = a2;
  return v4;
}

uint64_t PLUSSchemaEventConstructor.init(plusId:suggestionGenerationDomain:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId;
  v6 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  *(_DWORD *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = a2;
  return v2;
}

void *sub_1CB797C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v17;

  v5 = sub_1CB798BCC();
  if (v5)
  {
    v6 = v5;
    v7 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(*(unsigned int *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain));
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A140]), sel_init);
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, sel_setSuggestionDomainMetadata_, v8);
        objc_msgSend(v10, sel_setGeneratedSuggestion_, a1);
        objc_msgSend(v10, sel_setSuggestionChangeDataCaptureMetadata_, a2);
        objc_msgSend(v6, sel_setSuggestionGenerated_, v10);

        return v6;
      }

      v6 = v8;
    }

  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v11 = sub_1CB8466D8();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED890248);
  v12 = sub_1CB8466C0();
  v13 = sub_1CB846C90();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v17 = v15;
    *(_DWORD *)v14 = 136315138;
    sub_1CB775A54(0xD00000000000003ALL, 0x80000001CB8534C0, &v17);
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v12, v13, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v15, -1, -1);
    MEMORY[0x1D179FE84](v14, -1, -1);
  }

  return 0;
}

void *sub_1CB797E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v25;

  v7 = sub_1CB798BCC();
  if (v7)
  {
    v8 = v7;
    v9 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(*(unsigned int *)(v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain));
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A158]), sel_init);
      if (v11)
      {
        v12 = v11;
        objc_msgSend(v11, sel_setSuggestionDomainMetadata_, v10);
        v13 = objc_allocWithZone(MEMORY[0x1E0D9A500]);
        v14 = (void *)sub_1CB84603C();
        v15 = objc_msgSend(v13, sel_initWithNSUUID_, v14);

        objc_msgSend(v12, sel_setSuggestionLinkId_, v15);
        v16 = objc_allocWithZone(MEMORY[0x1E0D9A500]);
        v17 = (void *)sub_1CB84603C();
        v18 = objc_msgSend(v16, sel_initWithNSUUID_, v17);

        objc_msgSend(v12, sel_setOriginalRequestId_, v18);
        objc_msgSend(v12, sel_setSuggestionOutcome_, a3);
        objc_msgSend(v12, sel_setDomainOutcome_, a4);
        objc_msgSend(v8, sel_setSuggestionOutcomeReported_, v12);

        return v8;
      }

      v8 = v10;
    }

  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v19 = sub_1CB8466D8();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED890248);
  v20 = sub_1CB8466C0();
  v21 = sub_1CB846C90();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v25 = v23;
    *(_DWORD *)v22 = 136315138;
    sub_1CB775A54(0xD00000000000005ELL, 0x80000001CB853500, &v25);
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v20, v21, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v23, -1, -1);
    MEMORY[0x1D179FE84](v22, -1, -1);
  }

  return 0;
}

void *sub_1CB798110(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v21;

  v5 = sub_1CB798BCC();
  if (v5)
  {
    v6 = v5;
    v7 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(*(unsigned int *)(v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain));
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A118]), sel_init);
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, sel_setSuggestionDomainMetadata_, v8);
        v11 = objc_allocWithZone(MEMORY[0x1E0D9A500]);
        v12 = (void *)sub_1CB84603C();
        v13 = objc_msgSend(v11, sel_initWithNSUUID_, v12);

        objc_msgSend(v10, sel_setOriginalRequestId_, v13);
        sub_1CB798E84();
        v14 = (void *)sub_1CB846A44();
        objc_msgSend(v10, sel_setMatchedResults_, v14);

        objc_msgSend(v10, sel_setMatchedResultsPopulated_, a3 & 1);
        objc_msgSend(v6, sel_setPlusSuggesterQueried_, v10);

        return v6;
      }

      v6 = v8;
    }

  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v15 = sub_1CB8466D8();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED890248);
  v16 = sub_1CB8466C0();
  v17 = sub_1CB846C90();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21 = v19;
    *(_DWORD *)v18 = 136315138;
    sub_1CB775A54(0xD00000000000004BLL, 0x80000001CB853560, &v21);
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v16, v17, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v19, -1, -1);
    MEMORY[0x1D179FE84](v18, -1, -1);
  }

  return 0;
}

void *sub_1CB7983A8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v21;

  v6 = sub_1CB798BCC();
  if (v6)
  {
    v7 = v6;
    v8 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(*(unsigned int *)(v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain));
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A110]), sel_init);
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v10, sel_setSuggestionDomainMetadata_, v9);
        v12 = objc_allocWithZone(MEMORY[0x1E0D9A500]);
        v13 = (void *)sub_1CB84603C();
        v14 = objc_msgSend(v12, sel_initWithNSUUID_, v13);

        objc_msgSend(v11, sel_setOriginalRequestId_, v14);
        objc_msgSend(v11, sel_setIsSuggesterEnabled_, a2 & 1);
        objc_msgSend(v11, sel_setDomainConfiguredState_, a3);
        objc_msgSend(v7, sel_setPlusSuggesterMetadataReported_, v11);

        return v7;
      }

      v7 = v9;
    }

  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v15 = sub_1CB8466D8();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED890248);
  v16 = sub_1CB8466C0();
  v17 = sub_1CB846C90();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21 = v19;
    *(_DWORD *)v18 = 136315138;
    sub_1CB775A54(0xD000000000000056, 0x80000001CB8535B0, &v21);
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v16, v17, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v19, -1, -1);
    MEMORY[0x1D179FE84](v18, -1, -1);
  }

  return 0;
}

void *sub_1CB798624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v27;

  v9 = sub_1CB798BCC();
  if (v9)
  {
    v10 = v9;
    v11 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(*(unsigned int *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain));
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A120]), sel_init);
      if (v13)
      {
        v14 = v13;
        objc_msgSend(v13, sel_setSuggestionDomainMetadata_, v12);
        v15 = objc_allocWithZone(MEMORY[0x1E0D9A500]);
        v16 = (void *)sub_1CB84603C();
        v17 = objc_msgSend(v15, sel_initWithNSUUID_, v16);

        objc_msgSend(v14, sel_setOriginalRequestId_, v17);
        v18 = objc_allocWithZone(MEMORY[0x1E0D9A500]);
        v19 = (void *)sub_1CB84603C();
        v20 = objc_msgSend(v18, sel_initWithNSUUID_, v19);

        objc_msgSend(v14, sel_setSuggestionLinkId_, v20);
        objc_msgSend(v14, sel_setSuggestionSurfaced_, a3);
        objc_msgSend(v14, sel_setSuggestionNoveltyState_, a4);
        objc_msgSend(v14, sel_setDomainSuggestionMetadata_, a5);
        objc_msgSend(v10, sel_setPlusSuggesterSuggestionMetadataReported_, v14);

        return v10;
      }

      v10 = v12;
    }

  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v21 = sub_1CB8466D8();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED890248);
  v22 = sub_1CB8466C0();
  v23 = sub_1CB846C90();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v27 = v25;
    *(_DWORD *)v24 = 136315138;
    sub_1CB775A54(0xD00000000000008BLL, 0x80000001CB853610, &v27);
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v22, v23, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v25, -1, -1);
    MEMORY[0x1D179FE84](v24, -1, -1);
  }

  return 0;
}

void *sub_1CB798914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v23;

  v5 = sub_1CB798BCC();
  if (v5)
  {
    v6 = v5;
    v7 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(*(unsigned int *)(v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain));
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A128]), sel_init);
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, sel_setSuggestionDomainMetadata_, v8);
        v11 = objc_allocWithZone(MEMORY[0x1E0D9A500]);
        v12 = (void *)sub_1CB84603C();
        v13 = objc_msgSend(v11, sel_initWithNSUUID_, v12);

        objc_msgSend(v10, sel_setOriginalRequestId_, v13);
        v14 = objc_allocWithZone(MEMORY[0x1E0D9A500]);
        v15 = (void *)sub_1CB84603C();
        v16 = objc_msgSend(v14, sel_initWithNSUUID_, v15);

        objc_msgSend(v10, sel_setSuggestionLinkId_, v16);
        objc_msgSend(v10, sel_setSuggestionRedundancyState_, a3);
        objc_msgSend(v6, sel_setPlusSuggesterSuggestionRedundancyReported_, v10);

        return v6;
      }

      v6 = v8;
    }

  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v17 = sub_1CB8466D8();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED890248);
  v18 = sub_1CB8466C0();
  v19 = sub_1CB846C90();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v23 = v21;
    *(_DWORD *)v20 = 136315138;
    sub_1CB775A54(0xD000000000000064, 0x80000001CB8536A0, &v23);
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v18, v19, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v21, -1, -1);
    MEMORY[0x1D179FE84](v20, -1, -1);
  }

  return 0;
}

void *sub_1CB798BCC()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v13;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A100]), sel_init);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A108]), sel_init);
    if (v2)
    {
      v3 = v2;
      v4 = objc_allocWithZone(MEMORY[0x1E0D9A500]);
      v5 = (void *)sub_1CB84603C();
      v6 = objc_msgSend(v4, sel_initWithNSUUID_, v5);

      objc_msgSend(v3, sel_setPlusId_, v6);
      objc_msgSend(v1, sel_setEventMetadata_, v3);

      return v1;
    }

  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v7 = sub_1CB8466D8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED890248);
  v8 = sub_1CB8466C0();
  v9 = sub_1CB846C90();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v13 = v11;
    *(_DWORD *)v10 = 136315138;
    sub_1CB775A54(0xD000000000000015, 0x80000001CB853780, &v13);
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v8, v9, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v11, -1, -1);
    MEMORY[0x1D179FE84](v10, -1, -1);
  }

  return 0;
}

uint64_t PLUSSchemaEventConstructor.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId;
  v2 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t PLUSSchemaEventConstructor.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId;
  v2 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

unint64_t sub_1CB798E84()
{
  unint64_t result;

  result = qword_1EF99DAD0;
  if (!qword_1EF99DAD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF99DAD0);
  }
  return result;
}

uint64_t sub_1CB798EC0()
{
  return type metadata accessor for PLUSSchemaEventConstructor();
}

uint64_t type metadata accessor for PLUSSchemaEventConstructor()
{
  uint64_t result;

  result = qword_1EF99DB00;
  if (!qword_1EF99DB00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CB798F04()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB846084();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PLUSSchemaEventConstructor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.__allocating_init(plusId:suggestionGenerationDomain:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.suggestionGenerated(suggestion:changeDataCaptureMetadata:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.outcomeReported(originalRequestId:suggestionLinkId:suggestionOutcome:suggestionDomainOutcome:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.suggesterQueried(originalRequestId:matchedResults:matchedResultsPopulated:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.suggesterMetadataReported(originalRequestId:isSuggesterEnabled:domainConfiguredState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.suggesterSuggestionMetadataReported(originalRequestId:suggestionLinkId:suggestionSurfaced:suggestionNoveltyState:domainSuggestionMetadata:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.suggesterSuggestionRedundancyReported(originalRequestId:suggestionLinkId:suggestionRedundancyState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

void sub_1CB798FD8(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v2;
  v5 = v2;

}

id sub_1CB79902C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 16);
}

void sub_1CB79905C(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(void **)(v3 + 24);
  *(_QWORD *)(v3 + 24) = v2;
  v5 = v2;

}

id sub_1CB7990B0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 24);
}

uint64_t CoreDataStore.__allocating_init(path:modelFileName:)(void *a1, void *a2, id *a3, void (*a4)(char *, uint64_t))
{
  swift_allocObject();
  return CoreDataStore.init(path:modelFileName:)(a1, a2, a3, a4);
}

uint64_t CoreDataStore.init(path:modelFileName:)(void *a1, void *a2, id *a3, void (*a4)(char *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  id v6;

  v5 = v4;
  v6 = sub_1CB79938C(a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = objc_msgSend(v6, sel_newBackgroundContext);
  return v5;
}

id sub_1CB79938C(void *a1, void *a2, id *a3, void (*a4)(char *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  char *v30;
  id v31;
  void *v32;
  void (*v33)(char *, uint64_t);
  unsigned __int8 v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  void *v45;
  uint64_t ErrorValue;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  __int128 v55;
  _OWORD *v56;
  void *v58;
  void *v59;
  id v60;
  __int128 v61;
  _OWORD *v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t *v65;
  id v66[2];
  id v67;
  char *v68;
  char *v69;
  id *v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  __int128 aBlock;
  void (*v76)(uint64_t, void *, void *);
  void *v77;
  void (*v78)(uint64_t, void *);
  uint64_t v79;
  uint64_t v80;

  v66[1] = a1;
  v67 = a2;
  v80 = *MEMORY[0x1E0C80C00];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CB845F58();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v68 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v66 - v14;
  MEMORY[0x1E0C80A78](v13);
  v69 = (char *)v66 - v16;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v18 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v70 = a3;
  v71 = a4;
  v19 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v20 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v21 = objc_msgSend(v18, sel_URLForResource_withExtension_, v19, v20);

  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_9;
  }
  sub_1CB845F34();

  v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v22(v8, v15, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_9:
    sub_1CB799DA0((uint64_t)v8);
LABEL_10:
    *(_QWORD *)&aBlock = 0;
    *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
    sub_1CB846F30();
    swift_bridgeObjectRelease();
    strcpy((char *)&aBlock, "Couldn't load ");
    HIBYTE(aBlock) = -18;
    sub_1CB846954();
    sub_1CB846954();
    v55 = aBlock;
    sub_1CB799DE0();
    swift_allocError();
    *v56 = v55;
    return (id)swift_willThrow();
  }
  v23 = v69;
  v22(v69, v8, v9);
  v24 = objc_allocWithZone(MEMORY[0x1E0C97B98]);
  v25 = (void *)sub_1CB845EE0();
  v26 = objc_msgSend(v24, sel_initWithContentsOfURL_, v25);

  if (!v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
    goto LABEL_10;
  }
  v27 = objc_allocWithZone(MEMORY[0x1E0C97BC8]);
  swift_bridgeObjectRetain();
  v28 = v26;
  v29 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  v66[0] = objc_msgSend(v27, sel_initWithName_managedObjectModel_, v29, v28);

  v30 = v68;
  sub_1CB845EC8();
  v31 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1CB845F28();
  v32 = (void *)sub_1CB845EE0();
  v33 = *(void (**)(char *, uint64_t))(v10 + 8);
  v33(v15, v9);
  *(_QWORD *)&aBlock = 0;
  v34 = objc_msgSend(v31, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v32, 1, 0, &aBlock);

  v35 = (id)aBlock;
  if ((v34 & 1) != 0)
  {
    v67 = v28;
    v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97C08]), sel_init);
    v37 = (void *)sub_1CB845EE0();
    objc_msgSend(v36, sel_setURL_, v37);

    objc_msgSend(v36, sel_setReadOnly_, 0);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1CB84A330;
    *(_QWORD *)(v38 + 32) = v36;
    *(_QWORD *)&aBlock = v38;
    sub_1CB846A74();
    sub_1CB799E6C();
    v39 = v36;
    v40 = (void *)sub_1CB846A44();
    swift_bridgeObjectRelease();
    v41 = v66[0];
    objc_msgSend(v66[0], sel_setPersistentStoreDescriptions_, v40);

    v42 = swift_allocObject();
    v43 = v41;
    *(_QWORD *)(v42 + 16) = 0;
    v44 = (_QWORD *)(v42 + 16);
    v78 = sub_1CB799ECC;
    v79 = v42;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v76 = sub_1CB7A2148;
    v77 = &block_descriptor_1;
    v45 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v43, sel_loadPersistentStoresWithCompletionHandler_, v45);
    _Block_release(v45);
    swift_beginAccess();
    if (*v44)
    {
      v73 = 0;
      v74 = 0xE000000000000000;
      sub_1CB846F30();
      swift_bridgeObjectRelease();
      v73 = 0xD00000000000001ELL;
      v74 = 0x80000001CB8538A0;
      sub_1CB846954();
      sub_1CB846954();
      if (*v44)
      {
        ErrorValue = swift_getErrorValue();
        v70 = v66;
        v71 = v33;
        v47 = v72;
        v48 = v39;
        v49 = *(_QWORD *)(v72 - 8);
        MEMORY[0x1E0C80A78](ErrorValue);
        v51 = (char *)v66 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v49 + 16))(v51);
        sub_1CB84729C();
        v52 = *(void (**)(char *, uint64_t))(v49 + 8);
        v39 = v48;
        v53 = v51;
        v30 = v68;
        v54 = v47;
        v33 = v71;
        v52(v53, v54);
      }
      sub_1CB846954();
      swift_bridgeObjectRelease();
      v63 = v73;
      v64 = v74;
      sub_1CB799DE0();
      swift_allocError();
      *v65 = v63;
      v65[1] = v64;
      swift_willThrow();

      v33(v30, v9);
      v33(v69, v9);
      return (id)swift_release();
    }
    else
    {

      v33(v30, v9);
      v33(v69, v9);
      swift_release();
      return v66[0];
    }
  }
  else
  {
    v58 = v35;
    v59 = (void *)sub_1CB845E80();

    swift_willThrow();
    *(_QWORD *)&aBlock = 0;
    *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
    sub_1CB846F30();
    swift_bridgeObjectRelease();
    *(_QWORD *)&aBlock = 0xD000000000000026;
    *((_QWORD *)&aBlock + 1) = 0x80000001CB853830;
    sub_1CB799E24();
    sub_1CB847170();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    v73 = (unint64_t)v59;
    v60 = v59;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
    sub_1CB8468DC();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    v61 = aBlock;
    sub_1CB799DE0();
    swift_allocError();
    *v62 = v61;
    swift_willThrow();

    v33(v30, v9);
    return (id)((uint64_t (*)(char *, uint64_t))v33)(v23, v9);
  }
}

void sub_1CB799C18(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;

  swift_beginAccess();
  v5 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a2;
  v6 = a2;

}

uint64_t CoreDataStore.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CoreDataStore.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoreDataStore()
{
  return objc_opt_self();
}

id sub_1CB799CE4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 16);
  *a2 = v4;
  return v4;
}

id sub_1CB799D2C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 24);
  *a2 = v4;
  return v4;
}

uint64_t method lookup function for CoreDataStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreDataStore.context.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of CoreDataStore.persistentContainer.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of CoreDataStore.__allocating_init(path:modelFileName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1CB799DA0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1CB799DE0()
{
  unint64_t result;

  result = qword_1EF99DBD0;
  if (!qword_1EF99DBD0)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84A3A4, &type metadata for CoreDataStoreError);
    atomic_store(result, (unint64_t *)&qword_1EF99DBD0);
  }
  return result;
}

unint64_t sub_1CB799E24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED88A268;
  if (!qword_1ED88A268)
  {
    v1 = sub_1CB845F58();
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1ED88A268);
  }
  return result;
}

unint64_t sub_1CB799E6C()
{
  unint64_t result;

  result = qword_1ED88DE18;
  if (!qword_1ED88DE18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED88DE18);
  }
  return result;
}

uint64_t sub_1CB799EA8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1CB799ECC(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1CB799C18(a1, a2, v2);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t getEnumTagSinglePayload for CoreDataStoreError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreDataStoreError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreDataStoreError()
{
  return &type metadata for CoreDataStoreError;
}

uint64_t sub_1CB799FA8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_1CB8469C0();
  else
    return 0;
}

uint64_t sub_1CB799FE8(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = sub_1CB79C478(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = sub_1CB79C9CC(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1CB79A064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;

  v52 = type metadata accessor for UniversalCandidate(0);
  v4 = MEMORY[0x1E0C80A78](v52);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v48 - v8;
  v53 = a1;
  v54 = a2;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v10 || v53 == v54)
    return 1;
  v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = *(_QWORD *)(v7 + 72);
  v49 = 0;
  v50 = v12;
  v48 = v6;
  v51 = (char *)&v48 - v8;
  while (1)
  {
    sub_1CB795700(v53 + v11, (uint64_t)v9);
    sub_1CB795700(v54 + v11, (uint64_t)v6);
    v13 = *(_QWORD *)&v9[*(int *)(v52 + 20)];
    swift_retain();
    swift_retain();
    v14 = sub_1CB8462E8();
    if (!v14)
      goto LABEL_23;
    v15 = v14;
    v16 = v14 & 0xFFFFFFFFFFFFFF8;
    if (v14 >> 62)
    {
      if (!sub_1CB847044())
      {
LABEL_22:
        swift_bridgeObjectRelease();
LABEL_23:
        v20 = 0;
        v22 = 0;
        goto LABEL_24;
      }
    }
    else if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_22;
    }
    if ((v15 & 0xC000000000000001) == 0)
      break;
    MEMORY[0x1D179F320](0, v15);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_13:
    v19 = sub_1CB7B6A8C();
    v20 = v19;
    v22 = v21;
    if (v21)
    {
      v55 = v19;
      v23 = sub_1CB8462DC();
      if (v23)
      {
        v24 = v23;
        swift_retain();
        v25 = v49;
        v26 = sub_1CB7B82CC(v24);
        v49 = v25;
        swift_bridgeObjectRelease();
        v27 = v13;
        swift_release();
        v57 = (uint64_t)v26;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A728);
        sub_1CB79D0B0();
        v28 = sub_1CB846858();
        v30 = v29;
        swift_bridgeObjectRelease();
        v31 = HIBYTE(v30) & 0xF;
        if ((v30 & 0x2000000000000000) == 0)
          v31 = v28 & 0xFFFFFFFFFFFFLL;
        if (v31)
        {
          v57 = 91;
          v58 = 0xE100000000000000;
          sub_1CB846954();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1CB846954();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1CB846954();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v20 = v57;
          v22 = v58;
          v6 = v48;
          v13 = v27;
        }
        else
        {
          swift_bridgeObjectRelease();
          v6 = v48;
          v13 = v27;
          v20 = v55;
        }
      }
      else
      {
        v20 = v55;
      }
    }
LABEL_24:
    swift_retain();
    v32 = sub_1CB8462E8();
    v56 = v13;
    if (!v32)
    {
      swift_release();
      v36 = 0;
      v38 = 0;
      if (!v22)
        goto LABEL_37;
      goto LABEL_44;
    }
    v33 = v32;
    v55 = v20;
    v34 = v32 & 0xFFFFFFFFFFFFFF8;
    if (v32 >> 62)
    {
      if (!sub_1CB847044())
      {
LABEL_42:
        swift_release();
        swift_bridgeObjectRelease();
        v36 = 0;
        v38 = 0;
        goto LABEL_43;
      }
    }
    else if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_42;
    }
    if ((v33 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1D179F320](0, v33);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = *(_QWORD *)(v34 + 16);
      result = swift_bridgeObjectRelease();
      if (!v35)
        goto LABEL_55;
    }
    v36 = sub_1CB7B6A8C();
    v38 = v37;
    if (v37 && (v39 = sub_1CB8462DC()) != 0)
    {
      v40 = v39;
      swift_retain();
      v41 = v49;
      v42 = sub_1CB7B82CC(v40);
      v49 = v41;
      swift_bridgeObjectRelease();
      swift_release();
      v57 = (uint64_t)v42;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A728);
      sub_1CB79D0B0();
      v43 = sub_1CB846858();
      v45 = v44;
      swift_bridgeObjectRelease();
      v46 = HIBYTE(v45) & 0xF;
      if ((v45 & 0x2000000000000000) == 0)
        v46 = v43 & 0xFFFFFFFFFFFFLL;
      if (v46)
      {
        v57 = 91;
        v58 = 0xE100000000000000;
        sub_1CB846954();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1CB846954();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1CB846954();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v36 = v57;
        v38 = v58;
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      v6 = v48;
    }
    else
    {
      swift_release();
    }
LABEL_43:
    v20 = v55;
    if (!v22)
    {
LABEL_37:
      if (v38)
        goto LABEL_52;
      swift_release();
      swift_release();
      goto LABEL_6;
    }
LABEL_44:
    if (!v38)
    {
LABEL_52:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1CB796158((uint64_t)v6);
      sub_1CB796158((uint64_t)v51);
      return 0;
    }
    if (v20 == v36 && v22 == v38)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      v9 = v51;
      sub_1CB796158((uint64_t)v6);
      sub_1CB796158((uint64_t)v9);
      goto LABEL_7;
    }
    v47 = sub_1CB8471A0();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CB796158((uint64_t)v6);
    v9 = v51;
    sub_1CB796158((uint64_t)v51);
    if ((v47 & 1) == 0)
      return 0;
LABEL_7:
    v11 += v50;
    if (!--v10)
      return 1;
  }
  v17 = *(_QWORD *)(v16 + 16);
  result = swift_bridgeObjectRelease();
  if (v17)
    goto LABEL_13;
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

BOOL sub_1CB79A65C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = a1 + 5;
  v6 = a2 + 5;
  do
  {
    v8 = *v5++;
    v7 = v8;
    v10 = *v6++;
    v9 = v10;
    v12 = v4-- != 0;
    result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t sub_1CB79A6D0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1CB8471A0(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a1 + 7;
    for (i = a2 + 7; ; i += 2)
    {
      v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1CB8471A0() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1CB79A794(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return 0;
  if (v2 != 1)
  {
    v4 = v2 - 2;
    v5 = (_BYTE *)(a1 + 33);
    v6 = (_BYTE *)(a2 + 33);
    do
    {
      v7 = v4;
      v8 = *v5 ^ *v6;
      if ((v8 & 1) != 0)
        break;
      --v4;
      ++v5;
      ++v6;
    }
    while (v7);
    LOBYTE(v2) = v8 ^ 1;
  }
  return v2 & 1;
}

void Feature.confidence.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 33);
}

uint64_t static Feature.name.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DBD8);
  v0 = sub_1CB8468DC();
  v2 = v1;
  swift_bridgeObjectRetain();
  sub_1CB799FA8(v0, v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    if ((sub_1CB84681C() & 1) != 0)
    {
      v5 = sub_1CB8468E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1CB7F3CFC(1uLL, v0, v2);
      swift_bridgeObjectRelease();
      sub_1CB79C888();
      swift_bridgeObjectRetain();
      sub_1CB846948();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return v0;
}

uint64_t sub_1CB79A968()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DBD8);
  v0 = sub_1CB8468DC();
  v2 = v1;
  swift_bridgeObjectRetain();
  sub_1CB799FA8(v0, v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    if ((sub_1CB84681C() & 1) != 0)
    {
      v5 = sub_1CB8468E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1CB7F3CFC(1uLL, v0, v2);
      swift_bridgeObjectRelease();
      sub_1CB79C888();
      swift_bridgeObjectRetain();
      sub_1CB846948();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return v0;
}

uint64_t sub_1CB79AAB0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1CB846F30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DBD8);
  v0 = sub_1CB8468DC();
  v2 = v1;
  swift_bridgeObjectRetain();
  sub_1CB799FA8(v0, v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    if ((sub_1CB84681C() & 1) != 0)
    {
      sub_1CB8468E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1CB7F3CFC(1uLL, v0, v2);
      swift_bridgeObjectRelease();
      sub_1CB79C888();
      swift_bridgeObjectRetain();
      sub_1CB846948();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  sub_1CB847014();
  sub_1CB846954();
  sub_1CB847014();
  return 0;
}

uint64_t Feature.__allocating_init(value:confidence:)(uint64_t a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v9;
  char v10;

  v4 = swift_allocObject();
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  LOBYTE(a2) = *a2;
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v6 + 8))(&v9, v5, v6);
  v7 = v10;
  *(_OWORD *)(v4 + 16) = v9;
  *(_BYTE *)(v4 + 32) = v7;
  *(_BYTE *)(v4 + 33) = (_BYTE)a2;
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

uint64_t Feature.init(value:confidence:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  v8 = sub_1CB79CA24(v7, a2, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v8;
}

void sub_1CB79ADC8()
{
  __asm { BR              X10 }
}

void sub_1CB79ADFC()
{
  char v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)v1 = v0 & 1;
}

void sub_1CB79AE84()
{
  uint64_t v0;
  _QWORD *v1;

  v1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DBE8);
  *v1 = v0;
  JUMPOUT(0x1CB79AEB4);
}

void sub_1CB79AEC4()
{
  sub_1CB79AEFC();
}

void sub_1CB79AEFC()
{
  __asm { BR              X10 }
}

id sub_1CB79AF40()
{
  char v0;
  double v1;

  if ((v0 & 1) != 0)
    v1 = 1.0;
  else
    v1 = 0.0;
  return objc_msgSend((id)objc_opt_self(), sel_featureValueWithDouble_, v1);
}

uint64_t Feature.deinit()
{
  uint64_t v0;

  sub_1CB79CA84(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return v0;
}

uint64_t Feature.__deallocating_deinit()
{
  uint64_t v0;

  sub_1CB79CA84(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t sub_1CB79B3E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 104))();
}

BOOL sub_1CB79B40C(uint64_t *a1, uint64_t *a2)
{
  return _s28SiriPrivateLearningAnalytics7FeatureC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t TypedFeature.__allocating_init(value:confidence:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  char v8;
  __int128 v10;
  char v11;

  v3 = v2;
  v6 = swift_allocObject();
  v7 = *a2;
  (*(void (**)(__int128 *__return_ptr, _QWORD))(*(_QWORD *)(*(_QWORD *)v6 + 144) + 8))(&v10, *(_QWORD *)(*(_QWORD *)v6 + 136));
  v8 = v11;
  *(_OWORD *)(v6 + 16) = v10;
  *(_BYTE *)(v6 + 32) = v8;
  *(_BYTE *)(v6 + 33) = v7;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 136) - 8) + 8))(a1);
  return v6;
}

uint64_t TypedFeature.init(value:confidence:)(uint64_t a1, char *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = sub_1CB79CABC(a1, a2);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 136) - 8) + 8))(a1);
  return v5;
}

void sub_1CB79B4F8()
{
  __asm { BR              X10 }
}

uint64_t sub_1CB79B534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v2 = *(_QWORD *)(v1 + 136);
  v3 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, v3 ^ 1u, 1, v2);
}

void TypedFeature.__allocating_init(value:confidence:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void TypedFeature.init(value:confidence:)()
{
  sub_1CB79CB20();
}

uint64_t TypedFeature.deinit()
{
  uint64_t v0;

  sub_1CB79CA84(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return v0;
}

uint64_t TypedFeature.__deallocating_deinit()
{
  uint64_t v0;

  sub_1CB79CA84(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t Bool.featureValue.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result & 1;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

void sub_1CB79B6C4(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;

  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
}

uint64_t String.featureValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CB79B6E8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = 4;
  return swift_bridgeObjectRetain();
}

void Double.featureValue.getter(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
}

void sub_1CB79B710(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
}

uint64_t Int32.featureValue.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 2;
  return result;
}

void sub_1CB79B738(uint64_t a1@<X8>)
{
  unsigned int *v1;

  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 2;
}

uint64_t Int64.featureValue.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 3;
  return result;
}

void sub_1CB79B75C(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 3;
}

uint64_t UInt32.featureValue.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 5;
  return result;
}

void sub_1CB79B784(uint64_t a1@<X8>)
{
  unsigned int *v1;

  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 5;
}

uint64_t UInt64.featureValue.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 6;
  return result;
}

void sub_1CB79B7A8(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 6;
}

void Array.featureValue.getter(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 == MEMORY[0x1E0DEDC60])
  {
    v9 = sub_1CB8470A4();
    if (v9)
      v8 = v9;
    else
      v8 = MEMORY[0x1E0DEE9D8];
    v7 = 7;
  }
  else if (a1 == MEMORY[0x1E0DEA968])
  {
    v10 = sub_1CB8470A4();
    if (v10)
      v8 = v10;
    else
      v8 = MEMORY[0x1E0DEE9D8];
    v7 = 8;
  }
  else if (a1 == MEMORY[0x1E0DEAFA0])
  {
    v11 = sub_1CB8470A4();
    if (v11)
      v8 = v11;
    else
      v8 = MEMORY[0x1E0DEE9D8];
    v7 = 9;
  }
  else
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v3 = sub_1CB8466D8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED890248);
    v4 = sub_1CB8466C0();
    v5 = sub_1CB846C90();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1CB771000, v4, v5, "Element type is not supported, returning an empty FeatureValue.strings", v6, 2u);
      MEMORY[0x1D179FE84](v6, -1, -1);
    }

    v7 = 8;
    v8 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = v7;
}

void sub_1CB79B948(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Array.featureValue.getter(*(_QWORD *)(a1 + 16), a2);
}

uint64_t FeatureValue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  v5 = sub_1CB846F84();
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB84732C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    v6 = sub_1CB8471B8() & 1;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 16) = 0;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

void FeatureValue.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB847344();
  __asm { BR              X9 }
}

uint64_t sub_1CB79BECC()
{
  uint64_t v1[15];

  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v1, v1[3]);
  sub_1CB847218();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
}

uint64_t sub_1CB79C128@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeatureValue.init(from:)(a1, a2);
}

void sub_1CB79C13C(_QWORD *a1)
{
  FeatureValue.encode(to:)(a1);
}

SiriPrivateLearningAnalytics::Confidence_optional __swiftcall Confidence.init(rawValue:)(Swift::Double rawValue)
{
  char *v1;
  char v2;
  char v3;
  char v4;
  SiriPrivateLearningAnalytics::Confidence_optional result;

  if (rawValue == 1.0)
  {
    *v1 = 0;
  }
  else if (rawValue == 0.75)
  {
    *v1 = 1;
  }
  else
  {
    if (rawValue == 0.0)
      v2 = 4;
    else
      v2 = 5;
    if (rawValue == 0.25)
      v3 = 3;
    else
      v3 = v2;
    if (rawValue == 0.5)
      v4 = 2;
    else
      v4 = v3;
    *v1 = v4;
  }
  return result;
}

double Confidence.rawValue.getter()
{
  char *v0;

  return dbl_1CB84A760[*v0];
}

BOOL sub_1CB79C1CC(char *a1, char *a2)
{
  return dbl_1CB84A760[*a1] == dbl_1CB84A760[*a2];
}

uint64_t sub_1CB79C1F0()
{
  return sub_1CB8211C0();
}

uint64_t sub_1CB79C1FC()
{
  return sub_1CB847308();
}

uint64_t sub_1CB79C230()
{
  return sub_1CB8211C0();
}

SiriPrivateLearningAnalytics::Confidence_optional sub_1CB79C238(Swift::Double *a1)
{
  return Confidence.init(rawValue:)(*a1);
}

double sub_1CB79C240@<D0>(double *a1@<X8>)
{
  char *v1;
  double result;

  result = dbl_1CB84A760[*v1];
  *a1 = result;
  return result;
}

void Feature.rawValue.getter()
{
  __asm { BR              X10 }
}

void sub_1CB79C28C()
{
  char v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)v1 = v0 & 1;
}

void sub_1CB79C314()
{
  uint64_t v0;
  _QWORD *v1;

  v1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DBE8);
  *v1 = v0;
  JUMPOUT(0x1CB79C344);
}

uint64_t Feature.equalTo(_:)(uint64_t a1)
{
  uint64_t v1;
  BOOL v2;
  uint64_t v4;
  _BYTE v5[40];

  sub_1CB79CBA8(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BC30);
  type metadata accessor for Feature();
  if (!swift_dynamicCast())
    return 2;
  v2 = _s28SiriPrivateLearningAnalytics7FeatureC2eeoiySbAC_ACtFZ_0(v1, v4);
  swift_release();
  return v2;
}

uint64_t sub_1CB79C3D4()
{
  return sub_1CB79A968();
}

uint64_t sub_1CB79C3F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v5;
  _BYTE v6[40];

  v2 = *v1;
  sub_1CB79CBA8(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BC30);
  type metadata accessor for Feature();
  if (!swift_dynamicCast())
    return 2;
  v3 = _s28SiriPrivateLearningAnalytics7FeatureC2eeoiySbAC_ACtFZ_0(v2, v5);
  swift_release();
  return v3;
}

uint64_t sub_1CB79C478(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void _s28SiriPrivateLearningAnalytics12FeatureValueO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1CB79C568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v5;
  char v6;

  if (v5)
  {
    sub_1CB79CD6C(v0, v1, v5);
    sub_1CB79CA84(v2, v3, v4);
    sub_1CB79CA84(v0, v1, v5);
    v6 = 0;
  }
  else
  {
    sub_1CB79CA84(v2, v3, 0);
    sub_1CB79CA84(v0, v1, 0);
    v6 = ((v2 & 1) == 0) ^ v0;
  }
  return v6 & 1;
}

unint64_t sub_1CB79C888()
{
  unint64_t result;

  result = qword_1ED88BED8;
  if (!qword_1ED88BED8)
  {
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1ED88BED8);
  }
  return result;
}

BOOL _s28SiriPrivateLearningAnalytics7FeatureC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BOOL8 result;
  char v10;
  char v11;
  __int128 v12;
  char v13;

  v4 = sub_1CB79A968();
  v6 = v5;
  if (v4 == sub_1CB79A968() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v8 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v8 & 1) == 0)
      return result;
  }
  v10 = *(_BYTE *)(a1 + 32);
  v12 = *(_OWORD *)(a1 + 16);
  v13 = v10;
  _s28SiriPrivateLearningAnalytics12FeatureValueO2eeoiySbAC_ACtFZ_0((uint64_t)&v12);
  return (v11 & 1) != 0 && dbl_1CB84A760[*(char *)(a1 + 33)] == dbl_1CB84A760[*(char *)(a2 + 33)];
}

uint64_t sub_1CB79C9CC(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1CB79CA24(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v6;
  char v7;
  __int128 v9;
  char v10;

  v6 = *a2;
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a5 + 8))(&v9, a4, a5);
  v7 = v10;
  *(_OWORD *)(a3 + 16) = v9;
  *(_BYTE *)(a3 + 32) = v7;
  *(_BYTE *)(a3 + 33) = v6;
  return a3;
}

uint64_t sub_1CB79CA84(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  switch(a3)
  {
    case 4:
    case 7:
    case 8:
    case 9:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1CB79CABC(uint64_t a1, char *a2)
{
  uint64_t v2;
  char v3;
  char v4;
  __int128 v6;
  char v7;

  v3 = *a2;
  (*(void (**)(__int128 *__return_ptr, _QWORD))(*(_QWORD *)(*(_QWORD *)v2 + 144) + 8))(&v6, *(_QWORD *)(*(_QWORD *)v2 + 136));
  v4 = v7;
  *(_OWORD *)(v2 + 16) = v6;
  *(_BYTE *)(v2 + 32) = v4;
  *(_BYTE *)(v2 + 33) = v3;
  return v2;
}

void sub_1CB79CB20()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1CB79CB4C(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x1D179FD88](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CB79CBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for Feature()
{
  return objc_opt_self();
}

unint64_t sub_1CB79CC10()
{
  unint64_t result;

  result = qword_1EF99DC20;
  if (!qword_1EF99DC20)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for Confidence, &type metadata for Confidence);
    atomic_store(result, (unint64_t *)&qword_1EF99DC20);
  }
  return result;
}

unint64_t sub_1CB79CC54(uint64_t a1)
{
  unint64_t result;

  result = sub_1CB79CC78();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1CB79CC78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF99DC28;
  if (!qword_1EF99DC28)
  {
    v1 = type metadata accessor for Feature();
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for Feature, v1);
    atomic_store(result, (unint64_t *)&qword_1EF99DC28);
  }
  return result;
}

uint64_t method lookup function for Feature()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Feature.name.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of Feature.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of Feature.__allocating_init(value:confidence:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of Feature.value()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of Feature.toMLFeatureValue()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_1CB79CD00()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TypedFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TypedFeature);
}

uint64_t method lookup function for TypedFeature()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TypedFeature.__allocating_init(value:confidence:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of TypedFeature.value.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of FeatureValueConvertible.featureValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1CB79CD6C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  switch(a3)
  {
    case 4:
    case 7:
    case 8:
    case 9:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for FeatureValue(uint64_t a1)
{
  return sub_1CB79CA84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s28SiriPrivateLearningAnalytics12FeatureValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1CB79CD6C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1CB79CD6C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1CB79CA84(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FeatureValue(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1CB79CA84(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF7 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 247);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 9)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 247;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CB79CF34(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1CB79CF3C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FeatureValue()
{
  return &type metadata for FeatureValue;
}

uint64_t getEnumTagSinglePayload for Confidence(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Confidence(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1CB79D030 + 4 * byte_1CB84A433[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1CB79D064 + 4 * byte_1CB84A42E[v4]))();
}

uint64_t sub_1CB79D064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB79D06C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB79D074);
  return result;
}

uint64_t sub_1CB79D080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB79D088);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1CB79D08C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB79D094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Confidence()
{
  return &type metadata for Confidence;
}

unint64_t sub_1CB79D0B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED88A730;
  if (!qword_1ED88A730)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED88A728);
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED88A730);
  }
  return result;
}

id sub_1CB79D0FC()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  if (objc_msgSend(v0, sel_anyEventType) != 6)
    return v0;
  v1 = objc_msgSend(v0, sel_payload);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1CB845F94();
    v5 = v4;

    v6 = (void *)sub_1CB845F88();
    sub_1CB779034(v3, v5);
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A460]), sel_initWithData_, v6);

  if (!v7)
    return v0;
  v8 = objc_msgSend(v7, sel_event);
  if (!v8)
  {

    return v0;
  }
  v9 = v8;
  objc_msgSend(v7, sel_metadata);

  return v9;
}

uint64_t MTCreateAlarmIntentFeatureExtractor.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000013;
  *(_QWORD *)(result + 24) = 0x80000001CB853990;
  return result;
}

uint64_t MTCreateAlarmIntentFeatureExtractor.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0xD000000000000013;
  *(_QWORD *)(v0 + 24) = 0x80000001CB853990;
  return result;
}

uint64_t sub_1CB79D274(id *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  unsigned __int8 v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  void (**v42)(char *, _QWORD, uint64_t, int64_t);
  unint64_t v43;
  char v44;
  int v45;
  char *v46;
  uint64_t *v47;
  unint64_t v48;
  char v49;
  char *v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  unint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  void (**v73)(char *, _QWORD, uint64_t, int64_t);
  unint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v3);
  v70 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CB846018();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v69 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v71 = (char *)&v66 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DD78);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CB845E5C();
  v73 = *(void (***)(char *, _QWORD, uint64_t, int64_t))(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v72 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = objc_msgSend(v15, sel_intent);
  v17 = sub_1CB7CF004();
  if (!v18)
    goto LABEL_13;
  v20 = *(_QWORD *)(v1 + 16);
  v19 = *(_QWORD *)(v1 + 24);
  if (v17 == v20 && v18 == v19)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      goto LABEL_13;
  }
  v22 = objc_msgSend(v16, sel_parametersByName);
  if (v22)
  {
    v23 = v22;
    v66 = v6;
    v67 = v5;
    v68 = v16;
    v24 = sub_1CB8467EC();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1CB848A60;
    v26 = type metadata accessor for MTCreateAlarmEventFeature.EventType(0);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v20;
    *(_QWORD *)(v27 + 24) = v19;
    *(_QWORD *)(v25 + 56) = v26;
    *(_QWORD *)(v25 + 64) = sub_1CB78E6AC(&qword_1EF99DD80, type metadata accessor for MTCreateAlarmEventFeature.EventType);
    *(_QWORD *)(v25 + 32) = v27;
    swift_bridgeObjectRetain();
    v28 = v15;
    v29 = objc_msgSend(v15, sel__donatedBySiri);
    v30 = type metadata accessor for MTCreateAlarmEventFeature.DonatedBySiri(0);
    v31 = (uint64_t)type metadata accessor for MTCreateAlarmEventFeature.DonatedBySiri;
    v32 = swift_allocObject();
    *(_BYTE *)(v32 + 16) = v29;
    *(_QWORD *)(v25 + 96) = v30;
    *(_QWORD *)(v25 + 104) = sub_1CB78E6AC(&qword_1EF99DD88, type metadata accessor for MTCreateAlarmEventFeature.DonatedBySiri);
    *(_QWORD *)(v25 + 72) = v32;
    if (*(_QWORD *)(v24 + 16)
      && (v33 = sub_1CB779A70(0x6C6562616CLL, 0xE500000000000000), (v34 & 1) != 0)
      && (sub_1CB778000(*(_QWORD *)(v24 + 56) + 32 * v33, (uint64_t)&v76), (swift_dynamicCast() & 1) != 0))
    {
      v35 = v74;
      v36 = v75;
      v37 = type metadata accessor for MTCreateAlarmEventFeature.AlarmName(0);
      v38 = swift_allocObject();
      *(_QWORD *)(v38 + 16) = v35;
      *(_QWORD *)(v38 + 24) = v36;
      v30 = *(_QWORD *)(v25 + 16);
      v39 = *(_QWORD *)(v25 + 24);
      v31 = v30 + 1;
      if (v30 >= v39 >> 1)
        v25 = (uint64_t)sub_1CB78F738((_QWORD *)(v39 > 1), v30 + 1, 1, (_QWORD *)v25);
      v40 = v28;
      *((_QWORD *)&v77 + 1) = v37;
      v78 = sub_1CB78E6AC(&qword_1EF99DDA8, type metadata accessor for MTCreateAlarmEventFeature.AlarmName);
      *(_QWORD *)&v76 = v38;
      *(_QWORD *)(v25 + 16) = v31;
      sub_1CB7780BC(&v76, v25 + 40 * v30 + 32);
    }
    else
    {
      v40 = v28;
    }
    v42 = v73;
    if (*(_QWORD *)(v24 + 16) && (v43 = sub_1CB779A70(0x706D6F4365746164, 0xEE0073746E656E6FLL), (v44 & 1) != 0))
    {
      sub_1CB778000(*(_QWORD *)(v24 + 56) + 32 * v43, (uint64_t)&v76);
      v45 = swift_dynamicCast();
      v42[7](v12, v45 ^ 1u, 1, v13);
      if (((unsigned int (*)(char *, uint64_t, int64_t))v42[6])(v12, 1, v13) != 1)
      {
        v46 = v72;
        ((void (*)(void))v42[4])();
        v12 = v70;
        sub_1CB845E50();
        v30 = v66;
        v31 = v67;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v12, 1, v67) != 1)
        {
          v73 = *(void (***)(char *, _QWORD, uint64_t, int64_t))(v30 + 32);
          v50 = v12;
          v51 = v71;
          ((void (*)(char *, char *, uint64_t))v73)(v71, v50, v31);
          v52 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
          v53 = v69;
          v52(v69, v51, v31);
          v54 = type metadata accessor for MTCreateAlarmEventFeature.AlarmTime(0);
          v55 = swift_allocObject();
          ((void (*)(uint64_t, char *, uint64_t))v73)(v55 + *(_QWORD *)(*(_QWORD *)v55 + 96), v53, v31);
          v30 = *(_QWORD *)(v25 + 16);
          v56 = *(_QWORD *)(v25 + 24);
          v31 = v30 + 1;
          if (v30 >= v56 >> 1)
            v25 = (uint64_t)sub_1CB78F738((_QWORD *)(v56 > 1), v30 + 1, 1, (_QWORD *)v25);
          *((_QWORD *)&v77 + 1) = v54;
          v78 = sub_1CB78E6AC(&qword_1EF99DDA0, type metadata accessor for MTCreateAlarmEventFeature.AlarmTime);
          *(_QWORD *)&v76 = v55;
          *(_QWORD *)(v25 + 16) = v31;
          sub_1CB7780BC(&v76, v25 + 40 * v30 + 32);
          (*(void (**)(char *, uint64_t))(v66 + 8))(v71, v67);
          ((void (*)(char *, int64_t))v42[1])(v72, v13);
          if (!*(_QWORD *)(v24 + 16))
            goto LABEL_29;
LABEL_24:
          v48 = sub_1CB779A70(0x6353746165706572, 0xEE00656C75646568);
          if ((v49 & 1) != 0)
          {
            sub_1CB778000(*(_QWORD *)(v24 + 56) + 32 * v48, (uint64_t)&v76);
            goto LABEL_30;
          }
LABEL_29:
          v76 = 0u;
          v77 = 0u;
LABEL_30:
          swift_bridgeObjectRelease();
          if (!*((_QWORD *)&v77 + 1))
          {

            sub_1CB785B54((uint64_t)&v76, &qword_1ED88E088);
            return v25;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DD90);
          if ((swift_dynamicCast() & 1) == 0)
          {

            return v25;
          }
          v57 = v74;
          if (v74 >> 62)
          {
            swift_bridgeObjectRetain();
            v58 = (void *)sub_1CB847044();
            swift_bridgeObjectRelease();
            if (v58)
            {
LABEL_34:
              if ((v57 & 0xC000000000000001) != 0)
              {
                v60 = (id)MEMORY[0x1D179F320](0, v57);
              }
              else
              {
                v59 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (!v59)
                {
                  __break(1u);
                  goto LABEL_45;
                }
                v60 = *(id *)(v57 + 32);
              }
              v58 = v60;
              swift_bridgeObjectRelease();
              v61 = objc_msgSend(v58, sel_displayString);
              v62 = sub_1CB8468A0();
              v64 = v63;

              v57 = type metadata accessor for MTCreateAlarmEventFeature.AlarmRepeatSchedule(0);
              v31 = swift_allocObject();
              *(_QWORD *)(v31 + 16) = v62;
              *(_QWORD *)(v31 + 24) = v64;
              v30 = *(_QWORD *)(v25 + 16);
              v59 = *(_QWORD *)(v25 + 24);
              v13 = v30 + 1;
              if (v30 < v59 >> 1)
              {
LABEL_38:
                v65 = v68;
                *((_QWORD *)&v77 + 1) = v57;
                v78 = sub_1CB78E6AC(&qword_1EF99DD98, type metadata accessor for MTCreateAlarmEventFeature.AlarmRepeatSchedule);
                *(_QWORD *)&v76 = v31;
                *(_QWORD *)(v25 + 16) = v13;
                sub_1CB7780BC(&v76, v25 + 40 * v30 + 32);

                return v25;
              }
LABEL_45:
              v25 = (uint64_t)sub_1CB78F738((_QWORD *)(v59 > 1), v13, 1, (_QWORD *)v25);
              goto LABEL_38;
            }
          }
          else
          {
            v58 = *(void **)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v58)
              goto LABEL_34;
          }

          swift_bridgeObjectRelease();
          return v25;
        }
        ((void (*)(char *, int64_t))v42[1])(v46, v13);
        v47 = &qword_1ED88D550;
LABEL_23:
        sub_1CB785B54((uint64_t)v12, v47);
        if (!*(_QWORD *)(v24 + 16))
          goto LABEL_29;
        goto LABEL_24;
      }
    }
    else
    {
      v42[7](v12, 1, 1, v13);
    }
    v47 = &qword_1EF99DD78;
    goto LABEL_23;
  }
LABEL_13:

  return MEMORY[0x1E0DEE9D8];
}

uint64_t type metadata accessor for MTCreateAlarmEventFeature.EventType(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99DE88);
}

uint64_t MTCreateAlarmEventFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = a1;
  return result;
}

uint64_t MTCreateAlarmEventFeature.AlarmTime.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 96);
  v4 = sub_1CB846018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_allocObject();
  sub_1CB79E138(a1, (uint64_t)v4);
  v6 = sub_1CB846018();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_1CB785B54((uint64_t)v4, &qword_1ED88D550);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DDB0);
    swift_deallocPartialClassInstance();
    v5 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 96), v4, v6);
  }
  sub_1CB785B54(a1, &qword_1ED88D550);
  return v5;
}

uint64_t MTCreateAlarmIntentFeatureExtractor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MTCreateAlarmIntentFeatureExtractor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTCreateAlarmEventFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99DF70);
}

uint64_t sub_1CB79DBC4(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for MTCreateAlarmEventFeature.EventType);
}

uint64_t sub_1CB79DBD0(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for MTCreateAlarmEventFeature.EventType);
}

uint64_t MTCreateAlarmEventFeature.DonatedBySiri.init(value:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t MTCreateAlarmEventFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1;
  v3 = swift_allocObject();
  v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t MTCreateAlarmEventFeature.DonatedBySiri.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MTCreateAlarmEventFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB79DCD4(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for MTCreateAlarmEventFeature.DonatedBySiri(0);
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB79DD08(unsigned __int8 *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  type metadata accessor for MTCreateAlarmEventFeature.DonatedBySiri(0);
  v2 = swift_allocObject();
  v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t sub_1CB79DD84(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for MTCreateAlarmEventFeature.AlarmName);
}

uint64_t sub_1CB79DD90(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for MTCreateAlarmEventFeature.AlarmName);
}

uint64_t MTCreateAlarmEventFeature.AlarmRepeatSchedule.init(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t MTCreateAlarmEventFeature.AlarmRepeatSchedule.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB79DDD0(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for MTCreateAlarmEventFeature.AlarmRepeatSchedule);
}

uint64_t sub_1CB79DDDC(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for MTCreateAlarmEventFeature.AlarmRepeatSchedule);
}

uint64_t MTCreateAlarmEventFeature.AlarmTime.init(value:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = sub_1CB846018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB79E138(a1, (uint64_t)v5);
  v6 = sub_1CB846018();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1CB785B54((uint64_t)v5, &qword_1ED88D550);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DDB0);
    swift_deallocPartialClassInstance();
    v1 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96), v5, v6);
  }
  sub_1CB785B54(a1, &qword_1ED88D550);
  return v1;
}

uint64_t MTCreateAlarmEventFeature.AlarmTime.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1CB846018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MTCreateAlarmEventFeature.AlarmTime.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1CB846018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTCreateAlarmEventFeature.AlarmRepeatSchedule(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99E140);
}

uint64_t type metadata accessor for MTCreateAlarmEventFeature.AlarmTime(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99E228);
}

uint64_t type metadata accessor for MTCreateAlarmEventFeature.AlarmName(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99E058);
}

uint64_t sub_1CB79E138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MTCreateAlarmIntentFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for MTCreateAlarmIntentFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MTCreateAlarmIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MTCreateAlarmIntentFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

ValueMetadata *type metadata accessor for MTCreateAlarmEventFeature()
{
  return &type metadata for MTCreateAlarmEventFeature;
}

uint64_t SiriUserFeedbackLearningPluginRunResult.bundleName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriUserFeedbackLearningPluginRunResult.pluginResult.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1CB78A57C(v2, v3);
}

__n128 SiriUserFeedbackLearningPluginRunResult.init(bundleName:pluginResult:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, __n128 *a4@<X8>)
{
  __n128 result;

  a4->n128_u64[0] = a1;
  a4->n128_u64[1] = a2;
  result = *a3;
  a4[1] = *a3;
  return result;
}

BOOL sub_1CB79E22C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1CB79E244()
{
  _BYTE *v0;

  if (*v0)
    return 0x65526E6967756C70;
  else
    return 0x614E656C646E7562;
}

uint64_t sub_1CB79E28C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CB7A0C48(a1, a2);
  *a3 = result;
  return result;
}

void sub_1CB79E2B0(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1CB79E2BC()
{
  sub_1CB7A05F0();
  return sub_1CB84738C();
}

uint64_t sub_1CB79E2E4()
{
  sub_1CB7A05F0();
  return sub_1CB847398();
}

uint64_t SiriUserFeedbackLearningPluginRunResult.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED888768);
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB7A05F0();
  sub_1CB847350();
  LOBYTE(v13) = 0;
  sub_1CB847128();
  if (!v2)
  {
    v13 = v11;
    v14 = v10;
    v15 = 1;
    sub_1CB78A5A4();
    sub_1CB847134();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v4);
}

uint64_t SiriUserFeedbackLearningPluginRunResult.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v15[2];
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB7A05F0();
  sub_1CB847338();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  LOBYTE(v15[0]) = 0;
  v9 = sub_1CB8470E0();
  v11 = v10;
  v16 = 1;
  sub_1CB78A62C();
  swift_bridgeObjectRetain();
  sub_1CB8470EC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v15[0];
  v13 = v15[1];
  swift_bridgeObjectRetain();
  sub_1CB78A57C(v12, v13);
  swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v13;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1CB78A590(v12, v13);
}

uint64_t sub_1CB79E638@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SiriUserFeedbackLearningPluginRunResult.init(from:)(a1, a2);
}

uint64_t sub_1CB79E64C(_QWORD *a1)
{
  return SiriUserFeedbackLearningPluginRunResult.encode(to:)(a1);
}

uint64_t SiriUserFeedbackLearningPluginLauncher.runPlugins(plugins:task:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 256) = a1;
  *(_QWORD *)(v2 + 264) = a2;
  return swift_task_switch();
}

uint64_t sub_1CB79E680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  id v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[2];

  if (qword_1ED88E518 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 264);
  v2 = sub_1CB8466D8();
  *(_QWORD *)(v0 + 272) = __swift_project_value_buffer(v2, (uint64_t)qword_1ED890248);
  sub_1CB7A0634(v1, v0 + 16);
  v3 = sub_1CB8466C0();
  v4 = sub_1CB846C84();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v37 = v34;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 232) = sub_1CB775A54(0xD000000000000019, 0x80000001CB853BB0, &v37);
    sub_1CB846E58();
    *(_WORD *)(v5 + 12) = 2080;
    sub_1CB7A0634(v0 + 16, v0 + 72);
    v40[0] = 0;
    v40[1] = 0xE000000000000000;
    sub_1CB846F30();
    v38 = v40[0];
    v39 = v40[1];
    sub_1CB846954();
    strcpy((char *)v40, "triggerType: ");
    HIWORD(v40[1]) = -4864;
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    v6 = *(id *)(v0 + 80);
    v7 = objc_msgSend(v6, sel_description);
    sub_1CB8468A0();

    sub_1CB846954();
    swift_bridgeObjectRelease();

    v9 = v38;
    v8 = v39;
    sub_1CB7A0670(v0 + 72);
    *(_QWORD *)(v0 + 248) = sub_1CB775A54(v9, v8, &v37);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    sub_1CB7A0670(v0 + 16);
    _os_log_impl(&dword_1CB771000, v3, v4, "LaunchQueue.%s (async) mlrTask: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v34, -1, -1);
    MEMORY[0x1D179FE84](v5, -1, -1);
  }
  else
  {
    sub_1CB7A0670(v0 + 16);
  }

  *(_QWORD *)(v0 + 240) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain_n();
  v10 = sub_1CB8466C0();
  v11 = sub_1CB846C84();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 256);
  if (v12)
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v40[0] = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED888748);
    v17 = MEMORY[0x1D179EE28](v13, v16);
    v19 = v18;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 224) = sub_1CB775A54(v17, v19, v40);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CB771000, v10, v11, "plugins: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v15, -1, -1);
    MEMORY[0x1D179FE84](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v20 = *(_QWORD **)(v0 + 256);
  v21 = v20[2];
  *(_QWORD *)(v0 + 280) = v21;
  if (v21)
  {
    *(_QWORD *)(v0 + 288) = *(_QWORD *)(v0 + 240);
    *(_QWORD *)(v0 + 296) = 0;
    v22 = v20 + 4;
    v23 = v20[7];
    v24 = v20[8];
    swift_bridgeObjectRetain();
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v35 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(**(int **)(v24 + 24) + *(_QWORD *)(v24 + 24));
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v25;
    *v25 = v0;
    v25[1] = sub_1CB79ED94;
    return v35(v0 + 128, *(_QWORD *)(v0 + 264), v23, v24);
  }
  else
  {
    v27 = sub_1CB8466C0();
    v28 = sub_1CB846C84();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v40[0] = v36;
      *(_DWORD *)v29 = 136315394;
      *(_QWORD *)(v0 + 208) = sub_1CB775A54(0xD000000000000019, 0x80000001CB853BB0, v40);
      sub_1CB846E58();
      *(_WORD *)(v29 + 12) = 2080;
      swift_beginAccess();
      v30 = swift_bridgeObjectRetain();
      v31 = MEMORY[0x1D179EE28](v30, &type metadata for SiriUserFeedbackLearningPluginRunResult);
      v33 = v32;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 216) = sub_1CB775A54(v31, v33, v40);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v27, v28, "LaunchQueue.%s results: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v36, -1, -1);
      MEMORY[0x1D179FE84](v29, -1, -1);
    }

    swift_beginAccess();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 240));
  }
}

uint64_t sub_1CB79ED94()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB79EDE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t (*v32)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = (_QWORD *)(*(_QWORD *)(v0 + 256) + 40 * *(_QWORD *)(v0 + 296));
  v3 = *(_QWORD *)(v0 + 136);
  v30 = *(void **)(v0 + 144);
  v31 = *(id *)(v0 + 152);
  v4 = v2[7];
  v5 = v2[8];
  __swift_project_boxed_opaque_existential_1(v2 + 4, v4);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v7 = v6;
  sub_1CB78A57C(v1, v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *(_QWORD **)(v0 + 288);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v9 = sub_1CB78FDA8(0, v9[2] + 1, 1, *(_QWORD **)(v0 + 288));
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_1CB78FDA8((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v12 = *(_QWORD *)(v0 + 280);
  v13 = *(_QWORD *)(v0 + 296) + 1;
  v9[2] = v11 + 1;
  v14 = &v9[4 * v11];
  v14[4] = v29;
  v14[5] = v7;
  v14[6] = v1;
  v14[7] = v3;
  sub_1CB78A590(v1, v3);

  *(_QWORD *)(v0 + 240) = v9;
  if (v13 == v12)
  {
    swift_bridgeObjectRelease();
    v15 = sub_1CB8466C0();
    v16 = sub_1CB846C84();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v33 = v18;
      *(_DWORD *)v17 = 136315394;
      *(_QWORD *)(v0 + 208) = sub_1CB775A54(0xD000000000000019, 0x80000001CB853BB0, &v33);
      sub_1CB846E58();
      *(_WORD *)(v17 + 12) = 2080;
      swift_beginAccess();
      v19 = swift_bridgeObjectRetain();
      v20 = MEMORY[0x1D179EE28](v19, &type metadata for SiriUserFeedbackLearningPluginRunResult);
      v22 = v21;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 216) = sub_1CB775A54(v20, v22, &v33);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v15, v16, "LaunchQueue.%s results: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v18, -1, -1);
      MEMORY[0x1D179FE84](v17, -1, -1);
    }

    swift_beginAccess();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 240));
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 296) + 1;
    *(_QWORD *)(v0 + 288) = v9;
    *(_QWORD *)(v0 + 296) = v24;
    v25 = (_QWORD *)(*(_QWORD *)(v0 + 256) + 40 * v24);
    v26 = v25[7];
    v27 = v25[8];
    __swift_project_boxed_opaque_existential_1(v25 + 4, v26);
    v32 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(**(int **)(v27 + 24) + *(_QWORD *)(v27 + 24));
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v28;
    *v28 = v0;
    v28[1] = sub_1CB79ED94;
    return v32(v0 + 128, *(_QWORD *)(v0 + 264), v26, v27);
  }
}

NSObject *SiriUserFeedbackLearningPluginLauncher.runPlugins(plugins:task:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  NSObject *v29;
  _QWORD v31[2];
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  int v38;
  _WORD v39[8];
  uint64_t v40;
  unint64_t v41;
  _QWORD v42[7];
  _OWORD v43[3];
  uint64_t v44;
  uint64_t v45;

  v7 = sub_1CB84672C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v31 - v12;
  if (qword_1ED88E518 != -1)
    swift_once();
  v14 = sub_1CB8466D8();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED890248);
  sub_1CB7A0634(a2, (uint64_t)v43);
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v37(v13, a3, v7);
  v15 = sub_1CB8466C0();
  v16 = sub_1CB846C84();
  v38 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v34 = a2;
    v18 = v17;
    v33 = swift_slowAlloc();
    v45 = v33;
    *(_DWORD *)v18 = 136315650;
    v32 = v15;
    v42[0] = sub_1CB775A54(0xD000000000000021, 0x80000001CB853BD0, &v45);
    sub_1CB846E58();
    *(_WORD *)(v18 + 12) = 2080;
    sub_1CB7A0634((uint64_t)v43, (uint64_t)v42);
    v40 = 0;
    v41 = 0xE000000000000000;
    sub_1CB846F30();
    v36 = v3;
    sub_1CB846954();
    strcpy((char *)v39, "triggerType: ");
    v39[7] = -4864;
    v35 = a3;
    v31[1] = v18 + 14;
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    v19 = (id)v42[1];
    v20 = objc_msgSend(v19, sel_description);
    sub_1CB8468A0();
    v31[0] = v8;

    sub_1CB846954();
    swift_bridgeObjectRelease();
    v21 = v40;
    v22 = v41;
    sub_1CB7A0670((uint64_t)v42);
    v42[0] = sub_1CB775A54(v21, v22, &v45);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    sub_1CB7A0670((uint64_t)v43);
    *(_WORD *)(v18 + 22) = 2080;
    v37(v11, (uint64_t)v13, v7);
    v23 = sub_1CB8468DC();
    v42[0] = sub_1CB775A54(v23, v24, &v45);
    sub_1CB846E58();
    a3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31[0] + 8))(v13, v7);
    v15 = v32;
    _os_log_impl(&dword_1CB771000, v32, (os_log_type_t)v38, "LaunchQueue.%s mlrTask: %s, timeout: %s", (uint8_t *)v18, 0x20u);
    v25 = v33;
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v25, -1, -1);
    v26 = v18;
    a2 = v34;
    MEMORY[0x1D179FE84](v26, -1, -1);
  }
  else
  {
    sub_1CB7A0670((uint64_t)v43);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }

  sub_1CB7A0634(a2, (uint64_t)v43);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a1;
  v28 = v43[1];
  *(_OWORD *)(v27 + 24) = v43[0];
  *(_OWORD *)(v27 + 40) = v28;
  *(_OWORD *)(v27 + 56) = v43[2];
  *(_QWORD *)(v27 + 72) = v44;
  swift_bridgeObjectRetain();
  v29 = sub_1CB79F748(a3, &stru_1EF99E2F8, v27);
  swift_release();
  return v29;
}

uint64_t sub_1CB79F670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1CB79F6D8;
  v6[32] = a2;
  v6[33] = a3;
  return swift_task_switch();
}

uint64_t sub_1CB79F6D8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB79F734()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

NSObject *sub_1CB79F748(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  dispatch_semaphore_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  const char *v41;
  _QWORD v43[2];
  char *v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v47 = a2;
  v48 = a1;
  v4 = sub_1CB84672C();
  v5 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  v46 = v5;
  v6 = MEMORY[0x1E0C80A78](v4);
  v43[0] = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)v43 - v8;
  v9 = sub_1CB8467B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v43 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E268);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = dispatch_semaphore_create(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED888750);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = 0;
  v21 = sub_1CB846B7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v18, 1, 1, v21);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = 0;
  v22[3] = 0;
  v22[4] = v47;
  v22[5] = a3;
  v22[6] = sub_1CB7A0EBC;
  v22[7] = v20;
  v22[8] = v19;
  swift_retain_n();
  swift_retain();
  v23 = v19;
  v24 = (uint64_t)v22;
  v25 = v48;
  sub_1CB7C218C((uint64_t)v18, (uint64_t)&unk_1EF99E338, v24);
  swift_release();
  sub_1CB846798();
  sub_1CB8467A4();
  v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v13, v9);
  sub_1CB846D8C();
  v26(v15, v9);
  if ((sub_1CB846738() & 1) != 0)
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v27 = sub_1CB8466D8();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED890248);
    v29 = v45;
    v28 = v46;
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
    v31 = v44;
    v30(v44, v25, v45);
    v32 = sub_1CB8466C0();
    v33 = sub_1CB846C9C();
    if (os_log_type_enabled(v32, v33))
    {
      v48 = v20;
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v47 = v23;
      v36 = v35;
      v50 = v35;
      *(_DWORD *)v34 = 136315138;
      v43[1] = v34 + 4;
      v30((char *)v43[0], (uint64_t)v31, v29);
      v37 = sub_1CB8468DC();
      v49 = sub_1CB775A54(v37, v38, &v50);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v29);
      _os_log_impl(&dword_1CB771000, v32, v33, "a thread was blocked by a semaphore awaiting a Task and timed out after %s seconds", v34, 0xCu);
      swift_arrayDestroy();
      v39 = v36;
      v23 = v47;
      MEMORY[0x1D179FE84](v39, -1, -1);
      MEMORY[0x1D179FE84](v34, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v29);
    }

    sub_1CB7A0E10();
    swift_allocError();
    *v40 = 0xD00000000000002FLL;
    v41 = "timed out waiting for an async task to complete";
    goto LABEL_11;
  }
  v32 = *(NSObject **)(v20 + 16);
  if (!v32)
  {
    sub_1CB7A0E10();
    swift_allocError();
    *v40 = 0xD000000000000028;
    v41 = "unable to extract result from async Task";
LABEL_11:
    v40[1] = (unint64_t)(v41 - 32) | 0x8000000000000000;
    swift_willThrow();

    swift_release_n();
    return v32;
  }
  swift_bridgeObjectRetain();

  swift_release_n();
  return v32;
}

uint64_t sub_1CB79FBF4@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  dispatch_semaphore_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t result;
  uint64_t *v46;
  _QWORD *v47;
  const char *v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  uint8_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v51 = a4;
  v56 = a2;
  v57 = a1;
  v5 = sub_1CB84672C();
  v6 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  v55 = v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v50 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v49 - v9;
  v10 = sub_1CB8467B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v49 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E268);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = dispatch_semaphore_create(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889570);
  v21 = swift_allocObject();
  v22 = sub_1CB846B7C();
  *(_OWORD *)(v21 + 16) = 0u;
  *(_OWORD *)(v21 + 32) = 0u;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v19, 1, 1, v22);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = v56;
  v23[5] = a3;
  v23[6] = sub_1CB7A0D5C;
  v23[7] = v21;
  v23[8] = v20;
  swift_retain_n();
  swift_retain();
  v24 = v20;
  v25 = (uint64_t)v23;
  v26 = v57;
  sub_1CB7C22E0((uint64_t)v19, (uint64_t)&unk_1EF99E320, v25);
  swift_release();
  sub_1CB846798();
  sub_1CB8467A4();
  v27 = *(void (**)(char *, uint64_t))(v11 + 8);
  v27(v14, v10);
  sub_1CB846D8C();
  v27(v16, v10);
  if ((sub_1CB846738() & 1) != 0)
  {
    v56 = v24;
    if (qword_1ED88E518 != -1)
      swift_once();
    v28 = sub_1CB8466D8();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ED890248);
    v29 = v54;
    v30 = v55;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
    v32 = v53;
    v31(v53, v26, v54);
    v33 = sub_1CB8466C0();
    v34 = sub_1CB846C9C();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v59 = v57;
      *(_DWORD *)v35 = 136315138;
      v52 = v35 + 4;
      v31(v50, (uint64_t)v32, v29);
      v36 = sub_1CB8468DC();
      v58 = sub_1CB775A54(v36, v37, &v59);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v29);
      _os_log_impl(&dword_1CB771000, v33, v34, "a thread was blocked by a semaphore awaiting a Task and timed out after %s seconds", v35, 0xCu);
      v38 = v57;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v38, -1, -1);
      MEMORY[0x1D179FE84](v35, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    }

    v24 = v56;
    sub_1CB7A0E10();
    swift_allocError();
    *v47 = 0xD00000000000002FLL;
    v48 = "timed out waiting for an async task to complete";
  }
  else
  {
    v39 = *(void **)(v21 + 32);
    if (v39)
    {
      v40 = *(void **)(v21 + 40);
      v42 = *(_QWORD *)(v21 + 16);
      v41 = *(_QWORD *)(v21 + 24);
      sub_1CB78A57C(v42, v41);
      v43 = v39;
      v44 = v40;

      result = swift_release_n();
      v46 = v51;
      *v51 = v42;
      v46[1] = v41;
      v46[2] = (uint64_t)v43;
      v46[3] = (uint64_t)v40;
      return result;
    }
    sub_1CB7A0E10();
    swift_allocError();
    *v47 = 0xD000000000000028;
    v48 = "unable to extract result from async Task";
  }
  v47[1] = (unint64_t)(v48 - 32) | 0x8000000000000000;
  swift_willThrow();

  return swift_release_n();
}

uint64_t sub_1CB7A00C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CB7A0124;
  v5[32] = a1;
  v5[33] = a2;
  return swift_task_switch();
}

uint64_t sub_1CB7A0124(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

NSObject *sub_1CB7A0174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return SiriUserFeedbackLearningPluginLauncher.runPlugins(plugins:task:timeout:)(a1, a2, a3);
}

uint64_t sub_1CB7A0188(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v8[4] = a7;
  v8[5] = a8;
  v8[2] = a1;
  v8[3] = a6;
  v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc();
  v8[6] = v10;
  *v10 = v8;
  v10[1] = sub_1CB7A01F4;
  return v12(a1);
}

uint64_t sub_1CB7A01F4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB7A0248()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(_QWORD *);
  uint64_t v3;
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  _QWORD v10[4];

  v1 = *(uint64_t **)(v0 + 16);
  v2 = *(void (**)(_QWORD *))(v0 + 24);
  v3 = *v1;
  v4 = v1[1];
  v6 = (void *)v1[2];
  v5 = (void *)v1[3];
  v10[0] = v3;
  v10[1] = v4;
  v10[2] = v6;
  v10[3] = v5;
  sub_1CB78A57C(v3, v4);
  v7 = v6;
  v8 = v5;
  v2(v10);
  sub_1CB78A590(v3, v4);

  sub_1CB846D98();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7A02E4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD *);

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a1;
  v8[4] = a6;
  v11 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  v8[7] = v9;
  *v9 = v8;
  v9[1] = sub_1CB7A0350;
  return v11(v8 + 2);
}

uint64_t sub_1CB7A0350()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB7A03A4()
{
  uint64_t v0;
  void (*v1)(uint64_t *);
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD **)(v0 + 24);
  v1 = *(void (**)(uint64_t *))(v0 + 32);
  v5 = *(_QWORD *)(v0 + 16);
  v3 = v5;
  swift_bridgeObjectRetain();
  v1(&v5);
  swift_bridgeObjectRelease();
  sub_1CB846D98();
  *v2 = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1CB7A0410(uint64_t a1, _QWORD *a2)
{
  void *v2;
  unint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a1 + 24);
  v6 = a2[2];
  v7 = a2[3];
  v8 = (void *)a2[4];
  v9 = (void *)a2[5];
  a2[2] = *(_QWORD *)a1;
  a2[3] = v3;
  a2[4] = v4;
  a2[5] = v5;
  sub_1CB7A0E54(v2, v3, v4, v5);
  sub_1CB7A0E88(v6, v7, v8, v9);
}

BOOL _s28SiriPrivateLearningAnalytics0a12UserFeedbackC15PluginRunResultV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = 0, (sub_1CB8471A0() & 1) != 0))
  {
    if (v3)
    {
      if (v3 == 1)
      {
        if (v5 == 1)
        {
          v7 = 1;
          sub_1CB78A590(v2, 1uLL);
          sub_1CB78A590(v4, 1uLL);
          return v7;
        }
        goto LABEL_13;
      }
      if (v5 < 2)
      {
LABEL_13:
        sub_1CB78A57C(v2, v3);
        sub_1CB78A57C(v4, v5);
        sub_1CB78A590(v2, v3);
        sub_1CB78A590(v4, v5);
        return 0;
      }
      if (v2 != v4 || v3 != v5)
      {
        v11 = sub_1CB8471A0();
        sub_1CB78A57C(v2, v3);
        sub_1CB78A57C(v4, v5);
        sub_1CB78A590(v2, v3);
        sub_1CB78A590(v4, v5);
        return (v11 & 1) != 0;
      }
      sub_1CB78A57C(v2, v3);
      sub_1CB78A57C(v2, v3);
      sub_1CB78A590(v2, v3);
      v8 = v2;
      v9 = v3;
    }
    else
    {
      if (v5)
        goto LABEL_13;
      sub_1CB78A590(v2, 0);
      v8 = v4;
      v9 = 0;
    }
    sub_1CB78A590(v8, v9);
    return 1;
  }
  return v7;
}

unint64_t sub_1CB7A05F0()
{
  unint64_t result;

  result = qword_1ED88C1E0;
  if (!qword_1ED88C1E0)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84AADC, &type metadata for SiriUserFeedbackLearningPluginRunResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88C1E0);
  }
  return result;
}

uint64_t sub_1CB7A0634(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SiriUserFeedbackLearningTask(a2, a1);
  return a2;
}

uint64_t sub_1CB7A0670(uint64_t a1)
{
  destroy for SiriUserFeedbackLearningTask(a1);
  return a1;
}

uint64_t sub_1CB7A06A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_1CB7A06D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CB785488;
  return sub_1CB79F670(a1, v4, v1 + 24);
}

unint64_t destroy for SiriUserFeedbackLearningPluginRunResult(uint64_t a1)
{
  unint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 24);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *initializeWithCopy for SiriUserFeedbackLearningPluginRunResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2 + 2;
  v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5 >= 2)
  {
    a1[2] = *v4;
    a1[3] = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
  }
  return a1;
}

_QWORD *assignWithCopy for SiriUserFeedbackLearningPluginRunResult(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  if (a1[3] >= 2uLL)
  {
    if (v4 >= 2)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1CB7A08A4((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v4 < 2)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CB7A08A4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CCF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *assignWithTake for SiriUserFeedbackLearningPluginRunResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2 + 2;
  if (a1[3] >= 2uLL)
  {
    v6 = a2[3];
    if (v6 >= 2)
    {
      a1[2] = *v5;
      a1[3] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1CB7A08A4((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for Locale(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Locale(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPluginRunResult()
{
  return &type metadata for SiriUserFeedbackLearningPluginRunResult;
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPluginLaunching.runPlugins(plugins:task:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CB7A0FD0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPluginLaunching.runPlugins(plugins:task:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPluginLauncher()
{
  return &type metadata for SiriUserFeedbackLearningPluginLauncher;
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningPluginRunResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CB7A0AF0 + 4 * byte_1CB84A8D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CB7A0B24 + 4 * byte_1CB84A8D0[v4]))();
}

uint64_t sub_1CB7A0B24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7A0B2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB7A0B34);
  return result;
}

uint64_t sub_1CB7A0B40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB7A0B48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CB7A0B4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7A0B54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPluginRunResult.CodingKeys()
{
  return &type metadata for SiriUserFeedbackLearningPluginRunResult.CodingKeys;
}

unint64_t sub_1CB7A0B74()
{
  unint64_t result;

  result = qword_1EF99E310;
  if (!qword_1EF99E310)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84AAB4, &type metadata for SiriUserFeedbackLearningPluginRunResult.CodingKeys);
    atomic_store(result, &qword_1EF99E310);
  }
  return result;
}

unint64_t sub_1CB7A0BBC()
{
  unint64_t result;

  result = qword_1ED88C1F0;
  if (!qword_1ED88C1F0)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84AA24, &type metadata for SiriUserFeedbackLearningPluginRunResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88C1F0);
  }
  return result;
}

unint64_t sub_1CB7A0C04()
{
  unint64_t result;

  result = qword_1ED88C1E8;
  if (!qword_1ED88C1E8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84AA4C, &type metadata for SiriUserFeedbackLearningPluginRunResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88C1E8);
  }
  return result;
}

uint64_t sub_1CB7A0C48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x614E656C646E7562 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1CB8471A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65526E6967756C70 && a2 == 0xEC000000746C7573)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1CB7A0D5C(uint64_t a1)
{
  _QWORD *v1;

  sub_1CB7A0410(a1, v1);
}

uint64_t sub_1CB7A0D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v4 = *(int **)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 64);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 48);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_1CB785DF4;
  *(_QWORD *)(v6 + 40) = v5;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  v10 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 48) = v8;
  *v8 = v6;
  v8[1] = sub_1CB7A01F4;
  return v10(a1);
}

unint64_t sub_1CB7A0E10()
{
  unint64_t result;

  result = qword_1EF99E328;
  if (!qword_1EF99E328)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB848C54, &type metadata for ConcurrencyError);
    atomic_store(result, (unint64_t *)&qword_1EF99E328);
  }
  return result;
}

id sub_1CB7A0E54(id result, unint64_t a2, void *a3, void *a4)
{
  id v6;

  if (a3)
  {
    sub_1CB78A57C((uint64_t)result, a2);
    v6 = a3;
    return a4;
  }
  return result;
}

void sub_1CB7A0E88(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  if (a3)
  {
    sub_1CB78A590(a1, a2);

  }
}

uint64_t sub_1CB7A0EBC(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1CB7A0F28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1CB785DF4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF99E330 + dword_1EF99E330))(a1, v4, v5, v6, v7, v8, v9, v10);
}

void SiriUserFeedbackLearningMLRuntimePlatform.perform(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[7];
  uint64_t v23;
  _QWORD aBlock[8];

  if (qword_1ED88E518 != -1)
    swift_once();
  v6 = sub_1CB8466D8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED890248);
  sub_1CB7A0634(a1, (uint64_t)aBlock);
  v7 = sub_1CB8466C0();
  v8 = sub_1CB846C84();
  if (os_log_type_enabled(v7, v8))
  {
    v21 = a3;
    v9 = swift_slowAlloc();
    v20 = a2;
    v10 = swift_slowAlloc();
    v23 = v10;
    *(_DWORD *)v9 = 136315394;
    v22[0] = sub_1CB775A54(0xD000000000000016, 0x80000001CB853CF0, &v23);
    sub_1CB846E58();
    *(_WORD *)(v9 + 12) = 2080;
    sub_1CB7A0634((uint64_t)aBlock, (uint64_t)v22);
    sub_1CB846F30();
    sub_1CB846954();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    v11 = (id)v22[1];
    v12 = objc_msgSend(v11, sel_description);
    sub_1CB8468A0();

    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB7A0670((uint64_t)v22);
    v22[0] = sub_1CB775A54(0, 0xE000000000000000, &v23);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    sub_1CB7A0670((uint64_t)aBlock);
    _os_log_impl(&dword_1CB771000, v7, v8, "SiriUserFeedbackLearningPlatform.%s task: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    v13 = v10;
    a2 = v20;
    MEMORY[0x1D179FE84](v13, -1, -1);
    v14 = v9;
    a3 = v21;
    MEMORY[0x1D179FE84](v14, -1, -1);
  }
  else
  {
    sub_1CB7A0670((uint64_t)aBlock);
  }

  v15 = (void *)objc_opt_self();
  v16 = *(_QWORD *)(a1 + 8);
  v17 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  aBlock[4] = sub_1CB7A1BBC;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB7A1484;
  aBlock[3] = &block_descriptor_2;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_performTask_forPluginID_completionHandler_, v16, v17, v19);
  _Block_release(v19);

}

void sub_1CB7A1400(void *a1, void *a2, void (*a3)(_QWORD *))
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  _QWORD v10[3];
  uint64_t v11;
  void *v12;
  void *v13;

  v6 = a1;
  v7 = a2;
  SiriUserFeedbackLearningPlatformResult.init(mlrTaskResult:error:)(a1, a2, &v11);
  v8 = v12;
  v9 = v13;
  v10[0] = v11;
  v10[1] = v12;
  v10[2] = v13;
  a3(v10);

  swift_bridgeObjectRelease();
}

void sub_1CB7A1484(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t SiriUserFeedbackLearningMLRuntimePlatform.perform(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 144) = a1;
  *(_QWORD *)(v2 + 152) = a2;
  return swift_task_switch();
}

uint64_t sub_1CB7A1510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[2];

  if (qword_1ED88E518 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = sub_1CB8466D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED890248);
  sub_1CB7A0634(v1, v0 + 16);
  v3 = sub_1CB8466C0();
  v4 = sub_1CB846C84();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v15 = v6;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 128) = sub_1CB775A54(0x286D726F66726570, 0xEB00000000293A5FLL, &v15);
    sub_1CB846E58();
    *(_WORD *)(v5 + 12) = 2080;
    sub_1CB7A0634(v0 + 16, v0 + 72);
    v18[0] = 0;
    v18[1] = 0xE000000000000000;
    sub_1CB846F30();
    v16 = v18[0];
    v17 = v18[1];
    sub_1CB846954();
    strcpy((char *)v18, "triggerType: ");
    HIWORD(v18[1]) = -4864;
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    v7 = *(id *)(v0 + 80);
    v8 = objc_msgSend(v7, sel_description);
    sub_1CB8468A0();

    sub_1CB846954();
    swift_bridgeObjectRelease();

    v9 = v16;
    v10 = v17;
    sub_1CB7A0670(v0 + 72);
    *(_QWORD *)(v0 + 136) = sub_1CB775A54(v9, v10, &v15);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    sub_1CB7A0670(v0 + 16);
    _os_log_impl(&dword_1CB771000, v3, v4, "SiriUserFeedbackLearningMLRuntimePlugin.%s (async) task: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v6, -1, -1);
    MEMORY[0x1D179FE84](v5, -1, -1);
  }
  else
  {
    sub_1CB7A0670(v0 + 16);
  }

  v11 = *(_QWORD *)(v0 + 152);
  v12 = swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v12;
  *(_QWORD *)(v12 + 16) = v11;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v13;
  *v13 = v0;
  v13[1] = sub_1CB7A18E0;
  return sub_1CB847188();
}

uint64_t sub_1CB7A18E0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_1CB7A1930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A738);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (void *)objc_opt_self();
  v8 = *(_QWORD *)(a2 + 8);
  v9 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1CB7A1CE8;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB7A1484;
  aBlock[3] = &block_descriptor_9;
  v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v7, sel_performTask_forPluginID_completionHandler_, v8, v9, v12);
  _Block_release(v12);

}

uint64_t sub_1CB7A1AA8(void *a1, void *a2)
{
  id v4;
  id v5;
  __int128 v7;

  v4 = a1;
  v5 = a2;
  SiriUserFeedbackLearningPlatformResult.init(mlrTaskResult:error:)(a1, a2, &v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A738);
  return sub_1CB846B34();
}

void sub_1CB7A1B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  SiriUserFeedbackLearningMLRuntimePlatform.perform(_:completion:)(a1, a2, a3);
}

uint64_t sub_1CB7A1B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CB785488;
  v5[18] = a1;
  v5[19] = a2;
  return swift_task_switch();
}

uint64_t sub_1CB7A1B98()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1CB7A1BBC(void *a1, void *a2)
{
  uint64_t v2;

  sub_1CB7A1400(a1, a2, *(void (**)(_QWORD *))(v2 + 16));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_1CB7A1BDC(uint64_t a1)
{
  uint64_t v1;

  sub_1CB7A1930(a1, *(_QWORD *)(v1 + 16));
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlatform.perform(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlatform.perform(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CB785DF4;
  return v11(a1, a2, a3, a4);
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningMLRuntimePlatform()
{
  return &type metadata for SiriUserFeedbackLearningMLRuntimePlatform;
}

uint64_t sub_1CB7A1C84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A738);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CB7A1CE8(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A738);
  return sub_1CB7A1AA8(a1, a2);
}

void sub_1CB7A1D40()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_namespaceNameFromId_, 351);
  v1 = sub_1CB8468A0();
  v3 = v2;

  qword_1ED88A2A0 = v1;
  *(_QWORD *)algn_1ED88A2A8 = v3;
}

uint64_t static TrialConstants.SiriValueInferenceTrialScope.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1CB7A1ECC(qword_1ED88A2B0, &qword_1ED88A2A0, (uint64_t *)algn_1ED88A2A8, a1);
}

void sub_1CB7A1DC4()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_namespaceNameFromId_, 354);
  v1 = sub_1CB8468A0();
  v3 = v2;

  qword_1ED88DEE0 = v1;
  unk_1ED88DEE8 = v3;
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsMediaTrialScope.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1CB7A1ECC(qword_1ED88DEF8, &qword_1ED88DEE0, (uint64_t *)&unk_1ED88DEE8, a1);
}

void sub_1CB7A1E48()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_namespaceNameFromId_, 353);
  v1 = sub_1CB8468A0();
  v3 = v2;

  qword_1ED8892A0 = v1;
  *(_QWORD *)algn_1ED8892A8 = v3;
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformTrialScope.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1CB7A1ECC(&qword_1ED8892B0, &qword_1ED8892A0, (uint64_t *)algn_1ED8892A8, a1);
}

uint64_t sub_1CB7A1ECC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;

  if (*a1 != -1)
    swift_once();
  v7 = *a3;
  *a4 = *a2;
  a4[1] = v7;
  return swift_bridgeObjectRetain();
}

unint64_t static TrialConstants.ValueInferenceFactorNames.isPICSRestatementAndSuccessfulPhoneCallEnabled.getter()
{
  return 0xD00000000000002ELL;
}

unint64_t static TrialConstants.ValueInferenceFactorNames.isPICSEnabledAtRuntimeInSiriVocab.getter()
{
  return 0xD000000000000021;
}

uint64_t static TrialConstants.ValueInferenceFactors.isPICSRestatementAndSuccessfulPhoneCallEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.ValueInferenceFactors.isPICSEnabledAtRuntimeInSiriVocab.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsMediaFactors.pimsOfflineLearningEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsMediaFactors.pimsSurfacingEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsMediaFactors.pimsPartialRepetitionSimilarityThreshold.getter()
{
  type metadata accessor for TrialDoubleFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsMediaFactors.pimsWakeWordTrimmingEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsMediaFactors.pimsPhantomTurnRemovalEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

unint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformFactorNames.isEventBasedSchedulerEnabled.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformFactorNames.uuflOfflineLearningEnabled.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformFactorNames.uuflSurfacingEnabled.getter()
{
  return 0xD000000000000014;
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformFactors.isEventBasedSchedulerEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformFactors.uuflOfflineLearningEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformFactors.uuflSurfacingEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

ValueMetadata *type metadata accessor for TrialConstants()
{
  return &type metadata for TrialConstants;
}

ValueMetadata *type metadata accessor for TrialConstants.ValueInferenceFactorNames()
{
  return &type metadata for TrialConstants.ValueInferenceFactorNames;
}

ValueMetadata *type metadata accessor for TrialConstants.ValueInferenceFactors()
{
  return &type metadata for TrialConstants.ValueInferenceFactors;
}

ValueMetadata *type metadata accessor for TrialConstants.SiriPrivateLearningSuggestionsMediaFactors()
{
  return &type metadata for TrialConstants.SiriPrivateLearningSuggestionsMediaFactors;
}

ValueMetadata *type metadata accessor for TrialConstants.SiriPrivateLearningSuggestionsPlatformFactorNames()
{
  return &type metadata for TrialConstants.SiriPrivateLearningSuggestionsPlatformFactorNames;
}

ValueMetadata *type metadata accessor for TrialConstants.SiriPrivateLearningSuggestionsPlatformFactors()
{
  return &type metadata for TrialConstants.SiriPrivateLearningSuggestionsPlatformFactors;
}

void sub_1CB7A2148(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

id sub_1CB7A21BC()
{
  id result;

  result = sub_1CB7A21D8();
  qword_1ED88A5F8 = (uint64_t)result;
  return result;
}

id sub_1CB7A21D8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1CB845F58();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  type metadata accessor for InferredGroundTruthStoreCoreData();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v13 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v14 = objc_msgSend(v11, sel_URLForResource_withExtension_, v12, v13);

  if (v14)
  {
    sub_1CB845F34();

    v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v15(v2, v7, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      v15(v9, v2, v3);
      v16 = objc_allocWithZone(MEMORY[0x1E0C97B98]);
      v17 = (void *)sub_1CB845EE0();
      v18 = objc_msgSend(v16, sel_initWithContentsOfURL_, v17);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      if (v18)
        return v18;
      goto LABEL_7;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  sub_1CB785B54((uint64_t)v2, &qword_1ED88E158);
LABEL_7:
  if (qword_1ED88E518 != -1)
    swift_once();
  v19 = sub_1CB8466D8();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED890248);
  v20 = sub_1CB8466C0();
  v21 = sub_1CB846C90();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1CB771000, v20, v21, "InferredGroundTruthStoreCoreData: Error loading data base model from bundle", v22, 2u);
    MEMORY[0x1D179FE84](v22, -1, -1);
  }

  return 0;
}

uint64_t InferredGroundTruthStoreCoreData.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return InferredGroundTruthStoreCoreData.init(_:)(a1, a2);
}

uint64_t InferredGroundTruthStoreCoreData.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  void (*v26)(_BYTE *, uint64_t);
  unsigned int v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  os_log_t v43;
  void *v44;
  void *v45;
  uint64_t ObjCClassFromMetadata;
  id v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  _BYTE *v52;
  _BYTE *v53;
  void *v54;
  uint64_t v55;
  id v56;
  id v57;
  _BYTE v59[12];
  int v60;
  os_log_t v61;
  void *v62;
  _BYTE *v63;
  unint64_t v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id aBlock[8];

  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1CB846CCC();
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = &v59[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1CB845F58();
  v70 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = &v59[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = &v59[-v12];
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = &v59[-v15];
  MEMORY[0x1E0C80A78](v14);
  v18 = &v59[-v17];
  if (qword_1ED88A608 != -1)
    swift_once();
  v19 = (void *)qword_1ED88A5F8;
  if (!qword_1ED88A5F8)
  {
    swift_bridgeObjectRelease();
LABEL_16:
    type metadata accessor for InferredGroundTruthStoreCoreData();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v63 = v10;
  v67 = v2;
  v20 = objc_allocWithZone(MEMORY[0x1E0C97BC8]);
  v21 = v19;
  v64 = (unint64_t)"perform(_:completion:)";
  v22 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v66 = v21;
  v65 = objc_msgSend(v20, sel_initWithName_managedObjectModel_, v22, v21);

  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97C08]), sel_init);
  objc_msgSend(v23, sel_setShouldInferMappingModelAutomatically_, 0);
  objc_msgSend(v23, sel_setShouldMigrateStoreAutomatically_, 0);
  if (a2)
  {
    sub_1CB845EC8();
    swift_bridgeObjectRelease();
    v24 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_1CB845F28();
    v25 = (void *)sub_1CB845EE0();
    v26 = *(void (**)(_BYTE *, uint64_t))(v70 + 8);
    v26(v16, v7);
    aBlock[0] = 0;
    v27 = objc_msgSend(v24, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v25, 1, 0, aBlock);

    v28 = aBlock[0];
    if (!v27)
    {
      v29 = v28;
      v30 = (void *)sub_1CB845E80();

      swift_willThrow();
      if (qword_1ED88E518 != -1)
        swift_once();
      v31 = sub_1CB8466D8();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED890248);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v70 + 16))(v13, v18, v7);
      v32 = v30;
      v33 = v30;
      v34 = sub_1CB8466C0();
      v35 = sub_1CB846C90();
      v36 = v35;
      if (os_log_type_enabled(v34, v35))
      {
        v37 = swift_slowAlloc();
        v62 = (void *)swift_slowAlloc();
        aBlock[0] = v62;
        *(_DWORD *)v37 = 136315394;
        v61 = v34;
        sub_1CB7762AC((unint64_t *)&qword_1ED88A268, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        v60 = v36;
        v38 = sub_1CB847170();
        v71 = sub_1CB775A54(v38, v39, (uint64_t *)aBlock);
        sub_1CB846E58();
        swift_bridgeObjectRelease();
        v26(v13, v7);
        *(_WORD *)(v37 + 12) = 2080;
        v71 = (uint64_t)v30;
        v40 = v30;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
        v41 = sub_1CB8468DC();
        v71 = sub_1CB775A54(v41, v42, (uint64_t *)aBlock);
        sub_1CB846E58();
        swift_bridgeObjectRelease();

        v43 = v61;
        _os_log_impl(&dword_1CB771000, v61, (os_log_type_t)v60, "InferredGroundTruthStoreCoreData: Unable to create the data directory, path=%s, error=%s", (uint8_t *)v37, 0x16u);
        v44 = v62;
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v44, -1, -1);
        MEMORY[0x1D179FE84](v37, -1, -1);

      }
      else
      {

        v26(v13, v7);
      }
    }
    v45 = (void *)sub_1CB845EE0();
    objc_msgSend(v23, sel_setURL_, v45);

    type metadata accessor for InferredGroundTruthStoreCoreData();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v47 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    type metadata accessor for IncrementalMigrationManager();
    *(_QWORD *)(swift_initStackObject() + 16) = v47;
    sub_1CB846CC0();
    sub_1CB7E7DF4((uint64_t)v18, (uint64_t)v6, 0xD000000000000010, v64 | 0x8000000000000000);
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v6, v69);
    v26(v18, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1CB84A330;
  *(_QWORD *)(v48 + 32) = v23;
  aBlock[0] = (id)v48;
  sub_1CB846A74();
  sub_1CB777FA8(0, (unint64_t *)&qword_1ED88DE18);
  v49 = v23;
  v50 = (void *)sub_1CB846A44();
  swift_bridgeObjectRelease();
  v51 = v65;
  objc_msgSend(v65, sel_setPersistentStoreDescriptions_, v50);

  v52 = (_BYTE *)swift_allocObject();
  v52[16] = 1;
  v53 = v52 + 16;
  aBlock[4] = sub_1CB7A31F0;
  aBlock[5] = v52;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1CB7A2148;
  aBlock[3] = &block_descriptor_3;
  v54 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v51, sel_loadPersistentStoresWithCompletionHandler_, v54);
  _Block_release(v54);
  swift_beginAccess();
  if ((*v53 & 1) == 0)
  {

    swift_release();
    goto LABEL_16;
  }
  v55 = v67;
  *(_QWORD *)(v67 + 24) = v51;
  v56 = v51;
  v57 = objc_msgSend(v56, sel_newBackgroundContext);

  *(_QWORD *)(v55 + 16) = v57;
  swift_release();
  return v55;
}

uint64_t type metadata accessor for InferredGroundTruthStoreCoreData()
{
  return objc_opt_self();
}

uint64_t sub_1CB7A2F74()
{
  return swift_deallocObject();
}

void sub_1CB7A2F84(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;

  if (a2)
  {
    swift_beginAccess();
    *(_BYTE *)(a3 + 16) = 0;
    if (qword_1ED88E518 != -1)
      swift_once();
    v6 = sub_1CB8466D8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED890248);
    v7 = a2;
    v8 = a1;
    v9 = a2;
    v10 = v8;
    v11 = sub_1CB8466C0();
    v12 = sub_1CB846C90();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = (_QWORD *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v19 = v15;
      *(_DWORD *)v13 = 136315394;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99E380);
      v16 = sub_1CB846E34();
      sub_1CB775A54(v16, v17, &v19);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      *(_WORD *)(v13 + 12) = 2112;
      v18 = v10;
      sub_1CB846E58();
      *v14 = v10;

      _os_log_impl(&dword_1CB771000, v11, v12, "InferredGroundTruthStoreCoreData: Unable to load persistent stores: %s : %@", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v15, -1, -1);
      MEMORY[0x1D179FE84](v13, -1, -1);

    }
    else
    {

    }
  }
}

void sub_1CB7A31F0(void *a1, void *a2)
{
  uint64_t v2;

  sub_1CB7A2F84(a1, a2, v2);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_1CB7A3210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(v3 + 16);
  (*(void (**)(char *))(v6 + 16))(v8);
  v10 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = a2;
  *((_QWORD *)v11 + 3) = a3;
  *((_QWORD *)v11 + 4) = v3;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v11[v10], v8, a2);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1CB7A7EF0;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_1CB7A7F20;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB7A346C;
  aBlock[3] = &block_descriptor_9_0;
  v13 = _Block_copy(aBlock);
  v14 = v9;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlockAndWait_, v13);

  _Block_release(v13);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1CB7A33BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1CB7DF698(a3, a3);
  v5 = *(_QWORD *)(a3 - 8);
  swift_allocObject();
  v6 = sub_1CB846A80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v7, a2, a3);
  sub_1CB7DF4CC(v6);
  sub_1CB7A35E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7A346C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1CB7A348C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t result;
  _QWORD v14[6];

  v4 = v3;
  v8 = *(void **)(v4 + 16);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = v4;
  v9[5] = a1;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1CB7A7F6C;
  *(_QWORD *)(v10 + 24) = v9;
  v14[4] = sub_1CB7A90B0;
  v14[5] = v10;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1CB7A346C;
  v14[3] = &block_descriptor_19;
  v11 = _Block_copy(v14);
  v12 = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a1 & 1) != 0)
    __break(1u);
  return result;
}

id sub_1CB7A35E8()
{
  uint64_t v0;

  v0 = sub_1CB846B04();
  MEMORY[0x1D179FD88](MEMORY[0x1E0DEAF38], v0);
  sub_1CB8469FC();
  return sub_1CB7A6FE0();
}

uint64_t sub_1CB7A3664()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v4;

  v1 = *(void **)(v0 + 16);
  sub_1CB846B04();
  v2 = v1;
  sub_1CB846DA4();

  return v4;
}

uint64_t sub_1CB7A36D8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v4;

  v1 = *(void **)(v0 + 16);
  sub_1CB846B04();
  v2 = v1;
  sub_1CB846DA4();

  return v4;
}

uint64_t sub_1CB7A3750()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  type metadata accessor for InferredGroundTruthStoreCoreData();
  v0 = sub_1CB846B04();
  sub_1CB7A405C((void (*)(void))sub_1CB7A8FB0, v0, (uint64_t)&v2);
  result = v2;
  if (!v2)
    return sub_1CB846AB0();
  return result;
}

void sub_1CB7A3800(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v11 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v13 = objc_msgSend(v11, sel_initWithEntityName_, v12);

  sub_1CB777FA8(0, &qword_1ED88A740);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88A810);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1CB848A50;
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 64) = sub_1CB7A8538();
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  swift_bridgeObjectRetain();
  v15 = (void *)sub_1CB846C48();
  objc_msgSend(v13, sel_setPredicate_, v15);

  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1CB84A330;
  v17 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v18 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v19 = objc_msgSend(v17, sel_initWithKey_ascending_, v18, 0);

  *(_QWORD *)(v16 + 32) = v19;
  sub_1CB846A74();
  sub_1CB777FA8(0, (unint64_t *)&qword_1ED88DE00);
  v20 = (void *)sub_1CB846A44();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setSortDescriptors_, v20);

  objc_msgSend(v13, sel_setFetchLimit_, a3);
  objc_msgSend(v13, sel_setFetchOffset_, a4);
  v21 = *(void **)(a5 + 16);
  type metadata accessor for GroundTruthRecord();
  v22 = v21;
  sub_1CB846DB0();
  if (v26)
  {

  }
  else
  {

    MEMORY[0x1E0C80A78](v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A718);
    sub_1CB7A8FF4();
    v24 = sub_1CB8469F0();
    swift_bridgeObjectRelease();

    *a6 = v24;
  }
}

uint64_t sub_1CB7A3B28@<X0>(id *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a3;
  v31 = a2;
  v8 = sub_1CB846E40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v28 - v10;
  v12 = objc_msgSend(*a1, sel_payload);
  v13 = sub_1CB845F94();
  v15 = v14;

  v16 = v15;
  sub_1CB7A7658(a4, (uint64_t)v11);
  v17 = *(_QWORD *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, a4) == 1)
  {
    v30 = a5;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (qword_1ED88E518 != -1)
      swift_once();
    v18 = sub_1CB8466D8();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED890248);
    v19 = v32;
    swift_bridgeObjectRetain_n();
    v20 = sub_1CB8466C0();
    v21 = sub_1CB846C90();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v29 = v16;
      v24 = v23;
      v34 = v23;
      *(_DWORD *)v22 = 136315138;
      v28[1] = v22 + 4;
      swift_bridgeObjectRetain();
      v33 = sub_1CB775A54(v31, v19, &v34);
      sub_1CB846E58();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CB771000, v20, v21, "InferredGroundTruthStoreCoreData: Cannot decode an inferred ground truth of type %s", v22, 0xCu);
      v25 = 1;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v24, -1, -1);
      MEMORY[0x1D179FE84](v22, -1, -1);
      sub_1CB779034(v13, v29);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_1CB779034(v13, v16);

      v25 = 1;
    }
    v26 = v30;
  }
  else
  {
    sub_1CB779034(v13, v16);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a5, v11, a4);
    v25 = 0;
    v26 = a5;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v26, v25, 1, a4);
}

uint64_t sub_1CB7A3E08(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v4;

  a3(&v4);
  return 0;
}

uint64_t sub_1CB7A405C@<X0>(void (*a1)(void)@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  a1();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, 0, 1, a2);
}

uint64_t sub_1CB7A4308()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t result;
  _QWORD v6[6];

  v1 = *(void **)(v0 + 16);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1CB7A8038;
  *(_QWORD *)(v2 + 24) = v0;
  v6[4] = sub_1CB7A90B0;
  v6[5] = v2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1CB7A346C;
  v6[3] = &block_descriptor_26;
  v3 = _Block_copy(v6);
  v4 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_performBlockAndWait_, v3);

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1CB7A4424(uint64_t a1)
{
  swift_retain();
  sub_1CB7A85DC(0x746E497465736572, 0xEF29286C616E7265, a1);
  return swift_release();
}

void sub_1CB7A4470(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  id v15[2];

  v15[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97A90]), sel_initWithFetchRequest_, v4);
  v6 = *(void **)(a1 + 16);
  v15[0] = 0;
  v7 = objc_msgSend(v6, sel_executeRequest_error_, v5, v15);
  if (v7)
  {
    v8 = v7;
    v9 = v15[0];

    if ((sub_1CB7A6FE0() & 1) == 0)
    {
      if (qword_1ED88E518 != -1)
        swift_once();
      v10 = sub_1CB8466D8();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED890248);
      v11 = sub_1CB8466C0();
      v12 = sub_1CB846C90();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_1CB771000, v11, v12, "InferredGroundTruthStoreCoreData: Cannot reset store, failed to save", v13, 2u);
        MEMORY[0x1D179FE84](v13, -1, -1);

        return;
      }

    }
  }
  else
  {
    v14 = v15[0];
    sub_1CB845E80();

    swift_willThrow();
  }

}

uint64_t sub_1CB7A466C()
{
  uint64_t v0;
  id v1;
  uint64_t v3;

  v1 = *(id *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A718);
  sub_1CB846DA4();

  return v3;
}

uint64_t sub_1CB7A46D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v6 = 0;
  swift_retain();
  sub_1CB7A8830(0xD000000000000022, 0x80000001CB853E20, 0, 0, 1, &v6, a1);
  result = swift_release();
  v5 = v6;
  if (!v6)
    v5 = MEMORY[0x1E0DEE9D8];
  *a2 = v5;
  return result;
}

uint64_t sub_1CB7A475C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t result;
  _QWORD v6[6];

  v1 = *(void **)(v0 + 16);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1CB7A8068;
  *(_QWORD *)(v2 + 24) = v0;
  v6[4] = sub_1CB7A90B0;
  v6[5] = v2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1CB7A346C;
  v6[3] = &block_descriptor_33;
  v3 = _Block_copy(v6);
  v4 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_performBlockAndWait_, v3);

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1CB7A4878()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  id v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  void *v72;
  unint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  void *v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  id v93;
  void *v94;
  uint64_t v95;
  id v96;
  id v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  void *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  __int128 v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  int v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121[3];

  v2 = v0;
  v121[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1CB846084();
  v113 = *(_QWORD *)(v3 - 8);
  v114 = v3;
  MEMORY[0x1E0C80A78](v3);
  v112 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(id *)(v0 + 16);
  v6 = sub_1CB7A5894();
  v109 = v5;

  if (__OFSUB__(v6, 0x100000))
  {
    __break(1u);
  }
  else
  {
    if (((unint64_t)(v6 - 0x100000) & 0x8000000000000000) != 0)
      return;
    v107 = v6 - 0x100000;
    v7 = 0xD000000000000022;
    v121[0] = 0;
    swift_retain();
    sub_1CB7A8A98(0xD00000000000001CLL, 0x80000001CB853E00, (uint64_t *)v121, v2);
    swift_release();
    v8 = (unint64_t)v121[0];
    if (!v121[0])
      v8 = MEMORY[0x1E0DEE9D8];
    v119 = v8;
    v1 = v8 >> 62;
    if (!(v8 >> 62))
    {
      v9 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_7;
    }
  }
  if (v119 < 0)
    v7 = v119;
  else
    v7 = v119 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v9 = sub_1CB847044();
  swift_bridgeObjectRelease();
LABEL_7:
  v108 = v2;
  if (v9)
  {
    if (v9 < 1)
    {
      __break(1u);
      goto LABEL_102;
    }
    v106 = v1;
    v118 = v119 & 0xC000000000000001;
    swift_bridgeObjectRetain();
    v10 = 0;
    *(_QWORD *)&v11 = 136315394;
    v111 = v11;
    v110 = MEMORY[0x1E0DEE9B8] + 8;
    do
    {
      if (v118)
        v12 = (id)MEMORY[0x1D179F320](v10, v119);
      else
        v12 = *(id *)(v119 + 8 * v10 + 32);
      v13 = v12;
      if (qword_1ED88E518 != -1)
        swift_once();
      v14 = sub_1CB8466D8();
      v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED890248);
      v16 = v13;
      v17 = sub_1CB8466C0();
      v18 = sub_1CB846C90();
      v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        v20 = swift_slowAlloc();
        v116 = v19;
        v21 = v20;
        v115 = (void *)swift_slowAlloc();
        v121[0] = v115;
        *(_DWORD *)v21 = v111;
        v22 = objc_msgSend(v16, sel_id);
        v23 = v112;
        sub_1CB846054();

        sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v24 = v9;
        v25 = v114;
        v26 = sub_1CB847170();
        v117 = v15;
        v28 = v27;
        v29 = v25;
        v9 = v24;
        (*(void (**)(char *, uint64_t))(v113 + 8))(v23, v29);
        *(_QWORD *)(v21 + 4) = sub_1CB775A54(v26, v28, (uint64_t *)v121);

        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2080;
        v30 = objc_msgSend(v16, sel_type);
        v31 = sub_1CB8468A0();
        v33 = v32;

        *(_QWORD *)(v21 + 14) = sub_1CB775A54(v31, v33, (uint64_t *)v121);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CB771000, v17, (os_log_type_t)v116, "InferredGroundTruthStoreCoreData: Preparing to delete a GT record with zero payload; id=%s, type=%s",
          (uint8_t *)v21,
          0x16u);
        v34 = v115;
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v34, -1, -1);
        MEMORY[0x1D179FE84](v21, -1, -1);

      }
      else
      {

      }
      ++v10;
    }
    while (v9 != v10);
    swift_bridgeObjectRelease();
    if (v106)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1CB847044();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v2 = v108;
    if (v7)
    {
      v121[0] = (id)MEMORY[0x1E0DEE9D8];
      sub_1CB846FCC();
      if ((v7 & 0x8000000000000000) != 0)
      {
LABEL_104:
        __break(1u);
LABEL_105:
        swift_once();
LABEL_80:
        v84 = sub_1CB8466D8();
        __swift_project_value_buffer(v84, (uint64_t)qword_1ED890248);
        swift_bridgeObjectRetain();
        v85 = sub_1CB8466C0();
        v86 = sub_1CB846C84();
        if (os_log_type_enabled(v85, v86))
        {
          v87 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v87 = 134217984;
          if (v9)
          {
            swift_bridgeObjectRetain();
            v88 = (void *)sub_1CB847044();
            swift_bridgeObjectRelease();
          }
          else
          {
            v88 = *(void **)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          v121[0] = v88;
          sub_1CB846E58();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1CB771000, v85, v86, "InferredGroundTruthStoreCoreData: Deleted %ld records due to store size exceeding the threshold", v87, 0xCu);
          MEMORY[0x1D179FE84](v87, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        return;
      }
      v35 = 0;
      do
      {
        if (v118)
          v36 = (id)MEMORY[0x1D179F320](v35, v119);
        else
          v36 = *(id *)(v119 + 8 * v35 + 32);
        v37 = v36;
        ++v35;
        v38 = objc_msgSend(v36, sel_objectID);

        sub_1CB846FB4();
        sub_1CB846FD8();
        sub_1CB846FE4();
        sub_1CB846FC0();
      }
      while (v7 != v35);
    }
    v39 = objc_allocWithZone(MEMORY[0x1E0C97A90]);
    sub_1CB777FA8(0, &qword_1EF99E370);
    v40 = (void *)sub_1CB846A44();
    swift_bridgeObjectRelease();
    v41 = objc_msgSend(v39, sel_initWithObjectIDs_, v40);

    v121[0] = 0;
    v42 = objc_msgSend(v109, sel_executeRequest_error_, v41, v121);
    if (v42)
    {
      v43 = v42;
      v44 = v121[0];

      swift_bridgeObjectRetain();
      v45 = sub_1CB8466C0();
      v46 = sub_1CB846C9C();
      if (os_log_type_enabled(v45, v46))
      {
        v9 = swift_slowAlloc();
        *(_DWORD *)v9 = 134217984;
        swift_bridgeObjectRelease();
        v121[0] = (id)v7;
        sub_1CB846E58();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CB771000, v45, v46, "InferredGroundTruthStoreCoreData: Deleted %ld invalid records with zero payload", (uint8_t *)v9, 0xCu);
        MEMORY[0x1D179FE84](v9, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      v47 = v121[0];
      swift_bridgeObjectRelease();
      v48 = (void *)sub_1CB845E80();

      swift_willThrow();
      v49 = v48;
      v50 = v48;
      v51 = sub_1CB8466C0();
      v52 = sub_1CB846C90();
      v9 = v52;
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        v54 = (void *)swift_slowAlloc();
        v121[0] = v54;
        *(_DWORD *)v53 = 136315138;
        swift_getErrorValue();
        v55 = sub_1CB84729C();
        v120 = sub_1CB775A54(v55, v56, (uint64_t *)v121);
        sub_1CB846E58();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1CB771000, v51, (os_log_type_t)v9, "InferredGroundTruthStoreCoreData: Failed to delete records with zero payload, error=%s", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v54, -1, -1);
        MEMORY[0x1D179FE84](v53, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v121[0] = 0;
  swift_retain();
  v57 = (uint64_t)"readRecordsWithZeroPayload()";
  sub_1CB7A8830(0xD000000000000022, 0x80000001CB853E20, 1, 10, 0, (uint64_t *)v121, v2);
  swift_release();
  v58 = (void *)MEMORY[0x1E0DEE9D8];
  if (v121[0])
    v7 = (unint64_t)v121[0];
  else
    v7 = MEMORY[0x1E0DEE9D8];
  if (!(v7 >> 62))
  {
    v59 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v59)
      goto LABEL_42;
LABEL_57:
    swift_bridgeObjectRelease();
    v61 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_58;
  }
  swift_bridgeObjectRetain();
  v59 = sub_1CB847044();
  swift_bridgeObjectRelease();
  v58 = (void *)MEMORY[0x1E0DEE9D8];
  if (!v59)
    goto LABEL_57;
LABEL_42:
  v121[0] = v58;
  sub_1CB776470(0, v59 & ~(v59 >> 63), 0);
  if (v59 < 0)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  v119 = (uint64_t)"readRecordsWithZeroPayload()";
  v60 = 0;
  v61 = v121[0];
  do
  {
    if ((v7 & 0xC000000000000001) != 0)
      v62 = (id)MEMORY[0x1D179F320](v60, v7);
    else
      v62 = *(id *)(v7 + 8 * v60 + 32);
    v63 = v62;
    v64 = objc_msgSend(v62, sel_payload);
    v9 = sub_1CB845F94();
    v66 = v65;

    v121[0] = v61;
    v68 = v61[2];
    v67 = v61[3];
    if (v68 >= v67 >> 1)
    {
      sub_1CB776470(v67 > 1, v68 + 1, 1);
      v61 = v121[0];
    }
    ++v60;
    v61[2] = v68 + 1;
    v69 = &v61[2 * v68];
    v69[4] = v9;
    v69[5] = v66;
  }
  while (v59 != v60);
  swift_bridgeObjectRelease();
  v2 = v108;
  v57 = v119;
LABEL_58:
  v70 = sub_1CB7A6140((uint64_t)v61);
  swift_bridgeObjectRelease();
  if (v70 <= 9)
  {
    v71 = 5;
  }
  else if ((uint64_t)((unint64_t)v107 / (v70 / 0xAuLL)) <= 0)
  {
    v71 = 5;
  }
  else
  {
    v71 = (unint64_t)v107 / (v70 / 0xAuLL);
  }
  v121[0] = 0;
  swift_retain();
  sub_1CB7A8830(0xD000000000000022, v57 | 0x8000000000000000, 1, v71, 0, (uint64_t *)v121, v2);
  swift_release();
  v72 = (void *)MEMORY[0x1E0DEE9D8];
  if (v121[0])
    v73 = (unint64_t)v121[0];
  else
    v73 = MEMORY[0x1E0DEE9D8];
  if (!(v73 >> 62))
  {
    v7 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_68;
LABEL_98:
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
    v9 = MEMORY[0x1E0DEE9D8] >> 62;
    if (!(MEMORY[0x1E0DEE9D8] >> 62))
      goto LABEL_75;
    goto LABEL_99;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1CB847044();
  swift_bridgeObjectRelease();
  v72 = (void *)MEMORY[0x1E0DEE9D8];
  if (!v7)
    goto LABEL_98;
LABEL_68:
  v121[0] = v72;
  sub_1CB846FCC();
  if ((v7 & 0x8000000000000000) != 0)
  {
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  v74 = 0;
  do
  {
    if ((v73 & 0xC000000000000001) != 0)
      v75 = (id)MEMORY[0x1D179F320](v74, v73);
    else
      v75 = *(id *)(v73 + 8 * v74 + 32);
    v76 = v75;
    ++v74;
    v77 = objc_msgSend(v75, sel_objectID);

    sub_1CB846FB4();
    sub_1CB846FD8();
    sub_1CB846FE4();
    sub_1CB846FC0();
  }
  while (v7 != v74);
  v7 = (unint64_t)v121[0];
  swift_bridgeObjectRelease();
  v9 = v7 >> 62;
  if (!(v7 >> 62))
  {
LABEL_75:
    if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_78;
    goto LABEL_76;
  }
LABEL_99:
  swift_bridgeObjectRetain();
  v104 = sub_1CB847044();
  swift_bridgeObjectRelease();
  if (!v104)
    goto LABEL_78;
LABEL_76:
  v78 = objc_allocWithZone(MEMORY[0x1E0C97A90]);
  sub_1CB777FA8(0, &qword_1EF99E370);
  swift_bridgeObjectRetain();
  v79 = (void *)sub_1CB846A44();
  swift_bridgeObjectRelease();
  v80 = objc_msgSend(v78, sel_initWithObjectIDs_, v79);

  v121[0] = 0;
  v81 = objc_msgSend(v109, sel_executeRequest_error_, v80, v121);
  if (!v81)
  {
    v93 = v121[0];
    swift_bridgeObjectRelease();
    v94 = (void *)sub_1CB845E80();

    swift_willThrow();
    if (qword_1ED88E518 != -1)
      swift_once();
    v95 = sub_1CB8466D8();
    __swift_project_value_buffer(v95, (uint64_t)qword_1ED890248);
    v96 = v94;
    v97 = v94;
    v98 = sub_1CB8466C0();
    v99 = sub_1CB846C90();
    if (os_log_type_enabled(v98, v99))
    {
      v100 = (uint8_t *)swift_slowAlloc();
      v101 = (void *)swift_slowAlloc();
      v121[0] = v101;
      *(_DWORD *)v100 = 136315138;
      swift_getErrorValue();
      v102 = sub_1CB84729C();
      v120 = sub_1CB775A54(v102, v103, (uint64_t *)v121);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CB771000, v98, v99, "InferredGroundTruthStoreCoreData: Cannot delete oldest records %s", v100, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v101, -1, -1);
      MEMORY[0x1D179FE84](v100, -1, -1);

    }
    else
    {

    }
    return;
  }
  v82 = v81;
  v83 = v121[0];

LABEL_78:
  if ((sub_1CB7A6FE0() & 1) != 0)
  {
    if (qword_1ED88E518 == -1)
      goto LABEL_80;
    goto LABEL_105;
  }
  swift_bridgeObjectRelease();
  if (qword_1ED88E518 != -1)
    swift_once();
  v89 = sub_1CB8466D8();
  __swift_project_value_buffer(v89, (uint64_t)qword_1ED890248);
  v90 = sub_1CB8466C0();
  v91 = sub_1CB846C90();
  if (os_log_type_enabled(v90, v91))
  {
    v92 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v92 = 0;
    _os_log_impl(&dword_1CB771000, v90, v91, "InferredGroundTruthStoreCoreData: Cannot save context with deleted oldest records", v92, 2u);
    MEMORY[0x1D179FE84](v92, -1, -1);
  }

}

char *sub_1CB7A5894()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  char *v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  unint64_t v30;
  char v31;
  id v32;
  uint64_t v33;
  id *v34;
  id *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  char *v54;
  char *result;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64[2];
  __int128 v65;
  __int128 v66;
  uint64_t v67;

  v1 = v0;
  v67 = *MEMORY[0x1E0C80C00];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v61 - v6;
  v8 = sub_1CB845F58();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(v1, sel_persistentStoreCoordinator);
  if (!v12)
  {
LABEL_50:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_51:
    sub_1CB785B54((uint64_t)v7, &qword_1ED88E158);
    if (qword_1ED88E518 != -1)
      swift_once();
    v57 = sub_1CB8466D8();
    __swift_project_value_buffer(v57, (uint64_t)qword_1ED890248);
    v58 = sub_1CB8466C0();
    v59 = sub_1CB846C90();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      _os_log_impl(&dword_1CB771000, v58, v59, "NSManagedObjectContext: Failed to get store URL", v60, 2u);
      MEMORY[0x1D179FE84](v60, -1, -1);
    }

    return 0;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, sel_persistentStores);

  sub_1CB777FA8(0, (unint64_t *)&unk_1ED88A748);
  v15 = sub_1CB846A5C();

  if (v15 >> 62)
    goto LABEL_48;
  if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_49:
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  while (1)
  {
    if ((v15 & 0xC000000000000001) != 0)
    {
      v16 = (id)MEMORY[0x1D179F320](0, v15);
    }
    else
    {
      if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_59;
      }
      v16 = *(id *)(v15 + 32);
    }
    v17 = v16;
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v17, sel_URL);

    if (v18)
    {
      sub_1CB845F34();

      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, v19, 1, v8);
    sub_1CB7A8F68((uint64_t)v5, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      goto LABEL_51;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v20 = (void *)objc_opt_self();
    v21 = objc_msgSend(v20, sel_defaultManager);
    sub_1CB845F4C();
    v22 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    swift_bridgeObjectRelease();
    v64[0] = 0;
    v23 = objc_msgSend(v21, sel_attributesOfItemAtPath_error_, v22, v64);

    v24 = v64[0];
    if (!v23)
      goto LABEL_15;
    type metadata accessor for FileAttributeKey(0);
    v5 = v25;
    v15 = sub_1CB7762AC(&qword_1ED88A758, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1CB8487B8);
    v26 = sub_1CB8467EC();
    v27 = v24;

    v28 = (void *)*MEMORY[0x1E0CB2AF0];
    if (*(_QWORD *)(v26 + 16))
    {
      v29 = v28;
      v30 = sub_1CB779C48((uint64_t)v29);
      if ((v31 & 1) != 0)
      {
        sub_1CB778000(*(_QWORD *)(v26 + 56) + 32 * v30, (uint64_t)&v65);
      }
      else
      {
        v65 = 0u;
        v66 = 0u;
      }

    }
    else
    {
      v65 = 0u;
      v66 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v66 + 1))
      break;
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_30;
    v62 = v28;
    v63 = v64[0];
    v42 = objc_msgSend(v20, sel_defaultManager);
    v64[0] = (id)sub_1CB845F4C();
    v64[1] = v43;
    sub_1CB846954();
    v44 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    swift_bridgeObjectRelease();
    v64[0] = 0;
    v45 = objc_msgSend(v42, sel_attributesOfItemAtPath_error_, v44, v64);

    v46 = v64[0];
    if (!v45)
    {
LABEL_15:
      v32 = v64[0];
      v15 = sub_1CB845E80();

      swift_willThrow();
      if (qword_1ED88E518 == -1)
      {
LABEL_16:
        v33 = sub_1CB8466D8();
        __swift_project_value_buffer(v33, (uint64_t)qword_1ED890248);
        v34 = (id *)(id)v15;
        v35 = (id *)(id)v15;
        v36 = sub_1CB8466C0();
        v37 = sub_1CB846C90();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc();
          v39 = swift_slowAlloc();
          *(_QWORD *)&v65 = v39;
          *(_DWORD *)v38 = 136315138;
          v63 = v38 + 4;
          swift_getErrorValue();
          v40 = sub_1CB84729C();
          v64[0] = (id)sub_1CB775A54(v40, v41, (uint64_t *)&v65);
          sub_1CB846E58();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1CB771000, v36, v37, "NSManagedObjectContext: Cannot determine store size %s", v38, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D179FE84](v39, -1, -1);
          MEMORY[0x1D179FE84](v38, -1, -1);

        }
        else
        {

        }
        goto LABEL_35;
      }
LABEL_59:
      swift_once();
      goto LABEL_16;
    }
    v7 = (char *)sub_1CB8467EC();
    v47 = v46;

    if (*((_QWORD *)v7 + 2))
    {
      v5 = (char *)v62;
      v48 = sub_1CB779C48((uint64_t)v5);
      if ((v49 & 1) != 0)
      {
        sub_1CB778000(*((_QWORD *)v7 + 7) + 32 * v48, (uint64_t)&v65);
      }
      else
      {
        v65 = 0u;
        v66 = 0u;
      }

    }
    else
    {
      v65 = 0u;
      v66 = 0u;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (!*((_QWORD *)&v66 + 1))
    {
      sub_1CB785B54((uint64_t)&v65, &qword_1ED88E088);
LABEL_44:
      v54 = 0;
      goto LABEL_45;
    }
    if (!swift_dynamicCast())
      goto LABEL_44;
    v54 = (char *)v64[0];
LABEL_45:
    result = &v54[(_QWORD)v63];
    if (!__OFADD__(v63, v54))
      return result;
    __break(1u);
LABEL_48:
    swift_bridgeObjectRetain();
    v56 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (!v56)
      goto LABEL_49;
  }
  sub_1CB785B54((uint64_t)&v65, &qword_1ED88E088);
LABEL_30:
  if (qword_1ED88E518 != -1)
    swift_once();
  v50 = sub_1CB8466D8();
  __swift_project_value_buffer(v50, (uint64_t)qword_1ED890248);
  v51 = sub_1CB8466C0();
  v52 = sub_1CB846C90();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v53 = 0;
    _os_log_impl(&dword_1CB771000, v51, v52, "NSManagedObjectContext: Failed to get store size", v53, 2u);
    MEMORY[0x1D179FE84](v53, -1, -1);
  }

LABEL_35:
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return 0;
}

uint64_t sub_1CB7A6140(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
    return ((uint64_t (*)(_QWORD))((char *)&loc_1CB7A616C + dword_1CB7A61CC[*(_QWORD *)(a1 + 40) >> 62]))(0);
  else
    return 0;
}

uint64_t sub_1CB7A61DC()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v3;

  v1 = *(id *)(v0 + 16);
  sub_1CB846DA4();

  return v3;
}

uint64_t sub_1CB7A623C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unsigned __int8 v9;

  v1 = v0;
  v2 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  sub_1CB777FA8(0, &qword_1ED88A740);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88A810);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1CB848A60;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1CB7A8538();
  *(_QWORD *)(v5 + 32) = 25705;
  *(_QWORD *)(v5 + 40) = 0xE200000000000000;
  v6 = sub_1CB84603C();
  *(_QWORD *)(v5 + 96) = sub_1CB777FA8(0, &qword_1EF99E358);
  *(_QWORD *)(v5 + 104) = sub_1CB7A857C((unint64_t *)&qword_1EF99E360, &qword_1EF99E358);
  *(_QWORD *)(v5 + 72) = v6;
  v7 = sub_1CB846C48();
  objc_msgSend(v4, sel_setPredicate_, v7);

  swift_retain();
  v8 = v4;
  LOBYTE(v7) = sub_1CB7A8CF0(0xD000000000000015, 0x80000001CB853DE0, v1);
  swift_release();

  if ((v7 & 1) != 0)
    v9 = sub_1CB7A6FE0();
  else
    v9 = 0;

  return v9 & 1;
}

void sub_1CB7A6410(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;
  void *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;

  v4 = *(void **)(a1 + 16);
  type metadata accessor for GroundTruthRecord();
  v5 = v4;
  v6 = sub_1CB846DB0();

  if (!v2)
  {
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1CB847044();
      if (v7)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0)
            v9 = (id)MEMORY[0x1D179F320](i, v6);
          else
            v9 = *(id *)(v6 + 8 * i + 32);
          v10 = v9;
          objc_msgSend(v5, sel_deleteObject_, v9);

        }
      }
    }
    swift_bridgeObjectRelease_n();
    *a2 = v7 != 0;
  }
}

uint64_t sub_1CB7A654C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(v3 + 16);
  (*(void (**)(char *))(v6 + 16))(v8);
  v10 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = a2;
  *((_QWORD *)v11 + 3) = a3;
  *((_QWORD *)v11 + 4) = v3;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v11[v10], v8, a2);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1CB7A8100;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_1CB7A90B0;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB7A346C;
  aBlock[3] = &block_descriptor_43;
  v13 = _Block_copy(aBlock);
  v14 = v9;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlockAndWait_, v13);

  _Block_release(v13);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

void sub_1CB7A66F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;

  v25 = a2;
  v23 = a1;
  v26 = sub_1CB846084();
  v4 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v8 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v27 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1CB84ACD0;
  sub_1CB777FA8(0, &qword_1ED88A740);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88A810);
  v10 = swift_allocObject();
  v24 = xmmword_1CB848A60;
  *(_OWORD *)(v10 + 16) = xmmword_1CB848A60;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  v11 = sub_1CB7A8538();
  *(_QWORD *)(v10 + 64) = v11;
  *(_QWORD *)(v10 + 32) = 25705;
  *(_QWORD *)(v10 + 40) = 0xE200000000000000;
  v12 = v25;
  (*(void (**)(uint64_t, uint64_t))(a3 + 48))(v25, a3);
  v13 = sub_1CB84603C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
  *(_QWORD *)(v10 + 96) = sub_1CB777FA8(0, &qword_1EF99E358);
  *(_QWORD *)(v10 + 104) = sub_1CB7A857C((unint64_t *)&qword_1EF99E360, &qword_1EF99E358);
  *(_QWORD *)(v10 + 72) = v13;
  *(_QWORD *)(v9 + 32) = sub_1CB846C48();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v24;
  v15 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 64) = v11;
  *(_QWORD *)(v14 + 32) = 1701869940;
  *(_QWORD *)(v14 + 40) = 0xE400000000000000;
  v16 = v23;
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 56))(v12, a3);
  *(_QWORD *)(v14 + 96) = v15;
  *(_QWORD *)(v14 + 104) = v11;
  *(_QWORD *)(v14 + 72) = v17;
  *(_QWORD *)(v14 + 80) = v18;
  *(_QWORD *)(v9 + 40) = sub_1CB846C48();
  v34 = v9;
  sub_1CB846A74();
  v19 = (void *)sub_1CB846A44();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v19);

  v21 = v27;
  objc_msgSend(v27, sel_setPredicate_, v20);

  v29 = v12;
  v30 = a3;
  v31 = v28;
  v32 = v21;
  v33 = v16;
  sub_1CB7A3E08(0xD000000000000012, 0x80000001CB853DC0, (void (*)(uint64_t *__return_ptr))sub_1CB7A85BC);

}

void sub_1CB7A6A30(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  char *v37;
  os_log_t v38;
  uint64_t v39;
  void (*v40)(char *, os_log_t, uint64_t);
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  _BOOL4 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  os_log_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v67 = a5;
  v64 = a3;
  v7 = sub_1CB846084();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = a4;
  v12 = *(_QWORD *)(a4 - 8);
  v13 = MEMORY[0x1E0C80A78](v9);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v60 - v16;
  v66 = a1;
  v18 = *(void **)(a1 + 16);
  type metadata accessor for GroundTruthRecord();
  v19 = v18;
  v20 = v68;
  v21 = sub_1CB846DB0();

  if (v20)
    return;
  v61 = v8;
  v62 = v11;
  v22 = v17;
  v63 = 0;
  v23 = v67;
  v68 = v12;
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = sub_1CB847044();
    swift_bridgeObjectRelease();
    v25 = v7;
    if (v24)
    {
LABEL_4:
      sub_1CB845DC0();
      swift_allocObject();
      sub_1CB845DB4();
      v26 = v63;
      v27 = sub_1CB845DA8();
      v63 = v26;
      if (v26)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      v67 = v27;
      v68 = v28;
      swift_release();
      if (v24 < 1)
      {
        __break(1u);
      }
      else
      {
        swift_bridgeObjectRetain();
        v29 = 0;
        do
        {
          if ((v21 & 0xC000000000000001) != 0)
            v30 = (id)MEMORY[0x1D179F320](v29, v21);
          else
            v30 = *(id *)(v21 + 8 * v29 + 32);
          v31 = v30;
          ++v29;
          v32 = (void *)sub_1CB845F88();
          objc_msgSend(v31, sel_setPayload_, v32);

        }
        while (v24 != v29);
        swift_bridgeObjectRelease_n();
        if ((sub_1CB7A6FE0() & 1) != 0)
        {
          sub_1CB779034(v67, v68);
          return;
        }
        if (qword_1ED88E518 == -1)
          goto LABEL_15;
      }
      swift_once();
LABEL_15:
      v33 = sub_1CB8466D8();
      __swift_project_value_buffer(v33, (uint64_t)qword_1ED890248);
      v34 = sub_1CB8466C0();
      v35 = sub_1CB846C90();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v36 = 0;
        _os_log_impl(&dword_1CB771000, v34, v35, "InferredGroundTruthStoreCoreData: Cannot save context after updating records", v36, 2u);
        MEMORY[0x1D179FE84](v36, -1, -1);
      }
      sub_1CB779034(v67, v68);

      return;
    }
  }
  else
  {
    v24 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    v25 = v7;
    if (v24)
      goto LABEL_4;
  }
  v37 = v15;
  swift_bridgeObjectRelease();
  v38 = v64;
  if (qword_1ED88E518 != -1)
    swift_once();
  v39 = sub_1CB8466D8();
  __swift_project_value_buffer(v39, (uint64_t)qword_1ED890248);
  v40 = *(void (**)(char *, os_log_t, uint64_t))(v68 + 16);
  v41 = v65;
  v40(v22, v38, v65);
  v40(v37, v38, v41);
  v42 = sub_1CB8466C0();
  v43 = sub_1CB846C90();
  v44 = v43;
  v45 = os_log_type_enabled(v42, v43);
  v46 = v62;
  if (v45)
  {
    v47 = swift_slowAlloc();
    LODWORD(v66) = v44;
    v48 = v47;
    v67 = swift_slowAlloc();
    v70 = v67;
    *(_DWORD *)v48 = 136315394;
    v60 = v48 + 4;
    v49 = *(void (**)(uint64_t, uint64_t))(v23 + 48);
    v64 = v42;
    v49(v41, v23);
    sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v50 = sub_1CB847170();
    v51 = v46;
    v53 = v52;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v51, v25);
    v69 = sub_1CB775A54(v50, v53, &v70);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    v54 = v37;
    v55 = *(void (**)(char *, uint64_t))(v68 + 8);
    v55(v22, v41);
    *(_WORD *)(v48 + 12) = 2080;
    v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56))(v41, v23);
    v69 = sub_1CB775A54(v56, v57, &v70);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    v55(v54, v41);
    v42 = v64;
    _os_log_impl(&dword_1CB771000, v64, (os_log_type_t)v66, "InferredGroundTruthStoreCoreData: No matching record found to update with id=%s and type=%s", (uint8_t *)v48, 0x16u);
    v58 = v67;
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v58, -1, -1);
    MEMORY[0x1D179FE84](v48, -1, -1);
  }
  else
  {
    v59 = *(void (**)(char *, uint64_t))(v68 + 8);
    v59(v22, v41);
    v59(v37, v41);
  }

}

id sub_1CB7A6FD8()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

id sub_1CB7A6FE0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 16);
  v17[0] = 0;
  v2 = objc_msgSend(v1, sel_save_, v17);
  if ((_DWORD)v2)
  {
    v3 = v17[0];
  }
  else
  {
    v4 = v17[0];
    v5 = (void *)sub_1CB845E80();

    swift_willThrow();
    if (qword_1ED88E518 != -1)
      swift_once();
    v6 = sub_1CB8466D8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED890248);
    v7 = v5;
    v8 = v5;
    v9 = sub_1CB8466C0();
    v10 = sub_1CB846C90();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (void *)swift_slowAlloc();
      v17[0] = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = v5;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
      v14 = sub_1CB8468DC();
      sub_1CB775A54(v14, v15, (uint64_t *)v17);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CB771000, v9, v10, "InferredGroundTruthStoreCoreData: Unresolved error in save changes error=%s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v12, -1, -1);
      MEMORY[0x1D179FE84](v11, -1, -1);

    }
    else
    {

    }
  }
  return v2;
}

id sub_1CB7A7234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v39;
  char *v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v42 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - v8;
  v10 = sub_1CB846084();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CB846018();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB84600C();
  sub_1CB845FF4();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  v21 = sub_1CB7A821C(a1);
  if (v22 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED88E518 != -1)
      swift_once();
    v23 = sub_1CB8466D8();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED890248);
    v24 = v42;
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
    v25(v9, a1, a2);
    v26 = sub_1CB8466C0();
    v27 = sub_1CB846C90();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v44 = v29;
      *(_DWORD *)v28 = 136315138;
      v41 = v28 + 4;
      v25(v40, (uint64_t)v9, a2);
      v30 = sub_1CB8468DC();
      v43 = sub_1CB775A54(v30, v31, &v44);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v9, a2);
      _os_log_impl(&dword_1CB771000, v26, v27, "InferredGroundTruthStoreCoreData: Cannot build a database record for an inferred ground truth:%s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v29, -1, -1);
      MEMORY[0x1D179FE84](v28, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v9, a2);
    }

    return 0;
  }
  else
  {
    v32 = v22;
    v42 = v21;
    type metadata accessor for GroundTruthRecord();
    v40 = (char *)v20;
    v33 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *((_QWORD *)v41 + 2));
    (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
    v34 = (void *)sub_1CB84603C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    objc_msgSend(v33, sel_setId_, v34);

    objc_msgSend(v33, sel_setTimestamp_, floor(v19 / 86400.0) * 86400.0);
    v35 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_setType_, v35);

    v36 = v42;
    v37 = (void *)sub_1CB845F88();
    objc_msgSend(v33, sel_setPayload_, v37);

    sub_1CB78A670(v36, v32);
  }
  return v33;
}

uint64_t sub_1CB7A7658@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  sub_1CB845D78();
  swift_allocObject();
  sub_1CB845D6C();
  sub_1CB845D60();
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 0, 1, a1);
}

void sub_1CB7A79A4(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v10 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v11 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v12 = objc_msgSend(v10, sel_initWithEntityName_, v11);

  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1CB84A330;
  sub_1CB777FA8(0, (unint64_t *)&qword_1ED88DE00);
  swift_getKeyPath();
  *(_QWORD *)(v13 + 32) = sub_1CB846CA8();
  sub_1CB846A74();
  v14 = (void *)sub_1CB846A44();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setSortDescriptors_, v14);

  if ((a3 & 1) == 0)
    objc_msgSend(v12, sel_setFetchLimit_, a2);
  v15 = *(void **)(a5 + 16);
  type metadata accessor for GroundTruthRecord();
  v16 = v15;
  v17 = sub_1CB846DB0();
  if (v5)
  {

  }
  else
  {
    v18 = v17;

    *a4 = v18;
    swift_bridgeObjectRelease();
  }
}

void sub_1CB7A7B54(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v5 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v6 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  sub_1CB777FA8(0, &qword_1ED88A740);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88A810);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1CB848A60;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1CB7A8538();
  *(_QWORD *)(v8 + 32) = 0x64616F6C796170;
  *(_QWORD *)(v8 + 40) = 0xE700000000000000;
  v9 = sub_1CB845F88();
  *(_QWORD *)(v8 + 96) = sub_1CB777FA8(0, &qword_1ED88DE28);
  *(_QWORD *)(v8 + 104) = sub_1CB7A857C(&qword_1EF99E378, &qword_1ED88DE28);
  *(_QWORD *)(v8 + 72) = v9;
  v10 = (void *)sub_1CB846C48();
  objc_msgSend(v7, sel_setPredicate_, v10);

  v11 = *(void **)(a2 + 16);
  type metadata accessor for GroundTruthRecord();
  v12 = v11;
  v13 = sub_1CB846DB0();
  if (v2)
  {

  }
  else
  {
    v14 = v13;

    *a1 = v14;
    swift_bridgeObjectRelease();
  }
}

uint64_t InferredGroundTruthStoreCoreData.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t InferredGroundTruthStoreCoreData.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1CB7A7D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CB7A3210(a1, a2, a3);
}

uint64_t sub_1CB7A7DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CB7A348C(a1, a2, a3);
}

uint64_t sub_1CB7A7DC8()
{
  return sub_1CB7A3664();
}

uint64_t sub_1CB7A7DE8()
{
  return sub_1CB7A36D8();
}

uint64_t sub_1CB7A7E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CB7A654C(a1, a2, a3);
}

uint64_t sub_1CB7A7E28()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v3;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1CB846DA4();

  return v3;
}

uint64_t sub_1CB7A7E8C()
{
  return sub_1CB7A4308();
}

uint64_t sub_1CB7A7EAC()
{
  return sub_1CB7A475C();
}

uint64_t sub_1CB7A7ECC(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1CB7A7EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1CB7A33BC(*(_QWORD *)(v0 + 32), v0 + ((v2 + 40) & ~v2), v1);
}

uint64_t sub_1CB7A7F10()
{
  return swift_deallocObject();
}

uint64_t sub_1CB7A7F20()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1CB7A7F40()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1CB7A7F6C()
{
  return sub_1CB7A35E8();
}

uint64_t sub_1CB7A7F94()
{
  return swift_deallocObject();
}

uint64_t sub_1CB7A7FA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1CB7A3750();
  *a1 = result;
  return result;
}

uint64_t sub_1CB7A7FF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1CB7A3750();
  *a1 = result;
  return result;
}

uint64_t sub_1CB7A8038()
{
  uint64_t v0;

  return sub_1CB7A4424(v0);
}

uint64_t sub_1CB7A8040()
{
  return swift_deallocObject();
}

uint64_t sub_1CB7A8050@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1CB7A46D4(v1, a1);
}

uint64_t sub_1CB7A806C()
{
  return swift_deallocObject();
}

uint64_t sub_1CB7A807C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1CB7A9070(a1);
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1CB7A8100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  sub_1CB7A66F8(v0 + ((v2 + 40) & ~v2), v1, *(_QWORD *)(v0 + 24));
}

uint64_t sub_1CB7A813C()
{
  return swift_deallocObject();
}

uint64_t method lookup function for InferredGroundTruthStoreCoreData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.write<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.read<A>(type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.read<A>(type:limit:offset:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.reset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.readAllRawData()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.deleteOldestRecordsIfNeeded()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.delete(uuid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.update<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.getPersistentContainer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t sub_1CB7A81D8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1CB7A821C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v1);
  sub_1CB845DC0();
  swift_allocObject();
  sub_1CB845DB4();
  v2 = sub_1CB845DA8();
  swift_release();
  return v2;
}

unint64_t sub_1CB7A8538()
{
  unint64_t result;

  result = qword_1ED88A700;
  if (!qword_1ED88A700)
  {
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED88A700);
  }
  return result;
}

uint64_t sub_1CB7A857C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1CB777FA8(255, a2);
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEFD08], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1CB7A85BC()
{
  uint64_t v0;

  sub_1CB7A6A30(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(NSObject **)(v0 + 48), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1CB7A85DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1CB7A4470(a3);
  return 0;
}

uint64_t sub_1CB7A8830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6, uint64_t a7)
{
  sub_1CB7A79A4(a3, a4, a5 & 1, a6, a7);
  return 0;
}

uint64_t sub_1CB7A8A98(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  sub_1CB7A7B54(a3, a4);
  return 0;
}

BOOL sub_1CB7A8CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v4;

  sub_1CB7A6410(a3, &v4);
  return v4;
}

char *keypath_get_selector_timestamp()
{
  return sel_timestamp;
}

uint64_t sub_1CB7A8F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1CB7A8FB0(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  sub_1CB7A3800(v1[4], v1[5], v1[6], v1[7], v1[8], a1);
}

uint64_t sub_1CB7A8FD4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1CB7A3B28(a1, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1CB7A8FF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED88A720;
  if (!qword_1ED88A720)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED88A718);
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED88A720);
  }
  return result;
}

void sub_1CB7A9040(uint64_t a1)
{
  uint64_t v1;

}

uint64_t sub_1CB7A9070@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CB7A623C();
  *a1 = result & 1;
  return result;
}

uint64_t TrialFactorResolving.resolveFlag(factor:scope:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD v8[2];
  uint64_t var1;

  v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(a4 + 16))(&var1, a1, v8, MEMORY[0x1E0DEAFA0], &protocol witness table for Bool, a3, a4);
  if (!v4)
    v6 = var1;
  return v6 & 1;
}

double TrialFactorResolving.resolveDoubleFactor(factor:scope:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  _QWORD v7[2];
  double v8;

  v5 = a2[1];
  v7[0] = *a2;
  v7[1] = v5;
  (*(void (**)(double *__return_ptr, uint64_t, _QWORD *, _QWORD, _UNKNOWN **, uint64_t, uint64_t))(a4 + 16))(&v8, a1, v7, MEMORY[0x1E0DEB070], &protocol witness table for Double, a3, a4);
  if (!v4)
    return v8;
  return result;
}

uint64_t dispatch thunk of TrialFactorResolver.resolveFlag(factor:scope:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))() & 1;
}

uint64_t dispatch thunk of TrialFactorResolver.resolveDoubleFactor(factor:scope:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of TrialFactorResolver.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TrialFactorResolving.resolveFactor<A>(factor:scope:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_1CB7A91DC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return TrialFactorResolving.resolveFlag(factor:scope:)(a1, a2, a3, (uint64_t)&protocol witness table for TRIClient) & 1;
}

double sub_1CB7A91FC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return TrialFactorResolving.resolveDoubleFactor(factor:scope:)(a1, a2, a3, (uint64_t)&protocol witness table for TRIClient);
}

uint64_t MTUpdateAlarmIntentFeatureExtractor.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000013;
  *(_QWORD *)(result + 24) = 0x80000001CB853E80;
  return result;
}

uint64_t MTUpdateAlarmIntentFeatureExtractor.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0xD000000000000013;
  *(_QWORD *)(v0 + 24) = 0x80000001CB853E80;
  return result;
}

uint64_t sub_1CB7A9278(id *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  unsigned __int8 v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  void (**v42)(char *, _QWORD, uint64_t, int64_t);
  unint64_t v43;
  char v44;
  int v45;
  char *v46;
  uint64_t *v47;
  unint64_t v48;
  char v49;
  char *v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  unint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  void (**v73)(char *, _QWORD, uint64_t, int64_t);
  unint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v3);
  v70 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CB846018();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v69 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v71 = (char *)&v66 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DD78);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CB845E5C();
  v73 = *(void (***)(char *, _QWORD, uint64_t, int64_t))(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v72 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = objc_msgSend(v15, sel_intent);
  v17 = sub_1CB7CF004();
  if (!v18)
    goto LABEL_13;
  v20 = *(_QWORD *)(v1 + 16);
  v19 = *(_QWORD *)(v1 + 24);
  if (v17 == v20 && v18 == v19)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      goto LABEL_13;
  }
  v22 = objc_msgSend(v16, sel_parametersByName);
  if (v22)
  {
    v23 = v22;
    v66 = v6;
    v67 = v5;
    v68 = v16;
    v24 = sub_1CB8467EC();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1CB848A60;
    v26 = type metadata accessor for MTUpdateAlarmEventFeature.EventType(0);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v20;
    *(_QWORD *)(v27 + 24) = v19;
    *(_QWORD *)(v25 + 56) = v26;
    *(_QWORD *)(v25 + 64) = sub_1CB78E6AC(&qword_1EF99E388, type metadata accessor for MTUpdateAlarmEventFeature.EventType);
    *(_QWORD *)(v25 + 32) = v27;
    swift_bridgeObjectRetain();
    v28 = v15;
    v29 = objc_msgSend(v15, sel__donatedBySiri);
    v30 = type metadata accessor for MTUpdateAlarmEventFeature.DonatedBySiri(0);
    v31 = (uint64_t)type metadata accessor for MTUpdateAlarmEventFeature.DonatedBySiri;
    v32 = swift_allocObject();
    *(_BYTE *)(v32 + 16) = v29;
    *(_QWORD *)(v25 + 96) = v30;
    *(_QWORD *)(v25 + 104) = sub_1CB78E6AC(&qword_1EF99E390, type metadata accessor for MTUpdateAlarmEventFeature.DonatedBySiri);
    *(_QWORD *)(v25 + 72) = v32;
    if (*(_QWORD *)(v24 + 16)
      && (v33 = sub_1CB779A70(0x6C6562616CLL, 0xE500000000000000), (v34 & 1) != 0)
      && (sub_1CB778000(*(_QWORD *)(v24 + 56) + 32 * v33, (uint64_t)&v76), (swift_dynamicCast() & 1) != 0))
    {
      v35 = v74;
      v36 = v75;
      v37 = type metadata accessor for MTUpdateAlarmEventFeature.AlarmName(0);
      v38 = swift_allocObject();
      *(_QWORD *)(v38 + 16) = v35;
      *(_QWORD *)(v38 + 24) = v36;
      v30 = *(_QWORD *)(v25 + 16);
      v39 = *(_QWORD *)(v25 + 24);
      v31 = v30 + 1;
      if (v30 >= v39 >> 1)
        v25 = (uint64_t)sub_1CB78F738((_QWORD *)(v39 > 1), v30 + 1, 1, (_QWORD *)v25);
      v40 = v28;
      *((_QWORD *)&v77 + 1) = v37;
      v78 = sub_1CB78E6AC(&qword_1EF99E3A8, type metadata accessor for MTUpdateAlarmEventFeature.AlarmName);
      *(_QWORD *)&v76 = v38;
      *(_QWORD *)(v25 + 16) = v31;
      sub_1CB7780BC(&v76, v25 + 40 * v30 + 32);
    }
    else
    {
      v40 = v28;
    }
    v42 = v73;
    if (*(_QWORD *)(v24 + 16) && (v43 = sub_1CB779A70(0x706D6F4365746164, 0xEE0073746E656E6FLL), (v44 & 1) != 0))
    {
      sub_1CB778000(*(_QWORD *)(v24 + 56) + 32 * v43, (uint64_t)&v76);
      v45 = swift_dynamicCast();
      v42[7](v12, v45 ^ 1u, 1, v13);
      if (((unsigned int (*)(char *, uint64_t, int64_t))v42[6])(v12, 1, v13) != 1)
      {
        v46 = v72;
        ((void (*)(void))v42[4])();
        v12 = v70;
        sub_1CB845E50();
        v30 = v66;
        v31 = v67;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v12, 1, v67) != 1)
        {
          v73 = *(void (***)(char *, _QWORD, uint64_t, int64_t))(v30 + 32);
          v50 = v12;
          v51 = v71;
          ((void (*)(char *, char *, uint64_t))v73)(v71, v50, v31);
          v52 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
          v53 = v69;
          v52(v69, v51, v31);
          v54 = type metadata accessor for MTUpdateAlarmEventFeature.AlarmTime(0);
          v55 = swift_allocObject();
          ((void (*)(uint64_t, char *, uint64_t))v73)(v55 + *(_QWORD *)(*(_QWORD *)v55 + 96), v53, v31);
          v30 = *(_QWORD *)(v25 + 16);
          v56 = *(_QWORD *)(v25 + 24);
          v31 = v30 + 1;
          if (v30 >= v56 >> 1)
            v25 = (uint64_t)sub_1CB78F738((_QWORD *)(v56 > 1), v30 + 1, 1, (_QWORD *)v25);
          *((_QWORD *)&v77 + 1) = v54;
          v78 = sub_1CB78E6AC(&qword_1EF99E3A0, type metadata accessor for MTUpdateAlarmEventFeature.AlarmTime);
          *(_QWORD *)&v76 = v55;
          *(_QWORD *)(v25 + 16) = v31;
          sub_1CB7780BC(&v76, v25 + 40 * v30 + 32);
          (*(void (**)(char *, uint64_t))(v66 + 8))(v71, v67);
          ((void (*)(char *, int64_t))v42[1])(v72, v13);
          if (!*(_QWORD *)(v24 + 16))
            goto LABEL_29;
LABEL_24:
          v48 = sub_1CB779A70(0x6353746165706572, 0xEE00656C75646568);
          if ((v49 & 1) != 0)
          {
            sub_1CB778000(*(_QWORD *)(v24 + 56) + 32 * v48, (uint64_t)&v76);
            goto LABEL_30;
          }
LABEL_29:
          v76 = 0u;
          v77 = 0u;
LABEL_30:
          swift_bridgeObjectRelease();
          if (!*((_QWORD *)&v77 + 1))
          {

            sub_1CB785B54((uint64_t)&v76, &qword_1ED88E088);
            return v25;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DD90);
          if ((swift_dynamicCast() & 1) == 0)
          {

            return v25;
          }
          v57 = v74;
          if (v74 >> 62)
          {
            swift_bridgeObjectRetain();
            v58 = (void *)sub_1CB847044();
            swift_bridgeObjectRelease();
            if (v58)
            {
LABEL_34:
              if ((v57 & 0xC000000000000001) != 0)
              {
                v60 = (id)MEMORY[0x1D179F320](0, v57);
              }
              else
              {
                v59 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (!v59)
                {
                  __break(1u);
                  goto LABEL_45;
                }
                v60 = *(id *)(v57 + 32);
              }
              v58 = v60;
              swift_bridgeObjectRelease();
              v61 = objc_msgSend(v58, sel_displayString);
              v62 = sub_1CB8468A0();
              v64 = v63;

              v57 = type metadata accessor for MTUpdateAlarmEventFeature.AlarmRepeatSchedule(0);
              v31 = swift_allocObject();
              *(_QWORD *)(v31 + 16) = v62;
              *(_QWORD *)(v31 + 24) = v64;
              v30 = *(_QWORD *)(v25 + 16);
              v59 = *(_QWORD *)(v25 + 24);
              v13 = v30 + 1;
              if (v30 < v59 >> 1)
              {
LABEL_38:
                v65 = v68;
                *((_QWORD *)&v77 + 1) = v57;
                v78 = sub_1CB78E6AC(&qword_1EF99E398, type metadata accessor for MTUpdateAlarmEventFeature.AlarmRepeatSchedule);
                *(_QWORD *)&v76 = v31;
                *(_QWORD *)(v25 + 16) = v13;
                sub_1CB7780BC(&v76, v25 + 40 * v30 + 32);

                return v25;
              }
LABEL_45:
              v25 = (uint64_t)sub_1CB78F738((_QWORD *)(v59 > 1), v13, 1, (_QWORD *)v25);
              goto LABEL_38;
            }
          }
          else
          {
            v58 = *(void **)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v58)
              goto LABEL_34;
          }

          swift_bridgeObjectRelease();
          return v25;
        }
        ((void (*)(char *, int64_t))v42[1])(v46, v13);
        v47 = &qword_1ED88D550;
LABEL_23:
        sub_1CB785B54((uint64_t)v12, v47);
        if (!*(_QWORD *)(v24 + 16))
          goto LABEL_29;
        goto LABEL_24;
      }
    }
    else
    {
      v42[7](v12, 1, 1, v13);
    }
    v47 = &qword_1EF99DD78;
    goto LABEL_23;
  }
LABEL_13:

  return MEMORY[0x1E0DEE9D8];
}

uint64_t type metadata accessor for MTUpdateAlarmEventFeature.EventType(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99E480);
}

uint64_t MTUpdateAlarmEventFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = a1;
  return result;
}

uint64_t MTUpdateAlarmEventFeature.AlarmTime.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 96);
  v4 = sub_1CB846018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_allocObject();
  sub_1CB79E138(a1, (uint64_t)v4);
  v6 = sub_1CB846018();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_1CB785B54((uint64_t)v4, &qword_1ED88D550);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DDB0);
    swift_deallocPartialClassInstance();
    v5 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 96), v4, v6);
  }
  sub_1CB785B54(a1, &qword_1ED88D550);
  return v5;
}

uint64_t MTUpdateAlarmIntentFeatureExtractor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MTUpdateAlarmIntentFeatureExtractor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTUpdateAlarmEventFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99E568);
}

uint64_t sub_1CB7A9BC8(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for MTUpdateAlarmEventFeature.EventType);
}

uint64_t sub_1CB7A9BD4(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for MTUpdateAlarmEventFeature.EventType);
}

uint64_t MTUpdateAlarmEventFeature.DonatedBySiri.init(value:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t MTUpdateAlarmEventFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1;
  v3 = swift_allocObject();
  v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t MTUpdateAlarmEventFeature.DonatedBySiri.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MTUpdateAlarmEventFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7A9CD8(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for MTUpdateAlarmEventFeature.DonatedBySiri(0);
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB7A9D0C(unsigned __int8 *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  type metadata accessor for MTUpdateAlarmEventFeature.DonatedBySiri(0);
  v2 = swift_allocObject();
  v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t sub_1CB7A9D88(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for MTUpdateAlarmEventFeature.AlarmName);
}

uint64_t sub_1CB7A9D94(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for MTUpdateAlarmEventFeature.AlarmName);
}

uint64_t MTUpdateAlarmEventFeature.AlarmRepeatSchedule.init(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t MTUpdateAlarmEventFeature.AlarmRepeatSchedule.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB7A9DD4(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for MTUpdateAlarmEventFeature.AlarmRepeatSchedule);
}

uint64_t sub_1CB7A9DE0(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for MTUpdateAlarmEventFeature.AlarmRepeatSchedule);
}

uint64_t MTUpdateAlarmEventFeature.AlarmTime.init(value:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = sub_1CB846018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB79E138(a1, (uint64_t)v5);
  v6 = sub_1CB846018();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1CB785B54((uint64_t)v5, &qword_1ED88D550);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99DDB0);
    swift_deallocPartialClassInstance();
    v1 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96), v5, v6);
  }
  sub_1CB785B54(a1, &qword_1ED88D550);
  return v1;
}

uint64_t MTUpdateAlarmEventFeature.AlarmTime.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1CB846018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MTUpdateAlarmEventFeature.AlarmTime.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1CB846018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTUpdateAlarmEventFeature.AlarmRepeatSchedule(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99E738);
}

uint64_t type metadata accessor for MTUpdateAlarmEventFeature.AlarmTime(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99E820);
}

uint64_t type metadata accessor for MTUpdateAlarmEventFeature.AlarmName(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99E650);
}

uint64_t type metadata accessor for MTUpdateAlarmIntentFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for MTUpdateAlarmIntentFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MTUpdateAlarmIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MTUpdateAlarmIntentFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

ValueMetadata *type metadata accessor for MTUpdateAlarmEventFeature()
{
  return &type metadata for MTUpdateAlarmEventFeature;
}

SiriPrivateLearningAnalytics::PLUSSuggestionGenerationDomain_optional __swiftcall PLUSSuggestionGenerationDomain.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  SiriPrivateLearningAnalytics::PLUSSuggestionGenerationDomain_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CB8470B0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static PLUSSuggestionGenerationDomain.allCases.getter()
{
  return &unk_1E868A2C0;
}

uint64_t PLUSSuggestionGenerationDomain.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6964654D73756C50;
  else
    return 0xD000000000000018;
}

uint64_t sub_1CB7AA24C()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB7AA2D4()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7AA338()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

SiriPrivateLearningAnalytics::PLUSSuggestionGenerationDomain_optional sub_1CB7AA3BC(Swift::String *a1)
{
  return PLUSSuggestionGenerationDomain.init(rawValue:)(*a1);
}

void sub_1CB7AA3C8(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000018;
  if (*v1)
    v2 = 0x6964654D73756C50;
  v3 = 0x80000001CB852090;
  if (*v1)
    v3 = 0xE900000000000061;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1CB7AA410(char *a1, char *a2)
{
  return sub_1CB80BEC4(*a1, *a2);
}

void sub_1CB7AA41C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E868A2E8;
}

uint64_t static PLUSLoggingIdGenerator.derivePlusLoggingId(requestId:for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = sub_1CB846084();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return sub_1CB7AA4F0((uint64_t)v6, a2);
}

uint64_t sub_1CB7AA4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  _QWORD v22[5];
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  CC_SHA1_CTX c;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v4 = sub_1CB8468D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB8468C4();
  sub_1CB8468AC();
  v9 = v8;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v9 >> 60 != 15)
  {
    v12 = sub_1CB846ABC();
    *(_QWORD *)(v12 + 16) = 20;
    *(_QWORD *)(v12 + 32) = 0;
    *(_QWORD *)(v12 + 40) = 0;
    *(_DWORD *)(v12 + 48) = 0;
    v32 = v12;
    memset(&c, 0, sizeof(c));
    CC_SHA1_Init(&c);
    v22[4] = sub_1CB84606C();
    v23 = v13;
    v24 = v14;
    v25 = v15;
    v26 = v16;
    v27 = v17;
    v28 = v18;
    v29 = v19;
    v30 = v20;
    __asm { BR              X10 }
  }
  v10 = sub_1CB846084();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, 1, 1, v10);
}

uint64_t static PLUSLoggingIdGenerator.derivePlusSuggestionLinkId(plusId:for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CB846084();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v23 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v23 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19((char *)&v23 - v17, a1, v9);
  v19(v16, a2, v9);
  v19(v13, (uint64_t)v18, v9);
  sub_1CB846030();
  sub_1CB7AA4F0((uint64_t)v13, (uint64_t)v8);
  v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v16, v9);
  v20(v18, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1CB778FF4((uint64_t)v8);
    v21 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v8, v9);
    v21 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v21, 1, v9);
}

uint64_t PLUSLoggingIdGenerator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PLUSLoggingIdGenerator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1CB7AAB9C()
{
  unint64_t result;

  result = qword_1EF99E8E0;
  if (!qword_1EF99E8E0)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for PLUSSuggestionGenerationDomain, &type metadata for PLUSSuggestionGenerationDomain);
    atomic_store(result, (unint64_t *)&qword_1EF99E8E0);
  }
  return result;
}

unint64_t sub_1CB7AABE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF99E8E8;
  if (!qword_1EF99E8E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF99E8F0);
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF99E8E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PLUSSuggestionGenerationDomain(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CB7AAC7C + 4 * byte_1CB84AF35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CB7AACB0 + 4 * byte_1CB84AF30[v4]))();
}

uint64_t sub_1CB7AACB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7AACB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB7AACC0);
  return result;
}

uint64_t sub_1CB7AACCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB7AACD4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CB7AACD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7AACE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PLUSSuggestionGenerationDomain()
{
  return &type metadata for PLUSSuggestionGenerationDomain;
}

uint64_t type metadata accessor for PLUSLoggingIdGenerator()
{
  return objc_opt_self();
}

uint64_t method lookup function for PLUSLoggingIdGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1CB7AAD28(const void *a1, uint64_t a2, char **a3, CC_SHA1_CTX *a4, void *a5, uint64_t a6)
{
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;

  v12 = *a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v12 = sub_1CB7FAFB8((uint64_t)v12);
    *a3 = v12;
  }
  result = sub_1CB7AADD8((unsigned __int8 *)v12 + 32, (int)v12 + 32 + *((_DWORD *)v12 + 4), a4, a5, a6, a1, a2);
  *a3 = v12;
  return result;
}

uint64_t sub_1CB7AADD8(unsigned __int8 *a1, int a2, CC_SHA1_CTX *c, void *data, uint64_t a5, const void *a6, uint64_t a7)
{
  CC_LONG v11;
  CC_LONG v12;

  if (data)
  {
    v11 = a5 - (_DWORD)data;
    if (a5 - (uint64_t)data >= 0x100000000)
      goto LABEL_7;
  }
  else
  {
    v11 = 0;
  }
  CC_SHA1_Update(c, data, v11);
  if (!a6)
  {
LABEL_8:
    v12 = 0;
    goto LABEL_9;
  }
  v12 = a7 - (_DWORD)a6;
  if (a7 - (uint64_t)a6 >= 0x100000000)
  {
LABEL_7:
    sub_1CB847038();
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  CC_SHA1_Update(c, a6, v12);
  return CC_SHA1_Final(a1, c);
}

uint64_t sub_1CB7AAEC0(uint64_t a1, uint64_t a2, uint64_t a3, char **a4, CC_SHA1_CTX *a5, void *a6, uint64_t a7)
{
  uint64_t result;
  char *v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  result = sub_1CB845E2C();
  v14 = (char *)result;
  if (result)
  {
    result = sub_1CB845E44();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v14 += a1 - result;
  }
  v15 = __OFSUB__(a2, a1);
  v16 = a2 - a1;
  if (v15)
  {
    __break(1u);
    goto LABEL_13;
  }
  v17 = sub_1CB845E38();
  if (v17 >= v16)
    v18 = v16;
  else
    v18 = v17;
  v19 = &v14[v18];
  if (v14)
    v20 = (uint64_t)v19;
  else
    v20 = 0;
  return sub_1CB7AAD28(v14, v20, a4, a5, a6, a7);
}

uint64_t sub_1CB7AAF80(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;

  if (a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v2)
      break;
    v7 = MEMORY[0x1E0DEE9D8];
    result = sub_1CB846FCC();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1D179F320](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      sub_1CB7ABA44((uint64_t)v5);

      sub_1CB846FB4();
      sub_1CB846FD8();
      sub_1CB846FE4();
      sub_1CB846FC0();
      if (v2 == v4)
        return v7;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v2 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1CB7AB0B0@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = a2(*a1, a1[1]);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1CB7AB0E4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, _QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = a2(a3, a1, *(_QWORD *)(a1 + 8));
  *(_QWORD *)(a3 + 8) = result;
  return result;
}

uint64_t sub_1CB7AB11C@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(char *, uint64_t);
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v38;
  char *v39;
  uint64_t v40;
  void *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)@<X0>(_QWORD *@<X8>);
  uint64_t v45;

  v41 = a1;
  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E268);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8895B8);
  v6 = *(_QWORD *)(v40 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v40);
  v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - v9;
  v43 = sub_1CB846018();
  v11 = *(_QWORD *)(v43 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v43);
  v14 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v38 - v15;
  v38 = (char *)&v38 - v15;
  sub_1CB84600C();
  v17 = sub_1CB846B7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v2;
  swift_retain();
  v19 = sub_1CB7ABD38((uint64_t)v5, (uint64_t)&unk_1EF99EBD8, (uint64_t)v18, &qword_1EF99EB50);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1CB7AEB04;
  *(_QWORD *)(v20 + 24) = v19;
  v44 = sub_1CB7AEFDC;
  v45 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8892C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED889568);
  sub_1CB785DB0(&qword_1ED8892B8, &qword_1ED8892C0, (uint64_t)&protocol conformance descriptor for AnyAsyncSequence<A>);
  sub_1CB847020();
  v21 = v16;
  v22 = v43;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v21, v43);
  v23 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v24 = swift_allocObject();
  v25 = v41;
  *(_QWORD *)(v24 + 16) = v41;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v24 + v23, v14, v22);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_1CB785C08;
  *(_QWORD *)(v26 + 24) = v24;
  v27 = v39;
  v28 = v40;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v39, v10, v40);
  v29 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v30 + v29, v27, v28);
  v31 = (_QWORD *)(v30 + ((v7 + v29 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v31 = sub_1CB7AEE4C;
  v31[1] = v26;
  v32 = *(void (**)(char *, uint64_t))(v6 + 8);
  v33 = v25;
  v32(v10, v28);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = sub_1CB785CE0;
  *(_QWORD *)(v34 + 24) = v30;
  v36 = v42;
  v35 = v43;
  *v42 = sub_1CB785D54;
  v36[1] = v34;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v38, v35);
}

uint64_t sub_1CB7AB484(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  v1[3] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EAB8);
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EB78);
  v1[9] = v3;
  v1[10] = *(_QWORD *)(v3 - 8);
  v1[11] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EB80);
  v1[12] = v4;
  v1[13] = *(_QWORD *)(v4 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CB7AB5A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[4];
  v1 = v0[5];
  v3 = sub_1CB846018();
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v1, 1, 1, v3);
  v0[16] = sub_1CB7AC800();
  sub_1CB79E138(v1, v2);
  LODWORD(v2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  v5 = v0[4];
  if ((_DWORD)v2 == 1)
  {
    sub_1CB785B54(v0[4], &qword_1ED88D550);
  }
  else
  {
    sub_1CB845FB8();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  }
  v6 = v0[3];
  sub_1CB8465A0();
  v7 = sub_1CB845F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (_QWORD *)swift_task_alloc();
  v0[17] = v8;
  *v8 = v0;
  v8[1] = sub_1CB7AB71C;
  return sub_1CB846594();
}

uint64_t sub_1CB7AB71C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(void **)(*v1 + 128);
  v4 = *(_QWORD *)(*v1 + 24);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  sub_1CB785B54(v4, &qword_1ED88E158);

  if (!v0)
    sub_1CB785B54(*(_QWORD *)(v2 + 40), &qword_1ED88D550);
  return swift_task_switch();
}

uint64_t sub_1CB7AB7B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  swift_getOpaqueTypeConformance2();
  sub_1CB846588();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_1CB785DB0(&qword_1EF99EB88, &qword_1EF99EB78, MEMORY[0x1E0D023D8]);
  sub_1CB846114();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v1, v2, v3);
  type metadata accessor for Turn();
  sub_1CB785DB0(&qword_1EF99EB98, &qword_1EF99EB80, MEMORY[0x1E0CF1400]);
  sub_1CB847020();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7AB954()
{
  uint64_t v0;

  sub_1CB785B54(*(_QWORD *)(v0 + 40), &qword_1ED88D550);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7AB9F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1CB7ABA10()
{
  uint64_t v0;
  void **v1;

  v1 = *(void ***)(v0 + 16);
  *v1 = sub_1CB7ABA44(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_1CB7ABA44(uint64_t a1)
{
  uint64_t v2;
  __objc2_prot_list **p_base_prots;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *result;
  void *v18;
  id v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __objc2_prot_list **v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_1CB846084();
  p_base_prots = *(__objc2_prot_list ***)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - v10;
  v29 = a1;
  v12 = sub_1CB8465AC();
  v13 = v12;
  v30 = MEMORY[0x1E0DEE9D8];
  if (!(v12 >> 62))
  {
    v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    swift_bridgeObjectRelease();
    sub_1CB8465E8();
    if ((v21 & 1) != 0)
    {
      v23 = sub_1CB846018();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v11, 1, 1, v23);
    }
    else
    {
      sub_1CB845FE8();
      v22 = sub_1CB846018();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 0, 1, v22);
    }
    sub_1CB8465F4();
    sub_1CB7AEA4C((uint64_t)v11, (uint64_t)v9);
    type metadata accessor for Turn();
    v24 = swift_allocObject();
    ((void (*)(uint64_t, char *, uint64_t))p_base_prots[4])(v24 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v5, v2);
    *(_QWORD *)(v24 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) = v20;
    sub_1CB7AEA4C((uint64_t)v9, v24 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date);
    return (void *)v24;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  v14 = sub_1CB847044();
  if (!v14)
    goto LABEL_17;
LABEL_3:
  v25 = v9;
  v26 = v5;
  v27 = p_base_prots;
  v28 = v2;
  v2 = 4;
  p_base_prots = &SupportedLocalesPListStore.base_prots;
  while (1)
  {
    v9 = (char *)(v2 - 4);
    if ((v13 & 0xC000000000000001) != 0)
      v15 = (id)MEMORY[0x1D179F320](v2 - 4, v13);
    else
      v15 = *(id *)(v13 + 8 * v2);
    v16 = v15;
    v5 = (char *)(v2 - 3);
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    result = (void *)sub_1CB846504();
    if (!result)
      break;
    v18 = result;
    v19 = objc_msgSend(result, sel_wrapAsAnyEvent);

    if (v19)
    {
      MEMORY[0x1D179EDF8]();
      if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1CB846AA4();
      sub_1CB846AD4();
      sub_1CB846A74();
    }
    ++v2;
    if (v5 == (char *)v14)
    {
      swift_bridgeObjectRelease();
      v20 = v30;
      p_base_prots = v27;
      v2 = v28;
      v9 = v25;
      v5 = v26;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB7ABD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = sub_1CB846B7C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7) != 1)
  {
    sub_1CB846B70();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1CB785B54(a1, &qword_1ED88E268);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CB846B1C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return swift_task_create();
}

uint64_t sub_1CB7ABE6C@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t (**v31)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  void (*v32)(char *, uint64_t);
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v38;
  char *v39;
  uint64_t v40;
  void *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)@<X0>(_QWORD *@<X8>);
  uint64_t v45;

  v41 = a1;
  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E268);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7B0);
  v6 = *(_QWORD *)(v40 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v40);
  v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - v9;
  v43 = sub_1CB846018();
  v11 = *(_QWORD *)(v43 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v43);
  v14 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v38 - v15;
  v38 = (char *)&v38 - v15;
  sub_1CB84600C();
  v17 = sub_1CB846B7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v2;
  swift_retain();
  v19 = sub_1CB7ABD38((uint64_t)v5, (uint64_t)&unk_1EF99EBB0, (uint64_t)v18, &qword_1EF99EAA0);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1CB7AD098;
  *(_QWORD *)(v20 + 24) = v19;
  v44 = sub_1CB7AEFD8;
  v45 = v20;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88A398);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A298);
  sub_1CB785DB0(&qword_1ED88A390, (uint64_t *)&unk_1ED88A398, (uint64_t)&protocol conformance descriptor for AnyAsyncSequence<A>);
  sub_1CB847020();
  v21 = v16;
  v22 = v43;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v21, v43);
  v23 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v24 = swift_allocObject();
  v25 = v41;
  *(_QWORD *)(v24 + 16) = v41;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v24 + v23, v14, v22);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_1CB785860;
  *(_QWORD *)(v26 + 24) = v24;
  v27 = v39;
  v28 = v40;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v39, v10, v40);
  v29 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v30 + v29, v27, v28);
  v31 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v30 + ((v7 + v29 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v31 = sub_1CB7AED00;
  v31[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v26;
  v32 = *(void (**)(char *, uint64_t))(v6 + 8);
  v33 = v25;
  v32(v10, v28);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = sub_1CB7858CC;
  *(_QWORD *)(v34 + 24) = v30;
  v36 = v42;
  v35 = v43;
  *v42 = sub_1CB7858E0;
  v36[1] = v34;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v38, v35);
}

uint64_t sub_1CB7AC1D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  v1[3] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EAB8);
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EAC0);
  v1[9] = v3;
  v1[10] = *(_QWORD *)(v3 - 8);
  v1[11] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EAC8);
  v1[12] = v4;
  v1[13] = *(_QWORD *)(v4 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CB7AC2F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[4];
  v1 = v0[5];
  v3 = sub_1CB846018();
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v1, 1, 1, v3);
  v0[16] = sub_1CB7AC800();
  sub_1CB79E138(v1, v2);
  LODWORD(v2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  v5 = v0[4];
  if ((_DWORD)v2 == 1)
  {
    sub_1CB785B54(v0[4], &qword_1ED88D550);
  }
  else
  {
    sub_1CB845FB8();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  }
  v6 = v0[3];
  sub_1CB8465A0();
  v7 = sub_1CB845F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (_QWORD *)swift_task_alloc();
  v0[17] = v8;
  *v8 = v0;
  v8[1] = sub_1CB7AC46C;
  return sub_1CB846594();
}

uint64_t sub_1CB7AC46C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(void **)(*v1 + 128);
  v4 = *(_QWORD *)(*v1 + 24);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  sub_1CB785B54(v4, &qword_1ED88E158);

  if (!v0)
    sub_1CB785B54(*(_QWORD *)(v2 + 40), &qword_1ED88D550);
  return swift_task_switch();
}

uint64_t sub_1CB7AC500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  swift_getOpaqueTypeConformance2();
  sub_1CB84657C();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_1CB785DB0(&qword_1EF99EAD0, &qword_1EF99EAC0, MEMORY[0x1E0D023D8]);
  sub_1CB846114();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v1, v2, v3);
  sub_1CB785DB0(&qword_1EF99EAE0, &qword_1EF99EAC8, MEMORY[0x1E0CF1400]);
  sub_1CB847020();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7AC69C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1CB7AC6B8()
{
  uint64_t v0;

  sub_1CB7AC6E8(*(_QWORD **)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7AC6E8@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = sub_1CB8465DC();
  v3 = sub_1CB7AAF80(v2);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C038);
  v4 = (_QWORD *)swift_allocObject();
  v4[6] = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C050);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = sub_1CB785DB0((unint64_t *)&qword_1ED88C040, (uint64_t *)&unk_1ED88C050, MEMORY[0x1E0DEE970]);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v6;
  v4[2] = v5;
  v4[3] = v7;
  v4[4] = result;
  v4[5] = v7;
  *a1 = v4;
  return result;
}

uint64_t sub_1CB7AC800()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  sub_1CB8465D0();
  sub_1CB777FA8(0, (unint64_t *)&qword_1EF9A0BC0);
  v0 = (void *)sub_1CB8465C4();
  sub_1CB777FA8(0, &qword_1EF99EAE8);
  v1 = (void *)sub_1CB8465C4();
  v2 = (void *)MEMORY[0x1D179E978](v0, v1);

  sub_1CB777FA8(0, &qword_1ED88BF58);
  v3 = (void *)sub_1CB8465C4();
  v4 = (void *)MEMORY[0x1D179E978](v2, v3);

  sub_1CB777FA8(0, (unint64_t *)&unk_1ED88BF40);
  v5 = (void *)sub_1CB8465C4();
  v6 = (void *)MEMORY[0x1D179E978](v4, v5);

  sub_1CB777FA8(0, (unint64_t *)&qword_1ED88BF68);
  v7 = (void *)sub_1CB8465C4();
  v8 = (void *)MEMORY[0x1D179E978](v6, v7);

  sub_1CB777FA8(0, (unint64_t *)&unk_1ED88BF28);
  v9 = (void *)sub_1CB8465C4();
  v10 = (void *)MEMORY[0x1D179E978](v8, v9);

  sub_1CB777FA8(0, &qword_1EF99EAF0);
  v11 = (void *)sub_1CB8465C4();
  v12 = (void *)MEMORY[0x1D179E978](v10, v11);

  sub_1CB777FA8(0, &qword_1EF99EAF8);
  v13 = (void *)sub_1CB8465C4();
  v14 = (void *)MEMORY[0x1D179E978](v12, v13);

  sub_1CB777FA8(0, &qword_1EF99EB00);
  v15 = (void *)sub_1CB8465C4();
  v16 = MEMORY[0x1D179E978](v14, v15);

  return v16;
}

uint64_t sub_1CB7ACA10()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AIMLISSignalReader()
{
  return objc_opt_self();
}

uint64_t sub_1CB7ACA40@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E268);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = sub_1CB846B7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v6;
  swift_retain();
  v9 = sub_1CB7ABD38((uint64_t)v5, (uint64_t)&unk_1EF99EB10, (uint64_t)v8, &qword_1EF99EB50);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1CB7AEB04;
  *(_QWORD *)(v10 + 24) = v9;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_1CB7AEB0C;
  *(_QWORD *)(result + 24) = v10;
  *a1 = sub_1CB7854D0;
  a1[1] = result;
  return result;
}

uint64_t sub_1CB7ACB60@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E268);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = sub_1CB846B7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v6;
  swift_retain();
  v9 = sub_1CB7ABD38((uint64_t)v5, (uint64_t)&unk_1EF99EA78, (uint64_t)v8, &qword_1EF99EAA0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1CB7AD098;
  *(_QWORD *)(v10 + 24) = v9;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_1CB7AE908;
  *(_QWORD *)(result + 24) = v10;
  *a1 = sub_1CB785420;
  a1[1] = result;
  return result;
}

uint64_t sub_1CB7ACC80@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E268);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = sub_1CB846B7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v6;
  swift_retain();
  v9 = sub_1CB7ABD38((uint64_t)v5, (uint64_t)&unk_1EF99EBA8, (uint64_t)v8, &qword_1EF99EB50);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1CB7AEB04;
  *(_QWORD *)(v10 + 24) = v9;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_1CB7AEFDC;
  *(_QWORD *)(result + 24) = v10;
  *a1 = sub_1CB785E2C;
  a1[1] = result;
  return result;
}

uint64_t sub_1CB7ACDA0@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1CB7AB11C(a1, a2);
}

uint64_t sub_1CB7ACDC0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E268);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = sub_1CB846B7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v6;
  swift_retain();
  v9 = sub_1CB7ABD38((uint64_t)v5, (uint64_t)&unk_1EF99EBA0, (uint64_t)v8, &qword_1EF99EAA0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1CB7AD098;
  *(_QWORD *)(v10 + 24) = v9;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_1CB7AEFD8;
  *(_QWORD *)(result + 24) = v10;
  *a1 = sub_1CB785E28;
  a1[1] = result;
  return result;
}

uint64_t sub_1CB7ACEE0@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1CB7ABE6C(a1, a2);
}

uint64_t sub_1CB7ACF04(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CB785DF4;
  return sub_1CB7AC1D4(a1);
}

void *sub_1CB7ACF70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  v3 = swift_allocObject();
  *(_BYTE *)(v3 + 16) = 0;
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = v2;
  swift_retain();
  return &unk_1EF99EB30;
}

void *sub_1CB7AD004(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  v3 = swift_allocObject();
  *(_BYTE *)(v3 + 16) = 0;
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = v2;
  swift_retain();
  return &unk_1EF99EA90;
}

void *sub_1CB7AD098()
{
  uint64_t v0;

  return sub_1CB7AD004(v0);
}

uint64_t sub_1CB7AD0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EB40);
  v3[19] = v4;
  v3[20] = *(_QWORD *)(v4 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EB48);
  v3[24] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EB50);
  v3[25] = v5;
  v3[26] = *(_QWORD *)(v5 - 8);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CB7AD194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)(uint64_t);

  v1 = *(_QWORD *)(v0 + 128);
  swift_beginAccess();
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 144);
    swift_beginAccess();
    v3 = *(int **)(v2 + 16);
    if (v3)
    {
      v8 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
      v4 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 264) = v4;
      *v4 = v0;
      v4[1] = sub_1CB7AD6B4;
      return v8(v0 + 120);
    }
    else
    {
      swift_endAccess();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
    }
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 128);
    swift_beginAccess();
    *(_BYTE *)(v6 + 16) = 1;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v7;
    *(_QWORD *)(v0 + 256) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
    *v7 = v0;
    v7[1] = sub_1CB7AD360;
    return sub_1CB846B88();
  }
}

uint64_t sub_1CB7AD360()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB7AD3B4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD *, uint64_t);
  void (*v11)(_QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);

  v1 = *(_QWORD **)(v0 + 192);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)(v0 + 112) = *v1;
    swift_willThrowTypedImpl();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(_QWORD **)(v0 + 232);
    v4 = *(_QWORD *)(v0 + 240);
    v5 = *(_QWORD *)(v0 + 224);
    v6 = *(_QWORD *)(v0 + 200);
    v7 = *(_QWORD **)(v0 + 208);
    v19 = *(_QWORD **)(v0 + 216);
    v20 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 152);
    v21 = *(_QWORD *)(v0 + 160);
    v22 = *(_QWORD *)(v0 + 168);
    v9 = *(_QWORD *)(v0 + 144);
    v10 = (void (*)(uint64_t, _QWORD *, uint64_t))v7[4];
    v10(v4, v1, v6);
    v11 = (void (*)(_QWORD *, uint64_t, uint64_t))v7[2];
    v11(v3, v4, v6);
    v10(v5, v3, v6);
    v11(v19, v5, v6);
    sub_1CB785DB0(&qword_1EF99EB58, &qword_1EF99EB50, MEMORY[0x1E0DF0C70]);
    sub_1CB846BA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v22, v20, v8);
    v12 = swift_allocBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v13, v22, v8);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v8);
    v14 = (void (*)(uint64_t, uint64_t))v7[1];
    v14(v5, v6);
    v14(v4, v6);
    swift_beginAccess();
    v15 = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v9 + 16) = &unk_1EF99EB68;
    *(_QWORD *)(v9 + 24) = v12;
    sub_1CB7AEA3C(v15);
    v16 = *(_QWORD *)(v0 + 144);
    swift_beginAccess();
    v17 = *(int **)(v16 + 16);
    if (v17)
    {
      v23 = (uint64_t (*)(uint64_t))((char *)v17 + *v17);
      v18 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 264) = v18;
      *v18 = v0;
      v18[1] = sub_1CB7AD6B4;
      return v23(v0 + 120);
    }
    else
    {
      swift_endAccess();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
    }
  }
}

uint64_t sub_1CB7AD6B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB7AD718()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1CB7AD7B4()
{
  uint64_t v0;

  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7AD844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[17] = a3;
  v4[18] = a4;
  v4[15] = a1;
  v4[16] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CB38);
  v4[19] = v5;
  v4[20] = *(_QWORD *)(v5 - 8);
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EA98);
  v4[24] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EAA0);
  v4[25] = v6;
  v4[26] = *(_QWORD *)(v6 - 8);
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CB7AD938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(_QWORD);

  v1 = *(_QWORD *)(v0 + 128);
  swift_beginAccess();
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 144);
    swift_beginAccess();
    v3 = *(int **)(v2 + 16);
    if (v3)
    {
      v9 = (uint64_t (*)(_QWORD))((char *)v3 + *v3);
      v4 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 264) = v4;
      *v4 = v0;
      v4[1] = sub_1CB7ADE20;
      return v9(*(_QWORD *)(v0 + 120));
    }
    else
    {
      v8 = *(_QWORD **)(v0 + 120);
      swift_endAccess();
      *v8 = 0;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 128);
    swift_beginAccess();
    *(_BYTE *)(v6 + 16) = 1;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v7;
    *(_QWORD *)(v0 + 256) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
    *v7 = v0;
    v7[1] = sub_1CB7ADAF0;
    return sub_1CB846B88();
  }
}

uint64_t sub_1CB7ADAF0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB7ADB44()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD *, uint64_t);
  void (*v11)(_QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD);

  v1 = (_QWORD *)v0[24];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v0[14] = *v1;
    swift_willThrowTypedImpl();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v2 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v3 = (_QWORD *)v0[29];
    v4 = v0[30];
    v5 = v0[28];
    v6 = v0[25];
    v7 = (_QWORD *)v0[26];
    v21 = (_QWORD *)v0[27];
    v22 = v0[22];
    v8 = v0[19];
    v23 = v0[20];
    v24 = v0[21];
    v9 = v0[18];
    v10 = (void (*)(uint64_t, _QWORD *, uint64_t))v7[4];
    v10(v4, v1, v6);
    v11 = (void (*)(_QWORD *, uint64_t, uint64_t))v7[2];
    v11(v3, v4, v6);
    v10(v5, v3, v6);
    v11(v21, v5, v6);
    sub_1CB785DB0(&qword_1EF99EAA8, &qword_1EF99EAA0, MEMORY[0x1E0DF0C70]);
    sub_1CB846BA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v22, v8);
    v12 = swift_allocBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v13, v24, v8);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v8);
    v14 = (void (*)(uint64_t, uint64_t))v7[1];
    v14(v5, v6);
    v14(v4, v6);
    swift_beginAccess();
    v15 = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v9 + 16) = &unk_1EF99EAB0;
    *(_QWORD *)(v9 + 24) = v12;
    sub_1CB7AEA3C(v15);
    v16 = v0[18];
    swift_beginAccess();
    v17 = *(int **)(v16 + 16);
    if (v17)
    {
      v25 = (uint64_t (*)(_QWORD))((char *)v17 + *v17);
      v18 = (_QWORD *)swift_task_alloc();
      v0[33] = v18;
      *v18 = v0;
      v18[1] = sub_1CB7ADE20;
      return v25(v0[15]);
    }
    v20 = (_QWORD *)v0[15];
    swift_endAccess();
    *v20 = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v2 = (uint64_t (*)(void))v0[1];
  }
  return v2();
}

uint64_t sub_1CB7ADE20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB7ADE84()
{
  uint64_t v0;

  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7ADF0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7B0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A790);
  v12 = swift_allocBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  sub_1CB785DB0(&qword_1ED88A7A8, &qword_1ED88A7B0, MEMORY[0x1E0DF0C70]);
  sub_1CB846BA0();
  *(_QWORD *)(a4 + 40) = 0;
  *(_QWORD *)(a4 + 48) = 0;
  *(_QWORD *)a4 = &unk_1EF99EBD0;
  *(_QWORD *)(a4 + 8) = v12;
  *(_QWORD *)(a4 + 16) = a2;
  *(_QWORD *)(a4 + 24) = a3;
  *(_BYTE *)(a4 + 32) = 1;
  return swift_retain();
}

uint64_t sub_1CB7AE014(uint64_t a1)
{
  _QWORD *v1;

  v1[5] = a1;
  v1[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A790);
  v1[7] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1CB7AE06C()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  sub_1CB785DB0(&qword_1ED88A788, &qword_1ED88A790, MEMORY[0x1E0DF0C48]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1CB783FF8;
  return sub_1CB846B58();
}

__n128 sub_1CB7AE0F8@<Q0>(void (**a1)(_OWORD *__return_ptr, uint64_t)@<X0>, _QWORD *a2@<X8>)
{
  void (*v3)(_OWORD *__return_ptr, uint64_t);
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;
  __n128 v10;
  __int128 v11;
  _OWORD v12[2];
  char v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *a1;
  v4 = swift_retain();
  v3(v12, v4);
  swift_release();
  v5 = v13;
  v6 = v14;
  v7 = v15;
  v10 = (__n128)v12[1];
  v11 = v12[0];
  v8 = swift_allocObject();
  result = v10;
  *(_OWORD *)(v8 + 16) = v11;
  *(__n128 *)(v8 + 32) = v10;
  *(_BYTE *)(v8 + 48) = v5;
  *(_QWORD *)(v8 + 56) = v6;
  *(_QWORD *)(v8 + 64) = v7;
  *a2 = &unk_1EF99EBF0;
  a2[1] = v8;
  return result;
}

uint64_t sub_1CB7AE188(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_task_switch();
}

uint64_t sub_1CB7AE1A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  swift_beginAccess();
  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EF99CB58 + dword_1EF99CB58);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_1CB7AE214;
  return v3();
}

uint64_t sub_1CB7AE214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  _QWORD *v8;

  v6 = *v3;
  *(_QWORD *)(v6 + 64) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  v8 = *(_QWORD **)(v6 + 40);
  swift_endAccess();
  *v8 = a1;
  v8[1] = a2;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1CB7AE2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8895B8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8895A8);
  v12 = swift_allocBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  sub_1CB785DB0(&qword_1ED8895B0, &qword_1ED8895B8, MEMORY[0x1E0DF0C70]);
  sub_1CB846BA0();
  *(_QWORD *)a4 = &unk_1EF99EC00;
  *(_QWORD *)(a4 + 8) = v12;
  *(_QWORD *)(a4 + 16) = a2;
  *(_QWORD *)(a4 + 24) = a3;
  *(_BYTE *)(a4 + 32) = 1;
  *(_QWORD *)(a4 + 40) = 0;
  *(_QWORD *)(a4 + 48) = 0;
  return swift_retain();
}

uint64_t sub_1CB7AE3B0(uint64_t a1)
{
  _QWORD *v1;

  v1[7] = a1;
  v1[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8895A8);
  v1[9] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1CB7AE408()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  sub_1CB785DB0(&qword_1ED8895A0, &qword_1ED8895A8, MEMORY[0x1E0DF0C48]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_1CB7AE4A0;
  return sub_1CB846B58();
}

uint64_t sub_1CB7AE4A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _OWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(_OWORD **)(v2 + 56);
  swift_endAccess();
  *v4 = *(_OWORD *)(v2 + 40);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CB7AE524()
{
  uint64_t v0;

  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1CB7AE558(void (**a1)(uint64_t *__return_ptr, uint64_t)@<X0>, _QWORD *a2@<X8>)
{
  void (*v3)(uint64_t *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;

  v3 = *a1;
  v4 = swift_retain();
  v3(&v11, v4);
  swift_release();
  v5 = v11;
  v6 = v13;
  v7 = v14;
  v8 = v15;
  v9 = v16;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v5;
  *(_OWORD *)(v10 + 24) = v12;
  *(_QWORD *)(v10 + 40) = v6;
  *(_BYTE *)(v10 + 48) = v7;
  *(_QWORD *)(v10 + 56) = v8;
  *(_QWORD *)(v10 + 64) = v9;
  *a2 = &unk_1EF99EBC0;
  a2[1] = v10;
  swift_retain();
  swift_retain();
  sub_1CB7AED98(v8, v9);
  swift_release();
  swift_release();
  sub_1CB785584(v8, v9);
}

uint64_t sub_1CB7AE628@<X0>(uint64_t (**a1)(uint64_t)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = swift_retain();
  v5 = v3(v4);
  v7 = v6;
  swift_release();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v5;
  *(_QWORD *)(result + 24) = v7;
  *a2 = &unk_1EF99EB20;
  a2[1] = result;
  return result;
}

uint64_t sub_1CB7AE690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  *(_QWORD *)(v4 + 16) = a1;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_1CB784FBC;
  return sub_1CB7AD0A0(a2, a3, a4);
}

uint64_t sub_1CB7AE6F8(uint64_t a1)
{
  _QWORD *v1;

  v1[6] = a1;
  v1[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EB40);
  v1[8] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1CB7AE750()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  sub_1CB785DB0(&qword_1EF99EB70, &qword_1EF99EB40, MEMORY[0x1E0DF0C48]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1CB7AE7E8;
  return sub_1CB846B58();
}

uint64_t sub_1CB7AE7E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(_QWORD **)(v2 + 48);
  swift_endAccess();
  *v4 = *(_QWORD *)(v2 + 40);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CB7AE86C()
{
  uint64_t v0;

  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7AE8A0@<X0>(uint64_t (**a1)(uint64_t)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = swift_retain();
  v5 = v3(v4);
  v7 = v6;
  swift_release();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v5;
  *(_QWORD *)(result + 24) = v7;
  *a2 = &unk_1EF99EA80;
  a2[1] = result;
  return result;
}

uint64_t sub_1CB7AE908@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1CB7AE8A0((uint64_t (**)(uint64_t))(v1 + 16), a1);
}

uint64_t sub_1CB7AE910(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB785DF4;
  return sub_1CB783DBC(a1, v1);
}

uint64_t sub_1CB7AE968()
{
  return swift_deallocObject();
}

uint64_t sub_1CB7AE97C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CB785DF4;
  return sub_1CB7AD844(a1, v4, v5, v6);
}

uint64_t sub_1CB7AE9E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CB785DF4;
  return sub_1CB783F14(a1);
}

uint64_t sub_1CB7AEA3C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1CB7AEA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB7AEA98(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CB785DF4;
  return sub_1CB7AB484(a1);
}

void *sub_1CB7AEB04()
{
  uint64_t v0;

  return sub_1CB7ACF70(v0);
}

uint64_t sub_1CB7AEB0C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1CB7AE628((uint64_t (**)(uint64_t))(v1 + 16), a1);
}

uint64_t sub_1CB7AEB14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB785DF4;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF99EB18 + dword_1EF99EB18))(a1, v1);
}

uint64_t objectdestroy_13Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_19Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB7AEBE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CB785DF4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF99EB28 + dword_1EF99EB28))(a1, v4, v5, v6);
}

uint64_t sub_1CB7AEC64(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CB785DF4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1EF99EB60 + dword_1EF99EB60))(a1);
}

uint64_t sub_1CB7AECDC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB7AED00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 16))(a2, a1, *(_QWORD *)(a1 + 8));
  *(_QWORD *)(a2 + 8) = result;
  return result;
}

uint64_t sub_1CB7AED34()
{
  return objectdestroy_62Tm(&qword_1ED88A7B0);
}

uint64_t sub_1CB7AED44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB785DF4;
  return sub_1CB783CB4(a1, v1);
}

uint64_t sub_1CB7AED98(uint64_t result, void *a2)
{
  id v2;

  if (result)
  {
    v2 = a2;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1CB7AEDC4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CB785488;
  return sub_1CB7AE014(a1);
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB7AEE4C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1CB7AEE7C()
{
  return objectdestroy_62Tm(&qword_1ED8895B8);
}

uint64_t objectdestroy_113Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 56))
  {
    swift_release();

  }
  return swift_deallocObject();
}

uint64_t sub_1CB7AEECC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB785DF4;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF99EBE8 + dword_1EF99EBE8))(a1, v1);
}

uint64_t sub_1CB7AEF34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CB785DF4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1EF99EBF8 + dword_1EF99EBF8))(a1);
}

uint64_t sub_1CB7AEFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)&v20 - v12;
  v15 = type metadata accessor for WindowedAsyncSequence.WindowedAsyncSequenceIterator(0, a2, a3, v14);
  v16 = a4 + *(int *)(v15 + 36);
  v17 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_BYTE *)(a4 + *(int *)(v15 + 40)) = 0;
  v18 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v21, a2);
  sub_1CB846BA0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v18, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a4, v13, AssociatedTypeWitness);
}

uint64_t WindowedAsyncSequence.WindowedAsyncSequenceIterator.next()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(_QWORD *)(a2 + 24);
  v3[6] = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  v5 = sub_1CB846E40();
  v3[8] = v5;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v3[9] = TupleTypeMetadata2;
  v3[10] = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[13] = swift_task_alloc();
  v3[14] = *(_QWORD *)(v5 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CB7AF25C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(int *)(*(_QWORD *)(v0 + 24) + 40);
  *(_DWORD *)(v0 + 176) = v2;
  if ((*(_BYTE *)(v1 + v2) & 1) != 0)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 56))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 72));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  if ((sub_1CB846B94() & 1) != 0)
  {
    *(_BYTE *)(v1 + v2) = 1;
    sub_1CB846B4C();
    sub_1CB785A70();
    swift_allocError();
    sub_1CB8467D4();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v5;
  *v5 = v0;
  v5[1] = sub_1CB7AF400;
  return sub_1CB846B58();
}

uint64_t sub_1CB7AF400()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB7AF464()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 96) + 48);
  if (v2(*(_QWORD *)(v0 + 128), 1, v1) == 1)
  {
    *(_BYTE *)(*(_QWORD *)(v0 + 32) + *(int *)(v0 + 176)) = 1;
    v1 = *(_QWORD *)(v0 + 56);
  }
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 32) + *(int *)(*(_QWORD *)(v0 + 24) + 36);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 112) + 16);
  v5(v3, v4, *(_QWORD *)(v0 + 64));
  v6 = v2(v3, 1, v1);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 112);
  if (v6 == 1)
  {
    v10 = *(_QWORD *)(v0 + 64);
    v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    *(_QWORD *)(v0 + 152) = v11;
    v11(v7, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v4, v8, v10);
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v12;
    *v12 = v0;
    v12[1] = sub_1CB7AF68C;
    return WindowedAsyncSequence.WindowedAsyncSequenceIterator.next()(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 56);
    v22 = *(_QWORD *)(v0 + 16);
    v23 = *(_QWORD *)(v0 + 80);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 96) + 32);
    v18(v14, v7, v17);
    v21 = v15 + *(int *)(v16 + 48);
    v18(v15, v14, v17);
    v5(v21, v8, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40))(v4, v8, v20);
    v19 = v22 + *(int *)(v16 + 48);
    v18(v22, v15, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v19, v21, v20);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v22, 0, 1, v16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1CB7AF68C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB7AF6F0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 152))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7AF75C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7AF7B8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 152))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7AF824(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CB785488;
  return WindowedAsyncSequence.WindowedAsyncSequenceIterator.next()(a1, a2);
}

uint64_t sub_1CB7AF884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_1CB7AF91C;
  return sub_1CB846B64();
}

uint64_t sub_1CB7AF91C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 24) = *(_QWORD *)(v2 + 16);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1CB7AF978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t WindowedAsyncSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 16);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  return sub_1CB7AEFE4((uint64_t)v6, v4, *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_1CB7AFA14(uint64_t a1, uint64_t a2)
{
  return sub_1CB7B0628(a1, a2, (void (*)(void))WindowedAsyncSequence.makeAsyncIterator());
}

uint64_t sub_1CB7AFA20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = (char *)&v20 - v14;
  v17 = (int *)type metadata accessor for WindowedNAsyncSequence.WindowedNAsyncSequenceIterator(0, a3, a4, v16);
  *(_BYTE *)(a5 + v17[11]) = 0;
  *(_QWORD *)(a5 + v17[9]) = a1;
  swift_getAssociatedTypeWitness();
  *(_QWORD *)(a5 + v17[10]) = sub_1CB846AB0();
  v18 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, a3);
  sub_1CB846BA0();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v18, a3);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a5, v15, AssociatedTypeWitness);
}

uint64_t WindowedNAsyncSequence.WindowedNAsyncSequenceIterator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;

  v2[4] = a1;
  v2[5] = v1;
  v2[6] = *(_QWORD *)(a1 + 24);
  v2[7] = *(_QWORD *)(a1 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[8] = AssociatedTypeWitness;
  v2[9] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v4 = sub_1CB846E40();
  v2[13] = v4;
  v2[14] = *(_QWORD *)(v4 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CB7AFC74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(int *)(*(_QWORD *)(v0 + 32) + 44);
  *(_DWORD *)(v0 + 184) = v2;
  if ((*(_BYTE *)(v1 + v2) & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else if ((sub_1CB846B94() & 1) != 0)
  {
    *(_BYTE *)(v1 + v2) = 1;
    sub_1CB846B4C();
    sub_1CB785A70();
    swift_allocError();
    sub_1CB8467D4();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v4;
    *v4 = v0;
    v4[1] = sub_1CB7AFE50;
    return sub_1CB846B58();
  }
}

uint64_t sub_1CB7AFE50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB7AFEB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void (*v6)(uint64_t, _QWORD, _QWORD);
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, _QWORD, _QWORD);
  uint64_t *v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 128);
  v2 = v0 + 72;
  v3 = *(_QWORD *)(v0 + 72);
  v5 = (_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 16);
  v6(v1, *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 104));
  v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v7 = v35(v1, 1, v4);
  v8 = *(_QWORD *)(v0 + 128);
  if (v7 == 1)
  {
    v2 = v0 + 112;
    v5 = (_QWORD *)(v0 + 104);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 64);
    v11 = *(_QWORD *)(v0 + 32);
    v10 = *(_QWORD *)(v0 + 40);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 72) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 128), v9);
    v12 = MEMORY[0x1D179EEA0](*(_QWORD *)(v10 + *(int *)(v11 + 40)), v9);
    v8 = *(_QWORD *)(v0 + 96);
    if (v12 < *(_QWORD *)(v10 + *(int *)(v11 + 36)))
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 16))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 64));
      sub_1CB846B04();
      sub_1CB846AEC();
      v13 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v13;
      *v13 = v0;
      v13[1] = sub_1CB7B0210;
      return WindowedNAsyncSequence.WindowedNAsyncSequenceIterator.next()(*(_QWORD *)(v0 + 32));
    }
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 8))(v8, *v5);
  v34 = (uint64_t *)(*(_QWORD *)(v0 + 40) + *(int *)(*(_QWORD *)(v0 + 32) + 40));
  v15 = *v34;
  *(_QWORD *)(v0 + 16) = *v34;
  v16 = sub_1CB846B04();
  swift_bridgeObjectRetain();
  MEMORY[0x1D179FD88](MEMORY[0x1E0DEAF50], v16);
  if ((sub_1CB846C30() & 1) == 0)
  {
    v17 = *(_QWORD *)(v0 + 88);
    v33 = v6;
    v19 = *(_QWORD *)(v0 + 64);
    v18 = *(_QWORD *)(v0 + 72);
    MEMORY[0x1D179FD88](MEMORY[0x1E0DEAF58], v16);
    sub_1CB846C3C();
    v20 = v19;
    v6 = v33;
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v20);
  }
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 64);
  v6(v21, *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 104));
  if (v35(v21, 1, v22) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 80);
    v23 = *(_QWORD *)(v0 + 88);
    v26 = *(_QWORD *)(v0 + 64);
    v25 = *(_QWORD *)(v0 + 72);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 32))(v24, *(_QWORD *)(v0 + 120), v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, v24, v26);
    sub_1CB846AEC();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  }
  v27 = *(_QWORD *)(v0 + 136);
  v29 = *(_QWORD *)(v0 + 104);
  v28 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 24) = v15;
  v30 = sub_1CB846C30();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  if ((v30 & 1) != 0)
  {
    v31 = *(int *)(v0 + 184);
    v32 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRelease();
    v15 = 0;
    *(_BYTE *)(v32 + v31) = 1;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v15);
}

uint64_t sub_1CB7B0210(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 176) = a1;
  return swift_task_switch();
}

uint64_t sub_1CB7B0284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1CB7B032C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7B03A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7B0444(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1CB784FBC;
  return WindowedNAsyncSequence.WindowedNAsyncSequenceIterator.next()(a2);
}

uint64_t sub_1CB7B0494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_1CB7B26E0;
  return sub_1CB846B64();
}

uint64_t sub_1CB7B052C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v7;

  *a5 = a1;
  v7 = (char *)a5 + *(int *)(type metadata accessor for WindowedNAsyncSequence(0, a3, a4, a4) + 36);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v7, a2, a3);
}

uint64_t WindowedNAsyncSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, (char *)v2 + *(int *)(v6 + 36), v5);
  return sub_1CB7AFA20(v9, (uint64_t)v8, v5, *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_1CB7B061C(uint64_t a1, uint64_t a2)
{
  return sub_1CB7B0628(a1, a2, (void (*)(void))WindowedNAsyncSequence.makeAsyncIterator());
}

uint64_t sub_1CB7B0628(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;

  a3();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v3, a1);
}

uint64_t AsyncSequence.window2()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t AsyncSequence.windowN(length:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v4, a2);
  *(_QWORD *)a4 = a1;
  v13 = type metadata accessor for WindowedNAsyncSequence(0, a2, a3, v12);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(&a4[*(int *)(v13 + 36)], v11, a2);
}

uint64_t sub_1CB7B0788()
{
  return MEMORY[0x1E0DEDB38];
}

void sub_1CB7B0794()
{
  JUMPOUT(0x1D179FD88);
}

void sub_1CB7B07A4()
{
  JUMPOUT(0x1D179FD88);
}

uint64_t sub_1CB7B07B4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1CB7B07BC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1CB7B0828(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1CB7B0898(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1CB7B08A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1CB7B08D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1CB7B0908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1CB7B0938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1CB7B0968(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1CB7B0A18 + 4 * byte_1CB84B100[(v7 - 1)]))();
}

void sub_1CB7B0A68(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for WindowedAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WindowedAsyncSequence);
}

uint64_t sub_1CB7B0C24()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1CB7B0C2C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_1CB846E40();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1CB7B0D00(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const void *v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = v6 + v9;
  if (*(_DWORD *)(v8 + 84))
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  v13 = *(_DWORD *)(v5 + 80) | v9;
  v14 = (*(_BYTE *)(v5 + 80) | v9);
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || v12 + (v11 & ~v10) + 1 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = v7;
    v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v21 = (const void *)(((unint64_t)a2 + v11) & v20);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v21, 1, v19))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v20), v21, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(((unint64_t)a1 + v11) & v20, 0, 1, v19);
    }
    *(_BYTE *)(v12 + (((unint64_t)a1 + v11) & v20)) = *((_BYTE *)v21 + v12);
  }
  return a1;
}

uint64_t sub_1CB7B0E84(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  return result;
}

uint64_t sub_1CB7B0F5C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;
  size_t v14;
  size_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = v13;
    else
      v14 = v13 + 1;
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  if (v12)
    v15 = v13;
  else
    v15 = v13 + 1;
  *((_BYTE *)v10 + v15) = *((_BYTE *)v11 + v15);
  return a1;
}

uint64_t sub_1CB7B108C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  size_t v15;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (void *)((v6 + v9 + a2) & ~v9);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v13 = v12(v10, 1, v7);
  v14 = v12(v11, 1, v7);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v10, v11, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v10, v11, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v15);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  *((_BYTE *)v10 + v16) = *((_BYTE *)v11 + v16);
  return a1;
}

uint64_t sub_1CB7B1208(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;
  size_t v14;
  size_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = v13;
    else
      v14 = v13 + 1;
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  if (v12)
    v15 = v13;
  else
    v15 = v13 + 1;
  *((_BYTE *)v10 + v15) = *((_BYTE *)v11 + v15);
  return a1;
}

uint64_t sub_1CB7B1338(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  size_t v15;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (void *)((v6 + v9 + a2) & ~v9);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v13 = v12(v10, 1, v7);
  v14 = v12(v11, 1, v7);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v11, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v15);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  *((_BYTE *)v10 + v16) = *((_BYTE *)v11 + v16);
  return a1;
}

uint64_t sub_1CB7B14B4(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  int v24;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = v9;
  if (v10 <= 0xFE)
    v10 = 254;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = *(_QWORD *)(v5 + 64) + v12;
  if (a2 > v10)
  {
    v14 = v11 + (v13 & ~v12) + 1;
    v15 = 8 * v14;
    if (v14 > 3)
      goto LABEL_14;
    v17 = ((a2 - v10 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v17 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v17 >= 2)
    {
LABEL_14:
      v16 = *(unsigned __int8 *)(a1 + v14);
      if (!*(_BYTE *)(a1 + v14))
        goto LABEL_30;
LABEL_21:
      v18 = (v16 - 1) << v15;
      if (v14 > 3)
        v18 = 0;
      if ((_DWORD)v11 + (v13 & ~(_DWORD)v12) != -1)
      {
        if (v14 <= 3)
          v19 = v11 + (v13 & ~(_DWORD)v12) + 1;
        else
          v19 = 4;
        __asm { BR              X12 }
      }
      v24 = v10 + v18;
      return (v24 + 1);
    }
  }
LABEL_30:
  if ((_DWORD)v6 == v10)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
  v21 = (v13 + a1) & ~v12;
  if (v9 != v10)
  {
    v23 = *(unsigned __int8 *)(v21 + v11);
    if (v23 < 2)
      return 0;
    v24 = (v23 + 2147483646) & 0x7FFFFFFF;
    return (v24 + 1);
  }
  if (v8 < 2)
    return 0;
  v22 = (*(uint64_t (**)(uint64_t))(v7 + 48))(v21);
  if (v22 >= 2)
    return v22 - 1;
  else
    return 0;
}

void sub_1CB7B16EC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = 0u;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  if (v12 <= 0xFE)
    v13 = 254;
  else
    v13 = v12;
  v14 = *(unsigned __int8 *)(v9 + 80);
  v16 = *(_QWORD *)(v9 + 64);
  if (!v10)
    ++v16;
  v15 = *(_QWORD *)(v6 + 64) + v14;
  v17 = v16 + (v15 & ~(_DWORD)v14) + 1;
  if (a3 > v13)
  {
    if (v17 > 3)
    {
      v8 = 1u;
      if (v13 >= a2)
LABEL_27:
        __asm { BR              X16 }
LABEL_20:
      v19 = ~v13 + a2;
      if (v17 < 4)
      {
        if ((_DWORD)v16 + (v15 & ~(_DWORD)v14) != -1)
        {
          v20 = v19 & ~(-1 << (8 * v17));
          bzero(a1, v16 + (v15 & ~v14) + 1);
          if (v17 == 3)
          {
            *(_WORD *)a1 = v20;
            a1[2] = BYTE2(v20);
          }
          else if (v17 == 2)
          {
            *(_WORD *)a1 = v20;
          }
          else
          {
            *a1 = v20;
          }
        }
      }
      else
      {
        bzero(a1, v16 + (v15 & ~v14) + 1);
        *(_DWORD *)a1 = v19;
      }
      __asm { BR              X10 }
    }
    v18 = ((a3 - v13 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v18))
    {
      v8 = 4u;
      if (v13 >= a2)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v18 >= 0x100)
      v8 = 2;
    else
      v8 = v18 > 1;
  }
  if (v13 >= a2)
    goto LABEL_27;
  goto LABEL_20;
}

void sub_1CB7B195C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_1CB7B1964()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

uint64_t type metadata accessor for WindowedAsyncSequence.WindowedAsyncSequenceIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WindowedAsyncSequence.WindowedAsyncSequenceIterator);
}

uint64_t sub_1CB7B199C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1CB7B1A18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 8) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 8) & ~v5, ((unint64_t)a2 + v5 + 8) & ~v5);
  }
  return v3;
}

uint64_t sub_1CB7B1ABC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1CB7B1ADC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_1CB7B1B2C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_1CB7B1B7C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_1CB7B1BCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1CB7B1C1C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v8 = ((v6 + 8) & ~v6) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v6 + 8) & ~v6);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return v5 + v12 + 1;
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1CB7B1CDC + 4 * byte_1CB84B11C[(v8 - 1)]))();
}

void sub_1CB7B1D3C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((v8 + 8) & ~v8) + *(_QWORD *)(v6 + 64);
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      v14 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v15 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, ((v8 + 8) & ~v8) + *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for WindowedNAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WindowedNAsyncSequence);
}

uint64_t sub_1CB7B1F14()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1CB7B1FB4(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1CB7B20A4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7B2110(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CB7B21AC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1CB7B2254(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1CB7B22EC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1CB7B238C(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 < a2)
  {
    v8 = ((((v7 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 9;
    if (v8 < 4)
      v9 = ((a2 - v6 + 255) >> (8 * v8)) + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    __asm { BR              X15 }
  }
  if (v5 >= 0x7FFFFFFF)
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  v13 = *(_QWORD *)((((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  return (v13 + 1);
}

void sub_1CB7B24F8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v7 >= a3)
  {
    v11 = 0u;
    if (v7 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v8 <= 3)
      v9 = ((a3 - v7 + 255) >> (8 * v8)) + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (v7 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  v12 = ~v7 + a2;
  v13 = (~(_BYTE)v7 + a2);
  if (v8 >= 4)
    v14 = v12;
  else
    v14 = v13;
  bzero(a1, v8);
  if ((_DWORD)v8 == 1)
    *a1 = v14;
  else
    *(_DWORD *)a1 = v14;
  __asm { BR              X10 }
}

void sub_1CB7B263C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x1CB7B26BCLL);
}

void sub_1CB7B2644()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1CB7B264CLL);
  JUMPOUT(0x1CB7B26BCLL);
}

void sub_1CB7B2698()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x1CB7B26BCLL);
}

void sub_1CB7B26A0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x1CB7B26BCLL);
}

uint64_t sub_1CB7B26A8@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (!(_DWORD)v4)
    JUMPOUT(0x1CB7B26BCLL);
  if (a1 < 0x7FFFFFFF)
  {
    if ((v4 & 0x80000000) == 0)
      JUMPOUT(0x1CB7B26B8);
    JUMPOUT(0x1CB7B26B4);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(v3, v4);
}

uint64_t type metadata accessor for WindowedNAsyncSequence.WindowedNAsyncSequenceIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WindowedNAsyncSequence.WindowedNAsyncSequenceIterator);
}

uint64_t sub_1CB7B26E4(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  result = MEMORY[0x1E0DEE9D8];
  v13 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = *(_QWORD *)(type metadata accessor for UniversalSuggestionCandidate(0) - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v11 = a1(&v12, v9);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v12)
      {
        MEMORY[0x1D179EDF8](v11);
        if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1CB846AA4();
        sub_1CB846AD4();
        sub_1CB846A74();
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t PLUSUniversalSuggestionsRuntimeLogger.__allocating_init(logTarget:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1CB7780BC(a1, v2 + 16);
  return v2;
}

uint64_t PLUSUniversalSuggestionsRuntimeLogger.init(logTarget:)(__int128 *a1)
{
  uint64_t v1;

  sub_1CB7780BC(a1, v1 + 16);
  return v1;
}

uint64_t PLUSUniversalSuggestionsRuntimeLogger.__allocating_init()()
{
  id v0;
  void *v1;
  unsigned int v2;
  ValueMetadata *v3;
  _UNKNOWN **v4;
  uint64_t v5;
  __int128 v7;
  ValueMetadata *v8;
  _UNKNOWN **v9;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  v3 = &type metadata for SiriAnalyticsSharedPLUSEventLogTarget;
  if (v2)
    v3 = &type metadata for DisabledPLUSEventLogTarget;
  v4 = &protocol witness table for DisabledPLUSEventLogTarget;
  if (!v2)
    v4 = &protocol witness table for SiriAnalyticsSharedPLUSEventLogTarget;
  v8 = v3;
  v9 = v4;
  type metadata accessor for PLUSUniversalSuggestionsRuntimeLogger();
  v5 = swift_allocObject();
  sub_1CB7780BC(&v7, v5 + 16);
  return v5;
}

uint64_t type metadata accessor for PLUSUniversalSuggestionsRuntimeLogger()
{
  return objc_opt_self();
}

uint64_t sub_1CB7B2978(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12[2];

  v3 = sub_1CB846084();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB79CBA8(v1 + 16, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  type metadata accessor for PLUSUniversalSuggestionsRuntimeRequestLogger();
  v7 = swift_allocObject();
  v8 = v7
     + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_1CB7780BC(v12, v7 + 16);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v7 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v6, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v7 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, 1, 1, v3);
  return v7;
}

uint64_t PLUSUniversalSuggestionsRuntimeRequestLogger.__allocating_init(logTarget:requestId:)(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = swift_allocObject();
  v5 = v4
     + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1CB7780BC(a1, v4 + 16);
  v7 = v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId;
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v7, a2, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, 1, 1, v8);
  return v4;
}

uint64_t type metadata accessor for PLUSUniversalSuggestionsRuntimeRequestLogger()
{
  uint64_t result;

  result = qword_1EF99ED30;
  if (!qword_1EF99ED30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CB7B2BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  __int128 v20[2];

  v5 = sub_1CB846084();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v19 - v10;
  sub_1CB79CBA8(v2 + 16, (uint64_t)v20);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  type metadata accessor for PLUSUniversalSuggestionsRuntimeRequestLogger();
  v13 = swift_allocObject();
  v14 = v13
      + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1CB7780BC(v20, v13 + 16);
  v16 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v16(v13 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v11, v5);
  v17 = v13 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId;
  v16(v13 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, v9, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
  return v13;
}

uint64_t PLUSUniversalSuggestionsRuntimeRequestLogger.__allocating_init(logTarget:requestId:plusId:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v6 = swift_allocObject();
  v7 = v6
     + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1CB7780BC(a1, v6 + 16);
  v9 = v6 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId;
  v10 = sub_1CB846084();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v12(v9, a2, v10);
  v13 = v6 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId;
  v12(v6 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, a3, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  return v6;
}

uint64_t PLUSUniversalSuggestionsRuntimeLogger.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t PLUSUniversalSuggestionsRuntimeLogger.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7B2E58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  v20 = sub_1CB846084();
  v2 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EC50);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v20 - v13;
  v15 = v1
      + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  swift_beginAccess();
  sub_1CB785AC8(v15, (uint64_t)v14, &qword_1EF99EC50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) != 1)
    return sub_1CB7B4B88((uint64_t)v14, v21);
  sub_1CB785B54((uint64_t)v14, &qword_1EF99EC50);
  sub_1CB785AC8(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, (uint64_t)v8, &qword_1ED88D570);
  v16 = v20;
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v20);
  v18 = v21;
  if (v17 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v16);
    sub_1CB7AA4F0((uint64_t)v4, v18);
    sub_1CB785B54((uint64_t)v8, &qword_1ED88D570);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v21, v8, v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v18, 0, 1, v16);
  }
  sub_1CB785AC8(v18, (uint64_t)v12, &qword_1ED88D570);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
  swift_beginAccess();
  sub_1CB7B4B40((uint64_t)v12, v15);
  return swift_endAccess();
}

uint64_t PLUSUniversalSuggestionsRuntimeRequestLogger.init(logTarget:requestId:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = v2
     + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1CB7780BC(a1, v2 + 16);
  v7 = v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId;
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v7, a2, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, 1, 1, v8);
  return v2;
}

uint64_t PLUSUniversalSuggestionsRuntimeRequestLogger.init(logTarget:requestId:plusId:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v7 = v3
     + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1CB7780BC(a1, v3 + 16);
  v9 = v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId;
  v10 = sub_1CB846084();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v12(v9, a2, v10);
  v13 = v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId;
  v12(v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, a3, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  return v3;
}

void sub_1CB7B3290(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  _QWORD v33[2];
  uint64_t v34;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CB846084();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v33 - v12;
  sub_1CB7B2E58((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1CB785B54((uint64_t)v6, &qword_1ED88D570);
    if (qword_1ED88E518 != -1)
      swift_once();
    v14 = sub_1CB8466D8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED890248);
    v15 = sub_1CB8466C0();
    v16 = sub_1CB846C90();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1CB771000, v15, v16, "Could not generate a plus logging identifier for a SELF event donation", v17, 2u);
      MEMORY[0x1D179FE84](v17, -1, -1);
    }

  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v18(v13, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    type metadata accessor for PLUSSchemaEventConstructor();
    v19 = swift_allocObject();
    v20 = ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v11, v7);
    *(_DWORD *)(v19
              + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = 2;
    MEMORY[0x1E0C80A78](v20);
    v33[-2] = v13;
    v21 = sub_1CB7B26E4((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_1CB7B4930, (uint64_t)&v33[-4], a1);
    if (v21 >> 62)
      v22 = sub_1CB847044();
    else
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    v23 = sub_1CB798110((uint64_t)v2+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v21, v22 != 0);
    swift_bridgeObjectRelease();
    if (v23)
    {
      v24 = v2[5];
      v25 = v2[6];
      __swift_project_boxed_opaque_existential_1(v2 + 2, v24);
      PLUSEventLogTarget.emitMessage(_:)((uint64_t)v23, v24, v25);

      swift_setDeallocating();
      v26 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v26(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v7);
      swift_deallocClassInstance();
      v26((uint64_t)v13, v7);
    }
    else
    {
      if (qword_1ED88E518 != -1)
        swift_once();
      v27 = sub_1CB8466D8();
      __swift_project_value_buffer(v27, (uint64_t)qword_1ED890248);
      v28 = sub_1CB8466C0();
      v29 = sub_1CB846C90();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        v31 = swift_slowAlloc();
        v34 = v31;
        *(_DWORD *)v30 = 136315138;
        v33[1] = sub_1CB775A54(0xD000000000000028, 0x80000001CB854180, &v34);
        sub_1CB846E58();
        _os_log_impl(&dword_1CB771000, v28, v29, "PLUSUniversalSuggestionsRuntimeLogger.%s:  failed to create PLUS SELF event templates", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v31, -1, -1);
        MEMORY[0x1D179FE84](v30, -1, -1);

        swift_release();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      }
      else
      {
        swift_setDeallocating();
        v32 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
        v32(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v7);
        swift_deallocClassInstance();

        v32((uint64_t)v13, v7);
      }
    }
  }
}

void sub_1CB7B373C(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  void *v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CB846084();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v32 - v12;
  sub_1CB7B2E58((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1CB785B54((uint64_t)v6, &qword_1ED88D570);
    if (qword_1ED88E518 != -1)
      swift_once();
    v14 = sub_1CB8466D8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED890248);
    v15 = sub_1CB8466C0();
    v16 = sub_1CB846C90();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1CB771000, v15, v16, "Could not generate a plus logging identifier for a SELF event donation", v17, 2u);
      MEMORY[0x1D179FE84](v17, -1, -1);
    }

  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v18(v13, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    type metadata accessor for PLUSSchemaEventConstructor();
    v19 = swift_allocObject();
    v18((char *)(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId), v11, v7);
    *(_DWORD *)(v19
              + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = 2;
    v20 = sub_1CB7983A8((uint64_t)v2+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, a1 & 1, 0);
    if (v20)
    {
      v21 = v20;
      v22 = v2 + 2;
      v23 = v2[5];
      v24 = v2[6];
      __swift_project_boxed_opaque_existential_1(v22, v23);
      PLUSEventLogTarget.emitMessage(_:)((uint64_t)v21, v23, v24);
      swift_setDeallocating();
      v25 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v25(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v7);
      swift_deallocClassInstance();

      v25((uint64_t)v13, v7);
    }
    else
    {
      if (qword_1ED88E518 != -1)
        swift_once();
      v26 = sub_1CB8466D8();
      __swift_project_value_buffer(v26, (uint64_t)qword_1ED890248);
      v27 = sub_1CB8466C0();
      v28 = sub_1CB846C90();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        v30 = swift_slowAlloc();
        v33 = v30;
        *(_DWORD *)v29 = 136315138;
        v32 = sub_1CB775A54(0xD000000000000029, 0x80000001CB8541B0, &v33);
        sub_1CB846E58();
        _os_log_impl(&dword_1CB771000, v27, v28, "PLUSUniversalSuggestionsRuntimeLogger.%s:  failed to create PLUS SELF event templates", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v30, -1, -1);
        MEMORY[0x1D179FE84](v29, -1, -1);

        swift_release();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      }
      else
      {
        swift_setDeallocating();
        v31 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
        v31(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v7);
        swift_deallocClassInstance();

        v31((uint64_t)v13, v7);
      }
    }
  }
}

void sub_1CB7B3B80(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v3 = v2;
  v51 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v48 - v9;
  v11 = sub_1CB846084();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v50 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v48 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v48 - v18;
  sub_1CB7B2E58((uint64_t)v10);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v20(v10, 1, v11) == 1)
  {
    sub_1CB785B54((uint64_t)v10, &qword_1ED88D570);
    if (qword_1ED88E518 != -1)
      swift_once();
    v21 = sub_1CB8466D8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED890248);
    v22 = sub_1CB8466C0();
    v23 = sub_1CB846C90();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1CB771000, v22, v23, "Could not generate a plus logging identifier for a SELF event donation", v24, 2u);
      MEMORY[0x1D179FE84](v24, -1, -1);
    }

  }
  else
  {
    v25 = v12;
    v26 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v26(v19, v10, v11);
    v48 = v25;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v17, v19, v11);
    type metadata accessor for PLUSSchemaEventConstructor();
    v27 = swift_allocObject();
    v26((char *)(v27 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId), v17, v11);
    *(_DWORD *)(v27
              + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = 2;
    v28 = *(unsigned __int8 *)(a2 + 16);
    v29 = *(unsigned __int8 *)(a2 + 17);
    type metadata accessor for PLUSLoggingIdGenerator();
    v49 = v19;
    static PLUSLoggingIdGenerator.derivePlusSuggestionLinkId(plusId:for:)((uint64_t)v19, v51, (uint64_t)v8);
    if (v20(v8, 1, v11) == 1)
    {
      sub_1CB785B54((uint64_t)v8, &qword_1ED88D570);
      if (qword_1ED88E518 != -1)
        swift_once();
      v30 = sub_1CB8466D8();
      __swift_project_value_buffer(v30, (uint64_t)qword_1ED890248);
      v31 = sub_1CB8466C0();
      v32 = sub_1CB846C90();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = swift_slowAlloc();
        v53 = v34;
        *(_DWORD *)v33 = 136315138;
        v52 = sub_1CB775A54(0xD000000000000037, 0x80000001CB8541E0, &v53);
        sub_1CB846E58();
        _os_log_impl(&dword_1CB771000, v31, v32, "PLUSUniversalSuggestionsRuntimeLogger.%s:  cannot generate a suggestion link id", v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v34, -1, -1);
        MEMORY[0x1D179FE84](v33, -1, -1);

        swift_release();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v11);
      }
      else
      {
        swift_setDeallocating();
        v41 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
        v41(v27 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v11);
        swift_deallocClassInstance();

        v41((uint64_t)v49, v11);
      }
    }
    else
    {
      v35 = (uint64_t)v50;
      v26(v50, v8, v11);
      v36 = sub_1CB798624((uint64_t)v3+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v35, (v28 + 1), (v29 + 1), 0);
      if (v36)
      {
        v37 = v36;
        v38 = v3 + 2;
        v39 = v3[5];
        v40 = v3[6];
        __swift_project_boxed_opaque_existential_1(v38, v39);
        PLUSEventLogTarget.emitMessage(_:)((uint64_t)v37, v39, v40);

      }
      else
      {
        if (qword_1ED88E518 != -1)
          swift_once();
        v42 = sub_1CB8466D8();
        __swift_project_value_buffer(v42, (uint64_t)qword_1ED890248);
        v43 = sub_1CB8466C0();
        v44 = sub_1CB846C90();
        if (os_log_type_enabled(v43, v44))
        {
          v45 = (uint8_t *)swift_slowAlloc();
          v46 = swift_slowAlloc();
          v53 = v46;
          *(_DWORD *)v45 = 136315138;
          v52 = sub_1CB775A54(0xD000000000000037, 0x80000001CB8541E0, &v53);
          sub_1CB846E58();
          _os_log_impl(&dword_1CB771000, v43, v44, "PLUSUniversalSuggestionsRuntimeLogger.%s:  failed to create PLUS SELF event templates", v45, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D179FE84](v46, -1, -1);
          MEMORY[0x1D179FE84](v45, -1, -1);
        }

      }
      swift_release();
      v47 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      v47(v35, v11);
      v47((uint64_t)v49, v11);
    }
  }
}

void sub_1CB7B41B0(uint64_t a1, unsigned __int8 *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v3 = v2;
  v55 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v52 - v9;
  v11 = sub_1CB846084();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v54 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v52 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v52 - v18;
  v20 = *a2;
  sub_1CB7B2E58((uint64_t)v10);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v21(v10, 1, v11) == 1)
  {
    sub_1CB785B54((uint64_t)v10, &qword_1ED88D570);
    if (qword_1ED88E518 != -1)
      swift_once();
    v22 = sub_1CB8466D8();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED890248);
    v23 = sub_1CB8466C0();
    v24 = sub_1CB846C90();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1CB771000, v23, v24, "Could not generate a plus logging identifier for a SELF event donation", v25, 2u);
      MEMORY[0x1D179FE84](v25, -1, -1);
    }

  }
  else
  {
    v26 = v12;
    v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v27(v19, v10, v11);
    v53 = v26;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v17, v19, v11);
    type metadata accessor for PLUSSchemaEventConstructor();
    v28 = swift_allocObject();
    v29 = v17;
    v30 = v28;
    v27((char *)(v28 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId), v29, v11);
    *(_DWORD *)(v30
              + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = 2;
    type metadata accessor for PLUSLoggingIdGenerator();
    static PLUSLoggingIdGenerator.derivePlusSuggestionLinkId(plusId:for:)((uint64_t)v19, v55, (uint64_t)v8);
    if (v21(v8, 1, v11) == 1)
    {
      sub_1CB785B54((uint64_t)v8, &qword_1ED88D570);
      if (qword_1ED88E518 != -1)
        swift_once();
      v31 = sub_1CB8466D8();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED890248);
      v32 = sub_1CB8466C0();
      v33 = sub_1CB846C90();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v57 = v35;
        *(_DWORD *)v34 = 136315138;
        v56 = sub_1CB775A54(0xD000000000000036, 0x80000001CB854220, &v57);
        sub_1CB846E58();
        _os_log_impl(&dword_1CB771000, v32, v33, "PLUSUniversalSuggestionsRuntimeLogger.%s:  cannot generate a suggestion link id", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v35, -1, -1);
        MEMORY[0x1D179FE84](v34, -1, -1);

        swift_release();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v19, v11);
      }
      else
      {
        swift_setDeallocating();
        v44 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
        v44(v30 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v11);
        swift_deallocClassInstance();

        v44((uint64_t)v19, v11);
      }
    }
    else
    {
      if (v20)
        v36 = 2;
      else
        v36 = 1;
      v37 = (uint64_t)v54;
      v27(v54, v8, v11);
      v38 = sub_1CB798914((uint64_t)v3+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v37, v36);
      if (v38)
      {
        v39 = v38;
        v40 = v3 + 2;
        v41 = v3[5];
        v42 = v3[6];
        __swift_project_boxed_opaque_existential_1(v40, v41);
        PLUSEventLogTarget.emitMessage(_:)((uint64_t)v39, v41, v42);

        swift_release();
        v43 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
        v43(v37, v11);
        v43((uint64_t)v19, v11);
      }
      else
      {
        v45 = v53;
        if (qword_1ED88E518 != -1)
          swift_once();
        v46 = sub_1CB8466D8();
        __swift_project_value_buffer(v46, (uint64_t)qword_1ED890248);
        v47 = sub_1CB8466C0();
        v48 = sub_1CB846C90();
        if (os_log_type_enabled(v47, v48))
        {
          v49 = (uint8_t *)swift_slowAlloc();
          v50 = swift_slowAlloc();
          v57 = v50;
          *(_DWORD *)v49 = 136315138;
          v56 = sub_1CB775A54(0xD000000000000036, 0x80000001CB854220, &v57);
          sub_1CB846E58();
          _os_log_impl(&dword_1CB771000, v47, v48, "PLUSUniversalSuggestionsRuntimeLogger.%s:  failed to create PLUS SELF event templates", v49, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D179FE84](v50, -1, -1);
          MEMORY[0x1D179FE84](v49, -1, -1);

          swift_release();
          v51 = *(void (**)(char *, uint64_t))(v45 + 8);
          v51(v54, v11);
        }
        else
        {

          swift_release();
          v51 = *(void (**)(char *, uint64_t))(v45 + 8);
          v51((char *)v37, v11);
        }
        v51(v19, v11);
      }
    }
  }
}

uint64_t PLUSUniversalSuggestionsRuntimeRequestLogger.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  sub_1CB785B54(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, &qword_1ED88D570);
  v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId;
  v2 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1CB785B54(v0+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId, &qword_1EF99EC50);
  return v0;
}

uint64_t PLUSUniversalSuggestionsRuntimeRequestLogger.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  sub_1CB785B54(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, &qword_1ED88D570);
  v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId;
  v2 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1CB785B54(v0+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId, &qword_1EF99EC50);
  return swift_deallocClassInstance();
}

NSObject *sub_1CB7B4930@<X0>(uint64_t a1@<X0>, NSObject **a2@<X8>)
{
  uint64_t v2;
  NSObject *result;

  result = sub_1CB844488(*(_QWORD *)(v2 + 16), a1);
  *a2 = result;
  return result;
}

uint64_t method lookup function for PLUSUniversalSuggestionsRuntimeLogger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeLogger.__allocating_init(logTarget:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeLogger.make(requestId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeLogger.make(requestId:plusId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_1CB7B4990()
{
  return type metadata accessor for PLUSUniversalSuggestionsRuntimeRequestLogger();
}

void sub_1CB7B4998()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1CB7B4A94();
  if (v0 <= 0x3F)
  {
    sub_1CB846084();
    if (v1 <= 0x3F)
    {
      sub_1CB7B4AE8();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for PLUSUniversalSuggestionsRuntimeRequestLogger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeRequestLogger.__allocating_init(logTarget:requestId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeRequestLogger.__allocating_init(logTarget:requestId:plusId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeRequestLogger.logSuggesterQueried(matchedSuggestions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeRequestLogger.logSuggesterMetadata(isSuggesterEnabled:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeRequestLogger.logSuggestionMetadata(suggestionId:suggestionMetadata:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeRequestLogger.logSuggestionRedundancy(suggestionId:redundancyState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

void sub_1CB7B4A94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED88D578)
  {
    sub_1CB846084();
    v0 = sub_1CB846E40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED88D578);
  }
}

void sub_1CB7B4AE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF99ED40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED88D570);
    v0 = sub_1CB846E40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF99ED40);
  }
}

uint64_t sub_1CB7B4B40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EC50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB7B4B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB7B4BD4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return BPSDemandMax();
  v3 = 0;
  v4 = 0;
  v5 = v2 - 1;
  do
  {
    v6 = *(_QWORD *)(a2 + 32 + 8 * v3);
    v4 |= v6 == *MEMORY[0x1E0D02408];
    if ((v4 & 1) != 0)
    {
      if (v5 == v3)
        return *MEMORY[0x1E0D02408];
      result = 0;
    }
    else
    {
      if (v6 != *MEMORY[0x1E0D02400])
      {
        v7 = __OFADD__(v6, result);
        result += v6;
        if (v7)
          result = 0x7FFFFFFFFFFFFFFFLL;
      }
      if (v5 == v3)
        return BPSDemandMax();
    }
    ++v3;
  }
  while (!__OFADD__(v3, 1));
  __break(1u);
  return result;
}

uint64_t sub_1CB7B4C70()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_1CB7B4C8C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t _s16DownstreamBufferCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s16DownstreamBufferCMn);
}

uint64_t sub_1CB7B4CBC()
{
  return swift_initClassMetadata2();
}

void sub_1CB7B4D00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t inited;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v3 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v4 = sub_1CB846E40();
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - v6;
  v8 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v26 - v9;
  v11 = *(_QWORD **)((char *)v1 + qword_1EF99EE20);
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DE70);
  inited = swift_initStackObject();
  v28 = xmmword_1CB848A60;
  *(_OWORD *)(inited + 16) = xmmword_1CB848A60;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = v11[4];
  v13 = sub_1CB7B4BD4(0, inited);
  swift_setDeallocating();
  v11[4] = v13;
  v14 = (id)*MEMORY[0x1E0D02408];
  v15 = *MEMORY[0x1E0D02400];
  while ((id)v13 == v14 || v13 >= 1 && v13 != v15)
  {
    swift_retain();
    sub_1CB826F74((uint64_t)v7);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v27);
      v13 = v11[4];
      break;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, v3);
    v16 = (void *)v11[2];
    swift_unknownObjectRetain();
    v17 = objc_msgSend(v16, sel_receiveInput_, sub_1CB847194());
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v18 = swift_initStackObject();
    *(_OWORD *)(v18 + 16) = v28;
    *(_QWORD *)(v18 + 32) = v17;
    v19 = (id)v11[4];
    *(_QWORD *)(v18 + 40) = v19;
    v13 = (uint64_t)v14;
    if (v17 != v14)
    {
      v13 = (uint64_t)v14;
      if (v19 != v14)
        v13 = BPSDemandMax();
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v3);
    v11[4] = v13;
  }
  if ((id)v13 == v14 || v13 >= 1 && v13 != v15)
  {
    v20 = (void *)v11[3];
    if (v20)
    {
      if (v20 == (void *)1)
      {
        v21 = (void *)v11[5];
        if (v21)
        {
          v22 = (id)v11[5];
        }
        else
        {
          v22 = objc_msgSend((id)objc_opt_self(), sel_success);
          v21 = 0;
        }
        v24 = (void *)v11[2];
        v25 = v21;
        objc_msgSend(v24, sel_receiveCompletion_, v22);
      }
      else
      {
        v23 = v20;
        objc_msgSend(v23, sel_requestDemand_, v13);
        v22 = v23;
        sub_1CB785AB8(v20);

      }
    }
  }
}

void sub_1CB7B5040(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;

  v4 = a1;
  sub_1CB7B4D00(a3);

}

id sub_1CB7B5080(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;

  v1 = a1;
  v2 = sub_1CB7B50E0();

  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EE28);
    v3 = (void *)sub_1CB846A44();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

uint64_t sub_1CB7B50E0()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;

  v1 = *(void **)(*(_QWORD *)(v0 + qword_1EF99EE20) + 24);
  if ((unint64_t)v1 < 2)
    return 0;
  v2 = objc_msgSend(v1, sel_upstreamSubscriptions);
  if (!v2)
  {
    sub_1CB785AB8(v1);
    return 0;
  }
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EE28);
  v4 = sub_1CB846A5C();
  sub_1CB785AB8(v1);

  return v4;
}

void sub_1CB7B5174()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + qword_1EF99EE20);
  v2 = *(void **)(v1 + 24);
  if ((unint64_t)v2 >= 2)
    v3 = v2;
  else
    v3 = 0;
  *(_QWORD *)(v1 + 24) = 1;
  sub_1CB785AB8(v2);
  objc_msgSend(v3, sel_cancel);

}

void sub_1CB7B51E0(void *a1)
{
  id v1;

  v1 = a1;
  sub_1CB7B5174();

}

void sub_1CB7B5214()
{
  sub_1CB7B5364();
}

id sub_1CB7B5230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)_s28DownstreamBufferSubscriptionCMa(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1CB7B527C()
{
  return swift_release();
}

uint64_t _s28DownstreamBufferSubscriptionCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s28DownstreamBufferSubscriptionCMn);
}

uint64_t sub_1CB7B5298()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1CB7B5308()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_1CB785AB8(*(id *)(v0 + 24));

  swift_release();
  return v0;
}

uint64_t sub_1CB7B533C()
{
  sub_1CB7B5308();
  return swift_deallocClassInstance();
}

uint64_t _s21DownstreamBufferStateCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s21DownstreamBufferStateCMn);
}

void sub_1CB7B5364()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1CB7B5390(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BCA8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CB846084();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CB846018();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(a2, sel_timestampInNanoseconds);
  objc_msgSend(a3, sel_timeIntervalSince1970);
  sub_1CB845FE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v18 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(&v8[*(int *)(v18 + 20)], v16, v13);
  *(_QWORD *)v8 = v17;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 0, 1, v18);
  swift_beginAccess();
  sub_1CB80DFC4((uint64_t)v8, (uint64_t)v12);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

id sub_1CB7B554C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  id result;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BCA8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  v9 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v48 = (uint64_t *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CB846084();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v18 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v18 + 16))
    goto LABEL_19;
  swift_bridgeObjectRetain();
  v19 = sub_1CB779AD8(a1);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    v39 = sub_1CB846018();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(a2, 1, 1, v39);
  }
  v21 = *(id *)(*(_QWORD *)(v18 + 56) + 8 * v19);
  swift_bridgeObjectRelease();
  v47 = v21;
  v22 = objc_msgSend(v21, sel_clockIdentifier);
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_10:

    v32 = &qword_1ED88D570;
    v33 = (uint64_t)v13;
LABEL_18:
    sub_1CB785B54(v33, v32);
    goto LABEL_19;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, sel_value);
  if (v24)
  {
    v25 = v24;
    v26 = sub_1CB845F94();
    v45 = v8;
    v46 = a2;
    v27 = v26;
    v29 = v28;

    sub_1CB7B601C(v27, v29);
    v30 = v27;
    v31 = v29;
    v8 = v45;
    a2 = v46;
    sub_1CB779034(v30, v31);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    goto LABEL_10;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  swift_beginAccess();
  v34 = *(_QWORD *)(v3 + 16);
  if (!*(_QWORD *)(v34 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, 1, 1, v49);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);

    v32 = &qword_1ED88BCA8;
    v33 = (uint64_t)v8;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v35 = sub_1CB779AD8((uint64_t)v17);
  v36 = v49;
  if ((v37 & 1) != 0)
  {
    sub_1CB780D80(*(_QWORD *)(v34 + 56) + *(_QWORD *)(v9 + 72) * v35, (uint64_t)v8);
    v38 = 0;
  }
  else
  {
    v38 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, v38, 1, v36);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v36) == 1)
    goto LABEL_17;
  v41 = v48;
  sub_1CB780DC4((uint64_t)v8, (uint64_t)v48);
  v42 = v47;
  result = objc_msgSend(v47, sel_timestampInNanoseconds);
  if (__OFSUB__(result, *v41))
  {
    __break(1u);
  }
  else
  {
    sub_1CB845FD0();

    sub_1CB7B5D24((uint64_t)v41);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v43 = sub_1CB846018();
    return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(a2, 0, 1, v43);
  }
  return result;
}

uint64_t sub_1CB7B5958()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LogicalClockTable()
{
  return objc_opt_self();
}

uint64_t *sub_1CB7B59A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1CB846018();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1CB7B5A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1CB846018();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_1CB7B5A64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1CB846018();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1CB7B5AC0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1CB846018();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1CB7B5B1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1CB846018();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1CB7B5B78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1CB846018();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1CB7B5BD4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB7B5BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_1CB846018();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_1CB7B5C20()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB7B5C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_1CB846018();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t type metadata accessor for LogicalClockTable.DeviceFixedContextTime()
{
  uint64_t result;

  result = qword_1ED88BC98;
  if (!qword_1ED88BC98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CB7B5CAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB846018();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CB7B5D24(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for BiomeSubscribers()
{
  return &type metadata for BiomeSubscribers;
}

uint64_t sub_1CB7B5D70()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1CB7B5DE0()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return v0;
}

uint64_t sub_1CB7B5E0C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Reference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Reference);
}

ValueMetadata *type metadata accessor for EnvironmentFeatureFlags()
{
  return &type metadata for EnvironmentFeatureFlags;
}

uint64_t sub_1CB7B5E6C()
{
  return sub_1CB7B5E84(sub_1CB7EF290);
}

uint64_t sub_1CB7B5E78()
{
  return sub_1CB7B5E84(sub_1CB7EF2A4);
}

uint64_t sub_1CB7B5E84(uint64_t (*a1)(void))
{
  void *v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  uint64_t v10;

  if (objc_msgSend(v1, sel_anyEventType) == 6)
  {
    v3 = objc_msgSend(v1, sel_payload);
    if (v3)
    {
      v4 = sub_1CB845F94();
      v6 = v5;

      v3 = (id)sub_1CB845F88();
      sub_1CB779034(v4, v6);
    }
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A460]), sel_initWithData_, v3);

    v8 = objc_msgSend(v7, sel_event);
    if (!v8)
      return 0;
  }
  else
  {
    v8 = v1;
  }
  v10 = a1();

  return v10;
}

uint64_t static UEIEvents.clientEvent(from:)()
{
  return sub_1CB7B5E84(sub_1CB7EF290);
}

uint64_t sub_1CB7B5FA4()
{
  unint64_t v0;
  uint64_t result;

  v0 = sub_1CB78B2AC((uint64_t)&unk_1E868A310);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EE30);
  result = swift_arrayDestroy();
  qword_1EF9A8970 = v0;
  return result;
}

void static UEIEvents.turnID(_:)(uint64_t a1@<X8>)
{
  sub_1CB7B6494((SEL *)&selRef_eventMetadata, (SEL *)&selRef_turnID, a1);
}

uint64_t static UEIEvents.turnID(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CB7B65B8(a1, (SEL *)&selRef_eventMetadata, (SEL *)&selRef_turnID, a2);
}

void sub_1CB7B601C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_1CB846084();
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1CB7B609C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  if (BYTE6(v5) != 16)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v2, 1, 1, v1);
  if (!a1)
  {
    *(_QWORD *)(v7 - 94) = v4;
    *(_WORD *)(v7 - 86) = v5;
    *(_BYTE *)(v7 - 84) = BYTE2(v5);
    *(_BYTE *)(v7 - 83) = BYTE3(v5);
    *(_BYTE *)(v7 - 82) = BYTE4(v5);
    *(_BYTE *)(v7 - 81) = BYTE5(v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v7 - 94, v1);
    goto LABEL_13;
  }
  if (a1 != 1)
  {
    v13 = *(_QWORD *)(v4 + 16);
    swift_retain();
    swift_retain();
    v14 = sub_1CB845E2C();
    if (!v14)
    {
LABEL_18:
      sub_1CB845E38();
      __break(1u);
      JUMPOUT(0x1CB7B62B0);
    }
    v15 = v14;
    v16 = sub_1CB845E44();
    v17 = __OFSUB__(v13, v16);
    v18 = v13 - v16;
    if (!v17)
    {
      sub_1CB845E38();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v15 + v18, v1);
      swift_release();
      swift_release();
      goto LABEL_13;
    }
    goto LABEL_15;
  }
  if ((int)v4 > v4 >> 32)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1CB7A81D8(v4, v5);
  v8 = sub_1CB845E2C();
  if (!v8)
  {
LABEL_17:
    sub_1CB845E38();
    __break(1u);
    goto LABEL_18;
  }
  v9 = v8;
  v10 = sub_1CB845E44();
  v11 = (int)v4 - v10;
  if (__OFSUB__((int)v4, v10))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1CB845E38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v9 + v11, v1);
  sub_1CB779034(v4, v5);
LABEL_13:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v3, v1);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v2, 0, 1, v1);
}

uint64_t static UEIEvents.dialogID(_:)(uint64_t a1)
{
  return sub_1CB7B62DC(a1, (uint64_t (*)(void))_s28SiriPrivateLearningAnalytics9UEIEventsO8dialogIDySSSgSo19SISchemaClientEventCFZ_0);
}

uint64_t static UEIEvents.dialogPhase(_:)(uint64_t a1)
{
  return sub_1CB7B62DC(a1, (uint64_t (*)(void))_s28SiriPrivateLearningAnalytics9UEIEventsO11dialogPhaseySSSgSo19SISchemaClientEventCFZ_0);
}

uint64_t sub_1CB7B62DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v3 = sub_1CB7B5E84(sub_1CB7EF290);
  if (!v3)
    return 0;
  v4 = (void *)v3;
  v5 = a2();

  return v5;
}

void *static UEIEvents.dismissalReason(_:)()
{
  void *result;
  void *v1;
  id v2;
  void *v3;
  id v4;
  signed int v5;

  result = (void *)sub_1CB7B5E84(sub_1CB7EF290);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_uiStateTransition);
    if (v2 && (v3 = v2, v4 = objc_msgSend(v2, sel_dismissed), v3, v4))
    {
      v5 = objc_msgSend(v4, sel_dismissalReason);

      return (void *)v5;
    }
    else
    {

      return 0;
    }
  }
  return result;
}

id static UEIEvents.dismissalReason(_:)(void *a1)
{
  id result;
  void *v2;
  id v3;
  signed int v4;

  result = objc_msgSend(a1, sel_uiStateTransition);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, sel_dismissed);

    if (v3)
    {
      v4 = objc_msgSend(v3, sel_dismissalReason);

      return (id)v4;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t static UEIEvents.dismissalReasonAsString(_:)(uint64_t a1)
{
  return sub_1CB7B62DC(a1, (uint64_t (*)(void))_s28SiriPrivateLearningAnalytics9UEIEventsO23dismissalReasonAsStringySSSgSo19SISchemaClientEventCFZ_0);
}

void static UEIEvents.previousTurnID(_:)(uint64_t a1@<X8>)
{
  sub_1CB7B6494((SEL *)&selRef_clientConversationTrace, (SEL *)&selRef_previousTurnID, a1);
}

void sub_1CB7B6494(SEL *a1@<X1>, SEL *a2@<X2>, uint64_t a3@<X8>)
{
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v6 = (void *)sub_1CB7B5E84(sub_1CB7EF290);
  if (v6)
  {
    v15 = v6;
    v7 = objc_msgSend(v6, *a1);
    if (v7 && (v8 = v7, v9 = objc_msgSend(v7, *a2), v8, v9))
    {
      v10 = sub_1CB845F94();
      v12 = v11;

      sub_1CB7B601C(v10, v12);
      sub_1CB779034(v10, v12);
    }
    else
    {
      v14 = sub_1CB846084();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a3, 1, 1, v14);
    }

  }
  else
  {
    v13 = sub_1CB846084();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
}

uint64_t static UEIEvents.previousTurnID(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CB7B65B8(a1, (SEL *)&selRef_clientConversationTrace, (SEL *)&selRef_previousTurnID, a2);
}

uint64_t sub_1CB7B65B8@<X0>(void *a1@<X0>, SEL *a2@<X1>, SEL *a3@<X2>, uint64_t a4@<X8>)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v6 = objc_msgSend(a1, *a2);
  if (v6 && (v7 = v6, v8 = objc_msgSend(v6, *a3), v7, v8))
  {
    v9 = sub_1CB845F94();
    v11 = v10;

    sub_1CB7B601C(v9, v11);
    return sub_1CB779034(v9, v11);
  }
  else
  {
    v13 = sub_1CB846084();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a4, 1, 1, v13);
  }
}

void *_s28SiriPrivateLearningAnalytics9UEIEventsO8dialogIDySSSgSo19SISchemaClientEventCFZ_0(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;

  v2 = objc_msgSend(a1, sel_uufrShown);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_dialogIdentifier);

    if (v4)
    {
LABEL_5:
      v6 = (void *)sub_1CB8468A0();

      return v6;
    }
  }
  v5 = objc_msgSend(a1, sel_uufrSaid);
  v6 = v5;
  if (v5)
  {
    v4 = objc_msgSend(v5, sel_dialogIdentifier);

    if (!v4)
      return 0;
    goto LABEL_5;
  }
  return v6;
}

id _s28SiriPrivateLearningAnalytics9UEIEventsO11dialogPhaseySSSgSo19SISchemaClientEventCFZ_0(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_msgSend(a1, sel_uufrSaid);
  v2 = v1;
  if (!v1)
    return 0;
  v3 = objc_msgSend(v1, sel_siriResponseContext);

  if (v3)
  {
    v4 = objc_msgSend(v3, sel_dialogPhase);

    if (v4)
    {
      v3 = (id)sub_1CB8468A0();

    }
    else
    {
      return 0;
    }
  }
  return v3;
}

void *_s28SiriPrivateLearningAnalytics9UEIEventsO23dismissalReasonAsStringySSSgSo19SISchemaClientEventCFZ_0(void *a1)
{
  id v1;
  void *v2;
  id v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v1 = objc_msgSend(a1, sel_uiStateTransition);
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_dismissed);

    if (v3)
    {
      v4 = objc_msgSend(v3, sel_dismissalReason);

      if (qword_1EF99C390 != -1)
        swift_once();
      swift_beginAccess();
      v5 = qword_1EF9A8970;
      if (*(_QWORD *)(qword_1EF9A8970 + 16) && (v6 = sub_1CB779AD4(v4), (v7 & 1) != 0))
      {
        v2 = *(void **)(*(_QWORD *)(v5 + 56) + 16 * v6);
        swift_bridgeObjectRetain();
      }
      else
      {
        v2 = 0;
      }
      swift_endAccess();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

ValueMetadata *type metadata accessor for UEIEvents()
{
  return &type metadata for UEIEvents;
}

Swift::String_optional __swiftcall UniversalEntity.getName()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  Swift::String_optional result;

  swift_retain();
  v0 = sub_1CB7B696C();
  v2 = v1;
  swift_release();
  v3 = v0;
  v4 = v2;
  result.value._object = v4;
  result.value._countAndFlagsBits = v3;
  return result;
}

uint64_t sub_1CB7B696C()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1CB8462E8();
  if (!v0)
    return 0;
  v1 = v0;
  v2 = v0 & 0xFFFFFFFFFFFFFF8;
  if (!(v0 >> 62))
  {
    if (*(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_10;
  }
  if (!sub_1CB847044())
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_4:
  if ((v1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1D179F320](0, v1);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    v5 = sub_1CB7B6A8C();
    if (v6)
    {
      v7 = sub_1CB7B6DD8();
      if (v8)
      {
        v9 = v7;
        swift_bridgeObjectRetain();
        sub_1CB846954();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    return v5;
  }
  v3 = *(_QWORD *)(v2 + 16);
  result = swift_bridgeObjectRelease();
  if (v3)
    goto LABEL_6;
  __break(1u);
  return result;
}

unint64_t sub_1CB7B6A8C()
{
  unint64_t result;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  result = sub_1CB8462E8();
  if (!result)
    return result;
  v1 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1CB847044();
    if (v2)
      goto LABEL_4;
  }
  else
  {
    v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_4:
      if (v2 < 1)
      {
        __break(1u);
        result = swift_release();
        __break(1u);
        return result;
      }
      v3 = 0;
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        if ((v1 & 0xC000000000000001) != 0)
          MEMORY[0x1D179F320](v3, v1);
        else
          swift_retain();
        sub_1CB846324();
        if (v25)
        {
          v5 = sub_1CB8468E8();
          v7 = v6;
          swift_release();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v4 = sub_1CB78F3EC(0, v4[2] + 1, 1, v4);
          v9 = v4[2];
          v8 = v4[3];
          if (v9 >= v8 >> 1)
            v4 = sub_1CB78F3EC((_QWORD *)(v8 > 1), v9 + 1, 1, v4);
          v4[2] = v9 + 1;
          v10 = &v4[2 * v9];
          v10[4] = v5;
          v10[5] = v7;
        }
        else
        {
          swift_release();
        }
        ++v3;
      }
      while (v2 != v3);
      goto LABEL_19;
    }
  }
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_19:
  swift_bridgeObjectRelease_n();
  v11 = v4[2];
  if (v11)
  {
    v12 = v4 + 5;
    v13 = MEMORY[0x1E0DEE9D8];
    do
    {
      v18 = *(v12 - 1);
      v17 = *v12;
      v19 = HIBYTE(*v12) & 0xF;
      if ((*v12 & 0x2000000000000000) == 0)
        v19 = v18 & 0xFFFFFFFFFFFFLL;
      if (v19)
      {
        swift_bridgeObjectRetain();
        v24 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CB776040(0, *(_QWORD *)(v13 + 16) + 1, 1);
          v13 = v24;
        }
        v15 = *(_QWORD *)(v13 + 16);
        v14 = *(_QWORD *)(v13 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_1CB776040(v14 > 1, v15 + 1, 1);
          v13 = v24;
        }
        *(_QWORD *)(v13 + 16) = v15 + 1;
        v16 = v13 + 16 * v15;
        *(_QWORD *)(v16 + 32) = v18;
        *(_QWORD *)(v16 + 40) = v17;
      }
      v12 += 2;
      --v11;
    }
    while (v11);
  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v24 = v13;
  swift_retain();
  sub_1CB7B7594(&v24);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A728);
  sub_1CB79D0B0();
  v20 = sub_1CB846858();
  v22 = v21;
  swift_release();
  v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v23 = v20 & 0xFFFFFFFFFFFFLL;
  if (v23)
  {
    v24 = 34;
    v25 = 0xE100000000000000;
    sub_1CB846954();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    return v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1CB7B6DD8()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = sub_1CB8462DC();
  if (result)
  {
    v1 = result;
    swift_retain();
    sub_1CB7B82CC(v1);
    swift_bridgeObjectRelease();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A728);
    sub_1CB79D0B0();
    v2 = sub_1CB846858();
    v4 = v3;
    swift_bridgeObjectRelease();
    v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0)
      v5 = v2 & 0xFFFFFFFFFFFFLL;
    if (v5)
    {
      sub_1CB846954();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1CB846954();
      swift_bridgeObjectRelease();
      return 91;
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1CB7B6EF8(char *a1, char *a2)
{
  return sub_1CB80C1C8(*a1, *a2);
}

uint64_t sub_1CB7B6F04()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB7B6F7C()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7B6FD0()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB7B7044@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1CB8470B0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1CB7B70A0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1702060386;
  if (*v1)
    v2 = 0x64616F6C796170;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1CB7B70D8()
{
  _BYTE *v0;

  if (*v0)
    return 0x64616F6C796170;
  else
    return 1702060386;
}

uint64_t sub_1CB7B710C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1CB8470B0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1CB7B716C()
{
  sub_1CB7B8588();
  return sub_1CB84738C();
}

uint64_t sub_1CB7B7194()
{
  sub_1CB7B8588();
  return sub_1CB847398();
}

_QWORD *sub_1CB7B71BC@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_1CB7B71D0()
{
  sub_1CB7B89C8();
  return sub_1CB846A2C();
}

uint64_t sub_1CB7B722C()
{
  sub_1CB7B89C8();
  return sub_1CB846A14();
}

uint64_t UniversalEntity.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];
  char v11;
  char v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EE38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB7B8588();
  sub_1CB847338();
  if (!v2)
  {
    v12 = 0;
    sub_1CB7B85CC();
    sub_1CB8470EC();
    sub_1CB8462F4();
    v11 = 1;
    sub_1CB7B8654(&qword_1EF99EE50, MEMORY[0x1E0DA0448]);
    sub_1CB8470EC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t UniversalEntity.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EE58);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB7B8588();
  sub_1CB847350();
  v12 = 0;
  sub_1CB7B8610();
  swift_retain();
  sub_1CB847134();
  if (!v2)
  {
    v10[1] = v8;
    v11 = 1;
    sub_1CB8462F4();
    sub_1CB7B8654(&qword_1EF99EE68, MEMORY[0x1E0DA0440]);
    sub_1CB847134();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_release();
}

uint64_t sub_1CB7B756C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return UniversalEntity.init(from:)(a1, a2);
}

uint64_t sub_1CB7B7580(_QWORD *a1)
{
  return UniversalEntity.encode(to:)(a1);
}

uint64_t sub_1CB7B7594(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1CB7B82A4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1CB7B75FC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1CB7B75FC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1CB847158();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1CB7B7CE4(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1CB7B7DB0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1CB7B8290((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1CB846ABC();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1CB8471A0();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1CB8471A0()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1CB7B8048(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1CB7B8048((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1CB7B7DB0((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1CB8471A0() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1CB847038();
  __break(1u);
  return result;
}

uint64_t sub_1CB7B7CE4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1CB8471A0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1CB7B7DB0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1CB8471A0() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1CB8471A0() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1CB7B8140((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1CB847074();
  __break(1u);
  return result;
}

char *sub_1CB7B8048(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EE98);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1CB7B8140(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1CB847074();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1CB7B81E8(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1CB847074();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1CB7B8290(uint64_t a1)
{
  return sub_1CB7B8048(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1CB7B82A4(uint64_t a1)
{
  return sub_1CB7765D4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1CB7B82B8()
{
  JUMPOUT(0x1D179F50CLL);
}

_QWORD *sub_1CB7B82CC(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v2 = sub_1CB847044();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      for (i = 4; ; ++i)
      {
        v5 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1D179F320](i - 4, a1);
          v6 = i - 3;
          if (__OFADD__(v5, 1))
            goto LABEL_19;
        }
        else
        {
          swift_retain();
          v6 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        sub_1CB846324();
        if (v14)
        {
          v7 = sub_1CB7B6A8C();
          v9 = v8;
          swift_release();
          swift_release();
          if (v9)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v3 = sub_1CB78F3EC(0, v3[2] + 1, 1, v3);
            v11 = v3[2];
            v10 = v3[3];
            if (v11 >= v10 >> 1)
              v3 = sub_1CB78F3EC((_QWORD *)(v10 > 1), v11 + 1, 1, v3);
            v3[2] = v11 + 1;
            v12 = &v3[2 * v11];
            v12[4] = v7;
            v12[5] = v9;
          }
        }
        else
        {
          swift_release();
        }
        if (v6 == v2)
        {
          swift_bridgeObjectRelease();
          return v3;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

uint64_t _s28SiriPrivateLearningAnalytics15UniversalEntityO2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  swift_retain();
  v0 = sub_1CB7B696C();
  v2 = v1;
  swift_release();
  swift_retain();
  v3 = sub_1CB7B696C();
  v5 = v4;
  swift_release();
  if (v2)
  {
    if (v5)
    {
      if (v0 == v3 && v2 == v5)
      {
        swift_bridgeObjectRelease();
        v6 = 1;
      }
      else
      {
        v6 = sub_1CB8471A0();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v6 = 0;
    }
  }
  else
  {
    if (!v5)
    {
      v6 = 1;
      return v6 & 1;
    }
    v6 = 0;
  }
  swift_bridgeObjectRelease();
  return v6 & 1;
}

unint64_t sub_1CB7B8588()
{
  unint64_t result;

  result = qword_1EF99EE40;
  if (!qword_1EF99EE40)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84B9C4, &type metadata for UniversalEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99EE40);
  }
  return result;
}

unint64_t sub_1CB7B85CC()
{
  unint64_t result;

  result = qword_1EF99EE48;
  if (!qword_1EF99EE48)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84B99C, &type metadata for UniversalEntity.Base);
    atomic_store(result, (unint64_t *)&qword_1EF99EE48);
  }
  return result;
}

unint64_t sub_1CB7B8610()
{
  unint64_t result;

  result = qword_1EF99EE60;
  if (!qword_1EF99EE60)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84B974, &type metadata for UniversalEntity.Base);
    atomic_store(result, (unint64_t *)&qword_1EF99EE60);
  }
  return result;
}

uint64_t sub_1CB7B8654(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1CB8462F4();
    result = MEMORY[0x1D179FD88](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *__swift_initWithCopy_strong(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t __swift_destroy_strong()
{
  return swift_release();
}

_QWORD *__swift_assignWithCopy_strong(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *__swift_assignWithTake_strong(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for UniversalEntity()
{
  return &type metadata for UniversalEntity;
}

uint64_t storeEnumTagSinglePayload for UniversalEntity.Base(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CB7B8780 + 4 * asc_1CB84B710[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CB7B87A0 + 4 * byte_1CB84B715[v4]))();
}

_BYTE *sub_1CB7B8780(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CB7B87A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CB7B87A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CB7B87B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CB7B87B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CB7B87C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for UniversalEntity.Base()
{
  return &type metadata for UniversalEntity.Base;
}

uint64_t storeEnumTagSinglePayload for UniversalEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CB7B8828 + 4 * byte_1CB84B71F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CB7B885C + 4 * byte_1CB84B71A[v4]))();
}

uint64_t sub_1CB7B885C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7B8864(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB7B886CLL);
  return result;
}

uint64_t sub_1CB7B8878(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB7B8880);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CB7B8884(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7B888C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UniversalEntity.CodingKeys()
{
  return &type metadata for UniversalEntity.CodingKeys;
}

unint64_t sub_1CB7B88AC()
{
  unint64_t result;

  result = qword_1EF99EE70;
  if (!qword_1EF99EE70)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84B8AC, &type metadata for UniversalEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99EE70);
  }
  return result;
}

unint64_t sub_1CB7B88F4()
{
  unint64_t result;

  result = qword_1EF99EE78;
  if (!qword_1EF99EE78)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84B94C, &type metadata for UniversalEntity.Base);
    atomic_store(result, (unint64_t *)&qword_1EF99EE78);
  }
  return result;
}

unint64_t sub_1CB7B893C()
{
  unint64_t result;

  result = qword_1EF99EE80;
  if (!qword_1EF99EE80)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84B7E4, &type metadata for UniversalEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99EE80);
  }
  return result;
}

unint64_t sub_1CB7B8984()
{
  unint64_t result;

  result = qword_1EF99EE88;
  if (!qword_1EF99EE88)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84B80C, &type metadata for UniversalEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99EE88);
  }
  return result;
}

unint64_t sub_1CB7B89C8()
{
  unint64_t result;

  result = qword_1EF99EE90;
  if (!qword_1EF99EE90)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84B8D4, &type metadata for UniversalEntity.Base);
    atomic_store(result, (unint64_t *)&qword_1EF99EE90);
  }
  return result;
}

uint64_t SiriUserFeedbackLearningMLRuntimePlugin.init(bundleIdentifier:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin() + 20);
  v6 = sub_1CB845F58();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v5, a3, v6);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
}

uint64_t type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin()
{
  uint64_t result;

  result = qword_1ED888728;
  if (!qword_1ED888728)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SiriUserFeedbackLearningMLRuntimePlugin.bundleIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriUserFeedbackLearningMLRuntimePlugin.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin() + 20);
  return sub_1CB7B8B18(v3, a1);
}

uint64_t sub_1CB7B8B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SiriUserFeedbackLearningMLRuntimePlugin.init(bundleIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v3;
  uint64_t v4;

  *a3 = a1;
  a3[1] = a2;
  v3 = (char *)a3 + *(int *)(type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin() + 20);
  v4 = sub_1CB845F58();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
}

uint64_t SiriUserFeedbackLearningMLRuntimePlugin.perform(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  return swift_task_switch();
}

uint64_t sub_1CB7B8BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v17[2];

  if (qword_1ED88E518 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = sub_1CB8466D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED890248);
  sub_1CB7A0634(v1, v0 + 16);
  v3 = sub_1CB8466C0();
  v4 = sub_1CB846C84();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v14 = v6;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 128) = sub_1CB775A54(0x286D726F66726570, 0xEB00000000293A5FLL, &v14);
    sub_1CB846E58();
    *(_WORD *)(v5 + 12) = 2080;
    sub_1CB7A0634(v0 + 16, v0 + 72);
    v17[0] = 0;
    v17[1] = 0xE000000000000000;
    sub_1CB846F30();
    v15 = v17[0];
    v16 = v17[1];
    sub_1CB846954();
    strcpy((char *)v17, "triggerType: ");
    HIWORD(v17[1]) = -4864;
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    v7 = *(id *)(v0 + 80);
    v8 = objc_msgSend(v7, sel_description);
    sub_1CB8468A0();

    sub_1CB846954();
    swift_bridgeObjectRelease();

    v9 = v15;
    v10 = v16;
    sub_1CB7A0670(v0 + 72);
    *(_QWORD *)(v0 + 136) = sub_1CB775A54(v9, v10, &v14);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    sub_1CB7A0670(v0 + 16);
    _os_log_impl(&dword_1CB771000, v3, v4, "SiriUserFeedbackLearningMLRuntimePlugin.%s task: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v6, -1, -1);
    MEMORY[0x1D179FE84](v5, -1, -1);
  }
  else
  {
    sub_1CB7A0670(v0 + 16);
  }

  v11 = swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v11;
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(v0 + 152);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v12;
  *v12 = v0;
  v12[1] = sub_1CB7B8F9C;
  return sub_1CB847188();
}

uint64_t sub_1CB7B8F9C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_1CB7B8FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED888760);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (void *)objc_opt_self();
  v8 = *(_QWORD *)(a2 + 8);
  v9 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1CB7B9F78;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB7A1484;
  aBlock[3] = &block_descriptor_9_1;
  v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v7, sel_performTask_forPluginID_completionHandler_, v8, v9, v12);
  _Block_release(v12);

}

uint64_t sub_1CB7B9154(void *a1, void *a2)
{
  id v4;
  id v5;
  __int128 v7;

  v4 = a1;
  v5 = a2;
  SiriUserFeedbackLearningTaskResult.init(mlrTaskResult:error:)(a1, a2, (unint64_t *)&v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED888760);
  return sub_1CB846B34();
}

void SiriUserFeedbackLearningMLRuntimePlugin.perform(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[7];
  uint64_t v23;
  _QWORD aBlock[8];

  if (qword_1ED88E518 != -1)
    swift_once();
  v6 = sub_1CB8466D8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED890248);
  sub_1CB7A0634(a1, (uint64_t)aBlock);
  v7 = sub_1CB8466C0();
  v8 = sub_1CB846C84();
  if (os_log_type_enabled(v7, v8))
  {
    v21 = a3;
    v9 = swift_slowAlloc();
    v20 = a2;
    v10 = swift_slowAlloc();
    v23 = v10;
    *(_DWORD *)v9 = 136315394;
    v22[0] = sub_1CB775A54(0xD000000000000016, 0x80000001CB853CF0, &v23);
    sub_1CB846E58();
    *(_WORD *)(v9 + 12) = 2080;
    sub_1CB7A0634((uint64_t)aBlock, (uint64_t)v22);
    sub_1CB846F30();
    sub_1CB846954();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    v11 = (id)v22[1];
    v12 = objc_msgSend(v11, sel_description);
    sub_1CB8468A0();

    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB7A0670((uint64_t)v22);
    v22[0] = sub_1CB775A54(0, 0xE000000000000000, &v23);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    sub_1CB7A0670((uint64_t)aBlock);
    _os_log_impl(&dword_1CB771000, v7, v8, "SiriUserFeedbackLearningMLRuntimePlugin.%s task: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    v13 = v10;
    a2 = v20;
    MEMORY[0x1D179FE84](v13, -1, -1);
    v14 = v9;
    a3 = v21;
    MEMORY[0x1D179FE84](v14, -1, -1);
  }
  else
  {
    sub_1CB7A0670((uint64_t)aBlock);
  }

  v15 = (void *)objc_opt_self();
  v16 = *(_QWORD *)(a1 + 8);
  v17 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  aBlock[4] = sub_1CB7B9740;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB7A1484;
  aBlock[3] = &block_descriptor_4;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_performTask_forPluginID_completionHandler_, v16, v17, v19);
  _Block_release(v19);

}

void sub_1CB7B95DC(void *a1, void *a2, void (*a3)(_QWORD *))
{
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;

  v6 = a1;
  v7 = a2;
  SiriUserFeedbackLearningTaskResult.init(mlrTaskResult:error:)(a1, a2, (unint64_t *)&v13);
  v8 = v13;
  v9 = v14;
  v11 = v15;
  v10 = v16;
  v12[0] = v13;
  v12[1] = v14;
  v12[2] = v15;
  v12[3] = v16;
  a3(v12);
  sub_1CB78A590(v8, v9);

}

uint64_t sub_1CB7B9664()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1CB7B9690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1CB7B8B18(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_1CB7B96A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1CB785488;
  v6[19] = a2;
  v6[20] = v2;
  v6[18] = a1;
  return swift_task_switch();
}

void sub_1CB7B9714(uint64_t a1)
{
  uint64_t v1;

  sub_1CB7B8FEC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1CB7B971C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1CB7B9740(void *a1, void *a2)
{
  uint64_t v2;

  sub_1CB7B95DC(a1, a2, *(void (**)(_QWORD *))(v2 + 16));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlugin.bundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlugin.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlugin.perform(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CB785DF4;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlugin.perform(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t *initializeBufferWithCopyOfBuffer for SiriUserFeedbackLearningMLRuntimePlugin(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1CB845F58();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for SiriUserFeedbackLearningMLRuntimePlugin(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1CB845F58();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for SiriUserFeedbackLearningMLRuntimePlugin(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1CB845F58();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for SiriUserFeedbackLearningMLRuntimePlugin(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1CB845F58();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for SiriUserFeedbackLearningMLRuntimePlugin(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1CB845F58();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for SiriUserFeedbackLearningMLRuntimePlugin(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1CB845F58();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningMLRuntimePlugin()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB7B9D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningMLRuntimePlugin()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CB7B9DD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1CB7B9E4C()
{
  unint64_t v0;

  sub_1CB7B9EC0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1CB7B9EC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED888720)
  {
    sub_1CB845F58();
    v0 = sub_1CB846E40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED888720);
  }
}

uint64_t sub_1CB7B9F14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED888760);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CB7B9F78(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED888760);
  return sub_1CB7B9154(a1, a2);
}

_QWORD *UniversalSuggestionsStoreRuntimeQueryWrapper.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v0 = static Config.universalSuggestionsStoreFilePath.getter();
  v2 = v1;
  v3 = type metadata accessor for UniversalSuggestionsStoreCoreData();
  swift_allocObject();
  v4 = sub_1CB80165C(v0, v2, 0);
  if (v4)
  {
    v5 = v4;
    type metadata accessor for UniversalSuggestionsStoreRuntimeQueryWrapper();
    result = (_QWORD *)swift_allocObject();
    result[5] = v3;
    result[6] = &protocol witness table for UniversalSuggestionsStoreCoreData;
    result[2] = v5;
  }
  else
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v7 = sub_1CB8466D8();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED890248);
    v8 = sub_1CB8466C0();
    v9 = sub_1CB846C90();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1CB771000, v8, v9, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Failed to initialise Universal Suggestions store", v10, 2u);
      MEMORY[0x1D179FE84](v10, -1, -1);
    }

    return 0;
  }
  return result;
}

uint64_t *UniversalSuggestionsStoreRuntimeQueryWrapper.__allocating_init(store:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = sub_1CB7BA99C(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v6;
}

uint64_t *UniversalSuggestionsStoreRuntimeQueryWrapper.init(store:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_1CB7BA94C((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v9;
}

uint64_t sub_1CB7BA1F8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  char *v55;
  os_signpost_type_t v56;
  uint64_t v57;
  const char *v58;
  uint8_t *v59;
  os_signpost_id_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[2];
  uint64_t v77;

  v3 = v2;
  v71 = a2;
  v64 = sub_1CB846684();
  v74 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v73 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for UniversalCandidate(0);
  MEMORY[0x1E0C80A78](v66);
  v65 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EEB8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v63 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v63 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v63 - v17;
  v19 = sub_1CB846654();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v72 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v63 - v23;
  v25 = *a1;
  if (qword_1EF99C3A0 != -1)
    swift_once();
  v26 = sub_1CB846678();
  v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EF9A8990);
  sub_1CB84666C();
  sub_1CB846630();
  v67 = v27;
  v69 = sub_1CB7BE7AC("runUniversalSuggestionsQuery", 28, 2, (uint64_t)v24);
  v70 = v20;
  v28 = *(void (**)(char *, uint64_t))(v20 + 8);
  v75 = v19;
  v68 = v28;
  v28(v24, v19);
  v29 = v3 + 2;
  v31 = v3[5];
  v30 = v3[6];
  __swift_project_boxed_opaque_existential_1(v29, v31);
  v76[0] = v25;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v30 + 24))(v76, v31, v30);
  if (qword_1ED88E518 != -1)
    swift_once();
  v32 = sub_1CB8466D8();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED890248);
  sub_1CB7BAA48((uint64_t)v18, (uint64_t)v16);
  v33 = sub_1CB8466C0();
  v34 = sub_1CB846C84();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v63 = swift_slowAlloc();
    v77 = v63;
    *(_DWORD *)v35 = 136315138;
    sub_1CB7BAA48((uint64_t)v16, (uint64_t)v13);
    v36 = type metadata accessor for UniversalSuggestionCandidate(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v13, 1, v36) == 1)
    {
      sub_1CB7BAA90((uint64_t)v13);
      v37 = 0;
      v38 = 0;
    }
    else
    {
      v39 = (uint64_t)&v13[*(int *)(v36 + 24)];
      v40 = v65;
      sub_1CB795700(v39, v65);
      sub_1CB7BAB18((uint64_t)v13, type metadata accessor for UniversalSuggestionCandidate);
      v41 = *(_QWORD *)(v40 + *(int *)(v66 + 20));
      swift_retain();
      sub_1CB7BAB18(v40, type metadata accessor for UniversalCandidate);
      v76[0] = v41;
      swift_retain();
      v37 = sub_1CB7B696C();
      v38 = v42;
      swift_release_n();
    }
    v76[0] = v37;
    v76[1] = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EEC0);
    v43 = sub_1CB8468DC();
    v76[0] = sub_1CB775A54(v43, v44, &v77);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    sub_1CB7BAA90((uint64_t)v16);
    _os_log_impl(&dword_1CB771000, v33, v34, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Found %s", v35, 0xCu);
    v45 = v63;
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v45, -1, -1);
    MEMORY[0x1D179FE84](v35, -1, -1);
  }
  else
  {
    sub_1CB7BAA90((uint64_t)v16);
  }

  sub_1CB7BAAD0((uint64_t)v18, (uint64_t)v10);
  v46 = type metadata accessor for UniversalSuggestionCandidate(0);
  v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v10, 1, v46);
  v48 = v74;
  v49 = v75;
  v50 = v73;
  v51 = v70;
  if (v47 == 1)
  {
    sub_1CB7BAA90((uint64_t)v10);
    v52 = 0;
  }
  else
  {
    v53 = v65;
    sub_1CB795700((uint64_t)&v10[*(int *)(v46 + 24)], v65);
    sub_1CB7BAB18((uint64_t)v10, type metadata accessor for UniversalSuggestionCandidate);
    v52 = *(_QWORD *)(v53 + *(int *)(v66 + 20));
    swift_retain();
    sub_1CB7BAB18(v53, type metadata accessor for UniversalCandidate);
  }
  *v71 = v52;
  v54 = sub_1CB84666C();
  v55 = v72;
  sub_1CB846690();
  v56 = sub_1CB846D5C();
  if ((sub_1CB846E28() & 1) != 0)
  {
    swift_retain();
    sub_1CB8466B4();
    swift_release();
    v57 = v64;
    if ((*(unsigned int (**)(char *, uint64_t))(v48 + 88))(v50, v64) == *MEMORY[0x1E0DF2190])
    {
      v58 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v57);
      v58 = "";
    }
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v24, v55, v49);
    v59 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v59 = 0;
    v60 = sub_1CB84663C();
    _os_signpost_emit_with_name_impl(&dword_1CB771000, v54, v56, v60, "runUniversalSuggestionsQuery", v58, v59, 2u);
    MEMORY[0x1D179FE84](v59, -1, -1);

    v61 = v68;
    v68(v55, v49);
    v61(v24, v49);
  }
  else
  {

    v68(v55, v49);
  }
  return swift_release();
}

uint64_t UniversalSuggestionsStoreRuntimeQueryWrapper.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t UniversalSuggestionsStoreRuntimeQueryWrapper.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UniversalSuggestionsStoreRuntimeQueryWrapper()
{
  return objc_opt_self();
}

uint64_t sub_1CB7BA8BC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (result)
    *a2 = result;
  else
    __break(1u);
  return result;
}

void sub_1CB7BA8CC(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13;

  v13 = sub_1CB84663C();
  _os_signpost_emit_with_name_impl(&dword_1CB771000, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t *sub_1CB7BA94C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;

  a2[5] = a3;
  a2[6] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  return a2;
}

uint64_t *sub_1CB7BA99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UniversalSuggestionsStoreRuntimeQueryWrapper();
  v10 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v10[5] = a3;
  v10[6] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10 + 2);
  (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v9, a3);
  return v10;
}

uint64_t sub_1CB7BAA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EEB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB7BAA90(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EEB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CB7BAAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EEB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB7BAB18(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t method lookup function for UniversalSuggestionsStoreRuntimeQueryWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreRuntimeQueryWrapper.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreRuntimeQueryWrapper.queryEntityWithLogging(query:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t sub_1CB7BAB74(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;

  v4 = a3;
  v19 = MEMORY[0x1E0DEE9D8];
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v16 = v4 & 0xFFFFFFFFFFFFFF8;
      v17 = v4 & 0xC000000000000001;
      v15 = v4;
      while (v17)
      {
        v9 = (id)MEMORY[0x1D179F320](v8, v4);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v18 = v9;
        v12 = a2;
        v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          sub_1CB846FB4();
          sub_1CB846FD8();
          v4 = v15;
          sub_1CB846FE4();
          sub_1CB846FC0();
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v16 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_1CB847044();
      if (!v7)
        goto LABEL_19;
    }
    v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t static NlxSELFUtils.getTopNlxUsoGraph(from:)(unint64_t a1)
{
  unint64_t i;
  uint64_t j;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  unint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  NSObject *v34;
  uint64_t v35;
  unint64_t v36;
  NSObject *v37;
  __objc2_prot_list **v38;
  uint64_t v39;
  uint64_t v40;
  __objc2_prot_list **p_base_prots;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __objc2_prot_list **v45;
  NSObject *v46;
  NSObject *v47;
  double v48;
  double v49;
  double v50;
  NSObject *v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  void *v55;
  unint64_t v56;
  id v57;
  unint64_t v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  BOOL v68;
  unint64_t v69;
  uint8_t *v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t result;
  uint64_t v87;
  unint64_t v88;
  id v89;
  void *v90;
  id v91;
  void *v92;
  id v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  void *v98;
  unint64_t v99;
  id v100;
  void *v101;
  unint64_t v102;
  unint64_t v103;
  id v104;
  id v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  unint64_t v110;
  id v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v6);
  v113 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0DEE9D8];
  v116 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1CB847044();
    v114 = v6;
    if (v9)
    {
LABEL_3:
      if (v9 < 1)
      {
LABEL_135:
        __break(1u);
        goto LABEL_136;
      }
      for (i = 0; i != v9; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v10 = (id)MEMORY[0x1D179F320](i, a1);
        else
          v10 = *(id *)(a1 + 8 * i + 32);
        j = (uint64_t)v10;
        if (objc_msgSend(v10, sel_anyEventType) == 18)
        {
          sub_1CB846FB4();
          sub_1CB846FD8();
          sub_1CB846FE4();
          sub_1CB846FC0();
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v11 = v116;
      v116 = MEMORY[0x1E0DEE9D8];
      if (v11 < 0)
        goto LABEL_32;
      goto LABEL_16;
    }
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v114 = v6;
    if (v9)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  v116 = v8;
  if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
    goto LABEL_32;
LABEL_16:
  if ((v11 & 0x4000000000000000) != 0)
  {
LABEL_32:
    swift_retain();
    v8 = sub_1CB847044();
    if (!v8)
      goto LABEL_33;
    goto LABEL_18;
  }
  v8 = *(_QWORD *)(v11 + 16);
  swift_retain();
  if (!v8)
  {
LABEL_33:
    swift_release();
    v4 = MEMORY[0x1E0DEE9D8];
    goto LABEL_34;
  }
LABEL_18:
  if (v8 < 1)
  {
LABEL_136:
    __break(1u);
    __break(1u);
    goto LABEL_137;
  }
  v3 = 0;
  v115 = v11 & 0xC000000000000001;
  j = v9;
  do
  {
    if (v115)
      v12 = (id)MEMORY[0x1D179F320](v3, v11);
    else
      v12 = *(id *)(v11 + 8 * v3 + 32);
    v13 = v12;
    v14 = a1;
    v15 = objc_msgSend(v12, sel_payload);
    if (v15)
    {
      v16 = v15;
      v17 = sub_1CB845F94();
      i = v11;
      v19 = v18;

      v20 = (void *)sub_1CB845F88();
      v21 = v19;
      v11 = i;
      sub_1CB779034(v17, v21);
    }
    else
    {
      v20 = 0;
    }
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D99E28]), sel_initWithData_, v20);

    a1 = v14;
    v9 = j;
    if (v22)
    {
      MEMORY[0x1D179EDF8]();
      if (*(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1CB846AA4();
      sub_1CB846AD4();
      sub_1CB846A74();
    }
    ++v3;
  }
  while (v8 != v3);
  swift_release();
  v4 = v116;
LABEL_34:
  swift_release();
  v23 = MEMORY[0x1E0DEE9D8];
  v116 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    swift_bridgeObjectRetain();
    for (j = 0; j != v9; ++j)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v24 = (id)MEMORY[0x1D179F320](j, a1);
      else
        v24 = *(id *)(a1 + 8 * j + 32);
      v3 = (uint64_t)v24;
      if (objc_msgSend(v24, sel_anyEventType) == 19)
      {
        sub_1CB846FB4();
        sub_1CB846FD8();
        sub_1CB846FE4();
        sub_1CB846FC0();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v8 = v116;
    v115 = v4;
    v116 = v23;
    if (v8 < 0)
    {
LABEL_62:
      swift_retain();
      v25 = sub_1CB847044();
      if (!v25)
        goto LABEL_63;
      goto LABEL_48;
    }
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
    v115 = v4;
    v116 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_62;
  }
  if ((v8 & 0x4000000000000000) != 0)
    goto LABEL_62;
  v25 = *(_QWORD *)(v8 + 16);
  swift_retain();
  if (!v25)
  {
LABEL_63:
    swift_release();
    v34 = MEMORY[0x1E0DEE9D8];
    goto LABEL_64;
  }
LABEL_48:
  if (v25 < 1)
  {
LABEL_137:
    __break(1u);
    goto LABEL_138;
  }
  j = 0;
  a1 = v8 & 0xC000000000000001;
  do
  {
    if (a1)
      v26 = (id)MEMORY[0x1D179F320](j, v8);
    else
      v26 = *(id *)(v8 + 8 * j + 32);
    v27 = v26;
    v28 = objc_msgSend(v26, sel_payload);
    if (v28)
    {
      v29 = v28;
      v30 = sub_1CB845F94();
      v32 = v31;

      v33 = (void *)sub_1CB845F88();
      sub_1CB779034(v30, v32);
    }
    else
    {
      v33 = 0;
    }
    v3 = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D99F00]), sel_initWithData_, v33);

    if (v3)
    {
      MEMORY[0x1D179EDF8]();
      if (*(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1CB846AA4();
      sub_1CB846AD4();
      sub_1CB846A74();
    }
    ++j;
  }
  while (v25 != j);
  swift_release();
  v4 = v115;
  v34 = v116;
LABEL_64:
  swift_release();
  v8 = (uint64_t)sub_1CB7BBF5C(v4, (unint64_t)v34);
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_149;
  i = v8 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)v8 >> 62))
  {
    v35 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v35)
      goto LABEL_67;
LABEL_142:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_138:
  if (v8 >= 0)
    v34 = i;
  else
    v34 = v8;
  swift_bridgeObjectRetain();
  v35 = sub_1CB847044();
  if (!v35)
    goto LABEL_142;
LABEL_67:
  v36 = v8 & 0xC000000000000001;
  if ((v8 & 0xC000000000000001) != 0)
  {
    v37 = MEMORY[0x1D179F320](0, v8);
  }
  else
  {
    if (!*(_QWORD *)(i + 16))
    {
      __break(1u);
LABEL_145:
      swift_once();
      goto LABEL_72;
    }
    v37 = *(id *)(v8 + 32);
  }
  v34 = v37;
  v38 = (__objc2_prot_list **)(v35 - 1);
  if (v35 != 1)
  {
    if (v35 < 2)
    {
      __break(1u);
LABEL_153:
      swift_bridgeObjectRetain();
      v43 = sub_1CB847044();
      swift_bridgeObjectRelease();
      goto LABEL_76;
    }
    if (!v36)
    {
      v44 = *(_QWORD *)(i + 16);
      if (v44 < 2 || (unint64_t)v38 >= v44)
      {
        __break(1u);
        goto LABEL_155;
      }
    }
    v45 = 0;
    do
    {
      if (v36)
        v46 = MEMORY[0x1D179F320]((char *)v45 + 1, v8);
      else
        v46 = *(id *)(v8 + 8 * (_QWORD)v45 + 40);
      v47 = v46;
      -[NSObject probability](v34, sel_probability);
      v49 = v48;
      -[NSObject probability](v47, sel_probability);
      if (v49 >= v50)
        v51 = v47;
      else
        v51 = v34;
      if (v49 < v50)
        v34 = v47;

      v45 = (__objc2_prot_list **)((char *)v45 + 1);
    }
    while (v38 != v45);
  }
  swift_bridgeObjectRelease_n();
  if (qword_1ED88E518 != -1)
    goto LABEL_145;
LABEL_72:
  v39 = sub_1CB8466D8();
  v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1ED890248);
  a1 = v34;
  v112 = v40;
  v34 = sub_1CB8466C0();
  LOBYTE(v3) = sub_1CB846C84();
  p_base_prots = &SupportedLocalesPListStore.base_prots;
  if (!os_log_type_enabled(v34, (os_log_type_t)v3))
  {

    goto LABEL_95;
  }
  j = swift_slowAlloc();
  v4 = swift_slowAlloc();
  v118 = v4;
  *(_DWORD *)j = 136315138;
  v8 = a1;
  a1 = (unint64_t)objc_msgSend((id)a1, sel_userDialogActs);
  if (!a1)
  {
    v43 = 0;
    goto LABEL_94;
  }
  v38 = &SupportedLocalesPListStore.base_prots;
  sub_1CB777FA8(0, &qword_1ED88BF60);
  v42 = sub_1CB846A5C();

  if (v42 >> 62)
    goto LABEL_153;
  v43 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_76:
  swift_bridgeObjectRelease();
  p_base_prots = v38;
LABEL_94:
  v116 = v43;
  v117 = a1 == 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BEE0);
  v52 = sub_1CB8468DC();
  v116 = sub_1CB775A54(v52, v53, &v118);
  sub_1CB846E58();
  a1 = v8;

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1CB771000, v34, (os_log_type_t)v3, "[NlxSELFUtils] Found %s dialog acts in the top NLX parse", (uint8_t *)j, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1D179FE84](v4, -1, -1);
  MEMORY[0x1D179FE84](j, -1, -1);

LABEL_95:
  v54 = objc_msgSend((id)a1, (SEL)p_base_prots[310]);
  if (!v54)
  {
LABEL_148:

LABEL_149:
    swift_bridgeObjectRelease();
    return 0;
  }
  v55 = v54;
  sub_1CB777FA8(0, &qword_1ED88BF60);
  v56 = sub_1CB846A5C();

  if (v56 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1CB847044();
    if (v3)
      goto LABEL_98;
    goto LABEL_147;
  }
  v3 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_147:
    swift_bridgeObjectRelease_n();
    goto LABEL_148;
  }
LABEL_98:
  i = 4;
  v8 = (uint64_t)&SupportedLocalesPListStore.base_prots;
  v4 = (uint64_t)&SupportedLocalesPListStore.base_prots;
  while (1)
  {
    if ((v56 & 0xC000000000000001) != 0)
      v57 = (id)MEMORY[0x1D179F320](i - 4, v56);
    else
      v57 = *(id *)(v56 + 8 * i);
    j = (uint64_t)v57;
    v58 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_135;
    }
    v59 = objc_msgSend(v57, sel_reference);

    if (v59)
    {
      v60 = objc_msgSend((id)j, sel_userStatedTask);

      if (v60)
        break;
    }

    ++i;
    if (v58 == v3)
      goto LABEL_147;
  }
  swift_bridgeObjectRelease_n();
  v61 = objc_msgSend((id)j, sel_reference);
  if (!v61)
  {
    swift_bridgeObjectRelease();
    v78 = sub_1CB8466C0();
    v79 = sub_1CB846C90();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v80 = 0;
      _os_log_impl(&dword_1CB771000, v78, v79, "[NlxSELFUtils] No USO graph in top dialog act", v80, 2u);
      MEMORY[0x1D179FE84](v80, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  i = (unint64_t)v61;
  v62 = objc_msgSend((id)j, sel_reference);
  v110 = i;
  if (!v62
    || (v63 = v62, v64 = objc_msgSend(v62, sel_linkId), v63, !v64))
  {
    swift_bridgeObjectRelease();
    v77 = MEMORY[0x1E0DEE9D8];
LABEL_178:
    swift_bridgeObjectRetain_n();
    v106 = sub_1CB8466C0();
    v107 = sub_1CB846C84();
    if (os_log_type_enabled(v106, v107))
    {
      v108 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v108 = 134217984;
      if (v77 >> 62)
      {
        swift_bridgeObjectRetain();
        v109 = sub_1CB847044();
        swift_bridgeObjectRelease();
      }
      else
      {
        v109 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v116 = v109;
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v106, v107, "[NlxSELFUtils] Found %ld NLX redaction events", v108, 0xCu);
      MEMORY[0x1D179FE84](v108, -1, -1);

      i = v110;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v95 = static SELFUsoRedactionUtils.joinRedactedSELFUsoGraph(graph:redactions:)((void *)i, v77);
    swift_bridgeObjectRelease();

    return v95;
  }
  v65 = v64;
  v66 = sub_1CB8466C0();
  v67 = sub_1CB846C84();
  v68 = os_log_type_enabled(v66, v67);
  v111 = v65;
  if (v68)
  {
    v69 = a1;
    v70 = (uint8_t *)swift_slowAlloc();
    v71 = swift_slowAlloc();
    v116 = v71;
    *(_DWORD *)v70 = 136315138;
    v72 = objc_msgSend(v65, sel_value);
    v8 = MEMORY[0x1E0DEE9D8];
    if (v72)
    {
      v73 = v72;
      v74 = sub_1CB845F94();
      v76 = v75;

      sub_1CB7B601C(v74, v76);
      sub_1CB779034(v74, v76);
    }
    else
    {
      v81 = sub_1CB846084();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v113, 1, 1, v81);
    }
    v82 = sub_1CB8468DC();
    v118 = sub_1CB775A54(v82, v83, &v116);
    sub_1CB846E58();
    v84 = v111;

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CB771000, v66, v67, "[NlxSELFUtils] Fetching NLX events for link id=%s to reconstruct the graph", v70, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v71, -1, -1);
    MEMORY[0x1D179FE84](v70, -1, -1);

    a1 = v69;
    i = v110;
  }
  else
  {

    v8 = MEMORY[0x1E0DEE9D8];
  }
  v116 = v8;
  if (!(v115 >> 62))
  {
    v85 = *(_QWORD *)((v115 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v85)
      goto LABEL_121;
LABEL_156:
    swift_bridgeObjectRelease();
    v94 = MEMORY[0x1E0DEE9D8];
LABEL_157:
    swift_bridgeObjectRelease();
    v116 = v8;
    if (v94 >> 62)
      goto LABEL_175;
    v96 = *(_QWORD *)((v94 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v96)
    {
LABEL_159:
      i = 0;
      v114 = v94 & 0xFFFFFFFFFFFFFF8;
      v115 = v94 & 0xC000000000000001;
      v113 = (char *)v96;
      while (1)
      {
        if (v115)
        {
          v97 = (id)MEMORY[0x1D179F320](i, v94);
        }
        else
        {
          if (i >= *(_QWORD *)(v114 + 16))
          {
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            v96 = sub_1CB847044();
            if (!v96)
              break;
            goto LABEL_159;
          }
          v97 = *(id *)(v94 + 8 * i + 32);
        }
        v98 = v97;
        v99 = i + 1;
        if (__OFADD__(i, 1))
          goto LABEL_174;
        v100 = objc_msgSend(v97, sel_linkId);
        if (v100)
        {
          v101 = v100;
          v102 = v94;
          v103 = a1;
          sub_1CB777FA8(0, &qword_1EF99D2F0);
          v104 = v111;
          v105 = v101;
          LOBYTE(v101) = sub_1CB846E10();

          if ((v101 & 1) != 0)
          {
            sub_1CB846FB4();
            sub_1CB846FD8();
            sub_1CB846FE4();
            sub_1CB846FC0();
          }
          else
          {

          }
          a1 = v103;
          v94 = v102;
          v96 = (uint64_t)v113;
        }
        else
        {

        }
        ++i;
        if (v99 == v96)
        {
          v77 = v116;
          i = v110;
          goto LABEL_177;
        }
      }
    }
    v77 = MEMORY[0x1E0DEE9D8];
LABEL_177:
    swift_bridgeObjectRelease();

    goto LABEL_178;
  }
LABEL_155:
  swift_bridgeObjectRetain();
  result = sub_1CB847044();
  v85 = result;
  if (!result)
    goto LABEL_156;
LABEL_121:
  if (v85 >= 1)
  {
    v87 = 0;
    v88 = v115 & 0xC000000000000001;
    do
    {
      if (v88)
        v89 = (id)MEMORY[0x1D179F320](v87, v115);
      else
        v89 = *(id *)(v115 + 8 * v87 + 32);
      v90 = v89;
      v91 = objc_msgSend(v89, sel_cdmUsoGraphTier1, v110);
      if (v91)
      {
        v92 = v91;
        v93 = objc_msgSend(v91, sel_usoGraphTier1);

        if (v93)
        {
          MEMORY[0x1D179EDF8]();
          if (*(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
        }
      }
      else
      {

      }
      ++v87;
    }
    while (v85 != v87);
    swift_bridgeObjectRelease();
    v94 = v116;
    v8 = MEMORY[0x1E0DEE9D8];
    i = v110;
    goto LABEL_157;
  }
  __break(1u);
  return result;
}

id sub_1CB7BBF5C(unint64_t a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  char v12;
  id v13;
  id v14;
  id v15;
  _QWORD v17[5];
  unint64_t v18;

  v2 = sub_1CB7BC16C(a1, a2);
  if (!v2)
    return 0;
  v3 = v2;
  v18 = v2;
  v4 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v2 >> 62)
    goto LABEL_26;
  for (i = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10); i; i = v2)
  {
    while (!__OFSUB__(i--, 1))
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = (id)MEMORY[0x1D179F320](i, v3);
      }
      else
      {
        if ((i & 0x8000000000000000) != 0)
          goto LABEL_24;
        if (i >= *(_QWORD *)(v4 + 16))
          goto LABEL_25;
        v7 = *(id *)(v3 + 32 + 8 * i);
      }
      v8 = v7;
      v9 = objc_msgSend(v7, sel_cdmRequestContext);
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend(v9, sel_ended);

        if (v11)
          goto LABEL_16;
      }
      else
      {

      }
      if (!i)
        goto LABEL_16;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    v2 = sub_1CB847044();
  }
LABEL_16:
  MEMORY[0x1E0C80A78](v2);
  v17[2] = &v18;
  v13 = sub_1CB7E47E0((_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_1CB7BD78C, (uint64_t)v17, i, v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    v14 = objc_msgSend(v13, sel_cdmRequestContext);

    if (!v14)
      return 0;
    v13 = objc_msgSend(v14, sel_ended);

    if (v13)
    {
      v15 = objc_msgSend(v13, sel_parses);

      if (v15)
      {
        sub_1CB777FA8(0, &qword_1ED88BEF8);
        v13 = (id)sub_1CB846A5C();

        return v13;
      }
      return 0;
    }
  }
  return v13;
}

uint64_t sub_1CB7BC16C(unint64_t a1, unint64_t a2)
{
  int64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t i;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  id v30;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unsigned __int8 *v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  unsigned int v56;
  uint64_t v57;
  char v58;
  char v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  int64x2_t v63;
  int64x2_t *v64;
  unint64_t v65;
  int64x2_t v66;
  int8x16_t v67;
  uint64_t v68;
  unint64_t v69;
  int64_t *v70;
  int64_t v71;
  int64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  id v82;
  void *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  _QWORD v98[2];
  int64_t v99;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB7BCD8C(a2, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    MEMORY[0x1E0C80A78](v18);
    *(&v90 - 2) = (uint64_t)v11;
    swift_bridgeObjectRetain();
    v17 = sub_1CB7BAB74(sub_1CB7BDB30, (uint64_t)(&v90 - 4), a1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v17;
  }
  sub_1CB785B54((uint64_t)v7, &qword_1ED88D570);
  v12 = sub_1CB7BD990(a2);
  if (v13)
  {
    v14 = (uint64_t)v12;
    v15 = v13;
    v16 = swift_bridgeObjectRetain();
    v17 = sub_1CB7BD7A8(v16, v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v17;
  }
  v98[0] = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1CB847044();
    if (v20)
      goto LABEL_8;
  }
  else
  {
    v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
    {
LABEL_8:
      if (v20 < 1)
      {
        __break(1u);
        goto LABEL_140;
      }
      for (i = 0; i != v20; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v22 = (id)MEMORY[0x1D179F320](i, a1);
        else
          v22 = *(id *)(a1 + 8 * i + 32);
        v23 = v22;
        v24 = objc_msgSend(v22, sel_cdmRequestContext);
        if (v24
          && (v25 = v24,
              v26 = objc_msgSend(v24, sel_ended),
              v26,
              v25,
              v26))
        {
          sub_1CB846FB4();
          sub_1CB846FD8();
          sub_1CB846FE4();
          sub_1CB846FC0();
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v9 = v98[0];
      if ((v98[0] & 0x8000000000000000) != 0)
        goto LABEL_138;
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  v9 = MEMORY[0x1E0DEE9D8];
  if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
    goto LABEL_138;
LABEL_22:
  if ((v9 & 0x4000000000000000) != 0)
    goto LABEL_138;
  v27 = *(_QWORD *)(v9 + 16);
  swift_retain();
  while (1)
  {
    v94 = a1;
    v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v97 = v20;
    if (!v27)
      break;
    a1 = 0;
    v29 = v9 & 0xC000000000000001;
    v95 = v9 + 32;
    v96 = v9 & 0xC000000000000001;
    v91 = (char *)v98 + 2;
    v92 = (char *)v98 + 3;
    v93 = v9;
    while (1)
    {
      v30 = v29 ? (id)MEMORY[0x1D179F320](a1, v9) : *(id *)(v95 + 8 * a1);
      v20 = (uint64_t)v30;
      if (__OFADD__(a1++, 1))
        break;
      v32 = objc_msgSend(v30, sel_eventMetadata);
      if (v32)
      {
        v33 = v32;
        v34 = objc_msgSend(v32, sel_resultCandidateId);

        if (v34)
        {
          v35 = sub_1CB8468A0();
          v37 = v36;

          v38 = HIBYTE(v37) & 0xF;
          v39 = v35 & 0xFFFFFFFFFFFFLL;
          if ((v37 & 0x2000000000000000) != 0)
            v40 = HIBYTE(v37) & 0xF;
          else
            v40 = v35 & 0xFFFFFFFFFFFFLL;
          if (!v40)
          {

            swift_bridgeObjectRelease();
            v29 = v96;
            goto LABEL_27;
          }
          if ((v37 & 0x1000000000000000) != 0)
          {
            swift_bridgeObjectRetain();
            v42 = (uint64_t)sub_1CB7EA024(v35, v37, 10);
            v59 = v58;
            swift_bridgeObjectRelease_n();

            if ((v59 & 1) == 0)
              goto LABEL_68;
            goto LABEL_73;
          }
          if ((v37 & 0x2000000000000000) == 0)
          {
            if ((v35 & 0x1000000000000000) != 0)
              v41 = (unsigned __int8 *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 32);
            else
              v41 = (unsigned __int8 *)sub_1CB846F9C();
            v42 = (uint64_t)sub_1CB7EA010(v41, v39, 10);
            LOBYTE(v35) = v43 & 1;
LABEL_67:
            swift_bridgeObjectRelease();

            if ((v35 & 1) == 0)
            {
LABEL_68:
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v28 = sub_1CB78F518(0, v28[2] + 1, 1, v28);
              v49 = v28[2];
              v48 = v28[3];
              if (v49 >= v48 >> 1)
                v28 = sub_1CB78F518((_QWORD *)(v48 > 1), v49 + 1, 1, v28);
              v28[2] = v49 + 1;
              v28[v49 + 4] = v42;
              v9 = v93;
            }
LABEL_73:
            v29 = v96;
            goto LABEL_27;
          }
          v98[0] = v35;
          v98[1] = v37 & 0xFFFFFFFFFFFFFFLL;
          if (v35 == 43)
          {
            if (!v38)
              goto LABEL_137;
            if (v38 == 1 || (BYTE1(v35) - 48) > 9u)
              goto LABEL_64;
            v42 = (BYTE1(v35) - 48);
            if (v38 == 2)
              goto LABEL_66;
            if ((BYTE2(v35) - 48) <= 9u)
            {
              v42 = 10 * (BYTE1(v35) - 48) + (BYTE2(v35) - 48);
              v44 = v38 - 3;
              if (v44)
              {
                v45 = (unsigned __int8 *)v92;
                while (1)
                {
                  v46 = *v45 - 48;
                  if (v46 > 9)
                    goto LABEL_64;
                  v47 = 10 * v42;
                  if ((unsigned __int128)(v42 * (__int128)10) >> 64 != (10 * v42) >> 63)
                    goto LABEL_64;
                  v42 = v47 + v46;
                  if (__OFADD__(v47, v46))
                    goto LABEL_64;
                  LOBYTE(v35) = 0;
                  ++v45;
                  if (!--v44)
                    goto LABEL_67;
                }
              }
              goto LABEL_66;
            }
          }
          else
          {
            if (v35 == 45)
            {
              if (!v38)
                goto LABEL_136;
              if (v38 == 1 || (BYTE1(v35) - 48) > 9u)
                goto LABEL_64;
              if (v38 == 2)
              {
                LOBYTE(v35) = 0;
                v42 = -(uint64_t)(BYTE1(v35) - 48);
                goto LABEL_67;
              }
              if ((BYTE2(v35) - 48) > 9u)
                goto LABEL_64;
              v42 = -10 * (BYTE1(v35) - 48) - (BYTE2(v35) - 48);
              v54 = v38 - 3;
              if (v54)
              {
                v55 = (unsigned __int8 *)v92;
                while (1)
                {
                  v56 = *v55 - 48;
                  if (v56 > 9)
                    goto LABEL_64;
                  v57 = 10 * v42;
                  if ((unsigned __int128)(v42 * (__int128)10) >> 64 != (10 * v42) >> 63)
                    goto LABEL_64;
                  v42 = v57 - v56;
                  if (__OFSUB__(v57, v56))
                    goto LABEL_64;
                  LOBYTE(v35) = 0;
                  ++v55;
                  if (!--v54)
                    goto LABEL_67;
                }
              }
LABEL_66:
              LOBYTE(v35) = 0;
              goto LABEL_67;
            }
            if (v38 && (v35 - 48) <= 9u)
            {
              v42 = (v35 - 48);
              if (v38 == 1)
                goto LABEL_66;
              if ((BYTE1(v35) - 48) <= 9u)
              {
                v42 = 10 * (v35 - 48) + (BYTE1(v35) - 48);
                v50 = v38 - 2;
                if (v50)
                {
                  v51 = (unsigned __int8 *)v91;
                  while (1)
                  {
                    v52 = *v51 - 48;
                    if (v52 > 9)
                      goto LABEL_64;
                    v53 = 10 * v42;
                    if ((unsigned __int128)(v42 * (__int128)10) >> 64 != (10 * v42) >> 63)
                      goto LABEL_64;
                    v42 = v53 + v52;
                    if (__OFADD__(v53, v52))
                      goto LABEL_64;
                    LOBYTE(v35) = 0;
                    ++v51;
                    if (!--v50)
                      goto LABEL_67;
                  }
                }
                goto LABEL_66;
              }
            }
          }
LABEL_64:
          v42 = 0;
          LOBYTE(v35) = 1;
          goto LABEL_67;
        }
      }

LABEL_27:
      if (a1 == v27)
        goto LABEL_94;
    }
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    swift_retain();
    swift_bridgeObjectRetain();
    v27 = sub_1CB847044();
    swift_release();
  }
LABEL_94:
  swift_release_n();
  v60 = v28[2];
  if (v60)
  {
    v2 = v28[4];
    v61 = v60 - 1;
    if (v60 == 1)
    {
      a1 = v94;
      goto LABEL_107;
    }
    a1 = v94;
    if (v60 >= 5)
    {
      v62 = v61 & 0xFFFFFFFFFFFFFFFCLL | 1;
      v63 = vdupq_n_s64(v2);
      v64 = (int64x2_t *)(v28 + 7);
      v65 = v61 & 0xFFFFFFFFFFFFFFFCLL;
      v66 = v63;
      do
      {
        v63 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v63, v64[-1]), (int8x16_t)v63, (int8x16_t)v64[-1]);
        v66 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v66, *v64), (int8x16_t)v66, *(int8x16_t *)v64);
        v64 += 2;
        v65 -= 4;
      }
      while (v65);
      v67 = vbslq_s8((int8x16_t)vcgtq_s64(v63, v66), (int8x16_t)v63, (int8x16_t)v66);
      v68 = vextq_s8(v67, v67, 8uLL).u64[0];
      v2 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v67.i64[0], v68), *(int8x8_t *)v67.i8, (int8x8_t)v68);
      if (v61 != (v61 & 0xFFFFFFFFFFFFFFFCLL))
        goto LABEL_103;
    }
    else
    {
      v62 = 1;
LABEL_103:
      v69 = v60 - v62;
      v70 = &v28[v62 + 4];
      do
      {
        v72 = *v70++;
        v71 = v72;
        if (v2 <= v72)
          v2 = v71;
        --v69;
      }
      while (v69);
    }
LABEL_107:
    swift_bridgeObjectRelease();
    if (qword_1ED88E518 == -1)
    {
LABEL_108:
      v73 = sub_1CB8466D8();
      __swift_project_value_buffer(v73, (uint64_t)qword_1ED890248);
      v74 = sub_1CB8466C0();
      v75 = sub_1CB846C90();
      if (os_log_type_enabled(v74, v75))
      {
        v9 = 12;
        v76 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v76 = 134217984;
        v98[0] = v2;
        sub_1CB846E58();
        _os_log_impl(&dword_1CB771000, v74, v75, "Using highest integer rcId of %ld to identify primary NLX candidate", v76, 0xCu);
        MEMORY[0x1D179FE84](v76, -1, -1);
      }

      v17 = MEMORY[0x1E0DEE9D8];
      v98[0] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      if (!v97)
      {
LABEL_132:
        swift_bridgeObjectRelease();
        return v17;
      }
      v77 = 0;
      v78 = a1 & 0xC000000000000001;
      v79 = a1 & 0xFFFFFFFFFFFFFF8;
      while (2)
      {
        if (v78)
        {
          v80 = (id)MEMORY[0x1D179F320](v77, a1);
        }
        else
        {
          if (v77 >= *(_QWORD *)(v79 + 16))
            goto LABEL_134;
          v80 = *(id *)(a1 + 8 * v77 + 32);
        }
        v81 = v80;
        v9 = v77 + 1;
        if (__OFADD__(v77, 1))
          goto LABEL_135;
        v82 = objc_msgSend(v80, sel_eventMetadata);
        if (v82
          && (v83 = v82,
              v84 = objc_msgSend(v82, sel_resultCandidateId),
              v83,
              v84))
        {
          v20 = sub_1CB8468A0();
          v86 = v85;

          v99 = v2;
          v87 = sub_1CB847170();
          if (v86)
          {
            if (v20 == v87 && v86 == v88)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_127;
            }
            v89 = sub_1CB8471A0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v89 & 1) != 0)
            {
LABEL_127:
              sub_1CB846FB4();
              sub_1CB846FD8();
              sub_1CB846FE4();
              sub_1CB846FC0();
            }
            else
            {

            }
            a1 = v94;
LABEL_114:
            ++v77;
            if (v9 == v97)
            {
              v17 = v98[0];
              goto LABEL_132;
            }
            continue;
          }
          a1 = v94;
        }
        else
        {
          v99 = v2;
          sub_1CB847170();
        }
        break;
      }

      swift_bridgeObjectRelease();
      goto LABEL_114;
    }
LABEL_140:
    swift_once();
    goto LABEL_108;
  }
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1CB7BCBC4(unint64_t a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v7;
  void *v8;
  id v9;
  char v10;
  _QWORD *v11;
  id v12;
  id v13;
  _QWORD v15[5];
  unint64_t v16;

  v2 = sub_1CB7BC16C(a1, a2);
  if (!v2)
    return 0;
  v3 = v2;
  v16 = v2;
  v4 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v2 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    do
    {
      while (__OFSUB__(v5--, 1))
      {
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        v2 = sub_1CB847044();
        v5 = v2;
        if (!v2)
          goto LABEL_17;
      }
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = (id)MEMORY[0x1D179F320](v5, v3);
        goto LABEL_10;
      }
      if ((v5 & 0x8000000000000000) != 0)
        goto LABEL_14;
      if (v5 >= *(_QWORD *)(v4 + 16))
        goto LABEL_15;
      v7 = *(id *)(v3 + 32 + 8 * v5);
LABEL_10:
      v8 = v7;
      v9 = objc_msgSend(v7, sel_cdmMatchingSpanEnded);

    }
    while (!v9 && v5);
  }
LABEL_17:
  MEMORY[0x1E0C80A78](v2);
  v15[2] = &v16;
  v11 = sub_1CB7E47E0((_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_1CB7BD78C, (uint64_t)v15, v5, v10);
  swift_bridgeObjectRelease();
  if (!v11)
    return 0;
  v12 = objc_msgSend(v11, sel_cdmMatchingSpanEnded);

  if (v12)
  {
    v13 = objc_msgSend(v12, sel_matchingSpans);

    if (v13)
    {
      sub_1CB777FA8(0, &qword_1EF99EF70);
      v12 = (id)sub_1CB846A5C();

      return v12;
    }
    return 0;
  }
  return v12;
}

void sub_1CB7BCD8C(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  unint64_t v4;
  id v6;
  void *v7;
  id v8;
  char v9;
  _QWORD *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];
  unint64_t v23;

  v2 = a1;
  v23 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    do
    {
      while (__OFSUB__(v4--, 1))
      {
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        swift_bridgeObjectRetain();
        v4 = sub_1CB847044();
        a1 = swift_bridgeObjectRelease();
        if (!v4)
          goto LABEL_16;
      }
      if ((v2 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x1D179F320](v4, v2);
        goto LABEL_9;
      }
      if ((v4 & 0x8000000000000000) != 0)
        goto LABEL_13;
      if (v4 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_14;
      v6 = *(id *)(v2 + 32 + 8 * v4);
LABEL_9:
      v7 = v6;
      v8 = objc_msgSend(v6, sel_trpFinalized);

    }
    while (!v8 && v4);
  }
LABEL_16:
  MEMORY[0x1E0C80A78](a1);
  v22[2] = &v23;
  v10 = sub_1CB7E47E0((_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_1CB7BD78C, (uint64_t)v22, v4, v9);
  if (!v10)
    goto LABEL_22;
  v11 = v10;
  v12 = objc_msgSend(v10, sel_trpFinalized);
  if (!v12
    || (v13 = v12, v14 = objc_msgSend(v12, sel_trpId), v13, !v14))
  {

LABEL_22:
    v20 = sub_1CB846084();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
    return;
  }
  v15 = objc_msgSend(v14, sel_value);
  if (v15)
  {
    v16 = v15;
    v17 = sub_1CB845F94();
    v19 = v18;

    sub_1CB7B601C(v17, v19);
    sub_1CB779034(v17, v19);
  }
  else
  {
    v21 = sub_1CB846084();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 1, 1, v21);
  }

}

uint64_t sub_1CB7BCFCC(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  uint64_t *v33;
  char v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;

  v4 = sub_1CB846084();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EF78);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v11 = MEMORY[0x1E0C80A78](v10);
  v41 = (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v38 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v38 - v16;
  v18 = objc_msgSend(*a1, sel_eventMetadata);
  if (v18
    && (v19 = v18, v20 = objc_msgSend(v18, sel_trpId), v19, v20))
  {
    v21 = objc_msgSend(v20, sel_value);
    if (v21)
    {
      v22 = v21;
      v23 = sub_1CB845F94();
      v38 = v7;
      v39 = a2;
      v24 = v23;
      v26 = v25;

      sub_1CB7B601C(v24, v26);
      v27 = v24;
      v28 = v26;
      v7 = v38;
      a2 = v39;
      sub_1CB779034(v27, v28);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v17, 1, 1, v4);
    }

  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v17, 1, 1, v4);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v15, a2, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
  v29 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1CB7BDB4C((uint64_t)v17, (uint64_t)v9);
  sub_1CB7BDB4C((uint64_t)v15, v29);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v31 = v30(v9, 1, v4);
  v32 = v41;
  if (v31 == 1)
  {
    v33 = &qword_1ED88D570;
    sub_1CB785B54((uint64_t)v15, &qword_1ED88D570);
    sub_1CB785B54((uint64_t)v17, &qword_1ED88D570);
    if (v30((char *)v29, 1, v4) == 1)
    {
      v34 = -1;
    }
    else
    {
      v33 = &qword_1EF99EF78;
      v34 = 0;
    }
  }
  else
  {
    sub_1CB7BDB4C((uint64_t)v9, v41);
    if (v30((char *)v29, 1, v4) == 1)
    {
      sub_1CB785B54((uint64_t)v15, &qword_1ED88D570);
      sub_1CB785B54((uint64_t)v17, &qword_1ED88D570);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v32, v4);
      v34 = 0;
      v33 = &qword_1EF99EF78;
    }
    else
    {
      v35 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v40, v29, v4);
      sub_1CB7BDB94();
      v34 = sub_1CB846864();
      v36 = *(void (**)(char *, uint64_t))(v5 + 8);
      v36(v35, v4);
      v33 = &qword_1ED88D570;
      sub_1CB785B54((uint64_t)v15, &qword_1ED88D570);
      sub_1CB785B54((uint64_t)v17, &qword_1ED88D570);
      v36((char *)v32, v4);
    }
  }
  sub_1CB785B54((uint64_t)v9, v33);
  return v34 & 1;
}

uint64_t (*sub_1CB7BD374(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1CB7BD548(v6, a2, a3);
  return sub_1CB7BD3C8;
}

uint64_t (*sub_1CB7BD3CC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1CB7BD5B4(v6, a2, a3);
  return sub_1CB7BD3C8;
}

uint64_t (*sub_1CB7BD420(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1CB7BD638(v6, a2, a3);
  return sub_1CB7BD3C8;
}

uint64_t (*sub_1CB7BD474(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1CB7BD6AC(v6, a2, a3);
  return sub_1CB7BD3C8;
}

uint64_t (*sub_1CB7BD4C8(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1CB7BD720(v6, a2, a3);
  return sub_1CB7BD3C8;
}

void sub_1CB7BD51C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1CB7BD548(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1D179F320](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_1CB7BDC20;
  }
  __break(1u);
  return result;
}

void (*sub_1CB7BD5B4(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1D179F320](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1CB7BD620;
  }
  __break(1u);
  return result;
}

void sub_1CB7BD620(id *a1)
{

}

ValueMetadata *type metadata accessor for NlxSELFUtils()
{
  return &type metadata for NlxSELFUtils;
}

uint64_t (*sub_1CB7BD638(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1D179F320](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_1CB7BD6A4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB7BD6A4()
{
  return swift_release();
}

uint64_t (*sub_1CB7BD6AC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1D179F320](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain();
LABEL_5:
    *v3 = v4;
    return sub_1CB7BD718;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB7BD718()
{
  return swift_unknownObjectRelease();
}

void (*sub_1CB7BD720(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1D179F320](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1CB7BDC24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB7BD78C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CB7BDBDC(a1, (uint64_t (*)(_QWORD, _QWORD, _BYTE *))sub_1CB7E4774, a2);
}

uint64_t sub_1CB7BD7A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  unint64_t v23;
  uint64_t v26;

  v3 = a1;
  v26 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_25;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v23 = v3;
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v7 = v3 & 0xFFFFFFFFFFFFFF8;
      while (v6)
      {
        v8 = (id)MEMORY[0x1D179F320](v5, v3);
LABEL_9:
        v9 = v8;
        v10 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_24;
        v11 = objc_msgSend(v8, sel_eventMetadata);
        if (v11)
        {
          v12 = v11;
          v13 = objc_msgSend(v11, sel_resultCandidateId);

          if (v13)
          {
            v14 = v4;
            v15 = v7;
            v16 = v6;
            v17 = sub_1CB8468A0();
            v19 = v18;

            if (v17 == a2 && v19 == a3)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              v21 = sub_1CB8471A0();
              swift_bridgeObjectRelease();
              if ((v21 & 1) == 0)
              {

LABEL_20:
                v6 = v16;
                v7 = v15;
                v4 = v14;
                v3 = v23;
                goto LABEL_5;
              }
            }
            sub_1CB846FB4();
            sub_1CB846FD8();
            sub_1CB846FE4();
            sub_1CB846FC0();
            goto LABEL_20;
          }
        }

LABEL_5:
        ++v5;
        if (v10 == v4)
          return v26;
      }
      if (v5 < *(_QWORD *)(v7 + 16))
        break;
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      v4 = sub_1CB847044();
      if (!v4)
        return MEMORY[0x1E0DEE9D8];
    }
    v8 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

void *sub_1CB7BD990(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  unsigned int v9;
  id v10;
  void *v11;
  id v12;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  v2 = sub_1CB847044();
  if (!v2)
    goto LABEL_20;
LABEL_3:
  for (i = 4; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v4 = (id)MEMORY[0x1D179F320](i - 4, a1);
    else
      v4 = *(id *)(a1 + 8 * i);
    v5 = v4;
    v6 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    v7 = objc_msgSend(v4, sel_resultSelected);
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, sel_exists);

      if (v9)
        break;
    }

    if (v6 == v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v5, sel_eventMetadata);
  v11 = v10;
  if (v10)
  {
    v12 = objc_msgSend(v10, sel_resultCandidateId);

    if (v12)
    {
      v11 = (void *)sub_1CB8468A0();

      return v11;
    }

    return 0;
  }

  return v11;
}

uint64_t sub_1CB7BDB30(id *a1)
{
  uint64_t v1;

  return sub_1CB7BCFCC(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1CB7BDB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1CB7BDB94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED88BBD0;
  if (!qword_1ED88BBD0)
  {
    v1 = sub_1CB846084();
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0CB09D0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED88BBD0);
  }
  return result;
}

uint64_t sub_1CB7BDBDC@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD, _BYTE *)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _BYTE v7[8];

  result = a2(*a1, **(_QWORD **)(v3 + 16), v7);
  if (!v4)
    *a3 = result;
  return result;
}

uint64_t CoreAnalyticsMeasurable.payload()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(void))(a2 + 16))();
  v3 = sub_1CB7BE370(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t CoreAnalyticsLogger.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 1;
  *(_QWORD *)(result + 24) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t CoreAnalyticsLogger.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_BYTE *)(v0 + 16) = 1;
  *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_1CB7BDCC4()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 16) = 0;
  swift_beginAccess();
  *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEE9D8];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7BDD08()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void sub_1CB7BDD3C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  unint64_t aBlock;
  unint64_t v9;
  id (*v10)(uint64_t);
  void *v11;
  uint64_t (*v12)();
  uint64_t v13;
  __int128 v14[2];

  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    aBlock = 0xD000000000000027;
    v9 = 0x80000001CB8545B0;
    v3 = a1[3];
    v4 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    sub_1CB846954();
    swift_bridgeObjectRelease();
    v5 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    sub_1CB79CBA8((uint64_t)a1, (uint64_t)v14);
    v6 = swift_allocObject();
    sub_1CB7780BC(v14, v6 + 16);
    v12 = sub_1CB7BE5CC;
    v13 = v6;
    aBlock = MEMORY[0x1E0C809B0];
    v9 = 1107296256;
    v10 = sub_1CB7BDEEC;
    v11 = &block_descriptor_5;
    v7 = _Block_copy(&aBlock);
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v7);
    swift_bridgeObjectRelease();

  }
  else
  {
    sub_1CB7BDF60(a1);
  }
}

uint64_t sub_1CB7BDE88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  v4 = sub_1CB7BE370(v3);
  swift_bridgeObjectRelease();
  return v4;
}

id sub_1CB7BDEEC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1CB7BE770();
    v4 = (void *)sub_1CB8467E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

void sub_1CB7BDF60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  _QWORD *v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD **v34;
  uint64_t v35;
  int64_t v36;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  v6 = sub_1CB7BE370(v5);
  swift_bridgeObjectRelease();
  v7 = 0;
  v8 = *(_QWORD *)(v6 + 64);
  v35 = v6 + 64;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v34 = (_QWORD **)(v1 + 24);
  v36 = (unint64_t)(v9 + 63) >> 6;
  if ((v10 & v8) != 0)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v14 = v7 + 1;
    if (!__OFADD__(v7, 1))
    {
      if (v14 < v36)
      {
        v15 = *(_QWORD *)(v35 + 8 * v14);
        ++v7;
        if (v15)
          goto LABEL_25;
        v7 = v14 + 1;
        if (v14 + 1 >= v36)
          goto LABEL_34;
        v15 = *(_QWORD *)(v35 + 8 * v7);
        if (v15)
          goto LABEL_25;
        v7 = v14 + 2;
        if (v14 + 2 >= v36)
          goto LABEL_34;
        v15 = *(_QWORD *)(v35 + 8 * v7);
        if (v15)
          goto LABEL_25;
        v7 = v14 + 3;
        if (v14 + 3 >= v36)
          goto LABEL_34;
        v15 = *(_QWORD *)(v35 + 8 * v7);
        if (v15)
          goto LABEL_25;
        v7 = v14 + 4;
        if (v14 + 4 >= v36)
          goto LABEL_34;
        v15 = *(_QWORD *)(v35 + 8 * v7);
        if (v15)
        {
LABEL_25:
          v11 = (v15 - 1) & v15;
          for (i = __clz(__rbit64(v15)) + (v7 << 6); ; i = v12 | (v7 << 6))
          {
            v17 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * i);
            v19 = *v17;
            v18 = v17[1];
            v20 = a1[3];
            v21 = a1[4];
            __swift_project_boxed_opaque_existential_1(a1, v20);
            v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 16);
            swift_bridgeObjectRetain();
            v23 = v22(v20, v21);
            v24 = sub_1CB7BE370(v23);
            swift_bridgeObjectRelease();
            if (!*(_QWORD *)(v24 + 16))
              goto LABEL_6;
            swift_bridgeObjectRetain();
            v25 = sub_1CB779A70(v19, v18);
            if ((v26 & 1) == 0)
              break;
            v27 = *(id *)(*(_QWORD *)(v24 + 56) + 8 * v25);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_beginAccess();
            v28 = *v34;
            v29 = v27;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *v34 = v28;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v28 = sub_1CB78FEB4(0, v28[2] + 1, 1, v28);
              *v34 = v28;
            }
            v32 = v28[2];
            v31 = v28[3];
            if (v32 >= v31 >> 1)
            {
              v28 = sub_1CB78FEB4((_QWORD *)(v31 > 1), v32 + 1, 1, v28);
              *v34 = v28;
            }
            v28[2] = v32 + 1;
            v33 = &v28[3 * v32];
            v33[4] = v19;
            v33[5] = v18;
            v33[6] = v29;
            swift_endAccess();

            if (!v11)
              goto LABEL_8;
LABEL_7:
            v12 = __clz(__rbit64(v11));
            v11 &= v11 - 1;
          }
          swift_bridgeObjectRelease();
LABEL_6:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v11)
            continue;
          goto LABEL_7;
        }
        v16 = v14 + 5;
        if (v16 < v36)
        {
          v15 = *(_QWORD *)(v35 + 8 * v16);
          if (v15)
          {
            v7 = v16;
            goto LABEL_25;
          }
          while (1)
          {
            v7 = v16 + 1;
            if (__OFADD__(v16, 1))
              goto LABEL_36;
            if (v7 >= v36)
              break;
            v15 = *(_QWORD *)(v35 + 8 * v7);
            ++v16;
            if (v15)
              goto LABEL_25;
          }
        }
      }
LABEL_34:
      swift_release();
      return;
    }
    break;
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t CoreAnalyticsLogger.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CoreAnalyticsLogger.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

BOOL static UFLCoreAnalyticsLogLevel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t UFLCoreAnalyticsLogLevel.hash(into:)()
{
  return sub_1CB8472F0();
}

uint64_t UFLCoreAnalyticsLogLevel.hashValue.getter()
{
  sub_1CB8472E4();
  sub_1CB8472F0();
  return sub_1CB847314();
}

uint64_t sub_1CB7BE370(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7D8);
  result = sub_1CB847050();
  v3 = 0;
  v35 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  v5 = a1 + 64;
  v4 = v6;
  v7 = 1 << *(_BYTE *)(v5 - 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v4;
  v28 = v5;
  v29 = (unint64_t)(v7 + 63) >> 6;
  v30 = (_QWORD *)result;
  v31 = result + 64;
  if ((v8 & v4) == 0)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v11 = v3;
  for (i = v10 | (v3 << 6); ; i = __clz(__rbit64(v14)) + (v15 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_1CB79CBA8(*(_QWORD *)(v35 + 56) + 40 * i, (uint64_t)v32);
    v20 = v33;
    v21 = v34;
    __swift_project_boxed_opaque_existential_1(v32, v33);
    v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
    swift_bridgeObjectRetain();
    v23 = v22(v20, v21);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
    result = (uint64_t)v30;
    *(_QWORD *)(v31 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v24 = (_QWORD *)(v30[6] + 16 * i);
    *v24 = v18;
    v24[1] = v19;
    *(_QWORD *)(v30[7] + 8 * i) = v23;
    v25 = v30[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v30[2] = v27;
    v3 = v11;
    if (v9)
      goto LABEL_4;
LABEL_5:
    v13 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_24;
    if (v13 >= v29)
      return result;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v3 + 1;
    if (!v14)
    {
      v15 = v3 + 2;
      if (v3 + 2 >= v29)
        return result;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v3 + 3;
        if (v3 + 3 >= v29)
          return result;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v9 = (v14 - 1) & v14;
    v11 = v15;
  }
  v16 = v3 + 4;
  if (v3 + 4 >= v29)
    return result;
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v3 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v29)
      return result;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1CB7BE5A8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1CB7BE5CC()
{
  uint64_t v0;

  return sub_1CB7BDE88((_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_1CB7BE5F0()
{
  unint64_t result;

  result = qword_1EF99EF80;
  if (!qword_1EF99EF80)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for UFLCoreAnalyticsLogLevel, &type metadata for UFLCoreAnalyticsLogLevel);
    atomic_store(result, (unint64_t *)&qword_1EF99EF80);
  }
  return result;
}

uint64_t dispatch thunk of CoreAnalyticsMeasurable.eventName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CoreAnalyticsMeasurable.getLoggableProperties()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1CB7BE644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for CoreAnalyticsLogger()
{
  return objc_opt_self();
}

uint64_t method lookup function for CoreAnalyticsLogger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreAnalyticsLogger.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of CoreAnalyticsLogger.setUpForTesting()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of CoreAnalyticsLogger.readInMemoryStore()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of CoreAnalyticsLogger.log(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t storeEnumTagSinglePayload for UFLCoreAnalyticsLogLevel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CB7BE6F0 + 4 * byte_1CB84BB65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CB7BE724 + 4 * asc_1CB84BB60[v4]))();
}

uint64_t sub_1CB7BE724(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7BE72C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB7BE734);
  return result;
}

uint64_t sub_1CB7BE740(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB7BE748);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CB7BE74C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7BE754(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UFLCoreAnalyticsLogLevel()
{
  return &type metadata for UFLCoreAnalyticsLogLevel;
}

unint64_t sub_1CB7BE770()
{
  unint64_t result;

  result = qword_1ED88A780;
  if (!qword_1ED88A780)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED88A780);
  }
  return result;
}

uint64_t sub_1CB7BE7AC(const char *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  NSObject *v12;
  os_signpost_type_t v13;
  uint64_t result;
  void (*v15)(_BYTE *, uint64_t, uint64_t);
  uint8_t *v16;
  os_signpost_id_t v17;
  os_signpost_type_t v18;
  const char *v19;
  _BYTE v20[8];
  char v21;

  v7 = sub_1CB846654();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED88A6F8 != -1)
    swift_once();
  v11 = byte_1ED8901F8;
  v12 = sub_1CB84666C();
  v13 = sub_1CB846D68();
  result = sub_1CB846E28();
  if (v11 == 1)
  {
    if ((result & 1) == 0)
    {
LABEL_12:

      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
LABEL_24:
      sub_1CB8466A8();
      swift_allocObject();
      return sub_1CB84669C();
    }
    if ((a3 & 1) != 0)
    {
      if ((unint64_t)a1 >> 32)
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      if (a1 >> 11 == 27)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (a1 >> 16 > 0x10)
        goto LABEL_27;
      a1 = v20;
    }
    else if (!a1)
    {
      __break(1u);
      goto LABEL_8;
    }
    v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16);
    v15(v10, a4, v7);
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    v17 = sub_1CB84663C();
    v18 = v13;
    v19 = "";
LABEL_23:
    _os_signpost_emit_with_name_impl(&dword_1CB771000, v12, v18, v17, a1, v19, v16, 2u);
    MEMORY[0x1D179FE84](v16, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    v15(v10, a4, v7);
    goto LABEL_24;
  }
LABEL_8:
  if ((result & 1) == 0)
    goto LABEL_12;
  if ((a3 & 1) == 0)
  {
    if (!a1)
    {
      __break(1u);
      goto LABEL_12;
    }
    goto LABEL_22;
  }
  if ((unint64_t)a1 >> 32)
    goto LABEL_26;
  if (a1 >> 11 != 27)
  {
    if (a1 >> 16 <= 0x10)
    {
      a1 = &v21;
LABEL_22:
      v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16);
      v15(v10, a4, v7);
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      v17 = sub_1CB84663C();
      v18 = v13;
      v19 = "enableTelemetry=YES";
      goto LABEL_23;
    }
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1CB7BEA0C(uint64_t a1)
{
  return sub_1CB7BEA78(a1, qword_1ED890248);
}

uint64_t sub_1CB7BEA30(uint64_t a1)
{
  return sub_1CB7BEA78(a1, qword_1ED8901E0);
}

uint64_t sub_1CB7BEA54(uint64_t a1)
{
  return sub_1CB7BEA78(a1, qword_1EF9A8978);
}

uint64_t sub_1CB7BEA78(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1CB8466D8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1CB8466CC();
}

uint64_t sub_1CB7BEAEC(uint64_t a1)
{
  return sub_1CB7BEB34(a1, qword_1ED8901C8, &qword_1ED88E518, (uint64_t)qword_1ED890248);
}

uint64_t sub_1CB7BEB10(uint64_t a1)
{
  return sub_1CB7BEB34(a1, qword_1ED8901B0, &qword_1ED88A5F0, (uint64_t)qword_1ED8901E0);
}

uint64_t sub_1CB7BEB34(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = sub_1CB8466D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CB846678();
  __swift_allocate_value_buffer(v11, a2);
  __swift_project_value_buffer(v11, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v7, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  return sub_1CB846660();
}

uint64_t sub_1CB7BEC1C(uint64_t a1)
{
  return sub_1CB7BEB34(a1, qword_1EF9A8990, &qword_1EF99C398, (uint64_t)qword_1EF9A8978);
}

void sub_1CB7BEC40()
{
  id v0;
  void *v1;
  unsigned __int8 v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  byte_1ED8901F8 = v2;
}

void sub_1CB7BECCC(const char *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  os_signpost_type_t v12;
  char v13;
  uint8_t *v14;
  os_signpost_id_t v15;
  os_signpost_type_t v16;
  const char *v17;
  uint64_t v18;
  NSObject *v19;
  char v20;
  char v21;

  v7 = sub_1CB846654();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED88A6F8 != -1)
    swift_once();
  v11 = byte_1ED8901F8;
  v19 = sub_1CB84666C();
  v12 = sub_1CB846D74();
  v13 = sub_1CB846E28();
  if (v11 == 1)
  {
    if ((v13 & 1) == 0)
    {
LABEL_12:

      return;
    }
    if ((a3 & 1) != 0)
    {
      if ((unint64_t)a1 >> 32)
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      if (a1 >> 11 == 27)
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      if (a1 >> 16 > 0x10)
        goto LABEL_26;
      a1 = &v20;
    }
    else if (!a1)
    {
      __break(1u);
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = sub_1CB84663C();
    v16 = v12;
    v17 = "";
LABEL_23:
    _os_signpost_emit_with_name_impl(&dword_1CB771000, v19, v16, v15, a1, v17, v14, 2u);
    MEMORY[0x1D179FE84](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return;
  }
LABEL_8:
  if ((v13 & 1) == 0)
    goto LABEL_12;
  if ((a3 & 1) == 0)
  {
    if (!a1)
    {
      __break(1u);
      goto LABEL_12;
    }
    goto LABEL_22;
  }
  if ((unint64_t)a1 >> 32)
    goto LABEL_25;
  if (a1 >> 11 != 27)
  {
    if (a1 >> 16 <= 0x10)
    {
      a1 = &v21;
LABEL_22:
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      v15 = sub_1CB84663C();
      v16 = v12;
      v17 = "enableTelemetry=YES";
      goto LABEL_23;
    }
    goto LABEL_27;
  }
LABEL_29:
  __break(1u);
}

char *sub_1CB7BEF14()
{
  char v1;

  return &v1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t PluginSchedulerRunResult.bundleName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginSchedulerRunResult.pluginResult.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

__n128 PluginSchedulerRunResult.init(bundleName:pluginResult:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, __n128 *a4@<X8>)
{
  __n128 result;

  a4->n128_u64[0] = a1;
  a4->n128_u64[1] = a2;
  result = *a3;
  a4[1] = *a3;
  return result;
}

id sub_1CB7BEFAC()
{
  id *v0;

  return objc_msgSend(*v0, sel_isLowPowerModeEnabled);
}

uint64_t sub_1CB7BEFCC()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_1CB7C540C((uint64_t)&unk_1E868A500);
  result = swift_arrayDestroy();
  qword_1ED88DF50 = v0;
  return result;
}

uint64_t PluginScheduler.__allocating_init(queue:)(void *a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_1CB7C55AC(a1);

  return v2;
}

uint64_t PluginScheduler.init(queue:)(void *a1)
{
  uint64_t v2;

  v2 = sub_1CB7C55AC(a1);

  return v2;
}

uint64_t PluginScheduler.__allocating_init()()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_1CB7C57F4();
  type metadata accessor for PluginScheduler();
  swift_allocObject();
  v1 = sub_1CB7C55AC(v0);

  return v1;
}

uint64_t sub_1CB7BF0D0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  v6 = sub_1CB845F58();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  if (qword_1ED88C1B8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED890200);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  v14 = v10;
  sub_1CB7BF1C8(&v14, (uint64_t)v9, a2, a3, 0.0);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1CB7BF1C8(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD aBlock[7];

  v6 = v5;
  v35 = a3;
  v36 = a4;
  v34 = a2;
  v41 = sub_1CB846744();
  v44 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CB84678C();
  v42 = *(_QWORD *)(v10 - 8);
  v43 = v10;
  MEMORY[0x1E0C80A78](v10);
  v33 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CB845F58();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1CB8467B0();
  v17 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v33 - v21;
  LOBYTE(a1) = *a1;
  v37 = *(_QWORD *)(v6 + 16);
  sub_1CB846798();
  MEMORY[0x1D179EB88](v20, a5);
  v38 = *(void (**)(char *, uint64_t))(v17 + 8);
  v38(v20, v16);
  v23 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v34, v12);
  v24 = (*(unsigned __int8 *)(v13 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v25 = swift_allocObject();
  v26 = v35;
  v27 = v36;
  *(_QWORD *)(v25 + 16) = v23;
  *(_QWORD *)(v25 + 24) = v26;
  *(_QWORD *)(v25 + 32) = v27;
  *(_BYTE *)(v25 + 40) = (_BYTE)a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v25 + v24, v15, v12);
  aBlock[4] = sub_1CB7C6540;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB8214F0;
  aBlock[3] = &block_descriptor_48;
  v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v29 = v33;
  sub_1CB846768();
  v45 = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E4A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
  sub_1CB7C6674((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8);
  v31 = v40;
  v30 = v41;
  sub_1CB846EC4();
  MEMORY[0x1D179F0BC](v22, v29, v31, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v30);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v43);
  v38(v22, v39);
  swift_release();
  return swift_release();
}

uint64_t sub_1CB7BF520(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  _QWORD *v35;
  uint64_t v37;
  char v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint8_t *v46;
  NSObject *v47;
  os_signpost_type_t v48;
  os_signpost_id_t v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  _QWORD *v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  id v71;
  os_signpost_type_t v72;
  os_signpost_id_t v73;
  os_signpost_type_t v74;
  NSObject *v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  int v80;
  uint8_t *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char v101;
  _QWORD *v102;
  unint64_t v103;
  uint64_t v104;
  NSObject *v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  unsigned __int8 v116[40];
  uint64_t v117;

  v109 = a5;
  v111 = a2;
  v117 = *MEMORY[0x1E0C80C00];
  v7 = sub_1CB846678();
  v110 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CB846654();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v104 - v15;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v31 = sub_1CB8466D8();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED890248);
    v32 = sub_1CB8466C0();
    v33 = sub_1CB846C90();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_1CB771000, v32, v33, "The scheduler was deallocated, cancelling the execution of plugins", v34, 2u);
      MEMORY[0x1D179FE84](v34, -1, -1);
    }

    if (qword_1ED88DCB8 != -1)
      swift_once();
    v35 = (_QWORD *)swift_allocObject();
    v35[2] = v111;
    v35[3] = a3;
    v35[4] = MEMORY[0x1E0DEE9D8];
    swift_retain();
    sub_1CB82DD74((uint64_t)sub_1CB7C61E4, (uint64_t)v35);
    return swift_release();
  }
  v18 = Strong;
  v108 = a4;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(Strong + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration), *(_QWORD *)(Strong + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration + 24));
  if ((sub_1CB823F3C() & 1) != 0 || !AFDeviceSupportsSiriUOD())
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v27 = sub_1CB8466D8();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED890248);
    v28 = sub_1CB8466C0();
    v29 = sub_1CB846C84();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1CB771000, v28, v29, "Skipping SiriPrivateLearningAnalytics plugins run - device configuration is not supported", v30, 2u);
      MEMORY[0x1D179FE84](v30, -1, -1);
    }

    if (qword_1ED88DCB8 == -1)
      goto LABEL_10;
LABEL_74:
    swift_once();
LABEL_10:
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = v111;
    v26[3] = a3;
    v26[4] = MEMORY[0x1E0DEE9D8];
    swift_retain();
    sub_1CB82DD74((uint64_t)sub_1CB7C61E4, (uint64_t)v26);
    swift_release();
    return swift_release();
  }
  v107 = v18;
  v19 = (_QWORD *)(v18 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector);
  v20 = *(_QWORD *)(v18 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector + 24);
  v21 = *(_QWORD *)(v18 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector + 32);
  __swift_project_boxed_opaque_existential_1(v19, v20);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21) & 1) != 0)
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v22 = sub_1CB8466D8();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED890248);
    v23 = sub_1CB8466C0();
    v24 = sub_1CB846C84();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1CB771000, v23, v24, "Skipping SiriPrivateLearningAnalytics plugins run - device is in low power mode", v25, 2u);
      MEMORY[0x1D179FE84](v25, -1, -1);
    }

    if (qword_1ED88DCB8 == -1)
      goto LABEL_10;
    goto LABEL_74;
  }
  if (qword_1ED88DDD0 != -1)
    swift_once();
  v37 = v107 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_lockPath;
  sub_1CB7C9EF0(v107 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_lockPath);
  sub_1CB7C84C4(v37, 1, (uint64_t)&v114);
  if (!v115)
  {
    sub_1CB785B54((uint64_t)&v114, &qword_1EF99EFE0);
    if (qword_1ED88E518 != -1)
      swift_once();
    v57 = sub_1CB8466D8();
    __swift_project_value_buffer(v57, (uint64_t)qword_1ED890248);
    v58 = sub_1CB8466C0();
    v59 = sub_1CB846C84();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      _os_log_impl(&dword_1CB771000, v58, v59, "The scheduler is not able to acquire the scheduling lock, the plugins might already be running", v60, 2u);
      MEMORY[0x1D179FE84](v60, -1, -1);
    }

    v116[0] = v108;
    sub_1CB7C3CD0(v116);
    if (qword_1ED88DCB8 == -1)
      goto LABEL_10;
    goto LABEL_74;
  }
  sub_1CB7780BC(&v114, (uint64_t)v116);
  v38 = v108;
  LOBYTE(v114) = v108;
  if ((sub_1CB7C2FD8((unsigned __int8 *)&v114) & 1) != 0)
  {
    if (v38 == 3)
      v39 = "runPluginScheduler";
    else
      v39 = "runPluginEventsScheduler";
    if (v38 == 3)
      v40 = 18;
    else
      v40 = 24;
    if (qword_1ED88A288 != -1)
      swift_once();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED8901B0);
    sub_1CB846648();
    v41 = sub_1CB7BE7AC(v39, v40, 2, (uint64_t)v16);
    v106 = *(void (**)(char *, uint64_t))(v11 + 8);
    v106(v16, v10);
    sub_1CB79CBA8((uint64_t)v116, (uint64_t)&v114);
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = v39;
    *(_QWORD *)(v42 + 24) = v40;
    *(_BYTE *)(v42 + 32) = 2;
    *(_QWORD *)(v42 + 40) = v41;
    sub_1CB7780BC(&v114, v42 + 48);
    *(_QWORD *)(v42 + 88) = v111;
    *(_QWORD *)(v42 + 96) = a3;
    v112 = MEMORY[0x1E0DEE9D8];
    v43 = qword_1ED88A290;
    v111 = v41;
    swift_retain();
    swift_retain();
    if (v43 != -1)
      swift_once();
    v44 = v108;
    v45 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED8901C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v9, v45, v7);
    sub_1CB846648();
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    v47 = sub_1CB84666C();
    v48 = sub_1CB846D68();
    v49 = sub_1CB84663C();
    v105 = v47;
    _os_signpost_emit_with_name_impl(&dword_1CB771000, v47, v48, v49, "loadPlugins", "", v46, 2u);
    if (v44 == 3)
    {
      v50 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v51 = (void *)sub_1CB845EE0();
      *(_QWORD *)&v114 = 0;
      v52 = objc_msgSend(v50, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v51, 0, 0, &v114);

      v53 = (void *)v114;
      if (v52)
      {
        sub_1CB845F58();
        v54 = sub_1CB846A5C();
        v55 = v53;

        v56 = sub_1CB817914(v54, 0);
LABEL_57:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v112 = v56;
        v72 = sub_1CB846D5C();
        v73 = sub_1CB84663C();
        v74 = v72;
        v75 = v105;
        _os_signpost_emit_with_name_impl(&dword_1CB771000, v105, v74, v73, "loadPlugins", "", v46, 2u);

        MEMORY[0x1D179FE84](v46, -1, -1);
        v106(v14, v10);
        (*(void (**)(char *, uint64_t))(v110 + 8))(v9, v7);
        sub_1CB7C50BC();
        if (qword_1ED88E518 != -1)
          swift_once();
        v76 = sub_1CB8466D8();
        __swift_project_value_buffer(v76, (uint64_t)qword_1ED890248);
        v77 = sub_1CB8466C0();
        v78 = sub_1CB846C84();
        if (os_log_type_enabled(v77, v78))
        {
          v79 = v42;
          v80 = v108;
          v81 = (uint8_t *)swift_slowAlloc();
          v82 = swift_slowAlloc();
          v113 = v82;
          *(_DWORD *)v81 = 136315138;
          if (v80 == 3)
          {
            v83 = 0xEB0000000065636ELL;
            v84 = 0x616E65746E69614DLL;
          }
          else
          {
            *(_QWORD *)&v114 = 0;
            *((_QWORD *)&v114 + 1) = 0xE000000000000000;
            sub_1CB846954();
            sub_1CB815A14();
            sub_1CB846954();
            v83 = *((_QWORD *)&v114 + 1);
            v84 = v114;
          }
          *(_QWORD *)&v114 = sub_1CB775A54(v84, v83, &v113);
          sub_1CB846E58();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1CB771000, v77, v78, "The scheduler is starting to run plugins with context=%s", v81, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D179FE84](v82, -1, -1);
          MEMORY[0x1D179FE84](v81, -1, -1);

          v101 = v108;
          v42 = v79;
        }
        else
        {

          v101 = v108;
        }
        LOBYTE(v114) = v101;
        v103 = v112;
        swift_bridgeObjectRetain();
        sub_1CB7C1C00((unsigned __int8 *)&v114, v103, (uint64_t)sub_1CB7C65BC, v42);
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      v66 = *(_QWORD *)(v107 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_eventBasedEnabledPlugins);
      v67 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v68 = (void *)sub_1CB845EE0();
      *(_QWORD *)&v114 = 0;
      v69 = objc_msgSend(v67, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v68, 0, 0, &v114);

      v53 = (void *)v114;
      if (v69)
      {
        sub_1CB845F58();
        v70 = sub_1CB846A5C();
        v71 = v53;

        swift_bridgeObjectRetain();
        v56 = sub_1CB817914(v70, v66);
        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
    }
    v85 = v53;
    v86 = (void *)sub_1CB845E80();

    swift_willThrow();
    sub_1CB7C65D4();
    v87 = (void *)swift_allocError();
    *(_QWORD *)v88 = 0;
    *(_QWORD *)(v88 + 8) = 0;
    *(_BYTE *)(v88 + 16) = 3;
    swift_willThrow();

    v106(v14, v10);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v9, v7);
    if (qword_1ED88E518 != -1)
      swift_once();
    v89 = sub_1CB8466D8();
    __swift_project_value_buffer(v89, (uint64_t)qword_1ED890248);
    v90 = v87;
    v91 = v87;
    v92 = sub_1CB8466C0();
    v93 = sub_1CB846C90();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = (uint8_t *)swift_slowAlloc();
      v95 = v42;
      v96 = swift_slowAlloc();
      v113 = (uint64_t)v87;
      *(_QWORD *)&v114 = v96;
      *(_DWORD *)v94 = 136315138;
      v97 = v87;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
      v98 = sub_1CB8468DC();
      v113 = sub_1CB775A54(v98, v99, (uint64_t *)&v114);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CB771000, v92, v93, "Error loading plugins: %s", v94, 0xCu);
      swift_arrayDestroy();
      v100 = v96;
      v42 = v95;
      MEMORY[0x1D179FE84](v100, -1, -1);
      MEMORY[0x1D179FE84](v94, -1, -1);
    }
    else
    {

    }
    if (qword_1ED88DCB8 != -1)
      swift_once();
    v102 = (_QWORD *)swift_allocObject();
    v102[2] = sub_1CB7C65BC;
    v102[3] = v42;
    v102[4] = MEMORY[0x1E0DEE9D8];
    swift_retain();
    sub_1CB82DD74((uint64_t)sub_1CB7C61E4, (uint64_t)v102);
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v61 = sub_1CB8466D8();
    __swift_project_value_buffer(v61, (uint64_t)qword_1ED890248);
    v62 = sub_1CB8466C0();
    v63 = sub_1CB846C84();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v64 = 0;
      _os_log_impl(&dword_1CB771000, v62, v63, "The scheduler is skipping running plugins, the current time is outside the threshold", v64, 2u);
      MEMORY[0x1D179FE84](v64, -1, -1);
    }

    if (qword_1ED88DCB8 != -1)
      swift_once();
    v65 = (_QWORD *)swift_allocObject();
    v65[2] = v111;
    v65[3] = a3;
    v65[4] = MEMORY[0x1E0DEE9D8];
    swift_retain();
    sub_1CB82DD74((uint64_t)sub_1CB7C61E4, (uint64_t)v65);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
  }
}

uint64_t sub_1CB7C061C(uint64_t a1, char *a2, uint64_t a3, int a4, uint64_t a5, _QWORD *a6, uint64_t (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t result;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  const char *v24;
  uint8_t *v25;
  os_signpost_id_t v26;
  void (*v27)(_BYTE *, uint64_t);
  _BYTE v28[4];
  int v29;
  uint64_t v30;
  int v31;
  uint64_t (*v32)(uint64_t);
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a1;
  v35 = a8;
  v32 = a7;
  v33 = a6;
  v31 = a4;
  v30 = sub_1CB846684();
  v9 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_1CB846654();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = &v28[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v18 = &v28[-v17];
  if (qword_1ED88A288 != -1)
    swift_once();
  v19 = sub_1CB846678();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED8901B0);
  v20 = sub_1CB84666C();
  sub_1CB846690();
  v29 = sub_1CB846D5C();
  result = sub_1CB846E28();
  if ((result & 1) == 0)
    goto LABEL_7;
  if ((v31 & 1) == 0)
  {
    if (!a2)
    {
      __break(1u);
LABEL_7:

      (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v18, v12);
      v22 = v32;
LABEL_16:
      __swift_project_boxed_opaque_existential_1(v33, v33[3]);
      sub_1CB7C9908();
      return v22(v34);
    }
LABEL_12:
    swift_retain();
    sub_1CB8466B4();
    swift_release();
    v23 = v30;
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v9 + 88))(v11, v30) == *MEMORY[0x1E0DF2190])
    {
      v24 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v23);
      v24 = "";
    }
    v22 = v32;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16))(v16, v18, v12);
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    v26 = sub_1CB84663C();
    _os_signpost_emit_with_name_impl(&dword_1CB771000, v20, (os_signpost_type_t)v29, v26, a2, v24, v25, 2u);
    MEMORY[0x1D179FE84](v25, -1, -1);

    v27 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
    v27(v18, v12);
    v27(v16, v12);
    goto LABEL_16;
  }
  if ((unint64_t)a2 >> 32)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a2 >> 11 != 27)
  {
    if (a2 >> 16 <= 0x10)
    {
      a2 = sub_1CB7BEF14();
      goto LABEL_12;
    }
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1CB7C08DC(char *a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t result;
  uint64_t v17;
  const char *v18;
  uint8_t *v19;
  os_signpost_id_t v20;
  void (*v21)(_BYTE *, uint64_t);
  _BYTE v22[4];
  int v23;
  uint64_t v24;
  int v25;

  v25 = a3;
  v24 = sub_1CB846684();
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1CB846654();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v13 = &v22[-v12];
  if (qword_1ED88A288 != -1)
    swift_once();
  v14 = sub_1CB846678();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED8901B0);
  v15 = sub_1CB84666C();
  sub_1CB846690();
  v23 = sub_1CB846D5C();
  result = sub_1CB846E28();
  if ((result & 1) == 0)
    goto LABEL_7;
  if ((v25 & 1) == 0)
  {
    if (!a1)
    {
      __break(1u);
LABEL_7:

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    }
    goto LABEL_12;
  }
  if ((unint64_t)a1 >> 32)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (a1 >> 11 == 27)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  if (a1 >> 16 > 0x10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  a1 = sub_1CB7BEF14();
LABEL_12:
  swift_retain();
  sub_1CB8466B4();
  swift_release();
  v17 = v24;
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v4 + 88))(v6, v24) == *MEMORY[0x1E0DF2190])
  {
    v18 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v17);
    v18 = "";
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
  v19 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v19 = 0;
  v20 = sub_1CB84663C();
  _os_signpost_emit_with_name_impl(&dword_1CB771000, v15, (os_signpost_type_t)v23, v20, a1, v18, v19, 2u);
  MEMORY[0x1D179FE84](v19, -1, -1);

  v21 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v21(v13, v7);
  return ((uint64_t (*)(_BYTE *, uint64_t))v21)(v11, v7);
}

uint64_t sub_1CB7C0B70(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  os_log_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v69;
  _QWORD *v70;
  _QWORD v71[2];
  uint8_t *v72;
  uint64_t v73;
  int v74;
  os_log_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(void);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t aBlock[6];

  v85 = a8;
  v86 = a4;
  v87 = a5;
  v88 = a6;
  v80 = a9;
  v13 = sub_1CB846744();
  v83 = *(_QWORD *)(v13 - 8);
  v84 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1CB84678C();
  v81 = *(_QWORD *)(v16 - 8);
  v82 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1CB845F58();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v69 = sub_1CB847044();
    v21 = swift_bridgeObjectRelease();
    if (v69 > a1)
    {
LABEL_3:
      swift_beginAccess();
      Strong = swift_weakLoadStrong();
      if (Strong)
      {
        v25 = Strong;
        v77 = a2;
        v76 = a7;
        if ((a3 & 0xC000000000000001) != 0)
        {
          v79 = MEMORY[0x1D179F320](a1, a3);
LABEL_8:
          v78 = v25;
          v26 = *(_QWORD *)(v25
                          + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector
                          + 24);
          v27 = *(_QWORD *)(v25
                          + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector
                          + 32);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v25 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector), v26);
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27) & 1) != 0)
          {
            if (qword_1ED88E518 != -1)
              swift_once();
            v28 = sub_1CB8466D8();
            __swift_project_value_buffer(v28, (uint64_t)qword_1ED890248);
            swift_retain_n();
            v29 = sub_1CB8466C0();
            v30 = sub_1CB846C84();
            if (os_log_type_enabled(v29, v30))
            {
              v31 = swift_slowAlloc();
              v32 = swift_slowAlloc();
              aBlock[0] = v32;
              *(_DWORD *)v31 = 136315394;
              v85 = v31 + 4;
              v33 = objc_msgSend(*(id *)(v79 + 32), sel_bundleURL);
              sub_1CB845F34();

              v34 = sub_1CB845ED4();
              v36 = v35;
              (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
              v89 = sub_1CB775A54(v34, v36, aBlock);
              sub_1CB846E58();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v31 + 12) = 2048;
              v89 = a1;
              sub_1CB846E58();
              _os_log_impl(&dword_1CB771000, v29, v30, "Stopping SiriPrivateLearningAnalytics plugin (%s) run from index %ld - device is in low power mode", (uint8_t *)v31, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1D179FE84](v32, -1, -1);
              MEMORY[0x1D179FE84](v31, -1, -1);

            }
            else
            {

              v37 = swift_release_n();
            }
            v58 = v77;
            v59 = v76;
            ((void (*)(uint64_t))v86)(v37);
            if (qword_1ED88DCB8 != -1)
              swift_once();
            v60 = (_QWORD *)swift_allocObject();
            v60[2] = v88;
            v60[3] = v59;
            v60[4] = v58;
            swift_retain();
            swift_bridgeObjectRetain();
            sub_1CB82DD74((uint64_t)sub_1CB7C61E4, (uint64_t)v60);
            swift_release();
            swift_release();
          }
          else
          {
            v43 = v79;
            if (qword_1ED88E518 != -1)
              swift_once();
            v44 = sub_1CB8466D8();
            __swift_project_value_buffer(v44, (uint64_t)qword_1ED890248);
            swift_retain_n();
            v45 = sub_1CB8466C0();
            v46 = sub_1CB846C78();
            v47 = v46;
            if (os_log_type_enabled(v45, v46))
            {
              v75 = v45;
              v48 = swift_slowAlloc();
              v74 = v47;
              v49 = (uint8_t *)v48;
              v50 = swift_slowAlloc();
              v73 = v50;
              v72 = v49;
              *(_DWORD *)v49 = 136315138;
              aBlock[0] = v50;
              v71[1] = v49 + 4;
              v51 = objc_msgSend(*(id *)(v43 + 32), sel_bundleURL);
              sub_1CB845F34();

              v52 = sub_1CB845ED4();
              v54 = v53;
              (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
              v89 = sub_1CB775A54(v52, v54, aBlock);
              sub_1CB846E58();
              swift_release_n();
              v43 = v79;
              swift_bridgeObjectRelease();
              v55 = v75;
              v56 = v72;
              _os_log_impl(&dword_1CB771000, v75, (os_log_type_t)v74, "Starting plugin run for %s", v72, 0xCu);
              v57 = v73;
              swift_arrayDestroy();
              MEMORY[0x1D179FE84](v57, -1, -1);
              MEMORY[0x1D179FE84](v56, -1, -1);

            }
            else
            {

              swift_release_n();
            }
            v61 = v77;
            v62 = v76;
            v79 = *(_QWORD *)(v78 + 16);
            v63 = swift_allocObject();
            *(_QWORD *)(v63 + 16) = v43;
            *(_BYTE *)(v63 + 24) = v80;
            *(_QWORD *)(v63 + 32) = v61;
            *(_QWORD *)(v63 + 40) = a3;
            v64 = v85;
            v65 = v87;
            *(_QWORD *)(v63 + 48) = v86;
            *(_QWORD *)(v63 + 56) = v65;
            *(_QWORD *)(v63 + 64) = v88;
            *(_QWORD *)(v63 + 72) = v62;
            *(_QWORD *)(v63 + 80) = v64;
            *(_QWORD *)(v63 + 88) = a1;
            aBlock[4] = (uint64_t)sub_1CB7C6238;
            aBlock[5] = v63;
            aBlock[0] = MEMORY[0x1E0C809B0];
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_1CB8214F0;
            aBlock[3] = (uint64_t)&block_descriptor_6;
            v66 = _Block_copy(aBlock);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1CB846768();
            v89 = MEMORY[0x1E0DEE9D8];
            sub_1CB7762AC(&qword_1ED88E4A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
            sub_1CB7C6674((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8);
            v67 = v84;
            sub_1CB846EC4();
            MEMORY[0x1D179F0D4](0, v18, v15, v66);
            _Block_release(v66);
            swift_release();
            (*(void (**)(char *, uint64_t))(v83 + 8))(v15, v67);
            (*(void (**)(char *, uint64_t))(v81 + 8))(v18, v82);
            swift_release();
          }
          return swift_release();
        }
        if (a1 < 0)
        {
          __break(1u);
        }
        else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
        {
          v79 = *(_QWORD *)(a3 + 8 * a1 + 32);
          swift_retain();
          goto LABEL_8;
        }
        __break(1u);
      }
      else if (qword_1ED88E518 == -1)
      {
LABEL_14:
        v38 = sub_1CB8466D8();
        __swift_project_value_buffer(v38, (uint64_t)qword_1ED890248);
        v39 = sub_1CB8466C0();
        v40 = sub_1CB846C90();
        if (os_log_type_enabled(v39, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v41 = 0;
          _os_log_impl(&dword_1CB771000, v39, v40, "The scheduler was deallocated, cancelling the execution of plugins", v41, 2u);
          MEMORY[0x1D179FE84](v41, -1, -1);
        }

        v86();
        if (qword_1ED88DCB8 != -1)
          swift_once();
        v42 = (_QWORD *)swift_allocObject();
        v42[2] = v88;
        v42[3] = a7;
        v42[4] = a2;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1CB82DD74((uint64_t)sub_1CB7C61E4, (uint64_t)v42);
        return swift_release();
      }
      swift_once();
      goto LABEL_14;
    }
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    goto LABEL_3;
  }
  ((void (*)(uint64_t))v86)(v21);
  if (qword_1ED88DCB8 != -1)
    swift_once();
  v70 = (_QWORD *)swift_allocObject();
  v70[2] = v88;
  v70[3] = a7;
  v70[4] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1CB82DD74((uint64_t)sub_1CB7C61E4, (uint64_t)v70);
  return swift_release();
}

uint64_t sub_1CB7C1544(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t (*)(uint64_t *), uint64_t, uint64_t, uint64_t);
  uint64_t ObjectType;
  char v23;

  v17 = *(_QWORD *)(a1 + 24);
  ObjectType = swift_getObjectType();
  v23 = a2;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a3;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a6;
  *(_QWORD *)(v18 + 56) = a7;
  *(_QWORD *)(v18 + 64) = a8;
  *(_QWORD *)(v18 + 72) = a9;
  *(_BYTE *)(v18 + 80) = a2;
  *(_QWORD *)(v18 + 88) = a10;
  v19 = *(void (**)(char *, uint64_t (*)(uint64_t *), uint64_t, uint64_t, uint64_t))(v17 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v19(&v23, sub_1CB7C62D8, v18, ObjectType, v17);
  return swift_release();
}

uint64_t sub_1CB7C1654(uint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  __objc2_prot_list **p_base_prots;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  os_log_type_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  uint64_t v47;
  uint8_t *v48;
  __objc2_prot_list **v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint8_t *v54;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[2];
  uint64_t v67;

  v61 = a7;
  v62 = a8;
  v59 = a5;
  v60 = a6;
  v58 = a4;
  v14 = sub_1CB845F58();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  v20 = a1[1];
  v64 = v19;
  v65 = a2;
  p_base_prots = &SupportedLocalesPListStore.base_prots;
  v63 = v16;
  if (!v20)
    goto LABEL_6;
  v22 = qword_1ED88E518;
  swift_bridgeObjectRetain();
  if (v22 != -1)
    goto LABEL_18;
  while (1)
  {
    v23 = sub_1CB8466D8();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED890248);
    swift_retain_n();
    swift_bridgeObjectRetain();
    v24 = sub_1CB8466C0();
    v25 = sub_1CB846C90();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v57 = swift_slowAlloc();
      v67 = v57;
      *(_DWORD *)v26 = 136315394;
      v56[1] = v26 + 4;
      v27 = objc_msgSend(*(id *)(a2 + 32), (SEL)p_base_prots[332]);
      sub_1CB845F34();

      v28 = sub_1CB845ED4();
      v30 = v29;
      v31 = v63;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v63);
      v66[0] = sub_1CB775A54(v28, v30, &v67);
      sub_1CB846E58();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      v66[0] = v64;
      v66[1] = (uint64_t)v20;
      swift_bridgeObjectRetain();
      v32 = sub_1CB8468DC();
      v66[0] = sub_1CB775A54(v32, v33, &v67);
      sub_1CB846E58();
      swift_bridgeObjectRelease_n();
      a2 = v65;
      swift_bridgeObjectRelease();
      v34 = v25;
      v14 = v31;
      p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
      _os_log_impl(&dword_1CB771000, v24, v34, "Error running plugin. Bundle: %s; Error: %s", (uint8_t *)v26, 0x16u);
      v35 = v57;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v35, -1, -1);
      MEMORY[0x1D179FE84](v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      v14 = v63;
    }
LABEL_6:
    v36 = *(void **)(a2 + 32);
    v37 = objc_msgSend(v36, (SEL)p_base_prots[332]);
    sub_1CB845F34();

    v38 = sub_1CB845ED4();
    v40 = v39;
    v15 = *(_QWORD *)(v15 + 8);
    ((void (*)(char *, uint64_t))v15)(v18, v14);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      a3 = sub_1CB78FFD8(0, a3[2] + 1, 1, a3);
    v42 = a3[2];
    v41 = a3[3];
    if (v42 >= v41 >> 1)
      a3 = sub_1CB78FFD8((_QWORD *)(v41 > 1), v42 + 1, 1, a3);
    a3[2] = v42 + 1;
    v43 = &a3[4 * v42];
    v43[4] = v38;
    v43[5] = v40;
    v43[6] = v64;
    v43[7] = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED88E518 != -1)
      swift_once();
    v44 = a11;
    v45 = sub_1CB8466D8();
    __swift_project_value_buffer(v45, (uint64_t)qword_1ED890248);
    a2 = v65;
    swift_retain_n();
    v20 = sub_1CB8466C0();
    v46 = sub_1CB846C78();
    if (os_log_type_enabled(v20, v46))
    {
      v47 = swift_slowAlloc();
      v64 = a11;
      v48 = (uint8_t *)v47;
      a2 = swift_slowAlloc();
      v66[0] = a2;
      v49 = p_base_prots;
      *(_DWORD *)v48 = 136315138;
      p_base_prots = (__objc2_prot_list **)(v48 + 12);
      v57 = (uint64_t)(v48 + 4);
      v50 = objc_msgSend(v36, (SEL)v49 + 1627);
      sub_1CB845F34();

      v51 = sub_1CB845ED4();
      v53 = v52;
      ((void (*)(char *, uint64_t))v15)(v18, v63);
      v67 = sub_1CB775A54(v51, v53, v66);
      sub_1CB846E58();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v20, v46, "Finished plugin run for %s", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](a2, -1, -1);
      v54 = v48;
      v44 = v64;
      MEMORY[0x1D179FE84](v54, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    if (!__OFADD__(v44, 1))
      break;
    __break(1u);
LABEL_18:
    swift_once();
  }
  sub_1CB7C0B70(v44 + 1, a3, v58, v59, v60, v61, v62, a9, a10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7C1C00(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;

  v5 = v4;
  v24 = a2;
  v9 = sub_1CB846654();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v5;
  *(_QWORD *)(v14 + 24) = a3;
  *(_QWORD *)(v14 + 32) = a4;
  *(_BYTE *)(v14 + 40) = v13;
  v15 = qword_1ED88A288;
  swift_retain();
  swift_retain();
  if (v15 != -1)
    swift_once();
  if (v13 == 3)
    v16 = 10;
  else
    v16 = 16;
  if (v13 == 3)
    v17 = "runPlugins";
  else
    v17 = "runPluginsEvents";
  v18 = sub_1CB846678();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED8901B0);
  sub_1CB846648();
  v19 = sub_1CB7BE7AC(v17, v16, 2, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v17;
  *(_QWORD *)(v20 + 24) = v16;
  *(_BYTE *)(v20 + 32) = 2;
  *(_QWORD *)(v20 + 40) = v19;
  v21 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_1CB7C0B70(0, MEMORY[0x1E0DEE9D8], v24, (void (*)(void))sub_1CB7C61AC, v20, (uint64_t)sub_1CB7C6178, v14, v21, v13);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1CB7C1E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E268);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CB846B7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 32) = v13;
  *(_QWORD *)(v14 + 40) = a3;
  *(_QWORD *)(v14 + 48) = a4;
  *(_QWORD *)(v14 + 56) = a1;
  *(_BYTE *)(v14 + 64) = a5;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1CB7C22FC((uint64_t)v11, (uint64_t)&unk_1EF99EFB8, v14);
  return swift_release();
}

uint64_t sub_1CB7C1F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;

  *(_BYTE *)(v8 + 97) = a8;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = a5;
  return swift_task_switch();
}

uint64_t sub_1CB7C1F58()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    *(_BYTE *)(v0 + 96) = *(_BYTE *)(v0 + 97);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v2;
    *v2 = v0;
    v2[1] = sub_1CB7C20B8;
    return sub_1CB7C244C((_BYTE *)(v0 + 96));
  }
  else
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v4 = sub_1CB8466D8();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED890248);
    v5 = sub_1CB8466C0();
    v6 = sub_1CB846C90();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1CB771000, v5, v6, "The scheduler was deallocated, cancelling the execution of the user feedback learning platform", v7, 2u);
      MEMORY[0x1D179FE84](v7, -1, -1);
    }
    v8 = *(_QWORD *)(v0 + 64);
    v9 = *(void (**)(uint64_t))(v0 + 48);

    v9(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1CB7C20B8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB7C2114()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(void (**)(uint64_t))(v0 + 48);
  v4 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  sub_1CB7F0FE8(v1);
  v2(v4);
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CB7C218C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1CB846B7C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1CB846B70();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1CB785B54(a1, &qword_1ED88E268);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CB846B1C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C200);
  return swift_task_create();
}

uint64_t sub_1CB7C22E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CB7C22FC(a1, a2, a3);
}

uint64_t sub_1CB7C22FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1CB846B7C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1CB846B70();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1CB785B54(a1, &qword_1ED88E268);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CB846B1C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1CB7C244C(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 232) = v1;
  v4 = sub_1CB846684();
  *(_QWORD *)(v2 + 240) = v4;
  *(_QWORD *)(v2 + 248) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 256) = swift_task_alloc();
  v5 = sub_1CB846654();
  *(_QWORD *)(v2 + 264) = v5;
  *(_QWORD *)(v2 + 272) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 280) = swift_task_alloc();
  *(_QWORD *)(v2 + 288) = swift_task_alloc();
  *(_BYTE *)(v2 + 336) = *a1;
  return swift_task_switch();
}

uint64_t sub_1CB7C24F0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  if (qword_1ED88E518 != -1)
    swift_once();
  v1 = sub_1CB8466D8();
  *(_QWORD *)(v0 + 296) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED890248);
  v2 = sub_1CB8466C0();
  v3 = sub_1CB846C84();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v33 = v5;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 224) = sub_1CB775A54(0xD000000000000029, 0x80000001CB8549C0, &v33);
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v2, v3, "PluginScheduler.%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v5, -1, -1);
    MEMORY[0x1D179FE84](v4, -1, -1);
  }

  v6 = (_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_featureFlags);
  v7 = v6[3];
  v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  *(_QWORD *)(v0 + 96) = &type metadata for SiriPrivateLearningFeatureFlag;
  *(_QWORD *)(v0 + 104) = sub_1CB7869D8();
  *(_BYTE *)(v0 + 72) = 13;
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v0 + 72, v7, v8);
  __swift_destroy_boxed_opaque_existential_0(v0 + 72);
  if ((v9 & 1) == 0)
  {
    v11 = sub_1CB8466C0();
    v12 = sub_1CB846C84();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v33 = v14;
      *(_DWORD *)v13 = 136315138;
      v15 = sub_1CB846F48();
      *(_QWORD *)(v0 + 200) = sub_1CB775A54(v15, v16, &v33);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v11, v12, "%s is not enabled", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v14, -1, -1);
      MEMORY[0x1D179FE84](v13, -1, -1);
    }

    goto LABEL_17;
  }
  if (*(_BYTE *)(v0 + 336) != 3)
  {
    v17 = sub_1CB8466C0();
    v18 = sub_1CB846C90();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      *(_DWORD *)v19 = 136315138;
      v32 = v20;
      v33 = 0;
      v34 = 0xE000000000000000;
      sub_1CB846954();
      sub_1CB815A14();
      sub_1CB846954();
      *(_QWORD *)(v0 + 176) = sub_1CB775A54(v33, v34, &v32);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v17, v18, "Error: context is %s, only maintenance context is supported by the User Feedback Learning platform", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v20, -1, -1);
      MEMORY[0x1D179FE84](v19, -1, -1);
    }

LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
  }
  v10 = *(_QWORD *)(v0 + 232);
  LOBYTE(v33) = 0;
  sub_1CB79CBA8(v10 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_usageLogger, v0 + 112);
  SiriUserFeedbackLearningTask.init(context:usageLogger:)((char *)&v33, (_QWORD *)(v0 + 112), v0 + 16);
  if (qword_1ED88A288 != -1)
    swift_once();
  v21 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 264);
  v23 = *(_QWORD *)(v0 + 272);
  v24 = *(_QWORD *)(v0 + 232);
  v25 = sub_1CB846678();
  *(_QWORD *)(v0 + 304) = __swift_project_value_buffer(v25, (uint64_t)qword_1ED8901B0);
  sub_1CB846648();
  *(_QWORD *)(v0 + 312) = sub_1CB7BE7AC("runUserFeedbackLearningPlatform", 31, 2, v21);
  v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  *(_QWORD *)(v0 + 320) = v26;
  v26(v21, v22);
  v27 = *(_QWORD *)(v24
                  + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_userFeedbackLearningPlatform
                  + 24);
  v28 = *(_QWORD *)(v24
                  + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_userFeedbackLearningPlatform
                  + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v24 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_userFeedbackLearningPlatform), v27);
  v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v28 + 16) + *(_QWORD *)(v28 + 16));
  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v29;
  *v29 = v0;
  v29[1] = sub_1CB7C2C04;
  return v31(v0 + 152, v0 + 16, v27, v28);
}

uint64_t sub_1CB7C2C04()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CB7C2C58()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  NSObject *v4;
  os_signpost_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  os_signpost_id_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  void *v30;
  uint64_t v31[3];

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(void **)(v0 + 160);
  v3 = *(void **)(v0 + 168);
  v4 = sub_1CB84666C();
  sub_1CB846690();
  v5 = sub_1CB846D5C();
  if ((sub_1CB846E28() & 1) != 0)
  {
    v30 = v1;
    v6 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 240);
    swift_retain();
    sub_1CB8466B4();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v7, v8) == *MEMORY[0x1E0DF2190])
    {
      v9 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
      v9 = "";
    }
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
    v29 = v2;
    v10 = (_QWORD *)(v0 + 288);
    v11 = *(_QWORD *)(v0 + 280);
    v12 = *(_QWORD *)(v0 + 264);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 272) + 16))(*(_QWORD *)(v0 + 288), v11, v12);
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = sub_1CB84663C();
    _os_signpost_emit_with_name_impl(&dword_1CB771000, v4, v5, v14, "runUserFeedbackLearningPlatform", v9, v13, 2u);
    MEMORY[0x1D179FE84](v13, -1, -1);

    v15 = v12;
    v2 = v29;
    v28(v11, v15);
    v1 = v30;
  }
  else
  {
    v10 = (_QWORD *)(v0 + 280);

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 320))(*v10, *(_QWORD *)(v0 + 264));
  if (v3)
  {
    v16 = v3;
    v17 = v3;
    v18 = v3;
    v19 = sub_1CB8466C0();
    v20 = sub_1CB846C90();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v31[0] = v22;
      *(_DWORD *)v21 = 136315138;
      *(_QWORD *)(v0 + 208) = v3;
      v23 = v3;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
      v24 = sub_1CB8468DC();
      *(_QWORD *)(v0 + 216) = sub_1CB775A54(v24, v25, v31);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CB771000, v19, v20, "Error running user feedback platform: %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v22, -1, -1);
      MEMORY[0x1D179FE84](v21, -1, -1);

    }
    else
    {

    }
  }
  v31[0] = v2;
  v31[1] = (uint64_t)v1;
  v31[2] = (uint64_t)v3;
  v26 = SiriUserFeedbackLearningPlatformResult.toSchedulerResult()();
  swift_release();
  sub_1CB7A0670(v0 + 16);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v26);
}

uint64_t sub_1CB7C2FD8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint8_t *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  os_log_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  objc_class *v37;
  char *v38;
  uint64_t *v39;
  double v40;
  double v41;
  void (*v42)(char *, uint64_t);
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  objc_class *v52;
  char *v53;
  uint64_t *v54;
  uint64_t v56;
  uint8_t *v57;
  uint8_t *v58;
  int v59;
  uint64_t v60;
  os_log_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  objc_super v66;
  objc_super v67;
  double v68;
  unint64_t v69;

  v2 = v1;
  v4 = sub_1CB846018();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v56 - v9;
  v11 = *a1;
  if (v11 != 3)
  {
    v64 = v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_timestampPath;
    v12 = sub_1CB7C5C1C(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_timestampPath);
    if (!v12)
    {
      if (qword_1ED88E518 != -1)
        swift_once();
      v31 = sub_1CB8466D8();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED890248);
      v32 = sub_1CB8466C0();
      v33 = sub_1CB846C84();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_1CB771000, v32, v33, "Cannot retrieve the scheduler timestamp, the scheduler might not have run before", v34, 2u);
        MEMORY[0x1D179FE84](v34, -1, -1);
      }

      v68 = 0.0;
      v69 = 0xE000000000000000;
      sub_1CB846954();
      sub_1CB815A14();
      sub_1CB846954();
      v35 = *(_QWORD *)&v68;
      v36 = v69;
      v37 = (objc_class *)type metadata accessor for PluginSchedulerTimestamp();
      v38 = (char *)objc_allocWithZone(v37);
      v39 = (uint64_t *)&v38[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24PluginSchedulerTimestamp_scheduler];
      *v39 = v35;
      v39[1] = v36;
      *(_QWORD *)&v38[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24PluginSchedulerTimestamp_timestamp] = 0;
      v66.receiver = v38;
      v66.super_class = v37;
      v16 = objc_msgSendSuper2(&v66, sel_init);
      goto LABEL_20;
    }
    v13 = (void *)v12;
    if (qword_1ED88E518 != -1)
      swift_once();
    v14 = sub_1CB8466D8();
    v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED890248);
    v16 = v13;
    v63 = v15;
    v17 = sub_1CB8466C0();
    v18 = sub_1CB846C84();
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v61 = v17;
      v20 = swift_slowAlloc();
      v59 = v19;
      v21 = (uint8_t *)v20;
      v60 = swift_slowAlloc();
      v68 = *(double *)&v60;
      v62 = v11;
      *(_DWORD *)v21 = 136315138;
      v57 = v21;
      v58 = v21 + 4;
      v22 = objc_msgSend(v16, sel_debugDescription);
      v23 = v2;
      v24 = sub_1CB8468A0();
      v26 = v25;

      v27 = v24;
      v2 = v23;
      v65 = sub_1CB775A54(v27, v26, (uint64_t *)&v68);
      v11 = v62;
      sub_1CB846E58();

      swift_bridgeObjectRelease();
      v28 = v61;
      v29 = v57;
      _os_log_impl(&dword_1CB771000, v61, (os_log_type_t)v59, "The scheduler retrieved the previous timestamp: %s", v57, 0xCu);
      v30 = v60;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v30, -1, -1);
      MEMORY[0x1D179FE84](v29, -1, -1);

    }
    else
    {

    }
    sub_1CB84600C();
    sub_1CB845FAC();
    sub_1CB845FC4();
    v41 = v40;
    v42 = *(void (**)(char *, uint64_t))(v5 + 8);
    v42(v8, v4);
    v42(v10, v4);
    if (v41 <= 30.0 || v41 >= 172800.0)
    {
      v44 = sub_1CB8466C0();
      v45 = sub_1CB846C84();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v46 = 134217984;
        v68 = v41;
        sub_1CB846E58();
        _os_log_impl(&dword_1CB771000, v44, v45, "The scheduler time delta is outside the threshold, delta=%f", v46, 0xCu);
        MEMORY[0x1D179FE84](v46, -1, -1);
      }

LABEL_20:
      sub_1CB7C3588(v64);
      v47 = 0;
      goto LABEL_26;
    }

  }
  sub_1CB84600C();
  sub_1CB845FB8();
  v49 = v48;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  if (v11 == 3)
  {
    v50 = 0xEB0000000065636ELL;
    v51 = 0x616E65746E69614DLL;
  }
  else
  {
    v68 = 0.0;
    v69 = 0xE000000000000000;
    sub_1CB846954();
    sub_1CB815A14();
    sub_1CB846954();
    v51 = *(_QWORD *)&v68;
    v50 = v69;
  }
  v52 = (objc_class *)type metadata accessor for PluginSchedulerTimestamp();
  v53 = (char *)objc_allocWithZone(v52);
  v54 = (uint64_t *)&v53[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24PluginSchedulerTimestamp_scheduler];
  *v54 = v51;
  v54[1] = v50;
  *(_QWORD *)&v53[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24PluginSchedulerTimestamp_timestamp] = v49;
  v67.receiver = v53;
  v67.super_class = v52;
  v16 = objc_msgSendSuper2(&v67, sel_init);
  sub_1CB7C3588(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_timestampPath);
  v47 = 1;
LABEL_26:

  return v47;
}

void sub_1CB7C3588(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  int v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49[2];

  v49[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1CB845F58();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED88E518 != -1)
    swift_once();
  v7 = sub_1CB8466D8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED890248);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v8 = v1;
  v9 = sub_1CB8466C0();
  v10 = sub_1CB846C84();
  v11 = v10;
  if (os_log_type_enabled(v9, v10))
  {
    v12 = swift_slowAlloc();
    v46 = (void *)swift_slowAlloc();
    v49[0] = v46;
    *(_DWORD *)v12 = 136315394;
    v13 = objc_msgSend(v8, sel_debugDescription, v12 + 4);
    v47 = a1;
    v14 = v13;
    v15 = sub_1CB8468A0();
    v45 = v11;
    v17 = v16;

    v48 = sub_1CB775A54(v15, v17, (uint64_t *)v49);
    sub_1CB846E58();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v18 = sub_1CB845F4C();
    v48 = sub_1CB775A54(v18, v19, (uint64_t *)v49);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl(&dword_1CB771000, v9, (os_log_type_t)v45, "Updating timestamp to %s, path=%s", (uint8_t *)v12, 0x16u);
    v20 = v46;
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v20, -1, -1);
    MEMORY[0x1D179FE84](v12, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }

  v21 = (void *)objc_opt_self();
  v49[0] = 0;
  v22 = objc_msgSend(v21, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v8, 1, v49);
  v23 = v49[0];
  if (v22)
  {
    v24 = sub_1CB845F94();
    v26 = v25;

    sub_1CB7A81D8(v24, v26);
    sub_1CB845FA0();
    sub_1CB779034(v24, v26);
    sub_1CB779034(v24, v26);
  }
  else
  {
    v27 = v23;
    v28 = (void *)sub_1CB845E80();

    swift_willThrow();
    v29 = v8;
    v30 = v28;
    v31 = v29;
    v32 = v28;
    v33 = sub_1CB8466C0();
    v34 = sub_1CB846C90();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = (void *)swift_slowAlloc();
      v49[0] = v36;
      *(_DWORD *)v35 = 136315394;
      v37 = objc_msgSend(v31, sel_debugDescription);
      v38 = sub_1CB8468A0();
      v40 = v39;

      v48 = sub_1CB775A54(v38, v40, (uint64_t *)v49);
      sub_1CB846E58();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      v48 = (uint64_t)v28;
      v41 = v28;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
      v42 = sub_1CB8468DC();
      v48 = sub_1CB775A54(v42, v43, (uint64_t *)v49);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CB771000, v33, v34, "Cannot encode timestamp, timestamp=%s, error=%s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v36, -1, -1);
      MEMORY[0x1D179FE84](v35, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_1CB7C3CD0(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  id v24;
  int v25;
  void (*v26)(_BYTE *, uint64_t, uint64_t, uint64_t);
  void *v27;
  void *v28;
  void (*v29)(_BYTE *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_BYTE *, _BYTE *, uint64_t);
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  _DWORD *v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  void *v47;
  _DWORD *v48;
  os_log_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  id v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  _QWORD *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  os_log_type_t v63;
  uint8_t *v64;
  NSObject *v66;
  int v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  void *v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  void (*v78)(_BYTE *, uint64_t);
  void (*v79)(_QWORD, _QWORD, _QWORD);
  _BYTE v80[4];
  int v81;
  _DWORD *v82;
  _DWORD *v83;
  os_log_t v84;
  uint64_t v85;
  void (*v86)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v87;
  void (*v88)(_BYTE *, uint64_t);
  unint64_t *v89;
  uint64_t v90;
  unint64_t v91;
  id v92[2];

  v92[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v80[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1CB846018();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v80[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = &v80[-v11];
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = &v80[-v14];
  MEMORY[0x1E0C80A78](v13);
  v17 = &v80[-v16];
  LODWORD(v89) = *a1;
  sub_1CB845F4C();
  v18 = objc_allocWithZone(MEMORY[0x1E0C99E98]);
  v19 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v18, sel_initFileURLWithPath_, v19);

  v21 = *MEMORY[0x1E0C998D8];
  v90 = 0;
  v92[0] = 0;
  v22 = objc_msgSend(v20, sel_getResourceValue_forKey_error_, &v90, v21, v92);
  v23 = v90;
  if (!v22)
  {
    v51 = v92[0];
    swift_unknownObjectRetain();
    v52 = (void *)sub_1CB845E80();

    swift_willThrow();
    if (qword_1ED88E518 != -1)
      swift_once();
    v53 = sub_1CB8466D8();
    __swift_project_value_buffer(v53, (uint64_t)qword_1ED890248);
    v54 = v52;
    v55 = v52;
    v56 = sub_1CB8466C0();
    v57 = sub_1CB846C90();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v58 = 138412290;
      v60 = v52;
      v61 = _swift_stdlib_bridgeErrorToNSError();
      v90 = v61;
      sub_1CB846E58();
      *v59 = v61;

      _os_log_impl(&dword_1CB771000, v56, v57, "The scheduler was not able to retrieve the timestamp, error=%@", v58, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v59, -1, -1);
      MEMORY[0x1D179FE84](v58, -1, -1);

      return swift_unknownObjectRelease();
    }

LABEL_20:
    return swift_unknownObjectRelease();
  }
  v24 = v92[0];
  swift_unknownObjectRetain();

  if (!v23)
  {
LABEL_16:
    if (qword_1ED88E518 != -1)
      swift_once();
    v62 = sub_1CB8466D8();
    __swift_project_value_buffer(v62, (uint64_t)qword_1ED890248);
    v56 = sub_1CB8466C0();
    v63 = sub_1CB846C90();
    if (os_log_type_enabled(v56, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v64 = 0;
      _os_log_impl(&dword_1CB771000, v56, v63, "The scheduler was not able to convert the timestamp to Date", v64, 2u);
      MEMORY[0x1D179FE84](v64, -1, -1);
    }
    goto LABEL_20;
  }
  v90 = v23;
  swift_unknownObjectRetain_n();
  v25 = swift_dynamicCast();
  v26 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  if (!v25)
  {
    v26(v4, 1, 1, v5);
    goto LABEL_15;
  }
  v26(v4, 0, 1, v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_15:
    swift_unknownObjectRelease();
    sub_1CB785B54((uint64_t)v4, &qword_1ED88D550);
    goto LABEL_16;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v17, v4, v5);
  sub_1CB84600C();
  sub_1CB845FC4();
  v28 = v27;
  v29 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
  v29(v15, v5);
  if (qword_1ED88E518 != -1)
    swift_once();
  v30 = sub_1CB8466D8();
  v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED890248);
  v32 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16);
  v32(v12, v17, v5);
  v87 = v31;
  v33 = sub_1CB8466C0();
  v34 = sub_1CB846C84();
  v35 = v34;
  if (os_log_type_enabled(v33, v34))
  {
    v36 = (_DWORD *)swift_slowAlloc();
    v85 = swift_slowAlloc();
    v90 = v85;
    *v36 = 136315394;
    v82 = v36;
    v83 = v36 + 1;
    v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    v88 = v29;
    v38 = v37;
    v39 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    v84 = v33;
    v40 = (void *)v39;
    objc_msgSend(v38, sel_setDateFormat_, v39);

    v41 = (void *)sub_1CB845FDC();
    v42 = objc_msgSend(v38, sel_stringFromDate_, v41);
    v86 = v32;
    v43 = v42;

    v44 = sub_1CB8468A0();
    v81 = v35;
    v46 = v45;

    v29 = v88;
    v32 = v86;
    v47 = (void *)sub_1CB775A54(v44, v46, &v90);
    v48 = v82;
    v92[0] = v47;
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    v29(v12, v5);
    *((_WORD *)v48 + 6) = 2048;
    v92[0] = v28;
    sub_1CB846E58();
    v49 = v84;
    _os_log_impl(&dword_1CB771000, v84, (os_log_type_t)v81, "The scheduler retrieved the timestamp of the previous run: %s, delta=%f", (uint8_t *)v48, 0x16u);
    v50 = v85;
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v50, -1, -1);
    MEMORY[0x1D179FE84](v48, -1, -1);

  }
  else
  {
    v29(v12, v5);

  }
  if (*(double *)&v28 <= 172800.0)
  {
    v29(v17, v5);
    swift_unknownObjectRelease();
  }
  else
  {
    v32(v9, v17, v5);
    v66 = sub_1CB8466C0();
    v67 = sub_1CB846C9C();
    if (os_log_type_enabled(v66, (os_log_type_t)v67))
    {
      LODWORD(v87) = v67;
      v88 = v29;
      v68 = swift_slowAlloc();
      v86 = (void (*)(_BYTE *, _BYTE *, uint64_t))swift_slowAlloc();
      v92[0] = v86;
      *(_DWORD *)v68 = 136315394;
      if ((_DWORD)v89 == 3)
      {
        v69 = 0xEB0000000065636ELL;
        v70 = 0x616E65746E69614DLL;
      }
      else
      {
        v90 = 0;
        v91 = 0xE000000000000000;
        sub_1CB846954();
        sub_1CB815A14();
        sub_1CB846954();
        v70 = v90;
        v69 = v91;
      }
      v90 = sub_1CB775A54(v70, v69, (uint64_t *)v92);
      v89 = &v91;
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2080;
      v85 = v68 + 14;
      v71 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
      v72 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
      objc_msgSend(v71, sel_setDateFormat_, v72);

      v73 = (void *)sub_1CB845FDC();
      v74 = objc_msgSend(v71, sel_stringFromDate_, v73);

      v75 = sub_1CB8468A0();
      v77 = v76;

      v90 = sub_1CB775A54(v75, v77, (uint64_t *)v92);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      v78 = v88;
      v88(v9, v5);
      _os_log_impl(&dword_1CB771000, v66, (os_log_type_t)v87, "The scheduler with context %s was unable to acquire the scheduling lock, the previous run timestamp: %s", (uint8_t *)v68, 0x16u);
      v79 = (void (*)(_QWORD, _QWORD, _QWORD))v86;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v79, -1, -1);
      MEMORY[0x1D179FE84](v68, -1, -1);
      swift_unknownObjectRelease();

      v78(v17, v5);
    }
    else
    {

      v29(v9, v5);
      swift_unknownObjectRelease();
      v29(v17, v5);
    }
  }
  return swift_unknownObjectRelease();
}

uint64_t PluginScheduler.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_lockPath;
  v2 = sub_1CB845F58();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_timestampPath, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_featureFlags);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_usageLogger);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_userFeedbackLearningPlatform);
  return v0;
}

uint64_t PluginScheduler.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_lockPath;
  v2 = sub_1CB845F58();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_timestampPath, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_featureFlags);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_usageLogger);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_userFeedbackLearningPlatform);
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7C48A4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  v6 = sub_1CB845F58();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  if (qword_1ED88C1B8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED890200);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  v14 = v10;
  sub_1CB7BF1C8(&v14, (uint64_t)v9, a2, a3, 0.0);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1CB7C49B8(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

  v4 = (void *)sub_1CB846BB8();
  v5 = (id)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

}

id sub_1CB7C4AEC(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  char *v15;
  uint64_t *v16;
  id v17;
  objc_super v19;

  v2 = v1;
  sub_1CB777FA8(0, (unint64_t *)&unk_1ED88DE50);
  v4 = v2;
  v5 = sub_1CB846DEC();
  if (!v5)
    goto LABEL_5;
  v6 = (void *)v5;
  v7 = sub_1CB8468A0();
  v9 = v8;

  sub_1CB777FA8(0, (unint64_t *)&qword_1ED88DE40);
  v10 = (void *)sub_1CB846DEC();
  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_5:

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v11 = v10;
  objc_msgSend(v10, sel_doubleValue);
  v13 = v12;

  v14 = (objc_class *)type metadata accessor for PluginSchedulerTimestamp();
  v15 = (char *)objc_allocWithZone(v14);
  v16 = (uint64_t *)&v15[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24PluginSchedulerTimestamp_scheduler];
  *v16 = v7;
  v16[1] = v9;
  *(_QWORD *)&v15[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24PluginSchedulerTimestamp_timestamp] = v13;
  v19.receiver = v15;
  v19.super_class = v14;
  v17 = objc_msgSendSuper2(&v19, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v17;
}

uint64_t sub_1CB7C4CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  _QWORD v10[2];

  v0 = sub_1CB846018();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB845FAC();
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  sub_1CB846F30();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v5 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(v4, sel_setDateFormat_, v5);

  v6 = (void *)sub_1CB845FDC();
  v7 = objc_msgSend(v4, sel_stringFromDate_, v6);

  sub_1CB8468A0();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  v8 = v10[0];
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v8;
}

id sub_1CB7C4F14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PluginSchedulerTimestamp();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CB7C4F58(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB7C6724;
  return v6(a1);
}

uint64_t sub_1CB7C4FBC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB7C5020;
  return v6(a1);
}

uint64_t sub_1CB7C5020()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CB7C506C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t result;

  a4();
  v5 = *a1 + 8;
  result = sub_1CB846E58();
  *a1 = v5;
  return result;
}

void sub_1CB7C50BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;

  if (*v0 >> 62)
    goto LABEL_38;
  if (*(uint64_t *)((*v0 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
    do
    {
      if (*v0 >> 62)
      {
        swift_bridgeObjectRetain();
        v1 = sub_1CB847044();
        swift_bridgeObjectRelease();
        v2 = v1 - 2;
        if (v1 < 2)
          return;
      }
      else
      {
        v1 = *(_QWORD *)((*v0 & 0xFFFFFFFFFFFFF8) + 0x10);
        v2 = v1 - 2;
        if (v1 < 2)
          return;
      }
      v3 = 0;
      while (1)
      {
        v15 = 0;
        MEMORY[0x1D179FE9C](&v15, 8);
        v5 = (v15 * (unsigned __int128)(unint64_t)v1) >> 64;
        if (v1 > v15 * v1)
        {
          v6 = -v1 % (unint64_t)v1;
          if (v6 > v15 * v1)
          {
            do
            {
              v15 = 0;
              MEMORY[0x1D179FE9C](&v15, 8);
            }
            while (v6 > v15 * v1);
            v5 = (v15 * (unsigned __int128)(unint64_t)v1) >> 64;
          }
        }
        v7 = v3 + v5;
        if (__OFADD__(v3, v5))
          break;
        if (v3 == v7)
          goto LABEL_6;
        v8 = *v0;
        if ((*v0 & 0xC000000000000001) != 0)
        {
          v9 = MEMORY[0x1D179F320](v3, *v0);
          v8 = *v0;
          if ((*v0 & 0xC000000000000001) == 0)
            goto LABEL_16;
        }
        else
        {
          if (v3 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_33;
          v9 = *(_QWORD *)(v8 + 8 * v3 + 32);
          swift_retain();
          if ((v8 & 0xC000000000000001) == 0)
          {
LABEL_16:
            if ((v7 & 0x8000000000000000) != 0)
              goto LABEL_34;
            if (v7 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_35;
            v10 = *(_QWORD *)(v8 + 8 * v7 + 32);
            swift_retain();
            goto LABEL_19;
          }
        }
        v10 = MEMORY[0x1D179F320](v7, v8);
        v8 = *v0;
LABEL_19:
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *v0 = v8;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v8 < 0 || (v8 & 0x4000000000000000) != 0)
          sub_1CB7FAFCC(v8);
        *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v10;
        swift_release();
        sub_1CB846A74();
        v12 = *v0;
        v13 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *v0 = v12;
        if (!v13 || v12 < 0 || (v12 & 0x4000000000000000) != 0)
          sub_1CB7FAFCC(v12);
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v7 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_37;
        *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v9;
        swift_release();
        sub_1CB846A74();
LABEL_6:
        --v1;
        if (v3++ == v2)
          return;
      }
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      v14 = sub_1CB847044();
      swift_bridgeObjectRelease();
    }
    while (v14 >= 2);
  }
}

uint64_t sub_1CB7C5354(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_1CB7C53BC;
  return v5(v2 + 16);
}

uint64_t sub_1CB7C53BC()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1CB7C540C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E068);
    v3 = sub_1CB846F0C();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1CB8472E4();
      swift_bridgeObjectRetain();
      sub_1CB846924();
      result = sub_1CB847314();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1CB8471A0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1CB8471A0();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1CB7C55AC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void (*v9)(uint64_t, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v2 = v1;
  v4 = sub_1CB845F58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + 16) = a1;
  v8 = a1;
  sub_1CB845EC8();
  v9 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v9(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_lockPath, v7, v4);
  sub_1CB845EC8();
  v9(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_timestampPath, v7, v4);
  v10 = type metadata accessor for DefaultDeviceConfiguration();
  swift_allocObject();
  v11 = sub_1CB823D9C();
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration);
  v12[3] = v10;
  v12[4] = (uint64_t)&off_1E86927C0;
  *v12 = v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v14 = (_QWORD *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector);
  v14[3] = sub_1CB777FA8(0, &qword_1ED88C1C0);
  v14[4] = &off_1E868E040;
  *v14 = v13;
  if (qword_1ED88DF60 != -1)
    swift_once();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_eventBasedEnabledPlugins) = qword_1ED88DF50;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_minEventBasedProcessingThreshold) = 0x403E000000000000;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_maxEventBasedProcessingThreshold) = 0x4105180000000000;
  v15 = v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_featureFlags;
  *(_QWORD *)(v15 + 24) = &type metadata for EnvironmentFeatureFlags;
  *(_QWORD *)(v15 + 32) = &protocol witness table for EnvironmentFeatureFlags;
  v16 = v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_usageLogger;
  *(_QWORD *)(v16 + 24) = &type metadata for UsageLogger;
  *(_QWORD *)(v16 + 32) = &protocol witness table for UsageLogger;
  v17 = v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_userFeedbackLearningPlatform;
  *(_QWORD *)(v17 + 24) = &type metadata for SiriUserFeedbackLearningMLRuntimePlatform;
  *(_QWORD *)(v17 + 32) = &protocol witness table for SiriUserFeedbackLearningMLRuntimePlatform;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1CB7C57F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  _QWORD v8[2];

  v0 = sub_1CB846D08();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1CB846CF0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1CB84678C();
  MEMORY[0x1E0C80A78](v6);
  sub_1CB777FA8(0, qword_1ED88E0B0);
  sub_1CB846774();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E0A8, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E090);
  sub_1CB7C6674((unint64_t *)&unk_1ED88E098, &qword_1ED88E090);
  sub_1CB846EC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  return sub_1CB846D20();
}

uint64_t type metadata accessor for PluginScheduler()
{
  uint64_t result;

  result = qword_1ED88DF88;
  if (!qword_1ED88DF88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t destroy for Locale()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for Locale(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Locale(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for Locale(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PluginSchedulerRunResult()
{
  return &type metadata for PluginSchedulerRunResult;
}

uint64_t sub_1CB7C5B18(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PluginScheduling.runAllNow(context:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1CB7C5B28()
{
  return type metadata accessor for PluginScheduler();
}

uint64_t sub_1CB7C5B30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB845F58();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PluginScheduler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PluginScheduler.__allocating_init(queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of PluginScheduler.runAllNow(context:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t type metadata accessor for PluginSchedulerTimestamp()
{
  return objc_opt_self();
}

uint64_t sub_1CB7C5C1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22[5];

  v2 = sub_1CB845F58();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v20 - v5;
  v7 = sub_1CB845F64();
  v9 = v8;
  sub_1CB777FA8(0, &qword_1ED88DE08);
  type metadata accessor for PluginSchedulerTimestamp();
  sub_1CB7A81D8(v7, v9);
  v10 = sub_1CB846CB4();
  v18 = v10;
  if (v10)
  {
    sub_1CB779034(v7, v9);
    sub_1CB779034(v7, v9);
  }
  else
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v11 = sub_1CB8466D8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED890248);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
    v12 = sub_1CB8466C0();
    v13 = sub_1CB846C90();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v22[0] = v21;
      *(_DWORD *)v14 = 136315138;
      v20[1] = v14 + 4;
      sub_1CB7762AC((unint64_t *)&qword_1ED88A268, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v15 = sub_1CB847170();
      v22[3] = sub_1CB775A54(v15, v16, v22);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      _os_log_impl(&dword_1CB771000, v12, v13, "Cannot decode scheduler timestamp, path=%s", v14, 0xCu);
      v17 = v21;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v17, -1, -1);
      MEMORY[0x1D179FE84](v14, -1, -1);
      sub_1CB779034(v7, v9);

      sub_1CB779034(v7, v9);
    }
    else
    {
      sub_1CB779034(v7, v9);
      sub_1CB779034(v7, v9);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);

    }
    return 0;
  }
  return v18;
}

uint64_t sub_1CB7C614C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB7C6178(uint64_t a1)
{
  uint64_t v1;

  return sub_1CB7C1E04(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

uint64_t sub_1CB7C6188()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB7C61AC()
{
  uint64_t v0;

  return sub_1CB7C08DC(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_1CB7C61BC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CB7C61EC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB7C6238()
{
  uint64_t v0;

  return sub_1CB7C1544(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1CB7C628C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB7C62D8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1CB7C1654(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_BYTE *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_1CB7C6318()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CB7C6354()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_BYTE *)(v0 + 64);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1CB785488;
  *(_BYTE *)(v3 + 97) = v2;
  *(_OWORD *)(v3 + 56) = v5;
  *(_OWORD *)(v3 + 40) = v4;
  return swift_task_switch();
}

uint64_t sub_1CB7C63C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB7C63E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CB785DF4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF99EFC0 + dword_1EF99EFC0))(a1, v4);
}

uint64_t sub_1CB7C6454(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CB785488;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF99EFD0 + dword_1EF99EFD0))(a1, v4);
}

uint64_t sub_1CB7C64C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CB845F58();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CB7C6540()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CB845F58() - 8) + 80);
  return sub_1CB7BF520(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), v0 + ((v1 + 41) & ~v1));
}

uint64_t sub_1CB7C6588()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB7C65BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1CB7C061C(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), (_QWORD *)(v1 + 48), *(uint64_t (**)(uint64_t))(v1 + 88), *(_QWORD *)(v1 + 96));
}

unint64_t sub_1CB7C65D4()
{
  unint64_t result;

  result = qword_1EF99EFE8;
  if (!qword_1EF99EFE8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84C4D0, &type metadata for PluginLoadError);
    atomic_store(result, (unint64_t *)&qword_1EF99EFE8);
  }
  return result;
}

uint64_t objectdestroy_10Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CB7C664C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1CB7C6674(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CB7C66B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CB785DF4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF99EFF0 + dword_1EF99EFF0))(a1, v4);
}

uint64_t SandboxOperation.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1CB8470B0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t SandboxOperation.rawValue.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_1CB7C67A8()
{
  sub_1CB8472E4();
  sub_1CB846924();
  return sub_1CB847314();
}

uint64_t sub_1CB7C67FC()
{
  return sub_1CB846924();
}

uint64_t sub_1CB7C6818()
{
  sub_1CB8472E4();
  sub_1CB846924();
  return sub_1CB847314();
}

uint64_t sub_1CB7C6868@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1CB8470B0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1CB7C68B8(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001CB852110;
}

BOOL checkSandbox(operation:path:)()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  sub_1CB845F4C();
  v0 = (void *)objc_opt_self();
  v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_checkOperation_forPath_, v1, v2);

  return v3 != (id)1;
}

SiriPrivateLearningAnalytics::SandboxError __swiftcall SandboxError.init(message:)(SiriPrivateLearningAnalytics::SandboxError message)
{
  SiriPrivateLearningAnalytics::SandboxError *v1;

  *v1 = message;
  return message;
}

unint64_t sub_1CB7C6988()
{
  unint64_t result;

  result = qword_1EF99F000;
  if (!qword_1EF99F000)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SandboxOperation, &type metadata for SandboxOperation);
    atomic_store(result, (unint64_t *)&qword_1EF99F000);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SandboxOperation(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CB7C6A0C + 4 * asc_1CB84BDE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CB7C6A2C + 4 * byte_1CB84BDE5[v4]))();
}

_BYTE *sub_1CB7C6A0C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CB7C6A2C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CB7C6A34(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CB7C6A3C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CB7C6A44(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CB7C6A4C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SandboxOperation()
{
  return &type metadata for SandboxOperation;
}

ValueMetadata *type metadata accessor for SandboxError()
{
  return &type metadata for SandboxError;
}

id StreamBookmark.__allocating_init(name:date:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  char *v10;
  char *v11;
  id v12;
  uint64_t v13;
  objc_super v15;

  sub_1CB845FB8();
  v7 = v6;
  v8 = (objc_class *)type metadata accessor for StreamBookmark();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = &v9[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  *(_QWORD *)&v9[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = 0;
  v11 = &v9[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
  *(_QWORD *)v11 = v7;
  v11[8] = 0;
  v15.receiver = v9;
  v15.super_class = v8;
  v12 = objc_msgSendSuper2(&v15, sel_init);
  v13 = sub_1CB846018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a3, v13);
  return v12;
}

uint64_t type metadata accessor for StreamBookmark()
{
  return objc_opt_self();
}

uint64_t static StreamBookmark.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_1EF99F010;
}

uint64_t static StreamBookmark.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EF99F010 = a1;
  return result;
}

uint64_t (*static StreamBookmark.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t StreamBookmark.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name);
  swift_bridgeObjectRetain();
  return v1;
}

id StreamBookmark.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  objc_class *v4;
  char *v5;
  char *v6;
  char *v7;
  objc_super v9;

  v4 = (objc_class *)type metadata accessor for StreamBookmark();
  v5 = (char *)objc_allocWithZone(v4);
  v6 = &v5[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = 0;
  v7 = &v5[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v9.receiver = v5;
  v9.super_class = v4;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1CB7C6D58()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark))
    return 0;
  else
    return *(unsigned __int8 *)(v0
                              + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate
                              + 8);
}

void sub_1CB7C6D84(void *a1)
{
  _BYTE *v1;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  _BYTE *v20;
  id v21;
  _BYTE *v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  os_log_type_t type;
  void *v32;
  id v33[2];

  v33[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8];
  v5 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v6 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  if ((v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate + 8] & 1) != 0)
    v7 = 0;
  else
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate]);
  v8 = v7;
  v9 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark];
  if (!v10)
  {
LABEL_13:
    v14 = 0;
    v16 = 0xF000000000000000;
    goto LABEL_14;
  }
  v11 = (void *)objc_opt_self();
  v33[0] = 0;
  swift_unknownObjectRetain();
  v12 = objc_msgSend(v11, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v10, 1, v33);
  v13 = v33[0];
  if (!v12)
  {
    v17 = v13;
    v18 = (void *)sub_1CB845E80();

    swift_willThrow();
    if (qword_1EF99C3A8 != -1)
      swift_once();
    v19 = sub_1CB8466D8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EF99F018);
    v20 = v1;
    v21 = v18;
    v22 = v20;
    v23 = v18;
    v24 = sub_1CB8466C0();
    v25 = sub_1CB846C90();
    if (os_log_type_enabled(v24, v25))
    {
      type = v25;
      v26 = swift_slowAlloc();
      v32 = (void *)swift_slowAlloc();
      v33[0] = v32;
      *(_DWORD *)v26 = 136315394;
      swift_bridgeObjectRetain();
      sub_1CB775A54(v4, v3, (uint64_t *)v33);
      sub_1CB846E58();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      v27 = v18;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
      v28 = sub_1CB8468DC();
      sub_1CB775A54(v28, v29, (uint64_t *)v33);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CB771000, v24, type, "Unable to encode the bookmark data for %s, error=%s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v32, -1, -1);
      MEMORY[0x1D179FE84](v26, -1, -1);

      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();

    }
    v10 = 0;
    goto LABEL_13;
  }
  v14 = sub_1CB845F94();
  v16 = v15;

  swift_unknownObjectRelease();
  sub_1CB7A81D8(v14, v16);
  v10 = sub_1CB845F88();
  sub_1CB779034(v14, v16);
LABEL_14:
  v30 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v10, v30);
  sub_1CB78A670(v14, v16);
  swift_unknownObjectRelease();

}

void *StreamBookmark.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return StreamBookmark.init(coder:)(a1);
}

void *StreamBookmark.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  BOOL v37;
  objc_class *v38;
  char *v39;
  uint64_t *v40;
  char *v41;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  objc_super v46;
  id v47[5];

  v47[4] = *(id *)MEMORY[0x1E0C80C00];
  sub_1CB777FA8(0, (unint64_t *)&unk_1ED88DE50);
  v3 = v1;
  v4 = (void *)sub_1CB846DEC();
  if (!v4)
  {

    goto LABEL_19;
  }
  v5 = sub_1CB8468A0();
  v7 = v6;

  sub_1CB777FA8(0, &qword_1ED88DE28);
  v8 = sub_1CB846DEC();
  if (v8)
  {
    v9 = (void *)v8;
    v44 = v5;
    v10 = sub_1CB845F94();
    v12 = v11;

    v13 = (void *)objc_opt_self();
    v14 = (void *)objc_opt_self();
    sub_1CB7A81D8(v10, v12);
    v15 = objc_msgSend(v14, sel_bm_allowedClassesForSecureCodingBMBookmark);
    sub_1CB846BDC();

    v16 = (void *)sub_1CB846BD0();
    swift_bridgeObjectRelease();
    v17 = (void *)sub_1CB845F88();
    v47[0] = 0;
    v18 = objc_msgSend(v13, sel_unarchivedObjectOfClasses_fromData_error_, v16, v17, v47);

    if (v18)
    {
      v19 = v47[0];
      sub_1CB846EB8();
      sub_1CB779034(v10, v12);
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF99F048);
      if (swift_dynamicCast())
        v20 = v45;
      else
        v20 = 0;
      goto LABEL_14;
    }
    v21 = v47[0];
    v22 = (void *)sub_1CB845E80();

    swift_willThrow();
    if (qword_1EF99C3A8 != -1)
      swift_once();
    v23 = sub_1CB8466D8();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EF99F018);
    swift_bridgeObjectRetain();
    v24 = v22;
    swift_bridgeObjectRetain();
    v25 = v22;
    v26 = sub_1CB8466C0();
    v27 = sub_1CB846C90();
    if (!os_log_type_enabled(v26, v27))
    {
      sub_1CB779034(v10, v12);

      swift_bridgeObjectRelease_n();
      v20 = 0;
LABEL_14:
      v5 = v44;
      goto LABEL_15;
    }
    v28 = swift_slowAlloc();
    v43 = (void *)swift_slowAlloc();
    v47[0] = v43;
    *(_DWORD *)v28 = 136315394;
    swift_bridgeObjectRetain();
    sub_1CB775A54(v44, v7, (uint64_t *)v47);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 12) = 2080;
    v29 = v22;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
    v30 = sub_1CB8468DC();
    sub_1CB775A54(v30, v31, (uint64_t *)v47);
    sub_1CB846E58();
    swift_bridgeObjectRelease();

    v32 = v27;
    v5 = v44;
    _os_log_impl(&dword_1CB771000, v26, v32, "Unable to decode the bookmark data for %s, error=%s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v43, -1, -1);
    MEMORY[0x1D179FE84](v28, -1, -1);
    sub_1CB779034(v10, v12);

    v20 = 0;
  }
  else
  {
    v20 = 0;
    v10 = 0;
    v12 = 0xF000000000000000;
  }
LABEL_15:
  sub_1CB777FA8(0, (unint64_t *)&qword_1ED88DE40);
  v33 = sub_1CB846DEC();
  if (v33)
  {
    sub_1CB846BAC();
    v35 = v34;

    v36 = (void *)v33;
  }
  else
  {

    v36 = 0;
    v35 = 0;
  }
  v37 = v33 == 0;
  v38 = (objc_class *)type metadata accessor for StreamBookmark();
  v39 = (char *)objc_allocWithZone(v38);
  v40 = (uint64_t *)&v39[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  *v40 = v5;
  v40[1] = v7;
  *(_QWORD *)&v39[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = v20;
  v41 = &v39[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
  *(_QWORD *)v41 = v35;
  v41[8] = v37;
  v46.receiver = v39;
  v46.super_class = v38;
  v4 = objc_msgSendSuper2(&v46, sel_init);

  sub_1CB78A670(v10, v12);
LABEL_19:
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v4;
}

unint64_t sub_1CB7C78BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[2];
  unint64_t v9;
  unint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate + 8) & 1) != 0)
  {
    v4 = sub_1CB846018();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  }
  else
  {
    sub_1CB845FAC();
    v5 = sub_1CB846018();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 0, 1, v5);
  }
  v9 = 0;
  v10 = 0xE000000000000000;
  sub_1CB846F30();
  swift_bridgeObjectRelease();
  v9 = 0xD000000000000016;
  v10 = 0x80000001CB854B60;
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  v8[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F058);
  sub_1CB846E34();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  sub_1CB846E34();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  v6 = v9;
  sub_1CB785B54((uint64_t)v3, &qword_1ED88D550);
  return v6;
}

id StreamBookmark.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void StreamBookmark.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StreamBookmark.__deallocating_deinit()
{
  return sub_1CB7C80B8(type metadata accessor for StreamBookmark);
}

uint64_t static StreamBookmarkCollection.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_1EF99F011;
}

uint64_t static StreamBookmarkCollection.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EF99F011 = a1;
  return result;
}

uint64_t (*static StreamBookmarkCollection.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t StreamBookmarkCollection.bookmarks.getter()
{
  return swift_bridgeObjectRetain();
}

id StreamBookmarkCollection.__allocating_init(bookmarks:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24StreamBookmarkCollection_bookmarks] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id StreamBookmarkCollection.init(bookmarks:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24StreamBookmarkCollection_bookmarks] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for StreamBookmarkCollection();
  return objc_msgSendSuper2(&v3, sel_init);
}

void sub_1CB7C7D44(void *a1)
{
  void *v2;
  id v3;

  type metadata accessor for StreamBookmark();
  v2 = (void *)sub_1CB846A44();
  v3 = (id)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

}

id StreamBookmarkCollection.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return StreamBookmarkCollection.init(coder:)(a1);
}

id StreamBookmarkCollection.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  objc_class *v5;
  char *v6;
  id v7;
  objc_super v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88DE98);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1CB848A60;
  *(_QWORD *)(v3 + 32) = sub_1CB777FA8(0, (unint64_t *)&unk_1ED88DE30);
  *(_QWORD *)(v3 + 40) = type metadata accessor for StreamBookmark();
  v4 = v1;
  sub_1CB846DF8();
  swift_bridgeObjectRelease();
  if (!v12)
  {

    sub_1CB785B54((uint64_t)v11, &qword_1ED88E088);
LABEL_6:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88DDF0);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_6;
  }

  v5 = (objc_class *)type metadata accessor for StreamBookmarkCollection();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24StreamBookmarkCollection_bookmarks] = v10;
  v9.receiver = v6;
  v9.super_class = v5;
  v7 = objc_msgSendSuper2(&v9, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v7;
}

void StreamBookmarkCollection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id StreamBookmarkCollection.__deallocating_deinit()
{
  return sub_1CB7C80B8(type metadata accessor for StreamBookmarkCollection);
}

id sub_1CB7C80B8(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1CB7C80F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CB8466D8();
  __swift_allocate_value_buffer(v0, qword_1EF99F018);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF99F018);
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED890248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t type metadata accessor for StreamBookmarkCollection()
{
  return objc_opt_self();
}

uint64_t method lookup function for StreamBookmark()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StreamBookmark.__allocating_init(name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of StreamBookmark.isEmpty()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of StreamBookmark.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of StreamBookmark.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for StreamBookmarkCollection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StreamBookmarkCollection.__allocating_init(bookmarks:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of StreamBookmarkCollection.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of StreamBookmarkCollection.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1CB7C823C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1CB7C8244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1CB7C824C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1CB7C8254(void *a1)
{
  if (a1 && a1 != (void *)1)
  {
    a1;
    sub_1CB846F30();
    swift_bridgeObjectRelease();
    sub_1CB846D2C();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    sub_1CB847170();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    sub_1CB846954();
    sub_1CB785AB8(a1);
  }
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  return 0x6B636F4C656C6946;
}

uint64_t sub_1CB7C83DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v9[5];

  v0 = type metadata accessor for FileLockDarwinDefault();
  v9[3] = v0;
  v9[4] = &off_1E868E608;
  v9[0] = swift_allocObject();
  type metadata accessor for FileLock();
  v1 = (_QWORD *)swift_allocObject();
  v2 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (_QWORD *)((char *)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v5 + 16))(v4);
  v6 = *v4;
  v1[5] = v0;
  v1[6] = &off_1E868E608;
  v1[2] = v6;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  result = swift_release();
  qword_1ED890240 = (uint64_t)v1;
  return result;
}

uint64_t sub_1CB7C84C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t result;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  uint64_t v69;
  _OWORD *v70;
  _OWORD *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  int v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD v100[5];
  uint64_t v101[6];

  v95 = a3;
  v5 = sub_1CB8466D8();
  v98 = *(_QWORD *)(v5 - 8);
  v99 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v94 = (char *)&v89 - v9;
  v97 = sub_1CB845F58();
  v10 = *(_QWORD *)(v97 - 8);
  v11 = MEMORY[0x1E0C80A78](v97);
  v13 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v89 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v92 = (char *)&v89 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v89 - v19;
  v96 = a1;
  sub_1CB845F4C();
  sub_1CB846708();
  sub_1CB846720();
  sub_1CB8466FC();
  sub_1CB846714();
  sub_1CB846900();
  swift_bridgeObjectRelease();
  v21 = sub_1CB8466E4();
  swift_release();
  if (v21 < 0)
  {
    v94 = v8;
    if (qword_1ED88DDC8 != -1)
      swift_once();
    v41 = v99;
    v42 = __swift_project_value_buffer(v99, (uint64_t)qword_1ED88DDB0);
    v43 = v98;
    v44 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v94, v42, v41);
    v45 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v96, v97);
    v46 = sub_1CB8466C0();
    v47 = sub_1CB846C90();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      v101[0] = v49;
      *(_DWORD *)v48 = 136315650;
      sub_1CB7762AC((unint64_t *)&qword_1ED88A268, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v50 = sub_1CB847170();
      v100[0] = sub_1CB775A54(v50, v51, v101);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      v52 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v45);
      *(_WORD *)(v48 + 12) = 2080;
      v53 = MEMORY[0x1D179EAB0](v52);
      result = (uint64_t)strerror(v53);
      if (!result)
      {
LABEL_27:
        __break(1u);
        return result;
      }
      v54 = sub_1CB846960();
      v100[0] = sub_1CB775A54(v54, v55, v101);
      sub_1CB846E58();
      v56 = swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 22) = 1024;
      LODWORD(v100[0]) = MEMORY[0x1D179EAB0](v56);
      sub_1CB846E58();
      _os_log_impl(&dword_1CB771000, v46, v47, "Cannot open lock file %s: %s, %d", (uint8_t *)v48, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v49, -1, -1);
      MEMORY[0x1D179FE84](v48, -1, -1);

      result = (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v94, v99);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v45);

      result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v44, v41);
    }
    v71 = (_OWORD *)v95;
    *(_QWORD *)(v95 + 32) = 0;
    *v71 = 0u;
    v71[1] = 0u;
    return result;
  }
  if (a2)
    v22 = 6;
  else
    v22 = 2;
  v23 = flock(v21, v22);
  v93 = v21;
  if (v23)
  {
    v24 = v99;
    v25 = v97;
    if (qword_1ED88DDC8 != -1)
      swift_once();
    v26 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED88DDB0);
    v27 = v98;
    v28 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v94, v26, v24);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v16, v96, v25);
    v29 = sub_1CB8466C0();
    v30 = sub_1CB846C90();
    if (!os_log_type_enabled(v29, v30))
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v25);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v24);
      goto LABEL_21;
    }
    v31 = swift_slowAlloc();
    v96 = swift_slowAlloc();
    v101[0] = v96;
    *(_DWORD *)v31 = 136315650;
    v32 = sub_1CB845F4C();
    v100[0] = sub_1CB775A54(v32, v33, v101);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    v34 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v25);
    *(_WORD *)(v31 + 12) = 2080;
    v35 = MEMORY[0x1D179EAB0](v34);
    result = (uint64_t)strerror(v35);
    if (result)
    {
      v37 = sub_1CB846960();
      v100[0] = sub_1CB775A54(v37, v38, v101);
      sub_1CB846E58();
      v39 = swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 1024;
      LODWORD(v100[0]) = MEMORY[0x1D179EAB0](v39);
      sub_1CB846E58();
      _os_log_impl(&dword_1CB771000, v29, v30, "Failed to acquire lock file: %s, %s, %d", (uint8_t *)v31, 0x1Cu);
      v40 = v96;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v40, -1, -1);
      MEMORY[0x1D179FE84](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v98 + 8))(v28, v99);
LABEL_21:
      v70 = (_OWORD *)v95;
      *(_QWORD *)(v95 + 32) = 0;
      *v70 = 0u;
      v70[1] = 0u;
      return close(v93);
    }
    __break(1u);
    goto LABEL_27;
  }
  v57 = v99;
  v58 = v97;
  if (qword_1ED88DDC8 != -1)
    swift_once();
  __swift_project_value_buffer(v57, (uint64_t)qword_1ED88DDB0);
  v59 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v60 = v96;
  v59(v20, v96, v58);
  v61 = sub_1CB8466C0();
  v62 = sub_1CB846C84();
  v63 = os_log_type_enabled(v61, v62);
  v90 = v10;
  if (v63)
  {
    v64 = swift_slowAlloc();
    v65 = swift_slowAlloc();
    v101[0] = v65;
    *(_DWORD *)v64 = 136315394;
    v66 = sub_1CB845F4C();
    v100[0] = sub_1CB775A54(v66, v67, v101);
    v58 = v97;
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v58);
    *(_WORD *)(v64 + 12) = 1024;
    LODWORD(v100[0]) = v93;
    v68 = v93;
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v61, v62, "Acquired a file lock for path %s, fd=%d", (uint8_t *)v64, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v65, -1, -1);
    v69 = v64;
    v60 = v96;
    MEMORY[0x1D179FE84](v69, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v58);

    v68 = v93;
  }
  v72 = v91;
  v73 = v92;
  v59(v92, v60, v58);
  sub_1CB79CBA8(v72 + 16, (uint64_t)v101);
  v74 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v101, v101[3]);
  MEMORY[0x1E0C80A78](v74);
  v76 = (uint64_t *)((char *)&v89 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v77 + 16))(v76);
  v78 = *v76;
  v79 = type metadata accessor for FileLockDarwinDefault();
  v100[3] = v79;
  v100[4] = &off_1E868E608;
  v100[0] = v78;
  v80 = type metadata accessor for FileLockContextExclusive();
  v81 = swift_allocObject();
  v82 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v100, v79);
  MEMORY[0x1E0C80A78](v82);
  v84 = v58;
  v85 = (uint64_t *)((char *)&v89 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v86 + 16))(v85);
  v87 = *v85;
  *(_QWORD *)(v81 + 40) = v79;
  *(_QWORD *)(v81 + 48) = &off_1E868E608;
  *(_QWORD *)(v81 + 16) = v87;
  *(_BYTE *)(v81 + 60) = 0;
  *(_DWORD *)(v81 + 56) = v68;
  (*(void (**)(uint64_t, char *, uint64_t))(v90 + 32))(v81+ OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_9A16EB635EAE528C9CC424A4A1DE53F824FileLockContextExclusive_path, v73, v84);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v100);
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v101);
  v88 = (uint64_t *)v95;
  *(_QWORD *)(v95 + 24) = v80;
  v88[4] = (uint64_t)&off_1E868E5F0;
  *v88 = v81;
  return result;
}

void sub_1CB7C8E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, unint64_t), uint64_t (*a6)(uint64_t, unint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, unint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  void (*v52)(_QWORD, _QWORD);
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t (**v66)(uint64_t, unint64_t);
  uint64_t (*v67)(uint64_t, unint64_t);
  void *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  void (*v95)(_QWORD, _QWORD);
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, unint64_t);
  uint64_t (*v102)(uint64_t, unint64_t);
  uint64_t aBlock[3];
  void *v104;
  uint64_t (*v105)();
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  _UNKNOWN **v109;

  v101 = a5;
  v102 = a6;
  v98 = a3;
  v99 = a4;
  v92 = sub_1CB846744();
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v90 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1CB84678C();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v87 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CB84672C();
  v94 = *(_QWORD *)(v10 - 8);
  v95 = (void (*)(_QWORD, _QWORD))v10;
  MEMORY[0x1E0C80A78](v10);
  v93 = (uint64_t *)((char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v97 = sub_1CB8467B0();
  v86 = *(_QWORD *)(v97 - 8);
  v12 = MEMORY[0x1E0C80A78](v97);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v75 - v15;
  v17 = sub_1CB845F58();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v75 - v21;
  v96 = (void *)a2;
  sub_1CB7C84C4(a1, a2, (uint64_t)&v107);
  if (v108)
  {
    sub_1CB7780BC(&v107, (uint64_t)aBlock);
    v101(0, 0);
    v23 = *__swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v104);
    v108 = type metadata accessor for FileLockContextExclusive();
    v109 = &off_1E868E5F0;
    *(_QWORD *)&v107 = v23;
    __swift_project_boxed_opaque_existential_1(&v107, v108);
    swift_retain();
    sub_1CB7C9908();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v107);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    return;
  }
  v82 = v22;
  v78 = v19;
  v80 = v14;
  v83 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = v18;
  v85 = v17;
  v24 = a1;
  v79 = v16;
  v25 = v96;
  sub_1CB7C9E8C((uint64_t)&v107);
  if (qword_1ED88DDC8 != -1)
    swift_once();
  v26 = sub_1CB8466D8();
  __swift_project_value_buffer(v26, (uint64_t)qword_1ED88DDB0);
  v27 = v84;
  v28 = v82;
  v29 = a1;
  v30 = v85;
  v77 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
  v77(v82, a1, v85);
  sub_1CB79487C(v25);
  sub_1CB79487C(v25);
  v31 = sub_1CB8466C0();
  v32 = sub_1CB846C90();
  v81 = v32;
  v33 = os_log_type_enabled(v31, v32);
  v34 = v99;
  if (v33)
  {
    v35 = swift_slowAlloc();
    v76 = swift_slowAlloc();
    aBlock[0] = v76;
    *(_DWORD *)v35 = 134218498;
    *(_QWORD *)&v107 = v34;
    sub_1CB846E58();
    *(_WORD *)(v35 + 12) = 2080;
    v36 = sub_1CB7C8254(v25);
    *(_QWORD *)&v107 = sub_1CB775A54(v36, v37, aBlock);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    sub_1CB785AB8(v25);
    sub_1CB785AB8(v25);
    *(_WORD *)(v35 + 22) = 2080;
    v38 = sub_1CB845F4C();
    *(_QWORD *)&v107 = sub_1CB775A54(v38, v39, aBlock);
    v29 = v24;
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v28, v85);
    _os_log_impl(&dword_1CB771000, v31, (os_log_type_t)v81, "Attempt %ld to acquire lock file (%s) failed: %s", (uint8_t *)v35, 0x20u);
    v40 = v76;
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v40, -1, -1);
    MEMORY[0x1D179FE84](v35, -1, -1);
  }
  else
  {
    sub_1CB785AB8(v25);
    sub_1CB785AB8(v25);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v30);
  }

  v41 = v101;
  v42 = swift_allocObject();
  v43 = v42;
  *(_QWORD *)(v42 + 16) = 0;
  *(_QWORD *)(v42 + 24) = 0;
  v44 = v97;
  v45 = v83;
  if ((unint64_t)v25 < 2)
  {
    v46 = sub_1CB7C9700(v42);
    sub_1CB7CA2A4(v46, v47, v41);
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  v48 = v25;
  v49 = v99;
  if (v99 >= v98)
  {
    v73 = sub_1CB7C9700(v43);
    sub_1CB7CA2A4(v73, v74, v41);
    swift_bridgeObjectRelease();
    sub_1CB785AB8(v25);
LABEL_18:
    swift_release();
    return;
  }
  v82 = v48;
  sub_1CB846798();
  v50 = exp2((double)v49);
  if ((~*(_QWORD *)&v50 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  v51 = v94;
  v52 = v95;
  v53 = v93;
  if (v50 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v50 < 9.22337204e18)
  {
    v54 = (uint64_t)v50;
    if ((uint64_t)v50 >= 15)
      v54 = 15;
    *v93 = v54;
    v55 = v51;
    (*(void (**)(uint64_t *, _QWORD, void (*)(_QWORD, _QWORD)))(v51 + 104))(v53, *MEMORY[0x1E0DEF4A0], v52);
    v56 = v80;
    MEMORY[0x1D179EB7C](v80, v53);
    (*(void (**)(uint64_t *, _QWORD))(v55 + 8))(v53, v52);
    v95 = *(void (**)(_QWORD, _QWORD))(v86 + 8);
    v95(v56, v44);
    v57 = v45;
    v58 = v85;
    v77(v57, v29, v85);
    v59 = v84;
    v60 = (*(unsigned __int8 *)(v84 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
    v61 = (v78 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
    v62 = (v61 + 23) & 0xFFFFFFFFFFFFFFF8;
    v63 = swift_allocObject();
    *(_QWORD *)(v63 + 16) = v100;
    (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v63 + v60, v83, v58);
    v64 = (_QWORD *)(v63 + v61);
    v65 = v98;
    *v64 = v25;
    v64[1] = v65;
    *(_QWORD *)(v63 + v62) = v99;
    v66 = (uint64_t (**)(uint64_t, unint64_t))(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8));
    v67 = v102;
    *v66 = v101;
    v66[1] = v67;
    v105 = sub_1CB7CA50C;
    v106 = v63;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1CB8214F0;
    v104 = &block_descriptor_7;
    v68 = _Block_copy(aBlock);
    sub_1CB79487C(v25);
    swift_retain();
    swift_retain();
    v69 = v87;
    sub_1CB846768();
    *(_QWORD *)&v107 = MEMORY[0x1E0DEE9D8];
    sub_1CB7762AC(&qword_1ED88E4A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
    sub_1CB7CA5A0();
    v70 = v90;
    v71 = v92;
    sub_1CB846EC4();
    v72 = v79;
    MEMORY[0x1D179F0BC](v79, v69, v70, v68);
    _Block_release(v68);
    sub_1CB785AB8(v25);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v70, v71);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v69, v89);
    v95(v72, v97);
    swift_release();
    goto LABEL_18;
  }
LABEL_21:
  __break(1u);
}

unint64_t sub_1CB7C9700(uint64_t a1)
{
  unint64_t v2;

  if (*(_QWORD *)(a1 + 24))
  {
    v2 = *(_QWORD *)(a1 + 16);
  }
  else
  {
    sub_1CB846F30();
    swift_bridgeObjectRelease();
    sub_1CB845F58();
    sub_1CB7762AC((unint64_t *)&qword_1ED88A268, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    sub_1CB847170();
    sub_1CB846954();
    swift_bridgeObjectRelease();
    v2 = 0xD000000000000022;
    swift_beginAccess();
    *(_QWORD *)(a1 + 16) = 0xD000000000000022;
    *(_QWORD *)(a1 + 24) = 0x80000001CB854DD0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1CB7C9814()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FileLock()
{
  return objc_opt_self();
}

uint64_t sub_1CB7C9858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CB8466D8();
  __swift_allocate_value_buffer(v0, qword_1ED88DDB0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED88DDB0);
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED890248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t type metadata accessor for FileLockDarwinDefault()
{
  return objc_opt_self();
}

void sub_1CB7C9908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  __objc2_class **p_superclass;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v1 = sub_1CB8466D8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v0 + 60) & 1) == 0)
  {
    *(_BYTE *)(v0 + 60) = 1;
    v5 = *(_DWORD *)(v0 + 56);
    p_superclass = _TtC28SiriPrivateLearningAnalyticsP33_9A16EB635EAE528C9CC424A4A1DE53F824FileLockContextExclusive.superclass;
    if (flock(v5, 12))
    {
      if (qword_1ED88DDC8 != -1)
        swift_once();
      v7 = __swift_project_value_buffer(v1, (uint64_t)qword_1ED88DDB0);
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v7, v1);
      swift_retain_n();
      v8 = sub_1CB8466C0();
      v9 = sub_1CB846C90();
      if (os_log_type_enabled(v8, v9))
      {
        v26 = v5;
        v10 = swift_slowAlloc();
        v25 = swift_slowAlloc();
        v28 = v25;
        *(_DWORD *)v10 = 136315650;
        v11 = sub_1CB845F4C();
        v27 = sub_1CB775A54(v11, v12, &v28);
        sub_1CB846E58();
        swift_release_n();
        v13 = swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 12) = 2080;
        v14 = MEMORY[0x1D179EAB0](v13);
        if (!strerror(v14))
        {
          __break(1u);
          return;
        }
        v15 = sub_1CB846960();
        v27 = sub_1CB775A54(v15, v16, &v28);
        sub_1CB846E58();
        v17 = swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 22) = 1024;
        LODWORD(v27) = MEMORY[0x1D179EAB0](v17);
        sub_1CB846E58();
        _os_log_impl(&dword_1CB771000, v8, v9, "Failed to unlock file: %s, %s, %d", (uint8_t *)v10, 0x1Cu);
        v18 = v25;
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v18, -1, -1);
        MEMORY[0x1D179FE84](v10, -1, -1);

        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        v5 = v26;
        p_superclass = (__objc2_class **)(_TtC28SiriPrivateLearningAnalyticsP33_9A16EB635EAE528C9CC424A4A1DE53F824FileLockContextExclusive
                                        + 8);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
    }
    close(v5);
    if (p_superclass[441] != (__objc2_class *)-1)
      swift_once();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED88DDB0);
    swift_retain_n();
    v19 = sub_1CB8466C0();
    v20 = sub_1CB846C84();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v28 = v22;
      *(_DWORD *)v21 = 136315394;
      v23 = sub_1CB845F4C();
      v27 = sub_1CB775A54(v23, v24, &v28);
      sub_1CB846E58();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 1024;
      swift_release();
      LODWORD(v27) = v5;
      sub_1CB846E58();
      swift_release();
      _os_log_impl(&dword_1CB771000, v19, v20, "Released the file lock for path %s, fd=%d", (uint8_t *)v21, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v22, -1, -1);
      MEMORY[0x1D179FE84](v21, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1CB7C9D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + 60) & 1) == 0)
    sub_1CB7C9908();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v1 = v0
     + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_9A16EB635EAE528C9CC424A4A1DE53F824FileLockContextExclusive_path;
  v2 = sub_1CB845F58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7C9DB8()
{
  return type metadata accessor for FileLockContextExclusive();
}

uint64_t type metadata accessor for FileLockContextExclusive()
{
  uint64_t result;

  result = qword_1ED88DB48;
  if (!qword_1ED88DB48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CB7C9DFC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB845F58();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1CB7C9E8C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99EFE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CB7C9ECC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1CB7C9EF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  void (*v11)(char *, uint64_t);
  unsigned int v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32[2];

  v32[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1CB845F58();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v29 - v7;
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1CB845F28();
  v10 = (void *)sub_1CB845EE0();
  v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v8, v2);
  v32[0] = 0;
  v12 = objc_msgSend(v9, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v10, 1, 0, v32);

  v13 = v32[0];
  if (!v12)
  {
    v14 = v13;
    v15 = (void *)sub_1CB845E80();

    swift_willThrow();
    if (qword_1ED88DDC8 != -1)
      swift_once();
    v16 = sub_1CB8466D8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED88DDB0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
    v17 = v15;
    v18 = v15;
    v19 = sub_1CB8466C0();
    v20 = sub_1CB846C90();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v30 = (void *)swift_slowAlloc();
      v32[0] = v30;
      *(_DWORD *)v21 = 136315394;
      v29 = v21 + 4;
      sub_1CB845F28();
      sub_1CB7762AC((unint64_t *)&qword_1ED88A268, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v22 = sub_1CB847170();
      v24 = v23;
      v11(v8, v2);
      v31 = sub_1CB775A54(v22, v24, (uint64_t *)v32);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      v11(v6, v2);
      *(_WORD *)(v21 + 12) = 2080;
      v31 = (uint64_t)v15;
      v25 = v15;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DEA0);
      v26 = sub_1CB8468DC();
      v31 = sub_1CB775A54(v26, v27, (uint64_t *)v32);
      sub_1CB846E58();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CB771000, v19, v20, "Cannot create the file lock directory: %s, error=%s", (uint8_t *)v21, 0x16u);
      v28 = v30;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v28, -1, -1);
      MEMORY[0x1D179FE84](v21, -1, -1);

    }
    else
    {

      v11(v6, v2);
    }
  }
}

uint64_t sub_1CB7CA2A4(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t, unint64_t))
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;

  if (qword_1ED88DDC8 != -1)
    swift_once();
  v6 = sub_1CB8466D8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED88DDB0);
  swift_bridgeObjectRetain_n();
  v7 = sub_1CB8466C0();
  v8 = sub_1CB846C90();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1CB775A54(a1, a2, &v12);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CB771000, v7, v8, "%s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v10, -1, -1);
    MEMORY[0x1D179FE84](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return a3(a1, a2);
}

uint64_t sub_1CB7CA460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;

  v1 = sub_1CB845F58();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v5 = *(void **)(v0 + v4);
  if ((unint64_t)v5 >= 2)

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB7CA50C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  result = sub_1CB845F58();
  v2 = *(_QWORD *)(result - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v0 + v5);
  if (!__OFADD__(v6, 1))
    return sub_1CB7C8E28(v0 + v3, *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v4 + 8), v6 + 1, *(_QWORD *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
  __break(1u);
  return result;
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

unint64_t sub_1CB7CA5A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED88E4B0;
  if (!qword_1ED88E4B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED88E4A8);
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED88E4B0);
  }
  return result;
}

void *sub_1CB7CA5EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  void *v7;
  id v8;

  v3 = *(_QWORD *)(v1 + 56);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  if (!*(_QWORD *)(v4 + 16))
    return 0;
  swift_retain();
  swift_bridgeObjectRetain();
  v5 = sub_1CB779AD8(a1);
  if ((v6 & 1) != 0)
  {
    v7 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v5);
    v8 = v7;
  }
  else
  {
    v7 = 0;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1CB7CA688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];
  uint64_t v24;

  v5 = sub_1CB846084();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F0A8);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v17 = &v23[-v16];
  swift_beginAccess();
  v18 = *(_QWORD *)(v2 + 48);
  v24 = a1;
  swift_bridgeObjectRetain();
  sub_1CB7F4948((uint64_t (*)(char *))sub_1CB7CEFB8, v18, (uint64_t)v11);
  swift_bridgeObjectRelease();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F0B0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v11, 1, v19) == 1)
  {
    sub_1CB785B54((uint64_t)v11, &qword_1EF99F0A8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v17, 1, 1, v5);
  }
  else
  {
    v20 = *(_QWORD *)&v11[*(int *)(v19 + 48) + 8];
    if (*(_QWORD *)(v20 + 16))
    {
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v6 + 16))(v17, v20 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
      v21 = 0;
    }
    else
    {
      v21 = 1;
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v17, v21, 1, v5);
    swift_release();
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  }
  sub_1CB7B4B88((uint64_t)v17, (uint64_t)v15);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(a2, v8, v5);
    return sub_1CB785B54((uint64_t)v15, &qword_1ED88D570);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(a2, v15, v5);
  }
}

uint64_t sub_1CB7CA934(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];

  v3 = v2;
  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F0B0) + 48));
  v12 = *v10;
  v11 = v10[1];
  v13 = v11 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v14 = *(_QWORD *)(v11 + 16);
  v23[1] = v3;
  if (v12)
  {
    swift_retain();
    sub_1CB7FC4E4(a2, v13, v14, (_QWORD *)(v12 + 16), v12 + 32);
    v16 = v15;
    swift_release();
    v17 = (v16 & 1) == 0;
  }
  else if (v14)
  {
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v21 = v14 - 1;
    do
    {
      v22 = v21;
      v20(v9, v13, v6);
      sub_1CB77EA90((unint64_t *)&qword_1ED88BBD0, MEMORY[0x1E0CB09D0]);
      v17 = sub_1CB846864();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v17 & 1) != 0)
        break;
      v21 = v22 - 1;
      v13 += v19;
    }
    while (v22);
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

void sub_1CB7CAAA8(char a1@<W1>, void *a2@<X8>)
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t KeyPath;
  unint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;

  v4 = sub_1CB79D0FC();
  v5 = v4;
  v17 = v6;
  if ((a1 & 1) != 0 && objc_msgSend(v4, sel_anyEventType) != 17)
  {
LABEL_5:
    v7 = sub_1CB846084();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, 1, 1, v7);
LABEL_6:

  }
  else
  {
    switch(objc_msgSend(v5, sel_anyEventType))
    {
      case 1u:
        sub_1CB7CC958(v5, v17, a2);
        goto LABEL_6;
      case 9u:
        sub_1CB7CB6A0(v5, (uint64_t)a2);
        goto LABEL_6;
      case 0xDu:
        KeyPath = swift_getKeyPath();
        v9 = &qword_1ED88BF58;
        v10 = (uint64_t *)&unk_1EF99F078;
        v11 = (uint64_t)a2;
        v12 = v5;
        v13 = 3;
        goto LABEL_16;
      case 0x11u:
        sub_1CB7CAD9C(v5, v17);

        v14 = sub_1CB846084();
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
        return;
      case 0x12u:
        KeyPath = swift_getKeyPath();
        v9 = (unint64_t *)&unk_1ED88BF40;
        v10 = (uint64_t *)&unk_1EF99F080;
        v11 = (uint64_t)a2;
        v12 = v5;
        v13 = 7;
        goto LABEL_16;
      case 0x13u:
        sub_1CB7CD250();
        v15 = swift_getKeyPath();
        v9 = (unint64_t *)&qword_1ED88BF68;
        v10 = (uint64_t *)&unk_1EF99F088;
        v11 = (uint64_t)a2;
        v12 = v5;
        v13 = 1;
        v16 = (void *)v15;
        goto LABEL_17;
      case 0x14u:
        KeyPath = swift_getKeyPath();
        v9 = (unint64_t *)&unk_1ED88BF28;
        v10 = (uint64_t *)&unk_1EF99F070;
        v11 = (uint64_t)a2;
        v12 = v5;
        v13 = 8;
        goto LABEL_16;
      case 0x17u:
        KeyPath = swift_getKeyPath();
        v9 = (unint64_t *)&unk_1ED88BEF0;
        v10 = (uint64_t *)&unk_1EF99F0A0;
        v11 = (uint64_t)a2;
        v12 = v5;
        v13 = 9;
        goto LABEL_16;
      case 0x26u:
        KeyPath = swift_getKeyPath();
        v9 = &qword_1EF99EAF8;
        v10 = (uint64_t *)&unk_1EF99F090;
        v11 = (uint64_t)a2;
        v12 = v5;
        v13 = 19;
        goto LABEL_16;
      case 0x3Du:
        KeyPath = swift_getKeyPath();
        v9 = (unint64_t *)&unk_1ED88BF00;
        v10 = (uint64_t *)&unk_1EF99F098;
        v11 = (uint64_t)a2;
        v12 = v5;
        v13 = 31;
LABEL_16:
        v16 = (void *)KeyPath;
LABEL_17:
        sub_1CB7CC09C(v12, v13, v16, v9, v10, v11);

        swift_release();
        break;
      default:
        goto LABEL_5;
    }
  }

}

void sub_1CB7CAD9C(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(_QWORD, _QWORD, _QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  NSObject *v40;
  int v41;
  uint8_t *v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  void *v52;
  uint8_t *v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t isUniquelyReferenced_nonNull_native;
  id v61;
  void *v62;
  void (*v63)(_QWORD, _QWORD, _QWORD);
  uint64_t v64;
  uint64_t *v65;
  id v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  _BOOL8 v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  void (*v75)(_QWORD *@<X8>);
  _QWORD *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  void *v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89[3];
  uint64_t v90;

  v88 = sub_1CB8466D8();
  v4 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CB846084();
  v11 = *(_QWORD *)(v10 - 8);
  v86 = v10;
  v87 = v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v83 - v16;
  MEMORY[0x1E0C80A78](v15);
  v85 = (char *)&v83 - v18;
  v19 = objc_msgSend(a1, sel_payload);
  if (v19)
  {
    v20 = sub_1CB845F94();
    v22 = v21;

    v19 = (id)sub_1CB845F88();
    sub_1CB779034(v20, v22);
  }
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D995D8]), sel_initWithData_, v19);

  if (v23)
  {
    if (!a2)
      goto LABEL_19;
    v24 = objc_msgSend(a2, sel_timestamp);
    if (!v24)
      goto LABEL_19;
    v25 = v24;
    v26 = objc_msgSend(v24, sel_clockIdentifier);
    if (!v26)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v9, 1, 1, v86);
LABEL_18:

      sub_1CB785B54((uint64_t)v9, &qword_1ED88D570);
LABEL_19:
      if (qword_1ED88E518 != -1)
        swift_once();
      __swift_project_value_buffer(v88, (uint64_t)qword_1ED890248);
      v49 = a2;
      v50 = sub_1CB8466C0();
      v51 = sub_1CB846C84();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = v23;
        v53 = (uint8_t *)swift_slowAlloc();
        v54 = swift_slowAlloc();
        v89[0] = v54;
        *(_DWORD *)v53 = 136315138;
        if (a2 && (v55 = objc_msgSend(v49, sel_dictionaryRepresentation)) != 0)
        {
          v56 = v55;
          v57 = sub_1CB8467EC();

        }
        else
        {
          v57 = 0;
        }
        v90 = v57;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F068);
        v58 = sub_1CB8468DC();
        v90 = sub_1CB775A54(v58, v59, v89);
        sub_1CB846E58();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CB771000, v50, v51, "Missing logical timestamp for DIM metadata: %s", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v54, -1, -1);
        MEMORY[0x1D179FE84](v53, -1, -1);

      }
      else
      {

      }
      return;
    }
    v27 = v26;
    v28 = objc_msgSend(v26, sel_value);
    if (v28)
    {
      v29 = v28;
      v30 = sub_1CB845F94();
      v31 = v23;
      v33 = v32;

      sub_1CB7B601C(v30, v33);
      v34 = v33;
      v23 = v31;
      sub_1CB779034(v30, v34);
      v35 = (void (*)(_QWORD, _QWORD, _QWORD))v86;
      v36 = v87;
    }
    else
    {
      v35 = (void (*)(_QWORD, _QWORD, _QWORD))v86;
      v36 = v87;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v9, 1, 1, v86);
    }

    if ((*(unsigned int (**)(char *, uint64_t, _QWORD))(v36 + 48))(v9, 1, v35) == 1)
      goto LABEL_18;
    isUniquelyReferenced_nonNull_native = (uint64_t)v85;
    (*(void (**)(char *, char *, _QWORD))(v36 + 32))(v85, v9, v35);
    v61 = objc_msgSend(v23, sel_wrapAsAnyEvent);
    if (!v61)
      goto LABEL_33;
    v62 = v61;
    v63 = v35;
    v35 = *(void (**)(_QWORD, _QWORD, _QWORD))(v36 + 16);
    v35(v17, isUniquelyReferenced_nonNull_native, v63);
    v64 = v84;
    v65 = (uint64_t *)(v84 + 40);
    swift_beginAccess();
    v66 = v62;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v90 = *(_QWORD *)(v64 + 40);
    v67 = v90;
    *(_QWORD *)(v64 + 40) = 0x8000000000000000;
    v88 = sub_1CB779AD8((uint64_t)v17);
    v69 = *(_QWORD *)(v67 + 16);
    v70 = (v68 & 1) == 0;
    v71 = v69 + v70;
    if (__OFADD__(v69, v70))
    {
      __break(1u);
LABEL_45:
      sub_1CB846AA4();
LABEL_39:
      v80 = v35;
      sub_1CB846AD4();
      sub_1CB846A74();
      v35 = (void (*)(_QWORD, _QWORD, _QWORD))v86;
      (*(void (**)(char *, uint64_t))(v87 + 8))(v17, v86);
      swift_endAccess();

      v75 = sub_1CB7CB690;
      goto LABEL_40;
    }
    v72 = v68;
    v73 = *(_QWORD *)(v67 + 24);
    v83 = (void (*)(char *, char *, uint64_t))v35;
    if (v73 >= v71)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v35 = (void (*)(_QWORD, _QWORD, _QWORD))v66;
        sub_1CB77EF80();
        v67 = v90;
LABEL_36:
        isUniquelyReferenced_nonNull_native = (uint64_t)v85;
        *v65 = v67;
        swift_bridgeObjectRelease();
        v76 = (_QWORD *)*v65;
        swift_bridgeObjectRetain();
        v77 = v88;
        if ((v72 & 1) == 0)
        {
          v83(v14, v17, v86);
          sub_1CB82F9E0(v77, (uint64_t)v14, MEMORY[0x1E0DEE9D8], v76);
        }
        v78 = v76[7];
        v79 = swift_bridgeObjectRelease();
        MEMORY[0x1D179EDF8](v79);
        if (*(_QWORD *)((*(_QWORD *)(v78 + 8 * v77) & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*(_QWORD *)(v78 + 8 * v77) & 0xFFFFFFFFFFFFFF8)
                                                                                                + 0x18) >> 1)
          goto LABEL_39;
        goto LABEL_45;
      }
    }
    else
    {
      sub_1CB77B704(v71, isUniquelyReferenced_nonNull_native);
      v67 = v90;
      v88 = sub_1CB779AD8((uint64_t)v17);
      if ((v72 & 1) != (v74 & 1))
      {
        sub_1CB847290();
        __break(1u);
LABEL_33:
        v75 = 0;
LABEL_40:
        v81 = objc_msgSend(v23, sel_deviceFixedContext, v83);
        if (v81)
        {
          v82 = v81;
          swift_retain();
          sub_1CB7B5390(isUniquelyReferenced_nonNull_native, v25, v82);

          swift_release();
          (*(void (**)(uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))(v87 + 8))(isUniquelyReferenced_nonNull_native, v35);
        }
        else
        {
          (*(void (**)(uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))(v87 + 8))(isUniquelyReferenced_nonNull_native, v35);

        }
        sub_1CB7AEA3C((uint64_t)v75);
        return;
      }
    }
    v35 = (void (*)(_QWORD, _QWORD, _QWORD))v66;
    goto LABEL_36;
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v37 = v88;
  v38 = __swift_project_value_buffer(v88, (uint64_t)qword_1ED890248);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v38, v37);
  v39 = a1;
  v40 = sub_1CB8466C0();
  v41 = sub_1CB846C84();
  if (os_log_type_enabled(v40, (os_log_type_t)v41))
  {
    LODWORD(v87) = v41;
    v42 = (uint8_t *)swift_slowAlloc();
    v86 = swift_slowAlloc();
    v89[0] = v86;
    *(_DWORD *)v42 = 136315138;
    v43 = objc_msgSend(v39, sel_dictionaryRepresentation);
    if (v43)
    {
      v44 = v43;
      v85 = (char *)(v42 + 4);
      sub_1CB8467EC();

      v45 = sub_1CB8467F8();
      v47 = v46;
      swift_bridgeObjectRelease();
      v90 = sub_1CB775A54(v45, v47, v89);
      sub_1CB846E58();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v40, (os_log_type_t)v87, "Expected DIM client event for event: %s", v42, 0xCu);
      v48 = v86;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v48, -1, -1);
      MEMORY[0x1D179FE84](v42, -1, -1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v88);
    }
    else
    {

      __break(1u);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v37);
  }
}

void sub_1CB7CB690(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1CB7CB6A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  id v43;
  NSObject *v44;
  int v45;
  uint8_t *v46;
  id v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  char *v54;
  void (*v55)(uint64_t, char *, uint64_t);
  uint64_t v56;
  uint64_t (*v57)@<X0>(uint64_t *@<X8>);
  uint64_t result;
  char *v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t *v62;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  _BOOL8 v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  void (*v77)(uint64_t, char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint8_t *v86;
  void *v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;

  v3 = v2;
  v6 = sub_1CB8466D8();
  v90 = *(_QWORD *)(v6 - 8);
  v91 = v6;
  MEMORY[0x1E0C80A78](v6);
  v89 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v9 = MEMORY[0x1E0C80A78](v8);
  v86 = (uint8_t *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v82 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v82 - v14;
  v16 = sub_1CB846084();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v83 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v84 = (char *)&v82 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v85 = (char *)&v82 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v82 - v25;
  MEMORY[0x1E0C80A78](v24);
  v87 = a1;
  v88 = (uint64_t)&v82 - v27;
  v28 = objc_msgSend(a1, sel_payload);
  if (v28)
  {
    v29 = sub_1CB845F94();
    v30 = v3;
    v31 = v16;
    v32 = v17;
    v33 = a2;
    v35 = v34;

    v28 = (id)sub_1CB845F88();
    v36 = v35;
    a2 = v33;
    v17 = v32;
    v16 = v31;
    v3 = v30;
    sub_1CB779034(v29, v36);
  }
  v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A488]), sel_initWithData_, v28);

  if (!v37)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a2, 1, 1, v16);
  sub_1CB7782FC(v37);
  sub_1CB7CBE70(v37, 1, (uint64_t)v15);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v38(v15, 1, v16) == 1)
  {
    sub_1CB785B54((uint64_t)v15, &qword_1ED88D570);
    if (qword_1ED88E518 != -1)
      swift_once();
    v39 = v91;
    v40 = __swift_project_value_buffer(v91, (uint64_t)qword_1ED890248);
    v42 = v89;
    v41 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v89, v40, v39);
    v43 = v37;
    v44 = sub_1CB8466C0();
    v45 = sub_1CB846C84();
    if (!os_log_type_enabled(v44, (os_log_type_t)v45))
    {

      (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v39);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a2, 1, 1, v16);
    }
    LODWORD(v88) = v45;
    v82 = a2;
    v46 = (uint8_t *)swift_slowAlloc();
    v87 = (void *)swift_slowAlloc();
    v92 = v87;
    *(_DWORD *)v46 = 136315138;
    v47 = objc_msgSend(v43, sel_dictionaryRepresentation);
    if (v47)
    {
      v48 = v47;
      v86 = v46 + 4;
      sub_1CB8467EC();

      v49 = sub_1CB8467F8();
      v51 = v50;
      swift_bridgeObjectRelease();
      v93 = sub_1CB775A54(v49, v51, (uint64_t *)&v92);
      sub_1CB846E58();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v44, (os_log_type_t)v88, "Request ID not found on link event %s", v46, 0xCu);
      v52 = v87;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v52, -1, -1);
      MEMORY[0x1D179FE84](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v91);
      a2 = v82;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a2, 1, 1, v16);
    }

    __break(1u);
    goto LABEL_29;
  }
  v53 = v88;
  v54 = v15;
  v55 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 32);
  v55(v88, v54, v16);
  sub_1CB7CBE70(v37, 43, (uint64_t)v13);
  if (v38(v13, 1, v16) != 1)
  {
    v55((uint64_t)v26, v13, v16);
    sub_1CB7CD5B8(v53, (uint64_t)v26);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v16);
    v57 = 0;
    goto LABEL_25;
  }
  v91 = v17;
  sub_1CB785B54((uint64_t)v13, &qword_1ED88D570);
  v56 = (uint64_t)v86;
  sub_1CB7CBE70(v37, 2, (uint64_t)v86);
  if (v38((char *)v56, 1, v16) == 1)
  {
    sub_1CB785B54(v56, &qword_1ED88D570);
    v57 = 0;
    v17 = v91;
LABEL_25:
    sub_1CB82522C(1, v53, v87);

    v55(a2, (char *)v53, v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a2, 0, 1, v16);
    return sub_1CB7AEA3C((uint64_t)v57);
  }
  v82 = a2;
  v59 = v85;
  v55((uint64_t)v85, (char *)v56, v16);
  v60 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
  v61 = (uint64_t)v84;
  v60(v84, v59, v16);
  v62 = (uint64_t *)(v3 + 48);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v93 = *(_QWORD *)(v3 + 48);
  v64 = v93;
  *(_QWORD *)(v3 + 48) = 0x8000000000000000;
  v66 = sub_1CB779AD8(v61);
  v67 = *(_QWORD *)(v64 + 16);
  v68 = (v65 & 1) == 0;
  v69 = v67 + v68;
  if (__OFADD__(v67, v68))
  {
    __break(1u);
    goto LABEL_27;
  }
  LOBYTE(v53) = v65;
  if (*(_QWORD *)(v64 + 24) >= v69)
  {
    v90 = v66;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_22;
LABEL_27:
    sub_1CB77F13C();
    v64 = v93;
    goto LABEL_22;
  }
  sub_1CB77BD80(v69, isUniquelyReferenced_nonNull_native);
  v64 = v93;
  v70 = sub_1CB779AD8(v61);
  if ((v53 & 1) == (v71 & 1))
  {
    v90 = v70;
LABEL_22:
    a2 = v82;
    *v62 = v64;
    swift_bridgeObjectRelease();
    v72 = (_QWORD *)*v62;
    swift_bridgeObjectRetain();
    if ((v53 & 1) == 0)
    {
      v73 = sub_1CB7CE0AC(MEMORY[0x1E0DEE9D8]);
      v75 = v74;
      v76 = (void (*)(char *, uint64_t, uint64_t))v60;
      v77 = v55;
      v78 = v83;
      v76(v83, v61, v16);
      v79 = (uint64_t)v78;
      v55 = v77;
      sub_1CB82F9E4(v90, v79, v73, v75, v72);
    }
    swift_bridgeObjectRelease();
    v53 = v88;
    sub_1CB7CDAD8(v88);
    v80 = v61;
    v17 = v91;
    v81 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
    v81(v80, v16);
    swift_endAccess();
    v81((uint64_t)v85, v16);
    v57 = sub_1CB7CC070;
    goto LABEL_25;
  }
LABEL_29:
  result = sub_1CB847290();
  __break(1u);
  return result;
}

void sub_1CB7CBE70(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  id v6;
  void *v7;
  unsigned int v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  unsigned int v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;

  v6 = objc_msgSend(a1, sel_source);
  if (v6 && (v7 = v6, v8 = objc_msgSend(v6, sel_component), v7, v8 == a2))
  {
    v9 = objc_msgSend(a1, sel_source);
    if (v9)
    {
      v10 = v9;
      v23 = objc_msgSend(v9, sel_uuid);

      if (v23)
      {
        v11 = objc_msgSend(v23, sel_value);
        if (v11)
        {
LABEL_6:
          v12 = v11;
          v13 = sub_1CB845F94();
          v15 = v14;

          sub_1CB7B601C(v13, v15);
          sub_1CB779034(v13, v15);
LABEL_13:

          return;
        }
LABEL_12:
        v21 = sub_1CB846084();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a3, 1, 1, v21);
        goto LABEL_13;
      }
    }
  }
  else
  {
    v16 = objc_msgSend(a1, sel_target);
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, sel_component);

      if (v18 == a2)
      {
        v19 = objc_msgSend(a1, sel_target);
        if (v19)
        {
          v20 = v19;
          v23 = objc_msgSend(v19, sel_uuid);

          if (v23)
          {
            v11 = objc_msgSend(v23, sel_value);
            if (v11)
              goto LABEL_6;
            goto LABEL_12;
          }
        }
      }
    }
  }
  v22 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a3, 1, 1, v22);
}

uint64_t sub_1CB7CC070@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1CB7CE0AC(MEMORY[0x1E0DEE9D8]);
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1CB7CC09C(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unint64_t *a4@<X3>, uint64_t *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSObject *v43;
  int v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  __CFString *v50;
  __CFString *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_log_t v56;
  id v57;
  NSObject *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  __CFString *v69;
  __CFString *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  os_log_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  os_log_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;

  v82 = a5;
  v85 = a2;
  v86 = a6;
  v9 = sub_1CB846084();
  v10 = *(_QWORD *)(v9 - 8);
  v89 = v9;
  v90 = v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CB8466D8();
  v87 = *(_QWORD *)(v13 - 8);
  v88 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v84 = (os_log_t)((char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v81 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v81 - v22;
  sub_1CB777FA8(0, a4);
  v24 = objc_msgSend(a1, sel_payload);
  if (v24)
  {
    v25 = sub_1CB845F94();
    v27 = v26;

    v28 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v24 = (id)sub_1CB845F88();
    sub_1CB779034(v25, v27);
  }
  else
  {
    v28 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  }
  v29 = objc_msgSend(v28, sel_initWithData_, v24);

  if (v29)
  {
    v92 = (uint64_t)v29;
    v30 = v29;
    swift_getAtKeyPath();

    v31 = v91;
    if (v91)
    {
      v32 = objc_msgSend(v91, sel_value);
      if (v32)
      {
        v33 = v32;
        v34 = sub_1CB845F94();
        v36 = v35;

        sub_1CB7B601C(v34, v36);
        sub_1CB779034(v34, v36);
        v37 = v89;
        v38 = v90;
      }
      else
      {
        v37 = v89;
        v38 = v90;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v23, 1, 1, v89);
      }

    }
    else
    {
      v37 = v89;
      v38 = v90;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v23, 1, 1, v89);
    }
    sub_1CB7BDB4C((uint64_t)v23, (uint64_t)v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v21, 1, v37) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v12, v21, v37);
      sub_1CB7CD138((uint64_t)v12, v85, a1, v86);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v37);
      sub_1CB785B54((uint64_t)v23, &qword_1ED88D570);
      return;
    }
    sub_1CB785B54((uint64_t)v21, &qword_1ED88D570);
    if (qword_1ED88E518 != -1)
      swift_once();
    v53 = v88;
    v54 = __swift_project_value_buffer(v88, (uint64_t)qword_1ED890248);
    v55 = v87;
    v56 = v84;
    (*(void (**)(os_log_t, uint64_t, uint64_t))(v87 + 16))(v84, v54, v53);
    v57 = v30;
    swift_retain_n();
    v42 = v57;
    v58 = sub_1CB8466C0();
    v59 = sub_1CB846C90();
    if (!os_log_type_enabled(v58, (os_log_type_t)v59))
    {
      swift_release_n();

      (*(void (**)(os_log_t, uint64_t))(v55 + 8))(v56, v53);
      sub_1CB785B54((uint64_t)v23, &qword_1ED88D570);
      goto LABEL_25;
    }
    LODWORD(v85) = v59;
    v60 = swift_slowAlloc();
    v83 = swift_slowAlloc();
    v91 = a3;
    v92 = v83;
    *(_DWORD *)v60 = 136315394;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(v82);
    v61 = sub_1CB8468DC();
    v91 = (id)sub_1CB775A54(v61, v62, &v92);
    v82 = &v92;
    sub_1CB846E58();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v60 + 12) = 2080;
    v63 = objc_msgSend(v42, sel_dictionaryRepresentation);
    if (v63)
    {
      v64 = v63;
      sub_1CB8467EC();

      v65 = sub_1CB8467F8();
      v67 = v66;
      swift_bridgeObjectRelease();
      v91 = (id)sub_1CB775A54(v65, v67, &v92);
      sub_1CB846E58();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v58, (os_log_type_t)v85, "Failed to extract UUID using keypath '%s' for event: %s", (uint8_t *)v60, 0x16u);
      v68 = v83;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v68, -1, -1);
      MEMORY[0x1D179FE84](v60, -1, -1);

      (*(void (**)(os_log_t, uint64_t))(v87 + 8))(v84, v88);
      sub_1CB785B54((uint64_t)v23, &qword_1ED88D570);
      v38 = v90;
LABEL_25:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v86, 1, 1, v89);
      return;
    }
    goto LABEL_31;
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v39 = v88;
  v40 = __swift_project_value_buffer(v88, (uint64_t)qword_1ED890248);
  v41 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v17, v40, v39);
  v42 = a1;
  v43 = sub_1CB8466C0();
  v44 = sub_1CB846C84();
  v45 = os_log_type_enabled(v43, (os_log_type_t)v44);
  v46 = v90;
  if (!v45)
  {

    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v39);
    v52 = v86;
LABEL_29:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v52, 1, 1, v89);
    return;
  }
  v47 = swift_slowAlloc();
  v48 = (uint64_t *)swift_slowAlloc();
  v92 = (uint64_t)v48;
  *(_DWORD *)v47 = 136315394;
  v84 = v43;
  LODWORD(v83) = v44;
  v82 = v48;
  if (v85 > 0x36)
  {
    v50 = CFSTR("COMPONENTNAME_UNKNOWN");
    v51 = CFSTR("COMPONENTNAME_UNKNOWN");
  }
  else
  {
    v49 = (int)v85;
    v50 = off_1E868E698[v49];
    v51 = off_1E868E850[v49];
  }
  v69 = v50;
  v70 = v51;
  v71 = sub_1CB8468A0();
  v73 = v72;

  v91 = (id)sub_1CB775A54(v71, v73, &v92);
  sub_1CB846E58();
  swift_bridgeObjectRelease();
  *(_WORD *)(v47 + 12) = 2080;
  v74 = objc_msgSend(v42, sel_dictionaryRepresentation);
  if (v74)
  {
    v75 = v74;
    sub_1CB8467EC();

    v76 = sub_1CB8467F8();
    v78 = v77;
    swift_bridgeObjectRelease();
    v91 = (id)sub_1CB775A54(v76, v78, &v92);
    sub_1CB846E58();

    swift_bridgeObjectRelease();
    v79 = v84;
    _os_log_impl(&dword_1CB771000, v84, (os_log_type_t)v83, "Failed to decode event of expected type '%s'; event: %s",
      (uint8_t *)v47,
      0x16u);
    v80 = v82;
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v80, -1, -1);
    MEMORY[0x1D179FE84](v47, -1, -1);

    (*(void (**)(char *, uint64_t))(v87 + 8))(v17, v88);
    v52 = v86;
    v46 = v90;
    goto LABEL_29;
  }

  __break(1u);
LABEL_31:

  __break(1u);
}

void sub_1CB7CC958(void *a1@<X0>, void *a2@<X1>, id a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  os_log_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  os_log_t v74;
  id v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83[3];
  id v84;

  v75 = a2;
  v5 = sub_1CB8466D8();
  v81 = *(_QWORD *)(v5 - 8);
  v82 = v5;
  MEMORY[0x1E0C80A78](v5);
  v80 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CB846084();
  v79 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v73 - v15;
  MEMORY[0x1E0C80A78](v14);
  v77 = (char *)&v73 - v17;
  v18 = objc_msgSend(a1, sel_payload);
  if (v18)
  {
    v19 = v18;
    v20 = sub_1CB845F94();
    v22 = v21;

    v23 = (void *)sub_1CB845F88();
    sub_1CB779034(v20, v22);
  }
  else
  {
    v23 = 0;
  }
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A400]), sel_initWithData_, v23);

  v78 = v10;
  if (v24)
  {
    v25 = objc_msgSend(v24, sel_eventMetadata);
    if (v25
      && (v26 = v25, v27 = objc_msgSend(v25, sel_turnID), v26, v27))
    {
      v28 = sub_1CB845F94();
      v30 = v29;

      sub_1CB7B601C(v28, v30);
      v31 = v79;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v9, 1, v10) != 1)
      {
        v80 = (char *)v28;
        v81 = v30;
        v46 = (uint64_t)v77;
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v77, v9, v10);
        v47 = objc_msgSend(v24, sel_deviceDynamicContext);

        v48 = v75;
        if (v47)
        {
          if (v75)
          {
            v49 = objc_msgSend(v75, sel_timestamp);
            if (v49)
            {
              v50 = v49;
              v51 = *(_QWORD *)(v76 + 56);
              v52 = v46;
              v53 = v78;
              (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v16, v52, v78);
              swift_beginAccess();
              swift_retain();
              v54 = v50;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v84 = *(id *)(v51 + 24);
              *(_QWORD *)(v51 + 24) = 0x8000000000000000;
              sub_1CB82E8D0((uint64_t)v54, (uint64_t)v16, isUniquelyReferenced_nonNull_native);
              *(_QWORD *)(v51 + 24) = v84;
              swift_bridgeObjectRelease();
              v56 = v53;
              v46 = (uint64_t)v77;
              (*(void (**)(char *, uint64_t))(v79 + 8))(v16, v56);
              swift_endAccess();

              v31 = v79;
              swift_release();
            }
          }
        }
        v57 = sub_1CB7CEA3C(v24, v48);
        if (v57)
        {
          v58 = v31;
          v59 = v57;
          v60 = (uint64_t)v80;
        }
        else
        {
          if (qword_1ED88E518 != -1)
            swift_once();
          __swift_project_value_buffer(v82, (uint64_t)qword_1ED890248);
          v61 = v78;
          (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v13, v46, v78);
          v62 = v24;
          v63 = sub_1CB8466C0();
          v64 = sub_1CB846C90();
          if (os_log_type_enabled(v63, v64))
          {
            v65 = swift_slowAlloc();
            v75 = a3;
            v66 = v65;
            v82 = swift_slowAlloc();
            v83[0] = v82;
            *(_DWORD *)v66 = 134218242;
            v74 = v63;
            v84 = objc_msgSend(v62, sel_whichEvent_Type);
            sub_1CB846E58();

            *(_WORD *)(v66 + 12) = 2080;
            v67 = sub_1CB846030();
            v84 = (id)sub_1CB775A54(v67, v68, v83);
            v46 = (uint64_t)v77;
            sub_1CB846E58();
            swift_bridgeObjectRelease();
            v31 = v79;
            (*(void (**)(char *, uint64_t))(v79 + 8))(v13, v61);
            v69 = v74;
            _os_log_impl(&dword_1CB771000, v74, v64, "Missing timestamp metadata for backfilling UEI event; type: %lu; turn: %s",
              (uint8_t *)v66,
              0x16u);
            v70 = v82;
            swift_arrayDestroy();
            MEMORY[0x1D179FE84](v70, -1, -1);
            v71 = v66;
            a3 = v75;
            MEMORY[0x1D179FE84](v71, -1, -1);

          }
          else
          {

            (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v61);
          }
          v58 = v31;
          v60 = (uint64_t)v80;
          v59 = a1;
          v57 = 0;
        }
        v72 = v57;
        sub_1CB7CD138(v46, 2, v59, (uint64_t)a3);
        sub_1CB779034(v60, v81);

        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v46, v78);
        return;
      }
      sub_1CB779034(v28, v30);

      sub_1CB785B54((uint64_t)v9, &qword_1ED88D570);
    }
    else
    {

    }
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v32 = v82;
  v33 = __swift_project_value_buffer(v82, (uint64_t)qword_1ED890248);
  v34 = v80;
  v35 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v80, v33, v32);
  v36 = a1;
  v37 = sub_1CB8466C0();
  v38 = sub_1CB846C90();
  if (!os_log_type_enabled(v37, v38))
  {

    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v32);
    goto LABEL_16;
  }
  v75 = a3;
  v39 = (uint8_t *)swift_slowAlloc();
  v40 = swift_slowAlloc();
  v83[0] = v40;
  *(_DWORD *)v39 = 136315138;
  v41 = objc_msgSend(v36, sel_dictionaryRepresentation);
  if (v41)
  {
    v42 = v41;
    v77 = (char *)(v39 + 4);
    sub_1CB8467EC();

    v43 = sub_1CB8467F8();
    v45 = v44;
    swift_bridgeObjectRelease();
    v84 = (id)sub_1CB775A54(v43, v45, v83);
    sub_1CB846E58();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CB771000, v37, v38, "Failed to UEI data and/or turn ID from event: %s", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v40, -1, -1);
    MEMORY[0x1D179FE84](v39, -1, -1);

    (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
    a3 = v75;
LABEL_16:
    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v79 + 56))(a3, 1, 1, v78);
    return;
  }

  __break(1u);
}

uint64_t sub_1CB7CD138@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1CB82522C(a2, a1, a3);
  if (a2 == 1)
  {
    v7 = sub_1CB846084();
    v8 = *(_QWORD *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a4, a1, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a4, 0, 1, v7);
  }
  else
  {
    v10 = sub_1CB778EAC(a2, a1, 1);
    v11 = *(_QWORD *)(v10 + 16);
    v12 = sub_1CB846084();
    v13 = *(_QWORD *)(v12 - 8);
    if (v11)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16))(a4, v10 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v12);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a4, 0, 1, v12);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a4, 1, 1, v12);
    }
    return swift_bridgeObjectRelease();
  }
}

void *sub_1CB7CD250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *result;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v43 - v6;
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v43 - v13;
  result = (void *)sub_1CB7B5E78();
  if (result)
  {
    v16 = result;
    v17 = objc_msgSend(result, sel_eventMetadata);
    if (v17
      && (v18 = v17, v19 = objc_msgSend(v17, sel_requestId), v18, v19))
    {
      v20 = objc_msgSend(v19, sel_value);
      v45 = v12;
      v46 = v1;
      if (v20)
      {
        v21 = v20;
        v22 = sub_1CB845F94();
        v23 = v5;
        v25 = v24;

        sub_1CB7B601C(v22, v25);
        v26 = v25;
        v5 = v23;
        sub_1CB779034(v22, v26);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
      }

      v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v27(v7, 1, v8) != 1)
      {
        v29 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v29(v14, v7, v8);
        v30 = objc_msgSend(v16, sel_subRequestContext);
        if (v30
          && (v31 = v30,
              v32 = objc_msgSend(v30, sel_subRequestId),
              v31,
              v32))
        {
          v33 = objc_msgSend(v32, sel_value);
          if (v33)
          {
            v34 = v33;
            v35 = sub_1CB845F94();
            v44 = v5;
            v36 = v35;
            v38 = v37;

            sub_1CB7B601C(v36, v38);
            v39 = v36;
            v5 = v44;
            sub_1CB779034(v39, v38);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, 1, 1, v8);
          }

          if (v27(v5, 1, v8) != 1)
          {
            v40 = v29;
            v41 = (uint64_t)v45;
            v40(v45, v5, v8);
            sub_1CB7CD5B8((uint64_t)v14, v41);

            v42 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
            v42(v41, v8);
            return (void *)((uint64_t (*)(char *, uint64_t))v42)(v14, v8);
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, 1, 1, v8);
        }

        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        v28 = (uint64_t)v5;
        return (void *)sub_1CB785B54(v28, &qword_1ED88D570);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    }

    v28 = (uint64_t)v7;
    return (void *)sub_1CB785B54(v28, &qword_1ED88D570);
  }
  return result;
}

void sub_1CB7CD5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t *v30;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  _QWORD *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48[3];

  v3 = v2;
  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v46 = (char *)&v45 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v45 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v45 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v45 - v19;
  sub_1CB77EA90((unint64_t *)&qword_1ED88BBD0, MEMORY[0x1E0CB09D0]);
  if ((sub_1CB846864() & 1) != 0)
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v21 = sub_1CB8466D8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED890248);
    v22 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
    v23 = sub_1CB8466C0();
    v24 = sub_1CB846C90();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v48[0] = v26;
      *(_DWORD *)v25 = 136315138;
      sub_1CB77EA90(&qword_1EF99E368, MEMORY[0x1E0CB09F0]);
      v27 = sub_1CB847170();
      v47 = sub_1CB775A54(v27, v28, v48);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v6);
      _os_log_impl(&dword_1CB771000, v23, v24, "Request %s uses the same id for sub-request and request id. Ignoring subrequest linking.", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v26, -1, -1);
      MEMORY[0x1D179FE84](v25, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v6);
    }

    return;
  }
  v45 = v7;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v29(v18, a1, v6);
  v29(v15, a2, v6);
  v30 = (uint64_t *)(v2 + 32);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v47 = *(_QWORD *)(v2 + 32);
  v32 = v47;
  *(_QWORD *)(v3 + 32) = 0x8000000000000000;
  v34 = sub_1CB779AD8((uint64_t)v18);
  v35 = *(_QWORD *)(v32 + 16);
  v36 = (v33 & 1) == 0;
  v37 = v35 + v36;
  if (__OFADD__(v35, v36))
  {
    __break(1u);
LABEL_17:
    sub_1CB77EF8C();
    v32 = v47;
    goto LABEL_13;
  }
  LOBYTE(v3) = v33;
  if (*(_QWORD *)(v32 + 24) < v37)
  {
    sub_1CB77B710(v37, isUniquelyReferenced_nonNull_native);
    v32 = v47;
    v38 = sub_1CB779AD8((uint64_t)v18);
    if ((v3 & 1) != (v39 & 1))
    {
      sub_1CB847290();
      __break(1u);
      return;
    }
    v34 = v38;
    goto LABEL_13;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_17;
LABEL_13:
  v40 = v45;
  *v30 = v32;
  swift_bridgeObjectRelease();
  v41 = (_QWORD *)*v30;
  swift_bridgeObjectRetain();
  if ((v3 & 1) == 0)
  {
    v42 = (void (*)(char *, char *, uint64_t))v29;
    v43 = (uint64_t)v46;
    v42(v46, v18, v6);
    sub_1CB82F9E0(v34, v43, MEMORY[0x1E0DEE9E8], v41);
  }
  swift_bridgeObjectRelease();
  sub_1CB829BE8((uint64_t)v20, v15);
  v44 = *(void (**)(char *, uint64_t))(v40 + 8);
  v44(v20, v6);
  v44(v18, v6);
  swift_endAccess();
}

uint64_t sub_1CB7CD9E0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EventTables()
{
  return objc_opt_self();
}

_QWORD *sub_1CB7CDA4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for RequestLinkTable();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1CB78B0B8(MEMORY[0x1E0DEE9D8]);
  v0[2] = v1;
  type metadata accessor for ComponentEventTable();
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v2 + 16) = MEMORY[0x1E0DEE9E0];
  v0[3] = v2;
  v0[4] = v3;
  v0[5] = v3;
  v0[6] = v3;
  type metadata accessor for LogicalClockTable();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v3;
  v0[7] = v4;
  return v0;
}

uint64_t sub_1CB7CDAD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char v17;
  _QWORD *v18;
  uint64_t v19;

  v3 = sub_1CB846084();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = v7 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v10 = *(_QWORD *)(v7 + 16);
  if (*v1)
  {
    swift_retain();
    sub_1CB7FC4E4(a1, v9, v10, (_QWORD *)(v8 + 16), v8 + 32);
    v12 = v11;
    swift_release();
    if ((v12 & 1) == 0)
      return 0;
  }
  else if (v10)
  {
    v14 = 0;
    v15 = *(_QWORD *)(v4 + 72);
    v18 = v1;
    v19 = v15;
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v16(v6, v9, v3);
      sub_1CB77EA90((unint64_t *)&qword_1ED88BBD0, MEMORY[0x1E0CB09D0]);
      v17 = sub_1CB846864();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      if ((v17 & 1) != 0)
        return 0;
      ++v14;
      v9 += v19;
    }
    while (v10 != v14);
  }
  sub_1CB7CDC6C(a1);
  return 1;
}

uint64_t sub_1CB7CDC6C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = sub_1CB846084();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = v2 + 1;
  v9 = v2[1];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2[1] = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1CB776500(0, *(_QWORD *)(v9 + 16) + 1, 1);
    v9 = *v8;
  }
  v12 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    sub_1CB776500(v11 > 1, v12 + 1, 1);
    v9 = *v8;
  }
  *(_QWORD *)(v9 + 16) = v12 + 1;
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v12, v7, v4);
  v2[1] = v9;
  v14 = *(_QWORD *)(v9 + 16);
  v15 = *v2;
  if (*v2)
  {
    swift_beginAccess();
    if (MEMORY[0x1D179E894](*(_QWORD *)(v15 + 16) & 0x3FLL) >= v14)
    {
      result = swift_isUniquelyReferenced_native();
      v16 = *v2;
      if (!(_DWORD)result)
      {
        if (!v16)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        v16 = sub_1CB8464E0();
        result = swift_release();
        *v2 = v16;
      }
      if (v16)
        return sub_1CB8464A4();
      __break(1u);
      goto LABEL_16;
    }
  }
  else if ((unint64_t)v14 < 0x10)
  {
    return result;
  }
  return sub_1CB7CDE50();
}

uint64_t sub_1CB7CDE50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v1 = *v0;
  v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    v3 = *(_QWORD *)(v1 + 24) & 0x3FLL;
    v4 = *(_QWORD *)(v2 + 16);
    if (v3)
      goto LABEL_7;
  }
  else
  {
    v3 = 0;
    v4 = *(_QWORD *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  v6 = MEMORY[0x1D179E8AC](v4);
  if (v3 <= v6)
    v7 = v6;
  else
    v7 = v3;
  v5 = sub_1CB7CDEF0(v2, v7, 0, v3);
LABEL_11:
  result = swift_release();
  *v0 = v5;
  return result;
}

uint64_t sub_1CB7CDEF0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = MEMORY[0x1D179E8AC](*(_QWORD *)(a1 + 16));
  v9 = 0;
  if ((a3 & 1) != 0)
    v10 = 0;
  else
    v10 = a2;
  if (v10 <= v8)
    v10 = v8;
  if (v10 <= a4)
    v11 = a4;
  else
    v11 = v10;
  if (v11 >= 5)
  {
    v9 = MEMORY[0x1D179E8B8]();
    sub_1CB7CDF80(v9 + 16, v9 + 32, a1);
  }
  return v9;
}

uint64_t sub_1CB7CDF80(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;

  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v3 = (_QWORD *)result;
    sub_1CB846084();
    sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
    v4 = 0;
    while (1)
    {
      result = sub_1CB846810();
      if (__OFSUB__(1 << *v3, 1))
        break;
      if (sub_1CB846498())
      {
        while (1)
          sub_1CB8464C8();
      }
      result = sub_1CB8464BC();
      if (++v4 == v6)
        return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1CB7CE0AC(unint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  int64_t v32;
  char v33;
  unint64_t *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  int64_t v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = sub_1CB846084();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v34 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CB7CE47C();
  result = sub_1CB7CE484(&v43, (uint64_t)a1, 0, 1, v12);
  v14 = a1[2];
  v15 = v43;
  if (v43 == v14)
    return result;
  if ((v43 & 0x8000000000000000) != 0)
    goto LABEL_26;
  if (v14 < v43)
  {
LABEL_27:
    __break(1u);
  }
  else
  {
    v40 = v11;
    v35 = result;
    v16 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    sub_1CB84726C();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    v17 = swift_dynamicCastClass();
    if (!v17)
    {
      swift_bridgeObjectRelease();
      v17 = MEMORY[0x1E0DEE9D8];
    }
    v38 = v16;
    v39 = (uint64_t)a1 + v16;
    v18 = *(_QWORD *)(v17 + 16);
    swift_release();
    if (v18 == v15)
    {
      v19 = swift_dynamicCastClass();
      if (!v19)
      {
        swift_bridgeObjectRelease();
        v19 = MEMORY[0x1E0DEE9D8];
      }
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  v19 = sub_1CB7F28C4((uint64_t)a1, v39, 0, (2 * v15) | 1);
LABEL_9:
  result = swift_bridgeObjectRelease();
  v44 = v35;
  v45 = v19;
  if (a1[2] >= v14)
  {
    v34 = a1;
    swift_bridgeObjectRetain();
    swift_retain();
    a1 = (unint64_t *)&qword_1ED88BBD0;
    v42 = v8;
    v37 = v14;
    while (1)
    {
      v20 = v40;
      if (v15 >= (uint64_t)v14)
      {
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      v21 = *(_QWORD *)(v3 + 72);
      v22 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      v22(v40, v39 + v21 * v15, v2);
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v23(v20, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v20, 1, v2) == 1)
        goto LABEL_23;
      v36 = v23;
      v41 = v15;
      v24 = a1;
      v25 = v3;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v20, v2);
      v26 = v44;
      v27 = (uint64_t)v8;
      v28 = v45 + v38;
      v29 = *(_QWORD *)(v45 + 16);
      if (v44)
      {
        swift_retain();
        sub_1CB7FC4E4(v27, v28, v29, (_QWORD *)(v26 + 16), v26 + 32);
        v31 = v30;
        swift_release();
        v3 = v25;
        a1 = v24;
        v32 = v41;
        if ((v31 & 1) == 0)
          goto LABEL_12;
      }
      else
      {
        v3 = v25;
        a1 = v24;
        v32 = v41;
        if (v29)
        {
          do
          {
            v22(v6, v28, v2);
            sub_1CB77EA90(a1, MEMORY[0x1E0CB09D0]);
            v33 = sub_1CB846864();
            (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
            if ((v33 & 1) != 0)
              goto LABEL_12;
            v28 += v21;
          }
          while (--v29);
        }
      }
      sub_1CB7CDC6C((uint64_t)v42);
LABEL_12:
      v15 = v32 + 1;
      v8 = v42;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v42, v2);
      v14 = v37;
      if (v15 == v37)
      {
        v36(v40, 1, 1, v2);
LABEL_23:
        swift_release();
        swift_bridgeObjectRelease_n();
        return v44;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB7CE47C()
{
  return 0;
}

uint64_t sub_1CB7CE484(unint64_t *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  uint64_t v32;
  unint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  char v35;
  void (*v36)(char *, uint64_t);
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, unint64_t, uint64_t);
  unint64_t v51;

  LODWORD(v50) = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CB846084();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v48 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v42 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v42 - v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = MEMORY[0x1D179E8AC](v21);
  if ((v50 & 1) != 0)
    v23 = 0;
  else
    v23 = a3;
  if (v23 <= v22)
    v23 = v22;
  if (v23 <= a5)
    v24 = a5;
  else
    v24 = v23;
  if (v24 > 4)
  {
    v25 = MEMORY[0x1D179E8B8]();
    sub_1CB7CE860(&v51, a2, (_QWORD *)(v25 + 16));
    *a1 = v51;
    return v25;
  }
  if (v21 < 2)
  {
LABEL_11:
    v25 = 0;
    *a1 = v21;
    return v25;
  }
  v26 = a2;
  result = sub_1CB78F4F8(0, v21, 0, MEMORY[0x1E0DEE9D8]);
  v28 = result;
  v29 = 0;
  v30 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v44 = a1;
  v45 = v30;
  v42 = v21;
  v43 = v26 + v30;
  v31 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  v49 = *(_QWORD *)(v13 + 72);
  v50 = v31;
  while (v29 != v21)
  {
    v47 = v29;
    v50(v20, v43 + v49 * v29, v12);
    v32 = *(_QWORD *)(v28 + 16);
    v46 = v28;
    if (v32)
    {
      v33 = v28 + v45;
      swift_bridgeObjectRetain();
      while (1)
      {
        v50(v11, v33, v12);
        v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
        v34(v11, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
        sub_1CB77EA90((unint64_t *)&qword_1ED88BBD0, MEMORY[0x1E0CB09D0]);
        v35 = sub_1CB846864();
        v36 = *(void (**)(char *, uint64_t))(v13 + 8);
        v36(v18, v12);
        if ((v35 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v36(v20, v12);
          swift_bridgeObjectRelease();
          v25 = 0;
          *v44 = v47;
          return v25;
        }
        v33 += v49;
        if (!--v32)
          goto LABEL_22;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
LABEL_22:
      v34(v11, 1, 1, v12);
    }
    v37 = v46;
    swift_bridgeObjectRelease();
    v50(v48, (unint64_t)v20, v12);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v37 = sub_1CB78F4F8(0, *(_QWORD *)(v37 + 16) + 1, 1, v37);
    v21 = v42;
    v38 = v47;
    v40 = *(_QWORD *)(v37 + 16);
    v39 = *(_QWORD *)(v37 + 24);
    v41 = v37;
    if (v40 >= v39 >> 1)
      v41 = sub_1CB78F4F8(v39 > 1, v40 + 1, 1, v37);
    v29 = v38 + 1;
    *(_QWORD *)(v41 + 16) = v40 + 1;
    v28 = v41;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v41 + v45 + v40 * v49, v48, v12);
    result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    a1 = v44;
    if (v29 == v21)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1CB7CE860(unint64_t *a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v10;
  unint64_t v11;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    sub_1CB846084();
    sub_1CB77EA90((unint64_t *)&qword_1ED88D568, MEMORY[0x1E0CB09C8]);
    v5 = 0;
    v6 = MEMORY[0x1E0CB09D0];
    v10 = a3;
    while (1)
    {
      v11 = v5;
      result = sub_1CB846810();
      if (__OFSUB__(1 << *a3, 1))
        break;
      sub_1CB846498();
      while (1)
      {
        result = sub_1CB8464B0();
        if ((v8 & 1) != 0)
          break;
        if (result >= v3)
        {
          __break(1u);
          goto LABEL_14;
        }
        sub_1CB77EA90((unint64_t *)&qword_1ED88BBD0, v6);
        if ((sub_1CB846864() & 1) != 0)
        {
          result = 0;
          *a1 = v11;
          return result;
        }
        sub_1CB8464C8();
      }
      sub_1CB8464BC();
      v5 = v11 + 1;
      a3 = v10;
      if (v11 + 1 == v3)
        goto LABEL_11;
    }
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    *a1 = v3;
    return 1;
  }
  return result;
}

id sub_1CB7CEA3C(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  if (!a2)
    return 0;
  v10 = objc_msgSend(a2, sel_timestamp);
  if (!v10)
    return 0;
  v11 = v10;
  v12 = objc_msgSend(v10, sel_timestampInNanoseconds);

  v13 = objc_msgSend(a2, sel_timestamp);
  if (!v13)
    return 0;
  v14 = v13;
  v15 = objc_msgSend(v13, sel_clockIdentifier);

  if (!v15)
    return 0;
  v16 = objc_msgSend(v15, sel_toSafeNSUUID);

  if (v16)
  {
    sub_1CB846054();

    v17 = sub_1CB846084();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 0, 1, v17);
  }
  else
  {
    v17 = sub_1CB846084();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  }
  sub_1CB7B4B88((uint64_t)v7, (uint64_t)v9);
  sub_1CB846084();
  v20 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v17) == 1)
  {
    sub_1CB785B54((uint64_t)v9, &qword_1ED88D570);
    return 0;
  }
  else
  {
    sub_1CB846030();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v17);
    v21 = objc_msgSend(a1, sel_eventMetadata);
    if (v21 || (v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A408]), sel_init)) != 0)
    {
      objc_msgSend(v21, sel_setEventGeneratedRelativeToBootTimeTimestampNs_, v12);
      v22 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
      swift_bridgeObjectRelease();
      objc_msgSend(v21, sel_setEventGeneratedTimestampRefId_, v22);

      objc_msgSend(a1, sel_setEventMetadata_, v21);
      v18 = objc_msgSend(a1, sel_wrapAsAnyEvent);

    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v18;
}

char *keypath_get_selector_eventMetadata()
{
  return sel_eventMetadata;
}

id sub_1CB7CED04@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_eventMetadata);
  *a2 = result;
  return result;
}

id sub_1CB7CED3C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEventMetadata_, *a1);
}

char *keypath_get_selector_mhId()
{
  return sel_mhId;
}

id sub_1CB7CED5C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_mhId);
  *a2 = result;
  return result;
}

id sub_1CB7CED94(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMhId_, *a1);
}

char *keypath_get_selector_scId()
{
  return sel_scId;
}

id sub_1CB7CEDB4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_scId);
  *a2 = result;
  return result;
}

id sub_1CB7CEDEC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setScId_, *a1);
}

char *keypath_get_selector_plusId()
{
  return sel_plusId;
}

id sub_1CB7CEE0C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_plusId);
  *a2 = result;
  return result;
}

id sub_1CB7CEE44(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPlusId_, *a1);
}

char *keypath_get_selector_requestId()
{
  return sel_requestId;
}

id sub_1CB7CEE64@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_requestId);
  *a2 = result;
  return result;
}

id sub_1CB7CEE9C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRequestId_, *a1);
}

char *keypath_get_selector_nlId()
{
  return sel_nlId;
}

id sub_1CB7CEEBC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_nlId);
  *a2 = result;
  return result;
}

id sub_1CB7CEEF4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setNlId_, *a1);
}

char *keypath_get_selector_flowId()
{
  return sel_flowId;
}

id sub_1CB7CEF14@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_flowId);
  *a2 = result;
  return result;
}

id sub_1CB7CEF4C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFlowId_, *a1);
}

char *keypath_get_selector_asrId()
{
  return sel_asrId;
}

id sub_1CB7CEF6C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_asrId);
  *a2 = result;
  return result;
}

id sub_1CB7CEFA4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAsrId_, *a1);
}

uint64_t sub_1CB7CEFB8(uint64_t a1)
{
  uint64_t v1;

  return sub_1CB7CA934(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1CB7CF004()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, sel_typeName);
  sub_1CB8468A0();

  sub_1CB78A5E8();
  v2 = sub_1CB846E7C();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(v2 + 16 * v3 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    v4 = 0;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static Config.groundTruthDBLocation.getter()
{
  return sub_1CB7CF9B8(&qword_1ED88A688, &qword_1ED88A678);
}

unint64_t static Config.baseLocation.getter()
{
  return 0xD000000000000036;
}

unint64_t static Config.pluginSchedulerLockPath.getter()
{
  return 0xD00000000000004BLL;
}

unint64_t static Config.pluginSchedulerTimestamp.getter()
{
  return 0xD000000000000050;
}

unint64_t static Config.inferredGroundTruthPathComponent.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1CB7CF15C(uint64_t a1)
{
  return sub_1CB7CF868(a1, 0xD000000000000014, 0x80000001CB8552A0, &qword_1ED88A660, algn_1ED88A668);
}

uint64_t static Config.groundTruthDir.getter()
{
  return sub_1CB7CF9B8(&qword_1ED88A670, &qword_1ED88A660);
}

unint64_t static Config.inferredGroundTruthStoreFilename.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1CB7CF1C0()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_1ED88A670 != -1)
    swift_once();
  v1 = qword_1ED88A660;
  v2 = *(_QWORD *)algn_1ED88A668;
  swift_bridgeObjectRetain();
  result = sub_1CB846954();
  qword_1ED88A678 = v1;
  unk_1ED88A680 = v2;
  return result;
}

uint64_t static Config.picsStorePathComponent.getter()
{
  return 1396918608;
}

uint64_t sub_1CB7CF25C(uint64_t a1)
{
  return sub_1CB7CF868(a1, 0x2F53434950, 0xE500000000000000, &qword_1ED88A690, algn_1ED88A698);
}

uint64_t static Config.PICSDir.getter()
{
  return sub_1CB7CF9B8(&qword_1ED88A6A0, &qword_1ED88A690);
}

uint64_t static Config.picsStoreFilename.getter()
{
  return 0x7461642E73636970;
}

uint64_t sub_1CB7CF2B8()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_1ED88A6A0 != -1)
    swift_once();
  v1 = qword_1ED88A690;
  v2 = *(_QWORD *)algn_1ED88A698;
  swift_bridgeObjectRetain();
  result = sub_1CB846954();
  qword_1ED88A620 = v1;
  unk_1ED88A628 = v2;
  return result;
}

uint64_t static Config.PICSDBLocation.getter()
{
  return sub_1CB7CF9B8(&qword_1ED88A638, &qword_1ED88A620);
}

unint64_t static Config.StreamBookmarkStorePath.getter()
{
  return 0xD000000000000043;
}

uint64_t sub_1CB7CF380@<X0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v4 = objc_msgSend(v2, sel_containerURLForSecurityApplicationGroupIdentifier_, v3);

  if (v4)
  {
    sub_1CB845F34();

    v5 = sub_1CB845F58();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1CB845F58();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

unint64_t static Config.universalSuggestionsStoreDirInContainer.getter()
{
  return 0xD000000000000022;
}

unint64_t static Config.universalSuggestionsStoreFilename.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t static Config.universalSuggestionsStoreDir.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = sub_1CB846570();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB7CF380((uint64_t)v8);
  v9 = sub_1CB845F58();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1CB799DA0((uint64_t)v8);
    v11 = 1;
  }
  else
  {
    sub_1CB846564();
    sub_1CB845EF8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v11, 1, v9);
}

uint64_t static Config.universalSuggestionsStoreFilePath.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;

  v0 = sub_1CB846570();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  v10 = sub_1CB845F58();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB7CF380((uint64_t)v7);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v14(v7, 1, v10) == 1)
  {
    sub_1CB799DA0((uint64_t)v7);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  else
  {
    sub_1CB846564();
    sub_1CB845EF8();
    v15 = *(void (**)(char *, uint64_t))(v1 + 8);
    v15(v3, v0);
    v16 = *(void (**)(char *, uint64_t))(v11 + 8);
    v16(v7, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    if (v14(v9, 1, v10) != 1)
    {
      sub_1CB846558();
      sub_1CB845EF8();
      v15(v3, v0);
      v16(v9, v10);
      v17 = sub_1CB845F40();
      v16(v13, v10);
      return v17;
    }
  }
  sub_1CB799DA0((uint64_t)v9);
  return 0;
}

uint64_t static Config.pimsStorePathComponent.getter()
{
  return 1397573968;
}

uint64_t sub_1CB7CF848(uint64_t a1)
{
  return sub_1CB7CF868(a1, 0x2F534D4950, 0xE500000000000000, &qword_1ED88A6A8, algn_1ED88A6B0);
}

uint64_t sub_1CB7CF868(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t result;

  result = sub_1CB846954();
  *a4 = 0xD000000000000036;
  *a5 = 0x80000001CB855140;
  return result;
}

uint64_t static Config.PIMSDir.getter()
{
  return sub_1CB7CF9B8(&qword_1ED88A6C0, &qword_1ED88A6A8);
}

uint64_t static Config.pimsStoreFilename.getter()
{
  return 0x7461642E736D6970;
}

uint64_t sub_1CB7CF90C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_1ED88A6C0 != -1)
    swift_once();
  v1 = qword_1ED88A6A8;
  v2 = *(_QWORD *)algn_1ED88A6B0;
  swift_bridgeObjectRetain();
  result = sub_1CB846954();
  qword_1ED88A640 = v1;
  unk_1ED88A648 = v2;
  return result;
}

uint64_t static Config.PIMSDBLocation.getter()
{
  return sub_1CB7CF9B8(&qword_1ED88A658, &qword_1ED88A640);
}

uint64_t sub_1CB7CF9B8(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

ValueMetadata *type metadata accessor for Config()
{
  return &type metadata for Config;
}

void sub_1CB7CFA18()
{
  qword_1EF9A89A8 = (uint64_t)&unk_1E868A5A0;
}

id sub_1CB7CFB24()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroundTruthModelWipePhoneCallGroundTruthMigration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GroundTruthModelWipePhoneCallGroundTruthMigration()
{
  return objc_opt_self();
}

void sub_1CB7CFB78(void *a1, void *a2, void *a3)
{
  __objc2_prot_list **p_base_prots;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  char v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  void *v26;
  void *v27;
  int64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  _OWORD v36[2];
  _BYTE v37[24];
  uint64_t v38;
  int64_t v39;

  p_base_prots = &SupportedLocalesPListStore.base_prots;
  v5 = objc_msgSend(a1, sel_entity);
  v6 = objc_msgSend(v5, sel_name);

  if (v6)
  {
    v7 = sub_1CB8468A0();
    v9 = v8;

    if (v7 == 0xD000000000000011 && v9 == 0x80000001CB853DA0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = sub_1CB8471A0();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
        return;
    }
    v11 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    v12 = objc_msgSend(a1, sel_primitiveValueForKey_, v11);

    if (v12)
    {
      sub_1CB846EB8();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v36, 0, sizeof(v36));
    }
    sub_1CB7D0054((uint64_t)v36, (uint64_t)v37);
    if (!v38)
    {
      sub_1CB778110((uint64_t)v37);
      return;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      v14 = v34;
      v13 = v35;
      if (qword_1EF99C3B0 != -1)
LABEL_42:
        swift_once();
      v15 = sub_1CB83DD18(v14, (uint64_t)v13, (_QWORD *)qword_1EF9A89A8);
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
      {
        v16 = objc_msgSend(a2, sel_destinationEntityName);
        if (v16)
        {
          v17 = v16;
          v18 = (void *)objc_opt_self();
          v19 = objc_msgSend(a3, sel_destinationContext);
          v13 = objc_msgSend(v18, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v17, v19);

          v20 = objc_msgSend(v13, (SEL)p_base_prots[156]);
          v21 = objc_msgSend(v20, sel_attributesByName);

          sub_1CB7D009C();
          v14 = sub_1CB8467EC();

          v33 = v14 + 64;
          v22 = 1 << *(_BYTE *)(v14 + 32);
          v23 = -1;
          if (v22 < 64)
            v23 = ~(-1 << v22);
          v24 = v23 & *(_QWORD *)(v14 + 64);
          v39 = (unint64_t)(v22 + 63) >> 6;
          swift_bridgeObjectRetain();
          v25 = 0;
          while (1)
          {
            if (v24)
            {
              v24 &= v24 - 1;
            }
            else
            {
              v28 = v25 + 1;
              if (__OFADD__(v25, 1))
              {
                __break(1u);
                goto LABEL_42;
              }
              if (v28 >= v39)
                goto LABEL_39;
              v29 = *(_QWORD *)(v33 + 8 * v28);
              ++v25;
              if (!v29)
              {
                v25 = v28 + 1;
                if (v28 + 1 >= v39)
                  goto LABEL_39;
                v29 = *(_QWORD *)(v33 + 8 * v25);
                if (!v29)
                {
                  v25 = v28 + 2;
                  if (v28 + 2 >= v39)
                    goto LABEL_39;
                  v29 = *(_QWORD *)(v33 + 8 * v25);
                  if (!v29)
                  {
                    v25 = v28 + 3;
                    if (v28 + 3 >= v39)
                      goto LABEL_39;
                    v29 = *(_QWORD *)(v33 + 8 * v25);
                    if (!v29)
                    {
                      v25 = v28 + 4;
                      if (v28 + 4 >= v39)
                        goto LABEL_39;
                      v29 = *(_QWORD *)(v33 + 8 * v25);
                      if (!v29)
                      {
                        v30 = v28 + 5;
                        if (v30 >= v39)
                        {
LABEL_39:
                          swift_release();
                          objc_msgSend(a3, sel_associateSourceInstance_withDestinationInstance_forEntityMapping_, a1, v13, a2);

                          swift_bridgeObjectRelease();
                          return;
                        }
                        v29 = *(_QWORD *)(v33 + 8 * v30);
                        if (!v29)
                        {
                          while (1)
                          {
                            v25 = v30 + 1;
                            if (__OFADD__(v30, 1))
                              break;
                            if (v25 >= v39)
                              goto LABEL_39;
                            v29 = *(_QWORD *)(v33 + 8 * v25);
                            ++v30;
                            if (v29)
                              goto LABEL_37;
                          }
                          __break(1u);
                          return;
                        }
                        v25 = v30;
                      }
                    }
                  }
                }
              }
LABEL_37:
              v24 = (v29 - 1) & v29;
            }
            swift_bridgeObjectRetain();
            v26 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
            p_base_prots = (__objc2_prot_list **)objc_msgSend(a1, sel_valueForKey_, v26);

            v27 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
            swift_bridgeObjectRelease();
            objc_msgSend(v13, sel_setValue_forKey_, p_base_prots, v27);
            swift_unknownObjectRelease();

          }
        }
      }
    }
  }
}

uint64_t sub_1CB7D0054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1CB7D009C()
{
  unint64_t result;

  result = qword_1EF99F0E0;
  if (!qword_1EF99F0E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF99F0E0);
  }
  return result;
}

uint64_t sub_1CB7D00DC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for PluginLoadError(uint64_t a1)
{
  return sub_1CB7D0104(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1CB7D0104(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s28SiriPrivateLearningAnalytics15PluginLoadErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1CB7D00DC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PluginLoadError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1CB7D00DC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1CB7D0104(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PluginLoadError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1CB7D0104(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginLoadError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PluginLoadError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CB7D0288(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1CB7D02A0(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PluginLoadError()
{
  return &type metadata for PluginLoadError;
}

uint64_t INSetTaskAttributeIntentFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t INSetTaskAttributeIntentFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1CB7D02E0(id *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *a1;
  v2 = objc_msgSend(v1, sel_intent);
  objc_opt_self();
  v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    v4 = (void *)v3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1CB848A60;
    v6 = objc_msgSend(v4, sel_typeName);
    v7 = sub_1CB8468A0();
    v9 = v8;

    v10 = type metadata accessor for SetTaskAttributeFeature.EventType(0);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v7;
    *(_QWORD *)(v11 + 24) = v9;
    *(_QWORD *)(v5 + 56) = v10;
    *(_QWORD *)(v5 + 64) = sub_1CB78E6AC(&qword_1EF99F0E8, type metadata accessor for SetTaskAttributeFeature.EventType);
    *(_QWORD *)(v5 + 32) = v11;
    LOBYTE(v10) = objc_msgSend(v1, sel__donatedBySiri);
    v12 = type metadata accessor for SetTaskAttributeFeature.DonatedBySiri(0);
    v13 = swift_allocObject();
    *(_BYTE *)(v13 + 16) = v10;
    *(_QWORD *)(v5 + 96) = v12;
    *(_QWORD *)(v5 + 104) = sub_1CB78E6AC(&qword_1EF99F0F0, type metadata accessor for SetTaskAttributeFeature.DonatedBySiri);
    *(_QWORD *)(v5 + 72) = v13;
    v14 = objc_msgSend(v4, sel_taskTitle);
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, sel_spokenPhrase);
      v17 = sub_1CB8468A0();
      v19 = v18;

      v20 = type metadata accessor for SetTaskAttributeFeature.TaskContents(0);
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = v17;
      *(_QWORD *)(v21 + 24) = v19;
      v5 = (uint64_t)sub_1CB78F738((_QWORD *)1, 3, 1, (_QWORD *)v5);
      v24 = v20;
      v25 = sub_1CB78E6AC(&qword_1EF99F0F8, type metadata accessor for SetTaskAttributeFeature.TaskContents);
      *(_QWORD *)&v23 = v21;
      *(_QWORD *)(v5 + 16) = 3;
      sub_1CB7780BC(&v23, v5 + 112);

    }
    else
    {

    }
  }
  else
  {

    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

uint64_t type metadata accessor for SetTaskAttributeFeature.EventType(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99F1C8);
}

uint64_t SetTaskAttributeFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = a1;
  return result;
}

uint64_t INSetTaskAttributeIntentFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t INSetTaskAttributeIntentFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SetTaskAttributeFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99F2B0);
}

uint64_t sub_1CB7D05BC(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for SetTaskAttributeFeature.EventType);
}

uint64_t sub_1CB7D05C8(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for SetTaskAttributeFeature.EventType);
}

uint64_t SetTaskAttributeFeature.DonatedBySiri.init(value:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t type metadata accessor for SetTaskAttributeFeature.TaskContents(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99F398);
}

uint64_t SetTaskAttributeFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1;
  v3 = swift_allocObject();
  v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t SetTaskAttributeFeature.DonatedBySiri.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SetTaskAttributeFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7D06E0(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for SetTaskAttributeFeature.DonatedBySiri(0);
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB7D0714(unsigned __int8 *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  type metadata accessor for SetTaskAttributeFeature.DonatedBySiri(0);
  v2 = swift_allocObject();
  v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t SetTaskAttributeFeature.TaskContents.init(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t SetTaskAttributeFeature.TaskContents.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB7D07B8(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for SetTaskAttributeFeature.TaskContents);
}

uint64_t sub_1CB7D07C4(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for SetTaskAttributeFeature.TaskContents);
}

uint64_t type metadata accessor for INSetTaskAttributeIntentFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for INSetTaskAttributeIntentFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of INSetTaskAttributeIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of INSetTaskAttributeIntentFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

ValueMetadata *type metadata accessor for SetTaskAttributeFeature()
{
  return &type metadata for SetTaskAttributeFeature;
}

_QWORD *sub_1CB7D0828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;

  v10 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v11, a1, a3);
  result = (_QWORD *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  result[4] = a4;
  result[5] = v10;
  *a5 = &unk_1EF99F488;
  a5[1] = result;
  return result;
}

uint64_t sub_1CB7D08B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v5[8] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1CB7D08F8()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1CB7D0960;
  return sub_1CB846B58();
}

uint64_t sub_1CB7D0960()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

_QWORD *sub_1CB7D09D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;

  v10 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v11, a1, a3);
  result = (_QWORD *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  result[4] = a4;
  result[5] = v10;
  *a5 = &unk_1EF99F478;
  a5[1] = result;
  return result;
}

uint64_t sub_1CB7D0A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v5[8] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1CB7D0AA4()
{
  uint64_t v0;

  swift_beginAccess();
  sub_1CB846E4C();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnyAsyncIterator.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CB7D0B30()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD);

  v3 = (uint64_t (*)(_QWORD))(***(int ***)(v0 + 24) + **(_QWORD **)(v0 + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1CB7D0B90;
  return v3(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1CB7D0B90()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CB7D0BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CB785488;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_1CB7D0C38()
{
  return swift_allocateGenericValueMetadata();
}

_QWORD *sub_1CB7D0C40(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_1CB7D0C6C()
{
  return swift_release();
}

_QWORD *sub_1CB7D0C74(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1CB7D0CAC(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s28SiriPrivateLearningAnalytics13LocaleControlVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1CB7D0D24(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for AnyAsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAsyncIterator);
}

uint64_t sub_1CB7D0D6C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB7D0D90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1CB785DF4;
  *(_OWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 64) = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1CB7D0E10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1CB785488;
  *(_OWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 64) = swift_projectBox();
  return swift_task_switch();
}

id _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A138]), sel_init);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_setSuggestionGenerationDomain_, a1);
  }
  else
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v4 = sub_1CB8466D8();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED890248);
    v5 = sub_1CB8466C0();
    v6 = sub_1CB846C90();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v10 = v8;
      *(_DWORD *)v7 = 136315138;
      sub_1CB775A54(0xD000000000000035, 0x80000001CB8554C0, &v10);
      sub_1CB846E58();
      _os_log_impl(&dword_1CB771000, v5, v6, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v8, -1, -1);
      MEMORY[0x1D179FE84](v7, -1, -1);
    }

    return 0;
  }
  return v3;
}

id _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO35suggestionChangeDataCaptureMetadata10changeTypeSo0e10PLUSChangejkL0CSgSo0eojkN0V_tFZ_0(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A0F8]), sel_init);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_setOperationType_, a1);
  }
  else
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v4 = sub_1CB8466D8();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED890248);
    v5 = sub_1CB8466C0();
    v6 = sub_1CB846C90();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v10 = v8;
      *(_DWORD *)v7 = 136315138;
      sub_1CB775A54(0xD000000000000030, 0x80000001CB855480, &v10);
      sub_1CB846E58();
      _os_log_impl(&dword_1CB771000, v5, v6, "PLUSSchemaMessageConstructor.%s:  failed to create PLUS SELF event templates", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v8, -1, -1);
      MEMORY[0x1D179FE84](v7, -1, -1);
    }

    return 0;
  }
  return v3;
}

ValueMetadata *type metadata accessor for PLUSSchemaMessageConstructor()
{
  return &type metadata for PLUSSchemaMessageConstructor;
}

id PBCodable.wrapAsAnyEvent(time:turnID:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;

  objc_opt_self();
  v3 = swift_dynamicCastObjCClass();
  if (!v3)
    return 0;
  v4 = v3;
  v5 = objc_allocWithZone(MEMORY[0x1E0D9A408]);
  v6 = v1;
  v7 = objc_msgSend(v5, sel_init);
  v8 = v7;
  if (v7)
  {
    v9 = v7;
    v10 = (void *)sub_1CB84603C();
    v11 = (id)AFTurnIdentifierGetBytes();

    if (v11)
    {
      v12 = sub_1CB845F94();
      v14 = v13;

      v11 = (id)sub_1CB845F88();
      sub_1CB779034(v12, v14);
    }
    objc_msgSend(v9, sel_setTurnID_, v11);

    if (a1 < 0)
    {
      __break(1u);
      goto LABEL_24;
    }
    objc_msgSend(v9, sel_setEventGeneratedRelativeToBootTimeTimestampNs_, a1);
  }
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A400]), sel_init);
  if (!v15)
  {
    if (qword_1ED88E518 == -1)
    {
LABEL_11:
      v19 = sub_1CB8466D8();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED890248);
      v20 = sub_1CB8466C0();
      v21 = sub_1CB846C90();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_1CB771000, v20, v21, "Failed to create a SISchemaClientEvent", v22, 2u);
        MEMORY[0x1D179FE84](v22, -1, -1);

LABEL_17:
        return 0;
      }

LABEL_20:
      return 0;
    }
LABEL_24:
    swift_once();
    goto LABEL_11;
  }
  v16 = v15;
  objc_msgSend(v15, sel_setEventType_, v4);
  objc_msgSend(v16, sel_setEventMetadata_, v8);
  v17 = objc_msgSend(v16, sel_wrapAsAnyEvent);
  if (!v17)
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v23 = sub_1CB8466D8();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED890248);
    v20 = sub_1CB8466C0();
    v24 = sub_1CB846C90();
    if (os_log_type_enabled(v20, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1CB771000, v20, v24, "Failed to wrap SISchemaClientEvent as SISchemaAnyEvent", v25, 2u);
      MEMORY[0x1D179FE84](v25, -1, -1);

      goto LABEL_17;
    }

    goto LABEL_20;
  }
  v18 = v17;

  return v18;
}

uint64_t DismissalFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DismissalFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t DismissalTimestampFeature.__allocating_init(value:)(double a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(double *)(result + 16) = a1;
  return result;
}

uint64_t DismissalReasonFeature.__allocating_init(value:)(int a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_DWORD *)(result + 16) = a1;
  return result;
}

void sub_1CB7D15A0()
{
  qword_1ED88BDB8 = (uint64_t)&unk_1E868A5E0;
}

uint64_t static DismissalFeatureExtractor.userManualDismissalReasons.getter()
{
  return sub_1CB7D16CC(&qword_1ED88BDC8);
}

void sub_1CB7D15D0()
{
  qword_1ED88BDD0 = (uint64_t)&unk_1E868A610;
}

uint64_t static DismissalFeatureExtractor.userDismissalReasonsCarPlay.getter()
{
  return sub_1CB7D16CC(&qword_1ED88BDE0);
}

uint64_t sub_1CB7D1600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (qword_1ED88BDC8 != -1)
    swift_once();
  v0 = qword_1ED88BDB8;
  if (qword_1ED88BDE0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v1 = swift_bridgeObjectRetain();
  result = sub_1CB7F113C(v1);
  qword_1ED88BDE8 = v0;
  return result;
}

uint64_t static DismissalFeatureExtractor.allUserDismissalEvents.getter()
{
  return sub_1CB7D16CC(&qword_1ED88BDF8);
}

uint64_t sub_1CB7D16CC(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t DismissalFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DismissalFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

_QWORD *sub_1CB7D171C(uint64_t *a1)
{
  return sub_1CB7D1A30(*a1);
}

uint64_t DismissalTimestampFeature.init(value:)(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = v1;
  *(double *)(v1 + 16) = a1;
  return result;
}

uint64_t DismissalTimestampFeature.__allocating_init(value:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  v5 = v4;
  if ((a2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D838);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_QWORD *)(v4 + 16) = a1;
  }
  return v5;
}

uint64_t DismissalTimestampFeature.init(value:)(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D838);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_QWORD *)(v2 + 16) = a1;
  }
  return v2;
}

uint64_t DismissalTimestampFeature.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DismissalTimestampFeature.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7D1808(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for DismissalTimestampFeature(0);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB7D183C(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *a1;
  v2 = *((_BYTE *)a1 + 8);
  type metadata accessor for DismissalTimestampFeature(0);
  v3 = swift_allocObject();
  v4 = v3;
  if ((v2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D838);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v1;
  }
  return v4;
}

uint64_t DismissalReasonFeature.init(value:)(int a1)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t DismissalReasonFeature.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = v2;
  if ((a1 & 0x100000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F490);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_DWORD *)(v2 + 16) = a1;
  }
  return v3;
}

uint64_t DismissalReasonFeature.init(value:)(uint64_t a1)
{
  uint64_t v1;

  if ((a1 & 0x100000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F490);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_DWORD *)(v1 + 16) = a1;
  }
  return v1;
}

uint64_t DismissalReasonFeature.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DismissalReasonFeature.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7D1988(int *a1)
{
  int v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for DismissalReasonFeature(0);
  result = swift_allocObject();
  *(_DWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB7D19BC(int *a1)
{
  int v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *a1;
  v2 = *((_BYTE *)a1 + 4);
  type metadata accessor for DismissalReasonFeature(0);
  v3 = swift_allocObject();
  v4 = v3;
  if ((v2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F490);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_DWORD *)(v3 + 16) = v1;
  }
  return v4;
}

_QWORD *sub_1CB7D1A30(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __objc2_prot_list **p_base_prots;
  __objc2_prot_list **v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  __objc2_prot_list **v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  id v49;
  void *v50;
  id v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD v56[5];
  uint64_t v57;
  unint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;

  v4 = a1;
  *(_QWORD *)&v59 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v2 = (_QWORD *)a1;
    else
      v2 = (_QWORD *)(a1 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v5 = sub_1CB847044();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      if (v5 >= 1)
      {
        v6 = 0;
        v57 = v4;
        v58 = v4 & 0xC000000000000001;
        p_base_prots = &SupportedLocalesPListStore.base_prots;
        v8 = &SupportedLocalesPListStore.base_prots;
        v9 = 0x1E0D9A000uLL;
        while (1)
        {
          v10 = v58 ? (id)MEMORY[0x1D179F320](v6, v4) : *(id *)(v4 + 8 * v6 + 32);
          v11 = v10;
          if (objc_msgSend(v10, (SEL)p_base_prots[170]) != 6)
            break;
          v12 = objc_msgSend(v11, (SEL)v8[178]);
          if (v12)
          {
            v13 = sub_1CB845F94();
            v15 = v14;

            v12 = (id)sub_1CB845F88();
            sub_1CB779034(v13, v15);
          }
          v16 = objc_msgSend(objc_allocWithZone(*(Class *)(v9 + 1120)), sel_initWithData_, v12);

          v17 = objc_msgSend(v16, sel_event);
          if (v17)
            goto LABEL_16;

LABEL_6:
          if (v5 == ++v6)
          {
            v32 = swift_bridgeObjectRelease();
            v33 = v59;
            goto LABEL_34;
          }
        }
        v17 = v11;
LABEL_16:
        v18 = sub_1CB792C48();
        objc_msgSend(v17, (SEL)p_base_prots[170]);
        v19 = sub_1CB846D80();
        if (v19 && v18 == v19)
        {
          v20 = objc_msgSend(v17, (SEL)v8[178]);
          if (v20)
          {
            v21 = v20;
            v22 = sub_1CB845F94();
            v23 = p_base_prots;
            v25 = v24;

            v26 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            v27 = (void *)sub_1CB845F88();
            v28 = v22;
            v4 = v57;
            v29 = v25;
            p_base_prots = v23;
            sub_1CB779034(v28, v29);
          }
          else
          {
            v26 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            v27 = 0;
          }
          v30 = objc_msgSend(v26, sel_initWithData_, v27);

          if (v30)
          {
            objc_opt_self();
            v31 = swift_dynamicCastObjCClass();

            v8 = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
            v9 = 0x1E0D9A000;
            if (v31)
            {
              MEMORY[0x1D179EDF8]();
              if (*(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1CB846AA4();
              sub_1CB846AD4();
              sub_1CB846A74();
            }
            else
            {

            }
          }
          else
          {

            v8 = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
            v9 = 0x1E0D9A000;
          }
        }
        else
        {

        }
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_69;
    }
  }
  v32 = swift_bridgeObjectRelease();
  v33 = MEMORY[0x1E0DEE9D8];
LABEL_34:
  *(_QWORD *)&v59 = v33;
  if (v33 >> 62)
    goto LABEL_67;
  v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v34)
  {
    while (!__OFSUB__(v34--, 1))
    {
      if ((v33 & 0xC000000000000001) != 0)
      {
        v36 = (id)MEMORY[0x1D179F320](v34, v33);
      }
      else
      {
        if ((v34 & 0x8000000000000000) != 0)
          goto LABEL_65;
        if (v34 >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_66;
        v36 = *(id *)(v33 + 32 + 8 * v34);
      }
      v37 = v36;
      v38 = objc_msgSend(v36, sel_uiStateTransition);
      if (v38)
      {
        v39 = v38;
        v40 = objc_msgSend(v38, sel_dismissed);

        if (v40)
        {
          objc_msgSend(v40, sel_dismissalReason);

          goto LABEL_48;
        }
      }

      if (!v34)
        goto LABEL_48;
    }
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    swift_bridgeObjectRetain();
    v34 = sub_1CB847044();
    v32 = swift_bridgeObjectRelease();
  }
LABEL_48:
  MEMORY[0x1E0C80A78](v32);
  v56[2] = &v59;
  v1 = sub_1CB7E47E0((_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_1CB7D20F8, (uint64_t)v56, v34, v41);
  swift_bridgeObjectRelease();
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((objc_msgSend(v1, sel_hasDeviceDynamicContext) & 1) == 0
    || (getEventTimestampFromContext(from:context:)(v1, v1), (v43 & 1) != 0))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v44 = v42;
    v45 = type metadata accessor for DismissalTimestampFeature(0);
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v44;
    v2 = sub_1CB78F738(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v48 = v2[2];
    v47 = v2[3];
    if (v48 >= v47 >> 1)
      v2 = sub_1CB78F738((_QWORD *)(v47 > 1), v48 + 1, 1, v2);
    v60 = v45;
    v61 = sub_1CB78E6AC(&qword_1EF99F598, type metadata accessor for DismissalTimestampFeature);
    *(_QWORD *)&v59 = v46;
    v2[2] = v48 + 1;
    sub_1CB7780BC(&v59, (uint64_t)&v2[5 * v48 + 4]);
  }
  v49 = objc_msgSend(v1, sel_uiStateTransition);
  if (v49)
  {
    v50 = v49;
    v51 = objc_msgSend(v49, sel_dismissed);

    if (v51)
    {
      v52 = objc_msgSend(v51, sel_dismissalReason);

      v5 = type metadata accessor for DismissalReasonFeature(0);
      v3 = swift_allocObject();
      *(_DWORD *)(v3 + 16) = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
LABEL_58:
        v54 = v2[2];
        v53 = v2[3];
        if (v54 >= v53 >> 1)
          v2 = sub_1CB78F738((_QWORD *)(v53 > 1), v54 + 1, 1, v2);
        v60 = v5;
        v61 = sub_1CB78E6AC(&qword_1ED88BD58, type metadata accessor for DismissalReasonFeature);
        *(_QWORD *)&v59 = v3;
        v2[2] = v54 + 1;
        sub_1CB7780BC(&v59, (uint64_t)&v2[5 * v54 + 4]);
        goto LABEL_61;
      }
LABEL_69:
      v2 = sub_1CB78F738(0, v2[2] + 1, 1, v2);
      goto LABEL_58;
    }
  }
LABEL_61:

  return v2;
}

uint64_t type metadata accessor for DismissalFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for DismissalFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DismissalFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of DismissalFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t type metadata accessor for DismissalTimestampFeature(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99F4D8);
}

uint64_t type metadata accessor for DismissalReasonFeature(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED88BD60);
}

unint64_t sub_1CB7D20F8@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;

  result = sub_1CB7E4774(*a1, **(_QWORD **)(v2 + 16));
  if (!v3)
    *a2 = result;
  return result;
}

id sub_1CB7D217C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroundTruthModelV1toV2CoreDataMigration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GroundTruthModelV1toV2CoreDataMigration()
{
  return objc_opt_self();
}

uint64_t Conversation.init(_:)@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C038);
  v4 = (_QWORD *)swift_allocObject();
  v4[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C050);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1CB847044();
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v7 = sub_1CB7D22AC();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v6;
  v4[2] = v5;
  v4[3] = v7;
  v4[4] = result;
  v4[5] = v7;
  *a2 = v4;
  return result;
}

unint64_t sub_1CB7D22AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED88C040;
  if (!qword_1ED88C040)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED88C050);
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEE970], v1);
    atomic_store(result, (unint64_t *)&qword_1ED88C040);
  }
  return result;
}

uint64_t Conversation.allTurnsChronologically.getter()
{
  return swift_retain();
}

uint64_t sub_1CB7D2304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  unint64_t v38;
  id v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  int v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  int isUniquelyReferenced_nonNull_native;
  char v88;
  unint64_t v89;
  uint64_t v90;
  _BOOL8 v91;
  uint64_t v92;
  char v93;
  unint64_t v94;
  char v95;
  id v96;
  void *v97;
  unsigned int v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  id v104;
  id v105;
  void *v106;
  id v107;
  void *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  void (*v115)(char *, uint64_t, uint64_t);
  char *v116;
  uint64_t v117;
  BOOL v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  int64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  unint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t result;
  uint64_t v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  char *v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;

  v0 = sub_1CB846084();
  v156 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x1E0C80A78](v0);
  v151 = (uint64_t)&v140 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x1E0C80A78](v1);
  v142 = (char *)&v140 - v4;
  v5 = MEMORY[0x1E0C80A78](v3);
  v145 = (char *)&v140 - v6;
  MEMORY[0x1E0C80A78](v5);
  v143 = (char *)&v140 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v9 = MEMORY[0x1E0C80A78](v8);
  v147 = (uint64_t)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v140 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v144 = (char *)&v140 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v140 - v17;
  MEMORY[0x1E0C80A78](v16);
  v150 = (char *)&v140 - v19;
  v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v21 = (_QWORD *)sub_1CB787958(MEMORY[0x1E0DEE9D8]);
  swift_retain();
  v22 = sub_1CB846FF0();
  swift_release();
  swift_retain();
  v148 = v22;
  sub_1CB84708C();
  v23 = v158;
  if (!v158)
  {
LABEL_89:
    swift_release_n();
    v122 = v20[2];
    v123 = MEMORY[0x1E0DEE9D8];
    if (v122)
    {
      v158 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1CB77652C(0, v122, 0);
      v124 = 0;
      v123 = v158;
      v154 = v21;
      do
      {
        v125 = v20;
        v126 = v20[v124 + 4];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C038);
        v127 = (_QWORD *)swift_allocObject();
        v127[6] = v126;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C050);
        v128 = swift_allocObject();
        *(_QWORD *)(v128 + 16) = 0;
        if (v126 >> 62)
        {
          swift_bridgeObjectRetain_n();
          v129 = sub_1CB847044();
          swift_bridgeObjectRelease();
        }
        else
        {
          v129 = *(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
        }
        v130 = sub_1CB7D22AC();
        v131 = swift_allocObject();
        *(_QWORD *)(v131 + 16) = v129;
        v127[2] = v128;
        v127[3] = v130;
        v127[4] = v131;
        v127[5] = v130;
        v158 = v123;
        v133 = *(_QWORD *)(v123 + 16);
        v132 = *(_QWORD *)(v123 + 24);
        if (v133 >= v132 >> 1)
        {
          sub_1CB77652C(v132 > 1, v133 + 1, 1);
          v123 = v158;
        }
        ++v124;
        *(_QWORD *)(v123 + 16) = v133 + 1;
        *(_QWORD *)(v123 + 8 * v133 + 32) = v127;
        v20 = v125;
      }
      while (v122 != v124);
      swift_bridgeObjectRelease();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F5C8);
    v134 = (_QWORD *)swift_allocObject();
    v134[6] = v123;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C050);
    v135 = swift_allocObject();
    *(_QWORD *)(v135 + 16) = 0;
    v136 = sub_1CB7D22AC();
    v137 = *(_QWORD *)(v123 + 16);
    v138 = swift_allocObject();
    *(_QWORD *)(v138 + 16) = v137;
    v134[2] = v135;
    v134[3] = v136;
    v134[4] = v138;
    v134[5] = v136;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v134;
  }
  v146 = xmmword_1CB84A330;
  v152 = v0;
  v141 = v13;
  v155 = v18;
  while (2)
  {
    v154 = v21;
    v149 = v20;
    v153 = v23;
    v24 = *(_QWORD *)(v23 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      v25 = sub_1CB847044();
      v26 = v156;
      if (!v25)
      {
LABEL_38:
        v64 = 1;
        goto LABEL_39;
      }
    }
    else
    {
      v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v26 = v156;
      if (!v25)
        goto LABEL_38;
    }
    v27 = 0;
    v28 = v24 & 0xC000000000000001;
    while (1)
    {
      if (v28)
      {
        swift_bridgeObjectRetain();
        v29 = (id)MEMORY[0x1D179F320](v27, v24);
      }
      else
      {
        v30 = *(void **)(v24 + 8 * v27 + 32);
        swift_bridgeObjectRetain();
        v29 = v30;
      }
      v31 = v29;
      if (objc_msgSend(v29, sel_anyEventType) == 6)
      {
        v32 = objc_msgSend(v31, sel_payload);
        if (v32)
        {
          v33 = v32;
          v34 = sub_1CB845F94();
          v36 = v35;

          v37 = (void *)sub_1CB845F88();
          v38 = v36;
          v26 = v156;
          sub_1CB779034(v34, v38);
        }
        else
        {
          v37 = 0;
        }
        v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A460]), sel_initWithData_, v37);

        v39 = objc_msgSend(v40, sel_event);
        v18 = v155;
        if (!v39)
          goto LABEL_32;
      }
      else
      {
        v39 = v31;
      }
      v41 = sub_1CB792C48();
      objc_msgSend(v39, sel_anyEventType);
      v42 = sub_1CB846D80();
      if (!v42 || v41 != v42)
        goto LABEL_31;
      v43 = objc_msgSend(v39, sel_payload);
      if (v43)
      {
        v44 = sub_1CB845F94();
        v46 = v45;

        v47 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        v43 = (id)sub_1CB845F88();
        v48 = v44;
        v26 = v156;
        v49 = v46;
        v0 = v152;
        sub_1CB779034(v48, v49);
      }
      else
      {
        v47 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      }
      v50 = objc_msgSend(v47, sel_initWithData_, v43);

      if (!v50)
        goto LABEL_30;
      objc_opt_self();
      v51 = (void *)swift_dynamicCastObjCClass();

      if (!v51)
      {
        v39 = v50;
LABEL_30:
        v18 = v155;
LABEL_31:

LABEL_32:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v18, 1, 1, v0);
        swift_bridgeObjectRelease();
        v50 = v31;
        goto LABEL_33;
      }
      v52 = objc_msgSend(v51, sel_clientConversationTrace);
      if (v52
        && (v53 = v52,
            v54 = objc_msgSend(v52, sel_previousTurnID),
            v53,
            v54))
      {
        v55 = sub_1CB845F94();
        v57 = v56;

        v58 = v155;
        sub_1CB7B601C(v55, v57);
        v59 = v55;
        v18 = v58;
        v60 = v57;
        v0 = v152;
        sub_1CB779034(v59, v60);
      }
      else
      {
        v18 = v155;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v155, 1, 1, v0);
      }
      swift_bridgeObjectRelease();

LABEL_33:
      v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
      v62 = v61(v18, 1, v0);
      sub_1CB778FF4((uint64_t)v18);
      if (v62 != 1)
        break;
      v63 = v27 + 1;
      if (__OFADD__(v27, 1))
      {
        __break(1u);
        goto LABEL_100;
      }
      ++v27;
      if (v63 == v25)
        goto LABEL_38;
    }
    if (v25 == v27)
      goto LABEL_38;
    if (v28)
    {
      v96 = (id)MEMORY[0x1D179F320](v27, v24);
      goto LABEL_65;
    }
    if ((v27 & 0x8000000000000000) != 0)
      goto LABEL_105;
    if (v27 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_106;
    v96 = *(id *)(v24 + 8 * v27 + 32);
LABEL_65:
    v97 = v96;
    v98 = objc_msgSend(v96, sel_anyEventType);
    v99 = (uint64_t)v141;
    if (v98 == 6)
    {
      v100 = objc_msgSend(v97, sel_payload);
      if (v100)
      {
        v101 = sub_1CB845F94();
        v103 = v102;

        v100 = (id)sub_1CB845F88();
        sub_1CB779034(v101, v103);
      }
      v104 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A460]), sel_initWithData_, v100);

      v105 = objc_msgSend(v104, sel_event);
      if (!v105)
      {
LABEL_75:
        v113 = (uint64_t)v144;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v144, 1, 1, v0);
        goto LABEL_78;
      }
    }
    else
    {
      v105 = v97;
    }
    v106 = (void *)sub_1CB7EF290();

    if (!v106)
      goto LABEL_75;
    v107 = objc_msgSend(v106, sel_clientConversationTrace);
    if (v107
      && (v108 = v107,
          v109 = objc_msgSend(v107, sel_previousTurnID),
          v108,
          v109))
    {
      v110 = sub_1CB845F94();
      v112 = v111;

      v113 = (uint64_t)v144;
      sub_1CB7B601C(v110, v112);
      v114 = v112;
      v0 = v152;
      sub_1CB779034(v110, v114);
    }
    else
    {
      v113 = (uint64_t)v144;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v144, 1, 1, v0);
    }

    v97 = v106;
LABEL_78:

    sub_1CB7BDB4C(v113, v99);
    if (v61((char *)v99, 1, v0) == 1)
      goto LABEL_107;
    v115 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 32);
    v116 = v143;
    v115(v143, v99, v0);
    sub_1CB778FF4(v113);
    v115(v150, (uint64_t)v116, v0);
    v64 = 0;
LABEL_39:
    v20 = v149;
    v65 = (uint64_t)v150;
    v66 = v154;
    v67 = v156;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v156 + 56))(v150, v64, 1, v0);
    swift_bridgeObjectRelease();
    v68 = v65;
    v69 = v147;
    sub_1CB7BDB4C(v68, v147);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v69, 1, v0) == 1)
    {
      sub_1CB778FF4(v69);
      goto LABEL_52;
    }
    v70 = (uint64_t)v145;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v145, v69, v0);
    if (!v66[2] || (v71 = sub_1CB779AD8(v70), (v72 & 1) == 0))
    {
      v67 = v156;
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v70, v0);
LABEL_52:
      v80 = v0;
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
      v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = v146;
      v82 = v153;
      *(_QWORD *)(v81 + 32) = v153;
      v158 = v81;
      sub_1CB846A74();
      v83 = v158;
      v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16);
      v85 = v151;
      v84(v151, v82 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v80);
      v86 = v20[2];
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v158 = (uint64_t)v66;
      v89 = sub_1CB779AD8(v85);
      v90 = v66[2];
      v91 = (v88 & 1) == 0;
      v92 = v90 + v91;
      if (__OFADD__(v90, v91))
      {
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
      v93 = v88;
      if (v66[3] < v92)
      {
        sub_1CB77C114(v92, isUniquelyReferenced_nonNull_native);
        v94 = sub_1CB779AD8(v151);
        if ((v93 & 1) != (v95 & 1))
          goto LABEL_108;
        v89 = v94;
        v21 = (_QWORD *)v158;
        if ((v93 & 1) == 0)
          goto LABEL_83;
LABEL_59:
        *(_QWORD *)(v21[7] + 8 * v89) = v86;
        goto LABEL_85;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v21 = (_QWORD *)v158;
        if ((v88 & 1) != 0)
          goto LABEL_59;
      }
      else
      {
        sub_1CB77F3B4();
        v21 = (_QWORD *)v158;
        if ((v93 & 1) != 0)
          goto LABEL_59;
      }
LABEL_83:
      v21[(v89 >> 6) + 8] |= 1 << v89;
      v84(v21[6] + *(_QWORD *)(v156 + 72) * v89, v151, v152);
      *(_QWORD *)(v21[7] + 8 * v89) = v86;
      v117 = v21[2];
      v118 = __OFADD__(v117, 1);
      v119 = v117 + 1;
      if (v118)
        goto LABEL_101;
      v21[2] = v119;
LABEL_85:
      swift_bridgeObjectRelease();
      v0 = v152;
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v151, v152);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1CB790218(0, v20[2] + 1, 1, v20);
      v121 = v20[2];
      v120 = v20[3];
      if (v121 >= v120 >> 1)
        v20 = sub_1CB790218((_QWORD *)(v120 > 1), v121 + 1, 1, v20);
      v20[2] = v121 + 1;
      v20[v121 + 4] = v83;
      swift_release();
LABEL_4:
      sub_1CB778FF4((uint64_t)v150);
      sub_1CB84708C();
      v23 = v158;
      v18 = v155;
      if (!v158)
        goto LABEL_89;
      continue;
    }
    break;
  }
  v73 = *(_QWORD *)(v66[7] + 8 * v71);
  if ((v73 & 0x8000000000000000) != 0)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v73 >= v20[2])
  {
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  v158 = v20[v73 + 4];
  swift_bridgeObjectRetain();
  v74 = swift_retain();
  MEMORY[0x1D179EDF8](v74);
  if (*(_QWORD *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1CB846AA4();
  sub_1CB846AD4();
  sub_1CB846A74();
  v75 = v158;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_1CB7FAFD0(v20);
  if (v73 < v20[2])
  {
    v20[v73 + 4] = v75;
    swift_bridgeObjectRelease();
    v76 = v156;
    v77 = (uint64_t)v142;
    (*(void (**)(char *, uint64_t, uint64_t))(v156 + 16))(v142, v153 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v0);
    v78 = swift_isUniquelyReferenced_nonNull_native();
    v157 = v66;
    sub_1CB82EB88(v73, v77, v78);
    v21 = v157;
    swift_bridgeObjectRelease();
    v79 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
    v79(v77, v0);
    swift_release();
    v79(v70, v0);
    goto LABEL_4;
  }
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  result = sub_1CB847290();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for Conversation()
{
  return &type metadata for Conversation;
}

ValueMetadata *type metadata accessor for ConversationTracing()
{
  return &type metadata for ConversationTracing;
}

uint64_t initializeWithCopy for MigrationStep(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for MigrationStep(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for MigrationStep(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  *(_OWORD *)(a1 + 16) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for MigrationStep(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MigrationStep(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MigrationStep()
{
  return &type metadata for MigrationStep;
}

uint64_t sub_1CB7D323C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  sub_1CB7BE770();
  if ((sub_1CB846E10() & 1) == 0)
    return 0;
  v6 = sub_1CB846E10() & (v3 == v5);
  if (v2 == v4)
    return v6;
  else
    return 0;
}

ValueMetadata *type metadata accessor for PLError()
{
  return &type metadata for PLError;
}

uint64_t sub_1CB7D32D8()
{
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  return 0x726F7272454C5028;
}

uint64_t sub_1CB7D3344()
{
  uint64_t v0;

  sub_1CB7D3480(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnyBiomeEvent()
{
  return objc_opt_self();
}

uint64_t sub_1CB7D338C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1CB7D3394(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CB7D33C4 + 4 * byte_1CB84C940[a1]))(0x6C616D726F6ELL, 0xE600000000000000);
}

unint64_t sub_1CB7D33C4()
{
  return 0xD000000000000014;
}

uint64_t type metadata accessor for BiomeEventFilteringUtils()
{
  return objc_opt_self();
}

uint64_t initializeBufferWithCopyOfBuffer for BiomeEventValue(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1CB7D345C(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1CB7D345C(id result, unsigned __int8 a2)
{
  if (a2 <= 2u)
    return result;
  return result;
}

void destroy for BiomeEventValue(uint64_t a1)
{
  sub_1CB7D3480(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1CB7D3480(id a1, unsigned __int8 a2)
{
  if (a2 <= 2u)

}

uint64_t assignWithCopy for BiomeEventValue(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1CB7D345C(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1CB7D3480(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for BiomeEventValue(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1CB7D3480(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for BiomeEventValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BiomeEventValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CB7D35C0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1CB7D35C8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BiomeEventValue()
{
  return &type metadata for BiomeEventValue;
}

uint64_t sub_1CB7D35E0(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t result;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v2 = objc_msgSend(a1, sel_intentName);
  v3 = sub_1CB8468A0();
  v5 = v4;

  sub_1CB777FA8(0, &qword_1EF99F728);
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_typeName);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v7 = v6;
  v8 = sub_1CB8468A0();
  v10 = v9;

  if (v3 == v8 && v5 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v12 & 1) == 0)
      return result;
  }
  v14 = objc_msgSend(a1, sel_slotValue);
  v15 = sub_1CB8468A0();
  v17 = v16;

  if (v15 == 0x746361746E6F63 && v17 == 0xE700000000000000)
    goto LABEL_12;
  v18 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    return 1;
  v19 = objc_msgSend(a1, sel_slotValue);
  v20 = sub_1CB8468A0();
  v22 = v21;

  if (v20 == 0x73746361746E6F63 && v22 == 0xE800000000000000)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 1;
  }
  v23 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  return v23 & 1;
}

uint64_t sub_1CB7D3800(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t result;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v2 = objc_msgSend(a1, sel_intentName);
  v3 = sub_1CB8468A0();
  v5 = v4;

  sub_1CB777FA8(0, &qword_1EF99F720);
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_typeName);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v7 = v6;
  v8 = sub_1CB8468A0();
  v10 = v9;

  if (v3 == v8 && v5 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v12 & 1) == 0)
      return result;
  }
  v14 = objc_msgSend(a1, sel_slotValue);
  v15 = sub_1CB8468A0();
  v17 = v16;

  if (v15 == 0x6E65697069636572 && v17 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v18 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    return v18 & 1;
  }
}

uint64_t sub_1CB7D399C()
{
  unint64_t v0;

  v0 = sub_1CB8470B0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x10)
    return 16;
  else
    return v0;
}

uint64_t sub_1CB7D39E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1CB7D39F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1CB7D39F8()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F798);
  v1 = sub_1CB8468DC();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1CB7D3B28(void **a1, void **a2)
{
  return sub_1CB7D7F08(*a1, *a2);
}

uint64_t sub_1CB7D3B34()
{
  return sub_1CB7D39F8();
}

uint64_t sub_1CB7D3B3C()
{
  sub_1CB8472E4();
  sub_1CB8472F0();
  return sub_1CB847314();
}

uint64_t sub_1CB7D3B80()
{
  return sub_1CB8472F0();
}

uint64_t sub_1CB7D3BAC()
{
  sub_1CB8472E4();
  sub_1CB8472F0();
  return sub_1CB847314();
}

_QWORD *sub_1CB7D3BEC@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;

  if (*result >= 4uLL)
    v2 = 3;
  else
    v2 = 0x2010003u >> (8 * *result);
  *a2 = v2;
  return result;
}

void sub_1CB7D3C14(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

uint64_t sub_1CB7D3C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v7;
  void (*v8)(_QWORD *@<X8>);
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t result;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  __int128 v49;
  uint64_t v50;
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;

  v3[6] = 0;
  v7 = (_QWORD *)sub_1CB78B3B8(MEMORY[0x1E0DEE9D8]);
  v46 = *(_QWORD *)(a3 + 16);
  if (v46)
  {
    v42 = a2;
    v43 = v3;
    v45 = a3 + 32;
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = 0;
    v44 = a3;
    while (v9 < *(_QWORD *)(a3 + 16))
    {
      v47 = v9;
      sub_1CB79CBA8(v45 + 40 * v9, (uint64_t)v51);
      v10 = v52;
      v11 = v53;
      __swift_project_boxed_opaque_existential_1(v51, v52);
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
      v13 = *(_QWORD *)(v12 + 16);
      if (v13)
      {
        v14 = (unsigned __int8 *)(v12 + 32);
        while (1)
        {
          v16 = *v14++;
          v15 = v16;
          sub_1CB79CBA8((uint64_t)v51, (uint64_t)&v49);
          sub_1CB7AEA3C((uint64_t)v8);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v48 = v7;
          v19 = sub_1CB779D2C(v16);
          v20 = v7[2];
          v21 = (v18 & 1) == 0;
          v22 = v20 + v21;
          if (__OFADD__(v20, v21))
            break;
          v23 = v18;
          if (v7[3] >= v22)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1CB77F5D8();
          }
          else
          {
            sub_1CB77C4A4(v22, isUniquelyReferenced_nonNull_native);
            v24 = sub_1CB779D2C(v15);
            if ((v23 & 1) != (v25 & 1))
              goto LABEL_36;
            v19 = v24;
          }
          v7 = v48;
          swift_bridgeObjectRelease();
          if ((v23 & 1) != 0)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            v7[(v19 >> 6) + 8] |= 1 << v19;
            *(_BYTE *)(v7[6] + v19) = v15;
            *(_QWORD *)(v7[7] + 8 * v19) = MEMORY[0x1E0DEE9D8];
            v26 = v7[2];
            v27 = v26 + 1;
            v28 = __OFADD__(v26, 1);
            swift_bridgeObjectRetain();
            if (v28)
              goto LABEL_34;
            v7[2] = v27;
          }
          v29 = v7[7];
          swift_bridgeObjectRelease();
          v30 = *(_QWORD **)(v29 + 8 * v19);
          v31 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v29 + 8 * v19) = v30;
          if ((v31 & 1) == 0)
          {
            v30 = sub_1CB790344(0, v30[2] + 1, 1, v30);
            *(_QWORD *)(v29 + 8 * v19) = v30;
          }
          v33 = v30[2];
          v32 = v30[3];
          if (v33 >= v32 >> 1)
          {
            v30 = sub_1CB790344((_QWORD *)(v32 > 1), v33 + 1, 1, v30);
            *(_QWORD *)(v29 + 8 * v19) = v30;
          }
          v30[2] = v33 + 1;
          sub_1CB7780BC(&v49, (uint64_t)&v30[5 * v33 + 4]);
          v8 = sub_1CB7CB690;
          if (!--v13)
            goto LABEL_26;
        }
        __break(1u);
LABEL_34:
        __break(1u);
        break;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      if (qword_1ED88AD88 != -1)
        swift_once();
      v34 = sub_1CB8466D8();
      __swift_project_value_buffer(v34, (uint64_t)qword_1ED88A8D0);
      sub_1CB79CBA8((uint64_t)v51, (uint64_t)&v49);
      v35 = sub_1CB8466C0();
      v36 = sub_1CB846C84();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = swift_slowAlloc();
        v38 = swift_slowAlloc();
        v48 = (_QWORD *)v38;
        *(_DWORD *)v37 = 136315138;
        __swift_project_boxed_opaque_existential_1(&v49, v50);
        swift_getDynamicType();
        v39 = sub_1CB8473A4();
        *(_QWORD *)(v37 + 4) = sub_1CB775A54(v39, v40, (uint64_t *)&v48);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
        _os_log_impl(&dword_1CB771000, v35, v36, "BiomeSiriEventScenarioProcessor Adding a filter: %s ", (uint8_t *)v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v38, -1, -1);
        MEMORY[0x1D179FE84](v37, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
      }

      a3 = v44;
      v9 = v47 + 1;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
      if (v47 + 1 == v46)
      {
        swift_bridgeObjectRelease();
        a2 = v42;
        v3 = v43;
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_36:
    result = sub_1CB847290();
    __break(1u);
  }
  else
  {
    v8 = 0;
LABEL_32:
    v3[2] = a1;
    v3[3] = a3;
    v3[4] = v7;
    v3[5] = a2;
    sub_1CB7AEA3C((uint64_t)v8);
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_1CB7D4094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v4 = sub_1CB846744();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1CB84678C();
  v8 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v11;
  v12[3] = a1;
  v12[4] = a2;
  aBlock[4] = sub_1CB7D8360;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB8214F0;
  aBlock[3] = &block_descriptor_60;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1CB846768();
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E4A0, v5, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
  sub_1CB7C6674((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8);
  sub_1CB846EC4();
  MEMORY[0x1D179F0D4](0, v10, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  swift_release();
  return swift_release();
}

void sub_1CB7D42C0(unint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t Strong;
  _QWORD *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint8_t *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __int128 *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  unint64_t v32;
  unsigned __int8 v33;
  char v34;
  NSObject *v35;
  os_log_type_t v36;
  unint64_t v37;
  uint64_t *v38;
  _QWORD *v39;
  uint64_t v40;
  __int128 *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t (*)(void *, char), uint64_t, uint64_t, uint64_t);
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t *v57;
  _QWORD *v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  __int128 v64[2];
  unsigned __int8 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  unsigned __int8 v69[8];
  _QWORD v70[5];

  if (qword_1ED88AD88 == -1)
    goto LABEL_2;
  while (1)
  {
    swift_once();
LABEL_2:
    v6 = sub_1CB8466D8();
    v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED88A8D0);
    v8 = sub_1CB8466C0();
    v9 = sub_1CB846C84();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1CB771000, v8, v9, "BiomeSiriEventScenarioProcessor received a subscribe request", v10, 2u);
      MEMORY[0x1D179FE84](v10, -1, -1);
    }

    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (!Strong)
    {
      v14 = sub_1CB8466C0();
      v18 = sub_1CB846C84();
      if (os_log_type_enabled(v14, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_1CB771000, v14, v18, "Skipping BiomeSiriEventScenarioProcessor subscription, the scenario processor was deallocated", v19, 2u);
        MEMORY[0x1D179FE84](v19, -1, -1);
      }
      goto LABEL_10;
    }
    v12 = (_QWORD *)Strong;
    v13 = *(_QWORD *)(Strong + 48);
    v14 = sub_1CB8466C0();
    v15 = sub_1CB846C84();
    v16 = os_log_type_enabled(v14, v15);
    if (v13)
    {
      if (!v16)
      {

        swift_release();
        return;
      }
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1CB771000, v14, v15, "Skipping BiomeSiriEventScenarioProcessor subscription, the scenario processor is already subscribed", v17, 2u);
      MEMORY[0x1D179FE84](v17, -1, -1);
      swift_release();
LABEL_10:

      return;
    }
    v55 = a1;
    v56 = a2;
    v57 = a3;
    if (v16)
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1CB771000, v14, v15, "BiomeSiriEventScenarioProcessor is starting to subscribe to Biome streams", v20, 2u);
      MEMORY[0x1D179FE84](v20, -1, -1);
    }

    v21 = v12[5];
    v22 = *(_QWORD *)(v21 + 64);
    v59 = v21 + 64;
    v23 = 1 << *(_BYTE *)(v21 + 32);
    v24 = -1;
    if (v23 < 64)
      v24 = ~(-1 << v23);
    a1 = v24 & v22;
    v25 = (unint64_t)(v23 + 63) >> 6;
    v26 = (__int128 *)v70;
    v53 = v25 - 1;
    a2 = 0;
    v60 = v25;
    v61 = swift_bridgeObjectRetain();
    v54 = v25 - 5;
    v58 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    a3 = (uint64_t *)&unk_1ED88AB30;
    if (a1)
      break;
LABEL_20:
    v30 = a2 + 1;
    if (!__OFADD__(a2, 1))
    {
      if (v30 >= v60)
      {
        v32 = a2;
      }
      else
      {
        v31 = *(_QWORD *)(v59 + 8 * v30);
        if (v31)
        {
LABEL_23:
          a1 = (v31 - 1) & v31;
          v28 = __clz(__rbit64(v31)) + (v30 << 6);
          a2 = v30;
          goto LABEL_19;
        }
        v32 = a2 + 1;
        if ((uint64_t)(a2 + 2) < v60)
        {
          v31 = *(_QWORD *)(v59 + 8 * (a2 + 2));
          if (v31)
          {
            v30 = a2 + 2;
            goto LABEL_23;
          }
          v32 = a2 + 2;
          if ((uint64_t)(a2 + 3) < v60)
          {
            v31 = *(_QWORD *)(v59 + 8 * (a2 + 3));
            if (v31)
            {
              v30 = a2 + 3;
              goto LABEL_23;
            }
            v30 = a2 + 4;
            v32 = a2 + 3;
            if ((uint64_t)(a2 + 4) < v60)
            {
              v31 = *(_QWORD *)(v59 + 8 * v30);
              if (v31)
                goto LABEL_23;
              while (v54 != a2)
              {
                v31 = *(_QWORD *)(v61 + 104 + 8 * a2++);
                if (v31)
                {
                  v30 = a2 + 4;
                  goto LABEL_23;
                }
              }
              v32 = v53;
            }
          }
        }
      }
      a1 = 0;
      v67 = 0u;
      v68 = 0u;
      a2 = v32;
      v66 = 0u;
      goto LABEL_26;
    }
    __break(1u);
  }
  while (1)
  {
    v27 = __clz(__rbit64(a1));
    a1 &= a1 - 1;
    v28 = v27 | (a2 << 6);
LABEL_19:
    v29 = *(_QWORD *)(v61 + 56);
    LOBYTE(v66) = *(_BYTE *)(*(_QWORD *)(v61 + 48) + v28);
    sub_1CB79CBA8(v29 + 40 * v28, (uint64_t)&v66 + 8);
LABEL_26:
    sub_1CB7D836C((uint64_t)&v66, (uint64_t)v69, a3);
    if (!v70[3])
      break;
    v33 = v69[0];
    sub_1CB7780BC(v26, (uint64_t)&v66);
    if (*(_QWORD *)(v12[4] + 16) && (sub_1CB779D2C(v33), (v34 & 1) != 0))
    {
      sub_1CB79CBA8((uint64_t)&v66, (uint64_t)v64);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v58 = sub_1CB790484(0, v58[2] + 1, 1, v58);
      v48 = v58[2];
      v47 = v58[3];
      if (v48 >= v47 >> 1)
        v58 = sub_1CB790484((_QWORD *)(v47 > 1), v48 + 1, 1, v58);
      v58[2] = v48 + 1;
      sub_1CB7780BC(v64, (uint64_t)&v58[5 * v48 + 4]);
      v49 = v68;
      v63 = *((_QWORD *)&v67 + 1);
      __swift_project_boxed_opaque_existential_1(&v66, *((uint64_t *)&v67 + 1));
      v50 = swift_allocObject();
      *(_QWORD *)(v50 + 16) = v55;
      *(_BYTE *)(v50 + 24) = v33;
      *(_QWORD *)(v50 + 32) = v56;
      *(_QWORD *)(v50 + 40) = v57;
      v51 = v49;
      v52 = *(void (**)(uint64_t (*)(void *, char), uint64_t, uint64_t, uint64_t))(v49 + 16);
      swift_retain();
      swift_retain();
      v52(sub_1CB7D83DC, v50, v63, v51);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v66);
      if (!a1)
        goto LABEL_20;
    }
    else
    {
      v35 = sub_1CB8466C0();
      v36 = sub_1CB846C84();
      if (os_log_type_enabled(v35, v36))
      {
        v62 = a1;
        v37 = a2;
        v38 = a3;
        v39 = v12;
        v40 = v7;
        v41 = v26;
        v42 = swift_slowAlloc();
        v43 = swift_slowAlloc();
        *(_QWORD *)&v64[0] = v43;
        *(_DWORD *)v42 = 136315138;
        v65 = v33;
        v44 = sub_1CB8468F4();
        *(_QWORD *)(v42 + 4) = sub_1CB775A54(v44, v45, (uint64_t *)v64);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CB771000, v35, v36, "Skipping starting a Biome subscription for stream %s, no filters to process", (uint8_t *)v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v43, -1, -1);
        v46 = v42;
        v26 = v41;
        v7 = v40;
        v12 = v39;
        a3 = v38;
        a2 = v37;
        a1 = v62;
        MEMORY[0x1D179FE84](v46, -1, -1);
      }

      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v66);
      if (!a1)
        goto LABEL_20;
    }
  }
  swift_release();
  v12[6] = v58;
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1CB7D4998(void *a1, char a2, uint64_t a3, int a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint8_t *v15;
  NSObject *v16;
  os_signpost_type_t v17;
  os_signpost_id_t v18;
  os_signpost_type_t v19;
  os_signpost_id_t v20;
  uint64_t v22;
  void *v23;
  int v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v25 = a5;
  v26 = a6;
  v24 = a4;
  v22 = a3;
  v23 = a1;
  v7 = sub_1CB846654();
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CB846678();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED88A290 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED8901C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  sub_1CB846648();
  v15 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v15 = 0;
  v16 = sub_1CB84666C();
  v17 = sub_1CB846D68();
  v18 = sub_1CB84663C();
  _os_signpost_emit_with_name_impl(&dword_1CB771000, v16, v17, v18, "processBiomeEventFilters", "", v15, 2u);
  sub_1CB7D4B98(v22, v24, v23, a2 & 1, v25);
  v19 = sub_1CB846D5C();
  v20 = sub_1CB84663C();
  _os_signpost_emit_with_name_impl(&dword_1CB771000, v16, v19, v20, "processBiomeEventFilters", "", v15, 2u);

  MEMORY[0x1D179FE84](v15, -1, -1);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1CB7D4B98(uint64_t a1, unsigned __int8 a2, void *a3, char a4, void (*a5)(uint64_t))
{
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    if (qword_1ED88AD88 != -1)
      swift_once();
    v11 = sub_1CB8466D8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED88A8D0);
    v12 = sub_1CB8466C0();
    v13 = sub_1CB846C90();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v26 = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = sub_1CB8468F4();
      sub_1CB775A54(v16, v17, &v26);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v12, v13, "Subscriber for %s is dropping a Biome event: the scenario processor does not exist", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v15, -1, -1);
      MEMORY[0x1D179FE84](v14, -1, -1);
    }

    goto LABEL_14;
  }
  if (!*(_QWORD *)(Strong + 48))
  {
    if (qword_1ED88AD88 != -1)
      swift_once();
    v18 = sub_1CB8466D8();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED88A8D0);
    v19 = sub_1CB8466C0();
    v20 = sub_1CB846C90();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v26 = v22;
      *(_DWORD *)v21 = 136315138;
      v23 = sub_1CB8468F4();
      sub_1CB775A54(v23, v24, &v26);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v19, v20, "Subscriber for %s is dropping a Biome event: the scenario processor is not subscribed", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v22, -1, -1);
      MEMORY[0x1D179FE84](v21, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
LABEL_14:
    v10 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v10 = sub_1CB7D5324(a3, a4 & 1, a2);
  swift_release();
LABEL_15:
  a5(v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7D4F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1CB846744();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CB84678C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)(v1 + 16);
  aBlock[4] = sub_1CB7D8308;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CB8214F0;
  aBlock[3] = &block_descriptor_51;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1CB846768();
  v13[1] = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E4A0, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E4A8);
  sub_1CB7C6674((unint64_t *)&qword_1ED88E4B0, &qword_1ED88E4A8);
  sub_1CB846EC4();
  MEMORY[0x1D179F0D4](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_1CB7D50F0(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  if (qword_1ED88AD88 != -1)
    swift_once();
  v2 = sub_1CB8466D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED88A8D0);
  v3 = sub_1CB8466C0();
  v4 = sub_1CB846C84();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1CB771000, v3, v4, "BiomeSiriEventScenarioProcessor received an unsubscribe request", v5, 2u);
    MEMORY[0x1D179FE84](v5, -1, -1);
  }

  v6 = *(_QWORD *)(a1 + 48);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CB8466C0();
    v8 = sub_1CB846C84();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1CB771000, v7, v8, "BiomeSiriEventScenarioProcessor is starting to unsubscribe from Biome streams", v9, 2u);
      MEMORY[0x1D179FE84](v9, -1, -1);
    }

    v10 = *(_QWORD *)(v6 + 16);
    if (v10)
    {
      v11 = v6 + 32;
      do
      {
        sub_1CB79CBA8(v11, (uint64_t)v20);
        v12 = v21;
        v13 = v22;
        __swift_project_boxed_opaque_existential_1(v20, v21);
        (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
        v11 += 40;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(a1 + 24);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = v14 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_1CB79CBA8(v16, (uint64_t)v20);
        v17 = v21;
        v18 = v22;
        __swift_project_boxed_opaque_existential_1(v20, v21);
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
        v16 += 40;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
  }
  *(_QWORD *)(a1 + 48) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7D5324(id a1, char a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;

  if ((a2 & 1) != 0)
  {
    v6 = *(_QWORD *)(v3 + 32);
    if (*(_QWORD *)(v6 + 16) && (v7 = sub_1CB779D2C(a3), (v8 & 1) != 0))
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
      swift_bridgeObjectRetain();
    }
    else
    {
      v9 = MEMORY[0x1E0DEE9D8];
    }
    sub_1CB7D82D0(a1, 1);
    v23 = sub_1CB7D81D8(v9, (uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = a1;
    if (qword_1ED88AD88 != -1)
      swift_once();
    v11 = sub_1CB8466D8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED88A8D0);
    v12 = a1;
    v13 = a1;
    v14 = sub_1CB8466C0();
    v15 = sub_1CB846C84();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v25 = v17;
      *(_DWORD *)v16 = 136315394;
      v18 = sub_1CB8468F4();
      sub_1CB775A54(v18, v19, &v25);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      v20 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99E380);
      v21 = sub_1CB8468DC();
      sub_1CB775A54(v21, v22, &v25);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      sub_1CB7D82DC(a1, 0);
      sub_1CB7D82DC(a1, 0);
      _os_log_impl(&dword_1CB771000, v14, v15, "Subscriber for %s reached completion, error=%s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v17, -1, -1);
      MEMORY[0x1D179FE84](v16, -1, -1);
    }
    else
    {
      sub_1CB7D82DC(a1, 0);
      sub_1CB7D82DC(a1, 0);
    }

    v23 = MEMORY[0x1E0DEE9D8];
  }
  sub_1CB7D82DC(a1, a2 & 1);
  return v23;
}

void sub_1CB7D55D4(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19[5];
  _BYTE v20[40];
  uint64_t v21;

  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, v6, v7);
  if (v8)
  {
    if (qword_1ED88AD88 != -1)
      swift_once();
    v9 = sub_1CB8466D8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED88A8D0);
    sub_1CB79CBA8((uint64_t)a1, (uint64_t)v20);
    sub_1CB7D82E8(v8);
    sub_1CB7D82E8(v8);
    v10 = sub_1CB8466C0();
    v11 = sub_1CB846C84();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v21 = v18;
      *(_DWORD *)v12 = 136315394;
      sub_1CB79CBA8((uint64_t)v20, (uint64_t)v19);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A858);
      v13 = sub_1CB8468DC();
      v19[0] = sub_1CB775A54(v13, v14, &v21);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      *(_WORD *)(v12 + 12) = 2080;
      sub_1CB7D82E8(v8);
      v15 = sub_1CB7D39F8();
      v17 = v16;
      sub_1CB7D82F8(v8);
      v19[0] = sub_1CB775A54(v15, v17, &v21);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      sub_1CB7D82F8(v8);
      sub_1CB7D82F8(v8);
      _os_log_impl(&dword_1CB771000, v10, v11, "%s detected the Biome scenario %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v18, -1, -1);
      MEMORY[0x1D179FE84](v12, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      sub_1CB7D82F8(v8);
      sub_1CB7D82F8(v8);
    }

  }
  *a3 = v8;
}

uint64_t sub_1CB7D5860()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BiomeSiriEventScenarioProcessor()
{
  return objc_opt_self();
}

unint64_t sub_1CB7D58C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = sub_1CB7D58E8();
  qword_1EF99F730 = result;
  *(_QWORD *)algn_1EF99F738 = v1;
  qword_1EF99F740 = v2;
  return result;
}

unint64_t sub_1CB7D58E8()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;

  sub_1CB777FA8(0, &qword_1EF99F728);
  v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_typeName);
  if (v0)
  {
    v1 = v0;
    sub_1CB777FA8(0, &qword_1EF99F720);
    v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_typeName);
    if (v2)
    {
      v3 = v2;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF99C638);
      v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1CB848A60;
      v5 = sub_1CB777FA8(0, (unint64_t *)&unk_1ED88DE50);
      *(_QWORD *)(v4 + 32) = v1;
      *(_QWORD *)(v4 + 88) = v5;
      *(_QWORD *)(v4 + 56) = v5;
      *(_QWORD *)(v4 + 64) = v3;
      v6 = objc_allocWithZone(MEMORY[0x1E0C99E60]);
      v7 = sub_1CB846A44();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_initWithArray_, v7);
      goto LABEL_9;
    }

  }
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E60]), sel_init);
  if (qword_1ED88AD88 != -1)
    swift_once();
  v8 = sub_1CB8466D8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED88A8D0);
  v7 = sub_1CB8466C0();
  v9 = sub_1CB846C90();
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1CB771000, v7, v9, "Cannot retrieve intent type names for INStartCallIntent / INSendMessageIntent", v10, 2u);
    MEMORY[0x1D179FE84](v10, -1, -1);
  }
LABEL_9:

  return 0xD000000000000014;
}

unint64_t sub_1CB7D5AF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = sub_1CB7D5B18();
  qword_1EF99F748 = result;
  unk_1EF99F750 = v1;
  qword_1EF99F758 = v2;
  return result;
}

unint64_t sub_1CB7D5B18()
{
  id v0;
  void *v1;
  unint64_t v3;

  v3 = MEMORY[0x1E0DEE9D8];
  sub_1CB846FCC();
  _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  sub_1CB846FB4();
  sub_1CB846FD8();
  sub_1CB846FE4();
  sub_1CB846FC0();
  _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  sub_1CB846FB4();
  sub_1CB846FD8();
  sub_1CB846FE4();
  sub_1CB846FC0();
  _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  sub_1CB846FB4();
  sub_1CB846FD8();
  sub_1CB846FE4();
  sub_1CB846FC0();
  sub_1CB774F28(v3);
  swift_release();
  v0 = objc_allocWithZone(MEMORY[0x1E0C99E60]);
  v1 = (void *)sub_1CB846A44();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_initWithArray_, v1);

  return 0xD000000000000013;
}

unint64_t sub_1CB7D5DBC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = sub_1CB7D5DE0();
  qword_1EF99F760 = result;
  *(_QWORD *)algn_1EF99F768 = v1;
  qword_1EF99F770 = v2;
  return result;
}

unint64_t sub_1CB7D5DE0()
{
  id v0;
  void *v1;

  sub_1CB774F3C((uint64_t)&unk_1E868A6E8);
  v0 = objc_allocWithZone(MEMORY[0x1E0C99E60]);
  v1 = (void *)sub_1CB846A44();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_initWithArray_, v1);

  return 0xD000000000000012;
}

void sub_1CB7D5E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void (*v29)(uint64_t);
  uint64_t v30;

  v3 = v2;
  if (qword_1ED88AD88 != -1)
    swift_once();
  v6 = sub_1CB8466D8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED88A8D0);
  v7 = sub_1CB8466C0();
  v8 = sub_1CB846C84();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1CB771000, v7, v8, "BiomeSiriExecutionStreamSubscriber subscribing", v9, 2u);
    MEMORY[0x1D179FE84](v9, -1, -1);
  }

  v10 = objc_msgSend((id)objc_opt_self(), sel_siriExecutionStream);
  v11 = objc_msgSend(v10, sel_publisher);

  if (qword_1EF99C3C0 != -1)
    swift_once();
  v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v13 = objc_msgSend(v11, sel_filterWithKeyPath_comparison_value_, v12, 3, qword_1EF99F740);

  if (qword_1EF99C3C8 != -1)
    swift_once();
  v14 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v15 = objc_msgSend(v13, sel_filterWithKeyPath_comparison_value_, v14, 3, qword_1EF99F758);

  if (qword_1EF99C3D0 != -1)
    swift_once();
  v16 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v17 = objc_msgSend(v15, sel_filterWithKeyPath_comparison_value_, v16, 3, qword_1EF99F770);

  v18 = objc_msgSend(v17, sel_subscribeOn_, *(_QWORD *)(v3 + 16));
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  v29 = (void (*)(uint64_t))sub_1CB7D8120;
  v30 = v19;
  v20 = MEMORY[0x1E0C809B0];
  v25 = MEMORY[0x1E0C809B0];
  v26 = 1107296256;
  v27 = sub_1CB783140;
  v28 = &block_descriptor_42;
  v21 = _Block_copy(&v25);
  swift_retain();
  swift_release();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  v29 = sub_1CB7D81B4;
  v30 = v22;
  v25 = v20;
  v26 = 1107296256;
  v27 = sub_1CB7D621C;
  v28 = &block_descriptor_48_0;
  v23 = _Block_copy(&v25);
  swift_retain();
  swift_release();
  v24 = objc_msgSend(v18, sel_sinkWithCompletion_receiveInput_, v21, v23);
  _Block_release(v23);
  _Block_release(v21);

}

uint64_t sub_1CB7D621C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_1CB7D6264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;

  v1 = v0;
  if (qword_1ED88AD88 != -1)
    swift_once();
  v2 = sub_1CB8466D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED88A8D0);
  v3 = sub_1CB8466C0();
  v4 = sub_1CB846C84();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1CB771000, v3, v4, "BiomeSiriExecutionStreamSubscriber unsubscribing", v5, 2u);
    MEMORY[0x1D179FE84](v5, -1, -1);
  }

  v6 = objc_msgSend((id)objc_opt_self(), sel_siriExecutionStream);
  v7 = objc_msgSend(v6, sel_publisher);

  v8 = objc_msgSend(v7, sel_subscribeOn_, *(_QWORD *)(v1 + 16));
  v17 = nullsub_1;
  v18 = 0;
  v9 = MEMORY[0x1E0C809B0];
  v13 = MEMORY[0x1E0C809B0];
  v14 = 1107296256;
  v15 = sub_1CB783140;
  v16 = &block_descriptor_33_0;
  v10 = _Block_copy(&v13);
  v17 = nullsub_1;
  v18 = 0;
  v13 = v9;
  v14 = 1107296256;
  v15 = sub_1CB7D621C;
  v16 = &block_descriptor_36;
  v11 = _Block_copy(&v13);
  v12 = objc_msgSend(v8, sel_sinkWithCompletion_receiveInput_, v10, v11);
  _Block_release(v11);
  _Block_release(v10);

  objc_msgSend(v12, sel_cancel);
}

uint64_t type metadata accessor for BiomeSiriExecutionStreamSubscriber()
{
  return objc_opt_self();
}

void sub_1CB7D648C(uint64_t a1, uint64_t a2)
{
  sub_1CB7D5E78(a1, a2);
}

void sub_1CB7D64AC()
{
  sub_1CB7D6264();
}

void sub_1CB7D64CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void (*v23)(uint64_t);
  uint64_t v24;

  v3 = v2;
  if (qword_1ED88AD88 != -1)
    swift_once();
  v6 = sub_1CB8466D8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED88A8D0);
  v7 = sub_1CB8466C0();
  v8 = sub_1CB846C84();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1CB771000, v7, v8, "BiomeSiriUIStreamSubscriber subscribing", v9, 2u);
    MEMORY[0x1D179FE84](v9, -1, -1);
  }

  v10 = objc_msgSend((id)objc_opt_self(), sel_siriUIStream);
  v11 = objc_msgSend(v10, sel_publisher);

  v12 = objc_msgSend(v11, sel_subscribeOn_, *(_QWORD *)(v3 + 16));
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v23 = (void (*)(uint64_t))sub_1CB7D8120;
  v24 = v13;
  v14 = MEMORY[0x1E0C809B0];
  v19 = MEMORY[0x1E0C809B0];
  v20 = 1107296256;
  v21 = sub_1CB783140;
  v22 = &block_descriptor_24;
  v15 = _Block_copy(&v19);
  swift_retain();
  swift_release();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  v23 = sub_1CB7D8148;
  v24 = v16;
  v19 = v14;
  v20 = 1107296256;
  v21 = sub_1CB7D621C;
  v22 = &block_descriptor_30;
  v17 = _Block_copy(&v19);
  swift_retain();
  swift_release();
  v18 = objc_msgSend(v12, sel_sinkWithCompletion_receiveInput_, v15, v17);
  _Block_release(v17);
  _Block_release(v15);

}

void sub_1CB7D672C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;

  v1 = v0;
  if (qword_1ED88AD88 != -1)
    swift_once();
  v2 = sub_1CB8466D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED88A8D0);
  v3 = sub_1CB8466C0();
  v4 = sub_1CB846C84();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1CB771000, v3, v4, "BiomeSiriUIStreamSubscriber unsubscribing", v5, 2u);
    MEMORY[0x1D179FE84](v5, -1, -1);
  }

  v6 = objc_msgSend((id)objc_opt_self(), sel_siriUIStream);
  v7 = objc_msgSend(v6, sel_publisher);

  v8 = objc_msgSend(v7, sel_subscribeOn_, *(_QWORD *)(v1 + 16));
  v17 = nullsub_1;
  v18 = 0;
  v9 = MEMORY[0x1E0C809B0];
  v13 = MEMORY[0x1E0C809B0];
  v14 = 1107296256;
  v15 = sub_1CB783140;
  v16 = &block_descriptor_15;
  v10 = _Block_copy(&v13);
  v17 = nullsub_1;
  v18 = 0;
  v13 = v9;
  v14 = 1107296256;
  v15 = sub_1CB7D621C;
  v16 = &block_descriptor_18;
  v11 = _Block_copy(&v13);
  v12 = objc_msgSend(v8, sel_sinkWithCompletion_receiveInput_, v10, v11);
  _Block_release(v11);
  _Block_release(v10);

  objc_msgSend(v12, sel_cancel);
}

uint64_t type metadata accessor for BiomeSiriUIStreamSubscriber()
{
  return objc_opt_self();
}

void sub_1CB7D6954(uint64_t a1, uint64_t a2)
{
  sub_1CB7D64CC(a1, a2);
}

void sub_1CB7D6974()
{
  sub_1CB7D672C();
}

uint64_t sub_1CB7D6994()
{
  uint64_t result;

  sub_1CB777FA8(0, (unint64_t *)&unk_1ED88DE50);
  result = sub_1CB846E1C();
  qword_1EF99F778 = result;
  return result;
}

void sub_1CB7D69E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void (*v25)(uint64_t);
  uint64_t v26;

  v3 = v2;
  if (qword_1ED88AD88 != -1)
    swift_once();
  v6 = sub_1CB8466D8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED88A8D0);
  v7 = sub_1CB8466C0();
  v8 = sub_1CB846C84();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1CB771000, v7, v8, "BiomeIntentStreamSubscriber subscribing", v9, 2u);
    MEMORY[0x1D179FE84](v9, -1, -1);
  }

  v10 = objc_msgSend((id)objc_opt_self(), sel_intent);
  v11 = objc_msgSend(v10, sel_publisher);

  v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  if (qword_1EF99C3D8 != -1)
    swift_once();
  v13 = objc_msgSend(v11, sel_filterWithKeyPath_comparison_value_, v12, 0, qword_1EF99F778);

  v14 = objc_msgSend(v13, sel_subscribeOn_, *(_QWORD *)(v3 + 16));
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v25 = (void (*)(uint64_t))sub_1CB7D8120;
  v26 = v15;
  v16 = MEMORY[0x1E0C809B0];
  v21 = MEMORY[0x1E0C809B0];
  v22 = 1107296256;
  v23 = sub_1CB783140;
  v24 = &block_descriptor_6;
  v17 = _Block_copy(&v21);
  swift_retain();
  swift_release();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  v25 = sub_1CB7D8124;
  v26 = v18;
  v21 = v16;
  v22 = 1107296256;
  v23 = sub_1CB7D621C;
  v24 = &block_descriptor_12;
  v19 = _Block_copy(&v21);
  swift_retain();
  swift_release();
  v20 = objc_msgSend(v14, sel_sinkWithCompletion_receiveInput_, v17, v19);
  _Block_release(v19);
  _Block_release(v17);

}

void sub_1CB7D6CC0(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, char a4, const char *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *oslog;

  swift_unknownObjectRetain();
  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    v9 = v8;
    type metadata accessor for AnyBiomeEvent();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v9;
    *(_BYTE *)(v10 + 24) = a4;
    swift_unknownObjectRetain();
    a2(v10, 1);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    if (qword_1ED88AD88 != -1)
      swift_once();
    v11 = sub_1CB8466D8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED88A8D0);
    oslog = sub_1CB8466C0();
    v12 = sub_1CB846C84();
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1CB771000, oslog, v12, a5, v13, 2u);
      MEMORY[0x1D179FE84](v13, -1, -1);
    }

  }
}

void sub_1CB7D6E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;

  v1 = v0;
  if (qword_1ED88AD88 != -1)
    swift_once();
  v2 = sub_1CB8466D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED88A8D0);
  v3 = sub_1CB8466C0();
  v4 = sub_1CB846C84();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1CB771000, v3, v4, "BiomeIntentStreamSubscriber unsubscribing", v5, 2u);
    MEMORY[0x1D179FE84](v5, -1, -1);
  }

  v6 = objc_msgSend((id)objc_opt_self(), sel_intent);
  v7 = objc_msgSend(v6, sel_publisher);

  v8 = objc_msgSend(v7, sel_subscribeOn_, *(_QWORD *)(v1 + 16));
  v17 = nullsub_1;
  v18 = 0;
  v9 = MEMORY[0x1E0C809B0];
  v13 = MEMORY[0x1E0C809B0];
  v14 = 1107296256;
  v15 = sub_1CB783140;
  v16 = &block_descriptor_8;
  v10 = _Block_copy(&v13);
  v17 = nullsub_1;
  v18 = 0;
  v13 = v9;
  v14 = 1107296256;
  v15 = sub_1CB7D621C;
  v16 = &block_descriptor_3;
  v11 = _Block_copy(&v13);
  v12 = objc_msgSend(v8, sel_sinkWithCompletion_receiveInput_, v10, v11);
  _Block_release(v11);
  _Block_release(v10);

  objc_msgSend(v12, sel_cancel);
}

uint64_t type metadata accessor for BiomeIntentStreamSubscriber()
{
  return objc_opt_self();
}

void sub_1CB7D7058(uint64_t a1, uint64_t a2)
{
  sub_1CB7D69E4(a1, a2);
}

void sub_1CB7D7078()
{
  sub_1CB7D6E30();
}

void sub_1CB7D7098()
{
  qword_1ED88A8F0 = (uint64_t)&unk_1E868A648;
}

void *sub_1CB7D70AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  char v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  unsigned int v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint8_t *v43;
  const char *v44;
  double v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  id v50;
  double v51;
  uint64_t v52;
  double v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  double v60;
  double v61;
  _BOOL4 v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  _BOOL4 v80;

  v3 = sub_1CB846654();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F7A0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v74 - v11;
  if (*(_BYTE *)(a1 + 24))
  {
    if (qword_1EF99C3E0 != -1)
      swift_once();
    v13 = sub_1CB8466D8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EF99F780);
    v14 = sub_1CB8466C0();
    v15 = sub_1CB846C84();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1CB771000, v14, v15, "BiomeFilter: received non-intent Biome event", v16, 2u);
      MEMORY[0x1D179FE84](v16, -1, -1);
    }

    return 0;
  }
  v17 = *(id *)(a1 + 16);
  sub_1CB7D345C(v17, 0);
  v18 = objc_msgSend(v17, sel_eventBody);
  if (!v18)
  {
    if (qword_1EF99C3E0 != -1)
      swift_once();
    v25 = sub_1CB8466D8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EF99F780);
    v26 = sub_1CB8466C0();
    v27 = sub_1CB846C90();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1CB771000, v26, v27, "BiomeFilter: could not unwrap event body", v28, 2u);
      MEMORY[0x1D179FE84](v28, -1, -1);
    }
    goto LABEL_47;
  }
  v19 = v18;
  v79 = v1;
  v20 = objc_msgSend(v18, sel_intentClass);
  if (!v20)
    goto LABEL_25;
  v21 = v20;
  v78 = v17;
  v22 = sub_1CB8468A0();
  v24 = v23;

  if (v22 == 0xD000000000000011 && v24 == 0x80000001CB855A10)
  {
    swift_bridgeObjectRelease();
    v17 = v78;
    goto LABEL_17;
  }
  v29 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  v17 = v78;
  if ((v29 & 1) == 0)
  {
LABEL_25:
    if (qword_1EF99C3E0 != -1)
      swift_once();
    v41 = sub_1CB8466D8();
    __swift_project_value_buffer(v41, (uint64_t)qword_1EF99F780);
    v26 = sub_1CB8466C0();
    v42 = sub_1CB846C84();
    if (os_log_type_enabled(v26, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      v44 = "BiomeFilter received Biome intent event that's not INStartCallIntent, skipping";
LABEL_29:
      _os_log_impl(&dword_1CB771000, v26, v42, v44, v43, 2u);
      MEMORY[0x1D179FE84](v43, -1, -1);
      sub_1CB7D3480(v17, 0);

LABEL_48:
      return 0;
    }
    goto LABEL_46;
  }
LABEL_17:
  if (qword_1EF99C3E0 != -1)
    swift_once();
  v30 = sub_1CB8466D8();
  v77 = __swift_project_value_buffer(v30, (uint64_t)qword_1EF99F780);
  v31 = sub_1CB8466C0();
  v32 = sub_1CB846C84();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v33 = 0;
    _os_log_impl(&dword_1CB771000, v31, v32, "BiomeFilter received Biome intent event INStartCallIntent", v33, 2u);
    MEMORY[0x1D179FE84](v33, -1, -1);
  }

  v34 = objc_msgSend(v19, sel_donatedBySiri);
  v35 = v79;
  if (v34)
  {
    v36 = sub_1CB8466C0();
    v37 = sub_1CB846C84();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_1CB771000, v36, v37, "BiomeFilter: event donated by Siri", v38, 2u);
      MEMORY[0x1D179FE84](v38, -1, -1);
    }

    objc_msgSend(v19, sel_absoluteTimestamp);
    v40 = v39;

    sub_1CB7D3480(v17, 0);
    v19 = 0;
    *(_QWORD *)(v35 + 32) = v40;
    *(_BYTE *)(v35 + 40) = 0;
    *(_QWORD *)(v35 + 48) = 0;
    *(_BYTE *)(v35 + 56) = 1;
    return v19;
  }
  if (objc_msgSend(v19, sel_interactionDirection) != (id)2)
  {
    v26 = sub_1CB8466C0();
    v42 = sub_1CB846C84();
    if (os_log_type_enabled(v26, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      v44 = "BiomeFilter: direction incoming, skipping";
      goto LABEL_29;
    }
    goto LABEL_46;
  }
  if ((*(_BYTE *)(v35 + 40) & 1) != 0)
  {
    v26 = sub_1CB8466C0();
    v42 = sub_1CB846C84();
    if (os_log_type_enabled(v26, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      v44 = "BiomeFilter: no lastSiriCallTimestamp, skipping";
      goto LABEL_29;
    }
    goto LABEL_46;
  }
  v45 = *(double *)(v35 + 32);
  v46 = objc_msgSend(v19, sel_interaction);
  v47 = sub_1CB845F94();
  v49 = v48;

  v50 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
  sub_1CB7A81D8(v47, v49);
  v75 = v47;
  v76 = v49;
  v69 = sub_1CB7D7FE8();
  sub_1CB779034(v75, v76);
  sub_1CB777FA8(0, &qword_1EF99F7A8);
  sub_1CB8468A0();
  v70 = (void *)sub_1CB846DEC();
  swift_bridgeObjectRelease();
  if (v70)
  {
    objc_msgSend(v69, sel_finishDecoding);

    sub_1CB779034(v75, v76);
    v71 = objc_msgSend(v70, sel_dateInterval);

    if (v71)
    {
      sub_1CB845DF0();

      v72 = sub_1CB845E20();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v10, 0, 1, v72);
    }
    else
    {
      v72 = sub_1CB845E20();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v10, 1, 1, v72);
    }
    v52 = v79;
    sub_1CB7D836C((uint64_t)v10, (uint64_t)v12, &qword_1EF99F7A0);
    sub_1CB845E20();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 48))(v12, 1, v72))
    {
      sub_1CB7D80A4((uint64_t)v12);
      v51 = 0.0;
    }
    else
    {
      sub_1CB845E14();
      v51 = v73;
      sub_1CB7D80A4((uint64_t)v12);
    }
  }
  else
  {

    sub_1CB779034(v75, v76);
    v51 = 0.0;
    v52 = v79;
  }
  objc_msgSend(v19, sel_absoluteTimestamp);
  if (v53 - v45 > 5.0 || v51 != 0.0)
  {
    if ((*(_BYTE *)(v52 + 56) & 1) == 0)
      goto LABEL_51;
    v26 = sub_1CB8466C0();
    v42 = sub_1CB846C84();
    if (os_log_type_enabled(v26, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      v44 = "BiomeFilter: no lastUserHangupTimeStamp, skipping";
      goto LABEL_29;
    }
LABEL_46:

LABEL_47:
    sub_1CB7D3480(v17, 0);
    goto LABEL_48;
  }
  if (*(_BYTE *)(v52 + 56) == 1)
  {
    v54 = sub_1CB8466C0();
    v55 = sub_1CB846C84();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_1CB771000, v54, v55, "BiomeFilter: event user hangup", v56, 2u);
      MEMORY[0x1D179FE84](v56, -1, -1);
    }

    objc_msgSend(v19, sel_absoluteTimestamp);
    v58 = v57;

    sub_1CB7D3480(v17, 0);
    v19 = 0;
    *(_QWORD *)(v52 + 48) = v58;
    *(_BYTE *)(v52 + 56) = 0;
    return v19;
  }
LABEL_51:
  v60 = *(double *)(v52 + 48);
  objc_msgSend(v19, sel_absoluteTimestamp);
  v62 = v51 > 0.0 && v61 - v60 <= 60.0;
  v63 = sub_1CB8466C0();
  v64 = sub_1CB846C84();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v65 = 67109120;
    v17 = v78;
    v80 = v62;
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v63, v64, "BiomeFilter decided isUserCallAfterHangupSiriCall:%{BOOL}d", v65, 8u);
    MEMORY[0x1D179FE84](v65, -1, -1);
  }

  *(_QWORD *)(v52 + 32) = 0;
  *(_BYTE *)(v52 + 40) = 1;
  *(_QWORD *)(v52 + 48) = 0;
  *(_BYTE *)(v52 + 56) = 1;
  if (!v62)
  {

    sub_1CB7D3480(v17, 0);
    return 0;
  }
  v66 = qword_1ED88A288;
  v67 = v19;
  if (v66 != -1)
    swift_once();
  v68 = sub_1CB846678();
  __swift_project_value_buffer(v68, (uint64_t)qword_1ED8901B0);
  sub_1CB846648();
  sub_1CB7BECCC("events.filters.UserCallAfterHangupSiriCall", 42, 2, (uint64_t)v6);
  sub_1CB7D3480(v78, 0);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v19;
}

uint64_t sub_1CB7D7B60()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BiomeFilterUserCallAfterHangupSiriCall()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for BiomeSiriEventScenarioProcessor.BiomeSiriEventScenarioProcessorStatus(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BiomeSiriEventScenarioProcessor.BiomeSiriEventScenarioProcessorStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BiomeSiriEventScenarioProcessor.BiomeSiriEventScenarioProcessorStatus()
{
  return &type metadata for BiomeSiriEventScenarioProcessor.BiomeSiriEventScenarioProcessorStatus;
}

uint64_t storeEnumTagSinglePayload for BiomeSiriEventProcessingInputStream(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CB7D7C90 + 4 * byte_1CB84C9DA[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CB7D7CC4 + 4 * byte_1CB84C9D5[v4]))();
}

uint64_t sub_1CB7D7CC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7D7CCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB7D7CD4);
  return result;
}

uint64_t sub_1CB7D7CE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB7D7CE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CB7D7CEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7D7CF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BiomeSiriEventProcessingInputStream()
{
  return &type metadata for BiomeSiriEventProcessingInputStream;
}

unint64_t sub_1CB7D7D14()
{
  unint64_t result;

  result = qword_1ED88AB38;
  if (!qword_1ED88AB38)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84CBB4, &type metadata for BiomeSiriEventProcessingInputStream);
    atomic_store(result, (unint64_t *)&qword_1ED88AB38);
  }
  return result;
}

void sub_1CB7D7D58()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  *(_QWORD *)(v1 + 48) = 0;
  *(_BYTE *)(v1 + 56) = 1;
}

void *sub_1CB7D7D74(uint64_t a1)
{
  return sub_1CB7D70AC(a1);
}

uint64_t sub_1CB7D7D94()
{
  if (qword_1ED88A900 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CB7D7DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CB8466D8();
  __swift_allocate_value_buffer(v0, qword_1ED88A8D0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED88A8D0);
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED890248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1CB7D7E64()
{
  uint64_t v0;

  v0 = sub_1CB8466D8();
  __swift_allocate_value_buffer(v0, qword_1EF99F780);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF99F780);
  return sub_1CB8466CC();
}

uint64_t sub_1CB7D7EE4(void (*a1)(void))
{
  a1();
  return sub_1CB8473A4();
}

uint64_t sub_1CB7D7F08(void *a1, void *a2)
{
  char v4;
  uint64_t result;

  switch((unint64_t)a1)
  {
    case 0uLL:
      if (a2)
        goto LABEL_13;
      goto LABEL_7;
    case 1uLL:
      if (a2 == (void *)1)
        goto LABEL_7;
      goto LABEL_13;
    case 2uLL:
      if (a2 != (void *)2)
        goto LABEL_13;
      goto LABEL_7;
    case 3uLL:
      if (a2 != (void *)3)
        goto LABEL_13;
      goto LABEL_7;
    case 4uLL:
      if (a2 != (void *)4)
        goto LABEL_13;
LABEL_7:
      result = 1;
      break;
    default:
      if ((unint64_t)a2 < 5)
      {
LABEL_13:
        result = 0;
      }
      else
      {
        sub_1CB777FA8(0, (unint64_t *)&qword_1ED88A780);
        sub_1CB7D82E8(a1);
        sub_1CB7D82E8(a2);
        v4 = sub_1CB846E10();
        sub_1CB7D82F8(a2);
        sub_1CB7D82F8(a1);
        result = v4 & 1;
      }
      break;
  }
  return result;
}

id sub_1CB7D7FE8()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1CB845F88();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1CB845E80();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1CB7D80A4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F7A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_1CB7D80FC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1CB7D8124(uint64_t a1)
{
  uint64_t v1;

  sub_1CB7D6CC0(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), 0, "BiomeIntentStreamSubscriber received non-intent Biome event");
}

void sub_1CB7D8148(uint64_t a1)
{
  uint64_t v1;

  sub_1CB7D6CC0(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), 1, "BiomeSiriUIStreamSubscriber received non-ui Biome event");
}

void sub_1CB7D816C(void *a1)
{
  uint64_t v1;
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(v1 + 16);
  v3 = objc_msgSend(a1, sel_error);
  v2();

}

void sub_1CB7D81B4(uint64_t a1)
{
  uint64_t v1;

  sub_1CB7D6CC0(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), 2, "BiomeSiriExecutionStreamSubscriber received non-execution Biome event");
}

uint64_t sub_1CB7D81D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *i;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1CB776548(0, v4, 0);
    v5 = v14;
    for (i = (_QWORD *)(a1 + 32); ; i += 5)
    {
      sub_1CB7D55D4(i, a2, &v13);
      if (v3)
        break;
      v3 = 0;
      v9 = v13;
      v14 = v5;
      v11 = *(_QWORD *)(v5 + 16);
      v10 = *(_QWORD *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1CB776548(v10 > 1, v11 + 1, 1);
        v5 = v14;
      }
      *(_QWORD *)(v5 + 16) = v11 + 1;
      *(_QWORD *)(v5 + 8 * v11 + 32) = v9;
      if (!--v4)
        return v5;
    }
    swift_release();
  }
  return v5;
}

id sub_1CB7D82D0(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_retain();
  else
    return a1;
}

void sub_1CB7D82DC(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_release();
  else

}

id sub_1CB7D82E8(id result)
{
  if ((unint64_t)result >= 5)
    return result;
  return result;
}

void sub_1CB7D82F8(id a1)
{
  if ((unint64_t)a1 >= 5)

}

uint64_t sub_1CB7D8308()
{
  uint64_t v0;

  return sub_1CB7D50F0(v0);
}

uint64_t sub_1CB7D8310()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CB7D8334()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1CB7D8360()
{
  uint64_t v0;

  sub_1CB7D42C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1CB7D836C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CB7D83B0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CB7D83DC(void *a1, char a2)
{
  uint64_t v2;

  return sub_1CB7D4998(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(void (**)(uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1CB7D83F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  void *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v1 = sub_1CB846D08();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CB846CF0();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1CB84678C();
  MEMORY[0x1E0C80A78](v7);
  sub_1CB777FA8(0, qword_1ED88E0B0);
  sub_1CB846780();
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1CB7762AC(&qword_1ED88E0A8, v6, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E090);
  sub_1CB7C6674((unint64_t *)&unk_1ED88E098, &qword_1ED88E090);
  sub_1CB846EC4();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D0], v1);
  v8 = (void *)sub_1CB846D20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A868);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CB84CD40;
  *(_BYTE *)(inited + 32) = 0;
  v10 = type metadata accessor for BiomeIntentStreamSubscriber();
  v11 = swift_allocObject();
  v12 = objc_allocWithZone(MEMORY[0x1E0D025E0]);
  v13 = v8;
  v14 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v15 = objc_msgSend(v12, sel_initWithIdentifier_targetQueue_, v14, v13);

  *(_QWORD *)(v11 + 16) = v15;
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 72) = &off_1E868EF98;
  *(_QWORD *)(inited + 40) = v11;
  *(_BYTE *)(inited + 80) = 1;
  v16 = type metadata accessor for BiomeSiriUIStreamSubscriber();
  v17 = swift_allocObject();
  v18 = objc_allocWithZone(MEMORY[0x1E0D025E0]);
  v19 = v13;
  v20 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v21 = objc_msgSend(v18, sel_initWithIdentifier_targetQueue_, v20, v19);

  *(_QWORD *)(v17 + 16) = v21;
  *(_QWORD *)(inited + 112) = v16;
  *(_QWORD *)(inited + 120) = &off_1E868EFB8;
  *(_QWORD *)(inited + 88) = v17;
  *(_BYTE *)(inited + 128) = 2;
  v22 = type metadata accessor for BiomeSiriExecutionStreamSubscriber();
  v23 = swift_allocObject();
  v24 = objc_allocWithZone(MEMORY[0x1E0D025E0]);
  v25 = v19;
  v26 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v27 = objc_msgSend(v24, sel_initWithIdentifier_targetQueue_, v26, v25);

  *(_QWORD *)(v23 + 16) = v27;
  *(_QWORD *)(inited + 160) = v22;
  *(_QWORD *)(inited + 168) = &off_1E868EFD8;
  *(_QWORD *)(inited + 136) = v23;
  v28 = sub_1CB78B4B8(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88AB40);
  swift_arrayDestroy();
  type metadata accessor for BiomeSiriEventScenarioProcessor();
  v29 = swift_allocObject();
  sub_1CB7D3C24((uint64_t)v25, v28, v32);
  return v29;
}

_QWORD *_s18SubscriptionStatusOwCP(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void _s18SubscriptionStatusOwxx(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **_s18SubscriptionStatusOwca(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

void **assignWithTake for BiomeSiriEventScenario(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for BiomeSiriEventScenario(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 4;
  if (v4 >= 6)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BiomeSiriEventScenario(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 4;
  }
  return result;
}

uint64_t sub_1CB7D89AC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1CB7D89C4(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for BiomeSiriEventScenario()
{
  return &type metadata for BiomeSiriEventScenario;
}

void makePLUSEventLogTarget()(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  unsigned int v4;
  ValueMetadata *v5;
  _UNKNOWN **v6;

  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

  v5 = &type metadata for SiriAnalyticsSharedPLUSEventLogTarget;
  if (v4)
    v5 = &type metadata for DisabledPLUSEventLogTarget;
  v6 = &protocol witness table for DisabledPLUSEventLogTarget;
  if (!v4)
    v6 = &protocol witness table for SiriAnalyticsSharedPLUSEventLogTarget;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
}

uint64_t PLUSEventLogTarget.emitMessage(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CB846084();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v11 = 0;
  v12 = 1;
  (*(void (**)(uint64_t, char *, uint64_t *, uint64_t, uint64_t))(a3 + 8))(a1, v8, &v11, a2, a3);
  return sub_1CB778FF4((uint64_t)v8);
}

uint64_t PLUSEventLogTarget.emitMessage(_:isolatedStreamId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CB846084();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a2, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  v14 = 0;
  v15 = 1;
  (*(void (**)(uint64_t, char *, uint64_t *, uint64_t, uint64_t))(a4 + 8))(a1, v10, &v14, a3, a4);
  return sub_1CB778FF4((uint64_t)v10);
}

uint64_t PLUSEventLogTarget.emitMessage(_:timeStamp:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a2;
  v12 = sub_1CB846084();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
  v14 = v11;
  v15 = 0;
  (*(void (**)(uint64_t, char *, uint64_t *, uint64_t, uint64_t))(a4 + 8))(a1, v10, &v14, a3, a4);
  return sub_1CB778FF4((uint64_t)v10);
}

uint64_t PLUSEventLogTimestamp.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = mach_absolute_time();
  *a1 = result;
  return result;
}

uint64_t PLUSEventLogTimestamp.init(machAbsoluteTime:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t PLUSEventLogTimestamp.hash(into:)()
{
  return sub_1CB847308();
}

BOOL static PLUSEventLogTimestamp.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1CB7D8E20()
{
  return 0xD000000000000010;
}

uint64_t sub_1CB7D8E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CB7D9840(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1CB7D8E64()
{
  sub_1CB7D8F9C();
  return sub_1CB84738C();
}

uint64_t sub_1CB7D8E8C()
{
  sub_1CB7D8F9C();
  return sub_1CB847398();
}

uint64_t PLUSEventLogTimestamp.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F7B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB7D8F9C();
  sub_1CB847350();
  sub_1CB847140();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1CB7D8F9C()
{
  unint64_t result;

  result = qword_1EF99F7B8;
  if (!qword_1EF99F7B8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84CFB0, &type metadata for PLUSEventLogTimestamp.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99F7B8);
  }
  return result;
}

uint64_t PLUSEventLogTimestamp.hashValue.getter()
{
  sub_1CB8472E4();
  sub_1CB847308();
  return sub_1CB847314();
}

uint64_t PLUSEventLogTimestamp.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F7C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB7D8F9C();
  sub_1CB847338();
  if (!v2)
  {
    v9 = sub_1CB8470F8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1CB7D9128()
{
  sub_1CB8472E4();
  sub_1CB847308();
  return sub_1CB847314();
}

uint64_t sub_1CB7D916C()
{
  return sub_1CB847308();
}

uint64_t sub_1CB7D9194()
{
  sub_1CB8472E4();
  sub_1CB847308();
  return sub_1CB847314();
}

uint64_t sub_1CB7D91D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PLUSEventLogTimestamp.init(from:)(a1, a2);
}

uint64_t sub_1CB7D91E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F7B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB7D8F9C();
  sub_1CB847350();
  sub_1CB847140();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void SiriAnalyticsSharedPLUSEventLogTarget.emitMessage(_:isolatedStreamId:timeStamp:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - v10;
  v12 = *a3;
  v13 = *((_BYTE *)a3 + 8);
  v14 = objc_msgSend((id)objc_opt_self(), sel_sharedAnalytics);
  v15 = objc_msgSend(v14, sel_defaultMessageStream);

  if ((v13 & 1) != 0)
  {
    sub_1CB7BDB4C(a2, (uint64_t)v9);
    v16 = sub_1CB846084();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) != 1)
    {
      v18 = (void *)sub_1CB84603C();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
    }
    objc_msgSend(v15, sel_emitMessage_isolatedStreamUUID_, a1, v18);
  }
  else
  {
    sub_1CB7BDB4C(a2, (uint64_t)v11);
    v19 = sub_1CB846084();
    v20 = *(_QWORD *)(v19 - 8);
    v18 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) != 1)
    {
      v18 = (void *)sub_1CB84603C();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
    }
    objc_msgSend(v15, sel_emitMessage_timestamp_isolatedStreamUUID_, a1, v12, v18);
  }

}

void sub_1CB7D94A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  SiriAnalyticsSharedPLUSEventLogTarget.emitMessage(_:isolatedStreamId:timeStamp:)(a1, a2, a3);
}

void DisabledPLUSEventLogTarget.emitMessage(_:isolatedStreamId:timeStamp:)()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_1ED88E518 != -1)
    swift_once();
  v0 = sub_1CB8466D8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED890248);
  oslog = sub_1CB8466C0();
  v1 = sub_1CB846C84();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_1CB771000, oslog, v1, "Omitting SELF logging call as logging disabled", v2, 2u);
    MEMORY[0x1D179FE84](v2, -1, -1);
  }

}

void sub_1CB7D9580()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_1ED88E518 != -1)
    swift_once();
  v0 = sub_1CB8466D8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED890248);
  oslog = sub_1CB8466C0();
  v1 = sub_1CB846C84();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_1CB771000, oslog, v1, "Omitting SELF logging call as logging disabled", v2, 2u);
    MEMORY[0x1D179FE84](v2, -1, -1);
  }

}

unint64_t sub_1CB7D9650()
{
  unint64_t result;

  result = qword_1EF99F7C8;
  if (!qword_1EF99F7C8)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for PLUSEventLogTimestamp, &type metadata for PLUSEventLogTimestamp);
    atomic_store(result, (unint64_t *)&qword_1EF99F7C8);
  }
  return result;
}

uint64_t dispatch thunk of PLUSEventLogTarget.emitMessage(_:isolatedStreamId:timeStamp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for PLUSEventLogTimestamp()
{
  return &type metadata for PLUSEventLogTimestamp;
}

ValueMetadata *type metadata accessor for SiriAnalyticsSharedPLUSEventLogTarget()
{
  return &type metadata for SiriAnalyticsSharedPLUSEventLogTarget;
}

ValueMetadata *type metadata accessor for DisabledPLUSEventLogTarget()
{
  return &type metadata for DisabledPLUSEventLogTarget;
}

uint64_t storeEnumTagSinglePayload for PLUSEventLogTimestamp.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CB7D970C + 4 * byte_1CB84CD50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CB7D972C + 4 * byte_1CB84CD55[v4]))();
}

_BYTE *sub_1CB7D970C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CB7D972C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CB7D9734(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CB7D973C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CB7D9744(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CB7D974C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PLUSEventLogTimestamp.CodingKeys()
{
  return &type metadata for PLUSEventLogTimestamp.CodingKeys;
}

unint64_t sub_1CB7D976C()
{
  unint64_t result;

  result = qword_1EF99F7D0;
  if (!qword_1EF99F7D0)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84CF88, &type metadata for PLUSEventLogTimestamp.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99F7D0);
  }
  return result;
}

unint64_t sub_1CB7D97B4()
{
  unint64_t result;

  result = qword_1EF99F7D8;
  if (!qword_1EF99F7D8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84CEF8, &type metadata for PLUSEventLogTimestamp.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99F7D8);
  }
  return result;
}

unint64_t sub_1CB7D97FC()
{
  unint64_t result;

  result = qword_1EF99F7E0;
  if (!qword_1EF99F7E0)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84CF20, &type metadata for PLUSEventLogTimestamp.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF99F7E0);
  }
  return result;
}

uint64_t sub_1CB7D9840(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001CB855C30)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

id static GroundTruthRecord.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

char *keypath_get_selector_id()
{
  return sel_id;
}

id sub_1CB7D9938@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_timestamp);
  *a2 = v4;
  return result;
}

id sub_1CB7D9968(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTimestamp_, *a1);
}

void sub_1CB7D997C(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_id);
  sub_1CB846054();

}

void sub_1CB7D99CC(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1CB84603C();
  objc_msgSend(v2, sel_setId_, v3);

}

char *keypath_get_selector_payload()
{
  return sel_payload;
}

void sub_1CB7D9A20(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_payload);
  v4 = sub_1CB845F94();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1CB7D9A78(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_2Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0CB01F0], (SEL *)&selRef_setPayload_);
}

char *keypath_get_selector_type()
{
  return sel_type;
}

void sub_1CB7D9A98(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_type);
  v4 = sub_1CB8468A0();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1CB7D9AF0(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_set_2Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0CB1940], (SEL *)&selRef_setType_);
}

void keypath_set_2Tm(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD), SEL *a6)
{
  void *v7;
  id v8;

  v7 = *a2;
  v8 = (id)a5(*a1, a1[1]);
  objc_msgSend(v7, *a6, v8);

}

id sub_1CB7D9B54@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, sel_timestamp);
  *a2 = v4;
  return result;
}

id sub_1CB7D9B84(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTimestamp_, *a1);
}

uint64_t SiriUserFeedbackLearningTask.init(context:usageLogger:)@<X0>(char *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _BYTE v39[8];
  id v40;
  _BYTE v41[48];
  uint64_t v42;

  v4 = v3;
  v7 = sub_1CB8468D0();
  MEMORY[0x1E0C80A78](v7);
  v8 = *a1;
  if (qword_1ED88E518 != -1)
    swift_once();
  v9 = sub_1CB8466D8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED890248);
  v10 = sub_1CB8466C0();
  v11 = sub_1CB846C84();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v42 = v13;
    *(_DWORD *)v12 = 136315138;
    sub_1CB775A54(0xD00000000000001ALL, 0x80000001CB855CD0, &v42);
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v10, v11, "SiriUserFeedbackLearningTask.%s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v13, -1, -1);
    v14 = v12;
    v4 = v3;
    MEMORY[0x1D179FE84](v14, -1, -1);
  }

  v39[0] = v8;
  sub_1CB79CBA8((uint64_t)a2, (uint64_t)v41);
  sub_1CB845DC0();
  swift_allocObject();
  sub_1CB845DB4();
  LOBYTE(v42) = v8;
  sub_1CB7D9FE8();
  v15 = sub_1CB845DA8();
  if (v4)
    goto LABEL_6;
  v18 = v15;
  v19 = v16;
  sub_1CB8468C4();
  v20 = sub_1CB8468B8();
  if (!v21)
  {
    sub_1CB7DA02C();
    swift_allocError();
    *(_OWORD *)v35 = xmmword_1CB84D000;
    *(_BYTE *)(v35 + 16) = 1;
    swift_willThrow();
    sub_1CB779034(v18, v19);
LABEL_6:
    swift_release();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  }
  v22 = v21;
  v36 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E278);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CB848A60;
  v24 = a2[3];
  v25 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v24);
  v37 = v19;
  *(_QWORD *)(inited + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
  *(_QWORD *)(inited + 40) = v26;
  v27 = a2[3];
  v28 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v27);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
  v30 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 48) = v29 & 1;
  *(_QWORD *)(inited + 72) = v30;
  *(_QWORD *)(inited + 80) = 0x747865746E6F63;
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 88) = 0xE700000000000000;
  *(_QWORD *)(inited + 96) = v36;
  *(_QWORD *)(inited + 104) = v22;
  v31 = sub_1CB787708(inited);
  sub_1CB7DA208(v31);
  swift_bridgeObjectRelease();
  v32 = objc_allocWithZone(MEMORY[0x1E0D46588]);
  v33 = (void *)sub_1CB8467E0();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v32, sel_initWithParametersDict_, v33);

  sub_1CB779034(v18, v37);
  swift_release();
  v40 = v34;
  sub_1CB7A0634((uint64_t)v39, a3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
  return sub_1CB7A0670((uint64_t)v39);
}

unint64_t sub_1CB7D9FE8()
{
  unint64_t result;

  result = qword_1ED88A278;
  if (!qword_1ED88A278)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriUserFeedbackLearningTaskContext, &type metadata for SiriUserFeedbackLearningTaskContext);
    atomic_store(result, (unint64_t *)&qword_1ED88A278);
  }
  return result;
}

unint64_t sub_1CB7DA02C()
{
  unint64_t result;

  result = qword_1EF99F7E8;
  if (!qword_1EF99F7E8)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriUserFeedbackLearningTaskError, &type metadata for SiriUserFeedbackLearningTaskError);
    atomic_store(result, (unint64_t *)&qword_1EF99F7E8);
  }
  return result;
}

void SiriUserFeedbackLearningTask.context.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

id SiriUserFeedbackLearningTask.mlrTask.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t SiriUserFeedbackLearningTask.description.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  _QWORD v4[4];

  v4[2] = 0;
  v4[3] = 0xE000000000000000;
  sub_1CB846F30();
  sub_1CB846954();
  strcpy((char *)v4, "triggerType: ");
  HIWORD(v4[1]) = -4864;
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  v1 = *(id *)(v0 + 8);
  v2 = objc_msgSend(v1, sel_description, v4[0], v4[1]);
  sub_1CB8468A0();

  sub_1CB846954();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1CB7DA208(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A7E0);
    v2 = sub_1CB847068();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1CB778000(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1CB777CAC(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1CB777CAC(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1CB777CAC(v36, v37);
    sub_1CB777CAC(v37, &v33);
    result = sub_1CB846EE8();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1CB777CAC(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1CB7DB3CC();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t SiriUserFeedbackLearningTask.init(mlrTask:usageLogger:)@<X0>(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  _BYTE *v19;
  id v20;
  __objc2_prot_list **p_base_prots;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  int v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  _QWORD v71[3];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[3];
  uint64_t v75;
  uint64_t v76;
  char v77[8];
  id v78;
  _BYTE v79[48];
  uint64_t v80;

  v61 = a3;
  v5 = sub_1CB8468D0();
  v67 = *(_QWORD *)(v5 - 8);
  v68 = v5;
  MEMORY[0x1E0C80A78](v5);
  v66 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1CB845DE4();
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v63 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED88E518 != -1)
    swift_once();
  v8 = sub_1CB8466D8();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED890248);
  v10 = a1;
  v69 = (_BYTE *)v9;
  v11 = sub_1CB8466C0();
  v12 = sub_1CB846C84();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v60 = a2;
    v15 = (_QWORD *)v14;
    v59 = swift_slowAlloc();
    v74[0] = v59;
    *(_DWORD *)v13 = 136315394;
    v71[0] = sub_1CB775A54(0xD00000000000001ALL, 0x80000001CB855CF0, v74);
    sub_1CB846E58();
    *(_WORD *)(v13 + 12) = 2112;
    v71[0] = v10;
    v16 = v10;
    sub_1CB846E58();
    *v15 = v10;

    _os_log_impl(&dword_1CB771000, v11, v12, "SiriUserFeedbackLearningTask.%s mlrTask:%@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E4F0);
    swift_arrayDestroy();
    v17 = v15;
    a2 = v60;
    MEMORY[0x1D179FE84](v17, -1, -1);
    v18 = v59;
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v18, -1, -1);
    MEMORY[0x1D179FE84](v13, -1, -1);

  }
  else
  {

  }
  v78 = v10;
  v19 = v79;
  sub_1CB79CBA8((uint64_t)a2, (uint64_t)v79);
  v20 = v10;
  p_base_prots = &SupportedLocalesPListStore.base_prots;
  v22 = objc_msgSend(v20, sel_parameters);
  v23 = a2[3];
  v24 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
  v25 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v22, sel_BOOLValueForKey_defaultValue_, v25, 0);

  v27 = a2[3];
  v28 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v27);
  (*(void (**)(id, uint64_t, uint64_t))(v28 + 16))(v26, v27, v28);
  sub_1CB79CBA8((uint64_t)a2, (uint64_t)v74);
  sub_1CB79CBA8((uint64_t)a2, (uint64_t)v71);
  v29 = sub_1CB8466C0();
  v30 = sub_1CB846C84();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v60 = v20;
    v33 = v32;
    v80 = v32;
    *(_DWORD *)v31 = 136315394;
    v34 = a2;
    v69 = v79;
    v35 = v75;
    v36 = v76;
    __swift_project_boxed_opaque_existential_1(v74, v75);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
    v70 = sub_1CB775A54(v37, v38, &v80);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v74);
    *(_WORD *)(v31 + 12) = 1024;
    v39 = v72;
    v40 = v73;
    __swift_project_boxed_opaque_existential_1(v71, v72);
    v41 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 24);
    v42 = v40;
    a2 = v34;
    p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
    v43 = v41(v39, v42) & 1;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
    LODWORD(v70) = v43;
    v19 = v69;
    sub_1CB846E58();
    _os_log_impl(&dword_1CB771000, v29, v30, "%s = %{BOOL}d", (uint8_t *)v31, 0x12u);
    swift_arrayDestroy();
    v44 = v33;
    v20 = v60;
    MEMORY[0x1D179FE84](v44, -1, -1);
    MEMORY[0x1D179FE84](v31, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v74);
  }

  v45 = objc_msgSend(v20, (SEL)p_base_prots[398]);
  v46 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v47 = objc_msgSend(v45, sel_stringValueForKey_defaultValue_, v46, 0);

  if (!v47)
    goto LABEL_11;
  v48 = sub_1CB8468A0();
  v50 = v49;

  v74[0] = v48;
  v74[1] = v50;
  v51 = v63;
  sub_1CB845DCC();
  sub_1CB78A5E8();
  sub_1CB846E94();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v51, v65);
  swift_bridgeObjectRelease();
  v52 = v66;
  sub_1CB8468C4();
  v53 = sub_1CB8468AC();
  v55 = v54;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v52, v68);
  if (v55 >> 60 == 15)
  {
LABEL_11:
    sub_1CB7DA02C();
    swift_allocError();
    *(_OWORD *)v56 = xmmword_1CB84D000;
    *(_BYTE *)(v56 + 16) = 0;
    swift_willThrow();

LABEL_13:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);

    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  }
  sub_1CB845D78();
  swift_allocObject();
  sub_1CB845D6C();
  sub_1CB7DAE74();
  v57 = v62;
  sub_1CB845D60();
  swift_release();

  sub_1CB78A670(v53, v55);
  if (v57)
    goto LABEL_13;
  v77[0] = v74[0];
  sub_1CB7A0634((uint64_t)v77, v61);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
  return sub_1CB7A0670((uint64_t)v77);
}

uint64_t sub_1CB7DAD3C(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1CB7DAD60@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t _s28SiriPrivateLearningAnalytics0a12UserFeedbackC9TaskErrorO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if ((a1[2] & 1) != 0)
  {
    if ((a2[2] & 1) != 0)
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        v7 = sub_1CB8471A0();
        goto LABEL_17;
      }
LABEL_16:
      v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5)
      goto LABEL_15;
    goto LABEL_16;
  }
  v7 = 0;
LABEL_17:
  sub_1CB7DAEBC();
  sub_1CB7DAEBC();
  sub_1CB7DAED4();
  sub_1CB7DAED4();
  return v7 & 1;
}

unint64_t sub_1CB7DAE74()
{
  unint64_t result;

  result = qword_1ED88E1D8[0];
  if (!qword_1ED88E1D8[0])
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriUserFeedbackLearningTaskContext, &type metadata for SiriUserFeedbackLearningTaskContext);
    atomic_store(result, qword_1ED88E1D8);
  }
  return result;
}

uint64_t sub_1CB7DAEBC()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for SiriUserFeedbackLearningTaskError()
{
  return sub_1CB7DAED4();
}

uint64_t sub_1CB7DAED4()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s28SiriPrivateLearningAnalytics33SiriUserFeedbackLearningTaskErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1CB7DAEBC();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SiriUserFeedbackLearningTaskError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1CB7DAEBC();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1CB7DAED4();
  return a1;
}

uint64_t assignWithTake for SiriUserFeedbackLearningTaskError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1CB7DAED4();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningTaskError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningTaskError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CB7DB048(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskError()
{
  return &type metadata for SiriUserFeedbackLearningTaskError;
}

uint64_t destroy for SiriUserFeedbackLearningTask(uint64_t a1)
{

  return __swift_destroy_boxed_opaque_existential_0(a1 + 16);
}

uint64_t initializeWithCopy for SiriUserFeedbackLearningTask(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a1 + 16;
  v5 = a2 + 16;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

uint64_t assignWithCopy for SiriUserFeedbackLearningTask(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SiriUserFeedbackLearningTask(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningTask(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTask()
{
  return &type metadata for SiriUserFeedbackLearningTask;
}

uint64_t sub_1CB7DB3CC()
{
  return swift_release();
}

uint64_t INDeleteNoteIntentFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t INDeleteNoteIntentFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1CB7DB3EC(id *a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *a1;
  v2 = objc_msgSend(v1, sel_intent);
  v3 = objc_msgSend(v2, sel_typeName);
  v4 = sub_1CB8468A0();
  v6 = v5;

  if (v4 == 0x49636972656E6547 && v6 == 0xED0000746E65746ELL)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      goto LABEL_22;
  }
  v9 = objc_msgSend(v2, sel_verb);
  v10 = sub_1CB8468A0();
  v12 = v11;

  if (v10 == 0x6F4E6574656C6544 && v12 == 0xEA00000000006574)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      goto LABEL_22;
  }
  v15 = objc_msgSend(v2, sel_parametersByName);
  if (!v15)
  {
LABEL_22:

    return MEMORY[0x1E0DEE9D8];
  }
  v16 = v15;
  v17 = sub_1CB8467EC();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1CB848A60;
  v19 = type metadata accessor for DeleteNoteEventFeature.EventType(0);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = 0xD000000000000010;
  *(_QWORD *)(v20 + 24) = 0x80000001CB855D10;
  *(_QWORD *)(v18 + 56) = v19;
  *(_QWORD *)(v18 + 64) = sub_1CB78E6AC(&qword_1EF99F7F0, type metadata accessor for DeleteNoteEventFeature.EventType);
  *(_QWORD *)(v18 + 32) = v20;
  LOBYTE(v19) = objc_msgSend(v1, sel__donatedBySiri);
  v21 = type metadata accessor for DeleteNoteEventFeature.DonatedBySiri(0);
  v22 = swift_allocObject();
  *(_BYTE *)(v22 + 16) = v19;
  *(_QWORD *)(v18 + 96) = v21;
  *(_QWORD *)(v18 + 104) = sub_1CB78E6AC(&qword_1EF99F7F8, type metadata accessor for DeleteNoteEventFeature.DonatedBySiri);
  *(_QWORD *)(v18 + 72) = v22;
  if (!*(_QWORD *)(v17 + 16) || (v23 = sub_1CB779A70(0x656C746974, 0xE500000000000000), (v24 & 1) == 0))
  {
    v30 = 0u;
    v31 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  sub_1CB778000(*(_QWORD *)(v17 + 56) + 32 * v23, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v31 + 1))
  {
LABEL_24:

    sub_1CB778110((uint64_t)&v30);
    return v18;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v25 = v33;
    v26 = v34;
    v27 = type metadata accessor for DeleteNoteEventFeature.NoteTextContent(0);
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v25;
    *(_QWORD *)(v28 + 24) = v26;
    v18 = (uint64_t)sub_1CB78F738((_QWORD *)1, 3, 1, (_QWORD *)v18);
    *((_QWORD *)&v31 + 1) = v27;
    v32 = sub_1CB78E6AC(&qword_1EF99F800, type metadata accessor for DeleteNoteEventFeature.NoteTextContent);
    *(_QWORD *)&v30 = v28;
    *(_QWORD *)(v18 + 16) = 3;
    sub_1CB7780BC(&v30, v18 + 112);
  }

  return v18;
}

uint64_t type metadata accessor for DeleteNoteEventFeature.EventType(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99F8D0);
}

uint64_t DeleteNoteEventFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = a1;
  return result;
}

uint64_t INDeleteNoteIntentFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t INDeleteNoteIntentFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DeleteNoteEventFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99F9B8);
}

uint64_t sub_1CB7DB854(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for DeleteNoteEventFeature.EventType);
}

uint64_t sub_1CB7DB860(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for DeleteNoteEventFeature.EventType);
}

uint64_t DeleteNoteEventFeature.DonatedBySiri.init(value:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t DeleteNoteEventFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1;
  v3 = swift_allocObject();
  v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t DeleteNoteEventFeature.DonatedBySiri.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DeleteNoteEventFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7DB964(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for DeleteNoteEventFeature.DonatedBySiri(0);
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB7DB998(unsigned __int8 *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  type metadata accessor for DeleteNoteEventFeature.DonatedBySiri(0);
  v2 = swift_allocObject();
  v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t DeleteNoteEventFeature.NoteTextContent.init(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t DeleteNoteEventFeature.NoteTextContent.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB7DBA3C(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for DeleteNoteEventFeature.NoteTextContent);
}

uint64_t sub_1CB7DBA48(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for DeleteNoteEventFeature.NoteTextContent);
}

uint64_t type metadata accessor for DeleteNoteEventFeature.NoteTextContent(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99FAA0);
}

uint64_t type metadata accessor for INDeleteNoteIntentFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for INDeleteNoteIntentFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of INDeleteNoteIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of INDeleteNoteIntentFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

ValueMetadata *type metadata accessor for DeleteNoteEventFeature()
{
  return &type metadata for DeleteNoteEventFeature;
}

uint64_t PredicateEvictor.__allocating_init(predicateConverter:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t PredicateEvictor.init(predicateConverter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

id sub_1CB7DBB08(uint64_t a1, void *a2)
{
  uint64_t (**v2)(_QWORD);
  uint64_t v3;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id result;
  void *v14;
  uint64_t v15;

  v6 = *((_QWORD *)*v2 + 10);
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  v8 = (void *)v2[2](a1);
  objc_msgSend(v7, sel_setPredicate_, v8);

  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF99FBC0);
  sub_1CB846DB0();
  if (v3)
  {

    return (id)v9;
  }
  v9 = sub_1CB8470A4();
  swift_bridgeObjectRelease();
  if (!v9)
  {
    v9 = sub_1CB846AB0();

    return (id)v9;
  }
  v10 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1D179EEB8](v10, v6))
  {
LABEL_12:

    swift_bridgeObjectRelease();
    return (id)v9;
  }
  v11 = 4;
  while (1)
  {
    v12 = sub_1CB846AC8();
    sub_1CB846A8C();
    result = (v12 & 1) != 0 ? *(id *)(v9 + 8 * v11) : (id)sub_1CB846F54();
    v14 = result;
    v15 = v11 - 3;
    if (__OFADD__(v11 - 4, 1))
      break;
    objc_msgSend(a2, sel_deleteObject_, result);

    ++v11;
    if (v15 == MEMORY[0x1D179EEB8](v9, v6))
      goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t PredicateEvictor.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PredicateEvictor.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

id sub_1CB7DBD00(uint64_t a1, void *a2)
{
  return sub_1CB7DBB08(a1, a2);
}

uint64_t sub_1CB7DBD20()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PredicateEvictor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PredicateEvictor);
}

uint64_t method lookup function for PredicateEvictor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PredicateEvictor.__allocating_init(predicateConverter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PredicateEvictor.evictRecord(record:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t NLXFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t NLXFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t NLXSpanLabels.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = v2;
  if (a1)
  {
    *(_QWORD *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CD20);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t NLXFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t NLXFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

_QWORD *sub_1CB7DBE04(unint64_t *a1)
{
  return sub_1CB7DBFA8(*a1);
}

uint64_t NLXSpanLabels.init(value:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1)
  {
    *(_QWORD *)(v1 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CD20);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t NLXSpanLabels.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t NLXSpanLabels.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7DBF0C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for NLXSpanLabels();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB7DBF40(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  type metadata accessor for NLXSpanLabels();
  v2 = swift_allocObject();
  v3 = v2;
  if (v1)
  {
    *(_QWORD *)(v2 + 16) = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CD20);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

_QWORD *sub_1CB7DBFA8(unint64_t a1)
{
  int64_t v1;
  unint64_t j;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __objc2_prot_list **p_base_prots;
  uint64_t i;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  __objc2_prot_list **v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  id v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  __int128 v58;
  uint64_t v59;
  unint64_t v60;

  v3 = a1;
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v58 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1CB847044();
    p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
    if (v5)
    {
LABEL_3:
      if (v5 < 1)
      {
        __break(1u);
        goto LABEL_81;
      }
      for (i = 0; i != v5; ++i)
      {
        if ((v3 & 0xC000000000000001) != 0)
          v9 = (id)MEMORY[0x1D179F320](i, v3);
        else
          v9 = *(id *)(v3 + 8 * i + 32);
        j = (unint64_t)v9;
        if (objc_msgSend(v9, (SEL)p_base_prots[170]) == 18)
        {
          sub_1CB846FB4();
          sub_1CB846FD8();
          sub_1CB846FE4();
          sub_1CB846FC0();
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v1 = v58;
      *(_QWORD *)&v58 = v4;
      if (v1 < 0)
        goto LABEL_32;
      goto LABEL_16;
    }
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    p_base_prots = &SupportedLocalesPListStore.base_prots;
    if (v5)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v58 = v4;
  if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
    goto LABEL_32;
LABEL_16:
  if ((v1 & 0x4000000000000000) != 0)
  {
LABEL_32:
    swift_retain();
    v10 = sub_1CB847044();
    if (!v10)
      goto LABEL_33;
    goto LABEL_18;
  }
  v10 = *(_QWORD *)(v1 + 16);
  swift_retain();
  if (!v10)
  {
LABEL_33:
    swift_release();
    v26 = MEMORY[0x1E0DEE9D8];
    goto LABEL_34;
  }
LABEL_18:
  if (v10 < 1)
  {
LABEL_81:
    __break(1u);
    __break(1u);
    goto LABEL_82;
  }
  v11 = 0;
  v55 = v10;
  v56 = v1 & 0xC000000000000001;
  do
  {
    if (v56)
      v12 = (id)MEMORY[0x1D179F320](v11, v1);
    else
      v12 = *(id *)(v1 + 8 * v11 + 32);
    v13 = v12;
    v14 = objc_msgSend(v12, sel_payload);
    if (v14)
    {
      v15 = v14;
      j = v3;
      v16 = v5;
      v17 = sub_1CB845F94();
      v18 = v1;
      v19 = p_base_prots;
      v21 = v20;

      v22 = (void *)sub_1CB845F88();
      v23 = v17;
      v5 = v16;
      v3 = j;
      v24 = v21;
      p_base_prots = v19;
      v1 = v18;
      v10 = v55;
      sub_1CB779034(v23, v24);
    }
    else
    {
      v22 = 0;
    }
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D99E28]), sel_initWithData_, v22);

    if (v25)
    {
      MEMORY[0x1D179EDF8]();
      if (*(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1CB846AA4();
      sub_1CB846AD4();
      sub_1CB846A74();
    }
    ++v11;
  }
  while (v10 != v11);
  swift_release();
  v26 = v58;
LABEL_34:
  v57 = v26;
  swift_release();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v58 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (j = 0; j != v5; ++j)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v27 = (id)MEMORY[0x1D179F320](j, v3);
      else
        v27 = *(id *)(v3 + 8 * j + 32);
      v28 = v27;
      if (objc_msgSend(v27, (SEL)p_base_prots[170]) == 19)
      {
        sub_1CB846FB4();
        sub_1CB846FD8();
        sub_1CB846FE4();
        sub_1CB846FC0();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v3 = v58;
    *(_QWORD *)&v58 = v1;
    if (v3 < 0)
    {
LABEL_62:
      swift_retain();
      v29 = sub_1CB847044();
      if (!v29)
        goto LABEL_63;
      goto LABEL_48;
    }
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v58 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_62;
  }
  if ((v3 & 0x4000000000000000) != 0)
    goto LABEL_62;
  v29 = *(_QWORD *)(v3 + 16);
  swift_retain();
  if (!v29)
  {
LABEL_63:
    swift_release();
    v39 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_64;
  }
LABEL_48:
  if (v29 < 1)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  j = 0;
  v1 = 0x1E0D99000uLL;
  do
  {
    if ((v3 & 0xC000000000000001) != 0)
      v30 = (id)MEMORY[0x1D179F320](j, v3);
    else
      v30 = *(id *)(v3 + 8 * j + 32);
    v31 = v30;
    v32 = objc_msgSend(v30, sel_payload);
    if (v32)
    {
      v33 = v32;
      v34 = sub_1CB845F94();
      v36 = v35;

      v37 = (void *)sub_1CB845F88();
      sub_1CB779034(v34, v36);
    }
    else
    {
      v37 = 0;
    }
    v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D99F00]), sel_initWithData_, v37);

    if (v38)
    {
      MEMORY[0x1D179EDF8]();
      if (*(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1CB846AA4();
      sub_1CB846AD4();
      sub_1CB846A74();
    }
    ++j;
  }
  while (v29 != j);
  swift_release();
  v39 = (_QWORD *)v58;
LABEL_64:
  swift_release();
  v3 = (uint64_t)sub_1CB7BCBC4(v57, (unint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v3 >> 62)
  {
LABEL_83:
    if (v3 >= 0)
      v39 = (_QWORD *)v6;
    else
      v39 = (_QWORD *)v3;
    swift_bridgeObjectRetain();
    v40 = sub_1CB847044();
    if (v40)
      goto LABEL_67;
LABEL_87:
    v43 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_88;
  }
  v40 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v40)
    goto LABEL_87;
LABEL_67:
  if (v40 < 1)
  {
    __break(1u);
    goto LABEL_95;
  }
  v42 = 0;
  v43 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if ((v3 & 0xC000000000000001) != 0)
      v44 = (id)MEMORY[0x1D179F320](v42, v3);
    else
      v44 = *(id *)(v3 + 8 * v42 + 32);
    v45 = v44;
    v46 = objc_msgSend(v44, sel_label);
    if (v46)
    {
      v47 = v46;
      v48 = sub_1CB8468A0();
      v50 = v49;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v43 = sub_1CB78F3EC(0, v43[2] + 1, 1, v43);
      v52 = v43[2];
      v51 = v43[3];
      if (v52 >= v51 >> 1)
        v43 = sub_1CB78F3EC((_QWORD *)(v51 > 1), v52 + 1, 1, v43);
      v43[2] = v52 + 1;
      v53 = &v43[2 * v52];
      v53[4] = v48;
      v53[5] = v50;
    }
    else
    {

    }
    ++v42;
  }
  while (v40 != v42);
LABEL_88:
  swift_bridgeObjectRelease_n();
  if (!v43[2])
  {
    swift_bridgeObjectRelease();
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v3 = type metadata accessor for NLXSpanLabels();
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v43;
  v39 = sub_1CB78F738(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  j = v39[2];
  v41 = v39[3];
  v1 = j + 1;
  if (j >= v41 >> 1)
LABEL_95:
    v39 = sub_1CB78F738((_QWORD *)(v41 > 1), v1, 1, v39);
  v59 = v3;
  v60 = sub_1CB7DC764();
  *(_QWORD *)&v58 = v40;
  v39[2] = v1;
  sub_1CB7780BC(&v58, (uint64_t)&v39[5 * j + 4]);
  return v39;
}

uint64_t type metadata accessor for NLXFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for NLXFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NLXFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of NLXFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t type metadata accessor for NLXSpanLabels()
{
  uint64_t result;

  result = qword_1EF99FC28;
  if (!qword_1EF99FC28)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1CB7DC764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF99FCE8;
  if (!qword_1EF99FCE8)
  {
    v1 = type metadata accessor for NLXSpanLabels();
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for TypedNamedFeature<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF99FCE8);
  }
  return result;
}

id sub_1CB7DC7AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  _QWORD v19[5];

  v2 = v1;
  v4 = (int *)type metadata accessor for UniversalCandidate(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1CB845D90();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1CB846018();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UniversalCandidateCoreDataRecord();
  v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
  v11 = (void *)sub_1CB84603C();
  objc_msgSend(v10, sel_setId_, v11);

  objc_msgSend(v10, sel_setScore_, *(double *)(v2 + v4[6]));
  objc_msgSend(v10, sel_setLastSurfaced_, *(double *)(v2 + v4[7]));
  sub_1CB846000();
  sub_1CB845FF4();
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  objc_msgSend(v10, sel_setLastUpdated_, v13);
  sub_1CB845DC0();
  swift_allocObject();
  sub_1CB845DB4();
  sub_1CB845D84();
  sub_1CB845D9C();
  v19[4] = *(_QWORD *)(v2 + v4[5]);
  sub_1CB7DE4D4();
  swift_retain();
  v14 = sub_1CB845DA8();
  v16 = v15;
  swift_release();
  v17 = (void *)sub_1CB845F88();
  objc_msgSend(v10, sel_setCandidateEntity_, v17);

  sub_1CB779034(v14, v16);
  swift_release();
  return v10;
}

uint64_t sub_1CB7DCBDC@<X0>(char *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  int *v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v45 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v45 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v45 - v15;
  v17 = objc_msgSend(v1, sel_id);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_6;
  }
  v18 = v17;
  sub_1CB846054();

  v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v19(v5, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_6:
    sub_1CB785B54((uint64_t)v5, &qword_1ED88D570);
    if (qword_1ED88E518 != -1)
      swift_once();
    v29 = sub_1CB8466D8();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED890248);
    v30 = sub_1CB8466C0();
    v31 = sub_1CB846C90();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_1CB771000, v30, v31, "UniversalSuggestionsCoreData: Failed to retrieve ID when reading UniversalCandidate.", v32, 2u);
      MEMORY[0x1D179FE84](v32, -1, -1);
    }

    goto LABEL_17;
  }
  v19(v16, v5, v6);
  objc_msgSend(v1, sel_score);
  v21 = v20;
  objc_msgSend(v1, sel_lastSurfaced);
  v23 = v22;
  v24 = objc_msgSend(v1, sel_candidateEntity);
  if (v24)
  {
    v25 = v24;
    v26 = sub_1CB845F94();
    v28 = v27;

    sub_1CB845D78();
    swift_allocObject();
    sub_1CB845D6C();
    sub_1CB7DE490();
    sub_1CB845D60();
    sub_1CB779034(v26, v28);
    swift_release();
    v41 = v49;
    v19(a1, v16, v6);
    v42 = (int *)type metadata accessor for UniversalCandidate(0);
    *(_QWORD *)&a1[v42[5]] = v41;
    *(_QWORD *)&a1[v42[6]] = v21;
    *(_QWORD *)&a1[v42[7]] = v23;
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v42 - 1) + 56))(a1, 0, 1, v42);
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v33 = sub_1CB8466D8();
  __swift_project_value_buffer(v33, (uint64_t)qword_1ED890248);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v16, v6);
  v34 = sub_1CB8466C0();
  v35 = sub_1CB846C90();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v49 = v37;
    v46 = a1;
    *(_DWORD *)v36 = 136315138;
    v47 = v36 + 4;
    sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v38 = sub_1CB847170();
    v48 = sub_1CB775A54(v38, v39, &v49);
    a1 = v46;
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    v40 = *(void (**)(char *, uint64_t))(v7 + 8);
    v40(v11, v6);
    _os_log_impl(&dword_1CB771000, v34, v35, "UniversalSuggestionsCoreData: Failed to retrieve entity when reading UniversalCandidate with ID: %s.", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v37, -1, -1);
    MEMORY[0x1D179FE84](v36, -1, -1);

  }
  else
  {

    v40 = *(void (**)(char *, uint64_t))(v7 + 8);
    v40(v11, v6);
  }
  v40(v16, v6);
LABEL_17:
  v44 = type metadata accessor for UniversalCandidate(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(a1, 1, 1, v44);
}

uint64_t sub_1CB7DD2F0@<X0>(char *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(char *, uint64_t);
  unsigned __int8 v56;
  uint64_t v57;
  unsigned __int8 v58;
  char *v59;
  int *v60;
  uint64_t v61;
  uint64_t *v62;
  void (*v64)(char *, uint64_t);
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;

  v2 = v1;
  v72 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for UniversalCandidate(0);
  v6 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CB846084();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v69 = (char *)&v67 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v67 - v20;
  MEMORY[0x1E0C80A78](v19);
  v71 = (char *)&v67 - v22;
  v23 = objc_msgSend(v2, sel_id);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_8;
  }
  v24 = v23;
  sub_1CB846054();

  v25 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v25(v11, v21, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_8:
    sub_1CB785B54((uint64_t)v11, &qword_1ED88D570);
    if (qword_1ED88E518 != -1)
      swift_once();
    v33 = sub_1CB8466D8();
    __swift_project_value_buffer(v33, (uint64_t)qword_1ED890248);
    v34 = sub_1CB8466C0();
    v35 = sub_1CB846C90();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_1CB771000, v34, v35, "UniversalSuggestionsCoreData: Failed to retrieve ID when reading UniversalRuntimeSuggestion.", v36, 2u);
      MEMORY[0x1D179FE84](v36, -1, -1);
    }

    goto LABEL_24;
  }
  v25(v71, v11, v12);
  v26 = objc_msgSend(v2, sel_queryEntityName);
  if (v26)
  {
    v27 = v26;
    v68 = sub_1CB8468A0();
    v29 = v28;

    v30 = objc_msgSend(v2, sel_topCandidate);
    if (v30)
    {
      v31 = v30;
      sub_1CB7DCBDC(v5);
      v32 = v70;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v70) != 1)
      {
        sub_1CB795744((uint64_t)v5, (uint64_t)v8);
        v56 = objc_msgSend(v2, sel_needsDisambiguation);
        v57 = v32;
        v58 = v56;

        v59 = v72;
        v25(v72, v71, v12);
        v60 = (int *)type metadata accessor for UniversalRuntimeSuggestion(0);
        v61 = (uint64_t)&v59[v60[6]];
        sub_1CB795744((uint64_t)v8, v61);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v61, 0, 1, v57);
        v62 = (uint64_t *)&v59[v60[5]];
        *v62 = v68;
        v62[1] = v29;
        v59[v60[7]] = v58;
        return (*(uint64_t (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v60 - 1) + 56))(v59, 0, 1, v60);
      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v71, v12);
      swift_bridgeObjectRelease();

      sub_1CB785B54((uint64_t)v5, &qword_1EF99D8F8);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_1ED88E518 != -1)
        swift_once();
      v46 = sub_1CB8466D8();
      __swift_project_value_buffer(v46, (uint64_t)qword_1ED890248);
      v47 = v69;
      v48 = v71;
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v69, v71, v12);
      v49 = sub_1CB8466C0();
      v50 = sub_1CB846C90();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        v52 = swift_slowAlloc();
        v74 = v52;
        *(_DWORD *)v51 = 136315138;
        sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v53 = sub_1CB847170();
        v73 = sub_1CB775A54(v53, v54, &v74);
        sub_1CB846E58();
        swift_bridgeObjectRelease();
        v55 = *(void (**)(char *, uint64_t))(v13 + 8);
        v55(v47, v12);
        _os_log_impl(&dword_1CB771000, v49, v50, "UniversalSuggestionsCoreData: Failed to retrieve top candidate when reading UniversalRuntimeSuggestion with ID: %s.", v51, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v52, -1, -1);
        MEMORY[0x1D179FE84](v51, -1, -1);

        v55(v71, v12);
      }
      else
      {

        v65 = *(void (**)(char *, uint64_t))(v13 + 8);
        v65(v47, v12);
        v65(v48, v12);
      }
    }
  }
  else
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v37 = sub_1CB8466D8();
    __swift_project_value_buffer(v37, (uint64_t)qword_1ED890248);
    v38 = v71;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v71, v12);
    v39 = sub_1CB8466C0();
    v40 = sub_1CB846C90();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v74 = v42;
      *(_DWORD *)v41 = 136315138;
      sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v43 = sub_1CB847170();
      v73 = sub_1CB775A54(v43, v44, &v74);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      v45 = *(void (**)(char *, uint64_t))(v13 + 8);
      v45(v16, v12);
      _os_log_impl(&dword_1CB771000, v39, v40, "UniversalSuggestionsCoreData: Failed to retrieve name of key entity when reading UniversalRuntimeSuggestion with ID: %s.", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v42, -1, -1);
      MEMORY[0x1D179FE84](v41, -1, -1);

      v45(v71, v12);
    }
    else
    {

      v64 = *(void (**)(char *, uint64_t))(v13 + 8);
      v64(v16, v12);
      v64(v38, v12);
    }
  }
LABEL_24:
  v66 = type metadata accessor for UniversalRuntimeSuggestion(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v72, 1, 1, v66);
}

uint64_t sub_1CB7DDA98(uint64_t a1, unint64_t a2)
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t i;
  id v10;
  void *v11;

  type metadata accessor for UniversalSuggestionCoreDataRecord();
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
  v5 = (void *)sub_1CB84603C();
  objc_msgSend(v4, sel_setId_, v5);

  type metadata accessor for UniversalSuggestion(0);
  v6 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(v4, sel_setQueryEntityName_, v6);

  if (!(a2 >> 62))
  {
    v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  swift_bridgeObjectRetain();
  result = sub_1CB847044();
  v7 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((a2 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1D179F320](i, a2);
      else
        v10 = *(id *)(a2 + 8 * i + 32);
      v11 = v10;
      objc_msgSend(v4, sel_addCandidatesObject_, v10);

    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB7DDBF4@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  id v31;
  id v32;
  void *v33;
  char *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char **v65;
  char *v66;
  uint64_t v67;
  char *v68;
  void (*v69)(uint64_t, char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78[32];
  uint64_t v79;
  _OWORD v80[2];
  __int128 v81;
  uint64_t v82;
  unint64_t v83;

  v2 = v1;
  v74 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D8F8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for UniversalCandidate(0);
  v6 = *(_QWORD *)(v77 - 8);
  v7 = MEMORY[0x1E0C80A78](v77);
  v76 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v75 = (uint64_t)&v67 - v9;
  v10 = sub_1CB845E8C();
  v72 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1CB846084();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v71 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v67 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v67 - v23;
  v73 = v2;
  v25 = objc_msgSend(v2, sel_id);
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    goto LABEL_16;
  }
  v26 = v25;
  sub_1CB846054();

  v27 = v22;
  v28 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v28(v15, v27, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
LABEL_16:
    sub_1CB785B54((uint64_t)v15, &qword_1ED88D570);
    if (qword_1ED88E518 != -1)
      swift_once();
    v38 = sub_1CB8466D8();
    __swift_project_value_buffer(v38, (uint64_t)qword_1ED890248);
    v39 = sub_1CB8466C0();
    v40 = sub_1CB846C90();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      _os_log_impl(&dword_1CB771000, v39, v40, "UniversalSuggestionsCoreData: Failed to retrieve ID when reading UniversalSuggestion.", v41, 2u);
      MEMORY[0x1D179FE84](v41, -1, -1);
    }

    goto LABEL_21;
  }
  v29 = v16;
  v30 = v24;
  v70 = v29;
  v69 = (void (*)(uint64_t, char *, uint64_t))v28;
  ((void (*)(char *, char *))v28)(v24, v15);
  v31 = v73;
  v32 = objc_msgSend(v73, sel_queryEntityName);
  if (!v32)
  {
    if (qword_1ED88E518 == -1)
    {
LABEL_38:
      v52 = sub_1CB8466D8();
      __swift_project_value_buffer(v52, (uint64_t)qword_1ED890248);
      v53 = v71;
      v54 = v70;
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v71, v30, v70);
      v55 = sub_1CB8466C0();
      v56 = sub_1CB846C90();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = (uint8_t *)swift_slowAlloc();
        v58 = swift_slowAlloc();
        *(_QWORD *)&v81 = v58;
        *(_DWORD *)v57 = 136315138;
        v77 = (uint64_t)v30;
        sub_1CB7762AC(&qword_1EF99E368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v59 = sub_1CB847170();
        *(_QWORD *)&v80[0] = sub_1CB775A54(v59, v60, (uint64_t *)&v81);
        sub_1CB846E58();
        swift_bridgeObjectRelease();
        v61 = *(void (**)(char *, uint64_t))(v17 + 8);
        v61(v53, v54);
        _os_log_impl(&dword_1CB771000, v55, v56, "UniversalSuggestionsCoreData: Failed to retrieve name of key entity when reading UniversalSuggestion with ID: %s.", v57, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D179FE84](v58, -1, -1);
        MEMORY[0x1D179FE84](v57, -1, -1);

        v62 = v77;
      }
      else
      {

        v61 = *(void (**)(char *, uint64_t))(v17 + 8);
        v61(v53, v54);
        v62 = (uint64_t)v30;
      }
      v61((char *)v62, v54);
LABEL_21:
      v42 = type metadata accessor for UniversalSuggestion(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v74, 1, 1, v42);
    }
LABEL_46:
    swift_once();
    goto LABEL_38;
  }
  v33 = v32;
  v71 = (char *)sub_1CB8468A0();
  v68 = v34;

  v35 = objc_msgSend(v31, sel_candidates);
  if (!v35)
  {
    sub_1CB7DE518();
    v35 = (id)MEMORY[0x1D179F020](MEMORY[0x1E0DEE9D8]);
  }
  v83 = MEMORY[0x1E0DEE9D8];
  v36 = v35;
  sub_1CB846C6C();
  v73 = v36;

  sub_1CB7762AC(&qword_1ED88BBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_1CB846E4C();
  while (v82)
  {
    sub_1CB777CAC(&v81, v80);
    sub_1CB778000((uint64_t)v80, (uint64_t)v78);
    type metadata accessor for UniversalCandidateCoreDataRecord();
    if ((swift_dynamicCast() & 1) == 0)
      v79 = 0;
    v37 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v80);
    if (v79)
    {
      MEMORY[0x1D179EDF8](v37);
      if (*(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1CB846AA4();
      sub_1CB846AD4();
      sub_1CB846A74();
    }
    sub_1CB846E4C();
  }
  (*(void (**)(char *, uint64_t))(v72 + 8))(v12, v10);
  v17 = v83;
  if (v83 >> 62)
  {
    swift_bridgeObjectRetain();
    v44 = sub_1CB847044();
    if (v44)
      goto LABEL_24;
  }
  else
  {
    v44 = *(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v44)
    {
LABEL_24:
      if (v44 >= 1)
      {
        v45 = 0;
        v46 = MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v17 & 0xC000000000000001) != 0)
            v47 = (id)MEMORY[0x1D179F320](v45, v17);
          else
            v47 = *(id *)(v17 + 8 * v45 + 32);
          v48 = v47;
          sub_1CB7DCBDC(v5);

          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v77) == 1)
          {
            sub_1CB785B54((uint64_t)v5, &qword_1EF99D8F8);
          }
          else
          {
            v49 = v75;
            sub_1CB795744((uint64_t)v5, v75);
            sub_1CB795744(v49, v76);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v46 = sub_1CB790498(0, *(_QWORD *)(v46 + 16) + 1, 1, v46);
            v51 = *(_QWORD *)(v46 + 16);
            v50 = *(_QWORD *)(v46 + 24);
            if (v51 >= v50 >> 1)
              v46 = sub_1CB790498(v50 > 1, v51 + 1, 1, v46);
            *(_QWORD *)(v46 + 16) = v51 + 1;
            sub_1CB795744(v76, v46+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v51);
          }
          ++v45;
        }
        while (v44 != v45);
        goto LABEL_44;
      }
      __break(1u);
      goto LABEL_46;
    }
  }
  v46 = MEMORY[0x1E0DEE9D8];
LABEL_44:

  swift_bridgeObjectRelease_n();
  v63 = v74;
  v69(v74, v30, v70);
  v64 = type metadata accessor for UniversalSuggestion(0);
  v65 = (char **)(v63 + *(int *)(v64 + 20));
  v66 = v68;
  *v65 = v71;
  v65[1] = v66;
  *(_QWORD *)(v63 + *(int *)(v64 + 24)) = v46;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v63, 0, 1, v64);
}

unint64_t sub_1CB7DE490()
{
  unint64_t result;

  result = qword_1EF99FCF0;
  if (!qword_1EF99FCF0)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for UniversalEntity, &type metadata for UniversalEntity);
    atomic_store(result, (unint64_t *)&qword_1EF99FCF0);
  }
  return result;
}

unint64_t sub_1CB7DE4D4()
{
  unint64_t result;

  result = qword_1EF99FCF8;
  if (!qword_1EF99FCF8)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for UniversalEntity, &type metadata for UniversalEntity);
    atomic_store(result, (unint64_t *)&qword_1EF99FCF8);
  }
  return result;
}

unint64_t sub_1CB7DE518()
{
  unint64_t result;

  result = qword_1EF99FD00;
  if (!qword_1EF99FD00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF99FD00);
  }
  return result;
}

uint64_t TypedNamedFeature.init(value:)(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96), a1);
  return v1;
}

char *TypedNamedFeature.init(value:)(char *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v13;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    v9 = sub_1CB846E40();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
    type metadata accessor for TypedNamedFeature(0, v4, *(_QWORD *)(v3 + 88), v10);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    v11 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v11(v8, a1, v4);
    v11(&v1[*(_QWORD *)(*(_QWORD *)v1 + 96)], v8, v4);
  }
  return v1;
}

uint64_t type metadata accessor for TypedNamedFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TypedNamedFeature);
}

uint64_t TypedNamedFeature.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return v0;
}

unint64_t sub_1CB7DE6C0()
{
  return static TypedNamedFeature.name.getter();
}

unint64_t sub_1CB7DE6E0()
{
  uint64_t v0;
  unint64_t v2;

  v2 = static TypedNamedFeature.name.getter();
  v0 = sub_1CB846954();
  sub_1CB7DE74C(v0);
  sub_1CB846954();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1CB7DE74C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = v1 + *(_QWORD *)(v6 + 96);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v9((char *)v14 - v10, v7, v2);
  sub_1CB84630C();
  if (swift_dynamicCast())
  {
    sub_1CB846300();
    v11 = sub_1CB846378();
    swift_release();
    v14[1] = v11;
    sub_1CB84648C();
    sub_1CB7DEDE8();
    v12 = sub_1CB847170();
    swift_release();
    swift_release();
  }
  else
  {
    v9(v5, v7, v2);
    return sub_1CB8468DC();
  }
  return v12;
}

uint64_t sub_1CB7DE898(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _BYTE v6[40];

  v2 = *v1;
  sub_1CB79CBA8(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BC30);
  if (!swift_dynamicCast())
    return 2;
  type metadata accessor for TypedNamedFeature(0, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v3);
  v4 = static TypedNamedFeature.== infix(_:_:)();
  swift_release();
  return v4 & 1;
}

uint64_t TypedNamedFeature.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 80) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), a1);
  return v2;
}

char *TypedNamedFeature.__allocating_init(value:)(char *a1)
{
  swift_allocObject();
  return TypedNamedFeature.init(value:)(a1);
}

unint64_t static TypedNamedFeature.name.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  char v26;
  char *v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;

  v1 = sub_1CB847374();
  v45 = *(_QWORD *)(v1 - 8);
  v46 = v1;
  MEMORY[0x1E0C80A78](v1);
  v44 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v0;
  type metadata accessor for TypedNamedFeature(255, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v3);
  swift_getMetatypeMetadata();
  v50 = sub_1CB8468F4();
  v51 = v4;
  sub_1CB78A5E8();
  v5 = sub_1CB846EAC();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 16);
  v49 = v6 != 0;
  v7 = v6 - v49;
  if (v6 == v49)
  {
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_32:
    v50 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A728);
    sub_1CB79D0B0();
    v42 = sub_1CB846858();
    swift_bridgeObjectRelease();
    return v42;
  }
  v56 = MEMORY[0x1E0DEE9D8];
  result = sub_1CB776040(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v10 = 0;
    v43 = v5;
    v11 = (uint64_t *)(v5 + 32 * v49 + 56);
    v47 = v6;
    v48 = v7;
    do
    {
      if (v49 + v10 >= v6 || v10 >= v7)
      {
        __break(1u);
        goto LABEL_33;
      }
      v13 = *(v11 - 3);
      v14 = *(v11 - 2);
      v15 = *(v11 - 1);
      v16 = *v11;
      swift_bridgeObjectRetain();
      v17 = MEMORY[0x1D179ECCC](v13, v14, v15, v16);
      v18 = v17;
      v20 = v19;
      v21 = HIBYTE(v19) & 0xF;
      if ((v19 & 0x2000000000000000) == 0)
        v21 = v17 & 0xFFFFFFFFFFFFLL;
      if (v21)
      {
        swift_bridgeObjectRetain();
        v22 = sub_1CB8469C0();
        v24 = v23;
        swift_bridgeObjectRelease();
        if ((sub_1CB846840() & 1) != 0)
        {
          result = sub_1CB7DEFC0(v22, v24);
          if ((result & 0x100000000) != 0)
            goto LABEL_34;
          v25 = v44;
          sub_1CB847380();
          v26 = sub_1CB84735C();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v46);
          if ((v26 & 1) != 0)
            goto LABEL_23;
        }
        if ((sub_1CB846834() & 1) == 0)
          goto LABEL_22;
        if ((sub_1CB846840() & 1) != 0)
        {
          result = sub_1CB7DEFC0(v22, v24);
          if ((result & 0x100000000) != 0)
            goto LABEL_35;
          v27 = v44;
          sub_1CB847380();
          v28 = sub_1CB847368();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v46);
          if ((v28 & 1) != 0)
            goto LABEL_23;
        }
        if ((sub_1CB846834() & 1) == 0 || (sub_1CB846828() & 1) == 0)
        {
LABEL_23:
          v29 = sub_1CB8468E8();
          v31 = v30;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          v32 = sub_1CB7F3CFC(1uLL, v18, v20);
          v34 = v33;
          v36 = v35;
          v38 = v37;
          swift_bridgeObjectRelease();
          v54 = v29;
          v55 = v31;
          v50 = v32;
          v51 = v34;
          v52 = v36;
          v53 = v38;
          sub_1CB79C888();
          swift_bridgeObjectRetain();
          sub_1CB846948();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = v47;
          swift_bridgeObjectRelease();
          v18 = v54;
          v20 = v55;
        }
        else
        {
LABEL_22:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v7 = v48;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v8 = v56;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1CB776040(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v56;
      }
      v40 = *(_QWORD *)(v8 + 16);
      v39 = *(_QWORD *)(v8 + 24);
      if (v40 >= v39 >> 1)
      {
        result = sub_1CB776040(v39 > 1, v40 + 1, 1);
        v8 = v56;
      }
      ++v10;
      *(_QWORD *)(v8 + 16) = v40 + 1;
      v41 = v8 + 16 * v40;
      *(_QWORD *)(v41 + 32) = v18;
      *(_QWORD *)(v41 + 40) = v20;
      v11 += 4;
    }
    while (v7 != v10);
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

unint64_t sub_1CB7DEDE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF99FD08;
  if (!qword_1EF99FD08)
  {
    v1 = sub_1CB84648C();
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DA29A8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF99FD08);
  }
  return result;
}

uint64_t TypedNamedFeature.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
}

uint64_t static TypedNamedFeature.== infix(_:_:)()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = static TypedNamedFeature.name.getter();
  v2 = v1;
  if (v0 == static TypedNamedFeature.name.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v5 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
      return 0;
  }
  return sub_1CB846864() & 1;
}

uint64_t TypedNamedFeature.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return swift_deallocClassInstance();
}

unint64_t sub_1CB7DEF54()
{
  return sub_1CB7DE6C0();
}

uint64_t sub_1CB7DEF74(uint64_t a1)
{
  return sub_1CB7DE898(a1);
}

uint64_t sub_1CB7DEF94()
{
  return static TypedNamedFeature.== infix(_:_:)();
}

unint64_t sub_1CB7DEFA0()
{
  return sub_1CB7DE6E0();
}

unint64_t sub_1CB7DEFC0(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unsigned int v5;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_1CB7DF09C(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v5 = sub_1CB846F24();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
        sub_1CB846F9C();
      v5 = sub_1CB846FA8();
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_1CB7DF09C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_1CB7DF138(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_1CB7DF1A4(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_1CB7DF138(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_1CB7E9F98(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_1CB7DF1A4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v7 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL))
          goto LABEL_14;
      }
      else
      {
        v12 = result >> 16;
        v6 = sub_1CB846F9C();
        v5 = v12;
        if (v12 == v10)
          goto LABEL_14;
      }
      if ((*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          v7 = v5 - 1;
          v8 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      v7 = v5;
      return v7 << 16;
    }
    v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v9 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v9)
      return sub_1CB846F18();
  }
  return result;
}

uint64_t sub_1CB7DF2B4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1D179FD88](&protocol conformance descriptor for TypedNamedFeature<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of NamedFeature.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NamedFeature.equalTo(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1CB7DF2F0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for TypedNamedFeature()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TypedNamedFeature.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of TypedNamedFeature.name.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of TypedNamedFeature.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of TypedNamedFeature.valueDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of TypedNamedFeature.equalTo(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

void **_s18SubscriptionStatusOwta(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t _s18SubscriptionStatusOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t _s18SubscriptionStatusOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *_s18SubscriptionStatusOMa()
{
  return &_s18SubscriptionStatusON;
}

uint64_t sub_1CB7DF4CC(uint64_t a1)
{
  sub_1CB846B04();
  return a1;
}

uint64_t KeyPathEvictor.init(keyPathGenerator:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t KeyPathEvictor.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_1CB7DF51C(void *a1, void *a2)
{
  uint64_t *v2;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v10;

  v5 = *v2;
  ((void (*)(void))v2[2])();
  v6 = a1;
  swift_getAtKeyPath();

  if (v10)
  {
    objc_msgSend(a2, sel_deleteObject_, v10);
    sub_1CB7DF698(*(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 88));
    swift_allocObject();
    v7 = sub_1CB846A80();
    *v8 = v10;
    swift_release();
    sub_1CB846B04();
  }
  else
  {
    v7 = sub_1CB846AB0();
    swift_release();
  }
  return v7;
}

uint64_t KeyPathEvictor.__allocating_init(keyPathGenerator:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t KeyPathEvictor.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7DF678(void *a1, void *a2)
{
  return sub_1CB7DF51C(a1, a2);
}

uint64_t sub_1CB7DF698(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
  else
    return sub_1CB84717C();
}

uint64_t sub_1CB7DF6E4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for KeyPathEvictor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeyPathEvictor);
}

uint64_t method lookup function for KeyPathEvictor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KeyPathEvictor.__allocating_init(keyPathGenerator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of KeyPathEvictor.evictRecord(record:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_1CB7DF764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D560);
  v3 = MEMORY[0x1E0C80A78](v57);
  v56 = (uint64_t)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v55 = (char *)v45 - v6;
  MEMORY[0x1E0C80A78](v5);
  v54 = (char *)v45 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D590);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (!v11)
    return v12;
  v45[1] = v1;
  v60 = MEMORY[0x1E0DEE9D8];
  sub_1CB776580(0, v11, 0);
  result = sub_1CB81B6CC(a1);
  v15 = result;
  v16 = 0;
  v17 = a1 + 64;
  v46 = a1 + 80;
  v47 = v11;
  v50 = v10;
  v51 = a1;
  v48 = v14;
  v49 = a1 + 64;
  while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(_BYTE *)(a1 + 32))
  {
    v20 = (unint64_t)v15 >> 6;
    if ((*(_QWORD *)(v17 + 8 * ((unint64_t)v15 >> 6)) & (1 << v15)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v14)
      goto LABEL_26;
    v58 = v16;
    v59 = 1 << v15;
    v21 = v57;
    v22 = *(int *)(v57 + 48);
    v23 = *(_QWORD *)(a1 + 48);
    v24 = sub_1CB846084();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = v23 + *(_QWORD *)(v25 + 72) * v15;
    v27 = a1;
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    v29 = (uint64_t)v54;
    v28(v54, v26, v24);
    v30 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v15);
    *(_QWORD *)(v29 + v22) = v30;
    v31 = v55;
    v28(v55, v29, v24);
    *(_QWORD *)&v31[*(int *)(v21 + 48)] = v30;
    v32 = (uint64_t)v31;
    v33 = v56;
    sub_1CB7D836C(v32, v56, &qword_1ED88D560);
    swift_bridgeObjectRetain_n();
    sub_1CB785B54(v29, &qword_1ED88D560);
    v34 = *(int *)(v21 + 48);
    v35 = (uint64_t)v50;
    v36 = *(_QWORD *)(v33 + v34);
    v37 = *(int *)(v53 + 48);
    v28(v50, v33, v24);
    *(_QWORD *)(v35 + v37) = v36;
    swift_bridgeObjectRetain();
    sub_1CB785B54(v33, &qword_1ED88D560);
    v12 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1CB776580(0, *(_QWORD *)(v12 + 16) + 1, 1);
      v12 = v60;
    }
    v39 = *(_QWORD *)(v12 + 16);
    v38 = *(_QWORD *)(v12 + 24);
    a1 = v51;
    if (v39 >= v38 >> 1)
    {
      sub_1CB776580(v38 > 1, v39 + 1, 1);
      v12 = v60;
    }
    *(_QWORD *)(v12 + 16) = v39 + 1;
    result = sub_1CB7D836C(v35, v12+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v39, &qword_1ED88D590);
    v18 = 1 << *(_BYTE *)(a1 + 32);
    if (v15 >= v18)
      goto LABEL_27;
    v17 = v49;
    v40 = *(_QWORD *)(v49 + 8 * v20);
    if ((v40 & v59) == 0)
      goto LABEL_28;
    LODWORD(v14) = v48;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v48)
      goto LABEL_29;
    v41 = v40 & (-2 << (v15 & 0x3F));
    if (v41)
    {
      v18 = __clz(__rbit64(v41)) | v15 & 0xFFFFFFFFFFFFFFC0;
      v19 = v47;
    }
    else
    {
      v42 = v20 + 1;
      v43 = (unint64_t)(v18 + 63) >> 6;
      v19 = v47;
      if (v20 + 1 < v43)
      {
        v44 = *(_QWORD *)(v49 + 8 * v42);
        if (v44)
        {
LABEL_22:
          v18 = __clz(__rbit64(v44)) + (v42 << 6);
        }
        else
        {
          while (v43 - 2 != v20)
          {
            v44 = *(_QWORD *)(v46 + 8 * v20++);
            if (v44)
            {
              v42 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v16 = v58 + 1;
    v15 = v18;
    if (v58 + 1 == v19)
      return v12;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1CB7DFB48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1CB846018();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, v1 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_turnsStartDateTime);
  objc_allocWithZone((Class)type metadata accessor for ScanTurnsSubscriber(0));
  v6 = swift_unknownObjectRetain();
  v7 = sub_1CB7E20C0(v6, (uint64_t)v4);
  swift_unknownObjectRelease();
  v8 = *(void **)(v1 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_inner);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_inner) = v7;
  v9 = v7;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_upstream), sel_subscribe_, v9);
}

id sub_1CB7DFCB0()
{
  return sub_1CB7E1DC4(_s9ScanTurnsCMa);
}

uint64_t sub_1CB7DFD1C()
{
  return _s9ScanTurnsCMa(0);
}

uint64_t _s9ScanTurnsCMa(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1ED88D600);
}

uint64_t sub_1CB7DFD38()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CB846018();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1CB7DFDBC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  id v9;
  objc_super v10;

  v2 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_downstream);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(void **)(v3 + 24);
  *(_QWORD *)(v3 + 24) = a1;
  v5 = a1;
  sub_1CB785AB8(v4);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D9E0);
  v8 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v8[qword_1EF99EE20] = v6;
  v10.receiver = v8;
  v10.super_class = v7;
  swift_retain();
  v9 = objc_msgSendSuper2(&v10, sel_init);
  objc_msgSend(*(id *)(*(_QWORD *)(v2 + 16) + 16), sel_receiveSubscription_, v9, v10.receiver, v10.super_class);

}

uint64_t sub_1CB7DFEC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  os_log_t *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  double v35;
  double v36;
  double v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  uint64_t v58;
  BOOL v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  os_log_t *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(os_log_t *, uint64_t);
  void (*v69)(os_log_t *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  os_log_t *v73;
  os_log_t *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t DynamicType;
  id v79;
  _QWORD v80[4];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v70 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v76 = (char *)&v70 - v12;
  MEMORY[0x1E0C80A78](v11);
  v77 = (char *)&v70 - v13;
  v14 = sub_1CB846084();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (os_log_t *)((char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v70 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (os_log_t *)((char *)&v70 - v22);
  sub_1CB778000(a1, (uint64_t)v80);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88ADE0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_8;
  v72 = v7;
  v73 = v18;
  v74 = v23;
  v75 = v15;
  v24 = v79;
  v25 = objc_msgSend(v79, sel_eventBody);
  v26 = v25;
  if (v25)
  {
    v27 = v24;
    v28 = v14;
    v29 = v2;
    v30 = objc_msgSend(v25, sel_eventData);

    v31 = sub_1CB845F94();
    v33 = v32;

    v2 = v29;
    v14 = v28;
    v24 = v27;
    v26 = (void *)sub_1CB845F88();
    sub_1CB779034(v31, v33);
  }
  v34 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A3C8]), sel_initWithData_, v26);

  if (!v34)
  {

LABEL_8:
    if (qword_1ED88E518 != -1)
      swift_once();
    v44 = sub_1CB8466D8();
    __swift_project_value_buffer(v44, (uint64_t)qword_1ED890248);
    sub_1CB778000(a1, (uint64_t)v80);
    v45 = sub_1CB8466C0();
    v46 = sub_1CB846C84();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = (void *)swift_slowAlloc();
      v79 = v48;
      *(_DWORD *)v47 = 136315138;
      __swift_project_boxed_opaque_existential_1(v80, v80[3]);
      DynamicType = swift_getDynamicType();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF9A0BD0);
      v49 = sub_1CB8468DC();
      DynamicType = sub_1CB775A54(v49, v50, (uint64_t *)&v79);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v80);
      _os_log_impl(&dword_1CB771000, v45, v46, "ScanTurnsSubscriber ignored unexpected input type %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v48, -1, -1);
      MEMORY[0x1D179FE84](v47, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v80);
    }

    return BPSDemandMax();
  }
  objc_msgSend(v24, sel_timestamp);
  v36 = v35;
  sub_1CB845FB8();
  v38 = v36 < v37;
  v70 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_eventTables;
  v71 = v2;
  swift_retain();
  v39 = (uint64_t)v76;
  sub_1CB7CAAA8(v38, v76);
  sub_1CB785AC8(v39, (uint64_t)v10, &qword_1ED88D570);
  v40 = v75;
  v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
  if (v41(v10, 1, v14) == 1)
  {
    v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
    v43 = (uint64_t)v77;
    v42(v77, 1, 1, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v21, v10, v14);
    swift_retain();
    v43 = (uint64_t)v77;
    sub_1CB7CA688((uint64_t)v21, (uint64_t)v77);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v14);
    v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
    v42((char *)v43, 0, 1, v14);
    swift_release();
  }
  sub_1CB785B54(v39, &qword_1ED88D570);
  swift_release();
  if (v41((char *)v43, 1, v14) == 1)
  {
    sub_1CB785B54(v43, &qword_1ED88D570);
    v51 = BPSDemandMax();

    return v51;
  }
  v77 = v34;
  v53 = (uint64_t)v74;
  v76 = *(char **)(v40 + 32);
  ((void (*)(os_log_t *, uint64_t, uint64_t))v76)(v74, v43, v14);
  v54 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_endpointer;
  v55 = v71;
  swift_retain();
  objc_msgSend(v24, sel_timestamp);
  sub_1CB8296A8(v53, v56);
  swift_release();
  swift_retain();
  objc_msgSend(v24, sel_timestamp);
  v58 = v40;
  v59 = sub_1CB829820(v57);
  swift_release();
  if (!v59)
  {
LABEL_24:
    v51 = BPSDemandMax();

    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v53, v14);
    return v51;
  }
  v60 = *(_QWORD **)(*(_QWORD *)(v55 + v54) + 32);
  v61 = v60[2];
  if (v61)
  {
    v62 = (uint64_t)v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v72, v61 + *(_QWORD *)(*(_QWORD *)v61 + 88), v14);
    v63 = 0;
  }
  else
  {
    v63 = 1;
    v62 = (uint64_t)v72;
  }
  v64 = v73;
  v65 = v77;
  v42((char *)v62, v63, 1, v14);
  swift_retain();
  sub_1CB7E1FA0(v60);
  swift_release();
  if (v41((char *)v62, 1, v14) == 1)
  {
    sub_1CB785B54(v62, &qword_1ED88D570);
    v53 = (uint64_t)v74;
    v58 = v75;
    goto LABEL_24;
  }
  ((void (*)(os_log_t *, uint64_t, uint64_t))v76)(v64, v62, v14);
  type metadata accessor for SignalExtracting();
  v66 = swift_retain();
  v67 = sub_1CB7F4D64(v66, v64);
  swift_release();
  sub_1CB7E19E4(v67);
  if (v67)
  {
    v51 = (uint64_t)sub_1CB7EF3D4(v67);

    v68 = *(void (**)(os_log_t *, uint64_t))(v75 + 8);
    v68(v64, v14);
    v68(v74, v14);
    swift_release();
  }
  else
  {
    v51 = BPSDemandMax();

    v69 = *(void (**)(os_log_t *, uint64_t))(v75 + 8);
    v69(v64, v14);
    v69(v74, v14);
  }
  return v51;
}

uint64_t sub_1CB7E0698(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  sub_1CB7E0A14(a1);
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = sub_1CB8466D8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED890248);
  v3 = a1;
  v4 = sub_1CB8466C0();
  v5 = sub_1CB846C84();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v11 = v7;
    *(_DWORD *)v6 = 136315138;
    objc_msgSend(v3, sel_state);
    type metadata accessor for BPSCompletionState(0);
    v8 = sub_1CB8468DC();
    sub_1CB775A54(v8, v9, &v11);
    sub_1CB846E58();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CB771000, v4, v5, "ScanTurns received a completion, state=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v7, -1, -1);
    MEMORY[0x1D179FE84](v6, -1, -1);

  }
  else
  {

  }
  return sub_1CB7E0DFC(2);
}

uint64_t sub_1CB7E08BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  v1 = *(_QWORD *)(*(_QWORD *)(v0
                             + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_downstream)
                 + 16);
  v2 = *(void **)(v1 + 24);
  if ((unint64_t)v2 >= 2)
    v3 = v2;
  else
    v3 = 0;
  *(_QWORD *)(v1 + 24) = 1;
  sub_1CB785AB8(v2);
  objc_msgSend(v3, sel_cancel);

  if (qword_1ED88E518 != -1)
    swift_once();
  v4 = sub_1CB8466D8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED890248);
  v5 = sub_1CB8466C0();
  v6 = sub_1CB846C84();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1CB771000, v5, v6, "ScanTurns received a cancellation", v7, 2u);
    MEMORY[0x1D179FE84](v7, -1, -1);
  }

  return sub_1CB7E0DFC(2);
}

uint64_t sub_1CB7E0A14(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_t *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t inited;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  __int128 v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CB846084();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (os_log_t *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (objc_msgSend(a1, sel_state) == (id)1)
  {
    v11 = a1;
    return sub_1CB7EF4C0(v11);
  }
  else
  {
    v32 = a1;
    v12 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_endpointer;
    v37 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_eventTables;
    v13 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_downstream;
    v36 = *MEMORY[0x1E0D02400];
    v34 = (id)*MEMORY[0x1E0D02408];
    v33 = xmmword_1CB848A60;
    v35 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_endpointer;
    while (1)
    {
      v14 = *(_QWORD **)(*(_QWORD *)(v2 + v12) + 32);
      v15 = v14[2];
      if (v15)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, v15 + *(_QWORD *)(*(_QWORD *)v15 + 88), v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
        v16 = swift_retain();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
        v16 = 0;
      }
      v14[2] = v16;
      swift_retain();
      result = swift_release();
      v18 = v14[4];
      v19 = __OFSUB__(v18, 1);
      v20 = v18 - 1;
      if (v19)
        break;
      v14[4] = v20 & ~(v20 >> 63);
      if (!v14[2])
      {
        v14[3] = 0;
        swift_release();
      }
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_1CB785B54((uint64_t)v6, &qword_1ED88D570);
        v11 = v32;
        return sub_1CB7EF4C0(v11);
      }
      (*(void (**)(os_log_t *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      type metadata accessor for SignalExtracting();
      v21 = swift_retain();
      v22 = sub_1CB7F4D64(v21, v10);
      swift_release();
      sub_1CB7E19E4(v22);
      if (v22)
      {
        v23 = *(_QWORD *)(v2 + v13);
        v24 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v24 + 32) == v36)
        {
          swift_retain();
          sub_1CB8295D0(v22);
          swift_release();
          (*(void (**)(os_log_t *, uint64_t))(v8 + 8))(v10, v7);
          swift_release();
        }
        else
        {
          v25 = v13;
          v26 = objc_msgSend(*(id *)(v24 + 16), sel_receiveInput_, v22);
          v27 = *(_QWORD *)(v23 + 16);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DE70);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v33;
          *(_QWORD *)(inited + 32) = v26;
          v29 = *(id *)(v27 + 32);
          *(_QWORD *)(inited + 40) = v29;
          if (v26 == v34 || v29 == v34)
          {
            v30 = (uint64_t)v34;
            swift_retain();
          }
          else
          {
            swift_retain();
            v30 = BPSDemandMax();
          }
          swift_bridgeObjectRelease();
          *(_QWORD *)(v27 + 32) = v30;
          swift_release();
          (*(void (**)(os_log_t *, uint64_t))(v8 + 8))(v10, v7);
          swift_release();
          v13 = v25;
          v12 = v35;
        }
      }
      else
      {
        (*(void (**)(os_log_t *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1CB7E0DFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  size_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __CFString *v39;
  __CFString *v40;
  unsigned int v41;
  __CFString *v42;
  __CFString *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v75;
  char *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t i;
  uint64_t v81;
  _QWORD v82[3];
  uint64_t v83;
  char *v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CB846084();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v87 = (char *)v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v84 = (char *)v82 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D590);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v86 = (char *)v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v82 - v15;
  v17 = *(_QWORD *)(*(_QWORD *)(v1
                              + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_eventTables)
                  + 24);
  swift_beginAccess();
  v18 = *(_QWORD *)(*(_QWORD *)(v17 + 16) + 16);
  v83 = a1;
  if (v18 && (sub_1CB779AD4(a1), (v19 & 1) != 0))
  {
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D698);
    *(_QWORD *)(swift_allocObject() + 16) = MEMORY[0x1E0DEE9E0];
  }
  swift_beginAccess();
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1CB7DF764(v20);
  v82[2] = 0;
  swift_release();
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v23 = v21 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v85 = *(_QWORD *)(v12 + 72);
    v82[1] = v21;
    swift_bridgeObjectRetain();
    v24 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1CB785AC8(v23, (uint64_t)v16, &qword_1ED88D590);
      v25 = v86;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v86, v16, v6);
      v26 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v26(v5, v25, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      sub_1CB785B54((uint64_t)v16, &qword_1ED88D590);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        sub_1CB785B54((uint64_t)v5, &qword_1ED88D570);
      }
      else
      {
        v27 = (uint64_t)v84;
        v26(v84, v5, v6);
        v26(v87, (char *)v27, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v24 = sub_1CB78F4F8(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
        v29 = *(_QWORD *)(v24 + 16);
        v28 = *(_QWORD *)(v24 + 24);
        if (v29 >= v28 >> 1)
          v24 = sub_1CB78F4F8(v28 > 1, v29 + 1, 1, v24);
        *(_QWORD *)(v24 + 16) = v29 + 1;
        v26((char *)(v24+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v29), v87, v6);
      }
      v23 += v85;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
  }
  v30 = sub_1CB780BBC(v24);
  swift_bridgeObjectRelease();
  v31 = sub_1CB7F2A8C(v30);
  swift_bridgeObjectRelease();
  if (qword_1ED88E518 != -1)
    goto LABEL_100;
  while (1)
  {
    v32 = sub_1CB8466D8();
    __swift_project_value_buffer(v32, (uint64_t)qword_1ED890248);
    swift_retain();
    v33 = sub_1CB8466C0();
    v34 = sub_1CB846C84();
    v35 = os_log_type_enabled(v33, v34);
    v86 = (char *)v31;
    if (v35)
    {
      v36 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      *(_DWORD *)v36 = 134218242;
      v88 = *(_QWORD *)(v31 + 16);
      v89 = v37;
      sub_1CB846E58();
      swift_release();
      *(_WORD *)(v36 + 12) = 2080;
      if (v83 > 0x36)
      {
        v39 = CFSTR("COMPONENTNAME_UNKNOWN");
        v40 = CFSTR("COMPONENTNAME_UNKNOWN");
      }
      else
      {
        v38 = (int)v83;
        v39 = off_1E868FC30[v38];
        v40 = off_1E868FDE8[v38];
      }
      v42 = v39;
      v43 = v40;
      v44 = sub_1CB8468A0();
      v46 = v45;

      v88 = sub_1CB775A54(v44, v46, &v89);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CB771000, v33, v34, "ScanTurns found %ld unmatched %s id(s) remaining in the event table", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v37, -1, -1);
      MEMORY[0x1D179FE84](v36, -1, -1);

      v41 = v83;
      v31 = (size_t)v86;
    }
    else
    {

      swift_release();
      v41 = v83;
    }
    v47 = *(char **)(v31 + 16);
    v87 = v47;
    if (v47)
    {
      v48 = 0;
      v49 = 0;
      while (1)
      {
        v50 = v48 + 1;
        if (__OFADD__(v48, 1))
          break;
        v51 = __OFADD__(v49, 8);
        v49 += 8;
        if (v51)
          v49 = 0x7FFFFFFFFFFFFFFFLL;
        ++v48;
        if (v49 >= (uint64_t)v47)
          goto LABEL_32;
      }
      __break(1u);
      goto LABEL_92;
    }
    v50 = 0;
LABEL_32:
    v89 = MEMORY[0x1E0DEE9D8];
    result = sub_1CB776564(0, v50 & ~(v50 >> 63), 0);
    if (v50 < 0)
    {
      __break(1u);
      return result;
    }
    v53 = v89;
    if (!v50)
      break;
    v54 = 0;
    v55 = 0;
    v85 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v84 = (char *)(v31 + v85);
    v56 = 8;
    v57 = v87;
    while (1)
    {
      v7 = (uint64_t)v57 >= v56 ? v56 : (uint64_t)v57;
      if (v55 >= (unint64_t)v57)
        break;
      if (v55 == 0x7FFFFFFFFFFFFFF8)
        goto LABEL_93;
      if ((uint64_t)v57 >= v55 + 8)
        v58 = v55 + 8;
      else
        v58 = (uint64_t)v57;
      if (v58 < v55)
        goto LABEL_94;
      v59 = *(_QWORD *)(v31 + 16);
      if (v59 < v55 || (uint64_t)v59 < v58)
        goto LABEL_95;
      sub_1CB84726C();
      swift_retain_n();
      v60 = swift_dynamicCastClass();
      if (!v60)
      {
        swift_release();
        v60 = MEMORY[0x1E0DEE9D8];
      }
      v61 = v7 + v54;
      v62 = *(_QWORD *)(v60 + 16);
      swift_release();
      if (v61 == v62)
      {
        v63 = swift_dynamicCastClass();
        if (!v63)
        {
          swift_release();
          v63 = MEMORY[0x1E0DEE9D8];
        }
      }
      else
      {
        swift_release();
        v63 = sub_1CB7F28C4(v31, (uint64_t)v84, v55, (2 * v58) | 1);
      }
      swift_release();
      v89 = v53;
      v65 = *(_QWORD *)(v53 + 16);
      v64 = *(_QWORD *)(v53 + 24);
      v7 = v65 + 1;
      if (v65 >= v64 >> 1)
      {
        sub_1CB776564(v64 > 1, v65 + 1, 1);
        v53 = v89;
      }
      *(_QWORD *)(v53 + 16) = v7;
      *(_QWORD *)(v53 + 8 * v65 + 32) = v63;
      v56 += 8;
      v54 -= 8;
      v55 += 8;
      --v50;
      v57 = v87;
      if (!v50)
      {
        if (v55 < (uint64_t)v87)
        {
          v66 = v85;
          goto LABEL_60;
        }
LABEL_84:
        swift_release();
        v41 = v83;
        v79 = *(_QWORD *)(v53 + 16);
        if (!v79)
          return swift_release();
        goto LABEL_85;
      }
    }
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    swift_once();
  }
  v57 = v87;
  if (v87)
  {
    v55 = 0;
    v66 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
LABEL_60:
    v85 = v31 + v66;
    v67 = v55 + 8;
    v68 = -v55;
    v69 = v55;
    while (1)
    {
      v70 = (uint64_t)v57 >= v67 ? (char *)v67 : v57;
      v71 = v69 + 8;
      if (__OFADD__(v69, 8))
        goto LABEL_96;
      if ((uint64_t)v57 >= v71)
        v72 = v69 + 8;
      else
        v72 = (uint64_t)v57;
      if (v72 < v69)
        goto LABEL_97;
      if (v55 < 0)
        goto LABEL_98;
      v73 = *(_QWORD *)(v31 + 16);
      if (v73 < v69 || (uint64_t)v73 < v72)
        goto LABEL_99;
      sub_1CB84726C();
      swift_retain_n();
      v75 = swift_dynamicCastClass();
      if (!v75)
      {
        swift_release();
        v75 = MEMORY[0x1E0DEE9D8];
      }
      v76 = *(char **)(v75 + 16);
      swift_release();
      if (&v70[v68] == v76)
      {
        v31 = (size_t)v86;
        v7 = swift_dynamicCastClass();
        if (!v7)
        {
          swift_release();
          v7 = MEMORY[0x1E0DEE9D8];
        }
      }
      else
      {
        v31 = (size_t)v86;
        swift_release();
        v7 = sub_1CB7F28C4(v31, v85, v69, (2 * v72) | 1);
      }
      swift_release();
      v89 = v53;
      v78 = *(_QWORD *)(v53 + 16);
      v77 = *(_QWORD *)(v53 + 24);
      if (v78 >= v77 >> 1)
      {
        sub_1CB776564(v77 > 1, v78 + 1, 1);
        v53 = v89;
      }
      *(_QWORD *)(v53 + 16) = v78 + 1;
      *(_QWORD *)(v53 + 8 * v78 + 32) = v7;
      v67 += 8;
      v68 -= 8;
      v69 += 8;
      v57 = v87;
      if (v71 >= (uint64_t)v87)
        goto LABEL_84;
    }
  }
  swift_release();
  v79 = *(_QWORD *)(v53 + 16);
  if (v79)
  {
LABEL_85:
    swift_retain();
    for (i = 0; i != v79; ++i)
    {
      v81 = *(_QWORD *)(v53 + 8 * i + 32);
      v89 = v81;
      sub_1CB7E1770((uint64_t)&v89, v41);
    }
    swift_release();
  }
  return swift_release();
}

void sub_1CB7E1770(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __CFString *v9;
  __CFString *v10;
  __CFString *v11;
  __CFString *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  if (qword_1ED88E518 != -1)
    swift_once();
  v3 = sub_1CB8466D8();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED890248);
  swift_bridgeObjectRetain_n();
  v4 = sub_1CB8466C0();
  v5 = sub_1CB846C84();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v21 = v7;
    *(_DWORD *)v6 = 136315394;
    if (a2 > 0x36)
    {
      v9 = CFSTR("COMPONENTNAME_UNKNOWN");
      v10 = CFSTR("COMPONENTNAME_UNKNOWN");
    }
    else
    {
      v8 = (int)a2;
      v9 = off_1E868FFA0[v8];
      v10 = off_1E8690158[v8];
    }
    v11 = v9;
    v12 = v10;
    v13 = sub_1CB8468A0();
    v15 = v14;

    sub_1CB775A54(v13, v15, &v21);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v16 = sub_1CB846084();
    v17 = swift_bridgeObjectRetain();
    v18 = MEMORY[0x1D179EE28](v17, v16);
    v20 = v19;
    swift_bridgeObjectRelease();
    sub_1CB775A54(v18, v20, &v21);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CB771000, v4, v5, "  Could not find a matching request (%s): %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v7, -1, -1);
    MEMORY[0x1D179FE84](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1CB7E19E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  void *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v31 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v31 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v31 - v12;
  v14 = sub_1CB846084();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v34 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v31 - v18;
  v32 = v1;
  v20 = v1
      + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_previousTurnId;
  swift_beginAccess();
  sub_1CB785AC8(v20, (uint64_t)v13, &qword_1ED88D570);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v21(v13, 1, v14) == 1)
  {
    sub_1CB785B54((uint64_t)v13, &qword_1ED88D570);
    if (a1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v6, a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v14);
      v22 = 0;
    }
    else
    {
      v22 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v6, v22, 1, v14);
    swift_beginAccess();
    sub_1CB7E1F58((uint64_t)v6, v20);
    return swift_endAccess();
  }
  v23 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v23(v19, v13, v14);
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v14);
    goto LABEL_12;
  }
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v24(v11, a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v14);
  v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56);
  v25(v11, 0, 1, v14);
  if (v21(v11, 1, v14) == 1)
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    return sub_1CB785B54((uint64_t)v11, &qword_1ED88D570);
  }
  v23(v34, v11, v14);
  sub_1CB7BDB94();
  if ((sub_1CB846864() & 1) == 0)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    v26 = (void *)sub_1CB8259B4((uint64_t)v19);
    swift_endAccess();
    swift_release();
    swift_release();

  }
  v27 = (uint64_t)v33;
  v28 = v34;
  v24(v33, (uint64_t)v34, v14);
  v25((char *)v27, 0, 1, v14);
  swift_beginAccess();
  sub_1CB7E1F58(v27, v20);
  swift_endAccess();
  v29 = *(void (**)(char *, uint64_t))(v15 + 8);
  v29(v28, v14);
  return ((uint64_t (*)(char *, uint64_t))v29)(v19, v14);
}

id sub_1CB7E1DB8()
{
  return sub_1CB7E1DC4(type metadata accessor for ScanTurnsSubscriber);
}

id sub_1CB7E1DC4(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1CB7E1E98()
{
  return type metadata accessor for ScanTurnsSubscriber(0);
}

uint64_t type metadata accessor for ScanTurnsSubscriber(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED88DAC8);
}

void sub_1CB7E1EB4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1CB846018();
  if (v0 <= 0x3F)
  {
    sub_1CB7B4A94();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1CB7E1F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CB7E1FA0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  if (a1[2])
    v2 = swift_retain();
  else
    v2 = 0;
  a1[2] = v2;
  result = swift_release();
  v4 = a1[4];
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    a1[4] = v6 & ~(v6 >> 63);
    if (!a1[2])
    {
      a1[3] = 0;
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1CB7E201C(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v6 = result;
    v7 = *(_QWORD *)(a5 + 48);
    v8 = sub_1CB846084();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a2, v8);
    return swift_bridgeObjectRetain();
  }
LABEL_8:
  __break(1u);
  return result;
}

id sub_1CB7E20C0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  objc_super v21;

  v3 = v2;
  *(_QWORD *)&v2[OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_innerSubscription] = 0;
  v5 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_eventTables;
  type metadata accessor for EventTables();
  swift_allocObject();
  *(_QWORD *)&v2[v5] = sub_1CB7CDA4C();
  v6 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_endpointer;
  type metadata accessor for RequestStreamEndpointer();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x1E0DEE9E8];
  v7[2] = 0x404E000000000000;
  v7[3] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88DD78);
  v9 = (_QWORD *)swift_allocObject();
  v9[3] = 0;
  v9[4] = 0;
  v9[2] = 0;
  v10 = MEMORY[0x1E0DEE9E0];
  v7[4] = v9;
  v7[5] = v10;
  *(_QWORD *)&v3[v6] = v7;
  v11 = &v3[OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_previousTurnId];
  v12 = sub_1CB846084();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88D830);
  v13 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88D948);
  swift_allocObject();
  v14 = v3;
  v15 = swift_unknownObjectRetain();
  *(_QWORD *)(v13 + 16) = sub_1CB7EF5A4(v15);
  *(_QWORD *)&v14[OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_downstream] = v13;
  v16 = &v14[OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_turnsStartDateTime];
  v17 = sub_1CB846018();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a2, v17);

  v21.receiver = v14;
  v21.super_class = (Class)type metadata accessor for ScanTurnsSubscriber(0);
  v19 = objc_msgSendSuper2(&v21, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a2, v17);
  return v19;
}

uint64_t sub_1CB7E2284(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  char v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v7 = a1;
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1CB7763A8(0, v4, 0);
  v5 = v31;
  result = sub_1CB7EAAB0(v7);
  v9 = result;
  v11 = v10;
  v13 = v12 & 1;
  v24 = a3;
  v25 = v7 + 56;
  v23 = v7;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v7 + 32))
  {
    if (((*(_QWORD *)(v25 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(v7 + 36) != (_DWORD)v11)
      goto LABEL_14;
    v27 = v13;
    v14 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = a3(0);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v16;
    v31 = v5;
    v20 = *(_QWORD *)(v5 + 16);
    v19 = *(_QWORD *)(v5 + 24);
    swift_bridgeObjectRetain();
    if (v20 >= v19 >> 1)
    {
      sub_1CB7763A8(v19 > 1, v20 + 1, 1);
      v5 = v31;
    }
    v29 = v17;
    v30 = sub_1CB7762AC(a4, v24, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
    *(_QWORD *)&v28 = v18;
    *(_QWORD *)(v5 + 16) = v20 + 1;
    sub_1CB7780BC(&v28, v5 + 40 * v20 + 32);
    result = sub_1CB7EAB54(v9, v11, v27 & 1, v23);
    v9 = result;
    v11 = v21;
    v13 = v22 & 1;
    --v4;
    a3 = v24;
    v7 = v23;
    if (!v4)
    {
      sub_1CB7E7A70(result, v21, v13);
      return v5;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1CB7E2460(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1CB776040(0, v2, 0);
    v4 = (_BYTE *)(a1 + 32);
    result = v10;
    do
    {
      if (*v4)
        v5 = 0x746E65746E6F63;
      else
        v5 = 0x6E65697069636572;
      if (*v4)
        v6 = 0xE700000000000000;
      else
        v6 = 0xE900000000000074;
      v11 = result;
      v8 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1CB776040(v7 > 1, v8 + 1, 1);
        result = v11;
      }
      *(_QWORD *)(result + 16) = v8 + 1;
      v9 = result + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v6;
      ++v4;
      --v2;
    }
    while (v2);
  }
  return result;
}

_QWORD *sub_1CB7E2588(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v21;
  unint64_t v22;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v2 = sub_1CB847044();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v22 = v1 & 0xC000000000000001;
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v4 = 4;
      v21 = v1;
      while (1)
      {
        v5 = v4 - 4;
        if (v22)
        {
          v6 = (id)MEMORY[0x1D179F320](v4 - 4, v1);
          v7 = v4 - 3;
          if (__OFADD__(v5, 1))
            goto LABEL_19;
        }
        else
        {
          v6 = *(id *)(v1 + 8 * v4);
          v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        v8 = v6;
        v9 = objc_msgSend(v8, sel_flowState);
        if (v9)
        {
          v10 = v9;
          v11 = objc_msgSend(v10, sel_currentTaskName);
          if (v11)
          {
            v12 = v11;
            v13 = v2;
            v14 = sub_1CB8468A0();
            v16 = v15;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v3 = sub_1CB78F3EC(0, v3[2] + 1, 1, v3);
            v18 = v3[2];
            v17 = v3[3];
            if (v18 >= v17 >> 1)
              v3 = sub_1CB78F3EC((_QWORD *)(v17 > 1), v18 + 1, 1, v3);
            v3[2] = v18 + 1;
            v19 = &v3[2 * v18];
            v19[4] = v14;
            v19[5] = v16;
            v2 = v13;
            v1 = v21;
          }
          else
          {

          }
        }
        else
        {

        }
        ++v4;
        if (v7 == v2)
          goto LABEL_22;
      }
    }
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1CB7E2780(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[32];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1CB776040(0, v2, 0);
  v3 = v12;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_1CB778000(i, (uint64_t)v11);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CB776040(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v12;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1CB776040(v5 > 1, v6 + 1, 1);
        v3 = v12;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      v7 = v3 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1CB7E28C4(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  char v8;
  _BYTE v9[32];
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  sub_1CB7763F0(0, v2, 0);
  v3 = v10;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_1CB778000(i, (uint64_t)v9);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CB7763F0(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v10;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1CB7763F0(v5 > 1, v6 + 1, 1);
        v3 = v10;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      *(_BYTE *)(v3 + v6 + 32) = v8 & 1;
      if (!--v2)
        return v3;
    }
    swift_release();
    return 0;
  }
  return v3;
}

uint64_t FlowClientEventFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t FlowClientEventFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

unint64_t PromptEventType.Ending.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0xD000000000000010;
}

unint64_t PromptEventType.Beginning.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0xD000000000000012;
}

unint64_t FlowTaskStateType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000019;
  else
    return 0xD00000000000001FLL;
}

void sub_1CB7E2AD8(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  char v10;
  id v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    goto LABEL_16;
  v4 = *(_QWORD *)(a1 + 8 * v3 + 24);
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_4;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v5 = sub_1CB847044();
  if (!v5)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    v10 = 2;
LABEL_17:
    *a2 = v10;
    return;
  }
LABEL_4:
  v6 = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_19:
    v7 = (id)MEMORY[0x1D179F320](v6, v4);
LABEL_9:
    v8 = v7;
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v8, sel_gaveOptions);

    if (v9)
    {

      v10 = 1;
    }
    else
    {
      v11 = objc_msgSend(v8, sel_offered);

      if (v11)
        v10 = 0;
      else
        v10 = 3;
    }
    goto LABEL_17;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v4 + 8 * v6 + 32);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1CB7E2C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1CB8472E4();
    sub_1CB846924();
    v6 = sub_1CB847314();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1CB8471A0() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1CB8471A0() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t PromptResult.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x454C4C45434E4143;
  else
    return 0x414D5249464E4F43;
}

SiriPrivateLearningAnalytics::FlowTaskResolvedSlotType_optional __swiftcall FlowTaskResolvedSlotType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriPrivateLearningAnalytics::FlowTaskResolvedSlotType_optional)sub_1CB7E4528(v1);
}

uint64_t FlowTaskResolvedSlotType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E65746E6F63;
  else
    return 0x6E65697069636572;
}

uint64_t ResolvedSlots.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_1CB7E2E30(unint64_t a1)
{
  __int128 *v1;
  uint64_t i;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __objc2_prot_list **p_base_prots;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __objc2_prot_list **v23;
  __objc2_prot_list **v24;
  __objc2_prot_list **v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  __objc2_prot_list **v33;
  __objc2_prot_list **v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __objc2_prot_list **v42;
  __int128 *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  id v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t j;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t k;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t m;
  id v67;
  void *v68;
  id v69;
  _QWORD *v70;
  uint64_t HasFlowEvents;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 *v86;
  char v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v4 = a1;
  v86 = *(__int128 **)v1;
  *(_QWORD *)&v91 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1CB847044();
    p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
    if (v5)
    {
LABEL_3:
      v7 = sub_1CB777FA8(0, (unint64_t *)&unk_1ED88BF40);
      if (v5 < 1)
      {
        __break(1u);
        goto LABEL_132;
      }
      v8 = v7;
      for (i = 0; i != v5; ++i)
      {
        if ((v4 & 0xC000000000000001) != 0)
          v9 = (__int128 *)MEMORY[0x1D179F320](i, v4);
        else
          v9 = (__int128 *)*(id *)(v4 + 8 * i + 32);
        v1 = v9;
        objc_msgSend(v9, (SEL)p_base_prots[170]);
        v10 = sub_1CB846D80();
        if (v10 && v8 == v10)
        {
          v11 = objc_msgSend(v1, sel_payload);
          if (v11)
          {
            v12 = v11;
            v13 = sub_1CB845F94();
            v15 = v14;

            v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            v17 = (void *)sub_1CB845F88();
            sub_1CB779034(v13, v15);
          }
          else
          {
            v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            v17 = 0;
          }
          v18 = objc_msgSend(v16, sel_initWithData_, v17);

          if (v18)
          {
            objc_opt_self();
            v19 = swift_dynamicCastObjCClass();

            if (v19)
            {
              MEMORY[0x1D179EDF8]();
              if (*(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1CB846AA4();
              sub_1CB846AD4();
              v1 = &v91;
              sub_1CB846A74();
            }
            else
            {

            }
          }
          else
          {

          }
          p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v3 = v91;
      if (!((unint64_t)v91 >> 62))
        goto LABEL_24;
      goto LABEL_82;
    }
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    p_base_prots = &SupportedLocalesPListStore.base_prots;
    if (v5)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v3 = MEMORY[0x1E0DEE9D8];
  if (!(MEMORY[0x1E0DEE9D8] >> 62))
  {
LABEL_24:
    v20 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
LABEL_82:
  swift_bridgeObjectRetain();
  v20 = sub_1CB847044();
LABEL_25:
  v89 = v20;
  v90 = v3;
  if (!v20)
  {
    v88 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_47;
  }
  if (v20 < 1)
  {
LABEL_132:
    __break(1u);
    __break(1u);
    goto LABEL_133;
  }
  v21 = 0;
  v22 = v3 & 0xC000000000000001;
  v88 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v23 = &SupportedLocalesPListStore.base_prots;
  v24 = &SupportedLocalesPListStore.base_prots;
  v25 = &SupportedLocalesPListStore.base_prots;
  do
  {
    if (v22)
      v26 = (id)MEMORY[0x1D179F320](v21, v3);
    else
      v26 = *(id *)(v3 + 8 * v21 + 32);
    v27 = v26;
    v28 = objc_msgSend(v26, (SEL)v23[317]);
    if (v28
      && (v29 = v28, v30 = objc_msgSend(v28, (SEL)v24[417]), v29, v30)
      && (v31 = objc_msgSend(v30, (SEL)v25[418]), v30, v31)
      && (v32 = objc_msgSend(v31, sel_turnContext), v31, v32))
    {
      v33 = v25;
      v34 = v24;
      v35 = objc_msgSend(v32, sel_nlContext);

      if (v35
        && (v36 = objc_msgSend(v35, sel_systemDialogActs), v35, v36))
      {
        sub_1CB777FA8(0, &qword_1EF99FD48);
        v37 = sub_1CB846A5C();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v88 = sub_1CB78FA68(0, v88[2] + 1, 1, v88);
        v39 = v88[2];
        v38 = v88[3];
        if (v39 >= v38 >> 1)
          v88 = sub_1CB78FA68((_QWORD *)(v38 > 1), v39 + 1, 1, v88);
        v88[2] = v39 + 1;
        v88[v39 + 4] = v37;
      }
      else
      {

      }
      v24 = v34;
      v25 = v33;
      v23 = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
    }
    else
    {

    }
    ++v21;
    v3 = v90;
  }
  while (v89 != v21);
LABEL_47:
  swift_bridgeObjectRelease();
  v1 = v86;
  sub_1CB7E2AD8((uint64_t)v88, (char *)&v91);
  swift_bridgeObjectRelease();
  v87 = v91;
  i = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v91 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v40 = sub_1CB777FA8(0, &qword_1ED88BF58);
    swift_bridgeObjectRetain();
    v41 = 0;
    v42 = &SupportedLocalesPListStore.base_prots;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v43 = (__int128 *)MEMORY[0x1D179F320](v41, v4);
      else
        v43 = (__int128 *)*(id *)(v4 + 8 * v41 + 32);
      v1 = v43;
      objc_msgSend(v43, (SEL)v42[170]);
      v44 = sub_1CB846D80();
      if (!v44 || v40 != v44)
        goto LABEL_49;
      v45 = objc_msgSend(v1, sel_payload);
      if (v45)
      {
        v46 = sub_1CB845F94();
        v48 = v47;

        v49 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        v45 = (id)sub_1CB845F88();
        v50 = v48;
        v42 = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
        sub_1CB779034(v46, v50);
      }
      else
      {
        v49 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      }
      v51 = objc_msgSend(v49, sel_initWithData_, v45);

      if (v51)
      {
        objc_opt_self();
        v52 = swift_dynamicCastObjCClass();

        if (v52)
        {
          MEMORY[0x1D179EDF8]();
          if (*(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          v1 = &v91;
          sub_1CB846A74();
        }
        else
        {

        }
      }
      else
      {
LABEL_49:

      }
      ++v41;
    }
    while (v5 != v41);
    swift_bridgeObjectRelease();
    v5 = v91;
    i = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v91 = i;
  if (!((unint64_t)v5 >> 62))
  {
    v3 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_69;
LABEL_84:
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1E0DEE9D8];
    goto LABEL_85;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1CB847044();
  if (!v3)
    goto LABEL_84;
LABEL_69:
  if (v3 < 1)
  {
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  for (j = 0; j != v3; ++j)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v54 = (id)MEMORY[0x1D179F320](j, v5);
    else
      v54 = *(id *)(v5 + 8 * j + 32);
    v55 = v54;
    v56 = objc_msgSend(v54, sel_flowEntityContextTier1);

    if (v56)
    {
      MEMORY[0x1D179EDF8]();
      if (*(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1CB846AA4();
      sub_1CB846AD4();
      v1 = &v91;
      sub_1CB846A74();
    }
  }
  swift_bridgeObjectRelease();
  v4 = v91;
  i = MEMORY[0x1E0DEE9D8];
LABEL_85:
  *(_QWORD *)&v91 = i;
  if (!(v4 >> 62))
  {
    v57 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v57)
      goto LABEL_87;
LABEL_98:
    swift_bridgeObjectRelease();
    v61 = MEMORY[0x1E0DEE9D8];
    goto LABEL_99;
  }
  swift_bridgeObjectRetain();
  v57 = sub_1CB847044();
  swift_bridgeObjectRelease();
  if (!v57)
    goto LABEL_98;
LABEL_87:
  if (v57 < 1)
  {
LABEL_134:
    __break(1u);
    __break(1u);
    goto LABEL_135;
  }
  for (k = 0; k != v57; ++k)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v59 = (id)MEMORY[0x1D179F320](k, v4);
    else
      v59 = *(id *)(v4 + 8 * k + 32);
    v60 = v59;
    if (objc_msgSend(v59, sel_hasLinkId))
    {
      sub_1CB846FB4();
      sub_1CB846FD8();
      sub_1CB846FE4();
      sub_1CB846FC0();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v61 = v91;
  i = MEMORY[0x1E0DEE9D8];
LABEL_99:
  *(_QWORD *)&v91 = MEMORY[0x1E0DEE9E0];
  if (v61 < 0 || (v61 & 0x4000000000000000) != 0)
  {
LABEL_123:
    swift_retain();
    v62 = sub_1CB847044();
    if (v62)
    {
LABEL_102:
      i = 4;
      do
      {
        if ((v61 & 0xC000000000000001) != 0)
          v63 = (id)MEMORY[0x1D179F320](i - 4, v61);
        else
          v63 = *(id *)(v61 + 8 * i);
        v64 = v63;
        v65 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
          goto LABEL_123;
        }
        v94 = (uint64_t)v63;
        sub_1CB7E4D04((uint64_t *)&v91, (id *)&v94);

        ++i;
      }
      while (v65 != v62);
      swift_release_n();
      v4 = v91;
      i = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)&v91 = MEMORY[0x1E0DEE9D8];
      if (!v3)
        goto LABEL_125;
      goto LABEL_109;
    }
  }
  else
  {
    v62 = *(_QWORD *)(v61 + 16);
    swift_retain();
    if (v62)
      goto LABEL_102;
  }
  swift_release_n();
  v4 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v91 = i;
  if (!v3)
  {
LABEL_125:
    swift_bridgeObjectRelease();
    v94 = i;
    swift_bridgeObjectRelease();
    v3 = i;
    if (!v89)
      goto LABEL_130;
LABEL_126:
    v75 = i;
    i = type metadata accessor for HasNLXEvents(0);
    v1 = (__int128 *)swift_allocObject();
    *((_BYTE *)v1 + 16) = 1;
    v5 = v75;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_127:
      v77 = *(_QWORD *)(v5 + 16);
      v76 = *(_QWORD *)(v5 + 24);
      if (v77 >= v76 >> 1)
        v5 = (uint64_t)sub_1CB78F738((_QWORD *)(v76 > 1), v77 + 1, 1, (_QWORD *)v5);
      v92 = i;
      v93 = sub_1CB7762AC(&qword_1ED88BC10, type metadata accessor for HasNLXEvents, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
      *(_QWORD *)&v91 = v1;
      *(_QWORD *)(v5 + 16) = v77 + 1;
      sub_1CB7780BC(&v91, v5 + 40 * v77 + 32);
      v94 = v5;
      goto LABEL_130;
    }
LABEL_135:
    v5 = (uint64_t)sub_1CB78F738(0, *(_QWORD *)(v5 + 16) + 1, 1, (_QWORD *)v5);
    goto LABEL_127;
  }
LABEL_109:
  swift_bridgeObjectRetain();
  for (m = 0; m != v3; ++m)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v67 = (id)MEMORY[0x1D179F320](m, v5);
    else
      v67 = *(id *)(v5 + 8 * m + 32);
    v68 = v67;
    v69 = objc_msgSend(v67, sel_flowStep);

    if (v69)
    {
      MEMORY[0x1D179EDF8]();
      if (*(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1CB846AA4();
      sub_1CB846AD4();
      sub_1CB846A74();
    }
  }
  swift_bridgeObjectRelease();
  v3 = v91;
  swift_bridgeObjectRelease();
  v70 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v94 = MEMORY[0x1E0DEE9D8];
  HasFlowEvents = type metadata accessor for HasFlowEvents(0);
  v72 = swift_allocObject();
  *(_BYTE *)(v72 + 16) = 1;
  i = (uint64_t)sub_1CB78F738(0, 1, 1, v70);
  v74 = *(_QWORD *)(i + 16);
  v73 = *(_QWORD *)(i + 24);
  if (v74 >= v73 >> 1)
    i = (uint64_t)sub_1CB78F738((_QWORD *)(v73 > 1), v74 + 1, 1, (_QWORD *)i);
  v92 = HasFlowEvents;
  v93 = sub_1CB7762AC(&qword_1ED88BC38, type metadata accessor for HasFlowEvents, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
  *(_QWORD *)&v91 = v72;
  *(_QWORD *)(i + 16) = v74 + 1;
  sub_1CB7780BC(&v91, i + 40 * v74 + 32);
  swift_bridgeObjectRelease();
  v94 = i;
  if (v89)
    goto LABEL_126;
LABEL_130:
  v78 = sub_1CB7E51B4(v3);
  sub_1CB7F0E80(v78);
  v79 = sub_1CB7E56D8(v3, v4);
  swift_bridgeObjectRelease();
  sub_1CB7F0E80((uint64_t)v79);
  LOBYTE(v91) = v87;
  v80 = sub_1CB7E5D5C(v3, (unsigned __int8 *)&v91);
  sub_1CB7F0E80((uint64_t)v80);
  v81 = sub_1CB7E63E0(v3);
  sub_1CB7F0E80((uint64_t)v81);
  v82 = sub_1CB7E697C(v3);
  sub_1CB7F0E80(v82);
  v83 = sub_1CB7E6D18(v3);
  sub_1CB7F0E80(v83);
  v84 = sub_1CB7E70F0(v3);
  swift_bridgeObjectRelease();
  sub_1CB7F0E80(v84);
  return v94;
}

uint64_t HasNLXEvents.__allocating_init(value:)(char a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = a1;
  return result;
}

uint64_t FlowClientEventFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FlowClientEventFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7E3B58(unint64_t *a1)
{
  return sub_1CB7E2E30(*a1);
}

uint64_t sub_1CB7E3B88(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for PromptBeginEventType);
}

uint64_t sub_1CB7E3B94(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for PromptBeginEventType);
}

uint64_t sub_1CB7E3BAC(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for PromptEndEventType);
}

uint64_t sub_1CB7E3BB8(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for PromptEndEventType);
}

uint64_t sub_1CB7E3BD0(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for PromptBeginCandidates);
}

uint64_t sub_1CB7E3BDC(uint64_t *a1)
{
  return sub_1CB79200C(a1, (void (*)(_QWORD))type metadata accessor for PromptBeginCandidates);
}

uint64_t sub_1CB7E3BF4(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for PromptEndCandidates);
}

uint64_t sub_1CB7E3C00(uint64_t *a1)
{
  return sub_1CB79200C(a1, (void (*)(_QWORD))type metadata accessor for PromptEndCandidates);
}

uint64_t sub_1CB7E3C18(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for PromptEndResultAction);
}

uint64_t sub_1CB7E3C24(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for PromptEndResultAction);
}

uint64_t sub_1CB7E3C3C(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for PromptEndResultEntity);
}

uint64_t sub_1CB7E3C48(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for PromptEndResultEntity);
}

uint64_t sub_1CB7E3C60(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for PromptBeginSlotName);
}

uint64_t sub_1CB7E3C6C(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for PromptBeginSlotName);
}

uint64_t PromptEndSlotName.init(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t PromptEndSlotName.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB7E3CAC(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for PromptEndSlotName);
}

uint64_t sub_1CB7E3CB8(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for PromptEndSlotName);
}

uint64_t sub_1CB7E3CD0(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for PromptBeginTaskName);
}

uint64_t sub_1CB7E3CDC(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for PromptBeginTaskName);
}

uint64_t sub_1CB7E3CF4(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for PromptEndTaskName);
}

uint64_t sub_1CB7E3D00(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for PromptEndTaskName);
}

uint64_t sub_1CB7E3D18(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for TurnTaskNames);
}

uint64_t sub_1CB7E3D24(uint64_t *a1)
{
  return sub_1CB79200C(a1, (void (*)(_QWORD))type metadata accessor for TurnTaskNames);
}

uint64_t sub_1CB7E3D3C(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for FlowTaskStateNames);
}

uint64_t sub_1CB7E3D48(uint64_t *a1)
{
  return sub_1CB79200C(a1, (void (*)(_QWORD))type metadata accessor for FlowTaskStateNames);
}

uint64_t ResolvedSlots.init(value:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t ResolvedSlots.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB7E3D88(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for ResolvedSlots);
}

uint64_t sub_1CB7E3D94(uint64_t *a1)
{
  return sub_1CB79200C(a1, (void (*)(_QWORD))type metadata accessor for ResolvedSlots);
}

uint64_t HasFlowEvents.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1CB7E3DB0(char *a1)
{
  return sub_1CB7E3ED4(a1, (void (*)(_QWORD))type metadata accessor for HasFlowEvents);
}

uint64_t sub_1CB7E3DBC(unsigned __int8 *a1)
{
  return sub_1CB7E3F14(a1, (void (*)(_QWORD))type metadata accessor for HasFlowEvents);
}

uint64_t HasNLXEvents.init(value:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
  return v1;
}

uint64_t _s28SiriPrivateLearningAnalytics13HasFlowEventsC5valueACSgSbSg_tcfC_0(unsigned __int8 a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1;
  v3 = swift_allocObject();
  v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t _s28SiriPrivateLearningAnalytics13HasFlowEventsC5valueACSgSbSg_tcfc_0(char a1)
{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t HasNLXEvents.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t HasNLXEvents.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7E3EC8(char *a1)
{
  return sub_1CB7E3ED4(a1, (void (*)(_QWORD))type metadata accessor for HasNLXEvents);
}

uint64_t sub_1CB7E3ED4(char *a1, void (*a2)(_QWORD))
{
  char v2;
  uint64_t result;

  v2 = *a1;
  a2(0);
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = v2;
  return result;
}

uint64_t sub_1CB7E3F08(unsigned __int8 *a1)
{
  return sub_1CB7E3F14(a1, (void (*)(_QWORD))type metadata accessor for HasNLXEvents);
}

uint64_t sub_1CB7E3F14(unsigned __int8 *a1, void (*a2)(_QWORD))
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  a2(0);
  v3 = swift_allocObject();
  v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v3 + 16) = v2 & 1;
  }
  return v4;
}

uint64_t sub_1CB7E3F90(uint64_t *a1)
{
  return sub_1CB78D504(a1, (void (*)(_QWORD))type metadata accessor for BundleIds);
}

uint64_t sub_1CB7E3F9C(uint64_t *a1)
{
  return sub_1CB79200C(a1, (void (*)(_QWORD))type metadata accessor for BundleIds);
}

SiriPrivateLearningAnalytics::PromptEventType::PreviousTurn_optional __swiftcall PromptEventType.PreviousTurn.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriPrivateLearningAnalytics::PromptEventType::PreviousTurn_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CB8470B0();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PromptEventType.PreviousTurn.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1CB7E4038 + 4 * byte_1CB84D4F0[*v0]))(0xD000000000000011, 0x80000001CB852170);
}

unint64_t sub_1CB7E4038()
{
  return 0xD000000000000013;
}

uint64_t sub_1CB7E4060()
{
  return 0x4B4E552D56455250;
}

void sub_1CB7E4080(char *a1)
{
  sub_1CB80C3B4(*a1);
}

void sub_1CB7E408C()
{
  char *v0;

  sub_1CB820DA4(*v0);
}

void sub_1CB7E4094(uint64_t a1)
{
  char *v1;

  sub_1CB82109C(a1, *v1);
}

void sub_1CB7E409C(uint64_t a1)
{
  char *v1;

  sub_1CB82120C(a1, *v1);
}

SiriPrivateLearningAnalytics::PromptEventType::PreviousTurn_optional sub_1CB7E40A4(Swift::String *a1)
{
  return PromptEventType.PreviousTurn.init(rawValue:)(*a1);
}

uint64_t sub_1CB7E40B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PromptEventType.PreviousTurn.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

SiriPrivateLearningAnalytics::PromptEventType::Beginning_optional __swiftcall PromptEventType.Beginning.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriPrivateLearningAnalytics::PromptEventType::Beginning_optional)sub_1CB7E4528(v1);
}

uint64_t sub_1CB7E40E0(char *a1, char *a2)
{
  return sub_1CB80C264(*a1, *a2);
}

uint64_t sub_1CB7E40EC()
{
  return sub_1CB820E6C();
}

uint64_t sub_1CB7E40F4()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7E4154()
{
  return sub_1CB821350();
}

SiriPrivateLearningAnalytics::PromptEventType::Beginning_optional sub_1CB7E415C(Swift::String *a1)
{
  return PromptEventType.Beginning.init(rawValue:)(*a1);
}

void sub_1CB7E4168(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000014;
  else
    v2 = 0xD000000000000012;
  v3 = 0x80000001CB8521E0;
  if (*v1)
    v3 = 0x80000001CB852200;
  *a1 = v2;
  a1[1] = v3;
}

SiriPrivateLearningAnalytics::PromptEventType::Ending_optional __swiftcall PromptEventType.Ending.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriPrivateLearningAnalytics::PromptEventType::Ending_optional)sub_1CB7E4528(v1);
}

uint64_t sub_1CB7E41B8(char *a1, char *a2)
{
  return sub_1CB80C30C(*a1, *a2);
}

uint64_t sub_1CB7E41C4()
{
  return sub_1CB820EF0();
}

uint64_t sub_1CB7E41CC()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7E422C()
{
  return sub_1CB8212D0();
}

SiriPrivateLearningAnalytics::PromptEventType::Ending_optional sub_1CB7E4234(Swift::String *a1)
{
  return PromptEventType.Ending.init(rawValue:)(*a1);
}

void sub_1CB7E4240(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000012;
  else
    v2 = 0xD000000000000010;
  v3 = 0x80000001CB852220;
  if (*v1)
    v3 = 0x80000001CB852240;
  *a1 = v2;
  a1[1] = v3;
}

SiriPrivateLearningAnalytics::FlowTaskStateType_optional __swiftcall FlowTaskStateType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriPrivateLearningAnalytics::FlowTaskStateType_optional)sub_1CB7E4528(v1);
}

uint64_t sub_1CB7E4290(char *a1, char *a2)
{
  return sub_1CB80C120(*a1, *a2);
}

uint64_t sub_1CB7E429C()
{
  return sub_1CB820F74();
}

uint64_t sub_1CB7E42A4()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7E4304()
{
  return sub_1CB8213D0();
}

SiriPrivateLearningAnalytics::FlowTaskStateType_optional sub_1CB7E430C(Swift::String *a1)
{
  return FlowTaskStateType.init(rawValue:)(*a1);
}

void sub_1CB7E4318(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000019;
  else
    v2 = 0xD00000000000001FLL;
  v3 = 0x80000001CB852260;
  if (*v1)
    v3 = 0x80000001CB852280;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1CB7E435C(char *a1, char *a2)
{
  return sub_1CB80C078(*a1, *a2);
}

uint64_t sub_1CB7E4368()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB7E43EC()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7E444C()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

SiriPrivateLearningAnalytics::FlowTaskResolvedSlotType_optional sub_1CB7E44CC(Swift::String *a1)
{
  return FlowTaskResolvedSlotType.init(rawValue:)(*a1);
}

void sub_1CB7E44D8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6E65697069636572;
  if (*v1)
    v2 = 0x746E65746E6F63;
  v3 = 0xE900000000000074;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

SiriPrivateLearningAnalytics::PromptResult_optional __swiftcall PromptResult.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (SiriPrivateLearningAnalytics::PromptResult_optional)sub_1CB7E4528(v1);
}

uint64_t sub_1CB7E4528@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1CB8470B0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1CB7E4584(char *a1, char *a2)
{
  return sub_1CB80C508(*a1, *a2);
}

uint64_t sub_1CB7E4590()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB7E4620()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7E468C()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

SiriPrivateLearningAnalytics::PromptResult_optional sub_1CB7E4718(Swift::String *a1)
{
  return PromptResult.init(rawValue:)(*a1);
}

void sub_1CB7E4724(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x414D5249464E4F43;
  if (*v1)
    v2 = 0x454C4C45434E4143;
  v3 = 0xEF4F4E5F4E4F4954;
  if (*v1)
    v3 = 0xE900000000000044;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1CB7E4774(unint64_t a1, uint64_t a2)
{
  return sub_1CB7E4788(a1, a2);
}

unint64_t sub_1CB7E4788(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
    return MEMORY[0x1D179F320]();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return (unint64_t)*(id *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB7E47E0(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CB7E47F4(a1, a2, a3, a4);
}

_QWORD *sub_1CB7E47F4(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;

  if ((a4 & 1) != 0)
    return 0;
  v6 = a3;
  result = a1(&v7, &v6);
  if (!v4)
    return (_QWORD *)v7;
  return result;
}

void sub_1CB7E4848(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  _OWORD *v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  v2 = sub_1CB845E8C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)objc_msgSend(a1, sel_count);
  if (v6 <= 0)
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v10 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF99C638);
    v7 = (_QWORD *)swift_allocObject();
    v8 = _swift_stdlib_malloc_size(v7);
    v9 = v8 - 32;
    if (v8 < 32)
      v9 = v8 - 1;
    v10 = 2 * (v9 >> 5);
    v7[2] = v6;
    v7[3] = v10;
  }
  v11 = a1;
  sub_1CB846C6C();

  if (v6 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v12 = v10 >> 1;
  v13 = v7 + 4;
  if (v6)
  {
    v12 -= v6;
    sub_1CB7762AC(&qword_1ED88BBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    do
    {
      sub_1CB846E4C();
      if (!v33)
        goto LABEL_38;
      sub_1CB777CAC(&v32, v13);
      v13 += 2;
    }
    while (--v6);
  }
  v29 = v3;
  sub_1CB7762AC(&qword_1ED88BBC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_1CB846E4C();
  if (v31)
  {
    while (1)
    {
      sub_1CB777CAC(&v30, &v32);
      if (!v12)
      {
        v14 = v7[3];
        if ((uint64_t)((v14 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_35;
        v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
        if (v15 <= 1)
          v16 = 1;
        else
          v16 = v15;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF99C638);
        v17 = (_QWORD *)swift_allocObject();
        v18 = _swift_stdlib_malloc_size(v17);
        v19 = v18 - 32;
        if (v18 < 32)
          v19 = v18 - 1;
        v20 = v19 >> 5;
        v17[2] = v16;
        v17[3] = 2 * (v19 >> 5);
        v21 = (unint64_t)(v17 + 4);
        v22 = v7[3] >> 1;
        if (v7[2])
        {
          if (v17 != v7 || v21 >= (unint64_t)&v7[4 * v22 + 4])
            memmove(v17 + 4, v7 + 4, 32 * v22);
          v7[2] = 0;
        }
        v13 = (_OWORD *)(v21 + 32 * v22);
        v12 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
        swift_release();
        v7 = v17;
      }
      v24 = __OFSUB__(v12--, 1);
      if (v24)
        break;
      sub_1CB777CAC(&v32, v13);
      v13 += 2;
      sub_1CB846E4C();
      if (!v31)
        goto LABEL_30;
    }
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_30:
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v2);
  sub_1CB785B54((uint64_t)&v30, &qword_1ED88E088);
  v25 = v7[3];
  if (v25 >= 2)
  {
    v26 = v25 >> 1;
    v24 = __OFSUB__(v26, v12);
    v27 = v26 - v12;
    if (v24)
    {
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      return;
    }
    v7[2] = v27;
  }
}

uint64_t sub_1CB7E4B34(void *a1)
{
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;

  v1 = objc_msgSend(a1, sel_entitiesPresenteds);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1CB777FA8(0, &qword_1EF9A0708);
  v3 = sub_1CB846A5C();

  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_4;
LABEL_19:
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_20:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v7;
  }
  swift_bridgeObjectRetain();
  result = sub_1CB847044();
  v4 = result;
  if (!result)
    goto LABEL_19;
LABEL_4:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1D179F320](v6, v3);
      else
        v8 = *(id *)(v3 + 8 * v6 + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, sel_entityId);
      if (v10)
      {
        v11 = v10;
        v12 = sub_1CB8468A0();
        v14 = v13;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1CB78F3EC(0, v7[2] + 1, 1, v7);
        v16 = v7[2];
        v15 = v7[3];
        if (v16 >= v15 >> 1)
          v7 = sub_1CB78F3EC((_QWORD *)(v15 > 1), v16 + 1, 1, v7);
        v7[2] = v16 + 1;
        v17 = &v7[2 * v16];
        v17[4] = v12;
        v17[5] = v14;
      }
      else
      {

      }
      ++v6;
    }
    while (v4 != v6);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

id sub_1CB7E4D04(uint64_t *a1, id *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id result;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a2;
  result = objc_msgSend(*a2, sel_linkId);
  if (result)
  {
    v9 = result;
    v10 = objc_msgSend(result, sel_value);
    if (v10)
    {
      v11 = v10;
      v12 = sub_1CB845F94();
      v14 = v13;

      sub_1CB7B601C(v12, v14);
      sub_1CB779034(v12, v14);
    }
    else
    {
      v15 = sub_1CB846084();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
    }

    v16 = sub_1CB846084();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
      return (id)sub_1CB785B54((uint64_t)v6, &qword_1ED88D570);
    v18 = sub_1CB846030();
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v16);
    v21 = sub_1CB7E4B34(v7);
    if (!v21)
    {
      v22 = *a1;
      if (*(_QWORD *)(*a1 + 16))
      {
        swift_bridgeObjectRetain();
        v23 = sub_1CB779A70(v18, v20);
        if ((v24 & 1) != 0)
        {
          v21 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 24 * v23);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRelease();
          sub_1CB7E7A7C(v21);
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
      }
      v21 = 0;
    }
LABEL_13:
    v25 = objc_msgSend(v7, sel_entitySelected);
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, sel_entityId);

      if (v27)
      {
        v28 = sub_1CB8468A0();
        v30 = v29;

LABEL_21:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v38 = *a1;
        *a1 = 0x8000000000000000;
        sub_1CB82EE30(v21, v28, v30, v18, v20, isUniquelyReferenced_nonNull_native);
        *a1 = v38;
        swift_bridgeObjectRelease();
        return (id)swift_bridgeObjectRelease();
      }
    }
    v31 = *a1;
    if (*(_QWORD *)(*a1 + 16))
    {
      swift_bridgeObjectRetain();
      v32 = sub_1CB779A70(v18, v20);
      if ((v33 & 1) != 0)
      {
        v34 = (uint64_t *)(*(_QWORD *)(v31 + 56) + 24 * v32);
        v35 = *v34;
        v28 = v34[1];
        v30 = v34[2];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1CB7E7A7C(v35);
        goto LABEL_21;
      }
      swift_bridgeObjectRelease();
    }
    v28 = 0;
    v30 = 0;
    goto LABEL_21;
  }
  return result;
}

uint64_t type metadata accessor for HasFlowEvents(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED88BC40);
}

uint64_t type metadata accessor for HasNLXEvents(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1ED88BC18);
}

void sub_1CB7E5048(uint64_t *a1, id *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  unsigned int v12;
  uint64_t v13;

  v3 = *a2;
  v4 = objc_msgSend(*a2, sel_flowState);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_resolvedSlotName);

    if (v6)
    {
      v7 = sub_1CB8468A0();
      v9 = v8;

      v10 = objc_msgSend(v3, sel_flowState);
      if (!v10)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return;
      }
      v11 = v10;
      v12 = objc_msgSend(v10, sel_flowStateType);

      if (v12 <= 0x29)
      {
        if (((1 << v12) & 0x43408) != 0 || ((1 << v12) & 0x34000000024) != 0)
        {
LABEL_7:
          sub_1CB829A3C(&v13, v7, v9);
          goto LABEL_13;
        }
        if (v12 == 11)
        {
          if ((sub_1CB7E2C14(v7, v9, *a1) & 1) != 0 || (sub_1CB7E2C14(v7, v9, a1[1]) & 1) != 0)
            goto LABEL_13;
          goto LABEL_7;
        }
      }
      if (v12 != 136)
        goto LABEL_13;
      goto LABEL_7;
    }
  }
}

uint64_t sub_1CB7E51B4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[8];
  _BYTE v15[8];
  _BYTE v16[16];
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = MEMORY[0x1E0DEE9D8];
  v18 = MEMORY[0x1E0DEE9E8];
  v19 = MEMORY[0x1E0DEE9E8];
  v20 = MEMORY[0x1E0DEE9E8];
  if (a1 >> 62)
    goto LABEL_11;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1CB847044())
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D179F320](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v17 = v4;
      sub_1CB7E5048(&v18, &v17);

      ++v3;
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        v7 = v18;
        v8 = v19;
        v9 = v20;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v9 = MEMORY[0x1E0DEE9E8];
  v8 = MEMORY[0x1E0DEE9E8];
  v7 = MEMORY[0x1E0DEE9E8];
LABEL_13:
  v10 = sub_1CB7E2284(v7, (uint64_t)v16, type metadata accessor for PromptBeginSlotName, &qword_1EF9A0700);
  sub_1CB7F0E80(v10);
  v11 = sub_1CB7E2284(v8, (uint64_t)v15, type metadata accessor for PromptEndSlotName, &qword_1ED88BCB0);
  sub_1CB7F0E80(v11);
  v12 = sub_1CB7E2284(v9, (uint64_t)v14, type metadata accessor for PromptBeginSlotName, &qword_1EF9A0700);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CB7F0E80(v12);
  return v21;
}

unint64_t sub_1CB7E5398(unint64_t a1, uint64_t a2)
{
  unint64_t v4;
  id v6;
  void *v7;
  id v8;
  void *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 >> 62)
    goto LABEL_26;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      if (__OFSUB__(v4--, 1))
        goto LABEL_23;
      if ((a1 & 0xC000000000000001) != 0)
        break;
      if ((v4 & 0x8000000000000000) != 0)
      {
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        swift_bridgeObjectRetain();
        v4 = sub_1CB847044();
        swift_bridgeObjectRelease();
        if (!v4)
          return v4;
      }
      else
      {
        if (v4 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_25;
        v6 = *(id *)(a1 + 32 + 8 * v4);
LABEL_11:
        v7 = v6;
        v8 = objc_msgSend(v6, sel_flowState);
        if (v8)
        {
          v9 = v8;
          v10 = objc_msgSend(v8, sel_flowStateType);

          v11 = *(_QWORD *)(a2 + 16);
          if (v11)
          {
            if (*(_DWORD *)(a2 + 32) == v10)
            {
LABEL_20:

              return v4;
            }
            if (v11 != 1)
            {
              v12 = 9;
              while (1)
              {
                v13 = v12 - 7;
                if (__OFADD__(v12 - 8, 1))
                  break;
                if (*(_DWORD *)(a2 + 4 * v12) == v10)
                  goto LABEL_20;
                ++v12;
                if (v13 == v11)
                  goto LABEL_4;
              }
              __break(1u);
LABEL_23:
              __break(1u);
              goto LABEL_24;
            }
          }
        }
LABEL_4:

        if (!v4)
          return v4;
      }
    }
    v6 = (id)MEMORY[0x1D179F320](v4, a1);
    goto LABEL_11;
  }
  return v4;
}

id sub_1CB7E552C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(a1, sel_platformRelatedContext);
  if (!v5)
    return 0;
  v6 = v5;
  v7 = objc_msgSend(v5, sel_entityContextValue);

  if (v7)
  {
    v8 = objc_msgSend(v7, sel_linkId);

    if (v8)
    {
      v9 = objc_msgSend(v8, sel_value);
      if (v9)
      {
        v10 = v9;
        v11 = sub_1CB845F94();
        v13 = v12;

        sub_1CB7B601C(v11, v13);
        sub_1CB779034(v11, v13);
      }
      else
      {
        v14 = sub_1CB846084();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
      }

      v15 = sub_1CB846084();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v4, 1, v15) != 1)
      {
        v7 = (id)sub_1CB846030();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v15);
        return v7;
      }
      sub_1CB785B54((uint64_t)v4, &qword_1ED88D570);
    }
    return 0;
  }
  return v7;
}

_QWORD *sub_1CB7E56D8(unint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v4 = sub_1CB7E5398(a1, (uint64_t)&unk_1E868A160);
  if ((v5 & 1) == 0)
  {
    v6 = (void *)sub_1CB7E4788(v4, a1);
    v7 = v6;
    if (v6)
    {
      v8 = sub_1CB7E552C(v6);
      if (v9)
      {
        if (*(_QWORD *)(a2 + 16))
        {
          v10 = sub_1CB779A70((uint64_t)v8, v9);
          if ((v11 & 1) != 0)
          {
            v12 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 24 * v10);
            v13 = *v12;
            v14 = v12[1];
            v15 = v12[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v13)
            {
              v46 = v14;
              v16 = type metadata accessor for PromptBeginCandidates(0);
              v17 = swift_allocObject();
              *(_QWORD *)(v17 + 16) = v13;
              swift_bridgeObjectRetain();
              v18 = sub_1CB78F738(0, 1, 1, MEMORY[0x1E0DEE9D8]);
              v20 = v18[2];
              v19 = v18[3];
              if (v20 >= v19 >> 1)
                v18 = sub_1CB78F738((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
              v48 = v16;
              v49 = sub_1CB7762AC(&qword_1EF9A06F8, type metadata accessor for PromptBeginCandidates, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
              *(_QWORD *)&v47 = v17;
              v18[2] = v20 + 1;
              sub_1CB7780BC(&v47, (uint64_t)&v18[5 * v20 + 4]);
              swift_bridgeObjectRelease();
              v14 = v46;
              if (!v15)
                goto LABEL_41;
            }
            else
            {
              v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
              if (!v15)
              {
LABEL_41:

                goto LABEL_14;
              }
            }
            v42 = type metadata accessor for PromptEndResultEntity(0);
            v43 = swift_allocObject();
            *(_QWORD *)(v43 + 16) = v14;
            *(_QWORD *)(v43 + 24) = v15;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v18 = sub_1CB78F738(0, v18[2] + 1, 1, v18);
            v45 = v18[2];
            v44 = v18[3];
            if (v45 >= v44 >> 1)
              v18 = sub_1CB78F738((_QWORD *)(v44 > 1), v45 + 1, 1, v18);
            v48 = v42;
            v49 = sub_1CB7762AC(&qword_1EF9A06E8, type metadata accessor for PromptEndResultEntity, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
            *(_QWORD *)&v47 = v43;
            v18[2] = v45 + 1;
            sub_1CB7780BC(&v47, (uint64_t)&v18[5 * v45 + 4]);
            goto LABEL_41;
          }
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
  }
  v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_14:
  v21 = sub_1CB7E5398(a1, (uint64_t)&unk_1E868A188);
  if ((v22 & 1) == 0)
  {
    v23 = (void *)sub_1CB7E4788(v21, a1);
    v24 = v23;
    if (v23)
    {
      v25 = sub_1CB7E552C(v23);
      if (v26)
      {
        if (!*(_QWORD *)(a2 + 16) || (v27 = sub_1CB779A70((uint64_t)v25, v26), (v28 & 1) == 0))
        {

          swift_bridgeObjectRelease();
          return v18;
        }
        v29 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 24 * v27);
        v30 = *v29;
        v31 = v29[1];
        v32 = v29[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v30)
        {
          v33 = type metadata accessor for PromptEndCandidates(0);
          v34 = swift_allocObject();
          *(_QWORD *)(v34 + 16) = v30;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v18 = sub_1CB78F738(0, v18[2] + 1, 1, v18);
          v36 = v18[2];
          v35 = v18[3];
          if (v36 >= v35 >> 1)
            v18 = sub_1CB78F738((_QWORD *)(v35 > 1), v36 + 1, 1, v18);
          v48 = v33;
          v49 = sub_1CB7762AC(&qword_1EF9A06F0, type metadata accessor for PromptEndCandidates, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
          *(_QWORD *)&v47 = v34;
          v18[2] = v36 + 1;
          sub_1CB7780BC(&v47, (uint64_t)&v18[5 * v36 + 4]);
          swift_bridgeObjectRelease();
        }
        if (v32)
        {
          v37 = type metadata accessor for PromptEndResultEntity(0);
          v38 = swift_allocObject();
          *(_QWORD *)(v38 + 16) = v31;
          *(_QWORD *)(v38 + 24) = v32;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v18 = sub_1CB78F738(0, v18[2] + 1, 1, v18);
          v40 = v18[2];
          v39 = v18[3];
          if (v40 >= v39 >> 1)
            v18 = sub_1CB78F738((_QWORD *)(v39 > 1), v40 + 1, 1, v18);
          v48 = v37;
          v49 = sub_1CB7762AC(&qword_1EF9A06E8, type metadata accessor for PromptEndResultEntity, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
          *(_QWORD *)&v47 = v38;
          v18[2] = v40 + 1;
          sub_1CB7780BC(&v47, (uint64_t)&v18[5 * v40 + 4]);
        }
      }

    }
  }
  return v18;
}

unint64_t sub_1CB7E5B98(uint64_t a1, int *a2, char a3)
{
  int v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t result;
  uint64_t v9;
  uint64_t v10;

  v3 = *a2;
  v4 = 0xD000000000000010;
  v5 = 0xD000000000000014;
  v6 = 0x80000001CB852200;
  v7 = 0x80000001CB852220;
  result = 0x80000001CB8521E0;
  switch(v3)
  {
    case 10:
      goto LABEL_7;
    case 12:
    case 13:
    case 18:
      goto LABEL_3;
    case 38:
    case 39:
      result = 0x80000001CB852240;
LABEL_3:
      if ((v3 - 12) < 2)
        goto LABEL_6;
      if (v3 == 38)
      {
        v7 = result;
        v4 = 0xD000000000000012;
LABEL_10:
        v5 = v4;
        v9 = v7;
      }
      else
      {
        if (v3 != 18)
          return swift_bridgeObjectRelease();
LABEL_6:
        v6 = result;
        v5 = 0xD000000000000012;
LABEL_7:
        v9 = v6;
      }
      sub_1CB829A3C(&v10, v5, v9);
      return swift_bridgeObjectRelease();
    case 40:
      goto LABEL_10;
    case 41:
      __asm { BR              X11 }
      return result;
    default:
      return result;
  }
}

_QWORD *sub_1CB7E5D5C(uint64_t a1, unsigned __int8 *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t j;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  const char *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[8];
  _BYTE v50[20];
  int v51;
  _QWORD *v52;

  LODWORD(v7) = *a2;
  v52 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!((unint64_t)a1 >> 62))
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_3;
LABEL_20:
    v10 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_21:
    swift_bridgeObjectRelease();
    *(_QWORD *)&v46 = MEMORY[0x1E0DEE9E8];
    *((_QWORD *)&v46 + 1) = MEMORY[0x1E0DEE9E8];
    v18 = *((_QWORD *)v10 + 2);
    if (v18)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v18; ++i)
      {
        v51 = *(_DWORD *)&v10[4 * i + 32];
        sub_1CB7E5B98((uint64_t)&v46, &v51, v7);
      }
      swift_bridgeObjectRelease_n();
      v20 = *((_QWORD *)&v46 + 1);
      j = v46;
    }
    else
    {
      swift_bridgeObjectRelease();
      v20 = MEMORY[0x1E0DEE9E8];
      j = MEMORY[0x1E0DEE9E8];
    }
    v21 = sub_1CB7E2284(j, (uint64_t)v50, type metadata accessor for PromptBeginEventType, &qword_1EF9A06E0);
    sub_1CB7F0E80(v21);
    v22 = sub_1CB7E2284(v20, (uint64_t)v49, type metadata accessor for PromptEndEventType, &qword_1EF9A06D8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CB7F0E80(v22);
    if (!v8)
      return v52;
    v5 = a1 & 0xC000000000000001;
    swift_bridgeObjectRetain();
    v23 = 4;
    while (1)
    {
      v3 = v23 - 4;
      if (v5)
        v24 = (_QWORD *)MEMORY[0x1D179F320](v23 - 4, a1);
      else
        v24 = *(id *)(a1 + 8 * v23);
      v2 = v24;
      v25 = v23 - 3;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      v26 = objc_msgSend(v24, sel_flowState);
      if (v26)
      {
        v27 = v26;
        j = (uint64_t)objc_msgSend(v26, sel_flowStateType);

        if ((_DWORD)j == 5)
        {
          swift_bridgeObjectRelease();
          j = type metadata accessor for PromptEndResultAction(0);
          v3 = swift_allocObject();
          *(_QWORD *)(v3 + 16) = 0x454C4C45434E4143;
          *(_QWORD *)(v3 + 24) = 0xE900000000000044;
          v2 = v52;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            goto LABEL_66;
          goto LABEL_37;
        }
      }
      else
      {

      }
      ++v23;
      if (v25 == v8)
        goto LABEL_47;
    }
  }
  if (a1 < 0)
    v2 = (_QWORD *)a1;
  else
    v2 = (_QWORD *)(a1 & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  v8 = sub_1CB847044();
  if (!v8)
    goto LABEL_20;
LABEL_3:
  if (v8 >= 1)
  {
    v9 = 0;
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x1D179F320](v9, a1);
      else
        v11 = *(id *)(a1 + 8 * v9 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_flowState);
      if (v13)
      {
        v14 = v13;
        v15 = objc_msgSend(v13, sel_flowStateType);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1CB78F964(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
        v17 = *((_QWORD *)v10 + 2);
        v16 = *((_QWORD *)v10 + 3);
        if (v17 >= v16 >> 1)
          v10 = sub_1CB78F964((char *)(v16 > 1), v17 + 1, 1, v10);
        *((_QWORD *)v10 + 2) = v17 + 1;
        *(_DWORD *)&v10[4 * v17 + 32] = v15;
      }
      else
      {

      }
      ++v9;
    }
    while (v8 != v9);
    goto LABEL_21;
  }
LABEL_65:
  __break(1u);
LABEL_66:
  v2 = sub_1CB78F738(0, v2[2] + 1, 1, v2);
LABEL_37:
  v29 = v2[2];
  v28 = v2[3];
  if (v29 >= v28 >> 1)
    v2 = sub_1CB78F738((_QWORD *)(v28 > 1), v29 + 1, 1, v2);
  v47 = j;
  v48 = sub_1CB7762AC(&qword_1EF9A06D0, type metadata accessor for PromptEndResultAction, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
  *(_QWORD *)&v46 = v3;
  v2[2] = v29 + 1;
  sub_1CB7780BC(&v46, (uint64_t)&v2[5 * v29 + 4]);
  v52 = v2;
  if ((_DWORD)v7 == 1)
  {
    v30 = type metadata accessor for PromptEndEventType(0);
    v31 = swift_allocObject();
    v7 = v31;
    v32 = 0xD000000000000012;
    v33 = "END-DISAMBIGUATION";
  }
  else
  {
    if ((_DWORD)v7)
      goto LABEL_46;
    v30 = type metadata accessor for PromptEndEventType(0);
    v31 = swift_allocObject();
    v7 = v31;
    v32 = 0xD000000000000010;
    v33 = "END-CONFIRMATION";
  }
  *(_QWORD *)(v31 + 16) = v32;
  *(_QWORD *)(v31 + 24) = (unint64_t)(v33 - 32) | 0x8000000000000000;
  v35 = v2[2];
  v34 = v2[3];
  if (v35 >= v34 >> 1)
    v2 = sub_1CB78F738((_QWORD *)(v34 > 1), v35 + 1, 1, v2);
  v47 = v30;
  v48 = sub_1CB7762AC(&qword_1EF9A06D8, type metadata accessor for PromptEndEventType, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
  *(_QWORD *)&v46 = v7;
  v2[2] = v35 + 1;
  sub_1CB7780BC(&v46, (uint64_t)&v2[5 * v35 + 4]);
  v52 = v2;
LABEL_46:
  swift_bridgeObjectRetain();
LABEL_47:
  for (j = 4; ; ++j)
  {
    v3 = j - 4;
    if (v5)
      v36 = (_QWORD *)MEMORY[0x1D179F320](j - 4, a1);
    else
      v36 = *(id *)(a1 + 8 * j);
    v2 = v36;
    v37 = j - 3;
    if (__OFADD__(v3, 1))
      goto LABEL_64;
    v38 = objc_msgSend(v36, sel_flowState);
    if (v38)
      break;

LABEL_49:
    if (v37 == v8)
    {
      swift_bridgeObjectRelease();
      return v52;
    }
  }
  v39 = v38;
  LODWORD(v7) = objc_msgSend(v38, sel_flowStateType);

  if ((_DWORD)v7 != 41)
    goto LABEL_49;
  swift_bridgeObjectRelease();
  v40 = type metadata accessor for PromptEndResultAction(0);
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = 0x414D5249464E4F43;
  *(_QWORD *)(v41 + 24) = 0xEF4F4E5F4E4F4954;
  v42 = v52;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v42 = sub_1CB78F738(0, v42[2] + 1, 1, v42);
  v44 = v42[2];
  v43 = v42[3];
  if (v44 >= v43 >> 1)
    v42 = sub_1CB78F738((_QWORD *)(v43 > 1), v44 + 1, 1, v42);
  v47 = v40;
  v48 = sub_1CB7762AC(&qword_1EF9A06D0, type metadata accessor for PromptEndResultAction, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
  *(_QWORD *)&v46 = v41;
  v42[2] = v44 + 1;
  sub_1CB7780BC(&v46, (uint64_t)&v42[5 * v44 + 4]);
  return v42;
}

_QWORD *sub_1CB7E63E0(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  __objc2_prot_list **p_base_prots;
  uint64_t i;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v2 = a1;
  v49 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v1 = (_QWORD *)a1;
    else
      v1 = (_QWORD *)(a1 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v3 = sub_1CB847044();
    p_base_prots = &SupportedLocalesPListStore.base_prots;
    if (v3)
      goto LABEL_3;
LABEL_21:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
    goto LABEL_22;
  }
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  p_base_prots = &SupportedLocalesPListStore.base_prots;
  if (!v3)
    goto LABEL_21;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
LABEL_53:
    v1 = sub_1CB78F738(0, v1[2] + 1, 1, v1);
    goto LABEL_47;
  }
  for (i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x1D179F320](i, v2);
    else
      v6 = *(id *)(v2 + 8 * i + 32);
    v7 = v6;
    v8 = objc_msgSend(v6, (SEL)p_base_prots[427]);
    if (v8
      && (v9 = v8, v10 = objc_msgSend(v8, sel_currentTaskName),
                   v9,
                   v10))
    {
      v11 = sub_1CB8468A0();
      v13 = v12;

      *(_QWORD *)&v46 = v11;
      *((_QWORD *)&v46 + 1) = v13;
      sub_1CB7E79E8();
      sub_1CB7E7A2C();
      LOBYTE(v11) = sub_1CB84684C();
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
      {
        sub_1CB846FB4();
        sub_1CB846FD8();
        sub_1CB846FE4();
        sub_1CB846FC0();
      }
      else
      {

      }
      p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v14 = v49;
LABEL_22:
  v15 = sub_1CB7E5398(v14, (uint64_t)&unk_1E868A1B0);
  if ((v16 & 1) != 0)
    goto LABEL_32;
  v17 = (void *)sub_1CB7E4788(v15, v14);
  v18 = v17;
  if (!v17)
    goto LABEL_32;
  v19 = objc_msgSend(v17, (SEL)p_base_prots[427]);
  if (!v19
    || (v20 = v19,
        v21 = objc_msgSend(v19, sel_currentTaskName),
        v20,
        !v21))
  {

LABEL_32:
    v1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_33;
  }
  v22 = sub_1CB8468A0();
  v24 = v23;

  v25 = type metadata accessor for PromptBeginTaskName(0);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v22;
  *(_QWORD *)(v26 + 24) = v24;
  v1 = sub_1CB78F738(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v28 = v1[2];
  v27 = v1[3];
  if (v28 >= v27 >> 1)
    v1 = sub_1CB78F738((_QWORD *)(v27 > 1), v28 + 1, 1, v1);
  v47 = v25;
  v48 = sub_1CB7762AC(&qword_1EF9A06C8, type metadata accessor for PromptBeginTaskName, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
  *(_QWORD *)&v46 = v26;
  v1[2] = v28 + 1;
  sub_1CB7780BC(&v46, (uint64_t)&v1[5 * v28 + 4]);

  p_base_prots = (__objc2_prot_list **)(&SupportedLocalesPListStore + 40);
LABEL_33:
  v29 = sub_1CB7E5398(v14, (uint64_t)&unk_1E868A1E8);
  if ((v30 & 1) != 0)
    v31 = 0;
  else
    v31 = (void *)sub_1CB7E4788(v29, v14);
  swift_release();
  if (v31)
  {
    v32 = objc_msgSend(v31, (SEL)p_base_prots[427]);
    if (v32)
    {
      v33 = v32;
      v34 = objc_msgSend(v32, sel_currentTaskName);

      if (v34)
      {
        v35 = sub_1CB8468A0();
        v37 = v36;

        v38 = type metadata accessor for PromptEndTaskName(0);
        v39 = swift_allocObject();
        *(_QWORD *)(v39 + 16) = v35;
        *(_QWORD *)(v39 + 24) = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v1 = sub_1CB78F738(0, v1[2] + 1, 1, v1);
        v41 = v1[2];
        v40 = v1[3];
        if (v41 >= v40 >> 1)
          v1 = sub_1CB78F738((_QWORD *)(v40 > 1), v41 + 1, 1, v1);
        v47 = v38;
        v48 = sub_1CB7762AC(&qword_1EF9A06C0, type metadata accessor for PromptEndTaskName, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
        *(_QWORD *)&v46 = v39;
        v1[2] = v41 + 1;
        sub_1CB7780BC(&v46, (uint64_t)&v1[5 * v41 + 4]);
      }
    }

  }
  v42 = sub_1CB7E2588(v2);
  if (!v42[2])
  {
    swift_bridgeObjectRelease();
    return v1;
  }
  v3 = type metadata accessor for TurnTaskNames(0);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v42;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_53;
LABEL_47:
  v44 = v1[2];
  v43 = v1[3];
  if (v44 >= v43 >> 1)
    v1 = sub_1CB78F738((_QWORD *)(v43 > 1), v44 + 1, 1, v1);
  v47 = v3;
  v48 = sub_1CB7762AC(&qword_1ED88BC78, type metadata accessor for TurnTaskNames, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
  *(_QWORD *)&v46 = v2;
  v1[2] = v44 + 1;
  sub_1CB7780BC(&v46, (uint64_t)&v1[5 * v44 + 4]);
  return v1;
}

uint64_t sub_1CB7E697C(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_17:
    v5 = (char *)MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  result = sub_1CB847044();
  v2 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1D179F320](v4, a1);
      else
        v6 = *(id *)(a1 + 8 * v4 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_flowState);
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, sel_flowStateType);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1CB78F964(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
        v12 = *((_QWORD *)v5 + 2);
        v11 = *((_QWORD *)v5 + 3);
        if (v12 >= v11 >> 1)
          v5 = sub_1CB78F964((char *)(v11 > 1), v12 + 1, 1, v5);
        *((_QWORD *)v5 + 2) = v12 + 1;
        *(_DWORD *)&v5[4 * v12 + 32] = v10;
      }
      else
      {

      }
      ++v4;
    }
    while (v2 != v4);
LABEL_18:
    swift_bridgeObjectRelease();
    v13 = *((_QWORD *)v5 + 2);
    if (v13)
    {
      swift_bridgeObjectRetain();
      v14 = 0;
      v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v17 = *(_DWORD *)&v5[4 * v14 + 32];
        if (v17 == 26)
          break;
        if (v17 == 11)
        {
          v18 = 0x80000001CB852280;
          v19 = 0xD000000000000019;
LABEL_26:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v15 = sub_1CB78F3EC(0, v15[2] + 1, 1, v15);
          v21 = v15[2];
          v20 = v15[3];
          if (v21 >= v20 >> 1)
            v15 = sub_1CB78F3EC((_QWORD *)(v20 > 1), v21 + 1, 1, v15);
          v15[2] = v21 + 1;
          v16 = &v15[2 * v21];
          v16[4] = v19;
          v16[5] = v18;
        }
        if (v13 == ++v14)
        {
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
      }
      v19 = 0xD00000000000001FLL;
      v18 = 0x80000001CB852260;
      goto LABEL_26;
    }
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_32:
    swift_bridgeObjectRelease();
    sub_1CB774CE4((uint64_t)v15);
    swift_bridgeObjectRelease();
    v22 = objc_allocWithZone(MEMORY[0x1E0C99E40]);
    v23 = (void *)sub_1CB846A44();
    swift_bridgeObjectRelease();
    v24 = objc_msgSend(v22, sel_initWithArray_, v23);

    sub_1CB7E4848(v24);
    v26 = v25;

    v27 = sub_1CB7E2780(v26);
    swift_release();
    if (v27)
    {
      if (*(_QWORD *)(v27 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_1CB848A50;
        v29 = type metadata accessor for FlowTaskStateNames(0);
        v30 = swift_allocObject();
        *(_QWORD *)(v30 + 16) = v27;
        *(_QWORD *)(v28 + 56) = v29;
        *(_QWORD *)(v28 + 64) = sub_1CB7762AC(&qword_1EF9A06B8, type metadata accessor for FlowTaskStateNames, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
        *(_QWORD *)(v28 + 32) = v30;
        return v28;
      }
      swift_bridgeObjectRelease();
    }
    return MEMORY[0x1E0DEE9D8];
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB7E6D18(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_18:
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  result = sub_1CB847044();
  v2 = result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1D179F320](v4, a1);
      else
        v6 = *(id *)(a1 + 8 * v4 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_flowState);
      if (v8
        && (v9 = v8,
            v10 = objc_msgSend(v8, sel_resolvedSlotName),
            v9,
            v10))
      {
        v11 = sub_1CB8468A0();
        v13 = v12;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1CB78F3EC(0, v5[2] + 1, 1, v5);
        v15 = v5[2];
        v14 = v5[3];
        if (v15 >= v14 >> 1)
          v5 = sub_1CB78F3EC((_QWORD *)(v14 > 1), v15 + 1, 1, v5);
        v5[2] = v15 + 1;
        v16 = &v5[2 * v15];
        v16[4] = v11;
        v16[5] = v13;
      }
      else
      {

      }
      ++v4;
    }
    while (v2 != v4);
LABEL_19:
    swift_bridgeObjectRelease();
    v17 = v5[2];
    if (v17)
    {
      swift_bridgeObjectRetain();
      v18 = v5 + 5;
      v19 = (char *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        swift_bridgeObjectRetain();
        v20 = sub_1CB8470B0();
        swift_bridgeObjectRelease();
        if (!v20)
          break;
        if (v20 == 1)
        {
          v21 = 1;
LABEL_27:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v19 = sub_1CB78F970(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
          v23 = *((_QWORD *)v19 + 2);
          v22 = *((_QWORD *)v19 + 3);
          if (v23 >= v22 >> 1)
            v19 = sub_1CB78F970((char *)(v22 > 1), v23 + 1, 1, v19);
          *((_QWORD *)v19 + 2) = v23 + 1;
          v19[v23 + 32] = v21;
        }
        v18 += 2;
        if (!--v17)
        {
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
      }
      v21 = 0;
      goto LABEL_27;
    }
    v19 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_33:
    swift_bridgeObjectRelease();
    sub_1CB774E08((uint64_t)v19);
    swift_bridgeObjectRelease();
    v24 = objc_allocWithZone(MEMORY[0x1E0C99E40]);
    v25 = (void *)sub_1CB846A44();
    swift_bridgeObjectRelease();
    v26 = objc_msgSend(v24, sel_initWithArray_, v25);

    sub_1CB7E4848(v26);
    v28 = v27;

    v29 = sub_1CB7E28C4(v28);
    swift_release();
    if (v29)
    {
      if (*(_QWORD *)(v29 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
        v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_1CB848A50;
        v31 = sub_1CB7E2460(v29);
        swift_bridgeObjectRelease();
        v32 = type metadata accessor for ResolvedSlots(0);
        v33 = swift_allocObject();
        *(_QWORD *)(v33 + 16) = v31;
        *(_QWORD *)(v30 + 56) = v32;
        *(_QWORD *)(v30 + 64) = sub_1CB7762AC(&qword_1EF9A06B0, type metadata accessor for ResolvedSlots, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
        *(_QWORD *)(v30 + 32) = v33;
        return v30;
      }
      swift_bridgeObjectRelease();
    }
    return MEMORY[0x1E0DEE9D8];
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB7E70F0(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1CB847044();
    v2 = result;
    if (result)
      goto LABEL_3;
LABEL_18:
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_18;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  v4 = 0;
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x1D179F320](v4, a1);
    else
      v6 = *(id *)(a1 + 8 * v4 + 32);
    v7 = v6;
    v8 = objc_msgSend(v6, sel_appContext);
    if (v8
      && (v9 = v8, v10 = objc_msgSend(v8, sel_bundleId), v9, v10))
    {
      v11 = sub_1CB8468A0();
      v13 = v12;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1CB78F3EC(0, v5[2] + 1, 1, v5);
      v15 = v5[2];
      v14 = v5[3];
      if (v15 >= v14 >> 1)
        v5 = sub_1CB78F3EC((_QWORD *)(v14 > 1), v15 + 1, 1, v5);
      v5[2] = v15 + 1;
      v16 = &v5[2 * v15];
      v16[4] = v11;
      v16[5] = v13;
    }
    else
    {

    }
    ++v4;
  }
  while (v2 != v4);
LABEL_19:
  swift_bridgeObjectRelease();
  v17 = v5[2];
  if (v17)
  {
    v18 = v5 + 5;
    v19 = MEMORY[0x1E0DEE9D8];
    do
    {
      v23 = *(v18 - 1);
      v24 = *v18;
      v25 = v23 == 0x6C7070615F746F6ELL && v24 == 0xEE00656C62616369;
      if (!v25 && (sub_1CB8471A0() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1CB776040(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v21 = *(_QWORD *)(v19 + 16);
        v20 = *(_QWORD *)(v19 + 24);
        if (v21 >= v20 >> 1)
          sub_1CB776040(v20 > 1, v21 + 1, 1);
        *(_QWORD *)(v19 + 16) = v21 + 1;
        v22 = v19 + 16 * v21;
        *(_QWORD *)(v22 + 32) = v23;
        *(_QWORD *)(v22 + 40) = v24;
      }
      v18 += 2;
      --v17;
    }
    while (v17);
  }
  else
  {
    v19 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v26 = sub_1CB780B28(v19);
  swift_release();
  if (*(_QWORD *)(v26 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1CB848A50;
    v28 = sub_1CB7F27E0(v26);
    swift_bridgeObjectRelease();
    v29 = type metadata accessor for BundleIds(0);
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = v28;
    *(_QWORD *)(v27 + 56) = v29;
    *(_QWORD *)(v27 + 64) = sub_1CB7762AC(&qword_1EF9A06A8, type metadata accessor for BundleIds, (uint64_t)&protocol conformance descriptor for TypedNamedFeature<A>);
    *(_QWORD *)(v27 + 32) = v30;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v27;
}

unint64_t sub_1CB7E7464()
{
  unint64_t result;

  result = qword_1EF99FD68;
  if (!qword_1EF99FD68)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for PromptEventType.PreviousTurn, &type metadata for PromptEventType.PreviousTurn);
    atomic_store(result, (unint64_t *)&qword_1EF99FD68);
  }
  return result;
}

unint64_t sub_1CB7E74AC()
{
  unint64_t result;

  result = qword_1EF99FD70;
  if (!qword_1EF99FD70)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for PromptEventType.Beginning, &type metadata for PromptEventType.Beginning);
    atomic_store(result, (unint64_t *)&qword_1EF99FD70);
  }
  return result;
}

unint64_t sub_1CB7E74F4()
{
  unint64_t result;

  result = qword_1EF99FD78;
  if (!qword_1EF99FD78)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for PromptEventType.Ending, &type metadata for PromptEventType.Ending);
    atomic_store(result, (unint64_t *)&qword_1EF99FD78);
  }
  return result;
}

unint64_t sub_1CB7E753C()
{
  unint64_t result;

  result = qword_1EF99FD80;
  if (!qword_1EF99FD80)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for FlowTaskStateType, &type metadata for FlowTaskStateType);
    atomic_store(result, (unint64_t *)&qword_1EF99FD80);
  }
  return result;
}

unint64_t sub_1CB7E7584()
{
  unint64_t result;

  result = qword_1EF99FD88;
  if (!qword_1EF99FD88)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for FlowTaskResolvedSlotType, &type metadata for FlowTaskResolvedSlotType);
    atomic_store(result, (unint64_t *)&qword_1EF99FD88);
  }
  return result;
}

unint64_t sub_1CB7E75CC()
{
  unint64_t result;

  result = qword_1EF99FD90;
  if (!qword_1EF99FD90)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for PromptResult, &type metadata for PromptResult);
    atomic_store(result, (unint64_t *)&qword_1EF99FD90);
  }
  return result;
}

uint64_t type metadata accessor for FlowClientEventFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for FlowClientEventFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FlowClientEventFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of FlowClientEventFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t type metadata accessor for PromptBeginEventType(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99FDC0);
}

uint64_t type metadata accessor for PromptEndEventType(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99FEA8);
}

uint64_t type metadata accessor for PromptBeginCandidates(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF99FF90);
}

uint64_t type metadata accessor for PromptEndCandidates(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A0078);
}

uint64_t type metadata accessor for PromptEndResultAction(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A0160);
}

uint64_t type metadata accessor for PromptEndResultEntity(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A0248);
}

uint64_t type metadata accessor for PromptBeginSlotName(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A0330);
}

uint64_t type metadata accessor for PromptEndSlotName(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1ED88BCB8);
}

uint64_t type metadata accessor for PromptBeginTaskName(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED88BD48);
}

uint64_t type metadata accessor for PromptEndTaskName(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A0418);
}

uint64_t type metadata accessor for TurnTaskNames(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED88BC80);
}

uint64_t type metadata accessor for FlowTaskStateNames(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A0500);
}

uint64_t type metadata accessor for ResolvedSlots(uint64_t a1)
{
  return sub_1CB78DA28(a1, (uint64_t *)&unk_1ED88BC50);
}

uint64_t type metadata accessor for BundleIds(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A05E8);
}

ValueMetadata *type metadata accessor for PromptEventType()
{
  return &type metadata for PromptEventType;
}

uint64_t getEnumTagSinglePayload for PromptEventType.PreviousTurn(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptEventType.PreviousTurn(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CB7E7854 + 4 * byte_1CB84D51D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CB7E7888 + 4 * byte_1CB84D518[v4]))();
}

uint64_t sub_1CB7E7888(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7E7890(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB7E7898);
  return result;
}

uint64_t sub_1CB7E78A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB7E78ACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CB7E78B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7E78B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PromptEventType.PreviousTurn()
{
  return &type metadata for PromptEventType.PreviousTurn;
}

ValueMetadata *type metadata accessor for PromptEventType.Beginning()
{
  return &type metadata for PromptEventType.Beginning;
}

ValueMetadata *type metadata accessor for PromptEventType.Ending()
{
  return &type metadata for PromptEventType.Ending;
}

ValueMetadata *type metadata accessor for FlowTaskStateType()
{
  return &type metadata for FlowTaskStateType;
}

ValueMetadata *type metadata accessor for FlowTaskResolvedSlotType()
{
  return &type metadata for FlowTaskResolvedSlotType;
}

uint64_t _s28SiriPrivateLearningAnalytics15PromptEventTypeO9BeginningOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CB7E7968 + 4 * byte_1CB84D527[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CB7E799C + 4 * byte_1CB84D522[v4]))();
}

uint64_t sub_1CB7E799C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7E79A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB7E79ACLL);
  return result;
}

uint64_t sub_1CB7E79B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB7E79C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CB7E79C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7E79CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PromptResult()
{
  return &type metadata for PromptResult;
}

unint64_t sub_1CB7E79E8()
{
  unint64_t result;

  result = qword_1ED88BED0;
  if (!qword_1ED88BED0)
  {
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED88BED0);
  }
  return result;
}

unint64_t sub_1CB7E7A2C()
{
  unint64_t result;

  result = qword_1ED88BEC8;
  if (!qword_1ED88BEC8)
  {
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEFF48], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED88BEC8);
  }
  return result;
}

uint64_t sub_1CB7E7A70(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1CB7E7A7C(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t IncrementalMigrationManager.__allocating_init(bundle:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_1CB7E7B64(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unsigned int v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = a1 + 64;
  v3 = *(_BYTE *)(a1 + 32);
  v4 = 1 << v3;
  v5 = -1;
  if (1 << v3 < 64)
    v5 = ~(-1 << (1 << v3));
  v6 = v5 & *(_QWORD *)(a1 + 64);
  if (v6)
  {
    v7 = 0;
    v8 = __clz(__rbit64(v6));
    v9 = (v6 - 1) & v6;
    v10 = (unint64_t)(v4 + 63) >> 6;
    while (2)
    {
      v11 = 8 * v8;
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + v11);
      v13 = *(void **)(*(_QWORD *)(a1 + 56) + v11);
      swift_bridgeObjectRetain();
      v15 = v13;
      if (v9)
      {
LABEL_6:
        v16 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v17 = v16 | (v7 << 6);
        goto LABEL_7;
      }
      while (1)
      {
        v19 = v7 + 1;
        if (__OFADD__(v7, 1))
          break;
        if (v19 >= v10)
          goto LABEL_27;
        v20 = *(_QWORD *)(v2 + 8 * v19);
        ++v7;
        if (!v20)
        {
          v7 = v19 + 1;
          if (v19 + 1 >= v10)
            goto LABEL_27;
          v20 = *(_QWORD *)(v2 + 8 * v7);
          if (!v20)
          {
            v7 = v19 + 2;
            if (v19 + 2 >= v10)
              goto LABEL_27;
            v20 = *(_QWORD *)(v2 + 8 * v7);
            if (!v20)
            {
              v7 = v19 + 3;
              if (v19 + 3 >= v10)
                goto LABEL_27;
              v20 = *(_QWORD *)(v2 + 8 * v7);
              if (!v20)
              {
                v21 = v19 + 4;
                if (v21 >= v10)
                {
LABEL_27:
                  swift_release();
                  return v12;
                }
                v20 = *(_QWORD *)(v2 + 8 * v21);
                if (!v20)
                {
                  while (1)
                  {
                    v7 = v21 + 1;
                    if (__OFADD__(v21, 1))
                      break;
                    if (v7 >= v10)
                      goto LABEL_27;
                    v20 = *(_QWORD *)(v2 + 8 * v7);
                    ++v21;
                    if (v20)
                      goto LABEL_24;
                  }
                  __break(1u);
LABEL_44:
                  v24 = 0;
                  v25 = 6;
                  if (v10 > 6)
                    v25 = v10;
                  v26 = v25 - 6;
                  while (v26 != v24)
                  {
                    v23 = *(_QWORD *)(a1 + 112 + 8 * v24++);
                    if (v23)
                    {
                      v7 = v24 + 5;
                      goto LABEL_31;
                    }
                  }
                  return 0;
                }
                v7 = v21;
              }
            }
          }
        }
LABEL_24:
        v14 = v20 - 1;
        v9 = (v20 - 1) & v20;
        v17 = __clz(__rbit64(v20)) + (v7 << 6);
LABEL_7:
        v18 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v17);
        if (v18 < v12)
        {
          v22 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * v17);

          v15 = v22;
          v12 = v18;
          if (v9)
            goto LABEL_6;
        }
        else if (v9)
        {
          goto LABEL_6;
        }
      }
      __break(1u);
LABEL_38:
      if (v14 >= 9)
      {
        v23 = *(_QWORD *)(a1 + 96);
        if (v23)
        {
          v7 = 4;
        }
        else
        {
          v23 = *(_QWORD *)(a1 + 104);
          if (!v23)
            goto LABEL_44;
          v7 = 5;
        }
LABEL_31:
        v9 = (v23 - 1) & v23;
        v8 = __clz(__rbit64(v23)) + (v7 << 6);
        continue;
      }
      break;
    }
  }
  else
  {
    v14 = v3 & 0x3F;
    if (v14 > 6)
    {
      v10 = (unint64_t)(v4 + 63) >> 6;
      v23 = *(_QWORD *)(a1 + 72);
      if (v23)
      {
        v7 = 1;
        goto LABEL_31;
      }
      if (v14 >= 8)
      {
        v23 = *(_QWORD *)(a1 + 80);
        if (v23)
        {
          v7 = 2;
        }
        else
        {
          v23 = *(_QWORD *)(a1 + 88);
          if (!v23)
            goto LABEL_38;
          v7 = 3;
        }
        goto LABEL_31;
      }
    }
  }
  return 0;
}

uint64_t IncrementalMigrationManager.init(bundle:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

void sub_1CB7E7DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v11;
  void *v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint8_t *v38;
  uint64_t v39;
  char v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  int64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int64_t v58;
  int64_t v59;
  void *v60;
  uint64_t v61;

  v6 = v4;
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1CB845F4C();
  v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_fileExistsAtPath_, v12);

  if ((v13 & 1) != 0)
  {
    sub_1CB777FA8(0, &qword_1ED88A778);
    v14 = sub_1CB846DD4();
    if (v5)
      return;
    v19 = v14;
    v61 = v6;
    v20 = sub_1CB7E992C();
    if (!v20)
    {
      swift_bridgeObjectRelease();
      sub_1CB7E9EF0();
      swift_allocError();
      *(_QWORD *)v42 = 0;
      *(_QWORD *)(v42 + 8) = 0;
      *(_BYTE *)(v42 + 16) = 1;
      swift_willThrow();
      return;
    }
    v21 = v20;
    v22 = (void *)sub_1CB8467E0();
    v23 = objc_msgSend(v21, sel_isConfiguration_compatibleWithStoreMetadata_, 0, v22);

    if (v23)
    {
      v24 = sub_1CB7EAE58(v19);
      if ((v25 & 1) != 0 || (v26 = v24, v27 = sub_1CB7E8490(), (v28 & 1) == 0) && v26 == v27)
      {
        v29 = v21;
        swift_bridgeObjectRelease();
        if (qword_1ED88DDA8 != -1)
          swift_once();
        v30 = sub_1CB8466D8();
        __swift_project_value_buffer(v30, (uint64_t)qword_1ED88DD88);
        v31 = sub_1CB8466C0();
        v32 = sub_1CB846C84();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v33 = 0;
          _os_log_impl(&dword_1CB771000, v31, v32, "Model does not require migration. Skipping migration.", v33, 2u);
          MEMORY[0x1D179FE84](v33, -1, -1);
        }

        return;
      }
    }
    if (qword_1ED88DDA8 != -1)
      swift_once();
    v34 = sub_1CB8466D8();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED88DD88);
    v35 = sub_1CB8466C0();
    v36 = sub_1CB846C84();
    if (os_log_type_enabled(v35, v36))
    {
      v60 = v21;
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_1CB771000, v35, v36, "Latest model is not compatible with store. Migration required.", v37, 2u);
      v38 = v37;
      v21 = v60;
      MEMORY[0x1D179FE84](v38, -1, -1);
    }

    v39 = sub_1CB7E8490();
    if ((v40 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1CB7E9EF0();
      swift_allocError();
      *(_OWORD *)v43 = xmmword_1CB84DCC0;
    }
    else
    {
      v41 = v39;
      v44 = sub_1CB7EB208(a3, a4, *(void **)(v61 + 16));
      v45 = sub_1CB7EAE58(v19);
      if ((v46 & 1) != 0)
      {
        v58 = v41;
        swift_bridgeObjectRetain();
        v49 = swift_bridgeObjectRetain();
        v50 = sub_1CB7EBE00(v49);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v47 = sub_1CB7E7B64(v50);
        v52 = v51;
        swift_release();
        if (v52)
        {
          swift_bridgeObjectRelease();

          v41 = v58;
          goto LABEL_34;
        }
      }
      else if (*(_QWORD *)(v44 + 16))
      {
        v47 = v45;
        sub_1CB779C18(v45);
        if ((v48 & 1) != 0)
        {
          swift_bridgeObjectRelease();
LABEL_34:
          v53 = sub_1CB8466C0();
          v54 = sub_1CB846C84();
          if (os_log_type_enabled(v53, v54))
          {
            v59 = v41;
            v55 = swift_slowAlloc();
            *(_DWORD *)v55 = 134218240;
            sub_1CB846E58();
            *(_WORD *)(v55 + 12) = 2048;
            sub_1CB846E58();
            _os_log_impl(&dword_1CB771000, v53, v54, "Store needs updating from model version %ld to %ld", (uint8_t *)v55, 0x16u);
            v56 = v55;
            v41 = v59;
            MEMORY[0x1D179FE84](v56, -1, -1);
          }

          if (v47 >= v41)
            v57 = MEMORY[0x1E0DEE9D8];
          else
            v57 = sub_1CB7EAC98(v47, v41 - 1, v44);
          swift_bridgeObjectRelease();
          sub_1CB7E88CC(a1, v57, a2);

          swift_bridgeObjectRelease();
          return;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CB7E9EF0();
      swift_allocError();
      *(_QWORD *)v43 = 0;
      *(_QWORD *)(v43 + 8) = 0;
    }
    *(_BYTE *)(v43 + 16) = 1;
    swift_willThrow();

    return;
  }
  if (qword_1ED88DDA8 != -1)
    swift_once();
  v15 = sub_1CB8466D8();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED88DD88);
  v16 = sub_1CB8466C0();
  v17 = sub_1CB846C84();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1CB771000, v16, v17, "No store at provided url. Skipping migration steps.", v18, 2u);
    MEMORY[0x1D179FE84](v18, -1, -1);
  }

}

uint64_t sub_1CB7E8490()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = (uint64_t)objc_msgSend(v0, sel_versionIdentifiers);
  v4 = sub_1CB846BDC();

  result = sub_1CB7EAAB4(v4);
  if ((v9 & 1) != 0)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    v13 = v7;
  }
  else
  {
    v3 = result;
    v1 = v6;
    v2 = v4 + 56;
    while (1)
    {
      v7 = *(_DWORD *)(v4 + 36);
      if (v7 != (_DWORD)v1)
        break;
      v8 = *(_BYTE *)(v4 + 32);
      if (v3 == 1 << v8)
        goto LABEL_13;
      if (v3 < 0 || v3 >= 1 << v8)
        goto LABEL_15;
      if (((*(_QWORD *)(v2 + (((unint64_t)v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) == 0)
        goto LABEL_16;
      sub_1CB7EC154(*(_QWORD *)(v4 + 48) + 40 * v3, (uint64_t)&v24);
      sub_1CB7EC154((uint64_t)&v24, (uint64_t)&v22);
      swift_bridgeObjectRetain();
      if ((swift_dynamicCast() & 1) == 0)
      {
        v26 = 0;
        v27 = 0;
      }
      sub_1CB7EC190((uint64_t)&v24);
      swift_bridgeObjectRelease();
      v10 = v27;
      result = swift_bridgeObjectRelease();
      if (v10)
        goto LABEL_17;
      result = sub_1CB7EAB58(v3, v1, 0, v4);
      v3 = result;
      v1 = v11;
      if ((v12 & 1) != 0)
        goto LABEL_12;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    v13 = *(_DWORD *)(v4 + 36);
    v8 = *(_BYTE *)(v4 + 32);
    v7 = v1;
  }
  if (v7 != v13)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v3 != 1 << v8)
  {
    sub_1CB7EAC3C(v3, v1, v4, (uint64_t)&v24);
    sub_1CB7EC154((uint64_t)&v24, (uint64_t)&v22);
    swift_bridgeObjectRetain();
    if ((swift_dynamicCast() & 1) == 0)
    {
      v26 = 0;
      v27 = 0;
    }
    result = sub_1CB7EC190((uint64_t)&v24);
    if (!v27)
      goto LABEL_53;
    v24 = v26;
    v25 = v27;
    sub_1CB7E9B84(&v24, (uint64_t)&v22);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v7 = *(_DWORD *)(v4 + 36);
    if ((v23 & 1) != 0)
    {
      if (v7 == (_DWORD)v1)
      {
        if (v3 != 1 << *(_BYTE *)(v4 + 32))
        {
          while (1)
          {
            v15 = v1;
            v16 = v3;
            v3 = sub_1CB7EAB58(v3, v1, 0, v4);
            v1 = v17;
            v19 = v18;
            result = sub_1CB7E7A70(v16, v15, 0);
            if ((v19 & 1) != 0)
              goto LABEL_52;
            v7 = *(_DWORD *)(v4 + 36);
            if (v7 != (_DWORD)v1)
            {
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
              goto LABEL_48;
            }
            v20 = 1 << *(_BYTE *)(v4 + 32);
            if (v3 == v20)
              goto LABEL_36;
            if (v3 < 0 || v3 >= v20)
              goto LABEL_46;
            if (((*(_QWORD *)(v2 + (((unint64_t)v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) == 0)
              goto LABEL_47;
            sub_1CB7EC154(*(_QWORD *)(v4 + 48) + 40 * v3, (uint64_t)&v24);
            sub_1CB7EC154((uint64_t)&v24, (uint64_t)&v22);
            swift_bridgeObjectRetain();
            if ((swift_dynamicCast() & 1) == 0)
            {
              v26 = 0;
              v27 = 0;
            }
            sub_1CB7EC190((uint64_t)&v24);
            swift_bridgeObjectRelease();
            v14 = v27;
            result = swift_bridgeObjectRelease();
            if (v14)
              goto LABEL_17;
          }
        }
      }
      else
      {
LABEL_48:
        __break(1u);
      }
      __break(1u);
      goto LABEL_50;
    }
  }
LABEL_36:
  if (v7 != (_DWORD)v1)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v3 == 1 << *(_BYTE *)(v4 + 32))
  {
    v21 = 0;
LABEL_44:
    swift_bridgeObjectRelease();
    return v21;
  }
  sub_1CB7EAC3C(v3, v1, v4, (uint64_t)&v24);
  sub_1CB7EC154((uint64_t)&v24, (uint64_t)&v22);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v26 = 0;
    v27 = 0;
  }
  result = sub_1CB7EC190((uint64_t)&v24);
  if (!v27)
    goto LABEL_54;
  v24 = v26;
  v25 = v27;
  sub_1CB7E9B84(&v24, (uint64_t)&v22);
  result = swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
  {
    v21 = v22;
    goto LABEL_44;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_1CB7E88CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  unsigned int v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void **v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  id v54;
  id v55;
  NSObject *v56;
  void (*v57)(char *, uint64_t, uint64_t);
  NSObject *v58;
  os_log_type_t v59;
  _BOOL4 v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void *v67;
  NSObject *v68;
  NSObject *v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  id v72;
  char *v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  char *v78;
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  char *v83;
  uint8_t *v84;
  id v85;
  NSObject *v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  _QWORD *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  void **v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t, uint64_t);
  uint64_t (*v106)(char *, uint64_t);
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[3];

  v99 = a3;
  v112[1] = *MEMORY[0x1E0C80C00];
  v5 = sub_1CB845F58();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v107 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v89 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v109 = (char *)&v89 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v101 = (char *)&v89 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v102 = (char *)&v89 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v89 - v18;
  if (qword_1ED88DDA8 != -1)
    swift_once();
  v20 = sub_1CB8466D8();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED88DD88);
  v105 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v105(v19, a1, v5);
  swift_bridgeObjectRetain();
  v98 = v21;
  v22 = sub_1CB8466C0();
  v23 = sub_1CB846C84();
  v24 = os_log_type_enabled(v22, v23);
  v100 = a1;
  v90 = a2;
  v95 = v6;
  if (v24)
  {
    v25 = swift_slowAlloc();
    v97 = v11;
    v26 = v25;
    v27 = swift_slowAlloc();
    *(_DWORD *)v26 = 134218242;
    v110 = *(_QWORD *)(a2 + 16);
    v111 = v27;
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    v106 = (uint64_t (*)(char *, uint64_t))(v26 + 14);
    sub_1CB7EC0A0((unint64_t *)&qword_1ED88A268, MEMORY[0x1E0CB0048]);
    v28 = sub_1CB847170();
    v110 = sub_1CB775A54(v28, v29, &v111);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    v30 = v19;
    v31 = *(void (**)(char *, uint64_t))(v6 + 8);
    v31(v30, v5);
    _os_log_impl(&dword_1CB771000, v22, v23, "Performing %ld migrations to store at %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v27, -1, -1);
    v32 = v26;
    v11 = v97;
    a1 = v100;
    MEMORY[0x1D179FE84](v32, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    v33 = v19;
    v31 = *(void (**)(char *, uint64_t))(v6 + 8);
    v31(v33, v5);
  }

  v34 = v101;
  sub_1CB845F28();
  v111 = 0x6974617267696D2ELL;
  v112[0] = 0xEB000000005F6E6FLL;
  v35 = v109;
  sub_1CB845EEC();
  sub_1CB845ED4();
  v31(v35, v5);
  sub_1CB846954();
  swift_bridgeObjectRelease();
  v36 = v102;
  sub_1CB845F10();
  swift_bridgeObjectRelease();
  v31(v34, v5);
  v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97B98]), sel_init);
  v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97C00]), sel_initWithManagedObjectModel_, v37);

  v39 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v40 = (void *)sub_1CB845EE0();
  v111 = 0;
  v41 = objc_msgSend(v39, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v40, 1, 0, &v111);

  v42 = (id)v111;
  if (v41)
  {
    v93 = v38;
    v105(v11, a1, v5);
    v43 = v90;
    v44 = *(_QWORD *)(v90 + 16);
    v45 = v5;
    if (v44)
    {
      v92 = v112;
      swift_bridgeObjectRetain();
      v46 = v42;
      v47 = (void **)(v43 + 56);
      *(_QWORD *)&v48 = 134218240;
      v91 = v48;
      v49 = v108;
      v94 = v45;
      v97 = v11;
      v106 = (uint64_t (*)(char *, uint64_t))v31;
      do
      {
        v103 = v47;
        v104 = v44;
        v50 = v49;
        v51 = *(v47 - 3);
        v52 = *(v47 - 2);
        v53 = (uint64_t)*(v47 - 1);
        v109 = (char *)*v47;
        v54 = v51;
        v55 = v52;
        v56 = v54;
        v57 = (void (*)(char *, uint64_t, uint64_t))v55;
        v58 = sub_1CB8466C0();
        v59 = sub_1CB846C84();
        v60 = os_log_type_enabled(v58, v59);
        v108 = v50;
        v105 = v57;
        if (v60)
        {
          v61 = swift_slowAlloc();
          *(_DWORD *)v61 = v91;
          v111 = v53;
          sub_1CB846E58();
          *(_WORD *)(v61 + 12) = 2048;
          v111 = (uint64_t)v109;
          sub_1CB846E58();

          _os_log_impl(&dword_1CB771000, v58, v59, "Migration step v%ld to v%ld", (uint8_t *)v61, 0x16u);
          MEMORY[0x1D179FE84](v61, -1, -1);
        }
        else
        {

          v58 = v56;
        }
        v62 = v53;
        v63 = v56;

        v110 = v62;
        v111 = sub_1CB847170();
        v112[0] = v64;
        sub_1CB846954();
        v110 = (uint64_t)v109;
        sub_1CB847170();
        sub_1CB846954();
        swift_bridgeObjectRelease();
        v65 = v101;
        sub_1CB845F10();
        swift_bridgeObjectRelease();
        sub_1CB845EB0();
        sub_1CB845F1C();
        swift_bridgeObjectRelease();
        v45 = v94;
        v66 = v106(v65, v94);
        v67 = (void *)MEMORY[0x1D179F824](v66);
        v68 = v63;
        v69 = v63;
        v70 = v105;
        v71 = v108;
        v11 = v97;
        sub_1CB7E94F4(v69, v105, v62, (uint64_t)v109, v96);
        v49 = v71;
        if (v71)
        {
          objc_autoreleasePoolPop(v67);

          v77 = (void (*)(char *, uint64_t))v106;
          v106(v107, v45);
          swift_bridgeObjectRelease();
          v77(v11, v45);
          v78 = v102;
          sub_1CB7E92BC();

          return ((uint64_t (*)(char *, uint64_t))v77)(v78, v45);
        }
        objc_autoreleasePoolPop(v67);
        sub_1CB7EC0A0(&qword_1EF9A0718, MEMORY[0x1E0CB0028]);
        if ((sub_1CB846864() & 1) == 0)
          sub_1CB846DBC();
        v31 = (void (*)(char *, uint64_t))v106;
        v47 = v103 + 4;
        v106(v11, v45);

        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v11, v107, v45);
        v44 = v104 - 1;
      }
      while (v104 != 1);
      v76 = 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      v75 = v42;
      v76 = v108;
    }
    v80 = sub_1CB8466C0();
    v81 = sub_1CB846C84();
    v82 = os_log_type_enabled(v80, v81);
    v83 = v102;
    if (v82)
    {
      v84 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v84 = 0;
      _os_log_impl(&dword_1CB771000, v80, v81, "Migration complete. Replacing existing store.", v84, 2u);
      MEMORY[0x1D179FE84](v84, -1, -1);
    }

    v85 = v93;
    sub_1CB846DC8();
    if (!v76)
    {
      v86 = sub_1CB8466C0();
      v87 = sub_1CB846C84();
      if (os_log_type_enabled(v86, (os_log_type_t)v87))
      {
        v88 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v88 = 0;
        _os_log_impl(&dword_1CB771000, v86, (os_log_type_t)v87, "Cleaning up migrated store", v88, 2u);
        MEMORY[0x1D179FE84](v88, -1, -1);
      }

      v85 = v93;
      sub_1CB846DBC();
    }
    v31(v11, v45);
    sub_1CB7E92BC();

    v73 = v83;
    v74 = v45;
  }
  else
  {
    v72 = (id)v111;
    sub_1CB845E80();

    swift_willThrow();
    v73 = v36;
    v74 = v5;
  }
  return ((uint64_t (*)(char *, uint64_t))v31)(v73, v74);
}

void sub_1CB7E92BC()
{
  id v0;
  void *v1;
  unsigned int v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  void *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_1CB845EE0();
  v14[0] = 0;
  v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v14);

  if (v2)
  {
    v3 = qword_1ED88DDA8;
    v4 = v14[0];
    if (v3 != -1)
      swift_once();
    v5 = sub_1CB8466D8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED88DD88);
    v6 = sub_1CB8466C0();
    v7 = sub_1CB846C84();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1CB771000, v6, v7, "Migration storage cleanup completed!", v8, 2u);
      MEMORY[0x1D179FE84](v8, -1, -1);
    }
  }
  else
  {
    v9 = v14[0];
    v10 = (void *)sub_1CB845E80();

    swift_willThrow();
    if (qword_1ED88DDA8 != -1)
      swift_once();
    v11 = sub_1CB8466D8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED88DD88);
    v6 = sub_1CB8466C0();
    v12 = sub_1CB846C90();
    if (os_log_type_enabled(v6, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1CB771000, v6, v12, "Failed to cleanup migration directory! State may be left on the device.", v13, 2u);
      MEMORY[0x1D179FE84](v13, -1, -1);
    }

  }
}

void sub_1CB7E94F4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  _QWORD *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;

  v9 = *(void **)(a5 + 16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1CB84A330;
  *(_QWORD *)(v10 + 32) = v9;
  sub_1CB846A74();
  sub_1CB777FA8(0, &qword_1EF9A0720);
  v11 = v9;
  v12 = a1;
  v13 = a2;
  v14 = (void *)sub_1CB846A44();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend((id)objc_opt_self(), sel_mappingModelFromBundles_forSourceModel_destinationModel_, v14, v12, v13);

  if (v15)
  {
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97BB0]), sel_initWithSourceModel_destinationModel_, v12, v13);
    swift_getKeyPath();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v12;
    v17[3] = v13;
    v17[4] = a3;
    v17[5] = a4;
    v18 = v12;
    v19 = v13;
    v20 = (void *)sub_1CB845E98();
    swift_release();
    swift_release();
    sub_1CB846D44();
    if (!v22)
      sub_1CB845E68();

  }
  else
  {
    sub_1CB7E9EF0();
    swift_allocError();
    *(_QWORD *)v21 = a3;
    *(_QWORD *)(v21 + 8) = a4;
    *(_BYTE *)(v21 + 16) = 0;
    swift_willThrow();
  }
}

void sub_1CB7E9720(void **a1, uint64_t a2, void *a3, void *a4)
{
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  id v15;

  v6 = *a1;
  if (qword_1ED88DDA8 != -1)
    swift_once();
  v7 = sub_1CB8466D8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED88DD88);
  v8 = a3;
  v9 = a4;
  v15 = v8;
  v10 = v9;
  v11 = v6;
  v12 = sub_1CB8466C0();
  v13 = sub_1CB846C84();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    *(_DWORD *)v14 = 134218496;
    sub_1CB846E58();
    *(_WORD *)(v14 + 12) = 2048;

    sub_1CB846E58();
    *(_WORD *)(v14 + 22) = 2048;
    objc_msgSend(v11, sel_migrationProgress);
    sub_1CB846E58();

    _os_log_impl(&dword_1CB771000, v12, v13, "Migration %ld -> %ld progress: %f%%", (uint8_t *)v14, 0x20u);
    MEMORY[0x1D179FE84](v14, -1, -1);

  }
  else
  {

  }
}

id sub_1CB7E992C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v23;

  v1 = sub_1CB845F58();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v23 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v23 - v12;
  v14 = *(void **)(v0 + 16);
  v15 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v16 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v17 = objc_msgSend(v14, sel_URLForResource_withExtension_, v15, v16);

  if (v17)
  {
    sub_1CB845F34();

    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v11, v18, 1, v1);
  sub_1CB7A8F68((uint64_t)v11, (uint64_t)v13);
  sub_1CB7B8B18((uint64_t)v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
  {
    v19 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
    v20 = objc_allocWithZone(MEMORY[0x1E0C97B98]);
    v21 = (void *)sub_1CB845EE0();
    v19 = objc_msgSend(v20, sel_initWithContentsOfURL_, v21);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_1CB799DA0((uint64_t)v13);
  return v19;
}

uint64_t IncrementalMigrationManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t IncrementalMigrationManager.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t *sub_1CB7E9B84@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unsigned __int8 *v21;
  unsigned int v22;
  uint64_t v23;
  char v24;
  _QWORD v25[3];

  v3 = *result;
  v4 = result[1];
  v5 = HIBYTE(v4) & 0xF;
  v6 = *result & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v4) & 0xF;
  else
    v7 = *result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    v20 = 1;
LABEL_47:
    *(_QWORD *)a2 = v7;
    *(_BYTE *)(a2 + 8) = v20 & 1;
    return result;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v9 = (uint64_t)sub_1CB7EA024(v3, v4, 10);
    LOBYTE(v3) = v24;
    result = (uint64_t *)swift_bridgeObjectRelease();
LABEL_44:
    v20 = v3 & 1;
    if ((v3 & 1) != 0)
      v7 = 0;
    else
      v7 = v9;
    goto LABEL_47;
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((v3 & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_1CB846F9C();
    result = (uint64_t *)sub_1CB7EA108(v8, v6, 10);
    v9 = (uint64_t)result;
    LOBYTE(v3) = v10 & 1;
    goto LABEL_44;
  }
  v25[0] = *result;
  v25[1] = v4 & 0xFFFFFFFFFFFFFFLL;
  if (v3 == 43)
  {
    if (!v5)
      goto LABEL_58;
    if (v5 == 1 || (BYTE1(v3) - 48) > 9u)
      goto LABEL_31;
    v9 = (BYTE1(v3) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(v3) - 48) > 9u)
        goto LABEL_31;
      v9 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
      v11 = v5 - 3;
      if (v11)
      {
        v12 = (unsigned __int8 *)v25 + 3;
        while (1)
        {
          v13 = *v12 - 48;
          if (v13 > 9)
            goto LABEL_31;
          v14 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            goto LABEL_31;
          v9 = v14 + v13;
          if (__OFADD__(v14, v13))
            goto LABEL_31;
          LOBYTE(v3) = 0;
          ++v12;
          if (!--v11)
            goto LABEL_44;
        }
      }
    }
LABEL_43:
    LOBYTE(v3) = 0;
    goto LABEL_44;
  }
  if (v3 != 45)
  {
    if (!v5 || (v3 - 48) > 9u)
      goto LABEL_31;
    v9 = (v3 - 48);
    if (v5 != 1)
    {
      if ((BYTE1(v3) - 48) > 9u)
        goto LABEL_31;
      v9 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
      v15 = v5 - 2;
      if (v15)
      {
        v16 = (unsigned __int8 *)v25 + 2;
        while (1)
        {
          v17 = *v16 - 48;
          if (v17 > 9)
            goto LABEL_31;
          v18 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            goto LABEL_31;
          v9 = v18 + v17;
          if (__OFADD__(v18, v17))
            goto LABEL_31;
          LOBYTE(v3) = 0;
          ++v16;
          if (!--v15)
            goto LABEL_44;
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(v3) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        LOBYTE(v3) = 0;
        v9 = -(uint64_t)(BYTE1(v3) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(v3) - 48) <= 9u)
      {
        v9 = -10 * (BYTE1(v3) - 48) - (BYTE2(v3) - 48);
        v19 = v5 - 3;
        if (!v19)
          goto LABEL_43;
        v21 = (unsigned __int8 *)v25 + 3;
        while (1)
        {
          v22 = *v21 - 48;
          if (v22 > 9)
            break;
          v23 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            break;
          v9 = v23 - v22;
          if (__OFSUB__(v23, v22))
            break;
          LOBYTE(v3) = 0;
          ++v21;
          if (!--v19)
            goto LABEL_44;
        }
      }
    }
LABEL_31:
    v9 = 0;
    LOBYTE(v3) = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_1CB7E9E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CB8466D8();
  __swift_allocate_value_buffer(v0, qword_1ED88DD88);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED88DD88);
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED890248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

unint64_t sub_1CB7E9EF0()
{
  unint64_t result;

  result = qword_1EF9A0710;
  if (!qword_1EF9A0710)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84DD58, &type metadata for MigrationManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF9A0710);
  }
  return result;
}

_QWORD *sub_1CB7E9F34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88E508);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1CB7E9F98(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1CB8469B4();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1D179ED50](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_1CB7EA010(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CB7EA108(a1, a2, a3);
}

unsigned __int8 *sub_1CB7EA024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1CB8469CC();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1CB7EA384();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1CB846F9C();
  }
LABEL_7:
  v11 = sub_1CB7EA108(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1CB7EA108(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1CB7EA384()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1CB8469D8();
  v4 = sub_1CB7EA400(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1CB7EA400(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1CB7EA544(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1CB7E9F34(v9, 0);
      v12 = sub_1CB7EA630((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1D179ECD8](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1D179ECD8);
LABEL_9:
      sub_1CB846F9C();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1D179ECD8]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1CB7EA544(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1CB7E9F98(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1CB7E9F98(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1CB84699C();
  }
  __break(1u);
  return result;
}

unint64_t sub_1CB7EA630(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1CB7E9F98(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1CB8469A8();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1CB846F9C();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1CB7E9F98(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1CB846984();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1CB7EA840(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v31;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99CAC8);
  result = sub_1CB847068();
  v9 = result;
  v31 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= a2)
        return v9;
      v16 = v31[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          return v9;
        v16 = v31[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            return v9;
          v16 = v31[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              return v9;
            v16 = v31[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= a2)
                  return v9;
                v16 = v31[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = 8 * v14;
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + v18);
    v20 = *(void **)(*(_QWORD *)(v4 + 56) + v18);
    result = sub_1CB8472D8();
    v21 = -1 << *(_BYTE *)(v9 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = 8 * v24;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + v29) = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v29) = v20;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    result = v20;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CB7EAAB4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1CB7EAB58(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CB7EAC3C@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || 1 << *(_BYTE *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
    return sub_1CB7EC154(*(_QWORD *)(a3 + 48) + 40 * result, a4);
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_1CB7EAC98(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  char v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;

  v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v4 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v5 = MEMORY[0x1E0DEE9D8];
  if (v3 == -1)
    return v5;
  v7 = a2;
  v8 = result;
  v25 = MEMORY[0x1E0DEE9D8];
  result = sub_1CB776454(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v22 = v7;
    v9 = 0;
    v5 = v25;
    v10 = v8 - 1;
    v23 = a3;
    while (v7 != v10)
    {
      if (v9)
        goto LABEL_26;
      if (!*(_QWORD *)(a3 + 16))
        goto LABEL_19;
      result = sub_1CB779C18(v8);
      if ((v11 & 1) == 0)
        goto LABEL_19;
      if (__OFADD__(v8, 1))
        goto LABEL_22;
      v12 = *(_QWORD *)(a3 + 56);
      v13 = *(void **)(v12 + 8 * result);
      v14 = sub_1CB779C18(v8 + 1);
      if ((v15 & 1) == 0)
      {
LABEL_19:
        sub_1CB7E9EF0();
        swift_allocError();
        *(_QWORD *)v21 = 0;
        *(_QWORD *)(v21 + 8) = 0;
        *(_BYTE *)(v21 + 16) = 1;
        swift_willThrow();
        swift_release();
        return v5;
      }
      v16 = *(void **)(v12 + 8 * v14);
      v18 = *(_QWORD *)(v25 + 16);
      v17 = *(_QWORD *)(v25 + 24);
      v24 = v13;
      result = v16;
      v19 = result;
      if (v18 >= v17 >> 1)
        result = sub_1CB776454(v17 > 1, v18 + 1, 1);
      *(_QWORD *)(v25 + 16) = v18 + 1;
      v20 = (_QWORD *)(v25 + 32 * v18);
      a3 = v23;
      v20[4] = v24;
      v20[5] = v19;
      v20[6] = v8;
      v20[7] = v8 + 1;
      v7 = v22;
      v9 = v8 == v22;
      if (v8 == v22)
        v8 = 0;
      else
        ++v8;
      if (v22 == ++v10)
        return v5;
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1CB7EAE58(uint64_t a1)
{
  unint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  _OWORD v28[2];
  _OWORD v29[2];

  if (!*(_QWORD *)(a1 + 16))
    return 0;
  v2 = sub_1CB779A70(0xD00000000000001ELL, 0x80000001CB8568A0);
  if ((v3 & 1) == 0)
    return 0;
  sub_1CB778000(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v28);
  sub_1CB777CAC(v28, v29);
  sub_1CB778000((uint64_t)v29, (uint64_t)v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A728);
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
    return 0;
  }
  if (!v27[2]
    || ((v5 = v27[4],
         v4 = v27[5],
         swift_bridgeObjectRetain(),
         result = swift_bridgeObjectRelease(),
         v7 = HIBYTE(v4) & 0xF,
         v8 = v5 & 0xFFFFFFFFFFFFLL,
         (v4 & 0x2000000000000000) != 0)
      ? (v9 = HIBYTE(v4) & 0xF)
      : (v9 = v5 & 0xFFFFFFFFFFFFLL),
        !v9))
  {
    swift_bridgeObjectRelease();
    v13 = 0;
LABEL_56:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
    return v13;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v11 = (uint64_t)sub_1CB7EA024(v5, v4, 10);
    LOBYTE(v5) = v26;
    swift_bridgeObjectRelease_n();
LABEL_53:
    if ((v5 & 1) != 0)
      v13 = 0;
    else
      v13 = v11;
    goto LABEL_56;
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((v5 & 0x1000000000000000) != 0)
      v10 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v10 = (unsigned __int8 *)sub_1CB846F9C();
    v11 = (uint64_t)sub_1CB7EA108(v10, v8, 10);
    LOBYTE(v5) = v12 & 1;
    goto LABEL_52;
  }
  *(_QWORD *)&v28[0] = v5;
  *((_QWORD *)&v28[0] + 1) = v4 & 0xFFFFFFFFFFFFFFLL;
  if (v5 == 43)
  {
    if (!v7)
      goto LABEL_67;
    if (v7 == 1 || (BYTE1(v5) - 48) > 9u)
      goto LABEL_39;
    v11 = (BYTE1(v5) - 48);
    if (v7 != 2)
    {
      if ((BYTE2(v5) - 48) > 9u)
        goto LABEL_39;
      v11 = 10 * (BYTE1(v5) - 48) + (BYTE2(v5) - 48);
      v14 = v7 - 3;
      if (v14)
      {
        v15 = (unsigned __int8 *)v28 + 3;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_39;
          v17 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
            goto LABEL_39;
          v11 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_39;
          LOBYTE(v5) = 0;
          ++v15;
          if (!--v14)
            goto LABEL_52;
        }
      }
    }
LABEL_51:
    LOBYTE(v5) = 0;
    goto LABEL_52;
  }
  if (v5 != 45)
  {
    if (!v7 || (v5 - 48) > 9u)
      goto LABEL_39;
    v11 = (v5 - 48);
    if (v7 != 1)
    {
      if ((BYTE1(v5) - 48) > 9u)
        goto LABEL_39;
      v11 = 10 * (v5 - 48) + (BYTE1(v5) - 48);
      v18 = v7 - 2;
      if (v18)
      {
        v19 = (unsigned __int8 *)v28 + 2;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_39;
          v21 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
            goto LABEL_39;
          v11 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_39;
          LOBYTE(v5) = 0;
          ++v19;
          if (!--v18)
            goto LABEL_52;
        }
      }
    }
    goto LABEL_51;
  }
  if (v7)
  {
    if (v7 != 1 && (BYTE1(v5) - 48) <= 9u)
    {
      if (v7 == 2)
      {
        LOBYTE(v5) = 0;
        v11 = -(uint64_t)(BYTE1(v5) - 48);
LABEL_52:
        swift_bridgeObjectRelease();
        goto LABEL_53;
      }
      if ((BYTE2(v5) - 48) <= 9u)
      {
        v11 = -10 * (BYTE1(v5) - 48) - (BYTE2(v5) - 48);
        v22 = v7 - 3;
        if (!v22)
          goto LABEL_51;
        v23 = (unsigned __int8 *)v28 + 3;
        while (1)
        {
          v24 = *v23 - 48;
          if (v24 > 9)
            break;
          v25 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
            break;
          v11 = v25 - v24;
          if (__OFSUB__(v25, v24))
            break;
          LOBYTE(v5) = 0;
          ++v23;
          if (!--v22)
            goto LABEL_52;
        }
      }
    }
LABEL_39:
    v11 = 0;
    LOBYTE(v5) = 1;
    goto LABEL_52;
  }
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

unint64_t sub_1CB7EB208(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  char isUniquelyReferenced_nonNull_native;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t (**v79)(_QWORD, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t (**v86)(_QWORD, uint64_t);
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  void (*v89)(char *, uint64_t, uint64_t, uint64_t);
  void (*v90)(char *, char *, uint64_t);
  id v91[2];

  v91[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E158);
  v5 = MEMORY[0x1E0C80A78](v4);
  v83 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v80 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v80 - v10;
  v12 = sub_1CB845F58();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v84 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v85 = (char *)&v80 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v88 = (char *)&v80 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v80 - v21;
  MEMORY[0x1E0C80A78](v20);
  v81 = (char *)&v80 - v23;
  v24 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v25 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v26 = objc_msgSend(a3, sel_URLForResource_withExtension_, v24, v25);

  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_20;
  }
  sub_1CB845F34();

  v27 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v27(v11, v22, v12);
  v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v89(v11, 0, 1, v12);
  v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v87(v11, 1, v12) == 1)
  {
LABEL_20:
    sub_1CB799DA0((uint64_t)v11);
    return sub_1CB78B1B8(MEMORY[0x1E0DEE9D8]);
  }
  v86 = (uint64_t (**)(_QWORD, uint64_t))v13;
  v28 = v81;
  v90 = v27;
  v27(v81, v11, v12);
  v29 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v30 = (void *)sub_1CB845EE0();
  v91[0] = 0;
  v31 = objc_msgSend(v29, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v30, 0, 0, v91);

  v32 = v91[0];
  if (v31)
  {
    v33 = sub_1CB846A5C();
    v34 = v32;

    v91[0] = (id)MEMORY[0x1E0DEE9D8];
    v35 = (unint64_t)v86;
    v36 = v90;
    v82 = *(_QWORD *)(v33 + 16);
    if (v82)
    {
      v37 = 0;
      while (1)
      {
        if (v37 >= *(_QWORD *)(v33 + 16))
        {
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        v38 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
        v39 = *(_QWORD *)(v35 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v9, v33 + v38 + v39 * v37, v12);
        v89(v9, 0, 1, v12);
        if (v87(v9, 1, v12) == 1)
          goto LABEL_23;
        v36(v88, v9, v12);
        if (sub_1CB845EB0() == 7171949 && v40 == 0xE300000000000000)
          break;
        v41 = sub_1CB8471A0();
        swift_bridgeObjectRelease();
        if ((v41 & 1) != 0)
          goto LABEL_14;
        (*(void (**)(char *, uint64_t))(v35 + 8))(v88, v12);
        v36 = v90;
LABEL_7:
        if (v82 == ++v37)
          goto LABEL_22;
      }
      swift_bridgeObjectRelease();
LABEL_14:
      v90(v85, v88, v12);
      v42 = (char *)v91[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CB776428(0, *((_QWORD *)v42 + 2) + 1, 1);
        v42 = (char *)v91[0];
      }
      v44 = *((_QWORD *)v42 + 2);
      v43 = *((_QWORD *)v42 + 3);
      if (v44 >= v43 >> 1)
      {
        sub_1CB776428(v43 > 1, v44 + 1, 1);
        v42 = (char *)v91[0];
      }
      *((_QWORD *)v42 + 2) = v44 + 1;
      v36 = v90;
      v90(&v42[v38 + v44 * v39], v85, v12);
      v91[0] = v42;
      v35 = (unint64_t)v86;
      goto LABEL_7;
    }
LABEL_22:
    v89(v9, 1, 1, v12);
LABEL_23:
    swift_bridgeObjectRelease();
    sub_1CB799DA0((uint64_t)v9);
    v46 = (char *)v91[0];
    v91[0] = (id)MEMORY[0x1E0DEE9D8];
    v47 = *((_QWORD *)v46 + 2);
    v88 = v46;
    if (v47)
    {
      v48 = &v46[(*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80)];
      v49 = *(_QWORD *)(v35 + 72);
      v50 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
      swift_retain();
      v52 = v83;
      v51 = v84;
      while (1)
      {
        v50(v52, v48, v12);
        v89(v52, 0, 1, v12);
        if (v87(v52, 1, v12) == 1)
          break;
        v36(v51, v52, v12);
        v53 = objc_allocWithZone(MEMORY[0x1E0C97B98]);
        v54 = (void *)sub_1CB845EE0();
        v55 = objc_msgSend(v53, sel_initWithContentsOfURL_, v54);

        v56 = ((uint64_t (**)(char *, uint64_t))v86)[1](v51, v12);
        if (v55)
        {
          MEMORY[0x1D179EDF8](v56);
          if (*(_QWORD *)(((unint64_t)v91[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((unint64_t)v91[0] & 0xFFFFFFFFFFFFFF8)
                                                                                                 + 0x18) >> 1)
            sub_1CB846AA4();
          sub_1CB846AD4();
          sub_1CB846A74();
          v52 = v83;
        }
        v48 += v49;
        --v47;
        v36 = v90;
        if (!v47)
          goto LABEL_33;
      }
    }
    else
    {
      swift_retain();
      v52 = v83;
LABEL_33:
      v89(v52, 1, 1, v12);
    }
    swift_release();
    v35 = (unint64_t)v91[0];
    swift_release();
    if (v35 >> 62)
    {
LABEL_58:
      swift_bridgeObjectRetain();
      v58 = sub_1CB847044();
      if (v58)
        goto LABEL_36;
    }
    else
    {
      v58 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v58)
      {
LABEL_36:
        v90 = (void (*)(char *, char *, uint64_t))(v35 & 0xC000000000000001);
        v22 = (char *)MEMORY[0x1E0DEE9E0];
        v59 = 4;
        while (1)
        {
          if (v90)
            v62 = (id)MEMORY[0x1D179F320](v59 - 4, v35);
          else
            v62 = *(id *)(v35 + 8 * v59);
          v63 = v62;
          v64 = v59 - 3;
          if (__OFADD__(v59 - 4, 1))
            goto LABEL_57;
          v65 = sub_1CB7E8490();
          if ((v66 & 1) != 0)
            break;
          v67 = v65;
          if (*((_QWORD *)v22 + 2))
          {
            sub_1CB779C18(v65);
            if ((v68 & 1) != 0)
            {
              if (qword_1ED88DDA8 != -1)
                swift_once();
              v69 = sub_1CB8466D8();
              __swift_project_value_buffer(v69, (uint64_t)qword_1ED88DD88);
              v70 = sub_1CB8466C0();
              v71 = sub_1CB846C90();
              if (os_log_type_enabled(v70, v71))
              {
                v72 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v72 = 0;
                _os_log_impl(&dword_1CB771000, v70, v71, "Duplicate model number found between two models.", v72, 2u);
                MEMORY[0x1D179FE84](v72, -1, -1);
              }

              sub_1CB7E9EF0();
              swift_allocError();
              v74 = 2;
LABEL_55:
              *(_QWORD *)v73 = v74;
              *(_QWORD *)(v73 + 8) = 0;
              v79 = v86;
              *(_BYTE *)(v73 + 16) = 1;
              swift_willThrow();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              ((uint64_t (**)(char *, uint64_t))v79)[1](v81, v12);
              swift_bridgeObjectRelease();
              return (unint64_t)v22;
            }
          }
          v60 = v63;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v91[0] = v22;
          sub_1CB82EFC0((uint64_t)v60, v67, isUniquelyReferenced_nonNull_native);
          v22 = (char *)v91[0];

          swift_bridgeObjectRelease();
          ++v59;
          if (v64 == v58)
            goto LABEL_60;
        }
        if (qword_1ED88DDA8 != -1)
          swift_once();
        v75 = sub_1CB8466D8();
        __swift_project_value_buffer(v75, (uint64_t)qword_1ED88DD88);
        v76 = sub_1CB8466C0();
        v77 = sub_1CB846C84();
        if (os_log_type_enabled(v76, v77))
        {
          v78 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v78 = 0;
          _os_log_impl(&dword_1CB771000, v76, v77, "Missing version number for model", v78, 2u);
          MEMORY[0x1D179FE84](v78, -1, -1);
        }

        sub_1CB7E9EF0();
        swift_allocError();
        v74 = 1;
        goto LABEL_55;
      }
    }
    v22 = (char *)MEMORY[0x1E0DEE9E0];
LABEL_60:
    swift_bridgeObjectRelease();
    ((uint64_t (**)(char *, uint64_t))v86)[1](v81, v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    v57 = v91[0];
    sub_1CB845E80();

    swift_willThrow();
    ((uint64_t (**)(char *, uint64_t))v86)[1](v28, v12);
  }
  return (unint64_t)v22;
}

void sub_1CB7EBBE8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  unsigned int v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;

  v19 = 0;
  v4 = 0;
  v20 = a3 + 64;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 64);
  v21 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v9 = v8 | (v4 << 6);
      goto LABEL_5;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v21)
      goto LABEL_24;
    v14 = *(_QWORD *)(v20 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v21)
        goto LABEL_24;
      v14 = *(_QWORD *)(v20 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v21)
          goto LABEL_24;
        v14 = *(_QWORD *)(v20 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v7 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_5:
    v10 = *(id *)(*(_QWORD *)(a3 + 56) + 8 * v9);
    v11 = (void *)sub_1CB8467E0();
    v12 = objc_msgSend(v10, sel_isConfiguration_compatibleWithStoreMetadata_, 0, v11);

    if (v12)
    {
      *(unint64_t *)((char *)a1 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
      if (__OFADD__(v19++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1CB7EA840(a1, a2, v19, a3);
        return;
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v21)
    goto LABEL_24;
  v14 = *(_QWORD *)(v20 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v21)
      goto LABEL_24;
    v14 = *(_QWORD *)(v20 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1CB7EBE00(uint64_t a1)
{
  uint64_t v1;
  char v3;
  unsigned int v4;
  unint64_t v5;
  size_t v6;
  uint64_t isStackAllocationSafe;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(a1 + 32);
  v4 = v3 & 0x3F;
  v5 = (unint64_t)((1 << v3) + 63) >> 6;
  v6 = 8 * v5;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v4 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    swift_bridgeObjectRetain();
    sub_1CB7EBBE8((_QWORD *)((char *)v13 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a1);
    v9 = v8;
    swift_bridgeObjectRelease();
    if (v1)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v6);
    swift_bridgeObjectRetain();
    sub_1CB7EBBE8((unint64_t *)v10, v5, a1);
    v9 = v11;
    swift_bridgeObjectRelease();
    MEMORY[0x1D179FE84](v10, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v9;
}

uint64_t type metadata accessor for IncrementalMigrationManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for IncrementalMigrationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IncrementalMigrationManager.__allocating_init(bundle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of IncrementalMigrationManager.migrateToLatest(url:storeType:modelName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t getEnumTagSinglePayload for MigrationManagerError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MigrationManagerError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_1CB7EC054(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1CB7EC070(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    *(_BYTE *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MigrationManagerError()
{
  return &type metadata for MigrationManagerError;
}

uint64_t sub_1CB7EC0A0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1CB845F58();
    result = MEMORY[0x1D179FD88](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

char *keypath_get_selector_migrationProgress()
{
  return sel_migrationProgress;
}

id sub_1CB7EC0EC@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;
  int v4;

  result = objc_msgSend(*a1, sel_migrationProgress);
  *a2 = v4;
  return result;
}

uint64_t sub_1CB7EC11C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1CB7EC148(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CB7E9720(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1CB7EC154(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1CB7EC190(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t INCreateNoteIntentFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t INCreateNoteIntentFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1CB7EC1DC(id *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t NoteEvent;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;

  v1 = *a1;
  v2 = objc_msgSend(v1, sel_intent);
  objc_opt_self();
  v3 = swift_dynamicCastObjCClass();
  if (!v3)
  {

    return MEMORY[0x1E0DEE9D8];
  }
  v4 = (void *)v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFE8);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1CB848A60;
  v6 = objc_msgSend(v4, sel_typeName);
  v7 = sub_1CB8468A0();
  v9 = v8;

  NoteEvent = type metadata accessor for CreateNoteEventFeature.EventType(0);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v7;
  *(_QWORD *)(v11 + 24) = v9;
  *(_QWORD *)(v5 + 56) = NoteEvent;
  *(_QWORD *)(v5 + 64) = sub_1CB78E6AC(&qword_1EF9A0728, type metadata accessor for CreateNoteEventFeature.EventType);
  *(_QWORD *)(v5 + 32) = v11;
  LOBYTE(NoteEvent) = objc_msgSend(v1, sel__donatedBySiri);
  v12 = type metadata accessor for CreateNoteEventFeature.DonatedBySiri(0);
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = NoteEvent;
  *(_QWORD *)(v5 + 96) = v12;
  *(_QWORD *)(v5 + 104) = sub_1CB78E6AC(&qword_1EF9A0730, type metadata accessor for CreateNoteEventFeature.DonatedBySiri);
  *(_QWORD *)(v5 + 72) = v13;
  v14 = objc_msgSend(v4, sel_content);
  if (!v14)
  {
LABEL_8:

    return v5;
  }
  v15 = v14;
  objc_opt_self();
  v16 = (void *)swift_dynamicCastObjCClass();
  if (!v16)
  {

    goto LABEL_8;
  }
  v17 = objc_msgSend(v16, sel_text);
  if (v17)
  {
    v18 = v17;
    v19 = sub_1CB8468A0();
    v21 = v20;

  }
  else
  {
    v19 = 0;
    v21 = 0xE000000000000000;
  }
  v22 = type metadata accessor for CreateNoteEventFeature.NoteTextContent(0);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v19;
  *(_QWORD *)(v23 + 24) = v21;
  v26 = v23;
  v27 = sub_1CB78F738((_QWORD *)1, 3, 1, (_QWORD *)v5);
  v24 = sub_1CB78E6AC(&qword_1EF9A0738, type metadata accessor for CreateNoteEventFeature.NoteTextContent);
  swift_retain();
  sub_1CB790854(2, (uint64_t)&v26, (uint64_t *)&v27, v22, v24);
  swift_release();
  v5 = (uint64_t)v27;

  return v5;
}

uint64_t CreateNoteEventFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = a1;
  return result;
}

uint64_t type metadata accessor for CreateNoteEventFeature.EventType(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A0808);
}

uint64_t INCreateNoteIntentFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t INCreateNoteIntentFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CreateNoteEventFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A08F0);
}

uint64_t sub_1CB7EC4FC(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for CreateNoteEventFeature.EventType);
}

uint64_t sub_1CB7EC508(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for CreateNoteEventFeature.EventType);
}

uint64_t CreateNoteEventFeature.DonatedBySiri.init(value:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t type metadata accessor for CreateNoteEventFeature.NoteTextContent(uint64_t a1)
{
  return sub_1CB78DA28(a1, qword_1EF9A09D8);
}

uint64_t CreateNoteEventFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1;
  v3 = swift_allocObject();
  v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t CreateNoteEventFeature.DonatedBySiri.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CreateNoteEventFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7EC620(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  type metadata accessor for CreateNoteEventFeature.DonatedBySiri(0);
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = v1;
  return result;
}

uint64_t sub_1CB7EC654(unsigned __int8 *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  type metadata accessor for CreateNoteEventFeature.DonatedBySiri(0);
  v2 = swift_allocObject();
  v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99D360);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_BYTE *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t CreateNoteEventFeature.NoteTextContent.init(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t CreateNoteEventFeature.NoteTextContent.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CB7EC6F8(uint64_t *a1)
{
  return sub_1CB78F1A0(a1, (void (*)(_QWORD))type metadata accessor for CreateNoteEventFeature.NoteTextContent);
}

uint64_t sub_1CB7EC704(uint64_t *a1)
{
  return sub_1CB78F1E0(a1, (void (*)(_QWORD))type metadata accessor for CreateNoteEventFeature.NoteTextContent);
}

uint64_t type metadata accessor for INCreateNoteIntentFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for INCreateNoteIntentFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of INCreateNoteIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of INCreateNoteIntentFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

ValueMetadata *type metadata accessor for CreateNoteEventFeature()
{
  return &type metadata for CreateNoteEventFeature;
}

uint64_t dispatch thunk of InferredGroundTruth.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of InferredGroundTruth.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of InferredGroundTruth.payload.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

SiriPrivateLearningAnalytics::SiriUserFeedbackLearningTaskContext __swiftcall SiriUserFeedbackLearningTaskContext.init(triggerType:)(SiriPrivateLearningAnalytics::SiriUserFeedbackLearningTaskContext triggerType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)triggerType.triggerType;
  return triggerType;
}

uint64_t SiriUserFeedbackLearningTaskContext.TriggerType.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D69742D6C616572;
  else
    return 0x616E65746E69616DLL;
}

SiriPrivateLearningAnalytics::SiriUserFeedbackLearningTaskContext::TriggerType_optional __swiftcall SiriUserFeedbackLearningTaskContext.TriggerType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  SiriPrivateLearningAnalytics::SiriUserFeedbackLearningTaskContext::TriggerType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CB8470B0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t SiriUserFeedbackLearningTaskContext.TriggerType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x656D69746C616572;
  else
    return 0x616E65746E69616DLL;
}

uint64_t sub_1CB7EC878(char *a1, char *a2)
{
  return sub_1CB80C664(*a1, *a2);
}

uint64_t sub_1CB7EC884()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB7EC90C()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7EC970()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

SiriPrivateLearningAnalytics::SiriUserFeedbackLearningTaskContext::TriggerType_optional sub_1CB7EC9F4(Swift::String *a1)
{
  return SiriUserFeedbackLearningTaskContext.TriggerType.init(rawValue:)(*a1);
}

void sub_1CB7ECA00(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x616E65746E69616DLL;
  if (*v1)
    v2 = 0x656D69746C616572;
  v3 = 0xEB0000000065636ELL;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1CB7ECA48()
{
  sub_1CB7ED41C();
  return sub_1CB846A20();
}

uint64_t sub_1CB7ECAA4()
{
  sub_1CB7ED41C();
  return sub_1CB846A08();
}

uint64_t sub_1CB7ECAF0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D69742D6C616572;
  else
    return 0x616E65746E69616DLL;
}

void SiriUserFeedbackLearningTaskContext.triggerType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t SiriUserFeedbackLearningTaskContext.description.getter()
{
  _QWORD v1[2];

  strcpy((char *)v1, "triggerType: ");
  sub_1CB846954();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_1CB7ECBE8()
{
  return 0x5472656767697274;
}

uint64_t sub_1CB7ECC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x5472656767697274 && a2 == 0xEB00000000657079)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CB8471A0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1CB7ECCB4()
{
  sub_1CB7ED0B4();
  return sub_1CB84738C();
}

uint64_t sub_1CB7ECCDC()
{
  sub_1CB7ED0B4();
  return sub_1CB847398();
}

uint64_t SiriUserFeedbackLearningTaskContext.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88A7F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB7ED0B4();
  sub_1CB847350();
  v10 = v7;
  sub_1CB7ED0F8();
  sub_1CB847134();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SiriUserFeedbackLearningTaskContext.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C230);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CB7ED0B4();
  sub_1CB847338();
  if (!v2)
  {
    sub_1CB7ED13C();
    sub_1CB8470EC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1CB7ECF1C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SiriUserFeedbackLearningTaskContext.init(from:)(a1, a2);
}

uint64_t sub_1CB7ECF30(_QWORD *a1)
{
  return SiriUserFeedbackLearningTaskContext.encode(to:)(a1);
}

uint64_t sub_1CB7ECF44()
{
  sub_1CB846954();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  sub_1CB846954();
  return 0;
}

uint64_t _s28SiriPrivateLearningAnalytics0a12UserFeedbackC11TaskContextV2eeoiySbAC_ACtFZ_0(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x656D69746C616572;
  else
    v3 = 0x616E65746E69616DLL;
  if (v2)
    v4 = 0xEB0000000065636ELL;
  else
    v4 = 0xE800000000000000;
  if (*a2)
    v5 = 0x656D69746C616572;
  else
    v5 = 0x616E65746E69616DLL;
  if (*a2)
    v6 = 0xE800000000000000;
  else
    v6 = 0xEB0000000065636ELL;
  if (v3 == v5 && v4 == v6)
    v8 = 1;
  else
    v8 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1CB7ED0B4()
{
  unint64_t result;

  result = qword_1ED88E1B8;
  if (!qword_1ED88E1B8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84E1FC, &type metadata for SiriUserFeedbackLearningTaskContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E1B8);
  }
  return result;
}

unint64_t sub_1CB7ED0F8()
{
  unint64_t result;

  result = qword_1ED88A270;
  if (!qword_1ED88A270)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriUserFeedbackLearningTaskContext.TriggerType, &type metadata for SiriUserFeedbackLearningTaskContext.TriggerType);
    atomic_store(result, (unint64_t *)&qword_1ED88A270);
  }
  return result;
}

unint64_t sub_1CB7ED13C()
{
  unint64_t result;

  result = qword_1ED88C1D8;
  if (!qword_1ED88C1D8)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriUserFeedbackLearningTaskContext.TriggerType, &type metadata for SiriUserFeedbackLearningTaskContext.TriggerType);
    atomic_store(result, (unint64_t *)&qword_1ED88C1D8);
  }
  return result;
}

unint64_t sub_1CB7ED184()
{
  unint64_t result;

  result = qword_1EF9A0A98;
  if (!qword_1EF9A0A98)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriUserFeedbackLearningTaskContext.TriggerType, &type metadata for SiriUserFeedbackLearningTaskContext.TriggerType);
    atomic_store(result, (unint64_t *)&qword_1EF9A0A98);
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskContext()
{
  return &type metadata for SiriUserFeedbackLearningTaskContext;
}

uint64_t _s28SiriPrivateLearningAnalytics35SiriUserFeedbackLearningTaskContextV11TriggerTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CB7ED228 + 4 * byte_1CB84DF05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CB7ED25C + 4 * asc_1CB84DF00[v4]))();
}

uint64_t sub_1CB7ED25C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7ED264(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB7ED26CLL);
  return result;
}

uint64_t sub_1CB7ED278(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB7ED280);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CB7ED284(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7ED28C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskContext.TriggerType()
{
  return &type metadata for SiriUserFeedbackLearningTaskContext.TriggerType;
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningTaskContext.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CB7ED2E8 + 4 * byte_1CB84DF0A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CB7ED308 + 4 * byte_1CB84DF0F[v4]))();
}

_BYTE *sub_1CB7ED2E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CB7ED308(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CB7ED310(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CB7ED318(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CB7ED320(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CB7ED328(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskContext.CodingKeys()
{
  return &type metadata for SiriUserFeedbackLearningTaskContext.CodingKeys;
}

unint64_t sub_1CB7ED348()
{
  unint64_t result;

  result = qword_1EF9A0AA0;
  if (!qword_1EF9A0AA0)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84E1D4, &type metadata for SiriUserFeedbackLearningTaskContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF9A0AA0);
  }
  return result;
}

unint64_t sub_1CB7ED390()
{
  unint64_t result;

  result = qword_1ED88E1C8;
  if (!qword_1ED88E1C8)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84E144, &type metadata for SiriUserFeedbackLearningTaskContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E1C8);
  }
  return result;
}

unint64_t sub_1CB7ED3D8()
{
  unint64_t result;

  result = qword_1ED88E1C0;
  if (!qword_1ED88E1C0)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84E16C, &type metadata for SiriUserFeedbackLearningTaskContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED88E1C0);
  }
  return result;
}

unint64_t sub_1CB7ED41C()
{
  unint64_t result;

  result = qword_1ED88E1D0;
  if (!qword_1ED88E1D0)
  {
    result = MEMORY[0x1D179FD88](&protocol conformance descriptor for SiriUserFeedbackLearningTaskContext.TriggerType, &type metadata for SiriUserFeedbackLearningTaskContext.TriggerType);
    atomic_store(result, (unint64_t *)&qword_1ED88E1D0);
  }
  return result;
}

void sub_1CB7ED460()
{
  qword_1EF9A0AA8 = (uint64_t)&unk_1E868A670;
}

uint64_t sub_1CB7ED474(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  unsigned __int8 v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  char v15;
  char v16;
  void *v17;
  void *v18;
  void *v19;
  char v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = v1;
  v4 = sub_1CB846654();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + 16);
  v7 = *(void **)(v2 + 24);
  v8 = *(void **)(v2 + 32);
  v9 = *(_BYTE *)(v2 + 40);
  sub_1CB7EDB70(v6, v7, v8, v9);
  v10 = sub_1CB7ED87C(a1, v6, v7, v8, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_1CB7EDBBC(v6, v7, v8, v9);
  v17 = *(void **)(v2 + 16);
  v18 = *(void **)(v2 + 24);
  v19 = *(void **)(v2 + 32);
  LOBYTE(v7) = *(_BYTE *)(v2 + 40);
  sub_1CB7EDB70(v17, v18, v19, v7);
  sub_1CB7EE9CC((uint64_t)v17, (uint64_t)v18, (uint64_t)v19, (char)v7);
  LOBYTE(v8) = v20;
  sub_1CB7EDBBC(v17, v18, v19, v7);
  if ((v8 & 1) == 0)
  {
    if (qword_1EF99C3F8 != -1)
      swift_once();
    v21 = sub_1CB8466D8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EF9A0AB0);
    sub_1CB7EDB70(v10, v12, v14, v16);
    sub_1CB7EDB70(v10, v12, v14, v16);
    v22 = sub_1CB8466C0();
    v23 = sub_1CB846C84();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v42 = v37;
      *(_DWORD *)v24 = 136315138;
      v36[1] = v24 + 4;
      sub_1CB7EDA20((uint64_t)v10, (uint64_t)v12, (uint64_t)v14, v16);
      v41 = sub_1CB775A54(v25, v26, &v42);
      sub_1CB846E58();
      swift_bridgeObjectRelease();
      sub_1CB7EDBBC(v10, v12, v14, v16);
      sub_1CB7EDBBC(v10, v12, v14, v16);
      _os_log_impl(&dword_1CB771000, v22, v23, "UserDisambiguatesPhoneCallOrMessagesContact state will be updated to %s", v24, 0xCu);
      v27 = v37;
      swift_arrayDestroy();
      MEMORY[0x1D179FE84](v27, -1, -1);
      MEMORY[0x1D179FE84](v24, -1, -1);
    }
    else
    {
      sub_1CB7EDBBC(v10, v12, v14, v16);
      sub_1CB7EDBBC(v10, v12, v14, v16);
    }

  }
  v28 = *(void **)(v2 + 16);
  v29 = *(void **)(v2 + 24);
  v30 = *(void **)(v2 + 32);
  *(_QWORD *)(v2 + 16) = v10;
  *(_QWORD *)(v2 + 24) = v12;
  *(_QWORD *)(v2 + 32) = v14;
  v31 = *(_BYTE *)(v2 + 40);
  *(_BYTE *)(v2 + 40) = v16;
  sub_1CB7EDB70(v10, v12, v14, v16);
  sub_1CB7EDBBC(v28, v29, v30, v31);
  if (*(_BYTE *)(v2 + 40) == 2)
  {
    if ((*(_BYTE *)(v2 + 16) & 1) != 0)
      v32 = 4;
    else
      v32 = 3;
    if (qword_1ED88A288 != -1)
      swift_once();
    v33 = sub_1CB846678();
    __swift_project_value_buffer(v33, (uint64_t)qword_1ED8901B0);
    v34 = (uint64_t)v38;
    sub_1CB846648();
    sub_1CB7BECCC("events.filters.UserDisambiguatesPhoneCallOrMessagesContact", 58, 2, v34);
    sub_1CB7EDBBC(v10, v12, v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v34, v40);
  }
  else
  {
    sub_1CB7EDBBC(v10, v12, v14, v16);
    return 0;
  }
  return v32;
}

void *sub_1CB7ED87C(uint64_t a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  void *v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;

  if (*(_BYTE *)(a1 + 24))
  {
    v9 = *(void **)(a1 + 16);
    if (*(_BYTE *)(a1 + 24) == 1)
    {
      sub_1CB7D345C(v9, 1u);
      a2 = sub_1CB7EE4A8(v9, a2, a3, a4, a5);
      v10 = v9;
      v11 = 1;
    }
    else
    {
      sub_1CB7D345C(v9, 2u);
      a2 = sub_1CB7EE0A4(v9, a2, a3, a4, a5);
      v10 = v9;
      v11 = 2;
    }
    sub_1CB7D3480(v10, v11);
  }
  else
  {
    if (qword_1EF99C3F8 != -1)
      swift_once();
    v12 = sub_1CB8466D8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EF9A0AB0);
    v13 = sub_1CB8466C0();
    v14 = sub_1CB846C84();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1CB771000, v13, v14, "UserDisambiguatesPhoneCallOrMessagesContact received a non Siri UI / Execution event", v15, 2u);
      MEMORY[0x1D179FE84](v15, -1, -1);
    }

    sub_1CB7EDB70(a2, a3, a4, a5);
  }
  return a2;
}

void sub_1CB7EDA20(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

unint64_t sub_1CB7EDA70()
{
  return 0xD000000000000017;
}

uint64_t sub_1CB7EDB24()
{
  uint64_t v0;

  sub_1CB7EDBBC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UserDisambiguatesPhoneCallOrMessagesContactFilter()
{
  return objc_opt_self();
}

id sub_1CB7EDB70(id result, void *a2, void *a3, unsigned __int8 a4)
{
  id v5;

  if (a4 >= 2u)
  {
    if (a4 != 2)
      return result;
    v5 = a2;
    result = a3;
  }
  return result;
}

void destroy for UserDisambiguatesPhoneCallOrMessagesContactFilterState(uint64_t a1)
{
  sub_1CB7EDBBC(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_1CB7EDBBC(void *a1, void *a2, void *a3, unsigned __int8 a4)
{
  if (a4 >= 2u)
  {
    if (a4 != 2)
      return;

    a1 = a3;
  }

}

uint64_t initializeWithCopy for UserDisambiguatesPhoneCallOrMessagesContactFilterState(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1CB7EDB70(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for UserDisambiguatesPhoneCallOrMessagesContactFilterState(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1CB7EDB70(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1CB7EDBBC(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for UserDisambiguatesPhoneCallOrMessagesContactFilterState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1CB7EDBBC(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserDisambiguatesPhoneCallOrMessagesContactFilterState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UserDisambiguatesPhoneCallOrMessagesContactFilterState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CB7EDDAC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 2u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1CB7EDDC4(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 3;
  if (a2 >= 3)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 3;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UserDisambiguatesPhoneCallOrMessagesContactFilterState()
{
  return &type metadata for UserDisambiguatesPhoneCallOrMessagesContactFilterState;
}

void sub_1CB7EDDF0()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;

  v1 = *v0;
  v2 = *(void **)(*v0 + 16);
  v3 = *(void **)(*v0 + 24);
  v4 = *(void **)(*v0 + 32);
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  v5 = *(_BYTE *)(v1 + 40);
  *(_BYTE *)(v1 + 40) = 3;
  sub_1CB7EDBBC(v2, v3, v4, v5);
}

uint64_t sub_1CB7EDE14(uint64_t a1)
{
  return sub_1CB7ED474(a1);
}

uint64_t sub_1CB7EDE34()
{
  if (qword_1EF99C3F0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CB7EDE74()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB7EDF00()
{
  sub_1CB846924();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CB7EDF68()
{
  sub_1CB8472E4();
  sub_1CB846924();
  swift_bridgeObjectRelease();
  return sub_1CB847314();
}

uint64_t sub_1CB7EDFF0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1CB8470B0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1CB7EE04C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x65646E6F70736572;
  if (*v1)
    v2 = 0x6D6E6F646E616261;
  v3 = 0xE900000000000064;
  if (*v1)
    v3 = 0xEB00000000746E65;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1CB7EE098(char *a1, char *a2)
{
  return sub_1CB80BE14(*a1, *a2);
}

void *sub_1CB7EE0A4(void *a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char v35;

  v10 = objc_msgSend(a1, sel_eventBody);
  if (v10)
  {
    v11 = v10;
    if (a5 - 2 >= 2)
    {
      if (a5)
      {
        v23 = a2;
        objc_msgSend(v23, sel_timestamp);
        v25 = v24;
        objc_msgSend(a1, sel_timestamp);
        v27 = v26;

        sub_1CB7EDBBC(a2, a3, a4, 1u);
        if (v27 - v25 <= 300.0)
        {
          v28 = v23;
          return a2;
        }
      }
      else
      {
        v18 = a2;
        v19 = objc_msgSend(v18, sel_eventBody);
        if (v19)
        {
          v20 = v19;
          if ((sub_1CB7EE6FC(v11) & 1) != 0)
          {
            v21 = objc_msgSend(v11, sel_taskStep);
            if (v21 == (id)4)
            {
              v30 = objc_msgSend(v11, sel_statusReason);
              v31 = sub_1CB8468A0();
              v33 = v32;

              if (v31 == 0xD000000000000014 && v33 == 0x80000001CB8556D0)
              {

                sub_1CB7EDBBC(a2, a3, a4, 0);
                swift_bridgeObjectRelease();

                goto LABEL_6;
              }
              v35 = sub_1CB8471A0();

              sub_1CB7EDBBC(a2, a3, a4, 0);
              swift_bridgeObjectRelease();

              if ((v35 & 1) != 0)
                goto LABEL_6;
            }
            else
            {
              v22 = v21;
              if (v21 == (id)41 || v21 == (id)15)
              {

                sub_1CB7EDBBC(a2, a3, a4, 0);
                goto LABEL_6;
              }

              sub_1CB7EDBBC(a2, a3, a4, 0);
              if (v22 == (id)39)
              {
                v34 = v18;
                return a2;
              }
            }
          }
          else
          {

            sub_1CB7EDBBC(a2, a3, a4, 0);
          }
        }
        else
        {

          sub_1CB7EDBBC(a2, a3, a4, 0);
        }
      }
    }
    else if ((sub_1CB7D35E0(v10) & 1) != 0 || (sub_1CB7D3800(v11) & 1) != 0)
    {
      v12 = objc_msgSend(v11, sel_taskStep);

      if (v12 == (id)15)
      {
LABEL_6:
        v13 = a1;
        return a1;
      }
    }
    else
    {

    }
    return 0;
  }
  if (qword_1EF99C3F8 != -1)
    swift_once();
  v14 = sub_1CB8466D8();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EF9A0AB0);
  v15 = sub_1CB8466C0();
  v16 = sub_1CB846C84();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1CB771000, v15, v16, "UserDisambiguatesPhoneCallOrMessagesContact cannot unwrap execution store event body", v17, 2u);
    MEMORY[0x1D179FE84](v17, -1, -1);
  }

  sub_1CB7EDB70(a2, a3, a4, a5);
  return a2;
}

void *sub_1CB7EE4A8(void *a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  if (objc_msgSend(a1, sel_eventBody))
    __asm { BR              X10 }
  if (qword_1EF99C3F8 != -1)
    swift_once();
  v9 = sub_1CB8466D8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EF9A0AB0);
  v10 = sub_1CB8466C0();
  v11 = sub_1CB846C84();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1CB771000, v10, v11, "UserDisambiguatesPhoneCallOrMessagesContact cannot unwrap UI store event body", v12, 2u);
    MEMORY[0x1D179FE84](v12, -1, -1);
  }

  sub_1CB7EDB70(a2, a3, a4, a5);
  return a2;
}

uint64_t sub_1CB7EE6FC(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = objc_msgSend(a1, sel_taskId);
  v4 = sub_1CB8468A0();
  v6 = v5;

  v7 = objc_msgSend(v1, sel_taskId);
  v8 = sub_1CB8468A0();
  v10 = v9;

  if (v4 == v8 && v6 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = 0;
    if ((v12 & 1) == 0)
      return v13 & 1;
  }
  v14 = objc_msgSend(a1, sel_intentName);
  v15 = sub_1CB8468A0();
  v17 = v16;

  v18 = objc_msgSend(v1, sel_intentName);
  v19 = sub_1CB8468A0();
  v21 = v20;

  if (v15 == v19 && v17 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v22 = sub_1CB8471A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = 0;
    if ((v22 & 1) == 0)
      return v13 & 1;
  }
  v23 = objc_msgSend(a1, sel_slotValue);
  v24 = sub_1CB8468A0();
  v26 = v25;

  v27 = objc_msgSend(v1, sel_slotValue);
  v28 = sub_1CB8468A0();
  v30 = v29;

  if (v24 == v28 && v26 == v30)
    v13 = 1;
  else
    v13 = sub_1CB8471A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

void sub_1CB7EE918(uint64_t a1)
{
  sub_1CB7EE9CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_1CB7EE93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CB8466D8();
  __swift_allocate_value_buffer(v0, qword_1EF9A0AB0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EF9A0AB0);
  if (qword_1ED88E518 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED890248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1CB7EE9CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1CB7EEA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;

  if (a8)
    return 0;
  sub_1CB7BE770();
  sub_1CB7EDB70(v13, v11, v9, 0);
  sub_1CB7EDB70(v12, v10, v8, 0);
  v14 = sub_1CB846E10();
  sub_1CB7EDBBC(v12, v10, v8, 0);
  sub_1CB7EDBBC(v13, v11, v9, 0);
  return v14 & 1;
}

uint64_t storeEnumTagSinglePayload for UserDisambiguatesPhoneCallOrMessagesContactFilterState.DisambiguationStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CB7EECE0 + 4 * byte_1CB84E25D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CB7EED14 + 4 * byte_1CB84E258[v4]))();
}

uint64_t sub_1CB7EED14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7EED1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CB7EED24);
  return result;
}

uint64_t sub_1CB7EED30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CB7EED38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CB7EED3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CB7EED44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserDisambiguatesPhoneCallOrMessagesContactFilterState.DisambiguationStatus()
{
  return &type metadata for UserDisambiguatesPhoneCallOrMessagesContactFilterState.DisambiguationStatus;
}

unint64_t sub_1CB7EED64()
{
  unint64_t result;

  result = qword_1EF9A0B98;
  if (!qword_1EF9A0B98)
  {
    result = MEMORY[0x1D179FD88](&unk_1CB84E358, &type metadata for UserDisambiguatesPhoneCallOrMessagesContactFilterState.DisambiguationStatus);
    atomic_store(result, (unint64_t *)&qword_1EF9A0B98);
  }
  return result;
}

uint64_t Turn.__allocating_init(turnID:events:date:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = swift_allocObject();
  v7 = v6 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID;
  v8 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a1, v8);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) = a2;
  sub_1CB7AEA4C(a3, v6 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date);
  return v6;
}

uint64_t Turn.turnID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID;
  v4 = sub_1CB846084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Turn.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Turn.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CB79E138(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date, a1);
}

uint64_t Turn.__allocating_init(turnID:events:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CB846084();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = sub_1CB846018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
  v13 = (*(uint64_t (**)(char *, uint64_t, char *))(v2 + 104))(v11, a2, v7);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v13;
}

uint64_t Turn.init(turnID:events:date:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID;
  v8 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a1, v8);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) = a2;
  sub_1CB7AEA4C(a3, v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date);
  return v3;
}

uint64_t Turn.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID;
  v2 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_1CB7EF0A0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date);
  return v0;
}

uint64_t sub_1CB7EF0A0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D550);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Turn.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID;
  v2 = sub_1CB846084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_1CB7EF0A0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date);
  return swift_deallocClassInstance();
}

uint64_t sub_1CB7EF150()
{
  return type metadata accessor for Turn();
}

uint64_t type metadata accessor for Turn()
{
  uint64_t result;

  result = qword_1ED88DCE8;
  if (!qword_1ED88DCE8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1CB7EF194()
{
  unint64_t v0;
  unint64_t v1;

  sub_1CB846084();
  if (v0 <= 0x3F)
  {
    sub_1CB7EF23C();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for Turn()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Turn.__allocating_init(turnID:events:date:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1CB7EF23C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED88D558)
  {
    sub_1CB846018();
    v0 = sub_1CB846E40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED88D558);
  }
}

uint64_t sub_1CB7EF290()
{
  return sub_1CB7EF2B8((unint64_t *)&qword_1EF9A0BC0);
}

uint64_t sub_1CB7EF2A4()
{
  return sub_1CB7EF2B8((unint64_t *)&qword_1ED88BF68);
}

uint64_t sub_1CB7EF2B8(unint64_t *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t result;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  id v10;

  v2 = v1;
  v3 = sub_1CB777FA8(0, a1);
  objc_msgSend(v2, sel_anyEventType);
  result = sub_1CB846D80();
  if (result)
  {
    if (v3 != result)
      return 0;
    v5 = objc_msgSend(v2, sel_payload);
    if (v5)
    {
      v6 = sub_1CB845F94();
      v8 = v7;

      v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v5 = (id)sub_1CB845F88();
      sub_1CB779034(v6, v8);
    }
    else
    {
      v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    }
    v10 = objc_msgSend(v9, sel_initWithData_, v5);

    if (!v10)
      return 0;
    objc_opt_self();
    result = swift_dynamicCastObjCClass();
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

id sub_1CB7EF3D4(uint64_t a1)
{
  return sub_1CB7EF3E0(a1, (void (*)(uint64_t))sub_1CB8295D0);
}

id sub_1CB7EF3E0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(id *)(v4 + 32);
  if (v5 == (id)*MEMORY[0x1E0D02400])
  {
    swift_retain();
    a2(a1);
  }
  else
  {
    v5 = objc_msgSend(*(id *)(v4 + 16), sel_receiveInput_, a1);
    v7 = *(_QWORD *)(v2 + 16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88DE70);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CB848A60;
    *(_QWORD *)(inited + 32) = v5;
    *(_QWORD *)(inited + 40) = *(_QWORD *)(v7 + 32);
    swift_retain();
    v9 = sub_1CB7B4BD4(-1, inited);
    swift_setDeallocating();
    *(_QWORD *)(v7 + 32) = v9;
  }
  swift_release();
  return v5;
}

void sub_1CB7EF4C4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v8;
  uint64_t v9;
  id v10;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(void **)(v3 + 24);
  *(_QWORD *)(v3 + 24) = 1;
  sub_1CB785AB8(v4);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v5 + 32);
  if (v6 != *MEMORY[0x1E0D02408] && (v6 < 1 || v6 == *MEMORY[0x1E0D02400]))
  {
    v10 = *(id *)(v5 + 40);
    *(_QWORD *)(v5 + 40) = a1;
    v8 = a1;

    return;
  }
  if (objc_msgSend(a1, sel_state))
  {
    v9 = *(_QWORD *)(v1 + 16);
    goto LABEL_12;
  }
  v9 = *(_QWORD *)(v1 + 16);
  if (!*(_QWORD *)(*(_QWORD *)(v9 + 48) + 16))
LABEL_12:
    objc_msgSend(*(id *)(v9 + 16), sel_receiveCompletion_, a1);
}

_QWORD *sub_1CB7EF5A4(uint64_t a1)
{
  return sub_1CB7EF5B0(a1, &qword_1ED88DD80);
}

_QWORD *sub_1CB7EF5B0(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v2[3] = 0;
  v2[4] = BPSDemandMax();
  v2[5] = 0;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = (_QWORD *)swift_allocObject();
  v5[3] = 0;
  v5[4] = 0;
  v5[2] = 0;
  v2[6] = v5;
  v2[2] = a1;
  return v2;
}

void sub_1CB7EF610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  objc_super v11;

  v2 = v1;
  v4 = (objc_class *)type metadata accessor for ScanConversationsSubscriber();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_1C28A16D52A6DDC29A328441443490A627ScanConversationsSubscriber_currentConversation] = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88A3A8);
  v6 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88A3B0);
  swift_allocObject();
  swift_unknownObjectRetain();
  v7 = v5;
  *(_QWORD *)(v6 + 16) = sub_1CB7EF5B0(a1, &qword_1ED88A618);
  *(_QWORD *)&v7[OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_1C28A16D52A6DDC29A328441443490A627ScanConversationsSubscriber_downstream] = v6;

  v11.receiver = v7;
  v11.super_class = v4;
  v8 = objc_msgSendSuper2(&v11, sel_init);
  v9 = *(void **)(v2 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers17ScanConversations_inner);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers17ScanConversations_inner) = v8;
  v10 = v8;

  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers17ScanConversations_upstream), sel_subscribe_, v10);
}

id sub_1CB7EF7B0(uint64_t a1)
{
  return sub_1CB7F0868(a1, _s17ScanConversationsCMa);
}

uint64_t _s17ScanConversationsCMa()
{
  return objc_opt_self();
}

void sub_1CB7EF814(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  id v9;
  objc_super v10;

  v2 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_1C28A16D52A6DDC29A328441443490A627ScanConversationsSubscriber_downstream);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(void **)(v3 + 24);
  *(_QWORD *)(v3 + 24) = a1;
  v5 = a1;
  sub_1CB785AB8(v4);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED88A3C0);
  v8 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v8[qword_1EF99EE20] = v6;
  v10.receiver = v8;
  v10.super_class = v7;
  swift_retain();
  v9 = objc_msgSendSuper2(&v10, sel_init);
  objc_msgSend(*(id *)(*(_QWORD *)(v2 + 16) + 16), sel_receiveSubscription_, v9, v10.receiver, v10.super_class);

}

uint64_t sub_1CB7EF918(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32[3];
  uint64_t DynamicType;
  _QWORD v34[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CB778000(a1, (uint64_t)v34);
  type metadata accessor for Turn();
  if (swift_dynamicCast())
  {
    v7 = v32[0];
    v8 = (uint64_t *)(v1
                   + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_1C28A16D52A6DDC29A328441443490A627ScanConversationsSubscriber_currentConversation);
    swift_beginAccess();
    if ((unint64_t)*v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v24 = sub_1CB847044();
      swift_bridgeObjectRelease();
      if (!v24)
        goto LABEL_13;
    }
    else if (!*(_QWORD *)((*v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_13;
    }
    sub_1CB7F01DC(v7, v6);
    v9 = sub_1CB846084();
    v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 1, v9);
    sub_1CB778FF4((uint64_t)v6);
    if (v10 == 1)
    {
      v11 = *v8;
      if ((unint64_t)*v8 >> 62)
      {
        swift_bridgeObjectRetain();
        v12 = sub_1CB847044();
        if (v12)
        {
LABEL_7:
          v13 = v12 - 1;
          if (__OFSUB__(v12, 1))
          {
            __break(1u);
          }
          else if ((v11 & 0xC000000000000001) == 0)
          {
            if ((v13 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v13 < *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              swift_retain();
              goto LABEL_12;
            }
            __break(1u);
            goto LABEL_35;
          }
          MEMORY[0x1D179F320](v13, v11);
LABEL_12:
          v14 = sub_1CB846048();
          swift_bridgeObjectRelease();
          swift_release();
          if ((v14 & 1) != 0)
            goto LABEL_13;
LABEL_26:
          v25 = *v8;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C038);
          v11 = swift_allocObject();
          *(_QWORD *)(v11 + 48) = v25;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C050);
          v2 = swift_allocObject();
          *(_QWORD *)(v2 + 16) = 0;
          if (!(v25 >> 62))
          {
            v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
LABEL_28:
            v27 = sub_1CB7D22AC();
            v28 = swift_allocObject();
            *(_QWORD *)(v28 + 16) = v26;
            *(_QWORD *)(v11 + 16) = v2;
            *(_QWORD *)(v11 + 24) = v27;
            *(_QWORD *)(v11 + 32) = v28;
            *(_QWORD *)(v11 + 40) = v27;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BEC0);
            v29 = swift_allocObject();
            *(_QWORD *)(v29 + 16) = v11;
            __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
            v30 = swift_allocObject();
            *(_OWORD *)(v30 + 16) = xmmword_1CB84A330;
            *(_QWORD *)(v30 + 32) = v7;
            v32[0] = v30;
            sub_1CB846A74();
            *v8 = v32[0];
            swift_retain();
            swift_bridgeObjectRelease();
            v16 = (uint64_t)sub_1CB7EF3E0(v29, (void (*)(uint64_t))sub_1CB8295DC);
            swift_release();
LABEL_29:
            swift_release();
            return v16;
          }
LABEL_35:
          swift_bridgeObjectRetain_n();
          v26 = sub_1CB847044();
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
      }
      else
      {
        v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v12)
          goto LABEL_7;
      }
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
LABEL_13:
    swift_beginAccess();
    v15 = swift_retain();
    MEMORY[0x1D179EDF8](v15);
    if (*(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1CB846AA4();
    sub_1CB846AD4();
    sub_1CB846A74();
    swift_endAccess();
    v16 = BPSDemandMax();
    goto LABEL_29;
  }
  if (qword_1ED88E518 != -1)
    swift_once();
  v17 = sub_1CB8466D8();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED890248);
  sub_1CB778000(a1, (uint64_t)v34);
  v18 = sub_1CB8466C0();
  v19 = sub_1CB846C84();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v32[0] = v21;
    *(_DWORD *)v20 = 136315138;
    __swift_project_boxed_opaque_existential_1(v34, v34[3]);
    DynamicType = swift_getDynamicType();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF9A0BD0);
    v22 = sub_1CB8468DC();
    DynamicType = sub_1CB775A54(v22, v23, v32);
    sub_1CB846E58();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    _os_log_impl(&dword_1CB771000, v18, v19, "ScanConversationsSubscriber ignored unexpected input type %s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v21, -1, -1);
    MEMORY[0x1D179FE84](v20, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  }

  return BPSDemandMax();
}

void sub_1CB7EFF18(void *a1)
{
  uint64_t v1;
  unint64_t *v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (unint64_t *)(v1
                          + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_1C28A16D52A6DDC29A328441443490A627ScanConversationsSubscriber_currentConversation);
  swift_beginAccess();
  if (*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (!v11)
      goto LABEL_6;
  }
  else if (!*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_6;
  }
  v4 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88C038);
  v5 = (_QWORD *)swift_allocObject();
  v5[6] = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88C050);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v7 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v8 = sub_1CB7D22AC();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  v5[2] = v6;
  v5[3] = v8;
  v5[4] = v9;
  v5[5] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BEC0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v5;
  sub_1CB7EF3E0(v10, (void (*)(uint64_t))sub_1CB8295DC);
  swift_release();
  *v3 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
LABEL_6:
  sub_1CB7EF4C4(a1);
}

void sub_1CB7F0138()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0
                             + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_1C28A16D52A6DDC29A328441443490A627ScanConversationsSubscriber_downstream)
                 + 16);
  v2 = *(void **)(v1 + 24);
  if ((unint64_t)v2 >= 2)
    v3 = v2;
  else
    v3 = 0;
  *(_QWORD *)(v1 + 24) = 1;
  sub_1CB785AB8(v2);
  objc_msgSend(v3, sel_cancel);

}

uint64_t sub_1CB7F01DC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (**v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  int v45;
  uint64_t result;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  void (**v69)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v4 = sub_1CB846084();
  v5 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  v72 = v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v65 = (char *)&v65 - v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v65 - v12;
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
  v67 = v15;
  v68 = a2;
  v66 = v7;
  if (v14 >> 62)
  {
LABEL_49:
    swift_bridgeObjectRetain();
    v16 = sub_1CB847044();
    v17 = v71;
    if (v16)
      goto LABEL_3;
LABEL_33:
    v19 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56);
    v48 = 1;
    v49 = v68;
LABEL_34:
    (*v19)((uint64_t)v49, v48, 1, v17);
    return swift_bridgeObjectRelease();
  }
  v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v17 = v71;
  if (!v16)
    goto LABEL_33;
LABEL_3:
  v18 = 0;
  v19 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56);
  v69 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56);
  v70 = v14 & 0xC000000000000001;
  while (1)
  {
    if (v70)
    {
      swift_bridgeObjectRetain();
      v20 = (id)MEMORY[0x1D179F320](v18, v14);
    }
    else
    {
      v21 = *(void **)(v14 + 8 * v18 + 32);
      swift_bridgeObjectRetain();
      v20 = v21;
    }
    v22 = v20;
    if (objc_msgSend(v20, sel_anyEventType) == 6)
    {
      v23 = objc_msgSend(v22, sel_payload);
      if (v23)
      {
        v24 = sub_1CB845F94();
        v26 = v25;

        v23 = (id)sub_1CB845F88();
        sub_1CB779034(v24, v26);
      }
      v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D9A460]), sel_initWithData_, v23);

      v28 = objc_msgSend(v27, sel_event);
      v19 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v69;
      if (!v28)
        goto LABEL_27;
    }
    else
    {
      v28 = v22;
    }
    v29 = sub_1CB777FA8(0, (unint64_t *)&qword_1EF9A0BC0);
    objc_msgSend(v28, sel_anyEventType);
    v30 = sub_1CB846D80();
    if (!v30 || v29 != v30)
      goto LABEL_26;
    v31 = objc_msgSend(v28, sel_payload);
    if (v31)
    {
      v32 = sub_1CB845F94();
      v34 = v33;

      v35 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v31 = (id)sub_1CB845F88();
      sub_1CB779034(v32, v34);
    }
    else
    {
      v35 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    }
    v36 = objc_msgSend(v35, sel_initWithData_, v31);

    if (!v36)
      goto LABEL_25;
    objc_opt_self();
    v37 = (void *)swift_dynamicCastObjCClass();

    if (!v37)
    {
      v28 = v36;
LABEL_25:
      v19 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v69;
LABEL_26:

LABEL_27:
      v17 = v71;
      (*v19)((uint64_t)v13, 1, 1, v71);
      swift_bridgeObjectRelease();
      v36 = v22;
      goto LABEL_28;
    }
    v38 = objc_msgSend(v37, sel_clientConversationTrace);
    if (v38
      && (v39 = v38,
          v40 = objc_msgSend(v38, sel_previousTurnID),
          v39,
          v40))
    {
      v41 = sub_1CB845F94();
      v43 = v42;

      sub_1CB7B601C(v41, v43);
      sub_1CB779034(v41, v43);
      swift_bridgeObjectRelease();

      v19 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v69;
      v17 = v71;
    }
    else
    {
      v19 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v69;
      v17 = v71;
      (*v69)(v13, 1, 1, v71);
      swift_bridgeObjectRelease();

    }
LABEL_28:

    v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48);
    v45 = v44(v13, 1, v17);
    result = sub_1CB778FF4((uint64_t)v13);
    if (v45 != 1)
      break;
    v47 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    ++v18;
    if (v47 == v16)
      goto LABEL_33;
  }
  if (v16 == v18)
    goto LABEL_33;
  if (v70)
  {
    v50 = (id)MEMORY[0x1D179F320](v18, v14);
LABEL_40:
    v51 = v50;
    v52 = (void *)sub_1CB7B5E6C();
    v53 = v67;
    if (v52)
    {
      v54 = v52;
      v55 = objc_msgSend(v52, sel_clientConversationTrace);
      if (v55
        && (v56 = v55,
            v57 = objc_msgSend(v55, sel_previousTurnID),
            v56,
            v57))
      {
        v58 = sub_1CB845F94();
        v60 = v59;

        v61 = (uint64_t)v65;
        sub_1CB7B601C(v58, v60);
        sub_1CB779034(v58, v60);

        v51 = v54;
        v62 = v71;
      }
      else
      {
        v61 = (uint64_t)v65;
        v62 = v71;
        (*v19)((uint64_t)v65, 1, 1, v71);

        v51 = v54;
      }
    }
    else
    {
      v61 = (uint64_t)v65;
      v62 = v71;
      (*v19)((uint64_t)v65, 1, 1, v71);
    }

    sub_1CB7BDB4C(v61, v53);
    result = v44((char *)v53, 1, v62);
    if ((_DWORD)result != 1)
    {
      v63 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 32);
      v64 = v66;
      v63(v66, v53, v62);
      sub_1CB778FF4(v61);
      v49 = v68;
      v63(v68, (uint64_t)v64, v62);
      v48 = 0;
      v17 = v62;
      goto LABEL_34;
    }
  }
  else
  {
    if ((v18 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v18 < *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v50 = *(id *)(v14 + 8 * v18 + 32);
      goto LABEL_40;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1CB7F0858()
{
  return sub_1CB7F0868(0, type metadata accessor for ScanConversationsSubscriber);
}

id sub_1CB7F0868(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t type metadata accessor for ScanConversationsSubscriber()
{
  return objc_opt_self();
}

uint64_t static ORCHEvents.orchEvent(from:)()
{
  return sub_1CB7B5E78();
}

id static ORCHEvents.requestID(_:)()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)sub_1CB7B5E78();
  v1 = objc_msgSend(v0, sel_eventMetadata);

  v2 = objc_msgSend(v1, sel_requestId);
  return v2;
}

ValueMetadata *type metadata accessor for ORCHEvents()
{
  return &type metadata for ORCHEvents;
}

uint64_t sub_1CB7F0984(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1CB776040(0, v1, 0);
    v2 = v16;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      swift_bridgeObjectRetain();
      v9 = MEMORY[0x1D179ECCC](v5, v6, v7, v8);
      v11 = v10;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_1CB776040(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void __swiftcall WakeWordTrimmer.init(localeHandler:)(SiriPrivateLearningAnalytics::WakeWordTrimmer *__return_ptr retstr, SiriPrivateLearningAnalytics::CurrentLocales *localeHandler)
{
  Swift::String region;
  Swift::String language;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t countAndFlagsBits;
  void *object;

  region = localeHandler->device.region;
  language = localeHandler->siri.language;
  v4 = localeHandler->siri.region;
  v5 = localeHandler->siriVoice.language;
  v6 = localeHandler->siriVoice.region;
  countAndFlagsBits = localeHandler->emptyIdentifier._countAndFlagsBits;
  object = localeHandler->emptyIdentifier._object;
  retstr->localeHandler.device.language = localeHandler->device.language;
  retstr->localeHandler.device.region = region;
  retstr->localeHandler.siri.language = language;
  retstr->localeHandler.siri.region = v4;
  retstr->localeHandler.siriVoice.language = v5;
  retstr->localeHandler.siriVoice.region = v6;
  retstr->localeHandler.emptyIdentifier._countAndFlagsBits = countAndFlagsBits;
  retstr->localeHandler.emptyIdentifier._object = object;
}

uint64_t sub_1CB7F0AA4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1CB78F518(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7F0BEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1CB78F50C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7F0D30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1CB78F62C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7F0E80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1CB78F738(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88BC30);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7F0FE8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1CB78FFD8(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7F113C(uint64_t a1)
{
  char **v1;
  unint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1CB790104(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[4 * v9 + 32];
  if (a1 + 32 < (unint64_t)&v10[4 * v8] && (unint64_t)v10 < a1 + 32 + 4 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 4 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = *((_QWORD *)v3 + 2);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *((_QWORD *)v3 + 2) = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7F1284(unint64_t a1)
{
  return sub_1CB7F1794(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1CB7F2D80);
}

uint64_t sub_1CB7F1290(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_1CB78F4F8(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_1CB846084();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7F13F8(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1CB847044();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x1D179F32C](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1CB7F2F94(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))MEMORY[0x1E0DA01E0], (unint64_t *)&unk_1EF9A0C90, &qword_1EF9A0C88, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1CB7BD420);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1CB846A74();
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB7F15D0(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1CB847044();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x1D179F32C](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1CB7F319C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1CB846A74();
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB7F1788(unint64_t a1)
{
  return sub_1CB7F1794(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1CB7F33A4);
}

uint64_t sub_1CB7F1794(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CB847044();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x1D179F32C](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_1CB847044();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1CB846A74();
  }
  __break(1u);
  return result;
}

uint64_t WakeWordTrimmer.trim(tokens:)(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String_optional v10;
  uint64_t countAndFlagsBits;
  _QWORD *object;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint8_t *v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  BOOL v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  unint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  _OWORD v102[6];
  uint64_t v103;
  uint64_t v104;

  v3 = *(_OWORD *)(v1 + 16);
  v4 = *(_OWORD *)(v1 + 32);
  v5 = *(_OWORD *)(v1 + 48);
  v6 = *(_OWORD *)(v1 + 64);
  v7 = *(_OWORD *)(v1 + 80);
  v8 = *(_QWORD *)(v1 + 96);
  v9 = *(_QWORD *)(v1 + 104);
  v102[0] = *(_OWORD *)v1;
  v102[1] = v3;
  v102[2] = v4;
  v102[3] = v5;
  v102[4] = v6;
  v102[5] = v7;
  v103 = v8;
  v104 = v9;
  v10 = WakeWordTrimmer.getLocale()();
  if (!v10.value._object)
  {
    if (qword_1ED88E518 != -1)
      swift_once();
    v18 = sub_1CB8466D8();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED890248);
    v19 = sub_1CB8466C0();
    v20 = sub_1CB846C90();
    if (!os_log_type_enabled(v19, v20))
      goto LABEL_53;
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_1CB771000, v19, v20, "[ASRFeatureExtractor] #TrimWakeWords: Siri Locale was nil. Not attempting to trim wake words", v21, 2u);
    v22 = v21;
LABEL_52:
    MEMORY[0x1D179FE84](v22, -1, -1);
LABEL_53:

LABEL_67:
    swift_bridgeObjectRetain();
    return a1;
  }
  countAndFlagsBits = v10.value._countAndFlagsBits;
  object = v10.value._object;
  if (qword_1ED88E518 != -1)
LABEL_72:
    swift_once();
  v13 = sub_1CB8466D8();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED890248);
  swift_bridgeObjectRetain_n();
  v14 = sub_1CB8466C0();
  v15 = sub_1CB846C78();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_QWORD *)&v102[0] = v17;
    *(_DWORD *)v16 = 136315138;
    swift_bridgeObjectRetain();
    sub_1CB775A54(countAndFlagsBits, (unint64_t)object, (uint64_t *)v102);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CB771000, v14, v15, "[ASRFeatureExtractor] #TrimWakeWords: Trimming wake words for locale %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v17, -1, -1);
    MEMORY[0x1D179FE84](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v23 = (char *)_s28SiriPrivateLearningAnalytics15WakeWordTrimmerV17getTriggerPhrases6localeSaySSGSS_tFZ_0(countAndFlagsBits, (unint64_t)object);
  swift_bridgeObjectRetain_n();
  v24 = sub_1CB8466C0();
  v25 = sub_1CB846C78();
  v94 = a1;
  v98 = v23;
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    *(_QWORD *)&v102[0] = v27;
    *(_DWORD *)v26 = 136315138;
    v28 = swift_bridgeObjectRetain();
    v29 = MEMORY[0x1D179EE28](v28, MEMORY[0x1E0DEA968]);
    v31 = v30;
    swift_bridgeObjectRelease();
    v32 = v29;
    v23 = v98;
    sub_1CB775A54(v32, v31, (uint64_t *)v102);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    a1 = v94;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CB771000, v24, v25, "[ASRFeatureExtractor] #TrimWakeWords: Wake words: %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v27, -1, -1);
    MEMORY[0x1D179FE84](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v33 = MEMORY[0x1E0DEE9D8];
  v101 = MEMORY[0x1E0DEE9D8];
  v34 = *(_QWORD *)(a1 + 16);
  if (v34)
  {
    swift_bridgeObjectRetain();
    sub_1CB78A5E8();
    v35 = (uint64_t *)(a1 + 40);
    do
    {
      v36 = *v35;
      *(_QWORD *)&v102[0] = *(v35 - 1);
      *((_QWORD *)&v102[0] + 1) = v36;
      swift_bridgeObjectRetain();
      v37 = sub_1CB846EAC();
      swift_bridgeObjectRelease();
      sub_1CB7F0D30(v37);
      v35 += 2;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    v33 = v101;
    v23 = v98;
  }
  v38 = sub_1CB7F0984(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v100 = (_QWORD *)sub_1CB7F3D98(v38, countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease_n();
  v96 = *((_QWORD *)v23 + 2);
  if (!v96)
  {
LABEL_50:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v19 = sub_1CB8466C0();
    v67 = sub_1CB846C78();
    if (!os_log_type_enabled(v19, v67))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_67;
    }
    v68 = (uint8_t *)swift_slowAlloc();
    v69 = swift_slowAlloc();
    *(_QWORD *)&v102[0] = v69;
    *(_DWORD *)v68 = 136315138;
    v70 = swift_bridgeObjectRetain();
    v71 = MEMORY[0x1D179EE28](v70, MEMORY[0x1E0DEA968]);
    v73 = v72;
    swift_bridgeObjectRelease();
    sub_1CB775A54(v71, v73, (uint64_t *)v102);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CB771000, v19, v67, "[ASRFeatureExtractor] #TrimWakeWords: No wake words detected. Utterance used: %s", v68, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v69, -1, -1);
    v22 = v68;
    goto LABEL_52;
  }
  v39 = 0;
  v97 = v23 + 32;
  v93 = v38;
  countAndFlagsBits = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v39 >= *((_QWORD *)v23 + 2))
      goto LABEL_70;
    v40 = (uint64_t *)&v97[16 * v39];
    v41 = v40[1];
    v95 = *v40;
    *(_QWORD *)&v102[0] = *v40;
    *((_QWORD *)&v102[0] + 1) = v41;
    sub_1CB78A5E8();
    v99 = v41;
    swift_bridgeObjectRetain();
    v42 = sub_1CB846EAC();
    v43 = *(_QWORD *)(v42 + 16);
    if (v43)
    {
      *(_QWORD *)&v102[0] = countAndFlagsBits;
      sub_1CB776040(0, v43, 0);
      object = *(_QWORD **)&v102[0];
      v44 = (uint64_t *)(v42 + 56);
      do
      {
        v45 = *(v44 - 3);
        v46 = *(v44 - 2);
        v47 = *(v44 - 1);
        v48 = *v44;
        swift_bridgeObjectRetain();
        v49 = MEMORY[0x1D179ECCC](v45, v46, v47, v48);
        v51 = v50;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v102[0] = object;
        v53 = object[2];
        v52 = object[3];
        if (v53 >= v52 >> 1)
        {
          sub_1CB776040(v52 > 1, v53 + 1, 1);
          object = *(_QWORD **)&v102[0];
        }
        object[2] = v53 + 1;
        v54 = &object[2 * v53];
        v54[4] = v49;
        v54[5] = v51;
        v44 += 4;
        --v43;
      }
      while (v43);
      swift_bridgeObjectRelease();
      a1 = v94;
      v23 = v98;
      countAndFlagsBits = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_bridgeObjectRelease();
      object = (_QWORD *)countAndFlagsBits;
    }
    v55 = v100[2];
    if (v55)
    {
      v56 = object[2];
      if (!v56)
        break;
      if ((v100[4] != object[4] || v100[5] != object[5]) && (sub_1CB8471A0() & 1) == 0)
      {
LABEL_45:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      v57 = v55 - 1;
      if (v55 != 1)
      {
        v59 = v56 - 1;
        v60 = object + 7;
        v61 = v100 + 7;
        while (v57)
        {
          if (!v59)
            goto LABEL_48;
          v62 = *(v61 - 1) == *(v60 - 1) && *v61 == *v60;
          if (!v62 && (sub_1CB8471A0() & 1) == 0)
            goto LABEL_45;
          --v59;
          v61 += 2;
          v60 += 2;
          if (!--v57)
            goto LABEL_33;
        }
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
    }
LABEL_33:
    v58 = object[2];
    if (v55 == v58)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v55 >= v58)
      goto LABEL_71;
LABEL_46:
    if (++v39 == v96)
      goto LABEL_50;
  }
LABEL_48:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v63 = sub_1CB8466C0();
  v64 = sub_1CB846C78();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = (uint8_t *)swift_slowAlloc();
    v66 = swift_slowAlloc();
    *(_QWORD *)&v102[0] = v66;
    *(_DWORD *)v65 = 136315138;
    swift_bridgeObjectRetain();
    sub_1CB775A54(v95, v99, (uint64_t *)v102);
    sub_1CB846E58();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CB771000, v63, v64, "[ASRFeatureExtractor] #TrimWakeWords: Trigger phrase %s detected. Removing from utterance", v65, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v66, -1, -1);
    MEMORY[0x1D179FE84](v65, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v74 = object[2];
  swift_bridgeObjectRelease();
  v75 = sub_1CB7F2504(v74, v93);
  v77 = v76;
  v79 = v78;
  v81 = v80;
  if ((v80 & 1) == 0)
  {
LABEL_56:
    a1 = sub_1CB7F2670(v75, v77, v79, v81);
    goto LABEL_63;
  }
  sub_1CB84726C();
  swift_unknownObjectRetain_n();
  v82 = swift_dynamicCastClass();
  if (!v82)
  {
    swift_unknownObjectRelease();
    v82 = MEMORY[0x1E0DEE9D8];
  }
  v83 = *(_QWORD *)(v82 + 16);
  swift_release();
  if (__OFSUB__(v81 >> 1, v79))
  {
    __break(1u);
    goto LABEL_74;
  }
  if (v83 != (v81 >> 1) - v79)
  {
LABEL_74:
    swift_unknownObjectRelease();
    goto LABEL_56;
  }
  a1 = swift_dynamicCastClass();
  if (!a1)
  {
    swift_unknownObjectRelease();
    a1 = MEMORY[0x1E0DEE9D8];
  }
LABEL_63:
  swift_unknownObjectRelease();
  swift_bridgeObjectRetain_n();
  v84 = sub_1CB8466C0();
  v85 = sub_1CB846C78();
  if (os_log_type_enabled(v84, v85))
  {
    v86 = (uint8_t *)swift_slowAlloc();
    v87 = swift_slowAlloc();
    *(_QWORD *)&v102[0] = v87;
    *(_DWORD *)v86 = 136315138;
    v88 = swift_bridgeObjectRetain();
    v89 = MEMORY[0x1D179EE28](v88, MEMORY[0x1E0DEA968]);
    v91 = v90;
    swift_release();
    sub_1CB775A54(v89, v91, (uint64_t *)v102);
    sub_1CB846E58();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CB771000, v84, v85, "[ASRFeatureExtractor] #TrimWakeWords: New utterance: %s", v86, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D179FE84](v87, -1, -1);
    MEMORY[0x1D179FE84](v86, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return a1;
}

uint64_t sub_1CB7F2504(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (result)
      v4 = v3;
    else
      v4 = 0;
    if (v2 >= v4)
      return a2;
  }
  __break(1u);
  return result;
}

Swift::String_optional __swiftcall WakeWordTrimmer.getLocale()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  Swift::String_optional result;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRetain();
  sub_1CB846954();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v2 = v7;
  v1 = (void *)v8;
  v3 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v3 = v7 & 0xFFFFFFFFFFFFLL;
  if (!v3
    || (sub_1CB78A5E8(), (sub_1CB846EA0() & 1) != 0)
    || v7 == 95 && v8 == 0xE100000000000000
    || (sub_1CB8471A0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
    v1 = 0;
  }
  v4 = v2;
  v5 = v1;
  result.value._object = v5;
  result.value._countAndFlagsBits = v4;
  return result;
}

uint64_t sub_1CB7F2670(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = 2 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E080);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

_QWORD *sub_1CB7F27E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88E080);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1CB7F35B8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1CB7DB3CC();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1CB7F28C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_21;
  if (!v5)
    return MEMORY[0x1E0DEE9D8];
  if (v5 <= 0)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0)
        goto LABEL_24;
      v14 = *(_QWORD *)(sub_1CB846084() - 8);
      v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      v16 = *(_QWORD *)(v14 + 72);
      v17 = a2 + v16 * a3;
      v18 = v16 * v5;
      v19 = &v15[v18];
      v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20)
        goto LABEL_24;
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFC8);
  v8 = *(_QWORD *)(sub_1CB846084() - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  v12 = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1)
      goto LABEL_23;
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

size_t sub_1CB7F2A8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED88BFC8);
  v3 = *(_QWORD *)(sub_1CB846084() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_1CB7F37B4(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_1CB7DB3CC();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CB7F2B84(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1CB7F2F94((unint64_t)(v3 + 4), v2, v1, (void (*)(_QWORD))type metadata accessor for Turn, &qword_1EF9A0CA0, &qword_1EF99D808, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1CB7BD374);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1CB7F2C98(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED88DE80);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_1CB7F3B04(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1CB7DB3CC();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1CB7F2D80(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1CB7F46FC(&qword_1EF9A0BE8, &qword_1EF9A0BE0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0BE0);
          v12 = sub_1CB7BD3CC(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1CB777FA8(0, &qword_1ED88BEE8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7F2F94(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  uint64_t *v23;
  uint64_t v24;
  uint64_t result;
  _BYTE v26[32];

  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        v19 = sub_1CB7F46FC(a5, a6);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v22 = (void (*)(_BYTE *, _QWORD))a7(v26, i, a3, v21, v19);
          v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(_QWORD *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7F319C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1CB7F46FC(&qword_1EF9A0C80, &qword_1EF9A0C78);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0C78);
          v12 = sub_1CB7BD474(v16, i, a3);
          v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0C70);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7F33A4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1CB847044();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1CB7F46FC((unint64_t *)&unk_1EF9A0C00, &qword_1EF9A0BF8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0BF8);
          v12 = sub_1CB7BD4C8(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1CB777FA8(0, (unint64_t *)&qword_1EF9A0BF0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1CB847074();
  __break(1u);
  return result;
}

uint64_t sub_1CB7F35B8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CB7F37B4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED88D570);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CB846084();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 56;
  v14 = *(_QWORD *)(a4 + 56);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 56;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_1CB785B54((uint64_t)v10, &qword_1ED88D570);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_1CB7F3B04(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1CB7F3CFC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_1CB84693C();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_1CB8469D8();
  }
  __break(1u);
  return result;
}

uint64_t sub_1CB7F3D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v20[6];
  uint64_t v21;

  v20[2] = a2;
  v20[3] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF9A0CA8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v20[1] = v3;
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1CB776040(0, v8, 0);
    v9 = v21;
    v10 = (uint64_t *)(a1 + 40);
    do
    {
      v11 = *v10;
      v20[4] = *(v10 - 1);
      v20[5] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CB846090();
      v12 = sub_1CB846108();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 0, 1, v12);
      sub_1CB78A5E8();
      v13 = sub_1CB846E88();
      v15 = v14;
      sub_1CB785B54((uint64_t)v7, &qword_1EF9A0CA8);
      swift_bridgeObjectRelease();
      v21 = v9;
      v17 = *(_QWORD *)(v9 + 16);
      v16 = *(_QWORD *)(v9 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1CB776040(v16 > 1, v17 + 1, 1);
        v9 = v21;
      }
      v10 += 2;
      *(_QWORD *)(v9 + 16) = v17 + 1;
      v18 = v9 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
      --v8;
    }
    while (v8);
  }
  return v9;
}

void *_s28SiriPrivateLearningAnalytics15WakeWordTrimmerV17getTriggerPhrases6localeSaySSGSS_tFZ_0(uint64_t a1, unint64_t a2)
{
  void *result;
  char v5;
  BOOL v7;
  char v8;
  BOOL v9;
  BOOL v10;
  char v11;
  BOOL v12;
  BOOL v13;
  char v14;
  BOOL v15;
  BOOL v16;
  char v17;
  BOOL v18;
  BOOL v19;
  char v20;
  BOOL v21;
  BOOL v22;
  char v23;
  BOOL v24;
  BOOL v25;
  char v26;
  BOOL v27;
  BOOL v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;

  if (a1 == 0x53555F6E65 && a2 == 0xE500000000000000)
    return &unk_1E868A110;
  v5 = sub_1CB8471A0();
  v7 = a1 == 0x55415F6E65 && a2 == 0xE500000000000000;
  result = &unk_1E868A110;
  if ((v5 & 1) == 0 && !v7)
  {
    v8 = sub_1CB8471A0();
    v9 = a1 == 0x41435F6E65 && a2 == 0xE500000000000000;
    v10 = v9;
    result = &unk_1E868A110;
    if ((v8 & 1) == 0 && !v10)
    {
      v11 = sub_1CB8471A0();
      v12 = a1 == 0x42475F6E65 && a2 == 0xE500000000000000;
      v13 = v12;
      result = &unk_1E868A110;
      if ((v11 & 1) == 0 && !v13)
      {
        v14 = sub_1CB8471A0();
        v15 = a1 == 0x45495F6E65 && a2 == 0xE500000000000000;
        v16 = v15;
        result = &unk_1E868A110;
        if ((v14 & 1) == 0 && !v16)
        {
          v17 = sub_1CB8471A0();
          v18 = a1 == 0x4E495F6E65 && a2 == 0xE500000000000000;
          v19 = v18;
          result = &unk_1E868A110;
          if ((v17 & 1) == 0 && !v19)
          {
            v20 = sub_1CB8471A0();
            v21 = a1 == 0x5A4E5F6E65 && a2 == 0xE500000000000000;
            v22 = v21;
            result = &unk_1E868A110;
            if ((v20 & 1) == 0 && !v22)
            {
              v23 = sub_1CB8471A0();
              v24 = a1 == 0x47535F6E65 && a2 == 0xE500000000000000;
              v25 = v24;
              result = &unk_1E868A110;
              if ((v23 & 1) == 0 && !v25)
              {
                v26 = sub_1CB8471A0();
                v27 = a1 == 0x415A5F6E65 && a2 == 0xE500000000000000;
                v28 = v27;
                result = &unk_1E868A110;
                if ((v26 & 1) == 0 && !v28)
                {
                  if ((sub_1CB8471A0() & 1) != 0)
                    return &unk_1E868A110;
                  if (qword_1ED88E518 != -1)
                    swift_once();
                  v29 = sub_1CB8466D8();
                  __swift_project_value_buffer(v29, (uint64_t)qword_1ED890248);
                  swift_bridgeObjectRetain_n();
                  v30 = sub_1CB8466C0();
                  v31 = sub_1CB846C90();
                  if (os_log_type_enabled(v30, v31))
                  {
                    v32 = (uint8_t *)swift_slowAlloc();
                    v33 = swift_slowAlloc();
                    v34 = v33;
                    *(_DWORD *)v32 = 136315138;
                    swift_bridgeObjectRetain();
                    sub_1CB775A54(a1, a2, &v34);
                    sub_1CB846E58();
                    swift_bridgeObjectRelease_n();
                    _os_log_impl(&dword_1CB771000, v30, v31, "[ASRFeatureExtractor] #getTriggerPhrase: locale %s not enabled", v32, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x1D179FE84](v33, -1, -1);
                    MEMORY[0x1D179FE84](v32, -1, -1);

                  }
                  else
                  {

                    swift_bridgeObjectRelease_n();
                  }
                  return (void *)MEMORY[0x1E0DEE9D8];
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t destroy for CurrentLocales()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CurrentLocales(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CurrentLocales(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

_QWORD *assignWithTake for CurrentLocales(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentLocales(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CurrentLocales(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WakeWordTrimmer()
{
  return &type metadata for WakeWordTrimmer;
}

uint64_t sub_1CB7F46FC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D179FD88](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CB7F473C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1CB776344(0, v1, 0);
  v2 = v25;
  result = sub_1CB81B6CC(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v24 = *(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * v6);
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v14 = *(_QWORD *)(v25 + 16);
    v13 = *(_QWORD *)(v25 + 24);
    result = swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1)
      result = sub_1CB776344(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v25 + 16) = v14 + 1;
    v15 = v25 + 16 * v14;
    *(_DWORD *)(v15 + 32) = v24;
    *(_QWORD *)(v15 + 40) = v12;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1CB7F4948@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t (*v36)(char *);
  uint64_t v37;

  v36 = a1;
  v33 = a3;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF99F0B0);
  v32 = *(_QWORD *)(v37 - 8);
  v5 = MEMORY[0x1E0C80A78](v37);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  v10 = *(_QWORD *)(a2 + 64);
  v34 = a2 + 64;
  v11 = 1 << *(_BYTE *)(a2 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v35 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    v21 = *(_QWORD *)(a2 + 48);
    v22 = sub_1CB846084();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v9, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * i, v22);
    v23 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    v26 = &v9[*(int *)(v37 + 48)];
    *(_QWORD *)v26 = v25;
    *((_QWORD *)v26 + 1) = v24;
    sub_1CB7D836C((uint64_t)v9, (uint64_t)v7, &qword_1EF99F0B0);
    swift_retain();
    swift_retain();
    v27 = v36(v7);
    if (v3)
    {
      sub_1CB785B54((uint64_t)v7, &qword_1EF99F0B0);
      return swift_release();
    }
    if ((v27 & 1) != 0)
    {
      swift_release();
      v28 = v33;
      sub_1CB7D836C((uint64_t)v7, v33, &qword_1EF99F0B0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v37);
    }
    result = sub_1CB785B54((uint64_t)v7, &qword_1EF99F0B0);
    if (v13)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v15 >= v35)
      goto LABEL_28;
    v19 = *(_QWORD *)(v34 + 8 * v15);
    if (!v19)
      break;
LABEL_17:
    v13 = (v19 - 1) & v19;
  }
  v20 = v15 + 1;
  if (v15 + 1 >= v35)
    goto LABEL_28;
  v19 = *(_QWORD *)(v34 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 2;
  if (v15 + 2 >= v35)
    goto LABEL_28;
  v19 = *(_QWORD *)(v34 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 3;
  if (v15 + 3 >= v35)
    goto LABEL_28;
  v19 = *(_QWORD *)(v34 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 4;
  if (v15 + 4 >= v35)
  {
LABEL_28:
    v30 = v32;
    v29 = v33;
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v29, 1, 1, v37);
  }
  v19 = *(_QWORD *)(v34 + 8 * v20);
  if (v19)
  {
LABEL_16:
    v15 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v35)
      goto LABEL_28;
    v19 = *(_QWORD *)(v34 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_17;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CB7F4C44(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_1CB847044())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D179F320](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v13 = v8;
      v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

