uint64_t sub_18FDDA468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_18FDD9744(a1, a2, a3, *(void **)(v3 + 16), *(uint64_t (**)(void *))(v3 + 24));
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t sub_18FDDA48C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18FDDA4B4(void *a1, void *a2)
{
  uint64_t *v2;

  return sub_18FDD97A4(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_18FDDA4C0()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FDDA4FC()
{
  uint64_t v0;

  return sub_18FDD9A04(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void (**)(id, uint64_t))(v0 + 40));
}

uint64_t sub_18FDDA50C()
{
  id *v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FDDA558()
{
  uint64_t v0;

  return sub_18FDD8DF4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

void sub_18FDDA56C(void *a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  char v40;
  id v41;
  char v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  unint64_t v50;
  id v51;
  void *v52;
  id v53;
  char v54;
  uint64_t v55;
  unsigned int v56;
  unsigned int v57;
  char v58;
  _BOOL4 v59;
  _BOOL4 v60;
  _BOOL8 v61;
  void *v62;
  id v63;
  _QWORD *v64;
  void *v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  id v72;
  void *aBlock;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  void *v76;
  uint64_t (*v77)();
  _QWORD *v78;
  char v79;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a7;
  v16[3] = a8;
  v69 = a8;
  v70 = v16;
  v16[4] = a9;
  swift_retain();
  swift_retain();
  objc_msgSend(a1, sel_setEligibilityResponse_, a4);
  if (a2)
  {
    v17 = a2;
    v18 = objc_msgSend(v17, sel_paymentSetupFieldWithIdentifier_, CFSTR("cardSecurityCode"));
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(v18, sel_submissionString);

      sub_1903D05C8();
      v21 = (void *)sub_1903D05A4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = 0;
    }
    objc_msgSend(a1, sel_setCardSecurityCode_, v21);

    v22 = objc_msgSend(v17, sel_paymentSetupFieldWithIdentifier_, CFSTR("cardholderName"));
    if (v22)
    {
      v23 = v22;
      v24 = objc_msgSend(v22, sel_submissionString);

      sub_1903D05C8();
      v25 = (void *)sub_1903D05A4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v25 = 0;
    }
    objc_msgSend(a1, sel_setCardholderName_, v25);

    v26 = objc_msgSend(v17, sel_submissionValuesForDestination_, CFSTR("enable"));
    if (v26)
    {
      sub_1903D04E4();

      v26 = (id)sub_1903D04CC();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(a1, sel_setOverlayParameters_, v26);

    v27 = objc_msgSend(v17, sel_secureSubmissionValuesForDestination_, CFSTR("enable"));
    if (v27)
    {
      v28 = v27;
      sub_1903D04E4();

      v29 = (void *)sub_1903D04CC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = 0;
    }
    objc_msgSend(a1, sel_setSecureOverlayParameters_, v29);

  }
  if (a3)
  {
    v30 = a3;
    v31 = objc_msgSend(v30, sel_activationData);
    if (v31)
    {
      v32 = v31;
      v33 = sub_1903D01B4();
      v35 = v34;

      v36 = (void *)sub_1903D01A8();
      objc_msgSend(a1, sel_setActivationData_, v36);

      sub_18FCD5938(v33, v35);
    }

  }
  v37 = *(void **)(a6 + 24);
  v38 = *(_QWORD *)(a6 + 32);
  v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a6 + 40);
  v40 = *(_BYTE *)(a6 + 48);
  if (v40)
  {
    v72 = 0;
  }
  else
  {
    v41 = v37;
    v72 = v37;
  }
  aBlock = v37;
  v74 = v38;
  v75 = v39;
  LOBYTE(v76) = v40;
  ProvisioningCredentialsConfiguration.Credential.transferType.getter(&v79);
  if (v79 == 2)
    goto LABEL_22;
  if ((v79 & 1) == 0)
    goto LABEL_22;
  if (!v72)
    goto LABEL_22;
  v46 = objc_msgSend(v72, sel_remoteCredential);
  if (!v46)
    goto LABEL_22;
  v47 = v46;
  v48 = objc_msgSend(v46, sel_transferableFromDevices);
  if (!v48)
  {

    goto LABEL_22;
  }
  v49 = v48;
  sub_18FCDC600(0, &qword_1EE1C0DC0);
  v50 = sub_1903D0784();

  if (v50 >> 62)
  {
    swift_bridgeObjectRetain();
    v68 = sub_1903D0D00();
    swift_bridgeObjectRelease();
    if (v68)
      goto LABEL_32;
LABEL_57:

    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if (!*(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_57;
LABEL_32:
  if ((v50 & 0xC000000000000001) != 0)
  {
    v51 = (id)MEMORY[0x19400B200](0, v50);
  }
  else
  {
    if (!*(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v51 = *(id *)(v50 + 32);
  }
  v52 = v51;
  swift_bridgeObjectRelease();
  v53 = objc_msgSend(v52, sel_identifier);
  if (!v53)
  {
    sub_1903D05C8();
    v53 = (id)sub_1903D05A4();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(a1, sel_setTransferFromDevice_, v53);

  objc_msgSend(a1, sel_setRemoveFromSourceDevice_, 1);
LABEL_22:
  aBlock = v37;
  v74 = v38;
  v75 = v39;
  LOBYTE(v76) = v40;
  ProvisioningCredentialsConfiguration.Credential.isPushProvisioningCredential.getter();
  if ((v42 & 1) != 0)
    goto LABEL_25;
  aBlock = v37;
  v74 = v38;
  v75 = v39;
  LOBYTE(v76) = v40;
  ProvisioningCredentialsConfiguration.Credential.addPassRequestConfiguration.getter();
  if (!v43)
    goto LABEL_38;
  v44 = v43;
  v45 = objc_msgSend(v43, sel_style);

  if (v45 == (id)1)
  {
LABEL_25:
    objc_msgSend(a1, sel_setStyle_, 1);
    objc_msgSend(a1, sel_setDisableDeviceScore_, 1);
  }
  else
  {
LABEL_38:
    objc_msgSend(a1, sel_setStyle_, 0);
  }
  v54 = 0;
  v55 = *(_QWORD *)(a6 + 16);
  v56 = *(unsigned __int16 *)(v55 + 33);
  v57 = v56 >> 14;
  if (v56 == 49152 && v57 == 3)
  {
    aBlock = v37;
    v74 = v38;
    v75 = v39;
    LOBYTE(v76) = v40;
    ProvisioningCredentialsConfiguration.Credential.isPushProvisioningCredential.getter();
    v54 = v58 ^ 1;
  }
  objc_msgSend(a1, sel_setSendReducedDeviceData_, v54 & 1);
  v59 = (v56 & 1) == 0;
  if (v57)
    v59 = (v56 & 0xFE) == 0;
  v60 = v57 - 2 >= 2 && v59;
  v61 = *(_BYTE *)(v55 + 32) != 1 && v60;
  objc_msgSend(a1, sel_setIncludeExternalDestinationDevices_, v61);
  v62 = *(void **)(a6 + 56);
  if (objc_msgSend(v62, sel_hasNonce))
  {
    v63 = objc_msgSend(v62, sel_useNonce);
    objc_msgSend(a1, sel_setNonce_, v63);

  }
  if (a5)
  {
    v64 = (_QWORD *)swift_allocObject();
    v64[2] = a1;
    v64[3] = sub_18FDDA460;
    v64[4] = v70;
    v77 = sub_18FDDAEC4;
    v78 = v64;
    aBlock = (void *)MEMORY[0x1E0C809B0];
    v74 = 1107296256;
    v75 = sub_18FD877F0;
    v76 = &block_descriptor_65_0;
    v65 = _Block_copy(&aBlock);
    v66 = a5;
    v67 = a1;
    swift_retain();
    swift_release();
    objc_msgSend(v66, sel_waitForAssessmentWithTimeout_startTimeoutFromAssessmentStart_continueBlock_, 5, 1, v65);

    _Block_release(v65);
    swift_release();

  }
  else
  {
    sub_18FDD8EB4((uint64_t)a1, v69, a9);
    swift_release();

  }
}

uint64_t sub_18FDDAD20()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_18FDDAD44(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_18FDD903C(a1, a2, a3, a4, v4);
}

uint64_t sub_18FDDAD4C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_18FDDAD80(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_18FDD93A4(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_18FDDAD8C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_18FDDADC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_18FDD96C0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void (**)(void *, uint64_t))(v3 + 24), *(_QWORD *)(v3 + 32), *(void (**)(uint64_t))(v3 + 40));
}

uint64_t sub_18FDDADD0()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_18FDDAE04(char a1)
{
  uint64_t v1;

  return sub_18FDD95AC(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t, BOOL))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_18FDDAE14()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

id sub_18FDDAE48(char a1)
{
  uint64_t v1;

  return sub_18FDD914C(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_18FDDAE58(uint64_t a1)
{
  uint64_t v1;

  sub_18FDD8EB4(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

id ProvisioningCarKeyStepFindSource.__allocating_init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  uint64_t v8;
  char v9;
  char *v10;
  char *v11;
  objc_super v13;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)&v7[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_continuityManager] = 0;
  v10 = &v7[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_completion];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_context] = a1;
  v11 = &v7[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_credential];
  *(_OWORD *)v11 = *(_OWORD *)a2;
  *((_QWORD *)v11 + 2) = v8;
  v11[24] = v9;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_sharedState] = a3;
  v13.receiver = v7;
  v13.super_class = v3;
  return objc_msgSendSuper2(&v13, sel_init);
}

id ProvisioningCarKeyStepFindSource.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  objc_super v8;

  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_continuityManager] = 0;
  v5 = &v3[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_completion];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_context] = a1;
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  v6 = &v3[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_credential];
  *(_OWORD *)v6 = *(_OWORD *)a2;
  *((_QWORD *)v6 + 2) = v4;
  v6[24] = (char)v5;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_sharedState] = a3;
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for ProvisioningCarKeyStepFindSource();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for ProvisioningCarKeyStepFindSource()
{
  return objc_opt_self();
}

id ProvisioningCarKeyStepFindSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ProvisioningCarKeyStepFindSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ProvisioningCarKeyStepFindSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProvisioningCarKeyStepFindSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_18FDDB138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  objc_class *Source;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  char *v13;
  id result;
  objc_super v15;

  Source = (objc_class *)type metadata accessor for ProvisioningCarKeyStepFindSource();
  v9 = (char *)objc_allocWithZone(Source);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)&v9[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_continuityManager] = 0;
  v12 = &v9[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_completion];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_context] = a1;
  v13 = &v9[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_credential];
  *(_OWORD *)v13 = *(_OWORD *)a2;
  *((_QWORD *)v13 + 2) = v10;
  v13[24] = v11;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_sharedState] = a3;
  v15.receiver = v9;
  v15.super_class = Source;
  result = objc_msgSendSuper2(&v15, sel_init);
  *a4 = result;
  return result;
}

uint64_t sub_18FDDB1F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return sub_18FDDB8C0(a2, a3);
}

uint64_t ProvisioningCarKeyStepFindSource.terminateOperation(success:output:completion:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return sub_18FDDB8C0(a2, a3);
}

uint64_t static ProvisioningCarKeyStepFindSource.archive(output:)()
{
  return 0;
}

double sub_18FDDB23C@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = -1;
  return result;
}

double static ProvisioningCarKeyStepFindSource.unarchive(outputData:)@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = -1;
  return result;
}

void sub_18FDDB264(unint64_t a1, char a2, uint64_t a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  void *v20;
  unint64_t *v21;
  void *v22;
  id v23;
  void *v24;
  char v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;

  v11 = a3 + 16;
  swift_beginAccess();
  v12 = MEMORY[0x19400D8B8](v11);
  if (!v12)
    return;
  v13 = (void *)v12;
  if ((a2 & 1) != 0)
  {
    sub_18FDDC98C((id)a1, 1);
    v19 = sub_18FDDC794();
    sub_18FDDC998();
    v20 = (void *)swift_allocError();
    *v21 = a1;
    sub_18FD59B20((id)a1);
    v22 = (void *)sub_1903D0124();

    objc_msgSend(v19, sel_setUnderlyingError_, v22);
    v33 = (unint64_t)v19;
    v34 = 0;
    v35 = 0;
    v36 = 256;
    v23 = v19;
    sub_18FDDB650(&v33);

    v24 = (void *)a1;
    v25 = 1;
LABEL_10:
    sub_18FDDC9DC(v24, v25);

    return;
  }
  swift_bridgeObjectRetain();
  if (!PKSharingForceSilentAuth())
  {
    *(_QWORD *)&v33 = a1;
    *((_QWORD *)&v33 + 1) = a6;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v23 = a6;
    sub_18FDDB650(&v33);

    v24 = (void *)a1;
    v25 = 0;
    goto LABEL_10;
  }
  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v14 = sub_1903D0340();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain_n();
  v15 = sub_1903D0328();
  v16 = sub_1903D0940();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    *(_QWORD *)&v33 = v18;
    *(_DWORD *)v17 = 136315138;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a4, a5, (uint64_t *)&v33);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v15, v16, "[%s] Forcing silent auth", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v18, -1, -1);
    MEMORY[0x19400D804](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v26 = (id)MEMORY[0x19400B200](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v26 = *(id *)(a1 + 32);
  }
  v27 = v26;
  sub_18FDDC9DC((id)a1, 0);
  v28 = objc_msgSend(v27, sel_uniqueID);
  sub_1903D05C8();

  v29 = sub_18FD57C0C();
  swift_bridgeObjectRelease();
  if (v29)
  {
    sub_18FD590BC((void *)1, 0, 1);
    *(_QWORD *)&v33 = v27;
    *((_QWORD *)&v33 + 1) = v29;
    v34 = 0;
    v35 = 0;
    v36 = 1;
    v30 = v27;
    v31 = v29;
    sub_18FDDB650(&v33);

  }
  else
  {
    v33 = (unint64_t)sub_18FDDC794();
    v34 = 0;
    v35 = 0;
    v36 = 256;
    v32 = (id)v33;
    sub_18FDDB650(&v33);

  }
}

uint64_t sub_18FDDB650(__int128 *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD aBlock[6];
  __int128 v19[2];

  v2 = v1;
  v4 = sub_1903D03B8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1903D03D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FDDC9E8(a1, (uint64_t)v19);
  sub_18FCDE8A0();
  v12 = (void *)sub_1903D097C();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v2;
  sub_18FDDC9E8(v19, v13 + 24);
  aBlock[4] = sub_18FDDCA38;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = &block_descriptor_26;
  v14 = _Block_copy(aBlock);
  v15 = v2;
  sub_18FDDCA5C((uint64_t)v19);
  swift_release();
  sub_1903D03C4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCDC494();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
  sub_18FCDC4DC();
  sub_1903D0B38();
  MEMORY[0x19400AF6C](0, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_18FDDB840(uint64_t result, __int128 *a2)
{
  _QWORD *v2;
  void (*v3)(_BYTE *);
  _BYTE v5[40];

  v2 = (_QWORD *)(result + OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_completion);
  v3 = *(void (**)(_BYTE *))(result
                                      + OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_completion);
  if (v3)
  {
    *v2 = 0;
    v2[1] = 0;
    swift_retain();
    sub_18FD4A1C4((uint64_t)v3);
    sub_18FDDC9E8(a2, (uint64_t)v5);
    v3(v5);
    return sub_18FD4A1C4((uint64_t)v3);
  }
  return result;
}

uint64_t sub_18FDDB8C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;

  v4 = OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_continuityManager;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_continuityManager);
  if (v5)
  {
    v6 = v5;
    sub_18FD57DC4();

    v5 = *(void **)(v2 + v4);
  }
  *(_QWORD *)(v2 + v4) = 0;

  return a2();
}

void destroy for ProvisioningCarKeyInvitationSourceConfiguration(uint64_t a1)
{
  sub_18FD785F8(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for ProvisioningCarKeyInvitationSourceConfiguration(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_18FD96260(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ProvisioningCarKeyInvitationSourceConfiguration(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_18FD96260(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(void **)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_18FD785F8(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ProvisioningCarKeyInvitationSourceConfiguration(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_18FD785F8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProvisioningCarKeyInvitationSourceConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ProvisioningCarKeyInvitationSourceConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_18FDDBB04(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 2u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_18FDDBB1C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ProvisioningCarKeyInvitationSourceConfiguration()
{
  return &type metadata for ProvisioningCarKeyInvitationSourceConfiguration;
}

uint64_t method lookup function for ProvisioningCarKeyStepFindSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningCarKeyStepFindSource.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

void destroy for ProvisioningCarKeyStepFindSource.FindSourceResult(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 33);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)

  else
    sub_18FD785F8(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for ProvisioningCarKeyStepFindSource.FindSourceResult(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  uint64_t v4;
  id v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *((unsigned __int8 *)a2 + 33);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  v4 = *a2;
  if (v3 == 1)
  {
    v5 = (id)*a2;
    v6 = 1;
  }
  else
  {
    v7 = (void *)a2[1];
    v8 = a2[2];
    v9 = a2[3];
    v10 = *((_BYTE *)a2 + 32);
    sub_18FD96260((id)*a2, v7, v8, v9, v10);
    v6 = 0;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v10;
  }
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 33) = v6;
  return a1;
}

uint64_t assignWithCopy for ProvisioningCarKeyStepFindSource.FindSourceResult(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 33);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)

    else
      sub_18FD785F8(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
    v5 = *(unsigned __int8 *)(a2 + 33);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 33) = 1;
      v7 = v6;
    }
    else
    {
      v8 = *(void **)a2;
      v9 = *(void **)(a2 + 8);
      v10 = *(_QWORD *)(a2 + 16);
      v11 = *(_QWORD *)(a2 + 24);
      v12 = *(_BYTE *)(a2 + 32);
      sub_18FD96260(v8, v9, v10, v11, v12);
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v9;
      *(_QWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 24) = v11;
      *(_BYTE *)(a1 + 32) = v12;
      *(_BYTE *)(a1 + 33) = 0;
    }
  }
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ProvisioningCarKeyStepFindSource.FindSourceResult(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 33);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)

    else
      sub_18FD785F8(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
    v5 = *(unsigned __int8 *)(a2 + 33);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = 1;
    }
    else
    {
      v6 = 0;
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    }
    *(_BYTE *)(a1 + 33) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ProvisioningCarKeyStepFindSource.FindSourceResult(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 34))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 33);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ProvisioningCarKeyStepFindSource.FindSourceResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
      *(_BYTE *)(result + 33) = -(char)a2;
  }
  return result;
}

uint64_t sub_18FDDBE4C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 33);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_18FDDBE68(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 33) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ProvisioningCarKeyStepFindSource.FindSourceResult()
{
  return &type metadata for ProvisioningCarKeyStepFindSource.FindSourceResult;
}

void sub_18FDDBEA0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t *);
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (**v24)(uint64_t *);
  uint64_t v25;
  void *v26;
  id v27;
  char *v28;
  void *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  char *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  void *v47;
  uint64_t v48;
  uint64_t ObjectType;
  id v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  void *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t);
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  __int128 v82;
  __int128 v83;
  __int16 v84;

  v8 = sub_1903D0250();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BFA20);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v78 - v16;
  v18 = (uint64_t (*)(uint64_t *))swift_allocObject();
  *((_QWORD *)v18 + 2) = a2;
  *((_QWORD *)v18 + 3) = a3;
  v79 = a3;
  *((_QWORD *)v18 + 4) = a4;
  v19 = *(void **)(a1 + OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_sharedState);
  v81 = a2;
  swift_retain();
  v80 = a4;
  swift_retain();
  v20 = objc_msgSend(v19, "sid");
  v21 = sub_1903D05C8();
  v23 = v22;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_credential + 24)
    || (v35 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_credential), sel_localAppletSubcredentialPassCredential)) == 0)
  {
    v24 = (uint64_t (**)(uint64_t *))(a1
                                             + OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_completion);
    v25 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_completion);
    *v24 = sub_18FDDC6D8;
    v24[1] = v18;
    swift_retain();
    sub_18FD4A1C4(v25);
    sub_18FCDE8A0();
    v26 = (void *)sub_1903D097C();
    v27 = objc_allocWithZone((Class)type metadata accessor for ProvisioningContinuityCarClientManager());
    v28 = sub_18FD58F38(v26);
    v29 = *(void **)(a1 + OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_continuityManager);
    *(_QWORD *)(a1 + OBJC_IVAR____TtC11PassKitCore32ProvisioningCarKeyStepFindSource_continuityManager) = v28;
    v30 = v28;

    v31 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = v31;
    v32[3] = v21;
    v32[4] = v23;
    v32[5] = v30;
    v33 = objc_allocWithZone((Class)PKProvisioningContinuityDiscoveryRequestMessage);
    v34 = v30;
    swift_retain();
    v81 = objc_msgSend(v33, sel_initWithContinuityType_verifyProximity_, 1, 1);
    sub_18FD56D24(v81, (uint64_t)sub_18FDDC73C, (uint64_t)v32);
    swift_release();

    swift_release();
    swift_release();

    return;
  }
  v36 = v35;
  swift_bridgeObjectRelease();
  v37 = objc_msgSend(v36, sel_credentialToShare);
  if (!v37)
  {
    swift_release();
    swift_release();
    __break(1u);
    goto LABEL_30;
  }
  v38 = v37;
  if (PKAppletSubcredentialSupportsSharingInAChain(v37)
    || (objc_msgSend(v38, sel_isSharedCredential) & 1) == 0)
  {
    v46 = v81;
    swift_beginAccess();
    if (MEMORY[0x19400D8B8](v46 + 2))
    {
      v47 = v36;
      v48 = v46[3];
      ObjectType = swift_getObjectType();
      v82 = 0u;
      v83 = 0u;
      v84 = 3;
      (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 24))(&v82, v79, v80, ObjectType, v48);
      swift_release();

LABEL_12:
LABEL_13:
      swift_unknownObjectRelease();
      return;
    }
    swift_release();
  }
  else
  {
    v39 = objc_msgSend(v38, sel_originatorIDSHandle);
    if (!v39)
      goto LABEL_21;
    v40 = v39;
    v78 = (id)sub_1903D05C8();
    v42 = v41;

    v43 = objc_msgSend(v38, sel_sharingSessionIdentifier);
    if (v43)
    {
      v44 = v43;
      sub_1903D0238();

      v45 = 0;
    }
    else
    {
      v45 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v15, v45, 1, v8);
    sub_18FDDC74C((uint64_t)v15, (uint64_t)v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8))
    {
      swift_bridgeObjectRelease();
      sub_18FD555D0((uint64_t)v17);
LABEL_21:
      v78 = v36;
      v50 = PKPassKitBundle();
      if (v50)
      {
        v51 = v50;
        v52 = (void *)sub_1903D05A4();
        v53 = (void *)sub_1903D05A4();
        v54 = (void *)sub_1903D05A4();
        v55 = objc_msgSend(v51, sel_localizedStringForKey_value_table_, v52, v53, v54);

        sub_1903D05C8();
        v56 = PKPassKitBundle();
        if (v56)
        {
          v57 = v56;
          v58 = (void *)sub_1903D05A4();
          v59 = (void *)sub_1903D05A4();
          v60 = (void *)sub_1903D05A4();
          v61 = objc_msgSend(v57, sel_localizedStringForKey_value_table_, v58, v59, v60);

          sub_1903D05C8();
          v62 = (void *)sub_1903D05A4();
          swift_bridgeObjectRelease();
          v63 = (void *)sub_1903D05A4();
          swift_bridgeObjectRelease();
          v64 = objc_msgSend((id)objc_opt_self(), sel_errorWithTitle_message_severity_, v62, v63, 5);

          v65 = (void *)sub_1903D05A4();
          objc_msgSend(v64, sel_addInternalDebugDescription_, v65);

          v66 = v81;
          swift_beginAccess();
          if (MEMORY[0x19400D8B8](v66 + 2))
          {
            v67 = v66[3];
            v68 = swift_getObjectType();
            v82 = (unint64_t)v64;
            v83 = 0uLL;
            v84 = 256;
            v69 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 24);
            v70 = v64;
            v69(&v82, v79, v80, v68, v67);
            swift_release();

            goto LABEL_13;
          }
          swift_release();

          goto LABEL_16;
        }
LABEL_31:
        swift_release();
        swift_release();
        __break(1u);
        return;
      }
LABEL_30:
      swift_release();
      swift_release();
      __break(1u);
      goto LABEL_31;
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v17, v8);
    sub_18FD555D0((uint64_t)v17);
    v71 = sub_1903D022C();
    v73 = v72;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v74 = v81;
    swift_beginAccess();
    if (MEMORY[0x19400D8B8](v74 + 2))
    {
      v75 = v36;
      v76 = v74[3];
      v77 = swift_getObjectType();
      *(_QWORD *)&v82 = v78;
      *((_QWORD *)&v82 + 1) = v42;
      *(_QWORD *)&v83 = v71;
      *((_QWORD *)&v83 + 1) = v73;
      v84 = 2;
      (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 24))(&v82, v79, v80, v77, v76);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_12;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

LABEL_16:
}

uint64_t sub_18FDDC6AC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FDDC6D8(uint64_t *a1)
{
  uint64_t *v1;

  return sub_18FD928C0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_18FDDC6E4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18FDDC708()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_18FDDC73C(unint64_t a1, char a2)
{
  uint64_t v2;

  sub_18FDDB264(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_18FDDC74C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BFA20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_18FDDC794()
{
  id result;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;

  result = PKPassKitBundle();
  if (result)
  {
    v1 = result;
    v2 = (void *)sub_1903D05A4();
    v3 = (void *)sub_1903D05A4();
    v4 = (void *)sub_1903D05A4();
    v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

    sub_1903D05C8();
    result = PKPassKitBundle();
    if (result)
    {
      v6 = result;
      v7 = (void *)sub_1903D05A4();
      v8 = (void *)sub_1903D05A4();
      v9 = (void *)sub_1903D05A4();
      v10 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, v8, v9);

      sub_1903D05C8();
      v11 = (void *)sub_1903D05A4();
      swift_bridgeObjectRelease();
      v12 = (void *)sub_1903D05A4();
      swift_bridgeObjectRelease();
      v13 = objc_msgSend((id)objc_opt_self(), sel_errorWithTitle_message_severity_, v11, v12, 4);

      return v13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_18FDDC98C(id result, char a2)
{
  if ((a2 & 1) != 0)
    return sub_18FD59B20(result);
  else
    return (id)swift_bridgeObjectRetain();
}

unint64_t sub_18FDDC998()
{
  unint64_t result;

  result = qword_1EE1C05C8;
  if (!qword_1EE1C05C8)
  {
    result = MEMORY[0x19400D72C]("5UgRԵ\v", &type metadata for ProvisioningContinuityError);
    atomic_store(result, (unint64_t *)&qword_1EE1C05C8);
  }
  return result;
}

void sub_18FDDC9DC(id a1, char a2)
{
  if ((a2 & 1) != 0)
    sub_18FD59AC8(a1);
  else
    swift_bridgeObjectRelease();
}

uint64_t sub_18FDDC9E8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_WORD *)(a2 + 32) = *((_WORD *)a1 + 16);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_18FDDCA00()
{
  uint64_t v0;

  sub_18FD785EC(*(id *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56), *(_BYTE *)(v0 + 57));
  return swift_deallocObject();
}

uint64_t sub_18FDDCA38()
{
  uint64_t v0;

  return sub_18FDDB840(*(_QWORD *)(v0 + 16), (__int128 *)(v0 + 24));
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t sub_18FDDCA5C(uint64_t a1)
{
  sub_18FDDCA94(*(id *)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32), *(_BYTE *)(a1 + 33));
  return a1;
}

id sub_18FDDCA94(id a1, void *a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  if ((a6 & 1) != 0)
    return a1;
  else
    return sub_18FD96260(a1, a2, a3, a4, a5);
}

uint64_t sub_18FDDCAA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1903CFECC();
  swift_allocObject();
  sub_1903CFEC0();
  v2 = type metadata accessor for NearbyPeerPaymentSenderRequestMetadata();
  sub_18FCD5E34(&qword_1EE1C06B0, (uint64_t (*)(uint64_t))type metadata accessor for NearbyPeerPaymentSenderRequestMetadata, (uint64_t)&protocol conformance descriptor for NearbyPeerPaymentSenderRequestMetadata);
  sub_1903CFEB4();
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

id sub_18FDDCD34()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____PKNearbyPeerPaymentReceiverCoordinator____lazy_storage___amountFormatter;
  v2 = *(void **)(v0 + OBJC_IVAR____PKNearbyPeerPaymentReceiverCoordinator____lazy_storage___amountFormatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____PKNearbyPeerPaymentReceiverCoordinator____lazy_storage___amountFormatter);
  }
  else
  {
    v4 = _s11PassKitCore17NearbyPeerPaymentO15amountFormatterSo08NSNumberH0CvgZ_0();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id NearbyPeerPaymentReceiverCoordinator.__allocating_init(senderMetadata:)(uint64_t a1, unint64_t a2)
{
  objc_class *v2;
  objc_class *v3;
  id v6;
  void *v7;
  char *v8;
  id result;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t *v13;
  id v14;
  objc_super v15;

  v3 = v2;
  v6 = objc_allocWithZone(v3);
  v7 = (void *)objc_opt_self();
  v8 = (char *)v6;
  result = objc_msgSend(v7, sel_sharedInstance);
  if (result)
  {
    v10 = result;
    v11 = OBJC_IVAR____PKNearbyPeerPaymentReceiverCoordinator_peerPaymentAccount;
    v12 = objc_msgSend(result, sel_account);

    *(_QWORD *)&v8[v11] = v12;
    *(_QWORD *)&v8[OBJC_IVAR____PKNearbyPeerPaymentReceiverCoordinator____lazy_storage___amountFormatter] = 0;
    v13 = (uint64_t *)&v8[OBJC_IVAR____PKNearbyPeerPaymentReceiverCoordinator_senderMetadata];
    *v13 = a1;
    v13[1] = a2;
    sub_18FCD58F4(a1, a2);

    v15.receiver = v8;
    v15.super_class = v3;
    v14 = objc_msgSendSuper2(&v15, sel_init);
    sub_18FCD5938(a1, a2);
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id NearbyPeerPaymentReceiverCoordinator.init(senderMetadata:)(uint64_t a1, unint64_t a2)
{
  id v4;

  v4 = sub_18FDDE634(a1, a2);
  sub_18FCD5938(a1, a2);
  return v4;
}

uint64_t sub_18FDDCF58()
{
  uint64_t v0;

  return sub_18FDDE714(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

uint64_t sub_18FDDD098(int a1, void *aBlock)
{
  uint64_t v2;
  void (**v3)(void *, uint64_t);

  v3 = (void (**)(void *, uint64_t))_Block_copy(aBlock);
  v3[2](v3, 1);
  _Block_release(v3);
  return sub_18FDDEF84(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_18FDDD0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_18FDDD158;
  v8[5] = a3;
  v8[6] = v3;
  v8[3] = a1;
  v8[4] = a2;
  return swift_task_switch();
}

uint64_t sub_18FDDD158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 24) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_18FDDD1E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
}

uint64_t sub_18FDDD350(void *a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD *v12;

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v7 = sub_1903D05C8();
  v9 = v8;
  v4[5] = v8;
  v10 = a1;
  v11 = a4;
  v12 = (_QWORD *)swift_task_alloc();
  v4[6] = v12;
  *v12 = v4;
  v12[1] = sub_18FDDD404;
  v12[5] = v9;
  v12[6] = v11;
  v12[3] = v10;
  v12[4] = v7;
  return swift_task_switch();
}

uint64_t sub_18FDDD404(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  void *v8;
  void *v9;
  void *v10;
  void (**v11)(_QWORD, _QWORD);

  v6 = *v3;
  *(_QWORD *)(v6 + 56) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  v9 = *(void **)(v6 + 16);
  v8 = *(void **)(v6 + 24);
  swift_bridgeObjectRelease();

  v10 = (void *)sub_1903D01A8();
  sub_18FCD5938(a1, a2);
  v11 = *(void (***)(_QWORD, _QWORD))(v6 + 32);
  ((void (**)(_QWORD, void *))v11)[2](v11, v10);

  _Block_release(v11);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_18FDDD4E0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void (**v3)(_QWORD, _QWORD);

  v2 = *(void **)(v0 + 16);
  v1 = *(void **)(v0 + 24);

  swift_bridgeObjectRelease();
  v3 = *(void (***)(_QWORD, _QWORD))(v0 + 32);
  v3[2](v3, 0);
  _Block_release(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FDDD54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_18FDDD568()
{
  uint64_t *v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  objc_class *v5;
  id v6;
  _QWORD *v7;

  v1 = (void *)v0[3];
  v2 = (uint64_t *)(v0[6] + OBJC_IVAR____PKNearbyPeerPaymentReceiverCoordinator_senderMetadata);
  v3 = *v2;
  v4 = v2[1];
  v5 = (objc_class *)type metadata accessor for NearbyPeerPaymentReceiverResponseMetadata();
  v0[7] = (uint64_t)v5;
  objc_allocWithZone(v5);
  swift_bridgeObjectRetain();
  sub_18FCD58F4(v3, v4);
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc();
  v0[8] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = sub_18FDDD620;
  return NearbyPeerPaymentReceiverResponseMetadata.init(nonce:nearbyMetadata:appearanceData:)(v0[4], v0[5], v3, v4, v0[3]);
}

uint64_t sub_18FDDD620(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = v1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_18FDDD694()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(void **)(v0 + 80);
  sub_1903CFF14();
  swift_allocObject();
  sub_1903CFF08();
  *(_QWORD *)(v0 + 16) = v2;
  sub_18FCD5E34((unint64_t *)&unk_1EE1C0600, (uint64_t (*)(uint64_t))type metadata accessor for NearbyPeerPaymentReceiverResponseMetadata, (uint64_t)&protocol conformance descriptor for NearbyPeerPaymentReceiverResponseMetadata);
  v3 = sub_1903CFEFC();
  if (v1)
  {

    swift_release();
    return sub_1903D0CE8();
  }
  else
  {
    v6 = v3;
    v7 = v4;
    v8 = *(void **)(v0 + 72);
    swift_release();

    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v6, v7);
  }
}

uint64_t sub_18FDDD7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE1C0610 + dword_1EE1C0610);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_18FDDEF8C;
  return v7(a1, a2);
}

uint64_t sub_18FDDD95C(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t);

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v6 = a1;
  v7 = a3;
  v8 = sub_1903D01B4();
  v10 = v9;

  v3[4] = v8;
  v3[5] = v10;
  v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE1C0610 + dword_1EE1C0610);
  v11 = (_QWORD *)swift_task_alloc();
  v3[6] = v11;
  *v11 = v3;
  v11[1] = sub_18FDDDA00;
  return v13(v8, v10);
}

uint64_t sub_18FDDDA00(char a1)
{
  uint64_t *v1;
  unint64_t v3;
  uint64_t v4;
  void (**v5)(_QWORD, _QWORD);
  void *v6;
  uint64_t v8;

  v3 = *(_QWORD *)(*v1 + 40);
  v5 = *(void (***)(_QWORD, _QWORD))(*v1 + 24);
  v4 = *(_QWORD *)(*v1 + 32);
  v6 = *(void **)(*v1 + 16);
  v8 = *v1;
  swift_task_dealloc();
  sub_18FCD5938(v4, v3);

  v5[2](v5, a1 & 1);
  _Block_release(v5);
  return (*(uint64_t (**)(void))(v8 + 8))();
}

void sub_18FDDDA8C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  NSDecimalNumber *v16;
  NSString *v17;
  PKCurrencyAmount *v18;
  NSDecimalNumber *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *ApplePinned;
  void *v46;
  void *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;

  v2 = sub_1903D0610();
  v58 = *(_QWORD *)(v2 - 8);
  v59 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0618);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NearbyPeerPaymentSenderRequestMetadata();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v57 = (id)a1[1];
  sub_18FDDCAA4((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_18FD36250((uint64_t)v7, &qword_1EE1C0618);
    return;
  }
  v56 = v12;
  sub_18FDDE980((uint64_t)v7, (uint64_t)v11);
  v13 = *((_QWORD *)v11 + 5);
  v14 = *((_QWORD *)v11 + 6);
  swift_bridgeObjectRetain();
  v15 = sub_18FDDCD34();
  v16 = (NSDecimalNumber *)sub_1903D0A6C();
  v17 = (NSString *)sub_1903D05A4();
  v18 = PKCurrencyAmountMake(v16, v17);

  if (!v18)
  {
    __break(1u);
    return;
  }
  v19 = -[PKCurrencyAmount amount](v18, sel_amount);

  v20 = objc_msgSend(v15, sel_stringForObjectValue_, v19);
  if (!v20)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    sub_18FDDE9C4((uint64_t)v11);
    return;
  }
  sub_1903D05C8();

  v61 = v13;
  v62 = v14;
  swift_bridgeObjectRetain();
  sub_1903D067C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1903D067C();
  swift_bridgeObjectRelease();
  v21 = v61;
  v22 = v62;
  if (qword_1EE1BCF78 != -1)
    swift_once();
  v23 = sub_1903D0340();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EE1BF5F0);
  swift_bridgeObjectRetain_n();
  v55 = v24;
  v25 = sub_1903D0328();
  v26 = sub_1903D0940();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = v21;
    v29 = swift_slowAlloc();
    v61 = v29;
    *(_DWORD *)v27 = 136315138;
    swift_bridgeObjectRetain();
    v60 = sub_18FCD5144(v28, v22, &v61);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v25, v26, "NearbyPeerPayment: validating transaction string: %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v29, -1, -1);
    MEMORY[0x19400D804](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1903D05F8();
  v30 = sub_1903D05D4();
  v32 = v31;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v4, v59);
  if (v32 >> 60 == 15)
    goto LABEL_15;
  v33 = (void *)sub_1903D01A8();
  sub_18FD4D5D8(v30, v32);
  v34 = objc_msgSend(v33, sel_SHA256Hash);

  if (!v34)
    goto LABEL_15;
  v35 = sub_1903D01B4();
  v37 = v36;

  v38 = sub_1903D0190();
  if (v39 >> 60 == 15)
  {
    sub_18FDDE9C4((uint64_t)v11);
    sub_18FCD5938(v35, v37);
  }
  else
  {
    v40 = v38;
    v41 = v39;
    v42 = (void *)sub_1903D05A4();
    v43 = (void *)sub_1903D05A4();
    v44 = (void *)sub_1903D05A4();
    ApplePinned = (void *)SecPolicyCreateApplePinned();

    v46 = (void *)sub_1903D01A8();
    v47 = (void *)sub_1903D01A8();
    LODWORD(v59) = SecCMSVerify();

    v48 = sub_1903D0328();
    v49 = sub_1903D0940();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc();
      v58 = v37;
      v51 = (uint8_t *)v50;
      v52 = swift_slowAlloc();
      v61 = v52;
      v56 = v40;
      v57 = ApplePinned;
      *(_DWORD *)v51 = 136315138;
      LODWORD(v60) = v59;
      v53 = sub_1903D0EB0();
      v60 = sub_18FCD5144(v53, v54, &v61);
      sub_1903D0ACC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_18FC92000, v48, v49, "NearbyPeerPayment: receiver validation result: %s", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v52, -1, -1);
      MEMORY[0x19400D804](v51, -1, -1);
      sub_18FD4D5D8(v56, v41);
      sub_18FCD5938(v35, v58);

    }
    else
    {
      sub_18FD4D5D8(v40, v41);
      sub_18FCD5938(v35, v37);

    }
    sub_18FDDE9C4((uint64_t)v11);
  }
}

id NearbyPeerPaymentReceiverCoordinator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void NearbyPeerPaymentReceiverCoordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id NearbyPeerPaymentReceiverCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NearbyPeerPaymentReceiverCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18FDDE26C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_18FCDEBAC;
  return v6();
}

uint64_t sub_18FDDE2C0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_18FCDEBAC;
  return v7();
}

uint64_t sub_18FDDE314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1903D085C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1903D0850();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_18FD36250(a1, &qword_1EE1BF3B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1903D0814();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_18FDDE460(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_18FDDE4C4;
  return v6(a1);
}

uint64_t sub_18FDDE4C4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void _s11PassKitCore36NearbyPeerPaymentReceiverCoordinatorC06nearbyG10IsEligibleSbyFZ_0()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!v0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v1 = v0;
  v2 = objc_msgSend(v0, sel_account);

  if (v2)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v2, sel_associatedPassUniqueID);
      v6 = objc_msgSend(v4, sel_passWithUniqueID_, v5);

      if (v6)
      {
        v7 = objc_msgSend(v6, sel_paymentPass);

        PKPeerPaymentIsEligibleForDeviceTapPayment(v2, v7);
        return;
      }
      goto LABEL_9;
    }
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

id sub_18FDDE634(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v5;
  char *v6;
  id result;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t *v11;
  objc_super v12;

  v5 = (void *)objc_opt_self();
  v6 = v2;
  result = objc_msgSend(v5, sel_sharedInstance);
  if (result)
  {
    v8 = result;
    v9 = OBJC_IVAR____PKNearbyPeerPaymentReceiverCoordinator_peerPaymentAccount;
    v10 = objc_msgSend(result, sel_account);

    *(_QWORD *)&v6[v9] = v10;
    *(_QWORD *)&v6[OBJC_IVAR____PKNearbyPeerPaymentReceiverCoordinator____lazy_storage___amountFormatter] = 0;
    v11 = (uint64_t *)&v6[OBJC_IVAR____PKNearbyPeerPaymentReceiverCoordinator_senderMetadata];
    *v11 = a1;
    v11[1] = a2;
    sub_18FCD58F4(a1, a2);

    v12.receiver = v6;
    v12.super_class = (Class)type metadata accessor for NearbyPeerPaymentReceiverCoordinator();
    return objc_msgSendSuper2(&v12, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_18FDDE714(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_18FDDE724(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch();
}

uint64_t sub_18FDDE73C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  sub_1903CFECC();
  swift_allocObject();
  sub_1903CFEC0();
  sub_18FCD5F30();
  sub_1903CFEB4();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRelease();
  sub_18FCD5938(v1, v2);
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_18FDDE980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NearbyPeerPaymentSenderRequestMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FDDE9C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NearbyPeerPaymentSenderRequestMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for NearbyPeerPaymentReceiverCoordinator()
{
  return objc_opt_self();
}

uint64_t method lookup function for NearbyPeerPaymentReceiverCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NearbyPeerPaymentReceiverCoordinator.__allocating_init(senderMetadata:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of NearbyPeerPaymentReceiverCoordinator.nearbyReceiverRequiresConfirmation(contactID:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x88);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_18FDDEAB4;
  return v9(a1, a2);
}

uint64_t sub_18FDDEAB4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of NearbyPeerPaymentReceiverCoordinator.recipientMetadata(appearanceData:nonce:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v8 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x90);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_18FDDEB90;
  return v11(a1, a2, a3);
}

uint64_t sub_18FDDEB90(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t dispatch thunk of NearbyPeerPaymentReceiverCoordinator.recipientMetadataThrowing(appearanceData:nonce:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v8 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x98);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_18FCD5B38;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of NearbyPeerPaymentReceiverCoordinator.validateTransaction(result:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0xA0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_18FDDEF8C;
  return v9(a1, a2);
}

uint64_t dispatch thunk of NearbyPeerPaymentReceiverCoordinator.decodeAndValidatePerformResponse(with:nonce:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t sub_18FDDED14()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_18FCDEBAC;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_1EE1C0640 + dword_1EE1C0640))(v2, v3, v4);
}

uint64_t sub_18FDDED88()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FDDEDAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_18FCDE964;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE1C0660 + dword_1EE1C0660))(a1, v4);
}

uint64_t sub_18FDDEE1C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_18FDDEE58()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_18FCDEBAC;
  return ((uint64_t (*)(void *, int, void *, void *))((char *)&dword_1EE1C0670 + dword_1EE1C0670))(v2, v3, v5, v4);
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_18FDDEF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_18FCDE964;
  return ((uint64_t (*)(int, void *))((char *)&dword_1EE1C0690 + dword_1EE1C0690))(v2, v3);
}

uint64_t sub_18FDDEF84(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_18FDDEFD8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____PKRemoteNetworkPaymentCoordinator_wrapper;
  swift_beginAccess();
  return MEMORY[0x19400D8B8](v1);
}

void sub_18FDDF070(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

void (*sub_18FDDF0C4(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____PKRemoteNetworkPaymentCoordinator_wrapper;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x19400D8B8](v5);
  return sub_18FDDF134;
}

void sub_18FDDF134(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

id RemoteNetworkPaymentCoordinator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id RemoteNetworkPaymentCoordinator.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____PKRemoteNetworkPaymentCoordinator_paymentSession] = 0;
  swift_unknownObjectWeakInit();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RemoteNetworkPaymentCoordinator();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for RemoteNetworkPaymentCoordinator()
{
  return objc_opt_self();
}

void sub_18FDDF288(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint8_t *v44;
  uint8_t *v45;
  uint64_t v46;
  os_log_type_t v47;
  uint8_t *v48;
  id *v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint8_t *v60;
  uint8_t *v61;
  id v62;
  void *v63;
  void (*v64)(char *, char *, uint64_t);
  void (*v65)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v66)(char *, uint64_t, uint64_t);
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  const char *v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  void (*v100)(char *, unint64_t, uint64_t);
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  id v112;
  void *v113;
  id v114;
  char *v115;
  id v116;
  void *v117;
  id v118;
  id v119;
  id v120;
  id v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  void *v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int v137;
  id v138;
  void *v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  NSObject *v143;
  os_log_type_t v144;
  uint8_t *v145;
  uint64_t v146;
  __int128 v147;
  _QWORD *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  id v152;
  id v153;
  char *v154;
  void *v155;
  char *v156;
  void (*v157)(char *, uint64_t);
  uint64_t v158;
  void (*v159)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v160;
  id v161;
  uint64_t v162;
  id v163;
  id v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  id v183;
  os_log_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188[7];
  _OWORD v189[3];
  uint64_t v190;
  __int128 v191;
  _OWORD v192[2];
  uint64_t v193;
  __int16 v194;
  __int16 v195;
  uint64_t v196;

  v3 = v2;
  v183 = a1;
  v178 = sub_1903CFF74();
  v177 = *(_QWORD *)(v178 - 8);
  MEMORY[0x1E0C80A78](v178);
  v176 = (char *)&v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C06C8);
  MEMORY[0x1E0C80A78](v6);
  v172 = (char *)&v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_1903CFF2C();
  v174 = *(_QWORD *)(v175 - 8);
  MEMORY[0x1E0C80A78](v175);
  v173 = (char *)&v158 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C06D0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_1903CFFB0();
  v180 = *(_QWORD *)(v181 - 8);
  MEMORY[0x1E0C80A78](v181);
  v179 = (char *)&v158 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BEFE0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v170 = (char *)&v158 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v169 = (uint64_t)&v158 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v165 = (char *)&v158 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v166 = (uint64_t)&v158 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v168 = (char *)&v158 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v171 = (uint64_t)&v158 - v25;
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v158 - v26;
  v28 = sub_1903D0178();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = MEMORY[0x1E0C80A78](v28);
  v167 = (char *)&v158 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v158 - v33;
  MEMORY[0x1E0C80A78](v32);
  v182 = (char *)&v158 - v35;
  if (qword_1EE1BCF98 != -1)
    swift_once();
  v36 = sub_1903D0340();
  v184 = (os_log_t)__swift_project_value_buffer(v36, (uint64_t)qword_1EE1BF650);
  v37 = sub_1903D0328();
  v38 = sub_1903D091C();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = v34;
    v40 = v3;
    v41 = v29;
    v42 = v28;
    v43 = a2;
    v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v44 = 0;
    _os_log_impl(&dword_18FC92000, v37, v38, "Coordinator: Handling NSUserActivity", v44, 2u);
    v45 = v44;
    a2 = v43;
    v28 = v42;
    v29 = v41;
    v3 = v40;
    v34 = v39;
    MEMORY[0x19400D804](v45, -1, -1);
  }

  v46 = OBJC_IVAR____PKRemoteNetworkPaymentCoordinator_paymentSession;
  if (*(_QWORD *)(v3 + OBJC_IVAR____PKRemoteNetworkPaymentCoordinator_paymentSession))
  {
    v184 = (os_log_t)sub_1903D0328();
    v47 = sub_1903D0934();
    if (os_log_type_enabled(v184, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_18FC92000, v184, v47, "Coordinator: Already handling remote payment request, skipping", v48, 2u);
      MEMORY[0x19400D804](v48, -1, -1);
    }
    v49 = (id *)&v196;
    goto LABEL_9;
  }
  if ((PKIsPhone() & 1) == 0 && !PKIsPad())
  {
    sub_18FDE12D0(0xD00000000000001FLL, 0x800000019045C110, (uint64_t)a2);
    return;
  }
  v162 = v3;
  v50 = (void *)objc_opt_self();
  v51 = objc_msgSend(v50, sel_sharedService);
  if (!v51)
  {
    __break(1u);
    goto LABEL_100;
  }
  v52 = v51;
  v53 = objc_msgSend((id)objc_opt_self(), sel_remoteNetworkPaymentFeatureWithWebService_, v51);

  if (v53)
  {
    v164 = v53;
    if ((objc_msgSend(v164, sel_enabled) & 1) == 0)
    {
      sub_18FDE1104(0xD000000000000027, 0x800000019045C2D0, (uint64_t)a2);

      v49 = (id *)v189 + 1;
LABEL_9:

      return;
    }

  }
  v164 = v50;
  if (PKRemoteNetworkPaymentDisableEntitlementCheck())
  {
    v54 = sub_1903D0328();
    v55 = sub_1903D091C();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      v161 = v53;
      v57 = v29;
      v58 = v28;
      v59 = a2;
      v60 = v56;
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_18FC92000, v54, v55, "Coordinator: Bypassing payment user activity entitlement check", v56, 2u);
      v61 = v60;
      a2 = v59;
      v28 = v58;
      v29 = v57;
      v53 = v161;
      MEMORY[0x19400D804](v61, -1, -1);
    }

  }
  else if ((objc_msgSend(a2, sel_hasEntitlement_, CFSTR("com.apple.private.payment.remote-network-payment-initiate")) & 1) == 0)
  {
    *(_QWORD *)&v191 = 0;
    *((_QWORD *)&v191 + 1) = 0xE000000000000000;
    sub_1903D0BF8();
    sub_1903D067C();
    sub_1903D05C8();
    sub_1903D067C();
    swift_bridgeObjectRelease();
    sub_18FDE12D0(v191, *((unint64_t *)&v191 + 1), (uint64_t)a2);

    swift_bridgeObjectRelease();
    return;
  }
  v163 = a2;
  v62 = objc_msgSend(v183, sel_webpageURL);
  if (!v62)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v27, 1, 1, v28);
    goto LABEL_29;
  }
  v63 = v62;
  sub_1903D0160();

  v64 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  v64(v27, v34, v28);
  v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
  v65((uint64_t)v27, 0, 1, v28);
  v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v66(v27, 1, v28) == 1)
  {
LABEL_29:
    v72 = (uint64_t *)&unk_1EE1BEFE0;
    v73 = (uint64_t)v27;
LABEL_30:
    sub_18FD36250(v73, v72);
LABEL_31:
    sub_18FDE1B4C(0xD00000000000002BLL, 0x800000019045C170, (uint64_t)v163);

    return;
  }
  v159 = v65;
  v160 = v28;
  v64(v182, v27, v28);
  v67 = objc_msgSend(v183, sel_activityType);
  v68 = sub_1903D05C8();
  v70 = v69;

  if (v68 == sub_1903D05C8() && v70 == v71)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v74 = sub_1903D0ED4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v74 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v182, v160);
      goto LABEL_31;
    }
  }
  v183 = (id)v29;
  v75 = v182;
  sub_1903CFF8C();
  v76 = v180;
  v77 = v181;
  v78 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v180 + 48))(v11, 1, v181);
  v79 = v160;
  if (v78 == 1)
  {
    (*((void (**)(char *, uint64_t))v183 + 1))(v75, v160);
    v72 = &qword_1EE1C06D0;
    v73 = (uint64_t)v11;
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v179, v11, v77);
  v80 = sub_1903CFF98();
  v82 = v81;
  v83 = sub_1903D05C8();
  if (!v82)
  {
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  if (v80 != v83 || v82 != v84)
  {
    v85 = sub_1903D0ED4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v85 & 1) != 0)
      goto LABEL_43;
LABEL_46:
    *(_QWORD *)&v191 = 0;
    *((_QWORD *)&v191 + 1) = 0xE000000000000000;
    sub_1903D0BF8();
    swift_bridgeObjectRelease();
    v93 = 0xD000000000000027;
    v94 = "Coordinator: URL host is not expected: ";
LABEL_76:
    *(_QWORD *)&v191 = v93;
    *((_QWORD *)&v191 + 1) = (unint64_t)(v94 - 32) | 0x8000000000000000;
    sub_18FCD5E34((unint64_t *)&qword_1EE1BF978, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v123 = v182;
    sub_1903D0EB0();
    sub_1903D067C();
    swift_bridgeObjectRelease();
    sub_18FDE1B4C(v191, *((unint64_t *)&v191 + 1), (uint64_t)v163);

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v180 + 8))(v179, v181);
    (*((void (**)(char *, uint64_t))v183 + 1))(v123, v79);
    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_43:
  v158 = v46;
  *(_QWORD *)&v191 = sub_1903CFFA4();
  *((_QWORD *)&v191 + 1) = v86;
  v87 = v173;
  sub_1903CFF20();
  sub_18FDBF3C8();
  v88 = sub_1903D0AE4();
  v90 = v89;
  (*(void (**)(char *, uint64_t))(v174 + 8))(v87, v175);
  swift_bridgeObjectRelease();
  if (v88 == sub_1903D05C8() && v90 == v91)
  {
    swift_bridgeObjectRelease_n();
    v92 = v178;
    goto LABEL_48;
  }
  v95 = sub_1903D0ED4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v92 = v178;
  if ((v95 & 1) == 0)
  {
    *(_QWORD *)&v191 = 0;
    *((_QWORD *)&v191 + 1) = 0xE000000000000000;
    sub_1903D0BF8();
    swift_bridgeObjectRelease();
    v93 = 0xD000000000000027;
    v94 = "Coordinator: URL path is not expected: ";
    goto LABEL_76;
  }
LABEL_48:
  v175 = (uint64_t)v34;
  v96 = sub_1903CFF80();
  if (!v96)
  {
LABEL_75:
    *(_QWORD *)&v191 = 0;
    *((_QWORD *)&v191 + 1) = 0xE000000000000000;
    sub_1903D0BF8();
    swift_bridgeObjectRelease();
    v93 = 0xD000000000000024;
    v94 = "Coordinator: No token found in URL: ";
    goto LABEL_76;
  }
  v161 = v53;
  v97 = *(_QWORD *)(v96 + 16);
  if (v97)
  {
    v98 = v96 + ((*(unsigned __int8 *)(v177 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80));
    v99 = *(_QWORD *)(v177 + 72);
    v100 = *(void (**)(char *, unint64_t, uint64_t))(v177 + 16);
    swift_bridgeObjectRetain();
    v101 = v176;
    v102 = v177;
    while (1)
    {
      v100(v101, v98, v92);
      if (sub_1903CFF5C() == 116 && v103 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        v53 = v161;
        goto LABEL_61;
      }
      v104 = sub_1903D0ED4();
      swift_bridgeObjectRelease();
      if ((v104 & 1) != 0)
        break;
      v101 = v176;
      v92 = v178;
      (*(void (**)(char *, uint64_t))(v102 + 8))(v176, v178);
      v98 += v99;
      if (!--v97)
      {
        swift_bridgeObjectRelease();
        v105 = 1;
        v79 = v160;
        v53 = v161;
        goto LABEL_58;
      }
    }
    v53 = v161;
    v92 = v178;
LABEL_61:
    v102 = v177;
    swift_bridgeObjectRelease();
    v106 = (uint64_t)v172;
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v172, v176, v92);
    v105 = 0;
    v79 = v160;
  }
  else
  {
    v105 = 1;
    v53 = v161;
    v102 = v177;
LABEL_58:
    v106 = (uint64_t)v172;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56))(v106, v105, 1, v92);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v106, 1, v92) == 1)
  {
    sub_18FD36250(v106, &qword_1EE1C06C8);
    goto LABEL_75;
  }
  v107 = sub_1903CFF68();
  v108 = v106;
  v110 = v109;
  (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v108, v92);
  if (!v110)
    goto LABEL_75;
  sub_18FDE149C(v107, v110, v188);
  v111 = v188[6];
  sub_18FCD6068((uint64_t)v188, (uint64_t)v189, &qword_1EE1C06D8);
  if (!*((_QWORD *)&v189[0] + 1))
  {
    *(_QWORD *)&v191 = 0;
    *((_QWORD *)&v191 + 1) = 0xE000000000000000;
    sub_1903D0BF8();
    sub_1903D067C();
    sub_1903D067C();
    swift_bridgeObjectRelease();
    sub_18FDE1B4C(v191, *((unint64_t *)&v191 + 1), (uint64_t)v163);
LABEL_79:

    swift_bridgeObjectRelease();
LABEL_96:
    (*(void (**)(char *, uint64_t))(v180 + 8))(v179, v181);
    (*((void (**)(char *, uint64_t))v183 + 1))(v182, v79);
    return;
  }
  v191 = v189[0];
  v192[0] = v189[1];
  v192[1] = v189[2];
  v193 = v190;
  swift_bridgeObjectRelease();
  sub_18FDE1D18(v192, &v194);
  sub_18FDE1D18(&v194, &v195);
  if ((v195 & 0x100) != 0 || (_BYTE)v195)
  {
    v186 = 0;
    v187 = 0xE000000000000000;
    sub_1903D0BF8();
    swift_bridgeObjectRelease();
    v186 = 0xD00000000000002CLL;
    v187 = 0x800000019045C270;
    swift_bridgeObjectRetain();
    sub_1903D067C();
    sub_18FDE1D54(v188);
    swift_bridgeObjectRelease();
    sub_18FDE1980(v186, v187, (uint64_t)v163);
    goto LABEL_79;
  }
  v177 = v111;
  v112 = objc_msgSend(v164, sel_sharedService);
  if (!v112)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  v113 = v112;
  v114 = objc_msgSend(v112, sel_context);

  v115 = v168;
  if (!v114)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  LODWORD(v178) = objc_msgSend(v114, sel_devSigned);

  v159(v171, 1, 1, v79);
  v116 = objc_msgSend(v164, sel_sharedService);
  if (!v116)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  v117 = v116;
  v118 = objc_msgSend(v116, sel_context);

  if (!v118)
  {
LABEL_103:
    __break(1u);
    return;
  }
  v119 = objc_msgSend(v118, sel_configuration);

  if (v119)
  {
    v120 = PKCurrentRegion();
    v121 = objc_msgSend(v119, sel_paymentRelayServiceURLForRegion_, v120);

    if (v121)
    {
      sub_1903D0160();

      v122 = 0;
    }
    else
    {
      v122 = 1;
    }
    v124 = (uint64_t)v115;
    v125 = v171;
    sub_18FD36250(v171, (uint64_t *)&unk_1EE1BEFE0);
    v126 = v122;
    v127 = v160;
    v159(v124, v126, 1, v160);
    v79 = v127;
    sub_18FCD6068(v124, v125, (uint64_t *)&unk_1EE1BEFE0);
    v128 = v125;
    v129 = v166;
    sub_18FD7CAEC(v128, v166);
    if (v66((char *)v129, 1, v127) == 1)
    {
      sub_18FD36250(v129, (uint64_t *)&unk_1EE1BEFE0);
      v130 = (void *)sub_1903D05A4();
      v131 = v119;
      v132 = objc_msgSend(v119, sel_paymentRelayServiceURLForRegion_, v130);

      if (v132)
      {
        v133 = (uint64_t)v165;
        sub_1903D0160();

        v134 = 0;
      }
      else
      {
        v134 = 1;
        v133 = (uint64_t)v165;
      }

      v135 = v171;
      sub_18FD36250(v171, (uint64_t *)&unk_1EE1BEFE0);
      v79 = v160;
      v159(v133, v134, 1, v160);
      sub_18FCD6068(v133, v135, (uint64_t *)&unk_1EE1BEFE0);
    }
    else
    {

      sub_18FD36250(v129, (uint64_t *)&unk_1EE1BEFE0);
    }
  }
  v136 = v169;
  sub_18FD7CAEC(v171, v169);
  v137 = v66((char *)v136, 1, v79);
  v138 = v161;
  if (v137 == 1)
  {
    v139 = 0;
  }
  else
  {
    v139 = (void *)sub_1903D0148();
    (*((void (**)(uint64_t, uint64_t))v183 + 1))(v136, v79);
  }
  v140 = v175;
  v141 = PKRemoteNetworkPaymentWebsocketURL(v178, v139);

  if (!v141)
  {
    v142 = (uint64_t)v170;
    v159((uint64_t)v170, 1, 1, v79);
    goto LABEL_95;
  }
  sub_1903D0160();

  v142 = (uint64_t)v170;
  v64(v170, (char *)v140, v79);
  v159(v142, 0, 1, v79);
  if (v66((char *)v142, 1, v79) == 1)
  {
LABEL_95:
    sub_18FDE1D54(v188);
    sub_18FD36250(v142, (uint64_t *)&unk_1EE1BEFE0);
    sub_18FDE1104(0xD000000000000028, 0x800000019045C2A0, (uint64_t)v163);

    sub_18FD36250(v171, (uint64_t *)&unk_1EE1BEFE0);
    goto LABEL_96;
  }
  v64(v167, (char *)v142, v79);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v143 = sub_1903D0328();
  v144 = sub_1903D0940();
  if (os_log_type_enabled(v143, v144))
  {
    v145 = (uint8_t *)swift_slowAlloc();
    v146 = swift_slowAlloc();
    v186 = v146;
    *(_DWORD *)v145 = 136315138;
    v147 = v191;
    swift_bridgeObjectRetain();
    v185 = sub_18FCD5144(v147, *((unint64_t *)&v147 + 1), &v186);
    sub_1903D0ACC();
    swift_bridgeObjectRelease();
    sub_18FDE1D54(v188);
    _os_log_impl(&dword_18FC92000, v143, v144, "Coordinator: Payment user activity handled, remote identifier: %s", v145, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v146, -1, -1);
    MEMORY[0x19400D804](v145, -1, -1);
  }
  else
  {
    sub_18FDE1D54(v188);
  }

  v148 = v183;
  v149 = (char *)v175;
  v150 = v167;
  v151 = v160;
  (*((void (**)(uint64_t, char *, uint64_t))v183 + 2))(v175, v167, v160);
  v152 = objc_allocWithZone((Class)type metadata accessor for RemoteNetworkPaymentSession());
  v153 = v163;
  v154 = sub_18FDA2E50((uint64_t)&v191, v149, v153);

  v155 = *(void **)(v162 + v158);
  *(_QWORD *)(v162 + v158) = v154;
  v156 = v154;

  *(_QWORD *)&v156[OBJC_IVAR____TtC11PassKitCore27RemoteNetworkPaymentSession_delegate + 8] = &off_1E2AA9718;
  swift_unknownObjectWeakAssign();
  sub_18FD9C8A4();

  v157 = (void (*)(char *, uint64_t))v148[1];
  v157(v150, v151);
  sub_18FD36250(v171, (uint64_t *)&unk_1EE1BEFE0);
  (*(void (**)(char *, uint64_t))(v180 + 8))(v179, v181);
  v157(v182, v151);
}

void sub_18FDE098C(char a1, void *a2, uint64_t a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  _QWORD aBlock[6];

  v34 = a3;
  v7 = sub_1903D03B8();
  v37 = *(NSObject **)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1903D03D0();
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1903D03E8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v32 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v32 - v21;
  if ((a1 & 1) != 0)
  {
    sub_18FCDE8A0();
    v33 = sub_1903D097C();
    sub_1903D03DC();
    MEMORY[0x19400A9D8](v17, a4);
    v23 = *(void (**)(char *, uint64_t))(v14 + 8);
    v23(v17, v13);
    MEMORY[0x19400A9D8](v20, 0.01);
    v23(v20, v13);
    v24 = swift_allocObject();
    v25 = v34;
    *(_QWORD *)(v24 + 16) = a2;
    *(_QWORD *)(v24 + 24) = v25;
    aBlock[4] = sub_18FDE1F70;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FDF4F30;
    aBlock[3] = &block_descriptor_6;
    v26 = _Block_copy(aBlock);
    v27 = a2;
    swift_release();
    sub_1903D03C4();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_18FCD5E34((unint64_t *)&qword_1EE1C0730, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
    sub_18FCDC4DC();
    sub_1903D0B38();
    v28 = (void *)v33;
    MEMORY[0x19400AF54](v22, v12, v9, v26);
    _Block_release(v26);

    ((void (*)(char *, uint64_t))v37[1].isa)(v9, v7);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
    v23(v22, v13);
  }
  else
  {
    if (qword_1EE1BCF98 != -1)
      swift_once();
    v29 = sub_1903D0340();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EE1BF650);
    v37 = sub_1903D0328();
    v30 = sub_1903D0934();
    if (os_log_type_enabled(v37, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_18FC92000, v37, v30, "Coordinator: presentErrorMessage: Authorization coordinator failed to present", v31, 2u);
      MEMORY[0x19400D804](v31, -1, -1);
    }

  }
}

id RemoteNetworkPaymentCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RemoteNetworkPaymentCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_18FDE0DF0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  void *v9;

  v2 = v1;
  if (qword_1EE1BCF98 != -1)
    swift_once();
  v4 = sub_1903D0340();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EE1BF650);
  v5 = sub_1903D0328();
  v6 = sub_1903D091C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 67109120;
    sub_1903D0ACC();
    _os_log_impl(&dword_18FC92000, v5, v6, "Coordinator: Presented payment sheet? %{BOOL}d", v7, 8u);
    MEMORY[0x19400D804](v7, -1, -1);
  }

  v8 = v2 + OBJC_IVAR____PKRemoteNetworkPaymentCoordinator_wrapper;
  swift_beginAccess();
  v9 = (void *)MEMORY[0x19400D8B8](v8);
  objc_msgSend(v9, sel_handleRemoteNetworkPaymentCoordinatorDidPresentPaymentSheet_, a1 & 1);

}

void sub_18FDE0F40(uint64_t a1, uint64_t a2, double a3)
{
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *oslog;
  _QWORD aBlock[6];

  v6 = objc_msgSend(objc_allocWithZone((Class)PKPaymentAuthorizationCoordinator), sel_initWithRemotePaymentRequestPromised);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, sel_setRemoteNetworkPaymentInvokingProcess_, a2);
    v8 = swift_allocObject();
    *(double *)(v8 + 16) = a3;
    *(_QWORD *)(v8 + 24) = v7;
    *(_QWORD *)(v8 + 32) = a1;
    aBlock[4] = sub_18FDE1F28;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FDA4ED8;
    aBlock[3] = &block_descriptor_27;
    v9 = _Block_copy(aBlock);
    v10 = v7;
    swift_release();
    objc_msgSend(v10, sel_presentWithCompletion_, v9);
    _Block_release(v9);

  }
  else
  {
    if (qword_1EE1BCF98 != -1)
      swift_once();
    v11 = sub_1903D0340();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EE1BF650);
    oslog = sub_1903D0328();
    v12 = sub_1903D0934();
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_18FC92000, oslog, v12, "Coordinator: presentErrorMessage: Unable to create authorization coordinator", v13, 2u);
      MEMORY[0x19400D804](v13, -1, -1);
    }

  }
}

void sub_18FDE1104(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (qword_1EE1BCF98 != -1)
    swift_once();
  v6 = sub_1903D0340();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EE1BF650);
  swift_bridgeObjectRetain_n();
  v7 = sub_1903D0328();
  v8 = sub_1903D0934();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a1, a2, &v12);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v7, v8, "Coordinator: presentUnavailableError: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v10, -1, -1);
    MEMORY[0x19400D804](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  v11 = sub_18FDBF4DC(a1, a2, 8u);
  sub_18FDE0F40(v11, a3, 0.0);
}

void sub_18FDE12D0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (qword_1EE1BCF98 != -1)
    swift_once();
  v6 = sub_1903D0340();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EE1BF650);
  swift_bridgeObjectRetain_n();
  v7 = sub_1903D0328();
  v8 = sub_1903D0934();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a1, a2, &v12);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v7, v8, "Coordinator: presentUnsupportedError: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v10, -1, -1);
    MEMORY[0x19400D804](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  v11 = sub_18FDBF4DC(a1, a2, 7u);
  sub_18FDE0F40(v11, a3, 0.0);
}

uint64_t sub_18FDE149C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[2];
  unsigned __int8 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_bridgeObjectRetain();
  result = sub_18FD870B8(a1, a2, v14);
  v7 = v14[1];
  v8 = v17;
  v9 = v18;
  v10 = v19;
  v11 = v20;
  v12 = 256;
  if (!v16)
    v12 = 0;
  v13 = v12 | v15;
  *a3 = v14[0];
  a3[1] = v7;
  a3[2] = v13;
  a3[3] = v8;
  a3[4] = v9;
  a3[5] = v10;
  a3[6] = v11;
  return result;
}

void sub_18FDE1980(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (qword_1EE1BCF98 != -1)
    swift_once();
  v6 = sub_1903D0340();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EE1BF650);
  swift_bridgeObjectRetain_n();
  v7 = sub_1903D0328();
  v8 = sub_1903D0934();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a1, a2, &v12);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v7, v8, "Coordinator: presentNewerOSRequiredError: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v10, -1, -1);
    MEMORY[0x19400D804](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  v11 = sub_18FDBF4DC(a1, a2, 4u);
  sub_18FDE0F40(v11, a3, 0.0);
}

void sub_18FDE1B4C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (qword_1EE1BCF98 != -1)
    swift_once();
  v6 = sub_1903D0340();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EE1BF650);
  swift_bridgeObjectRetain_n();
  v7 = sub_1903D0328();
  v8 = sub_1903D0934();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a1, a2, &v12);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v7, v8, "Coordinator: presentInvalidTokenError: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v10, -1, -1);
    MEMORY[0x19400D804](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  v11 = sub_18FDBF4DC(a1, a2, 9u);
  sub_18FDE0F40(v11, a3, 0.0);
}

_WORD *sub_18FDE1D18(_WORD *a1, _WORD *a2)
{
  __swift_memcpy2_1(a2, a1);
  return a2;
}

uint64_t *sub_18FDE1D54(uint64_t *a1)
{
  sub_18FDE1D88(*a1, a1[1]);
  return a1;
}

uint64_t sub_18FDE1D88(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_18FDE1DC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + OBJC_IVAR____PKRemoteNetworkPaymentCoordinator_wrapper;
  swift_beginAccess();
  result = MEMORY[0x19400D8B8](v3);
  *a2 = result;
  return result;
}

uint64_t sub_18FDE1E18()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for RemoteNetworkPaymentCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemoteNetworkPaymentCoordinator.wrapper.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of RemoteNetworkPaymentCoordinator.wrapper.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of RemoteNetworkPaymentCoordinator.wrapper.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of RemoteNetworkPaymentCoordinator.handlePaymentUserActivity(_:originProcess:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of RemoteNetworkPaymentCoordinator.presentErrorMessage(failure:originProcess:delay:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t sub_18FDE1F04()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_18FDE1F28(char a1)
{
  uint64_t v1;

  sub_18FDE098C(a1, *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(double *)(v1 + 16));
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t sub_18FDE1F4C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_18FDE1F70()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_rejectRemotePaymentRequestPromiseWithFailure_, *(_QWORD *)(v0 + 24));
}

uint64_t ProvisioningCarKeyStepLegacyURLRedemption.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_QWORD *)(v3 + 96) = 0;
  *(_QWORD *)(v3 + 16) = a1;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 40) = v4;
  *(_BYTE *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = a3;
  return v3;
}

uint64_t ProvisioningCarKeyStepLegacyURLRedemption.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  sub_18FD4A1C4(*(_QWORD *)(v0 + 64));
  swift_unknownObjectRelease();

  return v0;
}

uint64_t ProvisioningCarKeyStepLegacyURLRedemption.__deallocating_deinit()
{
  ProvisioningCarKeyStepLegacyURLRedemption.deinit();
  return swift_deallocClassInstance();
}

void sub_18FDE2034(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;

  _s11PassKitCore41ProvisioningCarKeyStepLegacyURLRedemptionC7context10credential11sharedStateAcA0D7ContextC_AA0D24CredentialsConfigurationC10CredentialOSo015PKSecureElementdM0CtcfC_0(a1, a2, a3);
  *a4 = v5;
}

void sub_18FDE2058(void *a1, id a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, void *a7, void *a8)
{
  uint64_t v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  _QWORD *v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  uint64_t aBlock[9];

  if (a1)
  {
    v12 = qword_1EE1BCFE8;
    v13 = a1;
    if (v12 != -1)
      swift_once();
    v14 = sub_1903D0340();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain_n();
    v15 = sub_1903D0328();
    v16 = sub_1903D0934();
    if (os_log_type_enabled(v15, v16))
    {
      v35 = a7;
      v17 = (uint8_t *)swift_slowAlloc();
      v36 = v13;
      v18 = swift_slowAlloc();
      aBlock[0] = v18;
      *(_DWORD *)v17 = 136315138;
      swift_bridgeObjectRetain();
      aBlock[6] = sub_18FCD5144(a4, a5, aBlock);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FC92000, v15, v16, "[%s] Fetched invitation from url", v17, 0xCu);
      swift_arrayDestroy();
      v19 = v18;
      v13 = v36;
      MEMORY[0x19400D804](v19, -1, -1);
      v20 = v17;
      a7 = v35;
      MEMORY[0x19400D804](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v24 = a8;
    v25 = a7;
    v26 = objc_msgSend(v25, sel_targetDevice);
    if (v26)
    {
      v27 = v26;

      if ((objc_msgSend(v27, sel_respondsToSelector_, sel_acceptCarKeyShareForMessage_activationCode_completion_) & 1) != 0)
      {
        v28 = swift_allocObject();
        swift_beginAccess();
        swift_weakLoadStrong();
        swift_weakInit();
        v29 = v13;
        swift_release();
        v30 = (_QWORD *)swift_allocObject();
        v30[2] = v28;
        v30[3] = a4;
        v30[4] = a5;
        aBlock[4] = (uint64_t)sub_18FDE4C9C;
        aBlock[5] = (uint64_t)v30;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_18FDB0DD4;
        aBlock[3] = (uint64_t)&block_descriptor_29;
        v31 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_release();
        objc_msgSend(v27, sel_acceptCarKeyShareForMessage_activationCode_completion_, v29, 0, v31);
        _Block_release(v31);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (a2)
    {
      v22 = a2;
      v23 = (void *)sub_1903D0124();

    }
    else
    {
      v23 = 0;
    }
    v32 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v23, 5);

    v33 = (void *)sub_1903D05A4();
    objc_msgSend(v32, sel_addInternalDebugDescription_, v33);

    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v34 = v32;
      sub_18FDE24A8(v32, 1);
      swift_release();

    }
    else
    {

    }
  }
}

uint64_t sub_18FDE24A8(void *a1, char a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v4 = sub_1903D03B8();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v18 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1903D03D0();
  v8 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v11 = (void *)sub_1903D097C();
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = a1;
  *(_BYTE *)(v13 + 32) = a2;
  aBlock[4] = sub_18FDE4D00;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = &block_descriptor_12_0;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  swift_release();
  sub_1903D03C4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCD5E34((unint64_t *)&qword_1EE1C0730, v5, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
  sub_18FD4A258((unint64_t *)&qword_1EE1C0740, (uint64_t *)&unk_1EE1BD530);
  sub_1903D0B38();
  MEMORY[0x19400AF6C](0, v10, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v17);
}

void sub_18FDE26E4(void *a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  int v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  os_log_t v27;
  uint64_t v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  _QWORD v44[2];
  uint64_t v45;
  int v46;
  os_log_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50[5];

  v50[4] = *MEMORY[0x1E0C80C00];
  v9 = sub_1903D0340();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v14 = Strong;
    if (a1)
    {
      v15 = objc_msgSend(a1, sel_subcredential);
      if (v15)
      {
        v16 = v15;
        if (qword_1EE1BCFE8 != -1)
          swift_once();
        v17 = __swift_project_value_buffer(v9, (uint64_t)qword_1EE1BF740);
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v17, v9);
        swift_bridgeObjectRetain_n();
        v18 = v16;
        v19 = sub_1903D0328();
        v20 = sub_1903D0934();
        if (os_log_type_enabled(v19, (os_log_type_t)v20))
        {
          v46 = v20;
          v47 = v19;
          v48 = v16;
          v21 = swift_slowAlloc();
          v45 = swift_slowAlloc();
          v50[0] = v45;
          *(_DWORD *)v21 = 136315394;
          swift_bridgeObjectRetain();
          v49 = sub_18FCD5144(a4, a5, v50);
          v44[1] = v50;
          sub_1903D0ACC();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v21 + 12) = 2080;
          v22 = objc_msgSend(v18, sel_identifier);
          if (!v22)
          {

            __break(1u);
            return;
          }
          v23 = v22;
          v24 = sub_1903D05C8();
          v26 = v25;

          v49 = sub_18FCD5144(v24, v26, v50);
          sub_1903D0ACC();

          swift_bridgeObjectRelease();
          v27 = v47;
          _os_log_impl(&dword_18FC92000, v47, (os_log_type_t)v46, "[%s] Accepted invitation for subcredential: '%s'", (uint8_t *)v21, 0x16u);
          v28 = v45;
          swift_arrayDestroy();
          MEMORY[0x19400D804](v28, -1, -1);
          MEMORY[0x19400D804](v21, -1, -1);

          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
          v16 = v48;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        }
        v40 = *(void **)(v14 + 80);
        *(_QWORD *)(v14 + 80) = v16;
        v41 = v18;

        sub_18FDE2D10();
        goto LABEL_22;
      }
    }
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain();
    v29 = a2;
    swift_bridgeObjectRetain();
    v30 = a2;
    v31 = sub_1903D0328();
    v32 = sub_1903D0934();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = (_QWORD *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v50[0] = v35;
      *(_DWORD *)v33 = 136315394;
      swift_bridgeObjectRetain();
      v49 = sub_18FCD5144(a4, a5, v50);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2112;
      if (a2)
      {
        v36 = a2;
        v37 = _swift_stdlib_bridgeErrorToNSError();
        v49 = v37;
        sub_1903D0ACC();
      }
      else
      {
        v49 = 0;
        sub_1903D0ACC();
        v37 = 0;
      }
      *v34 = v37;

      _os_log_impl(&dword_18FC92000, v31, v32, "[%s] Failed to  accept invitation with error: '%@'", (uint8_t *)v33, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v34, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v35, -1, -1);
      MEMORY[0x19400D804](v33, -1, -1);

      if (!a2)
        goto LABEL_20;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      if (!a2)
      {
LABEL_20:
        v39 = 0;
        goto LABEL_21;
      }
    }
    v38 = a2;
    v39 = (void *)sub_1903D0124();

LABEL_21:
    v42 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v39, 5);

    v43 = (void *)sub_1903D05A4();
    objc_msgSend(v42, sel_addInternalDebugDescription_, v43);

    v41 = v42;
    sub_18FDE24A8(v42, 1);

LABEL_22:
    swift_release();
  }
}

void sub_18FDE2D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  char *v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD aBlock[7];

  v1 = sub_1903D03B8();
  v59 = *(_QWORD *)(v1 - 8);
  v60 = v1;
  MEMORY[0x1E0C80A78](v1);
  v56 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1903D03D0();
  v57 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  MEMORY[0x1E0C80A78](v3);
  v55 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1903D03AC();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v46 - v8;
  v10 = sub_1903D03E8();
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v46 - v14;
  v16 = sub_1903D0994();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938];
  v46 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend(*(id *)(v0 + 56), "sid");
  v21 = sub_1903D05C8();
  v49 = v22;
  v50 = v21;

  sub_18FCDC600(0, (unint64_t *)&unk_1EE1BEB30);
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v23 = (void *)sub_1903D097C();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCD5E34((unint64_t *)&unk_1EE1C0710, v17, MEMORY[0x1E0DEF948]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BEB40);
  sub_18FD4A258((unint64_t *)&unk_1EE1C0720, &qword_1EE1BEB40);
  sub_1903D0B38();
  v24 = sub_1903D09A0();

  (*(void (**)(char *, uint64_t))(v46 + 8))(v19, v16);
  ObjectType = swift_getObjectType();
  sub_1903D03DC();
  MEMORY[0x19400A9D8](v13, 90.0);
  v26 = v48;
  v27 = *(void (**)(char *, uint64_t))(v47 + 8);
  v27(v13, v48);
  sub_18FE20D60((uint64_t)v9);
  v28 = v52;
  sub_18FE20DA4(v52);
  MEMORY[0x19400AFC0](v15, v9, v28, ObjectType);
  v29 = *(void (**)(char *, uint64_t))(v53 + 8);
  v30 = v28;
  v31 = v54;
  v29(v30, v54);
  v29(v9, v31);
  v27(v15, v26);
  v32 = swift_allocObject();
  v33 = v51;
  swift_weakInit();
  v34 = (_QWORD *)swift_allocObject();
  v35 = v49;
  v34[2] = v50;
  v34[3] = v35;
  v34[4] = v32;
  aBlock[4] = sub_18FDE4CD4;
  aBlock[5] = v34;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = &block_descriptor_36_2;
  v36 = _Block_copy(aBlock);
  swift_retain();
  v37 = v55;
  sub_18FE20DEC();
  v38 = v56;
  sub_18FE20DF0();
  sub_1903D09B8();
  _Block_release(v36);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v60);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v58);
  swift_release();
  swift_release();
  *(_QWORD *)(v33 + 88) = v24;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  sub_1903D09D0();
  v39 = objc_msgSend(objc_allocWithZone((Class)PKPassLibrary), sel_init);
  v40 = *(void **)(v33 + 96);
  *(_QWORD *)(v33 + 96) = v39;

  v41 = (void *)objc_opt_self();
  v42 = objc_msgSend(v41, sel_defaultCenter);
  sub_1903D05C8();
  v43 = (void *)sub_1903D05A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_addObserver_selector_name_object_, v33, sel_passLibraryDidChangeWithNotification_, v43, 0);

  v44 = objc_msgSend(v41, sel_defaultCenter);
  sub_1903D05C8();
  v45 = (void *)sub_1903D05A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_addObserver_selector_name_object_, v33, sel_passLibraryDidChangeWithNotification_, v45, 0);
  swift_unknownObjectRelease();

}

uint64_t sub_18FDE328C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  _QWORD *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = (_QWORD *)result;
    if (*(_QWORD *)(result + 88))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1903D09C4();
      v6[11] = 0;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    v7 = (void *)v6[12];
    v6[12] = 0;

    v8 = (void *)objc_opt_self();
    v9 = objc_msgSend(v8, sel_defaultCenter);
    sub_1903D05C8();
    swift_retain();
    v10 = (void *)sub_1903D05A4();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_removeObserver_name_object_, v6, v10, 0);

    swift_release();
    v11 = objc_msgSend(v8, sel_defaultCenter);
    sub_1903D05C8();
    swift_retain();
    v12 = (void *)sub_1903D05A4();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_removeObserver_name_object_, v6, v12, 0);

    swift_release();
    v13 = (void (*)(uint64_t, uint64_t))v6[8];
    if (v13)
    {
      swift_retain();
      v13(a2, a3);
      sub_18FD4A1C4((uint64_t)v13);
      v14 = v6[8];
    }
    else
    {
      v14 = 0;
    }
    v6[8] = 0;
    v6[9] = 0;
    sub_18FD4A1C4(v14);
    return swift_release();
  }
  return result;
}

void sub_18FDE3490(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12[3];

  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v4 = sub_1903D0340();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain_n();
  v5 = sub_1903D0328();
  v6 = sub_1903D0934();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12[0] = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a1, a2, v12);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v5, v6, "[%s] ProvisioningCarKeyStepLegacyURLRedemption: Timed out waiting for activation", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v8, -1, -1);
    MEMORY[0x19400D804](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v9 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
  v10 = (void *)sub_1903D05A4();
  objc_msgSend(v9, sel_addInternalDebugDescription_, v10);

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v11 = v9;
    sub_18FDE24A8(v9, 1);
    swift_release();

  }
}

uint64_t sub_18FDE36E0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  __CFString *v12;
  unint64_t v13;
  char v14;
  uint64_t result;
  unint64_t v16;
  void *v17;
  char **v18;
  id v19;
  __int128 v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  BOOL v27;
  unint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  int64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t inited;
  id v90;
  unint64_t v91;
  id v92;
  unint64_t v93;
  unint64_t v94;
  id v95;
  void *v96;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  id v102;
  char *v103;
  char *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char isUniquelyReferenced_nonNull_native;
  id v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint8_t *v133;
  __int128 v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  int64_t v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t aBlock[6];
  const __CFString *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  __int128 v157;
  __int128 v158;
  unint64_t v159;

  v2 = v1;
  v4 = sub_1903D03B8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v139 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_1903D03D0();
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v136 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_userInfo);
  if (!v8)
  {
    v157 = 0u;
    v158 = 0u;
    return sub_18FCD92C8((uint64_t)&v157);
  }
  v9 = v8;
  v10 = MEMORY[0x1E0DEE9B8];
  v11 = sub_1903D04E4();

  v152 = CFSTR("PKPassLibraryAddedPassesUserInfo");
  type metadata accessor for PKPassLibraryNotificationKey(0);
  sub_18FCD5E34((unint64_t *)&unk_1EE1C0DD0, (uint64_t (*)(uint64_t))type metadata accessor for PKPassLibraryNotificationKey, (uint64_t)&unk_190435FBC);
  v12 = CFSTR("PKPassLibraryAddedPassesUserInfo");
  sub_1903D0BD4();
  if (*(_QWORD *)(v11 + 16) && (v13 = sub_18FD75D04((uint64_t)aBlock), (v14 & 1) != 0))
  {
    sub_18FCD6028(*(_QWORD *)(v11 + 56) + 32 * v13, (uint64_t)&v157);
  }
  else
  {
    v157 = 0u;
    v158 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_18FD784F8((uint64_t)aBlock);
  if (!*((_QWORD *)&v158 + 1))
    return sub_18FCD92C8((uint64_t)&v157);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1C06F0);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    return result;
  v16 = aBlock[0];
  v17 = *(void **)(v2 + 80);
  if (!v17)
    return swift_bridgeObjectRelease();
  v18 = &selRef_fieldPropertiesForFieldNotification_;
  v111 = v17;
  v19 = objc_msgSend(v111, sel_identifier);
  if (v19)
  {
    v21 = v19;
    v146 = sub_1903D05C8();
    v23 = v22;

    if (!(v16 >> 62))
      goto LABEL_11;
LABEL_104:
    swift_bridgeObjectRetain();
    v24 = sub_1903D0D00();
    swift_bridgeObjectRelease();
    if (v24)
      goto LABEL_12;
LABEL_105:

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v146 = 0;
  v23 = 0;
  if (v16 >> 62)
    goto LABEL_104;
LABEL_11:
  v24 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v24)
    goto LABEL_105;
LABEL_12:
  v25 = 0;
  v116 = v16 & 0xC000000000000001;
  v113 = v16 & 0xFFFFFFFFFFFFFF8;
  v112 = v16 + 32;
  v130 = aBlock;
  *(_QWORD *)&v20 = 136315138;
  v129 = v20;
  v128 = v10 + 8;
  v134 = xmmword_190436510;
  v132 = MEMORY[0x1E0DEE9B0] + 8;
  v115 = v16;
  v135 = v23;
  v114 = v24;
  v131 = v5;
  while (2)
  {
    if (v116)
    {
      v26 = (id)MEMORY[0x19400B200](v25, v16);
    }
    else
    {
      if (v25 >= *(_QWORD *)(v113 + 16))
        goto LABEL_109;
      v26 = *(id *)(v112 + 8 * v25);
    }
    v141 = v26;
    v27 = __OFADD__(v25, 1);
    v28 = v25 + 1;
    if (v27)
      goto LABEL_108;
    v29 = objc_msgSend(v141, sel_devicePaymentApplications);
    if (!v29)
      goto LABEL_111;
    v30 = v29;
    v31 = sub_18FCDC600(0, &qword_1EE1BEA18);
    sub_18FDE4754((unint64_t *)&qword_1EE1BEA20, &qword_1EE1BEA18);
    v32 = sub_1903D08A4();

    v118 = v28;
    v119 = v31;
    if ((v32 & 0xC000000000000001) != 0)
    {
      sub_1903D0B5C();
      sub_1903D08C8();
      v32 = (uint64_t)v152;
      v122 = v153;
      v33 = v154;
      v34 = v155;
      v35 = v156;
    }
    else
    {
      v34 = 0;
      v36 = -1 << *(_BYTE *)(v32 + 32);
      v37 = *(_QWORD *)(v32 + 56);
      v122 = v32 + 56;
      v33 = ~v36;
      v38 = -v36;
      if (v38 < 64)
        v39 = ~(-1 << v38);
      else
        v39 = -1;
      v35 = v39 & v37;
    }
    v120 = v32 & 0x7FFFFFFFFFFFFFFFLL;
    v117 = v33;
    v121 = (unint64_t)(v33 + 64) >> 6;
    v123 = v32;
LABEL_31:
    if (v32 < 0)
    {
      v41 = sub_1903D0BA4();
      if (!v41)
        goto LABEL_16;
      v150 = v41;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v42 = aBlock[0];
      swift_unknownObjectRelease();
      v43 = (id)v42;
      v127 = v34;
      v126 = v35;
      if (!v42)
        goto LABEL_16;
    }
    else
    {
      if (v35)
      {
        v126 = (v35 - 1) & v35;
        v40 = __clz(__rbit64(v35)) | (v34 << 6);
        v127 = v34;
      }
      else
      {
        v44 = v34 + 1;
        if (__OFADD__(v34, 1))
          goto LABEL_107;
        if (v44 >= v121)
          goto LABEL_16;
        v45 = *(_QWORD *)(v122 + 8 * v44);
        v46 = v34 + 1;
        if (!v45)
        {
          v46 = v34 + 2;
          if (v34 + 2 >= v121)
            goto LABEL_16;
          v45 = *(_QWORD *)(v122 + 8 * v46);
          if (!v45)
          {
            v46 = v34 + 3;
            if (v34 + 3 >= v121)
              goto LABEL_16;
            v45 = *(_QWORD *)(v122 + 8 * v46);
            if (!v45)
            {
              v46 = v34 + 4;
              if (v34 + 4 >= v121)
                goto LABEL_16;
              v45 = *(_QWORD *)(v122 + 8 * v46);
              if (!v45)
              {
                v47 = v34 + 5;
                while (v121 != v47)
                {
                  v45 = *(_QWORD *)(v122 + 8 * v47++);
                  if (v45)
                  {
                    v46 = v47 - 1;
                    v32 = v123;
                    goto LABEL_50;
                  }
                }
LABEL_16:
                sub_18FD486FC();

                v25 = v118;
                v16 = v115;
                if (v118 == v114)
                  goto LABEL_105;
                continue;
              }
            }
          }
        }
LABEL_50:
        v126 = (v45 - 1) & v45;
        v127 = v46;
        v40 = __clz(__rbit64(v45)) + (v46 << 6);
      }
      v43 = *(id *)(*(_QWORD *)(v32 + 48) + 8 * v40);
      if (!v43)
        goto LABEL_16;
    }
    break;
  }
  v125 = v43;
  v48 = objc_msgSend(v43, sel_subcredentials);
  if (!v48)
    goto LABEL_110;
  v49 = v48;
  v50 = sub_18FCDC600(0, &qword_1EE1C0C10);
  sub_18FDE4754((unint64_t *)&unk_1EE1C0700, &qword_1EE1C0C10);
  v51 = sub_1903D08A4();

  v140 = v50;
  if ((v51 & 0xC000000000000001) != 0)
  {
    sub_1903D0B5C();
    sub_1903D08C8();
    v145 = *((_QWORD *)&v157 + 1);
    v51 = v157;
    v53 = *((_QWORD *)&v158 + 1);
    v52 = v158;
    v54 = v159;
  }
  else
  {
    v53 = 0;
    v55 = -1 << *(_BYTE *)(v51 + 32);
    v56 = *(_QWORD *)(v51 + 56);
    v145 = v51 + 56;
    v57 = ~v55;
    v58 = -v55;
    if (v58 < 64)
      v59 = ~(-1 << v58);
    else
      v59 = -1;
    v54 = v59 & v56;
    v52 = v57;
  }
  v142 = v51 & 0x7FFFFFFFFFFFFFFFLL;
  v124 = v52;
  v144 = (unint64_t)(v52 + 64) >> 6;
  v143 = v51;
  if (v51 < 0)
  {
LABEL_82:
    v67 = sub_1903D0BA4();
    if (!v67)
      goto LABEL_30;
    v150 = v67;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v68 = aBlock[0];
    swift_unknownObjectRelease();
    v66 = (id)v68;
    v62 = v53;
    v60 = v54;
    if (!v66)
      goto LABEL_30;
    goto LABEL_84;
  }
  while (v54)
  {
    v60 = (v54 - 1) & v54;
    v61 = __clz(__rbit64(v54)) | (v53 << 6);
    v62 = v53;
LABEL_80:
    v66 = *(id *)(*(_QWORD *)(v51 + 48) + 8 * v61);
    if (!v66)
      goto LABEL_30;
LABEL_84:
    v148 = v60;
    v149 = v62;
    v69 = v18[469];
    v147 = v66;
    v70 = objc_msgSend(v66, v69);
    if (v70)
    {
      v71 = v70;
      v72 = sub_1903D05C8();
      v74 = v73;

      if (!v23)
      {

        swift_bridgeObjectRelease();
        goto LABEL_63;
      }
      if (v72 == v146 && v23 == v74)
      {
        swift_bridgeObjectRelease();
        goto LABEL_91;
      }
      v75 = sub_1903D0ED4();
      swift_bridgeObjectRelease();
      if ((v75 & 1) != 0)
        goto LABEL_91;
LABEL_62:

LABEL_63:
      v53 = v149;
      v54 = v148;
      if (v51 < 0)
        goto LABEL_82;
    }
    else
    {
      if (v23)
        goto LABEL_62;
LABEL_91:
      if (qword_1EE1BCFE8 != -1)
        swift_once();
      v76 = sub_1903D0340();
      __swift_project_value_buffer(v76, (uint64_t)qword_1EE1BF740);
      swift_retain_n();
      v77 = sub_1903D0328();
      v78 = sub_1903D0940();
      if (os_log_type_enabled(v77, v78))
      {
        v79 = (uint8_t *)swift_slowAlloc();
        v80 = swift_slowAlloc();
        aBlock[0] = v80;
        *(_DWORD *)v79 = v129;
        v133 = v79 + 4;
        v81 = objc_msgSend(*(id *)(v2 + 56), "sid");
        v82 = v2;
        v83 = sub_1903D05C8();
        v84 = v4;
        v86 = v85;

        v87 = v83;
        v2 = v82;
        v150 = sub_18FCD5144(v87, v86, aBlock);
        sub_1903D0ACC();
        swift_release_n();
        v4 = v84;
        v5 = v131;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_18FC92000, v77, v78, "[%s] Received pass for newly provisioned subcredential", v79, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x19400D804](v80, -1, -1);
        MEMORY[0x19400D804](v79, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v88 = MEMORY[0x1E0DEE9D8];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD540);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v134;
      v90 = v141;
      *(_QWORD *)(inited + 32) = v141;
      aBlock[0] = inited;
      sub_1903D079C();
      v91 = aBlock[0];
      v92 = v90;
      v93 = sub_18FD4FE50(v88);
      v94 = MEMORY[0x1E0DEE9E0];
      if ((v88 & 0xC000000000000000) != 0 && sub_1903D0D00())
      {
        result = (uint64_t)objc_msgSend(v92, sel_uniqueID);
        if (!result)
          goto LABEL_112;
        v105 = (void *)result;
        v106 = sub_1903D05C8();
        v108 = v107;

        v109 = MEMORY[0x1E0DEE9E0];
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        aBlock[0] = v109;
        sub_18FE0721C(v88, v106, v108, isUniquelyReferenced_nonNull_native);
        v94 = aBlock[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v95 = objc_allocWithZone((Class)type metadata accessor for SEProvisionedPasses());
      v96 = (void *)SEProvisionedPasses.init(primaryPass:passes:moreInfoItemsForPass:externalProvisioningMode:suppressMakeDefaultOfferForPass:isExpressModeSetupOptional:isExpressEnabled:)(v92, v91, v94, 0, 2u, v93, 0, 0);
      sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
      v97 = v96;
      v98 = (void *)sub_1903D097C();
      v99 = swift_allocObject();
      swift_weakInit();
      v100 = swift_allocObject();
      *(_QWORD *)(v100 + 16) = v99;
      *(_QWORD *)(v100 + 24) = v96;
      *(_BYTE *)(v100 + 32) = 0;
      aBlock[4] = (uint64_t)sub_18FDE47BC;
      aBlock[5] = v100;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_18FDF4F30;
      aBlock[3] = (uint64_t)&block_descriptor_28;
      v101 = _Block_copy(aBlock);
      v102 = v97;
      swift_release();
      v103 = v136;
      sub_1903D03C4();
      aBlock[0] = v88;
      sub_18FCD5E34((unint64_t *)&qword_1EE1C0730, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
      sub_18FD4A258((unint64_t *)&qword_1EE1C0740, (uint64_t *)&unk_1EE1BD530);
      v104 = v139;
      sub_1903D0B38();
      MEMORY[0x19400AF6C](0, v103, v104, v101);
      _Block_release(v101);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v104, v4);
      (*(void (**)(char *, uint64_t))(v137 + 8))(v103, v138);

      v53 = v149;
      v54 = v148;
      v23 = v135;
      v18 = &selRef_fieldPropertiesForFieldNotification_;
      v51 = v143;
      if (v143 < 0)
        goto LABEL_82;
    }
  }
  v63 = v53 + 1;
  if (!__OFADD__(v53, 1))
  {
    if (v63 >= v144)
      goto LABEL_30;
    v64 = *(_QWORD *)(v145 + 8 * v63);
    v62 = v53 + 1;
    if (v64)
      goto LABEL_79;
    v62 = v53 + 2;
    if (v53 + 2 >= v144)
      goto LABEL_30;
    v64 = *(_QWORD *)(v145 + 8 * v62);
    if (v64)
      goto LABEL_79;
    v62 = v53 + 3;
    if (v53 + 3 >= v144)
      goto LABEL_30;
    v64 = *(_QWORD *)(v145 + 8 * v62);
    if (v64)
      goto LABEL_79;
    v62 = v53 + 4;
    if (v53 + 4 >= v144)
      goto LABEL_30;
    v64 = *(_QWORD *)(v145 + 8 * v62);
    if (v64)
    {
LABEL_79:
      v60 = (v64 - 1) & v64;
      v61 = __clz(__rbit64(v64)) + (v62 << 6);
      goto LABEL_80;
    }
    v65 = v53 + 5;
    while (v144 != v65)
    {
      v64 = *(_QWORD *)(v145 + 8 * v65++);
      if (v64)
      {
        v62 = v65 - 1;
        goto LABEL_79;
      }
    }
LABEL_30:
    sub_18FD486FC();

    v32 = v123;
    v34 = v127;
    v35 = v126;
    goto LABEL_31;
  }
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_111:
  result = swift_bridgeObjectRelease();
  __break(1u);
LABEL_112:
  __break(1u);
  return result;
}

__n128 _s11PassKitCore41ProvisioningCarKeyStepLegacyURLRedemptionC7context10credential11sharedStateAcA0D7ContextC_AA0D24CredentialsConfigurationC10CredentialOSo015PKSecureElementdM0CtcfC_0(uint64_t a1, __n128 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  __n128 result;

  type metadata accessor for ProvisioningCarKeyStepLegacyURLRedemption();
  v6 = swift_allocObject();
  v7 = a2[1].n128_u64[0];
  v8 = a2[1].n128_u8[8];
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_QWORD *)(v6 + 96) = 0;
  *(_QWORD *)(v6 + 16) = a1;
  result = *a2;
  *(__n128 *)(v6 + 24) = *a2;
  *(_QWORD *)(v6 + 40) = v7;
  *(_BYTE *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 56) = a3;
  return result;
}

uint64_t type metadata accessor for ProvisioningCarKeyStepLegacyURLRedemption()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningCarKeyStepLegacyURLRedemption()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningCarKeyStepLegacyURLRedemption.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

ValueMetadata *type metadata accessor for ProvisioningCarKeyStepLegacyURLRedemption.RedemptionResult()
{
  return &type metadata for ProvisioningCarKeyStepLegacyURLRedemption.RedemptionResult;
}

uint64_t sub_18FDE4754(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_18FCDC600(255, a2);
    result = MEMORY[0x19400D72C](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FDE4794()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18FDE47BC()
{
  uint64_t v0;

  return sub_18FDE328C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t objectdestroy_3Tm_0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_18FDE4810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  unsigned __int8 v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t ObjectType;
  char v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[6];

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a6;
  v11 = *(void **)(a3 + 56);
  swift_retain();
  swift_retain();
  v12 = objc_msgSend(v11, "sid");
  v40 = sub_1903D05C8();
  v41 = v13;

  v14 = *(_QWORD *)(a3 + 16);
  swift_beginAccess();
  v39 = *(_BYTE *)(v14 + 64);
  v15 = *(void **)(v14 + 72);
  v16 = *(void **)(v14 + 80);
  v17 = v16;
  v18 = v15;
  v19 = v17;
  v20 = v18;
  v21 = objc_msgSend(v20, sel_targetDevice);
  if (!v21)
  {
    swift_release();
    swift_release();
    __break(1u);
    goto LABEL_18;
  }
  v22 = v21;

  if ((objc_msgSend(v22, sel_respondsToSelector_, sel_supportsSharingInAChain) & 1) != 0)
  {
    v23 = objc_msgSend(v22, sel_supportsSharingInAChain);
    swift_unknownObjectRelease();
    if ((v23 & 1) != 0)
      goto LABEL_12;
    if (*(_BYTE *)(a3 + 48))
      goto LABEL_5;
  }
  else
  {
    swift_unknownObjectRelease();
    if (*(_BYTE *)(a3 + 48))
    {
LABEL_5:
      v24 = 0;
      goto LABEL_8;
    }
  }
  v24 = *(id *)(a3 + 24);
LABEL_8:
  v25 = objc_msgSend(v24, sel_localAppletSubcredentialPassCredential);

  if (v25)
  {
    v26 = *(_QWORD *)(a3 + 64);
    *(_QWORD *)(a3 + 64) = sub_18FDE4C34;
    *(_QWORD *)(a3 + 72) = v10;
    swift_retain();
    sub_18FD4A1C4(v26);
    v27 = v20;
    v28 = v19;
    v29 = objc_msgSend(v27, sel_targetDevice);
    if (v29)
    {
      v30 = v29;

      if ((objc_msgSend(v30, sel_respondsToSelector_, sel_retrieveShareInvitationForMailboxAddress_completion_) & 1) != 0)
      {
        v31 = swift_allocObject();
        swift_weakInit();
        v32 = swift_allocObject();
        *(_QWORD *)(v32 + 16) = v31;
        *(_QWORD *)(v32 + 24) = v40;
        *(_QWORD *)(v32 + 32) = v41;
        *(_BYTE *)(v32 + 40) = v39;
        *(_QWORD *)(v32 + 48) = v27;
        *(_QWORD *)(v32 + 56) = v16;
        v33 = v27;
        v34 = v28;
        swift_retain();
        v35 = (void *)sub_1903D05A4();
        aBlock[4] = sub_18FDE4C7C;
        aBlock[5] = v32;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_18FDB0DD4;
        aBlock[3] = &block_descriptor_22_0;
        v36 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        objc_msgSend(v30, (SEL)&selRef_retrievePendingProvisioningOfType_withUniqueIdentifier_completion_, v35, v36);
        _Block_release(v36);
        swift_release();
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
      }
      return;
    }
LABEL_18:
    swift_release();
    swift_release();
    __break(1u);
    return;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (MEMORY[0x19400D8B8](a4 + 16))
  {
    v37 = *(_QWORD *)(a4 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 120))(0, 2, a5, a6, ObjectType, v37);
    swift_release();

    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();

  }
}

uint64_t sub_18FDE4C28()
{
  return objectdestroy_16Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_18FDE4C34(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_18FD92B24(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_18FDE4C40()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_18FDE4C7C(void *a1, void *a2)
{
  uint64_t v2;

  sub_18FDE2058(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(void **)(v2 + 48), *(void **)(v2 + 56));
}

uint64_t sub_18FDE4C90()
{
  return objectdestroy_16Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_18FDE4C9C(void *a1, void *a2)
{
  uint64_t v2;

  sub_18FDE26E4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_18FDE4CA8()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_18FDE4CD4()
{
  uint64_t v0;

  sub_18FDE3490(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

__n128 ProvisioningStepWaitForActivation.__allocating_init(context:credential:sharedState:)(uint64_t a1, __n128 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  __n128 result;

  v6 = swift_allocObject();
  v7 = a2[1].n128_u64[0];
  v8 = a2[1].n128_u8[8];
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_QWORD *)(v6 + 16) = a1;
  result = *a2;
  *(__n128 *)(v6 + 24) = *a2;
  *(_QWORD *)(v6 + 40) = v7;
  *(_BYTE *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 56) = a3;
  return result;
}

uint64_t ProvisioningStepWaitForActivation.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_QWORD *)(v3 + 16) = a1;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 40) = v4;
  *(_BYTE *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = a3;
  return v3;
}

uint64_t ProvisioningStepWaitForActivation.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  sub_18FD4A1C4(*(_QWORD *)(v0 + 72));
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ProvisioningStepWaitForActivation.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  sub_18FD4A1C4(*(_QWORD *)(v0 + 72));
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

__n128 sub_18FDE4E38@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  __n128 result;

  type metadata accessor for ProvisioningStepWaitForActivation();
  v8 = swift_allocObject();
  v9 = a2[1].n128_u64[0];
  v10 = a2[1].n128_u8[8];
  *(_OWORD *)(v8 + 64) = 0u;
  *(_OWORD *)(v8 + 80) = 0u;
  *(_QWORD *)(v8 + 16) = a1;
  result = *a2;
  *(__n128 *)(v8 + 24) = *a2;
  *(_QWORD *)(v8 + 40) = v9;
  *(_BYTE *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 56) = a3;
  *a4 = v8;
  return result;
}

uint64_t type metadata accessor for ProvisioningStepWaitForActivation()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningStepWaitForActivation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningStepWaitForActivation.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_18FDE4ED8(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10[3];

  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v4 = sub_1903D0340();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain_n();
  v5 = sub_1903D0328();
  v6 = sub_1903D0934();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v10[0] = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a1, a2, v10);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v5, v6, "[%s] ProvisioningStepWaitForActivation: Timed out waiting for activation", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v8, -1, -1);
    MEMORY[0x19400D804](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_18FDE60CC();
    return swift_release();
  }
  return result;
}

uint64_t sub_18FDE50B0()
{
  uint64_t result;
  _QWORD *v1;
  id v2;
  void *v3;
  void (*v4)(_QWORD, _QWORD);
  uint64_t v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = (_QWORD *)result;
    if (*(_QWORD *)(result + 88))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1903D09C4();
      v1[11] = 0;
      swift_unknownObjectRelease();
      v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      sub_1903D05C8();
      swift_retain();
      v3 = (void *)sub_1903D05A4();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_removeObserver_name_object_, v1, v3, 0);

      swift_release();
      v4 = (void (*)(_QWORD, _QWORD))v1[9];
      if (v4)
      {
        swift_retain();
        v4(0, 0);
        sub_18FD4A1C4((uint64_t)v4);
        v5 = v1[9];
      }
      else
      {
        v5 = 0;
      }
      v1[9] = 0;
      v1[10] = 0;
      sub_18FD4A1C4(v5);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_18FDE5228(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  __CFString *v14;
  unint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[7];
  __int128 v26;
  __int128 v27;

  v3 = sub_1903D03B8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1903D03D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_userInfo);
  if (!v11)
  {
    v26 = 0u;
    v27 = 0u;
    return sub_18FCD92C8((uint64_t)&v26);
  }
  v12 = v11;
  v23 = v1;
  v24 = v4;
  v13 = sub_1903D04E4();

  aBlock[6] = CFSTR("PKPassLibraryReplacementPassesUserInfo");
  type metadata accessor for PKPassLibraryNotificationKey(0);
  sub_18FCD5E34((unint64_t *)&unk_1EE1C0DD0, (uint64_t (*)(uint64_t))type metadata accessor for PKPassLibraryNotificationKey, (uint64_t)&unk_190435FBC);
  v14 = CFSTR("PKPassLibraryReplacementPassesUserInfo");
  sub_1903D0BD4();
  if (*(_QWORD *)(v13 + 16) && (v15 = sub_18FD75D04((uint64_t)aBlock), (v16 & 1) != 0))
  {
    sub_18FCD6028(*(_QWORD *)(v13 + 56) + 32 * v15, (uint64_t)&v26);
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_18FD784F8((uint64_t)aBlock);
  if (!*((_QWORD *)&v27 + 1))
    return sub_18FCD92C8((uint64_t)&v26);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1C06F0);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v18 = aBlock[0];
    sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
    v19 = (void *)sub_1903D097C();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v23;
    *(_QWORD *)(v20 + 24) = v18;
    aBlock[4] = sub_18FDE59A4;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FDF4F30;
    aBlock[3] = &block_descriptor_29;
    v21 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_1903D03C4();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_18FCD5E34((unint64_t *)&qword_1EE1C0730, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
    sub_18FD4A258((unint64_t *)&qword_1EE1C0740, (uint64_t *)&unk_1EE1BD530);
    sub_1903D0B38();
    MEMORY[0x19400AF6C](0, v10, v6, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

void sub_18FDE555C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;

  v3 = a1;
  v4 = *(void **)(a1 + 64);
  if (v4 && (v5 = objc_msgSend(v4, sel_uniqueID)) != 0)
  {
    v6 = v5;
    v30 = sub_1903D05C8();
    v8 = v7;

  }
  else
  {
    v30 = 0;
    v8 = 0;
  }
  if (a2 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    v9 = sub_1903D0D00();
    if (v9)
      goto LABEL_7;
LABEL_37:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_37;
LABEL_7:
  v29 = v3;
  v3 = 4;
  while (1)
  {
    v10 = v3 - 4;
    if ((a2 & 0xC000000000000001) != 0)
    {
      v11 = (id)MEMORY[0x19400B200](v3 - 4, a2);
      v12 = v3 - 3;
      if (__OFADD__(v10, 1))
        goto LABEL_35;
    }
    else
    {
      v11 = *(id *)(a2 + 8 * v3);
      v12 = v3 - 3;
      if (__OFADD__(v10, 1))
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
    v31 = v11;
    v13 = objc_msgSend(v11, sel_uniqueID);
    if (v13)
      break;
    if (!v8)
      goto LABEL_27;
LABEL_9:

LABEL_10:
    ++v3;
    if (v12 == v9)
      goto LABEL_37;
  }
  v14 = v13;
  v15 = sub_1903D05C8();
  v17 = v16;

  if (!v8)
  {

    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v15 != v30 || v8 != v17)
  {
    v19 = sub_1903D0ED4();
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_27:
  swift_bridgeObjectRelease();
  if (objc_msgSend(v31, sel_contactlessActivationState))
  {

  }
  else
  {
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v20 = sub_1903D0340();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EE1BF740);
    swift_retain_n();
    v21 = sub_1903D0328();
    v22 = sub_1903D0940();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      *(_DWORD *)v23 = 136315138;
      v32 = v24;
      v25 = objc_msgSend(*(id *)(v29 + 56), "sid");
      v26 = sub_1903D05C8();
      v28 = v27;

      sub_18FCD5144(v26, v28, &v32);
      sub_1903D0ACC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_18FC92000, v21, v22, "[%s] ProvisioningStepWaitForActivation: received activated pass", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v24, -1, -1);
      MEMORY[0x19400D804](v23, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_18FDE60CC();

  }
}

uint64_t sub_18FDE5978()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_18FDE59A4()
{
  uint64_t v0;

  sub_18FDE555C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

void sub_18FDE59C4(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  _QWORD *v49;
  void (*v50)(_QWORD *, uint64_t);
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  char *v57;
  char *v58;
  id v59;
  uint64_t v60;
  uint64_t ObjectType;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  _QWORD *v86;
  _QWORD aBlock[7];

  v85 = a1;
  v9 = sub_1903D03B8();
  v79 = *(_QWORD *)(v9 - 8);
  v80 = v9;
  MEMORY[0x1E0C80A78](v9);
  v78 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1903D03D0();
  v76 = *(_QWORD *)(v11 - 8);
  v77 = v11;
  MEMORY[0x1E0C80A78](v11);
  v75 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1903D03AC();
  v73 = *(_QWORD *)(v13 - 8);
  v74 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v72 = (char **)((char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v71 = (uint64_t)&v64 - v16;
  v17 = sub_1903D03E8();
  v83 = *(_QWORD *)(v17 - 8);
  v84 = v17;
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v64 - v21;
  v23 = sub_1903D0994();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = a3;
  v27[3] = a4;
  v81 = a4;
  v86 = v27;
  v27[4] = a5;
  v28 = (void *)a2[7];
  swift_retain();
  v82 = a5;
  swift_retain();
  v29 = objc_msgSend(v28, "sid");
  v30 = sub_1903D05C8();
  v32 = v31;

  if (*(_BYTE *)(a2[2] + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if (!MEMORY[0x19400D8B8](a3 + 16))
    {
      swift_release();
      return;
    }
    v60 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8))(0, 0, v81, v82, ObjectType, v60);
    swift_release();
    goto LABEL_8;
  }
  v64 = v26;
  v65 = v24;
  v66 = v23;
  v67 = v30;
  v68 = v20;
  v70 = v32;
  v33 = v83;
  v69 = v22;
  v34 = v84;
  v35 = (void *)sub_18FE019C0();
  if (objc_msgSend(v35, sel_contactlessActivationState) != (id)2)
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if (!MEMORY[0x19400D8B8](a3 + 16))
    {
      swift_release();
      goto LABEL_11;
    }
    v62 = *(_QWORD *)(a3 + 24);
    v63 = swift_getObjectType();
    (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8))(0, 0, v81, v82, v63, v62);
    swift_release();

LABEL_8:
    swift_unknownObjectRelease();
    return;
  }
  v36 = a2;
  v37 = (void *)a2[8];
  a2[8] = v35;
  v85 = v35;

  v38 = a2[9];
  v39 = v86;
  a2[9] = sub_18FD56A48;
  a2[10] = v39;
  swift_retain();
  sub_18FD4A1C4(v38);
  sub_18FCDC600(0, (unint64_t *)&unk_1EE1BEB30);
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v40 = (void *)sub_1903D097C();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCD5E34((unint64_t *)&unk_1EE1C0710, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], MEMORY[0x1E0DEF948]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BEB40);
  sub_18FD4A258((unint64_t *)&unk_1EE1C0720, &qword_1EE1BEB40);
  v41 = v64;
  v42 = v66;
  sub_1903D0B38();
  v43 = sub_1903D09A0();

  (*(void (**)(char *, uint64_t))(v65 + 8))(v41, v42);
  v44 = swift_getObjectType();
  v45 = v68;
  sub_1903D03DC();
  v46 = v69;
  MEMORY[0x19400A9D8](v45, 20.0);
  v47 = *(void (**)(char *, uint64_t))(v33 + 8);
  v47(v45, v34);
  v48 = v71;
  sub_18FE20D60(v71);
  v49 = v72;
  sub_18FE20DA4(v72);
  MEMORY[0x19400AFC0](v46, v48, v49, v44);
  v50 = *(void (**)(_QWORD *, uint64_t))(v73 + 8);
  v51 = v49;
  v52 = v74;
  v50(v51, v74);
  v50((_QWORD *)v48, v52);
  v47(v46, v34);
  v53 = swift_allocObject();
  swift_weakInit();
  v54 = (_QWORD *)swift_allocObject();
  v55 = v70;
  v54[2] = v67;
  v54[3] = v55;
  v54[4] = v53;
  aBlock[4] = sub_18FDE6360;
  aBlock[5] = v54;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = &block_descriptor_16_1;
  v56 = _Block_copy(aBlock);
  swift_retain();
  v57 = v75;
  sub_18FE20DEC();
  v58 = v78;
  sub_18FE20DF0();
  sub_1903D09B8();
  _Block_release(v56);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v58, v80);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v57, v77);
  swift_release();
  swift_release();
  v36[11] = v43;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  sub_1903D09D0();
  v59 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1903D05C8();
  v35 = (void *)sub_1903D05A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v59, sel_addObserver_selector_name_object_, v36, sel_passLibraryDidChangeWithNotification_, v35, 0);
  swift_release();

  swift_unknownObjectRelease();
LABEL_11:

}

uint64_t sub_18FDE60CC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD aBlock[6];

  v0 = sub_1903D03B8();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v13 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1903D03D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v8 = (void *)sub_1903D097C();
  v9 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_18FDE6300;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = &block_descriptor_6_0;
  v10 = _Block_copy(aBlock);
  swift_release();
  sub_1903D03C4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCD5E34((unint64_t *)&qword_1EE1C0730, v1, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
  sub_18FD4A258((unint64_t *)&qword_1EE1C0740, (uint64_t *)&unk_1EE1BD530);
  sub_1903D0B38();
  MEMORY[0x19400AF6C](0, v7, v3, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_18FDE62DC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18FDE6300()
{
  return sub_18FDE50B0();
}

uint64_t sub_18FDE6308()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FDE6334()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FDE6360()
{
  uint64_t v0;

  return sub_18FDE4ED8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_18FDE637C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  id v25;
  id v26;
  _QWORD *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t aBlock;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  _QWORD *v38;

  v4 = v3;
  v7 = *(void **)(v3 + 56);
  v8 = objc_msgSend(v7, "sid");
  v9 = sub_1903D05C8();
  v30 = v10;
  v31 = v9;

  v11 = *(_QWORD *)(v4 + 16);
  swift_beginAccess();
  v12 = objc_msgSend(objc_allocWithZone((Class)PKProvisioningUtility), sel_initWithDestinationWebService_managingWebService_, *(_QWORD *)(v11 + 72), *(_QWORD *)(v11 + 48));
  v13 = swift_allocObject();
  v14 = objc_msgSend(objc_allocWithZone((Class)PKPaymentProvisioningRequest), sel_init);
  *(_QWORD *)(v13 + 16) = v14;
  objc_msgSend(v14, sel_setEligibilityResponse_, a1);
  v15 = v14;
  v16 = objc_msgSend(v7, "sid");
  sub_1903D05C8();

  sub_1903D067C();
  swift_bridgeObjectRelease();
  sub_1903D067C();
  v17 = (void *)sub_1903D05A4();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_addDiagnosticReason_, v17);

  v18 = objc_msgSend(objc_allocWithZone((Class)PKAsyncUnaryOperationComposer), (SEL)&selRef_initWithNFCDictionary_);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 0;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v4;
  v20[3] = v13;
  v20[4] = v19;
  v37 = sub_18FDE6A28;
  v38 = v20;
  v21 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v34 = 1107296256;
  v35 = sub_18FD5B4F8;
  v36 = &block_descriptor_30;
  v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v18, sel_addOperation_, v22);
  _Block_release(v22);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v12;
  v23[3] = v13;
  v23[4] = v4;
  v23[5] = v31;
  v23[6] = v30;
  v23[7] = v19;
  v37 = sub_18FDE6DB0;
  v38 = v23;
  aBlock = v21;
  v34 = 1107296256;
  v35 = sub_18FD5B4F8;
  v36 = &block_descriptor_13_4;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  v25 = v12;
  swift_release();
  objc_msgSend(v18, sel_addOperation_, v24);
  _Block_release(v24);
  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v19;
  v27[3] = a2;
  v27[4] = a3;
  v27[5] = v13;
  v37 = sub_18FDE702C;
  v38 = v27;
  aBlock = v21;
  v34 = 1107296256;
  v35 = sub_18FD5B5A8;
  v36 = &block_descriptor_19_3;
  v28 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v29 = objc_msgSend(v18, sel_evaluateWithInput_completion_, v26, v28);
  _Block_release(v28);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();

}

__n128 ProvisioningStepGenerateKeys.__allocating_init(context:credential:sharedState:)(uint64_t a1, __n128 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  __n128 result;

  v6 = swift_allocObject();
  v7 = a2[1].n128_u64[0];
  v8 = a2[1].n128_u8[8];
  *(_QWORD *)(v6 + 16) = a1;
  result = *a2;
  *(__n128 *)(v6 + 24) = *a2;
  *(_QWORD *)(v6 + 40) = v7;
  *(_BYTE *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 56) = a3;
  return result;
}

uint64_t ProvisioningStepGenerateKeys.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 40) = v4;
  *(_BYTE *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = a3;
  return v3;
}

uint64_t ProvisioningStepGenerateKeys.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return v0;
}

uint64_t ProvisioningStepGenerateKeys.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return swift_deallocClassInstance();
}

__n128 sub_18FDE6870@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  __n128 result;

  type metadata accessor for ProvisioningStepGenerateKeys();
  v8 = swift_allocObject();
  v9 = a2[1].n128_u64[0];
  v10 = a2[1].n128_u8[8];
  *(_QWORD *)(v8 + 16) = a1;
  result = *a2;
  *(__n128 *)(v8 + 24) = *a2;
  *(_QWORD *)(v8 + 40) = v9;
  *(_BYTE *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 56) = a3;
  *a4 = v8;
  return result;
}

uint64_t type metadata accessor for ProvisioningStepGenerateKeys()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningStepGenerateKeys()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningStepGenerateKeys.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for ProvisioningStepGenerateKeys.GenerateKeysResult()
{
  return &type metadata for ProvisioningStepGenerateKeys.GenerateKeysResult;
}

uint64_t sub_18FDE6918()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_18FDE693C(uint64_t a1, void *a2, void (*a3)(void *, BOOL), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v13;
  id v14;
  id v15;

  swift_beginAccess();
  v13 = *(void **)(a6 + 16);
  swift_retain();
  swift_retain();
  v14 = a2;
  v15 = v13;
  sub_18FDE7474(v15, a5, a7, a3, a4, v14);

  swift_release();
  swift_release();

}

uint64_t sub_18FDE69F4()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_18FDE6A28(uint64_t a1, void *a2, void (*a3)(void *, BOOL), uint64_t a4)
{
  uint64_t *v4;

  sub_18FDE693C(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t sub_18FDE6A4C(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t, BOOL), uint64_t a4, uint64_t a5)
{
  id *v7;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;

  v7 = (id *)(a2 + 16);
  if (a1)
  {
    v9 = a1;
    v10 = (void *)sub_1903D0124();
    v11 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v10, 5);

    swift_beginAccess();
    v12 = *v7;
    *v7 = v11;

    swift_beginAccess();
    if (*v7)
    {
      v13 = *v7;
      v14 = (void *)sub_1903D05A4();
      objc_msgSend(v13, sel_addInternalDebugDescription_, v14);

    }
    else
    {

    }
  }
  swift_beginAccess();
  return a3(a5, *v7 != 0);
}

void sub_18FDE6B98(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  id v27;
  _QWORD aBlock[6];

  swift_beginAccess();
  v15 = *(void **)(a7 + 56);
  v16 = *(id *)(a6 + 16);
  v17 = objc_msgSend(v15, sel_externalizedAuth);
  if (v17)
  {
    v18 = v16;
    v19 = a3;
    v20 = sub_1903D01B4();
    v22 = v21;

    v17 = (id)sub_1903D01A8();
    v23 = v20;
    a3 = v19;
    v16 = v18;
    sub_18FCD5938(v23, v22);
  }
  v24 = (void *)sub_1903D05A4();
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a10;
  v25[3] = a6;
  v25[4] = a3;
  v25[5] = a4;
  v25[6] = a2;
  aBlock[4] = sub_18FDE7074;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDB0DD4;
  aBlock[3] = &block_descriptor_25_2;
  v26 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  v27 = a2;
  swift_release();
  objc_msgSend(a5, sel_updateProvisioningRequestForEnableRequirements_externalizedAuth_sid_completion_, v16, v17, v24, v26);
  _Block_release(v26);

}

uint64_t sub_18FDE6D6C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_18FDE6DB0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_18FDE6B98(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56));
}

uint64_t sub_18FDE6DDC(void *a1, id a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, BOOL), uint64_t a6, uint64_t a7)
{
  id *v9;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void **v18;
  void *v19;
  id v20;

  v9 = (id *)(a3 + 16);
  if (a2)
  {
    v11 = a2;
    v12 = (void *)sub_1903D0124();
    v13 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v12, 5);

    swift_beginAccess();
    v14 = *v9;
    *v9 = v13;

    swift_beginAccess();
    if (*v9)
    {
      v15 = *v9;
      v16 = (void *)sub_1903D05A4();
      objc_msgSend(v15, sel_addInternalDebugDescription_, v16);

    }
    else
    {

    }
  }
  else if (a1)
  {
    v18 = (void **)(a4 + 16);
    swift_beginAccess();
    v19 = *v18;
    *v18 = a1;
    v20 = a1;

  }
  swift_beginAccess();
  return a5(a7, *v9 != 0);
}

void sub_18FDE6F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t), uint64_t a6, uint64_t a7)
{
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;

  swift_beginAccess();
  v10 = *(void **)(a4 + 16);
  if (v10)
  {
    v11 = v10;
    v12 = v10;
    v13 = 1;
  }
  else
  {
    swift_beginAccess();
    v14 = *(void **)(a7 + 16);
    v11 = v14;
    v12 = v14;
    v13 = 0;
  }
  a5(v12, v13);

}

uint64_t sub_18FDE6FF8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_18FDE702C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_18FDE6F60(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void (**)(void *, uint64_t))(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_18FDE7038()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_18FDE7074(void *a1, void *a2)
{
  uint64_t v2;

  return sub_18FDE6DDC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t (**)(uint64_t, BOOL))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

void sub_18FDE7084(void *a1, void *a2, void *a3)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;

  v6 = objc_msgSend(a1, sel_authorizationKeyAttestation);
  objc_msgSend(a2, sel_setAuthorizationKeyAttestation_, v6);

  v7 = objc_msgSend(a1, sel_deviceEncryptionKeyAttestation);
  objc_msgSend(a2, sel_setIsoDeviceEncryptionAttestation_, v7);

  v8 = objc_msgSend(a1, sel_deviceEncryptionKeyAuthorization);
  if (v8)
  {
    v9 = sub_1903D01B4();
    v11 = v10;

    v8 = (id)sub_1903D01A8();
    sub_18FCD5938(v9, v11);
  }
  objc_msgSend(a2, sel_setIsoDeviceEncryptionAuthorization_, v8);

  v12 = objc_msgSend(a1, sel_transactionKeyCASDAuthorization);
  if (v12)
  {
    v13 = sub_1903D01B4();
    v15 = v14;

    v12 = (id)sub_1903D01A8();
    sub_18FCD5938(v13, v15);
  }
  objc_msgSend(a2, sel_setTransactionKeyAuthorization_, v12);

  v16 = objc_msgSend(a1, sel_transactionKeyCASDSignature);
  if (v16)
  {
    v17 = sub_1903D01B4();
    v19 = v18;

    v16 = (id)sub_1903D01A8();
    sub_18FCD5938(v17, v19);
  }
  objc_msgSend(a2, sel_setTransactionKeySignature_, v16);

  v20 = objc_msgSend(a1, sel_transactionKeyCASDAttestation);
  if (v20)
  {
    v21 = sub_1903D01B4();
    v23 = v22;

    v20 = (id)sub_1903D01A8();
    sub_18FCD5938(v21, v23);
  }
  objc_msgSend(a2, sel_setTransactionKeyAttestation_, v20);

  v24 = objc_msgSend(a1, sel_progenitorKeyCASDAttestation);
  if (v24)
  {
    v25 = sub_1903D01B4();
    v27 = v26;

    v24 = (id)sub_1903D01A8();
    sub_18FCD5938(v25, v27);
  }
  objc_msgSend(a2, sel_setProgenitorKeyCASDAttestation_, v24);

  v28 = objc_msgSend(a1, sel_transactionKeys);
  objc_msgSend(a2, sel_setTransactionKeys_, v28);

  v29 = objc_msgSend(a1, sel_serverAttestedProvisioningData);
  if (v29)
  {
    v30 = sub_1903D01B4();
    v32 = v31;

    v29 = (id)sub_1903D01A8();
    sub_18FCD5938(v30, v32);
  }
  objc_msgSend(a2, sel_setServerAttestedProvisioningData_, v29);

  v33 = objc_msgSend(a3, sel_accountKeyIdentifier);
  objc_msgSend(a2, sel_setIdentityAccountKeyIdentifier_, v33);

}

void sub_18FDE73FC(void *a1, uint64_t a2, void *a3, void *a4, void (*a5)(uint64_t))
{
  id v8;

  if (a1)
  {
    v8 = a1;
    sub_18FDE7084(v8, a3, a4);
    a5(0);

  }
  else
  {
    a5(a2);
  }
}

void sub_18FDE7474(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, BOOL), uint64_t a5, void *a6)
{
  _QWORD *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  _QWORD *v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  uint8_t *buf;
  uint64_t v43;
  os_log_type_t type;
  NSObject *log;
  uint64_t v46;
  void *v47;
  uint64_t aBlock[9];

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a6;
  if (*(_BYTE *)(a2 + 48))
  {
    swift_retain();
    swift_retain();
    v13 = a6;
LABEL_3:
    swift_beginAccess();
    a4(a6, *(_QWORD *)(a3 + 16) != 0);
    swift_release();
    return;
  }
  v14 = *(void **)(a2 + 24);
  swift_retain();
  swift_retain();
  v15 = a6;
  v16 = objc_msgSend(v14, sel_identityCredential);
  if (!v16)
    goto LABEL_3;
  v17 = v16;
  v18 = objc_msgSend(v16, sel_isoCredentialIdentifier);
  v47 = v15;
  if (v18)
  {
    sub_1903D05C8();
    v20 = v19;
  }
  else
  {
    v20 = 0;
  }
  objc_msgSend(a1, sel_setSubCredentialIdentifier_, v18);

  v21 = objc_msgSend(v17, sel_attestations);
  if (v21)
  {
    v22 = v21;
    swift_bridgeObjectRelease();
    sub_18FDE7084(v22, a1, v17);
    swift_beginAccess();
    a4(v47, *(_QWORD *)(a3 + 16) != 0);
    swift_release();

  }
  else
  {
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v23 = sub_1903D0340();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE1BF740);
    swift_retain_n();
    v24 = sub_1903D0328();
    v25 = sub_1903D0940();
    v46 = v20;
    if (os_log_type_enabled(v24, v25))
    {
      log = v24;
      type = v25;
      v26 = (uint8_t *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      *(_DWORD *)v26 = 136315138;
      aBlock[0] = v43;
      buf = v26;
      v27 = objc_msgSend(*(id *)(a2 + 56), "sid");
      v28 = sub_1903D05C8();
      v30 = v29;

      aBlock[6] = sub_18FCD5144(v28, v30, aBlock);
      sub_1903D0ACC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_18FC92000, log, type, "[%s] Generating identity provisioning attestations", buf, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v43, -1, -1);
      MEMORY[0x19400D804](buf, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v31 = *(_QWORD *)(a2 + 16);
    swift_beginAccess();
    v32 = *(void **)(v31 + 72);
    v33 = *(id *)(v31 + 80);
    v34 = v32;
    v35 = objc_msgSend(v34, sel_targetDevice);
    if (v35)
    {
      v36 = v35;
      if ((objc_msgSend(v35, sel_respondsToSelector_, sel_generateIdentityProvisioningAttestationsWithISOCredential_pairingID_completion_) & 1) != 0)
      {
        v37 = (_QWORD *)swift_allocObject();
        v37[2] = a1;
        v37[3] = v17;
        v37[4] = sub_18FDE79DC;
        v37[5] = v12;
        v38 = a1;
        v39 = v17;
        swift_retain();
        if (v46)
          v40 = (void *)sub_1903D05A4();
        else
          v40 = 0;
        aBlock[4] = (uint64_t)sub_18FDE7A1C;
        aBlock[5] = (uint64_t)v37;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_18FDB0DD4;
        aBlock[3] = (uint64_t)&block_descriptor_34_0;
        v41 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        objc_msgSend(v36, sel_generateIdentityProvisioningAttestationsWithISOCredential_pairingID_completion_, v40, 0, v41);
        _Block_release(v41);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();

      }
      else
      {
        swift_release();

        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {

      swift_release();
      swift_release();
      __break(1u);
    }
  }
}

uint64_t sub_18FDE79A8()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_18FDE79DC(void *a1)
{
  uint64_t v1;

  return sub_18FDE6A4C(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t, BOOL))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_18FDE79E8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_18FDE7A1C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_18FDE73FC(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void (**)(uint64_t))(v2 + 32));
}

id ProvisioningCarKeyStepRequestInvite.__allocating_init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  uint64_t v8;
  char v9;
  char *v10;
  char *v11;
  objc_super v13;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  v10 = &v7[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_createdShareInformation];
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_context] = a1;
  v11 = &v7[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_credential];
  *(_OWORD *)v11 = *(_OWORD *)a2;
  *((_QWORD *)v11 + 2) = v8;
  v11[24] = v9;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_sharedState] = a3;
  v13.receiver = v7;
  v13.super_class = v3;
  return objc_msgSendSuper2(&v13, sel_init);
}

id ProvisioningCarKeyStepRequestInvite.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  objc_super v8;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = &v3[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_createdShareInformation];
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_context] = a1;
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  v6 = &v3[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_credential];
  *(_OWORD *)v6 = *(_OWORD *)a2;
  *((_QWORD *)v6 + 2) = v4;
  v6[24] = (char)v5;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_sharedState] = a3;
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for ProvisioningCarKeyStepRequestInvite();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for ProvisioningCarKeyStepRequestInvite()
{
  return objc_opt_self();
}

id ProvisioningCarKeyStepRequestInvite.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ProvisioningCarKeyStepRequestInvite.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ProvisioningCarKeyStepRequestInvite.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProvisioningCarKeyStepRequestInvite();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_18FDE7CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  objc_class *v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  char *v13;
  id result;
  objc_super v15;

  v8 = (objc_class *)type metadata accessor for ProvisioningCarKeyStepRequestInvite();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 24);
  v12 = &v9[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_createdShareInformation];
  *((_QWORD *)v12 + 1) = 0;
  *((_QWORD *)v12 + 2) = 0;
  *(_QWORD *)v12 = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_context] = a1;
  v13 = &v9[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_credential];
  *(_OWORD *)v13 = *(_OWORD *)a2;
  *((_QWORD *)v13 + 2) = v10;
  v13[24] = v11;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_sharedState] = a3;
  v15.receiver = v9;
  v15.super_class = v8;
  result = objc_msgSendSuper2(&v15, sel_init);
  *a4 = result;
  return result;
}

void sub_18FDE7D54(char a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_18FDEA75C(a1, a3, a4);
}

void ProvisioningCarKeyStepRequestInvite.terminateOperation(success:output:completion:)(char a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  sub_18FDEA75C(a1, a4, a5);
}

uint64_t sub_18FDE7D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1903D0610();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1903D0604();
  v4 = sub_1903D05D4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t static ProvisioningCarKeyStepRequestInvite.archive(output:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1903D0610();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1903D0604();
  v4 = sub_1903D05D4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_18FDE7ED8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_1903D0610();
  MEMORY[0x1E0C80A78](v2);
  sub_1903D0604();
  result = sub_1903D05E0();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t static ProvisioningCarKeyStepRequestInvite.unarchive(outputData:)()
{
  uint64_t v0;

  v0 = sub_1903D0610();
  MEMORY[0x1E0C80A78](v0);
  sub_1903D0604();
  return sub_1903D05E0();
}

void sub_18FDE7FD0(uint64_t a1, unint64_t a2, void *a3, char a4, char a5, void *a6, void *a7, void *a8, uint64_t a9, uint64_t a10, char a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  _QWORD *v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  PKPaymentRequest *v47;
  void *v49;
  uint64_t aBlock;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  _QWORD *v58;

  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v20 = sub_1903D0340();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain_n();
  v21 = sub_1903D0328();
  v22 = sub_1903D0940();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    aBlock = v24;
    *(_DWORD *)v23 = 136315138;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a1, a2, &aBlock);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v21, v22, "[%s] Requesting auth for invite", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v24, -1, -1);
    MEMORY[0x19400D804](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v25 = objc_msgSend(a3, sel_baseShareForPassTransferWithIsForCompanion_, a4 & 1);
  if (!v25)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v26 = v25;
  if ((a4 & 1) == 0)
  {
LABEL_11:
    v32 = objc_msgSend(objc_allocWithZone((Class)PKPartialShareInvitation), sel_initWithShare_pass_, v26, a8);
    v47 = PKShareTransferAuthorizationPaymentRequest(v32);
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = 0;
    *(_QWORD *)(v33 + 24) = 0;
    *(_BYTE *)(v33 + 32) = -1;
    v46 = (void *)objc_opt_self();
    v45 = (void *)sub_1903D05A4();
    v34 = swift_allocObject();
    *(_BYTE *)(v34 + 16) = a5;
    *(_QWORD *)(v34 + 24) = a6;
    *(_QWORD *)(v34 + 32) = a7;
    *(_QWORD *)(v34 + 40) = a1;
    *(_QWORD *)(v34 + 48) = a2;
    *(_BYTE *)(v34 + 56) = a11;
    *(_QWORD *)(v34 + 64) = a12;
    *(_QWORD *)(v34 + 72) = a13;
    *(_QWORD *)(v34 + 80) = v32;
    *(_QWORD *)(v34 + 88) = v33;
    *(_QWORD *)(v34 + 96) = a14;
    *(_QWORD *)(v34 + 104) = a8;
    *(_QWORD *)(v34 + 112) = a3;
    v57 = sub_18FDECE68;
    v58 = (_QWORD *)v34;
    aBlock = MEMORY[0x1E0C809B0];
    v54 = 1107296256;
    v55 = sub_18FDE91D0;
    v56 = &block_descriptor_69;
    v49 = _Block_copy(&aBlock);
    v35 = a13;
    v36 = v32;
    swift_retain();
    swift_retain();
    v37 = a8;
    v38 = a3;
    swift_bridgeObjectRetain();
    v39 = a6;
    v40 = a7;
    v41 = a12;
    swift_release();
    v42 = (_QWORD *)swift_allocObject();
    v42[2] = v33;
    v42[3] = a15;
    v42[4] = a16;
    v57 = sub_18FDECEB8;
    v58 = v42;
    aBlock = MEMORY[0x1E0C809B0];
    v54 = 1107296256;
    v55 = sub_18FDA4ED8;
    v56 = &block_descriptor_75;
    v43 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v44 = objc_msgSend(v46, sel_authorizeForRequest_presentationSceneIdentifier_authHandler_completion_, v47, v45, v49, v43);
    _Block_release(v43);
    _Block_release(v49);

    swift_release();
    return;
  }
  v27 = a7;
  v28 = a6;
  v29 = objc_msgSend(v28, sel_targetDevice);
  if (!v29)
    goto LABEL_13;
  v30 = v29;

  v31 = objc_msgSend(v30, sel_deviceDescriptionForPaymentWebService_, v28);
  swift_unknownObjectRelease();
  if (v31)
  {
    objc_msgSend(v26, sel_setRecipientNickname_, v31);

    goto LABEL_11;
  }
LABEL_14:
  __break(1u);
}

void sub_18FDE84AC(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8, unint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  unsigned int v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  _QWORD *v50;
  void (*v51)(_QWORD);
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_QWORD);
  uint64_t v65;
  uint64_t aBlock;
  uint64_t v67;
  void *v68;
  void *v69;
  void *v70;
  _QWORD *v71;
  uint64_t v72;

  v60 = a8;
  v64 = a3;
  v65 = a4;
  v62 = a1;
  v63 = a2;
  v19 = sub_1903D0250();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a7;
  v24 = a6;
  v25 = objc_msgSend(v24, sel_targetDevice);
  if (!v25)
  {
    __break(1u);
    goto LABEL_18;
  }
  v26 = v25;
  v61 = a13;

  if ((objc_msgSend(v26, sel_respondsToSelector_, sel_supportsSharingInAChain) & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  v27 = objc_msgSend(v26, sel_supportsSharingInAChain);
  swift_unknownObjectRelease();
  if (!v27)
  {
LABEL_9:
    v47 = (void *)sub_1903D01A8();
    v48 = swift_allocObject();
    swift_beginAccess();
    v49 = (void *)MEMORY[0x19400D8B8](a15 + 16);
    swift_unknownObjectWeakInit();

    v50 = (_QWORD *)swift_allocObject();
    v50[2] = a14;
    v50[3] = v48;
    v51 = v64;
    v52 = v65;
    v50[4] = a16;
    v50[5] = v51;
    v50[6] = v52;
    v70 = sub_18FDECF40;
    v71 = v50;
    aBlock = MEMORY[0x1E0C809B0];
    v67 = 1107296256;
    v68 = sub_18FDE90B8;
    v69 = &block_descriptor_85_0;
    v53 = _Block_copy(&aBlock);
    swift_retain();
    v54 = a16;
    swift_retain();
    swift_release();
    objc_msgSend(a17, sel_createShareWithPartialShare_authorization_completion_, v61, v47, v53, v60);
    _Block_release(v53);

    return;
  }
  v28 = (void *)objc_opt_self();
  sub_1903D0244();
  sub_1903D022C();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v29 = (void *)sub_1903D05A4();
  swift_bridgeObjectRelease();
  v30 = objc_msgSend(v28, sel_createDestinationWithIdentifier_, v29);

  v31 = (void *)objc_opt_self();
  sub_18FCDE8A0();
  v32 = (void *)sub_1903D097C();
  v33 = objc_msgSend(v31, sel_createHandleForDescriptor_queue_, v30, v32);

  if (v33)
  {
    v34 = a12;
    v35 = a11;
    v36 = objc_msgSend(v35, sel_targetDevice, v60);
    if (v36)
    {
      v37 = v36;

      if ((objc_msgSend(v37, sel_respondsToSelector_, sel_createShareInvitationForPartialShareInvitation_existingTransportIdentifier_authorization_completion_) & 1) != 0)
      {
        v38 = objc_msgSend(v30, sel_contraChannelTransportIdentifier);
        sub_1903D05C8();

        v39 = (_QWORD *)swift_allocObject();
        v60 = v30;
        v40 = v39;
        v39[2] = a14;
        v39[3] = v33;
        v39[4] = a15;
        v39[5] = a16;
        v41 = v65;
        v39[6] = v64;
        v39[7] = v41;
        swift_retain();
        v42 = v33;
        swift_retain();
        v43 = a16;
        swift_retain();
        v44 = (void *)sub_1903D05A4();
        v45 = (void *)sub_1903D01A8();
        v70 = sub_18FDECF94;
        v71 = v40;
        aBlock = MEMORY[0x1E0C809B0];
        v67 = 1107296256;
        v68 = sub_18FDE8AA8;
        v69 = &block_descriptor_91;
        v46 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        objc_msgSend(v37, sel_createShareInvitationForPartialShareInvitation_existingTransportIdentifier_authorization_completion_, v61, v44, v45, v46);
        _Block_release(v46);
        swift_bridgeObjectRelease();
        swift_release();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      return;
    }
LABEL_18:
    __break(1u);
    return;
  }
  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v55 = sub_1903D0340();
  __swift_project_value_buffer(v55, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain_n();
  v56 = sub_1903D0328();
  v57 = sub_1903D0940();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc();
    v59 = swift_slowAlloc();
    aBlock = v59;
    *(_DWORD *)v58 = 136315138;
    swift_bridgeObjectRetain();
    v72 = sub_18FCD5144((uint64_t)v60, a9, &aBlock);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v56, v57, "[%s] Failed to create handle for local transfer", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v59, -1, -1);
    MEMORY[0x19400D804](v58, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v64(0);

}

void sub_18FDE8AA8(uint64_t a1, void *a2, void *a3, void *a4)
{
  void (*v7)(void *, void *, void *);
  id v8;
  id v9;
  id v10;

  v7 = *(void (**)(void *, void *, void *))(a1 + 32);
  swift_retain();
  v10 = a2;
  v8 = a3;
  v9 = a4;
  v7(a2, a3, a4);
  swift_release();

}

void sub_18FDE8B38(void *a1, void *a2, id a3, uint64_t a4, void *a5, uint64_t a6, void *a7, void (*a8)(uint64_t), uint64_t a9)
{
  uint64_t v16;
  BOOL v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  char *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  char v41;
  void (*v42)(uint64_t);

  if (!a1 || ((objc_opt_self(), (v16 = swift_dynamicCastObjCClass()) != 0) ? (v17 = a2 == 0) : (v17 = 1), v17))
  {
    if (a3)
    {
      v18 = a3;
      v19 = (void *)sub_1903D0124();

    }
    else
    {
      v19 = 0;
    }
    v37 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v19, 4);

    v38 = (void *)sub_1903D05A4();
    objc_msgSend(v37, sel_addInternalDebugDescription_, v38);

    swift_beginAccess();
    v39 = *(void **)(a4 + 16);
    v40 = *(void **)(a4 + 24);
    *(_QWORD *)(a4 + 16) = v37;
    *(_QWORD *)(a4 + 24) = 0;
    v41 = *(_BYTE *)(a4 + 32);
    *(_BYTE *)(a4 + 32) = 2;
    v26 = v37;
    sub_18FDECEC4(v39, v40, v41);
    a8(0);
    goto LABEL_15;
  }
  v20 = v16;
  v42 = a8;
  v21 = a6 + 16;
  swift_beginAccess();
  v23 = *(void **)(a4 + 16);
  v22 = *(void **)(a4 + 24);
  *(_QWORD *)(a4 + 16) = v20;
  *(_QWORD *)(a4 + 24) = a5;
  LOBYTE(v20) = *(_BYTE *)(a4 + 32);
  *(_BYTE *)(a4 + 32) = 1;
  v24 = a1;
  v25 = a5;
  v26 = a2;
  sub_18FDECEC4(v23, v22, v20);
  swift_beginAccess();
  v27 = MEMORY[0x19400D8B8](v21);
  if (!v27)
  {
LABEL_12:
    v42(1);

LABEL_15:
    return;
  }
  v28 = (char *)v27;
  v29 = objc_msgSend(a7, sel_uniqueID);
  if (v29)
  {
    v30 = v29;
    v31 = sub_1903D05C8();
    v33 = v32;

    v34 = &v28[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_createdShareInformation];
    v35 = *(void **)&v28[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_createdShareInformation];
    *(_QWORD *)v34 = a2;
    *((_QWORD *)v34 + 1) = v31;
    *((_QWORD *)v34 + 2) = v33;
    v36 = v26;
    sub_18FDEAAE0(v35);

    goto LABEL_12;
  }
  __break(1u);
}

void sub_18FDE8DAC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  char v29;
  uint64_t v30;
  char *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  char v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  void (*v50)(uint64_t);

  v49 = a8;
  v50 = a7;
  v48 = a6;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BEFE0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1903D0178();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FD7CAEC(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    if (a2)
    {
      v22 = a5 + 16;
      v23 = a2;
      v24 = sub_1903D013C();
      v26 = v25;
      swift_beginAccess();
      v27 = *(void **)(a4 + 16);
      v28 = *(void **)(a4 + 24);
      *(_QWORD *)(a4 + 16) = v24;
      *(_QWORD *)(a4 + 24) = v26;
      v29 = *(_BYTE *)(a4 + 32);
      *(_BYTE *)(a4 + 32) = 0;
      sub_18FDECEC4(v27, v28, v29);
      swift_beginAccess();
      v30 = MEMORY[0x19400D8B8](v22);
      if (v30)
      {
        v31 = (char *)v30;
        v47 = v23;
        v32 = objc_msgSend(v48, sel_uniqueID);
        if (!v32)
        {
          __break(1u);
          return;
        }
        v33 = v32;
        v34 = sub_1903D05C8();
        v36 = v35;

        v37 = &v31[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_createdShareInformation];
        v38 = *(void **)&v31[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_createdShareInformation];
        *(_QWORD *)v37 = a2;
        *((_QWORD *)v37 + 1) = v34;
        *((_QWORD *)v37 + 2) = v36;
        v39 = v47;
        v40 = v47;
        v23 = v39;
        sub_18FDEAAE0(v38);

      }
      v50(1);

      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    if (a3)
      goto LABEL_3;
LABEL_10:
    v21 = 0;
    goto LABEL_11;
  }
  sub_18FCD7F70((uint64_t)v15);
  if (!a3)
    goto LABEL_10;
LABEL_3:
  v20 = a3;
  v21 = (void *)sub_1903D0124();

LABEL_11:
  v41 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v21, 4);

  v42 = (void *)sub_1903D05A4();
  objc_msgSend(v41, sel_addInternalDebugDescription_, v42);

  swift_beginAccess();
  v43 = *(void **)(a4 + 16);
  v44 = *(void **)(a4 + 24);
  *(_QWORD *)(a4 + 16) = v41;
  *(_QWORD *)(a4 + 24) = 0;
  v45 = *(_BYTE *)(a4 + 32);
  *(_BYTE *)(a4 + 32) = 2;
  v46 = v41;
  sub_18FDECEC4(v43, v44, v45);
  v50(0);

}

uint64_t sub_18FDE90B8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, void *, void *);
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v17;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BEFE0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, void *, void *))(a1 + 32);
  if (a2)
  {
    sub_1903D0160();
    v12 = sub_1903D0178();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    v13 = sub_1903D0178();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  swift_retain();
  v14 = a3;
  v15 = a4;
  v11(v10, a3, a4);

  swift_release();
  return sub_18FCD7F70((uint64_t)v10);
}

uint64_t sub_18FDE91D0(uint64_t a1, void *a2, const void *a3)
{
  void (*v5)(uint64_t, unint64_t, uint64_t (*)(char), uint64_t);
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;

  v5 = *(void (**)(uint64_t, unint64_t, uint64_t (*)(char), uint64_t))(a1 + 32);
  swift_retain();
  v6 = a2;
  v7 = sub_1903D01B4();
  v9 = v8;

  v10 = _Block_copy(a3);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  v5(v7, v9, sub_18FDECEFC, v11);
  swift_release();
  sub_18FCD5938(v7, v9);
  return swift_release();
}

void sub_18FDE928C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;

  swift_beginAccess();
  v5 = *(unsigned __int8 *)(a2 + 32);
  if ((_DWORD)v5 == 255)
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 1);
    a3();

  }
  else
  {
    v8 = a2 + 16;
    v6 = *(void **)(a2 + 16);
    v7 = *(void **)(v8 + 8);
    sub_18FDEA90C(v6, v7, v5);
    ((void (*)(void *, void *, uint64_t))a3)(v6, v7, v5);
    sub_18FDECEC4(v6, v7, v5);
  }
}

void sub_18FDE9358(void *a1, _BYTE *a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t, void *, uint64_t), uint64_t a6, void *a7, uint64_t a8, unint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  void (*v26)(uint64_t, void *, uint64_t);
  id v27;
  uint64_t v28;

  *a2 = 1;
  objc_opt_self();
  v14 = swift_dynamicCastObjCClass();
  if (v14)
  {
    v15 = v14;
    v16 = a1;
    a3(0);
    v27 = v16;
    v17 = a7;
    a5(v15, a7, 1);

  }
  else
  {
    objc_msgSend(a7, sel_invalidate);
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v18 = sub_1903D0340();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain_n();
    v19 = sub_1903D0328();
    v20 = sub_1903D0940();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v26 = a5;
      v22 = swift_slowAlloc();
      v28 = v22;
      *(_DWORD *)v21 = 136315138;
      swift_bridgeObjectRetain();
      sub_18FCD5144(a8, a9, &v28);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FC92000, v19, v20, "[%s] Received non invitation message", v21, 0xCu);
      swift_arrayDestroy();
      v23 = v22;
      a5 = v26;
      MEMORY[0x19400D804](v23, -1, -1);
      MEMORY[0x19400D804](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v24 = sub_18FDDC794();
    a3(1);
    v25 = v24;
    a5((uint64_t)v24, 0, 2);

  }
}

void sub_18FDE95F8(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(id, _QWORD, uint64_t))
{
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20[2];

  v20[1] = *MEMORY[0x1E0C80C00];
  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v9 = sub_1903D0340();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain();
  v10 = a1;
  swift_bridgeObjectRetain();
  v11 = a1;
  v12 = sub_1903D0328();
  v13 = sub_1903D0940();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20[0] = v19;
    *(_DWORD *)v14 = 136315650;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a3, a4, v20);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 1024;
    sub_1903D0ACC();
    *(_WORD *)(v14 + 18) = 2112;
    if (a1)
    {
      v16 = a1;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      sub_1903D0ACC();
    }
    else
    {
      sub_1903D0ACC();
      v17 = 0;
    }
    *v15 = v17;

    _os_log_impl(&dword_18FC92000, v12, v13, "[%s] Failed to get invitation with didTimeout: %{BOOL}d error: %@", (uint8_t *)v14, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v19, -1, -1);
    MEMORY[0x19400D804](v14, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  v18 = sub_18FDDC794();
  a5(v18, 0, 2);

}

id sub_18FDE98F4()
{
  id result;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;

  result = PKPassKitBundle();
  if (result)
  {
    v1 = result;
    v2 = (void *)sub_1903D05A4();
    v3 = (void *)sub_1903D05A4();
    v4 = (void *)sub_1903D05A4();
    v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

    sub_1903D05C8();
    result = PKPassKitBundle();
    if (result)
    {
      v6 = result;
      v7 = (void *)sub_1903D05A4();
      v8 = (void *)sub_1903D05A4();
      v9 = (void *)sub_1903D05A4();
      v10 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, v8, v9);

      sub_1903D05C8();
      v11 = (void *)sub_1903D05A4();
      swift_bridgeObjectRelease();
      v12 = (void *)sub_1903D05A4();
      swift_bridgeObjectRelease();
      v13 = objc_msgSend((id)objc_opt_self(), sel_errorWithTitle_message_severity_, v11, v12, 5);

      return v13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_18FDE9AEC(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, unint64_t a7, void (*a8)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  void (*v23)(_QWORD, _QWORD, _QWORD);
  uint64_t v24;

  a4();
  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v14 = sub_1903D0340();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v15 = sub_1903D0328();
  v16 = sub_1903D0940();
  if (os_log_type_enabled(v15, v16))
  {
    v23 = a8;
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v24 = v18;
    *(_DWORD *)v17 = 136315394;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a6, a7, &v24);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a1, a2, &v24);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v15, v16, "[%s] %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v18, -1, -1);
    v19 = v17;
    a8 = v23;
    MEMORY[0x19400D804](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v20 = sub_18FDE98F4();
  if (a3)
    v21 = (void *)sub_1903D0124();
  else
    v21 = 0;
  objc_msgSend(v20, sel_setUnderlyingError_, v21, v23);

  v22 = v20;
  a8(v20, 0, 2);

}

void sub_18FDE9D70(char a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(_QWORD, _QWORD, _QWORD), uint64_t a8, void *a9, char a10, void *a11, void *a12)
{
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  _QWORD *v22;
  void *v23;
  void *v24;
  uint64_t aBlock;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  _QWORD *v30;

  if ((a1 & 1) == 0 || a2)
  {
    sub_18FDE9AEC(0xD000000000000016, 0x800000019045C690, a2, a3, a4, a5, a6, a7);
  }
  else
  {
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a3;
    *(_QWORD *)(v18 + 24) = a4;
    *(_BYTE *)(v18 + 32) = a10;
    *(_QWORD *)(v18 + 40) = a11;
    *(_QWORD *)(v18 + 48) = a12;
    *(_QWORD *)(v18 + 56) = a5;
    *(_QWORD *)(v18 + 64) = a6;
    *(_QWORD *)(v18 + 72) = a9;
    *(_QWORD *)(v18 + 80) = a7;
    *(_QWORD *)(v18 + 88) = a8;
    v29 = sub_18FDECBF4;
    v30 = (_QWORD *)v18;
    aBlock = MEMORY[0x1E0C809B0];
    v26 = 1107296256;
    v27 = sub_18FD57688;
    v28 = &block_descriptor_35;
    v24 = _Block_copy(&aBlock);
    v19 = a12;
    swift_bridgeObjectRetain();
    v20 = a9;
    swift_retain();
    swift_retain();
    v21 = a11;
    swift_release();
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = a3;
    v22[3] = a4;
    v22[4] = a5;
    v22[5] = a6;
    v22[6] = a7;
    v22[7] = a8;
    v29 = sub_18FDECC60;
    v30 = v22;
    aBlock = MEMORY[0x1E0C809B0];
    v26 = 1107296256;
    v27 = sub_18FDA4ED8;
    v28 = &block_descriptor_41_0;
    v23 = _Block_copy(&aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel_waitForMessageWithTimeout_messageHandler_invalidationHandler_, v24, v23, 60.0);
    _Block_release(v23);
    _Block_release(v24);
  }
}

void sub_18FDE9F98(void *a1, _BYTE *a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, unint64_t a11, void *a12, void (*a13)(uint64_t, uint64_t, _QWORD), uint64_t a14)
{
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  unint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, _QWORD);
  void *v49;
  void *v50;
  id v51;
  _QWORD *v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, _QWORD);
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t aBlock[7];

  v58 = a12;
  v63 = a13;
  v64 = a11;
  v65 = a10;
  v60 = a9;
  v61 = a8;
  v59 = sub_1903D0178();
  v19 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a3(1);
  *a2 = 1;
  v62 = a6;
  ((void (*)(uint64_t))a5)(v22);
  objc_opt_self();
  v23 = swift_dynamicCastObjCClass();
  if (!v23)
  {
    sub_18FDE9AEC(0xD000000000000018, 0x800000019045C670, 0, a5, v62, v65, v64, v63);
    return;
  }
  v24 = (void *)v23;
  v57 = a14;
  v25 = v64;
  v26 = a1;
  v27 = objc_msgSend(v24, "url");
  sub_1903D0160();

  v28 = sub_1903D013C();
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v59);
  v31 = (void *)objc_opt_self();
  v59 = v28;
  v32 = (void *)sub_1903D05A4();
  v33 = objc_msgSend(v31, sel_existingChannelForURL_, v32);

  v34 = v60;
  v35 = v61;
  v36 = objc_msgSend(v35, sel_targetDevice);
  if (v36)
  {
    v37 = v36;

    v38 = v25;
    if ((objc_msgSend(v37, sel_respondsToSelector_, sel_supportsSharingInAChain) & 1) != 0)
      v39 = objc_msgSend(v37, sel_supportsSharingInAChain);
    else
      v39 = 0;
    v40 = v65;
    swift_unknownObjectRelease();
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v41 = sub_1903D0340();
    __swift_project_value_buffer(v41, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain_n();
    v42 = sub_1903D0328();
    v43 = sub_1903D0940();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = (void *)swift_slowAlloc();
      LODWORD(v61) = v39;
      v60 = v45;
      aBlock[0] = (uint64_t)v45;
      *(_DWORD *)v44 = 136315394;
      swift_bridgeObjectRetain();
      v66 = sub_18FCD5144(v40, v38, aBlock);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 12) = 1024;
      LODWORD(v66) = v61 ^ 1;
      sub_1903D0ACC();
      _os_log_impl(&dword_18FC92000, v42, v43, "[%s] Received invitation url and using legacy flow: %{BOOL}d", (uint8_t *)v44, 0x12u);
      v46 = v60;
      swift_arrayDestroy();
      LOBYTE(v39) = (_BYTE)v61;
      MEMORY[0x19400D804](v46, -1, -1);
      MEMORY[0x19400D804](v44, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v47 = v57;
    v48 = v63;
    if ((v39 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v49 = (void *)objc_opt_self();
      sub_18FCDE8A0();
      v50 = (void *)sub_1903D097C();
      v51 = objc_msgSend(v49, sel_createHandleForDescriptor_queue_, v33, v50);

      if (v51)
      {
        v52 = (_QWORD *)swift_allocObject();
        v52[2] = v48;
        v52[3] = v47;
        v52[4] = v51;
        v52[5] = a5;
        v53 = v65;
        v52[6] = v62;
        v52[7] = v53;
        v52[8] = v38;
        aBlock[4] = (uint64_t)sub_18FDECCAC;
        aBlock[5] = (uint64_t)v52;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_18FDB0DD4;
        aBlock[3] = (uint64_t)&block_descriptor_47;
        v54 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        v55 = v51;
        swift_retain();
        swift_release();
        objc_msgSend(v55, sel_attachAndFetchMessage_, v54);

        _Block_release(v54);
        return;
      }
      sub_18FDE9AEC(0xD00000000000001DLL, 0x800000019045C6D0, 0, a5, v62, v65, v38, v48);
    }
    else
    {
      objc_msgSend(v58, sel_invalidate);
      v48(v59, v30, 0);
      swift_bridgeObjectRelease();
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_18FDEA540(void *a1, int a2, void (*a3)(uint64_t, id, uint64_t), int a4, id a5, void (*a6)(void), uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;

  if (a1 && (objc_opt_self(), (v15 = swift_dynamicCastObjCClass()) != 0))
  {
    v16 = v15;
    v17 = a1;
    v18 = a5;
    a3(v16, a5, 1);

  }
  else
  {
    objc_msgSend(a5, sel_invalidate);
    sub_18FDE9AEC(0xD000000000000020, 0x800000019045C6F0, 0, a6, a7, a8, a9, (void (*)(_QWORD, _QWORD, _QWORD))a3);
  }
}

uint64_t sub_18FDEA650(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(_QWORD, _QWORD, _QWORD))
{
  sub_1903D0BF8();
  sub_1903D067C();
  swift_bridgeObjectRelease();
  sub_1903D067C();
  sub_18FDE9AEC(0, 0xE000000000000000, 0, a2, a3, a4, a5, a6);
  return swift_bridgeObjectRelease();
}

void sub_18FDEA754(void *a1, void *a2, char a3, uint64_t a4, unint64_t a5, void (*a6)(_QWORD, _QWORD, _QWORD))
{
  sub_18FDEB140(a1, a2, a3 & 1, a4, a5, a6);
}

void sub_18FDEA75C(char a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD v18[6];

  if ((a1 & 1) != 0
    || (v6 = *(void **)(v3 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_createdShareInformation)) == 0)
  {
    a2();
  }
  else
  {
    v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_context);
    v9 = *(void **)(v7 + 48);
    v8 = *(void **)(v7 + 56);
    sub_18FDEAB0C(v6);
    v10 = v8;
    v11 = v9;
    v12 = objc_msgSend(v11, sel_targetDevice);
    if (v12)
    {
      v13 = v12;

      v14 = (void *)sub_1903D05A4();
      swift_bridgeObjectRelease();
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = a2;
      *(_QWORD *)(v15 + 24) = a3;
      v18[4] = sub_18FCDC3A8;
      v18[5] = v15;
      v18[0] = MEMORY[0x1E0C809B0];
      v18[1] = 1107296256;
      v18[2] = sub_18FCDDD28;
      v18[3] = &block_descriptor_31;
      v16 = _Block_copy(v18);
      v17 = v6;
      swift_retain();
      swift_release();
      objc_msgSend(v13, sel_revokeShareForPassIdentifier_share_shouldCascade_completion_, v14, v17, 0, v16);
      _Block_release(v16);
      swift_unknownObjectRelease();

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t method lookup function for ProvisioningCarKeyStepRequestInvite()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningCarKeyStepRequestInvite.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

id sub_18FDEA90C(id result, id a2, char a3)
{
  id v3;

  switch(a3)
  {
    case 2:
      return result;
    case 1:
      v3 = result;
      result = a2;
      return result;
    case 0:
      return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void destroy for ProvisioningCarKeyStepRequestInvite.RequestInviteResult(uint64_t a1)
{
  sub_18FD785A4(*(id *)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s11PassKitCore35ProvisioningCarKeyStepRequestInviteC19RequestInviteResultOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_18FDEA90C(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ProvisioningCarKeyStepRequestInvite.RequestInviteResult(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_18FDEA90C(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_18FD785A4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ProvisioningCarKeyStepRequestInvite.RequestInviteResult(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_18FD785A4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProvisioningCarKeyStepRequestInvite.RequestInviteResult(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ProvisioningCarKeyStepRequestInvite.RequestInviteResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProvisioningCarKeyStepRequestInvite.RequestInviteResult()
{
  return &type metadata for ProvisioningCarKeyStepRequestInvite.RequestInviteResult;
}

void *sub_18FDEAAE0(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_18FDEAB0C(void *result)
{
  id v1;

  if (result)
  {
    v1 = result;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_18FDEAB38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

void sub_18FDEAB74(void *a1, void *a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t ObjectType;
  void (*v41)(id, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];

  if ((a3 & 1) != 0)
  {
    sub_18FD59B20(a1);
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v23 = sub_1903D0340();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain();
    sub_18FD59AF4(a1, a2, 1);
    swift_bridgeObjectRetain();
    sub_18FD59AF4(a1, a2, 1);
    v24 = sub_1903D0328();
    v25 = sub_1903D0940();
    if (os_log_type_enabled(v24, v25))
    {
      v48 = a8;
      v26 = swift_slowAlloc();
      v27 = (_QWORD *)swift_slowAlloc();
      v46 = a7;
      v28 = swift_slowAlloc();
      v50[0] = v28;
      *(_DWORD *)v26 = 136315394;
      swift_bridgeObjectRetain();
      sub_18FCD5144(a4, a5, v50);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2112;
      sub_18FDDC998();
      swift_allocError();
      *v29 = a1;
      sub_18FD59B20(a1);
      v49 = _swift_stdlib_bridgeErrorToNSError();
      sub_1903D0ACC();
      *v27 = v49;
      sub_18FD59A9C(a1, a2, 1);
      sub_18FD59A9C(a1, a2, 1);
      _os_log_impl(&dword_18FC92000, v24, v25, "[%s] Failed to request invitation with error: %@", (uint8_t *)v26, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v27, -1, -1);
      swift_arrayDestroy();
      v30 = v28;
      a7 = v46;
      MEMORY[0x19400D804](v30, -1, -1);
      v31 = v26;
      a8 = v48;
      MEMORY[0x19400D804](v31, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_18FD59A9C(a1, a2, 1);
      sub_18FD59A9C(a1, a2, 1);
    }

    v37 = sub_18FDDC794();
    v38 = (void *)sub_1903D05A4();
    objc_msgSend(v37, sel_addInternalDebugDescription_, v38);

    swift_beginAccess();
    if (MEMORY[0x19400D8B8](a6 + 16))
    {
      v39 = *(_QWORD *)(a6 + 24);
      ObjectType = swift_getObjectType();
      v41 = *(void (**)(id, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 32);
      v42 = v37;
      v41(v37, 0, 2, a7, a8, ObjectType, v39);

      swift_unknownObjectRelease();
    }
    else
    {

    }
    sub_18FD59A9C(a1, a2, 1);
  }
  else
  {
    v15 = qword_1EE1BCFE8;
    v43 = a1;
    v44 = a2;
    if (v15 != -1)
      swift_once();
    v16 = sub_1903D0340();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain_n();
    v17 = sub_1903D0328();
    v18 = sub_1903D0940();
    if (os_log_type_enabled(v17, v18))
    {
      v45 = a7;
      v19 = (uint8_t *)swift_slowAlloc();
      v47 = a8;
      v20 = swift_slowAlloc();
      v50[0] = v20;
      *(_DWORD *)v19 = 136315138;
      swift_bridgeObjectRetain();
      sub_18FCD5144(a4, a5, v50);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FC92000, v17, v18, "[%s] Successfully requested invitation", v19, 0xCu);
      swift_arrayDestroy();
      v21 = v20;
      a8 = v47;
      MEMORY[0x19400D804](v21, -1, -1);
      v22 = v19;
      a7 = v45;
      MEMORY[0x19400D804](v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    if (MEMORY[0x19400D8B8](a6 + 16))
    {
      v32 = *(_QWORD *)(a6 + 24);
      v33 = swift_getObjectType();
      v34 = *(void (**)(void *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 32);
      v35 = v43;
      v36 = v44;
      v34(a1, a2, 1, a7, a8, v33, v32);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void sub_18FDEB140(void *a1, void *a2, char a3, uint64_t a4, unint64_t a5, void (*a6)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void (*v35)(_QWORD, _QWORD, _QWORD);
  void (*v36)(_QWORD, _QWORD, _QWORD);
  uint64_t v37;
  uint64_t v38;

  if ((a3 & 1) != 0)
  {
    sub_18FD59B20(a1);
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v21 = sub_1903D0340();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain();
    sub_18FD59AF4(a1, a2, 1);
    swift_bridgeObjectRetain();
    sub_18FD59AF4(a1, a2, 1);
    v22 = sub_1903D0328();
    v23 = sub_1903D0940();
    if (os_log_type_enabled(v22, v23))
    {
      v36 = a6;
      v24 = swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v38 = v26;
      *(_DWORD *)v24 = 136315394;
      swift_bridgeObjectRetain();
      sub_18FCD5144(a4, a5, &v38);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2112;
      sub_18FDDC998();
      swift_allocError();
      *v27 = a1;
      sub_18FD59B20(a1);
      v37 = _swift_stdlib_bridgeErrorToNSError();
      sub_1903D0ACC();
      *v25 = v37;
      sub_18FD59A9C(a1, a2, 1);
      sub_18FD59A9C(a1, a2, 1);
      _os_log_impl(&dword_18FC92000, v22, v23, "[%s] Failed to request invitation with error: %@", (uint8_t *)v24, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v25, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v26, -1, -1);
      v28 = v24;
      a6 = v36;
      MEMORY[0x19400D804](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_18FD59A9C(a1, a2, 1);
      sub_18FD59A9C(a1, a2, 1);
    }

    v31 = sub_18FDDC794();
    v32 = (void *)sub_1903D05A4();
    objc_msgSend(v31, sel_addInternalDebugDescription_, v32);

    v33 = v31;
    a6(v31, 0, 2);

    sub_18FD59A9C(a1, a2, 1);
  }
  else
  {
    v11 = qword_1EE1BCFE8;
    v12 = a1;
    v13 = a2;
    if (v11 != -1)
      swift_once();
    v14 = sub_1903D0340();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain_n();
    v15 = sub_1903D0328();
    v16 = sub_1903D0940();
    if (os_log_type_enabled(v15, v16))
    {
      v35 = a6;
      v17 = (uint8_t *)swift_slowAlloc();
      v34 = v13;
      v18 = swift_slowAlloc();
      v38 = v18;
      *(_DWORD *)v17 = 136315138;
      swift_bridgeObjectRetain();
      sub_18FCD5144(a4, a5, &v38);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FC92000, v15, v16, "[%s] Successfully requested invitation", v17, 0xCu);
      swift_arrayDestroy();
      v19 = v18;
      v13 = v34;
      MEMORY[0x19400D804](v19, -1, -1);
      v20 = v17;
      a6 = v35;
      MEMORY[0x19400D804](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v29 = v12;
    v30 = v13;
    a6(a1, a2, 1);

  }
}

uint64_t sub_18FDEB64C(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  void *v10;
  id v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t ObjectType;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v31;
  uint64_t v32;

  v10 = *(void **)(a2 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_sharedState);
  swift_retain();
  swift_retain();
  v11 = objc_msgSend(v10, "sid");
  v12 = (void *)sub_1903D05C8();
  v14 = v13;

  if (!*(_BYTE *)(a2 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_credential + 24))
  {
    v18 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_credential), sel_remoteCredential);
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(v18, sel_serialNumber);
      if (v20)
      {
        v21 = v20;
        v22 = sub_1903D05C8();
        v24 = v23;

        v25 = objc_msgSend(v19, sel_passTypeIdentifier);
        if (v25)
        {
          v26 = v25;
          v31 = (char *)sub_1903D05C8();
          v32 = v22;
          v28 = v27;

          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          v29 = a1;
          sub_18FD59F54(v31, v28, v32, v24, (uint64_t)v29, v12, v14, v29, a3, a4, a5);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_release_n();
          return swift_release_n();
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
  }
  swift_bridgeObjectRelease();
  v15 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
  swift_beginAccess();
  if (MEMORY[0x19400D8B8](a3 + 16))
  {
    v16 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(id, _QWORD, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t))(v16 + 32))(v15, 0, 2, a4, a5, ObjectType, v16);
    swift_release();

    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();

  }
  return swift_release();
}

void sub_18FDEB8C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t ObjectType;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  id v32;
  _QWORD *v33;
  void *v34;
  uint64_t aBlock;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  _QWORD *v40;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v11 = *(void **)(a2 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_sharedState);
  swift_retain();
  swift_retain();
  v12 = objc_msgSend(v11, "sid");
  v13 = sub_1903D05C8();
  v15 = v14;

  if (!*(_BYTE *)(a2 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_credential + 24))
  {
    v19 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_credential), sel_remoteCredential);
    if (v19)
    {
      v20 = v19;
      v21 = objc_msgSend(v19, sel_serialNumber);
      if (v21)
      {
        v22 = v21;
        sub_1903D05C8();

        v23 = objc_msgSend(v20, sel_passTypeIdentifier);
        if (v23)
        {
          v24 = v23;
          sub_1903D05C8();

          v25 = objc_allocWithZone((Class)PKSharingInvitationRequestMessage);
          v26 = (void *)sub_1903D05A4();
          swift_bridgeObjectRelease();
          v27 = (void *)sub_1903D05A4();
          swift_bridgeObjectRelease();
          v28 = objc_msgSend(v25, sel_initWithPassTypeIdentifier_passSerialNumber_, v26, v27);

          v29 = (_QWORD *)swift_allocObject();
          v29[2] = sub_18FD5A984;
          v29[3] = v10;
          v29[4] = a1;
          v29[5] = v13;
          v29[6] = v15;
          v39 = sub_18FDECA54;
          v40 = v29;
          v30 = MEMORY[0x1E0C809B0];
          aBlock = MEMORY[0x1E0C809B0];
          v36 = 1107296256;
          v37 = sub_18FD57688;
          v38 = &block_descriptor_10_4;
          v31 = _Block_copy(&aBlock);
          swift_retain();
          v32 = a1;
          swift_bridgeObjectRetain();
          swift_release();
          v33 = (_QWORD *)swift_allocObject();
          v33[2] = v13;
          v33[3] = v15;
          v33[4] = sub_18FD5A984;
          v33[5] = v10;
          v39 = sub_18FDECAAC;
          v40 = v33;
          aBlock = v30;
          v36 = 1107296256;
          v37 = sub_18FD577B8;
          v38 = &block_descriptor_16_2;
          v34 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          objc_msgSend(v32, sel_sendMessageAndWaitForReply_timeout_messageHandler_invalidationHandler_, v28, v31, v34, 0.0);
          _Block_release(v34);
          _Block_release(v31);
          swift_release();

          return;
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
  }
  swift_bridgeObjectRelease();
  v16 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
  swift_beginAccess();
  if (MEMORY[0x19400D8B8](a3 + 16))
  {
    v17 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(id, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 32))(v16, 0, 2, a4, a5, ObjectType, v17);
    swift_release();

    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();

  }
}

uint64_t sub_18FDEBC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t ObjectType;
  void *v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t aBlock[7];

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a6;
  v12[3] = a7;
  v12[4] = a8;
  v13 = *(void **)(a5 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_sharedState);
  swift_retain();
  swift_retain();
  v14 = objc_msgSend(v13, "sid");
  v15 = sub_1903D05C8();
  v48 = v16;
  v49 = v15;

  v17 = *(_QWORD *)(a5 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_context);
  swift_beginAccess();
  v47 = *(_BYTE *)(v17 + 64);
  v18 = *(void **)(v17 + 72);
  v19 = *(void **)(v17 + 80);
  v20 = (void *)objc_opt_self();
  v50 = v19;
  v21 = v18;
  v22 = (void *)sub_1903D05A4();
  v23 = objc_msgSend(v20, sel_createWithRemoteAddress_, v22);

  v24 = (void *)objc_opt_self();
  sub_18FCDE8A0();
  v25 = (void *)sub_1903D097C();
  v26 = objc_msgSend(v24, sel_createHandleForDescriptor_queue_, v23, v25);

  if (v26)
  {
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v26;
    v28 = objc_allocWithZone((Class)PKSharingExternalInvitationRequestMessage);
    v29 = v26;
    swift_bridgeObjectRetain();
    v30 = (void *)sub_1903D05A4();
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(v28, sel_initWithSharingSessionIdentifier_, v30);

    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = sub_18FDECAE0;
    *(_QWORD *)(v32 + 24) = v27;
    *(_QWORD *)(v32 + 32) = v49;
    *(_QWORD *)(v32 + 40) = v48;
    *(_QWORD *)(v32 + 48) = sub_18FDED018;
    *(_QWORD *)(v32 + 56) = v12;
    *(_QWORD *)(v32 + 64) = v29;
    *(_BYTE *)(v32 + 72) = v47;
    *(_QWORD *)(v32 + 80) = v21;
    *(_QWORD *)(v32 + 88) = v19;
    aBlock[4] = (uint64_t)sub_18FDECB68;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_18FCDDD28;
    aBlock[3] = (uint64_t)&block_descriptor_29_0;
    v33 = _Block_copy(aBlock);
    v34 = v21;
    v35 = v50;
    v36 = v29;
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v36, sel_sendMessage_completion_, v31, v33);
    _Block_release(v33);

    swift_release();
    v21 = v31;
  }
  else
  {
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v37 = sub_1903D0340();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain();
    v38 = sub_1903D0328();
    v39 = sub_1903D0940();
    v46 = v23;
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      aBlock[0] = v41;
      *(_DWORD *)v40 = 136315138;
      swift_bridgeObjectRetain();
      aBlock[6] = sub_18FCD5144(v49, v48, aBlock);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FC92000, v38, v39, "[%s] Failed to acquire handle", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v41, -1, -1);
      MEMORY[0x19400D804](v40, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v42 = sub_18FDE98F4();
    swift_beginAccess();
    if (MEMORY[0x19400D8B8](a6 + 16))
    {
      v43 = *(_QWORD *)(a6 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(id, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 32))(v42, 0, 2, a7, a8, ObjectType, v43);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }

  return swift_release();
}

void sub_18FDEC18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t ObjectType;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  char v42;
  id v43;
  id v44;
  uint64_t v45;
  char v46;
  void *v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  void *v52;
  _QWORD aBlock[6];

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v9 = *(void **)(a1 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_sharedState);
  swift_retain();
  swift_retain();
  v10 = objc_msgSend(v9, "sid");
  v11 = sub_1903D05C8();
  v13 = v12;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_credential + 24))
    goto LABEL_2;
  v17 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_credential), sel_localAppletSubcredentialPassCredential);
  if (!v17)
    goto LABEL_2;
  v18 = v17;
  v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_context);
  swift_beginAccess();
  v20 = *(_QWORD *)(v19 + 144);
  if (!v20)
  {

    goto LABEL_2;
  }
  v51 = *(_QWORD *)(v19 + 136);
  swift_bridgeObjectRetain();
  v21 = objc_msgSend(v18, sel_paymentPass);
  v22 = v18;
  if (!v21)
  {

    swift_bridgeObjectRelease();
LABEL_2:
    swift_bridgeObjectRelease();
    v14 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
    swift_beginAccess();
    if (MEMORY[0x19400D8B8](a2 + 16))
    {
      v15 = *(_QWORD *)(a2 + 24);
      ObjectType = swift_getObjectType();
      (*(void (**)(id, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, 0, 2, a3, a4, ObjectType, v15);
      swift_release();

      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();

    }
    return;
  }
  v23 = v21;
  v45 = v20;
  v47 = v22;
  v46 = *(_BYTE *)(v19 + 40);
  v24 = *(void **)(v19 + 48);
  v52 = *(void **)(v19 + 56);
  swift_beginAccess();
  v42 = *(_BYTE *)(v19 + 64);
  v25 = *(void **)(v19 + 72);
  v26 = *(void **)(v19 + 80);
  v49 = v25;
  sub_18FCDE8A0();
  v41 = v26;
  v44 = v26;
  v27 = v24;
  v28 = v23;
  v29 = v27;
  v43 = v52;
  v50 = v49;
  v30 = (void *)sub_1903D097C();
  v31 = objc_msgSend(objc_allocWithZone((Class)PKSharedPassSharesController), sel_initWithPass_webService_paymentServiceProvider_queue_, v28, v29, 0, v30);

  v48 = v31;
  if (v31)
  {
    v32 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = v11;
    *(_QWORD *)(v33 + 24) = v13;
    *(_QWORD *)(v33 + 32) = v31;
    *(_BYTE *)(v33 + 40) = v29 != v50;
    *(_BYTE *)(v33 + 48) = v42;
    *(_QWORD *)(v33 + 56) = v50;
    *(_QWORD *)(v33 + 64) = v41;
    *(_QWORD *)(v33 + 72) = v28;
    *(_QWORD *)(v33 + 80) = v51;
    *(_QWORD *)(v33 + 88) = v45;
    *(_BYTE *)(v33 + 96) = v46;
    *(_QWORD *)(v33 + 104) = v29;
    *(_QWORD *)(v33 + 112) = v52;
    *(_QWORD *)(v33 + 120) = v32;
    *(_QWORD *)(v33 + 128) = sub_18FDED018;
    *(_QWORD *)(v33 + 136) = v8;
    aBlock[4] = sub_18FDECD70;
    aBlock[5] = v33;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FDF4F30;
    aBlock[3] = &block_descriptor_60;
    v34 = _Block_copy(aBlock);
    v35 = v28;
    v36 = v29;
    v37 = v43;
    v38 = v50;
    v39 = v44;
    v40 = v48;
    swift_retain();
    swift_release();
    objc_msgSend(v40, sel_updateSharesWithCompletion_, v34);
    _Block_release(v34);
    swift_release();

  }
  else
  {
    swift_release();
    swift_release();
    __break(1u);
  }
}

void sub_18FDEC5E8(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  NSObject *log;
  os_log_type_t type;
  uint64_t v24;
  uint64_t v25;

  v4 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(unsigned __int8 *)(a1 + 32);
  v8 = qword_1EE1BCFE8;
  swift_retain_n();
  swift_retain_n();
  if (v8 != -1)
    swift_once();
  v9 = sub_1903D0340();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EE1BF740);
  v10 = a2;
  sub_18FD96260(v4, v3, v5, v6, v7);
  v11 = (char *)v10;
  sub_18FD96260(v4, v3, v5, v6, v7);
  v12 = sub_1903D0328();
  v13 = sub_1903D0940();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v25 = v24;
    *(_DWORD *)v14 = 136315394;
    type = v13;
    v15 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC11PassKitCore35ProvisioningCarKeyStepRequestInvite_sharedState], "sid");
    v16 = v11;
    v17 = sub_1903D05C8();
    log = v12;
    v19 = v18;

    sub_18FCD5144(v17, v19, &v25);
    sub_1903D0ACC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    sub_18FD96260(v4, v3, v5, v6, v7);
    v20 = sub_1903D061C();
    sub_18FCD5144(v20, v21, &v25);
    sub_1903D0ACC();
    swift_bridgeObjectRelease();
    sub_18FD785F8(v4, v3, v5, v6, v7);
    sub_18FD785F8(v4, v3, v5, v6, v7);
    v12 = log;
    _os_log_impl(&dword_18FC92000, log, type, "[%s] Requesting invite for configuration: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v24, -1, -1);
    MEMORY[0x19400D804](v14, -1, -1);
  }
  else
  {

    sub_18FD785F8(v4, v3, v5, v6, v7);
    sub_18FD785F8(v4, v3, v5, v6, v7);
  }

  __asm { BR              X9 }
}

uint64_t sub_18FDECA20()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_18FDECA54(void *a1, _BYTE *a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;

  sub_18FDE9358(a1, a2, a3, a4, *(void (**)(uint64_t, void *, uint64_t))(v4 + 16), *(_QWORD *)(v4 + 24), *(void **)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48));
}

uint64_t sub_18FDECA80()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_18FDECAAC(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_18FDE95F8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(id, _QWORD, uint64_t))(v2 + 32));
}

uint64_t sub_18FDECABC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_18FDECAE0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_closeWithCompletion_, 0);
  return objc_msgSend(v1, sel_invalidate);
}

uint64_t sub_18FDECB1C()
{
  id *v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_18FDECB68(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_18FDE9D70(a1, a2, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void (**)(_QWORD, _QWORD, _QWORD))(v2 + 48), *(_QWORD *)(v2 + 56), *(void **)(v2 + 64), *(_BYTE *)(v2 + 72), *(void **)(v2 + 80), *(void **)(v2 + 88));
}

uint64_t sub_18FDECBA8()
{
  id *v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_18FDECBF4(void *a1, _BYTE *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;

  sub_18FDE9F98(a1, a2, a3, a4, *(void (**)(void))(v4 + 16), *(_QWORD *)(v4 + 24), *(unsigned __int8 *)(v4 + 32), *(void **)(v4 + 40), *(void **)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), *(void **)(v4 + 72), *(void (**)(uint64_t, uint64_t, _QWORD))(v4 + 80), *(_QWORD *)(v4 + 88));
}

uint64_t sub_18FDECC2C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FDECC60(uint64_t a1)
{
  uint64_t v1;

  return sub_18FDEA650(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 48));
}

uint64_t sub_18FDECC70()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_18FDECCAC(void *a1, int a2)
{
  uint64_t v2;

  sub_18FDEA540(a1, a2, *(void (**)(uint64_t, id, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(id *)(v2 + 32), *(void (**)(void))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_18FDECCE0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18FDECD04()
{
  id *v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_18FDECD70()
{
  uint64_t v0;

  sub_18FDE7FD0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40), *(_BYTE *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64), *(void **)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 96), *(void **)(v0 + 104), *(void **)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
}

uint64_t sub_18FDECDCC()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255)
    sub_18FD785A4(*(id *)(v0 + 16), *(id *)(v0 + 24), v1);
  return swift_deallocObject();
}

uint64_t sub_18FDECDFC()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_18FDECE68(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  LOBYTE(v5) = *(_BYTE *)(v4 + 56);
  sub_18FDE84AC(a1, a2, a3, a4, *(unsigned __int8 *)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 32), *(void **)(v4 + 40), *(_QWORD *)(v4 + 48), v5, *(void **)(v4 + 64), *(void **)(v4 + 72), *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 96), *(void **)(v4 + 104), *(void **)(v4 + 112));
}

void sub_18FDECEB8(uint64_t a1)
{
  uint64_t v1;

  sub_18FDE928C(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

void sub_18FDECEC4(id a1, id a2, char a3)
{
  if (a3 != -1)
    sub_18FD785A4(a1, a2, a3);
}

uint64_t sub_18FDECED8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_18FDECEFC(char a1)
{
  uint64_t v1;

  return sub_18FD57728(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_18FDECF04()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_18FDECF40(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_18FDE8DAC(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32), *(void (**)(uint64_t))(v3 + 40), *(_QWORD *)(v3 + 48));
}

uint64_t sub_18FDECF50()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_18FDECF94(void *a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_18FDE8B38(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(void **)(v3 + 40), *(void (**)(uint64_t))(v3 + 48), *(_QWORD *)(v3 + 56));
}

uint64_t sub_18FDED01C(uint64_t a1)
{
  return sub_18FDED168(a1, qword_1EE1C0768);
}

uint64_t static PKSignposter.provisioning.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_18FDED0A0(&qword_1EE1BD010, (uint64_t)qword_1EE1C0768, a1);
}

uint64_t sub_18FDED060(uint64_t a1)
{
  return sub_18FDED168(a1, qword_1EE1C0780);
}

uint64_t static PKSignposter.appIntents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_18FDED0A0(&qword_1EE1BD018, (uint64_t)qword_1EE1C0780, a1);
}

uint64_t sub_18FDED0A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1903D031C();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_18FDED108(uint64_t a1)
{
  return sub_18FDED168(a1, qword_1EE1C0798);
}

uint64_t static PKSignposter.glyph.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_18FDED0A0(&qword_1EE1BD020, (uint64_t)qword_1EE1C0798, a1);
}

uint64_t sub_18FDED140(uint64_t a1)
{
  return sub_18FDED168(a1, qword_1EE1C07B0);
}

uint64_t sub_18FDED168(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1903D031C();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1903D0310();
}

uint64_t static PKSignposter.stateMachine.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_18FDED0A0(&qword_1EE1BD028, (uint64_t)qword_1EE1C07B0, a1);
}

ValueMetadata *type metadata accessor for PKSignposter()
{
  return &type metadata for PKSignposter;
}

__n128 ProvisioningStepHomeKey.__allocating_init(context:credential:sharedState:)(uint64_t a1, __n128 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  __n128 result;

  v6 = swift_allocObject();
  v7 = a2[1].n128_u64[0];
  v8 = a2[1].n128_u8[8];
  *(_QWORD *)(v6 + 16) = a1;
  result = *a2;
  *(__n128 *)(v6 + 24) = *a2;
  *(_QWORD *)(v6 + 40) = v7;
  *(_BYTE *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 56) = a3;
  return result;
}

uint64_t ProvisioningStepHomeKey.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 40) = v4;
  *(_BYTE *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = a3;
  return v3;
}

uint64_t ProvisioningStepHomeKey.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return v0;
}

uint64_t ProvisioningStepHomeKey.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return swift_deallocClassInstance();
}

__n128 sub_18FDED2FC@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  __n128 result;

  type metadata accessor for ProvisioningStepHomeKey();
  v8 = swift_allocObject();
  v9 = a2[1].n128_u64[0];
  v10 = a2[1].n128_u8[8];
  *(_QWORD *)(v8 + 16) = a1;
  result = *a2;
  *(__n128 *)(v8 + 24) = *a2;
  *(_QWORD *)(v8 + 40) = v9;
  *(_BYTE *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 56) = a3;
  *a4 = v8;
  return result;
}

uint64_t type metadata accessor for ProvisioningStepHomeKey()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningStepHomeKey()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningStepHomeKey.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_18FDED394(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_18FCDC600(0, &qword_1EE1C07C8);
    v4 = sub_1903D0784();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_18FDED420(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v21 = a4;
  v8 = sub_1903D03B8();
  v24 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1903D03D0();
  v22 = *(_QWORD *)(v11 - 8);
  v23 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v14 = (void *)sub_1903D097C();
  v15 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = v21;
  v16[5] = a5;
  v16[6] = a2;
  aBlock[4] = sub_18FDEDED4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = &block_descriptor_13_5;
  v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v18 = a2;
  swift_release();
  sub_1903D03C4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCDC494();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
  sub_18FCDC4DC();
  sub_1903D0B38();
  MEMORY[0x19400AF6C](0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v13, v23);
}

void sub_18FDED684(uint64_t a1, unint64_t a2, void (*a3)(id, uint64_t), uint64_t a4, void *a5)
{
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  int v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  id DefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  unint64_t v31;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v9 = Strong;
    if (a2)
    {
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        if (sub_1903D0D00())
        {
LABEL_5:
          if ((a2 & 0xC000000000000001) != 0)
          {
            v11 = (id)MEMORY[0x19400B200](0, a2);
          }
          else
          {
            if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_28;
            }
            v11 = *(id *)(a2 + 32);
          }
          v12 = v11;
          swift_bridgeObjectRelease();
          v13 = *(_QWORD *)(v9 + 16);
          swift_beginAccess();
          v14 = *(unsigned __int8 *)(v13 + 64);
          v15 = objc_msgSend(v12, sel_localizedDescription);
          if (!v15)
          {
            sub_1903D05C8();
            v15 = (id)sub_1903D05A4();
            swift_bridgeObjectRelease();
          }
          v16 = PKPaymentSetupMoreInfoItemDictionaryForHomeExpress(v15, v14 == 1);

          if (v16)
          {
            sub_1903D04E4();

            v17 = (void *)sub_1903D04CC();
            swift_bridgeObjectRelease();
          }
          else
          {
            v17 = 0;
          }
          v18 = objc_msgSend(objc_allocWithZone((Class)PKPaymentSetupMoreInfoItem), sel_initWithMoreInfoDictionary_, v17);

          if (v18)
          {
            if (a2 >> 62)
            {
              sub_18FCDC600(0, &qword_1EE1C0D90);
              swift_bridgeObjectRetain();
              v21 = v12;
              v20 = sub_1903D0CF4();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRetain();
              v19 = v12;
              sub_1903D0EEC();
              sub_18FCDC600(0, &qword_1EE1C0D90);
              v20 = a2;
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD540);
            v22 = swift_allocObject();
            *(_OWORD *)(v22 + 16) = xmmword_190436510;
            *(_QWORD *)(v22 + 32) = v18;
            v31 = v22;
            sub_1903D079C();
            v23 = v18;
            v24 = sub_18FD4FE50(MEMORY[0x1E0DEE9D8]);
            DefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0 = _s11PassKitCore19SEProvisionedPassesC07primaryA06passes13moreInfoItems24externalProvisioningMode027suppressMakeDefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0(v12, v20, v31, 0, 2u, v24, 0, 0);
            v26 = DefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0;
            a3(DefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0, 0);

LABEL_24:
            swift_release();
            return;
          }
LABEL_28:
          __break(1u);
          return;
        }
      }
      else
      {
        v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v10)
          goto LABEL_5;
      }
      swift_bridgeObjectRelease();
    }
    if (a5)
    {
      v27 = a5;
      v28 = (void *)sub_1903D0124();

    }
    else
    {
      v28 = 0;
    }
    v29 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v28, 5);

    v30 = (void *)sub_1903D05A4();
    objc_msgSend(v29, sel_addInternalDebugDescription_, v30);

    v26 = v29;
    a3(v29, 1);
    goto LABEL_24;
  }
}

void sub_18FDEDA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  void *v33;
  _QWORD aBlock[6];

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  if (*(_BYTE *)(a1 + 48))
  {
    swift_retain();
    swift_retain();
LABEL_3:
    v9 = objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, 1, 5);
    v10 = (void *)sub_1903D05A4();
    objc_msgSend(v9, sel_addInternalDebugDescription_, v10);

    swift_beginAccess();
    if (MEMORY[0x19400D8B8](a2 + 16))
    {
      v11 = *(_QWORD *)(a2 + 24);
      ObjectType = swift_getObjectType();
      v13 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 136);
      v14 = v9;
      v13(v9, 1, a3, a4, ObjectType, v11);
      swift_release();

LABEL_5:
      swift_unknownObjectRelease();
      return;
    }
    swift_release();

    return;
  }
  v15 = *(void **)(a1 + 24);
  swift_retain();
  swift_retain();
  v16 = objc_msgSend(v15, sel_homeKeyCredential);
  if (!v16)
    goto LABEL_3;
  v17 = v16;
  v18 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v19 = *(void **)(v18 + 72);
  v20 = *(id *)(v18 + 80);
  v21 = v19;
  v22 = objc_msgSend(v21, sel_targetDevice);
  if (v22)
  {
    v23 = v22;

    if ((objc_msgSend(v23, sel_respondsToSelector_, sel_provisionHomeKeyPassForSerialNumbers_completionHandler_) & 1) == 0)
    {
      swift_release();

      goto LABEL_5;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BEBD0);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_19043CD00;
    swift_unknownObjectRetain();
    v25 = objc_msgSend(v17, sel_serialNumber);
    if (v25)
    {
      v26 = v25;
      v27 = sub_1903D05C8();
      v29 = v28;

      *(_QWORD *)(v24 + 32) = v27;
      *(_QWORD *)(v24 + 40) = v29;
      v30 = swift_allocObject();
      swift_weakInit();
      v31 = (_QWORD *)swift_allocObject();
      v31[2] = v30;
      v31[3] = sub_18FDEDE3C;
      v31[4] = v8;
      swift_retain();
      swift_retain();
      v32 = (void *)sub_1903D0778();
      aBlock[4] = sub_18FDEDE74;
      aBlock[5] = v31;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_18FDED394;
      aBlock[3] = &block_descriptor_32;
      v33 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v23, sel_provisionHomeKeyPassForSerialNumbers_completionHandler_, v32, v33);
      _Block_release(v33);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_unknownObjectRelease_n();
      return;
    }
  }
  else
  {
    swift_release();
    swift_release();
    __break(1u);
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  __break(1u);
}

uint64_t sub_18FDEDE3C(uint64_t a1, char a2)
{
  _QWORD *v2;

  return sub_18FD88D04(a1, a2 & 1, v2[2], v2[3], v2[4]);
}

uint64_t sub_18FDEDE4C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18FDEDE74(uint64_t a1, void *a2)
{
  uint64_t *v2;

  return sub_18FDED420(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t sub_18FDEDE98()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_18FDEDED4()
{
  uint64_t v0;

  sub_18FDED684(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(id, uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

void NearbyPeerPaymentSenderRequestMetadata.currencyAmount.getter()
{
  NSDecimalNumber *v0;
  NSString *v1;
  PKCurrencyAmount *v2;

  v0 = (NSDecimalNumber *)sub_1903D0A6C();
  v1 = (NSString *)sub_1903D05A4();
  v2 = PKCurrencyAmountMake(v0, v1);

  if (!v2)
    __break(1u);
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.currency.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.amount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.transactionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.imageData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  sub_18FD4D5EC(v1, *(_QWORD *)(v0 + 80));
  return v1;
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.memoText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.idealSenderAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.idealSenderAddress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return result;
}

uint64_t (*NearbyPeerPaymentSenderRequestMetadata.idealSenderAddress.modify())()
{
  return nullsub_1;
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.idealReceiverAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.idealReceiverAddress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return result;
}

uint64_t (*NearbyPeerPaymentSenderRequestMetadata.idealReceiverAddress.modify())()
{
  return nullsub_1;
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.senderEligible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.senderEligible.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 136) = result;
  return result;
}

uint64_t (*NearbyPeerPaymentSenderRequestMetadata.senderEligible.modify())()
{
  return nullsub_1;
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.quoteValidUntil.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for NearbyPeerPaymentSenderRequestMetadata() + 52);
  return sub_18FDEE1AC(v3, a1);
}

uint64_t type metadata accessor for NearbyPeerPaymentSenderRequestMetadata()
{
  uint64_t result;

  result = qword_1EE1C0800;
  if (!qword_1EE1C0800)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_18FDEE1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.quoteValidUntil.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for NearbyPeerPaymentSenderRequestMetadata() + 52);
  return sub_18FDEE224(a1, v3);
}

uint64_t sub_18FDEE224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*NearbyPeerPaymentSenderRequestMetadata.quoteValidUntil.modify())(_QWORD)
{
  type metadata accessor for NearbyPeerPaymentSenderRequestMetadata();
  return nullsub_1;
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.init(amount:transactionIdentifier:appearanceData:memoText:quoteValidUntil:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  void *v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t result;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  unsigned int v71;
  char v72;

  v66 = a2;
  v67 = a7;
  v65 = a5;
  v13 = type metadata accessor for NearbyPeerPaymentSenderRequestMetadata();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v17 + 72) = xmmword_19043D540;
  *(_OWORD *)(v17 + 104) = 0u;
  *(_OWORD *)(v17 + 120) = 0u;
  v17[136] = 1;
  v18 = (uint64_t)&v17[*(int *)(v15 + 52)];
  v19 = sub_1903D0214();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v68 = a1;
  v20 = objc_msgSend(a1, sel_amount);
  if (!v20)
    goto LABEL_3;
  v21 = v20;
  v64 = a3;
  v69 = 0;
  v70 = 0;
  v71 = 0;
  v72 = 1;
  sub_1903D0A78();

  if ((v72 & 1) == 0)
  {
    v62 = v18;
    v63 = a6;
    v60 = v13;
    v61 = a4;
    v58 = v14;
    v59 = a8;
    v29 = v71;
    v30 = v69;
    v31 = v70;
    v32 = objc_msgSend(v68, sel_currency);
    if (v32)
    {
      v33 = v32;
      v56 = v29;
      v57 = HIWORD(v29);
      v55 = HIWORD(v31);
      v34 = sub_1903D05C8();
      v36 = v35;

      *(_QWORD *)v17 = v34;
      *((_QWORD *)v17 + 1) = v36;
      *((_QWORD *)v17 + 2) = v30;
      *((_DWORD *)v17 + 6) = v31;
      *((_WORD *)v17 + 14) = WORD2(v31);
      *((_WORD *)v17 + 15) = v55;
      *((_WORD *)v17 + 16) = v56;
      *((_WORD *)v17 + 17) = v57;
      v37 = v64;
      *((_QWORD *)v17 + 5) = v66;
      *((_QWORD *)v17 + 6) = v37;
      v38 = v61;
      v39 = objc_msgSend(v61, sel_displayName);
      v40 = sub_1903D05C8();
      v42 = v41;

      *((_QWORD *)v17 + 7) = v40;
      *((_QWORD *)v17 + 8) = v42;
      v43 = objc_msgSend(v38, sel_imageData);
      if (v43)
      {
        v44 = v43;
        v45 = sub_1903D01B4();
        v47 = v46;

      }
      else
      {

        v45 = 0;
        v47 = 0xF000000000000000;
      }
      v49 = v59;
      v48 = v60;
      v50 = v58;
      v51 = v67;
      v52 = v65;
      *((_QWORD *)v17 + 9) = v45;
      *((_QWORD *)v17 + 10) = v47;
      v53 = v62;
      v54 = v63;
      *((_QWORD *)v17 + 11) = v52;
      *((_QWORD *)v17 + 12) = v54;
      sub_18FDEE224(v51, v53);
      sub_18FDEF4B4((uint64_t)v17, v49);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v49, 0, 1, v48);
      return sub_18FDDE9C4((uint64_t)v17);
    }
    else
    {
      result = swift_bridgeObjectRelease();
      __break(1u);
    }
  }
  else
  {
LABEL_3:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EE1BCF78 != -1)
      swift_once();
    v22 = sub_1903D0340();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EE1BF5F0);
    v23 = sub_1903D0328();
    v24 = sub_1903D0934();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = a4;
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_18FC92000, v23, v24, "NearbyPeerPayment: attempted to generate sender metadata without an amount", v26, 2u);
      v27 = v26;
      a4 = v25;
      MEMORY[0x19400D804](v27, -1, -1);
    }

    sub_18FCD6D34(v67);
    sub_18FD4D5D8(*((_QWORD *)v17 + 9), *((_QWORD *)v17 + 10));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_18FCD6D34(v18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a8, 1, 1, v13);
  }
  return result;
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.serializedData.getter()
{
  uint64_t v0;

  sub_1903CFF14();
  swift_allocObject();
  sub_1903CFF08();
  type metadata accessor for NearbyPeerPaymentSenderRequestMetadata();
  sub_18FCD5E34(&qword_1EE1C07D0, (uint64_t (*)(uint64_t))type metadata accessor for NearbyPeerPaymentSenderRequestMetadata, (uint64_t)&protocol conformance descriptor for NearbyPeerPaymentSenderRequestMetadata);
  v0 = sub_1903CFEFC();
  swift_release();
  return v0;
}

Swift::Void __swiftcall NearbyPeerPaymentSenderRequestMetadata.update(for:)(PKPeerPaymentProfileAppearanceData a1)
{
  _QWORD *v1;
  Class isa;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  isa = a1.super.isa;
  v3 = -[objc_class displayName](a1.super.isa, sel_displayName, a1._imageData);
  v4 = sub_1903D05C8();
  v6 = v5;

  swift_bridgeObjectRelease();
  v1[7] = v4;
  v1[8] = v6;
  v7 = -[objc_class imageData](isa, sel_imageData);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1903D01B4();
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0xF000000000000000;
  }
  sub_18FD4D5D8(v1[9], v1[10]);
  v1[9] = v9;
  v1[10] = v11;
}

uint64_t sub_18FDEE804(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18FDEE838 + 4 * byte_19043FF00[a1]))(0x79636E6572727563, 0xE800000000000000);
}

uint64_t sub_18FDEE838()
{
  return 0x746E756F6D61;
}

unint64_t sub_18FDEE84C()
{
  return 0xD000000000000015;
}

uint64_t sub_18FDEE8F0()
{
  return 0x6C457265646E6573;
}

uint64_t sub_18FDEE914()
{
  return 0x6C615665746F7571;
}

uint64_t sub_18FDEE938(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18FDEE96C + 4 * byte_19043FF0A[a1]))(0x79636E6572727563, 0xE800000000000000);
}

uint64_t sub_18FDEE96C()
{
  return 0x746E756F6D61;
}

unint64_t sub_18FDEE980()
{
  return 0xD000000000000015;
}

uint64_t sub_18FDEEA24()
{
  return 0x6C457265646E6573;
}

uint64_t sub_18FDEEA48()
{
  return 0x6C615665746F7571;
}

uint64_t sub_18FDEEA6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_18FDEE804(*a1);
  v5 = v4;
  if (v3 == sub_18FDEE804(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1903D0ED4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_18FDEEAF4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1903D0F94();
  sub_18FDEE804(v1);
  sub_1903D064C();
  swift_bridgeObjectRelease();
  return sub_1903D0FC4();
}

uint64_t sub_18FDEEB54()
{
  unsigned __int8 *v0;

  sub_18FDEE804(*v0);
  sub_1903D064C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FDEEB94()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1903D0F94();
  sub_18FDEE804(v1);
  sub_1903D064C();
  swift_bridgeObjectRelease();
  return sub_1903D0FC4();
}

uint64_t sub_18FDEEBF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FDF02E0();
  *a1 = result;
  return result;
}

uint64_t sub_18FDEEC1C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_18FDEE804(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_18FDEEC44()
{
  unsigned __int8 *v0;

  return sub_18FDEE938(*v0);
}

uint64_t sub_18FDEEC4C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FDF02E0();
  *a1 = result;
  return result;
}

void sub_18FDEEC70(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_18FDEEC7C()
{
  sub_18FDEF4F8();
  return sub_1903D1018();
}

uint64_t sub_18FDEECA4()
{
  sub_18FDEF4F8();
  return sub_1903D1024();
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  _OWORD v12[2];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C07D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_18FDEF4F8();
  sub_1903D100C();
  LOBYTE(v12[0]) = 0;
  sub_1903D0E68();
  if (!v2)
  {
    LODWORD(v12[0]) = *(_DWORD *)(v3 + 16);
    *(_OWORD *)((char *)v12 + 4) = *(_OWORD *)(v3 + 20);
    v11 = 1;
    type metadata accessor for Decimal(0);
    sub_18FCD5E34(&qword_1EE1C07E8, (uint64_t (*)(uint64_t))type metadata accessor for Decimal, MEMORY[0x1E0CB22D0]);
    sub_1903D0E98();
    LOBYTE(v12[0]) = 2;
    sub_1903D0E68();
    LOBYTE(v12[0]) = 3;
    sub_1903D0E68();
    v12[0] = *(_OWORD *)(v3 + 72);
    v11 = 4;
    sub_18FCD9AA0();
    sub_1903D0E5C();
    LOBYTE(v12[0]) = 5;
    sub_1903D0E2C();
    LOBYTE(v12[0]) = 6;
    sub_1903D0E2C();
    LOBYTE(v12[0]) = 7;
    sub_1903D0E2C();
    LOBYTE(v12[0]) = 8;
    sub_1903D0E74();
    type metadata accessor for NearbyPeerPaymentSenderRequestMetadata();
    LOBYTE(v12[0]) = 9;
    sub_1903D0214();
    sub_18FCD5E34(&qword_1EE1BDFE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1903D0E5C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t NearbyPeerPaymentSenderRequestMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  char v33;

  v26 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD440);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C07F0);
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NearbyPeerPaymentSenderRequestMetadata();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v12 + 72) = xmmword_19043D540;
  *(_OWORD *)(v12 + 104) = 0u;
  *(_OWORD *)(v12 + 120) = 0u;
  v12[136] = 1;
  v13 = (uint64_t)&v12[*(int *)(v10 + 52)];
  v14 = sub_1903D0214();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v30 = v13;
  v15(v13, 1, 1, v14);
  v16 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v16);
  sub_18FDEF4F8();
  v27 = v8;
  v17 = v31;
  sub_1903D1000();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
    v18 = v30;
    sub_18FD4D5D8(*((_QWORD *)v12 + 9), *((_QWORD *)v12 + 10));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_18FCD6D34(v18);
  }
  else
  {
    LOBYTE(v32[0]) = 0;
    *(_QWORD *)v12 = sub_1903D0DCC();
    *((_QWORD *)v12 + 1) = v19;
    type metadata accessor for Decimal(0);
    v33 = 1;
    sub_18FCD5E34(&qword_1EE1C07F8, (uint64_t (*)(uint64_t))type metadata accessor for Decimal, MEMORY[0x1E0CB22E0]);
    sub_1903D0DFC();
    *((_DWORD *)v12 + 4) = v32[0];
    *(_OWORD *)(v12 + 20) = *(_OWORD *)((char *)v32 + 4);
    LOBYTE(v32[0]) = 2;
    *((_QWORD *)v12 + 5) = sub_1903D0DCC();
    *((_QWORD *)v12 + 6) = v20;
    LOBYTE(v32[0]) = 3;
    *((_QWORD *)v12 + 7) = sub_1903D0DCC();
    *((_QWORD *)v12 + 8) = v21;
    v33 = 4;
    sub_18FCD9CC0();
    sub_1903D0DC0();
    *(_OWORD *)(v12 + 72) = v32[0];
    LOBYTE(v32[0]) = 5;
    *((_QWORD *)v12 + 11) = sub_1903D0D90();
    *((_QWORD *)v12 + 12) = v22;
    LOBYTE(v32[0]) = 6;
    *((_QWORD *)v12 + 13) = sub_1903D0D90();
    *((_QWORD *)v12 + 14) = v23;
    LOBYTE(v32[0]) = 7;
    *((_QWORD *)v12 + 15) = sub_1903D0D90();
    *((_QWORD *)v12 + 16) = v24;
    LOBYTE(v32[0]) = 8;
    v12[136] = sub_1903D0DD8() & 1;
    LOBYTE(v32[0]) = 9;
    sub_18FCD5E34(&qword_1EE1BDFB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1903D0DC0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v27, v28);
    sub_18FDEE224((uint64_t)v5, v30);
    sub_18FDEF4B4((uint64_t)v12, v26);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
    return sub_18FDDE9C4((uint64_t)v12);
  }
}

uint64_t sub_18FDEF48C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NearbyPeerPaymentSenderRequestMetadata.init(from:)(a1, a2);
}

uint64_t sub_18FDEF4A0(_QWORD *a1)
{
  return NearbyPeerPaymentSenderRequestMetadata.encode(to:)(a1);
}

uint64_t sub_18FDEF4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NearbyPeerPaymentSenderRequestMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_18FDEF4F8()
{
  unint64_t result;

  result = qword_1EE1C07E0;
  if (!qword_1EE1C07E0)
  {
    result = MEMORY[0x19400D72C](&unk_19044013C, &type metadata for NearbyPeerPaymentSenderRequestMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1C07E0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for NearbyPeerPaymentSenderRequestMetadata(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(const void *, uint64_t, uint64_t);
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    v8 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v8;
    v9 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v9;
    v10 = a2 + 9;
    v11 = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 72) = *(_OWORD *)v10;
    }
    else
    {
      v13 = *v10;
      sub_18FCD58F4(*v10, v11);
      *(_QWORD *)(a1 + 72) = v13;
      *(_QWORD *)(a1 + 80) = v11;
    }
    v14 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v14;
    v15 = a2[14];
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_QWORD *)(a1 + 112) = v15;
    v16 = a2[16];
    *(_QWORD *)(a1 + 120) = a2[15];
    *(_QWORD *)(a1 + 128) = v16;
    v17 = *((_BYTE *)a2 + 136);
    v18 = *(int *)(a3 + 52);
    v19 = (char *)a2 + v18;
    v20 = (void *)(a1 + v18);
    *(_BYTE *)(a1 + 136) = v17;
    v21 = sub_1903D0214();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v19, 1, v21))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD440);
      memcpy(v20, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v20, v19, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t destroy for NearbyPeerPaymentSenderRequestMetadata(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 80);
  if (v4 >> 60 != 15)
    sub_18FCD5938(*(_QWORD *)(a1 + 72), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 52);
  v6 = sub_1903D0214();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t initializeWithCopy for NearbyPeerPaymentSenderRequestMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  const void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(const void *, uint64_t, uint64_t);
  uint64_t v22;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = (uint64_t *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_18FCD58F4(*v9, v10);
    *(_QWORD *)(a1 + 72) = v11;
    *(_QWORD *)(a1 + 80) = v10;
  }
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v12;
  v13 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v13;
  v14 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v14;
  v15 = *(_BYTE *)(a2 + 136);
  v16 = *(int *)(a3 + 52);
  v17 = (const void *)(a2 + v16);
  v18 = (void *)(a1 + v16);
  *(_BYTE *)(a1 + 136) = v15;
  v19 = sub_1903D0214();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21(v17, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD440);
    memcpy(v18, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v18, v17, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  }
  return a1;
}

uint64_t assignWithCopy for NearbyPeerPaymentSenderRequestMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_WORD *)(a1 + 22) = *(_WORD *)(a2 + 22);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_WORD *)(a1 + 26) = *(_WORD *)(a2 + 26);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  *(_WORD *)(a1 + 30) = *(_WORD *)(a2 + 30);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_WORD *)(a1 + 34) = *(_WORD *)(a2 + 34);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (uint64_t *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80) >> 60 == 15)
  {
    if (v7 >> 60 != 15)
    {
      v8 = *v6;
      sub_18FCD58F4(*v6, *(_QWORD *)(a2 + 80));
      *(_QWORD *)(a1 + 72) = v8;
      *(_QWORD *)(a1 + 80) = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
    sub_18FDEFBA8(a1 + 72);
LABEL_6:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v9 = *v6;
  sub_18FCD58F4(*v6, *(_QWORD *)(a2 + 80));
  v10 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v7;
  sub_18FCD5938(v10, v11);
LABEL_8:
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v12 = *(int *)(a3 + 52);
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = sub_1903D0214();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_13;
  }
  if (v19)
  {
LABEL_13:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD440);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_18FDEFBA8(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

uint64_t initializeWithTake for NearbyPeerPaymentSenderRequestMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v5 = *(int *)(a3 + 52);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v8 = sub_1903D0214();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD440);
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for NearbyPeerPaymentSenderRequestMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 20) = *(_OWORD *)(a2 + 20);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  v9 = (_OWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a1 + 80);
  if (v10 >> 60 == 15)
    goto LABEL_4;
  v11 = *(_QWORD *)(a2 + 80);
  if (v11 >> 60 == 15)
  {
    sub_18FDEFBA8(a1 + 72);
LABEL_4:
    *(_OWORD *)(a1 + 72) = *v9;
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)v9;
  *(_QWORD *)(a1 + 80) = v11;
  sub_18FCD5938(v12, v10);
LABEL_6:
  v13 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v16 = *(int *)(a3 + 52);
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = sub_1903D0214();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v17, v18, v19);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_11;
  }
  if (v23)
  {
LABEL_11:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD440);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v17, v18, v19);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyPeerPaymentSenderRequestMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_18FDEFEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD440);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 52), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for NearbyPeerPaymentSenderRequestMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_18FDEFF3C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD440);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 52), a2, a2, v7);
  }
  return result;
}

void sub_18FDEFFB4()
{
  unint64_t v0;

  sub_18FDF0058();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_18FDF0058()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE1BD730)
  {
    sub_1903D0214();
    v0 = sub_1903D0A84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE1BD730);
  }
}

uint64_t getEnumTagSinglePayload for NearbyPeerPaymentSenderRequestMetadata.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyPeerPaymentSenderRequestMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_18FDF0188 + 4 * byte_19043FF19[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_18FDF01BC + 4 * byte_19043FF14[v4]))();
}

uint64_t sub_18FDF01BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FDF01C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FDF01CCLL);
  return result;
}

uint64_t sub_18FDF01D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FDF01E0);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_18FDF01E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FDF01EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NearbyPeerPaymentSenderRequestMetadata.CodingKeys()
{
  return &type metadata for NearbyPeerPaymentSenderRequestMetadata.CodingKeys;
}

unint64_t sub_18FDF020C()
{
  unint64_t result;

  result = qword_1EE1C0810;
  if (!qword_1EE1C0810)
  {
    result = MEMORY[0x19400D72C](&unk_190440114, &type metadata for NearbyPeerPaymentSenderRequestMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1C0810);
  }
  return result;
}

unint64_t sub_18FDF0254()
{
  unint64_t result;

  result = qword_1EE1C0818;
  if (!qword_1EE1C0818)
  {
    result = MEMORY[0x19400D72C](&unk_19044004C, &type metadata for NearbyPeerPaymentSenderRequestMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1C0818);
  }
  return result;
}

unint64_t sub_18FDF029C()
{
  unint64_t result;

  result = qword_1EE1C0820;
  if (!qword_1EE1C0820)
  {
    result = MEMORY[0x19400D72C](&unk_190440074, &type metadata for NearbyPeerPaymentSenderRequestMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1C0820);
  }
  return result;
}

uint64_t sub_18FDF02E0()
{
  unint64_t v0;

  v0 = sub_1903D0D6C();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t SetupAssistantRequirementsCheckResult.shouldRun.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___PKSetupAssistantRequirementsCheckResult_shouldRun);
}

uint64_t SetupAssistantRequirementsCheckResult.missingRequirements.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___PKSetupAssistantRequirementsCheckResult_missingRequirements);
}

uint64_t sub_18FDF03BC()
{
  sub_1903D0BF8();
  sub_1903D067C();
  sub_1903D067C();
  swift_bridgeObjectRelease();
  sub_1903D067C();
  type metadata accessor for PKPaymentSetupAssistantRequirements(0);
  sub_1903D0CD0();
  sub_1903D067C();
  return 0;
}

void SetupAssistantRequirementsCheckResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SetupAssistantRequirementsCheckResult.__deallocating_deinit()
{
  return sub_18FDF10EC(type metadata accessor for SetupAssistantRequirementsCheckResult);
}

uint64_t type metadata accessor for SetupAssistantRequirementsCheckResult()
{
  return objc_opt_self();
}

id SetupAssistantRequirementsChecker.__allocating_init(targetDevice:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___PKSetupAssistantRequirementsChecker_targetDevice] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id SetupAssistantRequirementsChecker.init(targetDevice:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR___PKSetupAssistantRequirementsChecker_targetDevice] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for SetupAssistantRequirementsChecker();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for SetupAssistantRequirementsChecker()
{
  return objc_opt_self();
}

id sub_18FDF0664(void *a1)
{
  return sub_18FDF0688(a1, (uint64_t (*)(void *))sub_18FE27438);
}

id sub_18FDF067C(void *a1)
{
  return sub_18FDF0688(a1, (uint64_t (*)(void *))sub_18FE27560);
}

id sub_18FDF0688(void *a1, uint64_t (*a2)(void *))
{
  id v4;
  uint64_t v5;
  id v6;

  v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ProvisioningRequirementOracle()), sel_init);
  v5 = a2(a1);

  v6 = sub_18FDF079C(v5, a1);
  swift_bridgeObjectRelease();
  return v6;
}

id sub_18FDF0704(void *a1, uint64_t a2, void *a3, uint64_t (*a4)(void *))
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;

  v7 = objc_allocWithZone((Class)type metadata accessor for ProvisioningRequirementOracle());
  swift_unknownObjectRetain();
  v8 = a1;
  v9 = objc_msgSend(v7, sel_init);
  v10 = a4(a3);

  v11 = sub_18FDF079C(v10, a3);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return v11;
}

id sub_18FDF079C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  objc_class *v6;
  char *v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  char v22;
  uint64_t v23;
  objc_class *v24;
  _BYTE *v25;
  id v26;
  objc_super v28;
  objc_super v29;
  uint64_t v30;
  char *v31;
  id v32[5];

  v3 = v2;
  v32[4] = *(id *)MEMORY[0x1E0C80C00];
  v30 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRetain();
  objc_msgSend(a2, sel_allowsCachedCardRequirements);
  v6 = (objc_class *)type metadata accessor for ProvisioningRequirementsContainer();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = &v7[OBJC_IVAR____PKProvisioningRequirementsContainer_provisioningSID];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *(_QWORD *)&v7[OBJC_IVAR____PKProvisioningRequirementsContainer_requirements] = a1;
  v29.receiver = v7;
  v29.super_class = v6;
  swift_bridgeObjectRetain();
  v9 = objc_msgSendSuper2(&v29, sel_init);
  v10 = objc_msgSend(objc_allocWithZone((Class)PKProvisioningRequirementsContainer), sel_initWithContainer_, v9);

  v11 = *(void **)(v3 + OBJC_IVAR___PKSetupAssistantRequirementsChecker_targetDevice);
  if ((objc_msgSend(v11, sel_respondsToSelector_, sel_meetsProvisioningRequirements_missingRequirements_) & 1) != 0
    && (v32[0] = 0, objc_msgSend(v11, sel_meetsProvisioningRequirements_missingRequirements_, v10, v32), v32[0]))
  {
    v12 = v32[0];
    v13 = objc_msgSend(v12, sel_container);
    sub_1903D0B08();
    swift_unknownObjectRelease();
    if (swift_dynamicCast())
    {
      v14 = v31;
      v15 = *(_QWORD *)&v31[OBJC_IVAR____PKProvisioningRequirementsContainer_requirements];
      swift_bridgeObjectRetain();

      goto LABEL_9;
    }

  }
  else
  {
    v12 = 0;
  }
  v15 = MEMORY[0x1E0DEE9D8];
LABEL_9:
  v16 = sub_18FD77AFC(v15);
  swift_bridgeObjectRelease();
  v17 = sub_18FD6EE38(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = (id)sub_18FD856E0(v17);
  swift_bridgeObjectRelease();
  v32[0] = v18;
  swift_bridgeObjectRetain();
  LOBYTE(v17) = sub_18FE24B5C(7, (uint64_t)v18);
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
    sub_18FDBD68C(&v31);
    v19 = 1;
    v18 = v32[0];
  }
  else
  {
    v19 = 0;
  }
  swift_bridgeObjectRetain();
  v20 = sub_18FE24B5C(3, (uint64_t)v18);
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
    v19 |= 2uLL;
    sub_18FDBD68C(&v31);
  }
  v21 = v32[0];
  swift_bridgeObjectRetain();
  v22 = sub_18FE24B5C(21, (uint64_t)v21);
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
  {
    v19 |= 4uLL;
    sub_18FDBD68C(&v31);
    v21 = v32[0];
  }
  v23 = v21[2];
  swift_bridgeObjectRelease();
  v24 = (objc_class *)type metadata accessor for SetupAssistantRequirementsCheckResult();
  v25 = objc_allocWithZone(v24);
  v25[OBJC_IVAR___PKSetupAssistantRequirementsCheckResult_shouldRun] = v23 == 0;
  *(_QWORD *)&v25[OBJC_IVAR___PKSetupAssistantRequirementsCheckResult_missingRequirements] = v19;
  v28.receiver = v25;
  v28.super_class = v24;
  v26 = objc_msgSendSuper2(&v28, sel_init);

  return v26;
}

uint64_t sub_18FDF0F90@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char **v2;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_18FE1E4A0((uint64_t)v5);
  v6 = *((_QWORD *)v5 + 2);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    *a2 = v5[a1 + 32];
    if ((uint64_t)(v6 - 1 - a1) >= 0)
    {
      result = (uint64_t)memmove(&v5[a1 + 32], &v5[a1 + 33], v6 - 1 - a1);
      *((_QWORD *)v5 + 2) = v7;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1903D0D30();
  __break(1u);
  return result;
}

id SetupAssistantRequirementsChecker.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SetupAssistantRequirementsChecker.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SetupAssistantRequirementsChecker.__deallocating_deinit()
{
  return sub_18FDF10EC(type metadata accessor for SetupAssistantRequirementsChecker);
}

id sub_18FDF10EC(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t method lookup function for SetupAssistantRequirementsCheckResult()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for SetupAssistantRequirementsChecker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SetupAssistantRequirementsChecker.__allocating_init(targetDevice:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SetupAssistantRequirementsChecker.checkPhoneRequirements(context:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of SetupAssistantRequirementsChecker.checkMacRequirements(context:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

id ProvisioningStepReadCard.__allocating_init(context:credential:sharedState:)(uint64_t a1, __int128 *a2, void *a3)
{
  objc_class *v3;
  id v7;
  id v8;

  v7 = objc_allocWithZone(v3);
  v8 = sub_18FDF3180(a1, a2, a3);
  swift_release();

  return v8;
}

id ProvisioningStepReadCard.init(context:credential:sharedState:)(uint64_t a1, __int128 *a2, void *a3)
{
  id v4;

  v4 = sub_18FDF3180(a1, a2, a3);
  swift_release();

  return v4;
}

id ProvisioningStepReadCard.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ProvisioningStepReadCard.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ProvisioningStepReadCard.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProvisioningStepReadCard();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_18FDF13A0(uint64_t a1@<X0>, __int128 *a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  id v8;
  id v9;

  v8 = objc_allocWithZone((Class)type metadata accessor for ProvisioningStepReadCard());
  v9 = sub_18FDF3180(a1, a2, a3);
  swift_release();

  *a4 = v9;
}

uint64_t sub_18FDF1404(uint64_t a1, uint64_t a2, uint64_t (*a3)(id))
{
  return sub_18FDF3324(a3);
}

uint64_t ProvisioningStepReadCard.terminateOperation(success:output:completion:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(id))
{
  return sub_18FDF3324(a3);
}

void sub_18FDF1438()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  _QWORD aBlock[6];

  v1 = objc_msgSend(objc_allocWithZone((Class)PKPaymentTapToProvisionConfigurationRequest), sel_init);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_context);
    swift_beginAccess();
    v4 = *(void **)(v3 + 72);
    v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_18FDF421C;
    aBlock[5] = v5;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FDB0DD4;
    aBlock[3] = &block_descriptor_23_0;
    v6 = _Block_copy(aBlock);
    v7 = v4;
    v8 = v2;
    swift_release();
    objc_msgSend(v7, sel_tapToProvisionConfigurationForRequest_completion_, v8, v6);

    _Block_release(v6);
  }
  else
  {
    __break(1u);
  }
}

void sub_18FDF1558(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x19400D8B8](v5);
  if (v6)
  {
    v7 = (void *)v6;
    if (a1)
    {
      v8 = a1;
      sub_18FDF1870(v8);
    }
    else
    {
      if (a2)
      {
        v9 = a2;
        v10 = (void *)sub_1903D0124();

      }
      else
      {
        v10 = 0;
      }
      v11 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v10, 4);

      v12 = (void *)sub_1903D05A4();
      objc_msgSend(v11, sel_addInternalDebugDescription_, v12);

      v8 = v11;
      sub_18FDF1678(v11, 2u);

      v7 = v8;
    }

  }
}

uint64_t sub_18FDF1678(void *a1, unsigned __int8 a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v5 = sub_1903D03B8();
  v17 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1903D03D0();
  v8 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v11 = (void *)sub_1903D097C();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v2;
  *(_QWORD *)(v12 + 24) = a1;
  *(_BYTE *)(v12 + 32) = a2;
  aBlock[4] = sub_18FDF4200;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = &block_descriptor_11;
  v13 = _Block_copy(aBlock);
  v14 = v2;
  sub_18FDF4084(a1, a2);
  swift_release();
  sub_1903D03C4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCDC494();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
  sub_18FCDC4DC();
  sub_1903D0B38();
  MEMORY[0x19400AF6C](0, v10, v7, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
}

void sub_18FDF1870(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t aBlock[6];

  v2 = v1;
  v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_sharedState), "sid"));
  if (!v4)
  {
    sub_1903D05C8();
    v4 = (id)sub_1903D05A4();
    swift_bridgeObjectRelease();
  }
  v26 = sub_1903D05C8();
  v6 = v5;
  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v7 = sub_1903D0340();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain_n();
  v8 = sub_1903D0328();
  v9 = sub_1903D0940();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    aBlock[0] = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain();
    v28 = sub_18FCD5144(v26, v6, aBlock);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v8, v9, "[%s] Starting card reader", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v11, -1, -1);
    MEMORY[0x19400D804](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v12 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_reader;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_reader), sel_setDelegate_, v2, v26, v28, aBlock[0]);
  v13 = objc_msgSend(objc_allocWithZone((Class)PKSTSTapToProvisionParameters), sel_init);
  objc_msgSend(v13, sel_setSid_, v4);

  v14 = objc_msgSend(a1, sel_nonce);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1903D01B4();
    v18 = v17;

    v19 = (void *)sub_1903D01A8();
    sub_18FCD5938(v16, v18);
    objc_msgSend(v13, sel_setNonce_, v19);

    objc_msgSend(v13, sel_setCountryCode_, objc_msgSend(a1, sel_countryCode));
    objc_msgSend(v13, sel_setCurrencyCode_, objc_msgSend(a1, sel_currencyCode));
    objc_msgSend(v13, sel_setTimeout_, 60);
    v20 = *(void **)(v2 + v12);
    v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v21;
    v22[3] = v27;
    v22[4] = v6;
    v22[5] = a1;
    aBlock[4] = (uint64_t)sub_18FDF4258;
    aBlock[5] = (uint64_t)v22;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_18FDB0DD4;
    aBlock[3] = (uint64_t)&block_descriptor_30_4;
    v23 = _Block_copy(aBlock);
    v24 = v20;
    v25 = a1;
    swift_release();
    objc_msgSend(v24, sel_provisionCardWithParameters_completion_, v13, v23);
    _Block_release(v23);

  }
  else
  {
    __break(1u);
  }
}

void sub_18FDF1C44(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint8_t *v24;
  os_log_type_t v25;
  uint8_t *v26;
  os_log_type_t v27;
  uint8_t *v28;
  os_log_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint8_t *v33;
  id v34;
  void *v35;
  char v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  NSObject *v40;
  os_log_t v41;
  NSObject *v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint8_t *v53;
  os_log_t v54;
  uint8_t *v55;
  NSObject *v56;
  id v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t aBlock[6];

  v58 = (void *)a4;
  v59 = a6;
  v10 = sub_1903D03B8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1903D03D0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v18 = MEMORY[0x19400D8B8](a3 + 16);
  if (v18)
  {
    v19 = (char *)v18;
    if (a1)
      __asm { BR              X10 }
    if ((sub_18FDF3440(a2) & 1) != 0)
    {
      sub_18FDF1678(0, 3u);
      v20 = v19;
LABEL_11:

      return;
    }
    v21 = sub_18FDF3574(a2);
    v22 = sub_18FDF37F0(a2);
    v57 = v21;
    if ((v22 & 1) == 0)
    {
      if ((unint64_t)objc_msgSend(v21, sel_severity) > 4)
      {
        v30 = (void *)sub_1903D05A4();
        v31 = v57;
        objc_msgSend(v57, sel_addInternalDebugDescription_, v30);

        v20 = v31;
        sub_18FDF1678(v31, 1u);

        goto LABEL_11;
      }
      goto LABEL_24;
    }
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v23 = sub_1903D0340();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain_n();
    v24 = (uint8_t *)sub_1903D0328();
    v25 = sub_1903D0940();
    if (os_log_type_enabled((os_log_t)v24, v25))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v54 = (os_log_t)swift_slowAlloc();
      aBlock[0] = (uint64_t)v54;
      v56 = v24;
      v26 = v55;
      *(_DWORD *)v55 = 136315138;
      v53 = v26 + 4;
      swift_bridgeObjectRetain();
      v60 = sub_18FCD5144((uint64_t)v58, a5, aBlock);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      v27 = v25;
      v28 = v55;
      _os_log_impl(&dword_18FC92000, v56, v27, "[%s] Timed out reading card!", v55, 0xCu);
      v29 = v54;
      swift_arrayDestroy();
      MEMORY[0x19400D804](v29, -1, -1);
      MEMORY[0x19400D804](v28, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v32 = *(_QWORD *)&v19[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_timeoutEventCount];
    v33 = (uint8_t *)(v32 + 1);
    if (__OFADD__(v32, 1))
    {
      __break(1u);
LABEL_32:
      swift_once();
LABEL_25:
      v37 = sub_1903D0340();
      __swift_project_value_buffer(v37, (uint64_t)qword_1EE1BF740);
      swift_bridgeObjectRetain_n();
      v38 = sub_1903D0328();
      v39 = sub_1903D0940();
      if (os_log_type_enabled(v38, v39))
      {
        v56 = swift_slowAlloc();
        v55 = (uint8_t *)swift_slowAlloc();
        aBlock[0] = (uint64_t)v55;
        v54 = v38;
        v40 = v56;
        LODWORD(v56->isa) = 136315138;
        v53 = (uint8_t *)&v40->isa + 4;
        swift_bridgeObjectRetain();
        v60 = sub_18FCD5144((uint64_t)v58, a5, aBlock);
        sub_1903D0ACC();
        swift_bridgeObjectRelease_n();
        v41 = v54;
        v42 = v56;
        _os_log_impl(&dword_18FC92000, v54, v39, "[%s] Received recoverable failure", (uint8_t *)v56, 0xCu);
        v43 = v55;
        swift_arrayDestroy();
        MEMORY[0x19400D804](v43, -1, -1);
        MEMORY[0x19400D804](v42, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
      v58 = (void *)sub_1903D097C();
      v44 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v45 = swift_allocObject();
      v46 = v59;
      *(_QWORD *)(v45 + 16) = v44;
      *(_QWORD *)(v45 + 24) = v46;
      aBlock[4] = (uint64_t)sub_18FDF4268;
      aBlock[5] = v45;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_18FDF4F30;
      aBlock[3] = (uint64_t)&block_descriptor_37_2;
      v47 = _Block_copy(aBlock);
      v48 = v46;
      swift_release();
      sub_1903D03C4();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      sub_18FCDC494();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
      sub_18FCDC4DC();
      sub_1903D0B38();
      v49 = v58;
      MEMORY[0x19400AF6C](0, v17, v13, v47);
      _Block_release(v47);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      v50 = *(void (**)(uint64_t))&v19[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_onFailedToReadCard];
      if (v50)
      {
        v51 = swift_retain();
        v50(v51);

        sub_18FD4A1C4((uint64_t)v50);
        v20 = v19;
        goto LABEL_11;
      }
LABEL_30:

      v20 = v57;
      goto LABEL_11;
    }
    *(_QWORD *)&v19[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_timeoutEventCount] = v33;
    v34 = PKDeviceModel();
    if (v34)
    {
      v35 = v34;
      v55 = v33;
      v56 = sub_1903D05C8();

      if ((sub_1903D06D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v33 = v55;
        goto LABEL_21;
      }
      v36 = sub_1903D06D0();
      swift_bridgeObjectRelease();
      v33 = v55;
      if ((v36 & 1) != 0)
      {
LABEL_21:
        if ((uint64_t)v33 >= 1)
        {
LABEL_22:
          sub_18FDF1678((void *)1, 3u);
          goto LABEL_30;
        }
LABEL_24:
        if (qword_1EE1BCFE8 == -1)
          goto LABEL_25;
        goto LABEL_32;
      }
    }
    if ((uint64_t)v33 >= 4)
      goto LABEL_22;
    goto LABEL_24;
  }
}

void sub_18FDF2700(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  _QWORD aBlock[6];

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x19400D8B8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(id *)(v4 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer);

    objc_msgSend(v6, sel_invalidate);
  }
  swift_beginAccess();
  v7 = MEMORY[0x19400D8B8](v3);
  if (v7)
  {
    v8 = (char *)v7;
    v9 = (void *)objc_opt_self();
    v10 = swift_allocObject();
    swift_beginAccess();
    v11 = (void *)MEMORY[0x19400D8B8](v3);
    swift_unknownObjectWeakInit();

    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v10;
    *(_QWORD *)(v12 + 24) = a2;
    aBlock[4] = sub_18FDF4274;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FDF4F5C;
    aBlock[3] = &block_descriptor_44_1;
    v13 = _Block_copy(aBlock);
    v14 = a2;
    swift_release();
    v15 = objc_msgSend(v9, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v13, 8.0);
    _Block_release(v13);
    v16 = *(void **)&v8[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer];
    *(_QWORD *)&v8[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer] = v15;

  }
}

uint64_t sub_18FDF28C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v20;
  _QWORD aBlock[6];

  v5 = sub_1903D03B8();
  v20 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1903D03D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2 + 16;
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v13 = (void *)sub_1903D097C();
  v14 = swift_allocObject();
  swift_beginAccess();
  v15 = (void *)MEMORY[0x19400D8B8](v12);
  swift_unknownObjectWeakInit();

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v14;
  *(_QWORD *)(v16 + 24) = a3;
  aBlock[4] = sub_18FDF42AC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = &block_descriptor_51_0;
  v17 = _Block_copy(aBlock);
  v18 = a3;
  swift_release();
  sub_1903D03C4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCDC494();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
  sub_18FCDC4DC();
  sub_1903D0B38();
  MEMORY[0x19400AF6C](0, v11, v7, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_18FDF2AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x19400D8B8](v3);
  if (v4)
  {
    v5 = (char *)v4;
    v6 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer;
    v7 = *(void **)(v4 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer);
    if (v7)
    {
      objc_msgSend(v7, sel_invalidate);
      v8 = *(void **)&v5[v6];
      *(_QWORD *)&v5[v6] = 0;

      v9 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_eventCooldownTimer;
      objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_eventCooldownTimer], sel_invalidate);
      v10 = *(void **)&v5[v9];
      *(_QWORD *)&v5[v9] = 0;

      sub_18FDF1870(a2);
    }

  }
}

void sub_18FDF2B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  _QWORD *v15;
  void (*v16)(uint64_t, uint64_t);
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer), sel_invalidate);
  v7 = *(void **)(a1 + v6);
  *(_QWORD *)(a1 + v6) = 0;

  v8 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_eventCooldownTimer;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_eventCooldownTimer), sel_invalidate);
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = 0;

  v10 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_reader;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_reader), sel_setDelegate_, 0);
  v11 = *(void **)(a1 + v10);
  v17[0] = 0;
  if (objc_msgSend(v11, sel_cancelProvisionAndReturnError_, v17))
  {
    v12 = v17[0];
  }
  else
  {
    v13 = v17[0];
    v14 = (void *)sub_1903D0130();

    swift_willThrow();
  }
  v15 = (_QWORD *)(a1 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_commonCompletion);
  v16 = *(void (**)(uint64_t, uint64_t))(a1
                                                + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_commonCompletion);
  if (v16)
  {
    *v15 = 0;
    v15[1] = 0;
    swift_retain();
    sub_18FD4A1C4((uint64_t)v16);
    v16(a2, a3);
    sub_18FD4A1C4((uint64_t)v16);
  }
}

void ProvisioningStepReadCard.tap(_:didUpdateWith:)(uint64_t a1, unint64_t a2)
{
  sub_18FDF3924(a2);
}

unint64_t sub_18FDF2D08(uint64_t a1)
{
  unint64_t result;

  result = 0x7964616572;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6465746365746564;
      break;
    case 2:
      result = 0x656C6C65636E6163;
      break;
    case 3:
      result = 0x6465736F6C63;
      break;
    case 4:
      result = 0x6465766F6D6572;
      break;
    case 5:
      result = 0x7261655464726163;
      break;
    case 6:
      result = 0x6E69616741797274;
      break;
    case 7:
      result = 0x726143726568746FLL;
      break;
    case 8:
      result = 0x656E6F6850656573;
      break;
    case 9:
      result = 0xD000000000000013;
      break;
    case 10:
      result = 0x6F72724564726163;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

void sub_18FDF2E40(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (char *)MEMORY[0x19400D8B8](v1);
  if (v2)
  {
    v3 = *(void **)&v2[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_eventCooldownTimer];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_eventCooldownTimer] = 0;

  }
}

uint64_t sub_18FDF2E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v7 = sub_1903D03B8();
  v21 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1903D03D0();
  v10 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a2 + 16;
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v14 = (void *)sub_1903D097C();
  v15 = swift_allocObject();
  swift_beginAccess();
  v16 = (void *)MEMORY[0x19400D8B8](v13);
  swift_unknownObjectWeakInit();

  aBlock[4] = a3;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = a4;
  v17 = _Block_copy(aBlock);
  swift_release();
  sub_1903D03C4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCDC494();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
  sub_18FCDC4DC();
  sub_1903D0B38();
  MEMORY[0x19400AF6C](0, v12, v9, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v20);
}

void sub_18FDF30A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void (*v4)(void);

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x19400D8B8](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(void (**)(void))(v2 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_onDidStartPolling);
    sub_18FD77978((uint64_t)v4);

    if (v4)
    {
      v4();
      sub_18FD4A1C4((uint64_t)v4);
    }
  }
}

id sub_18FDF3180(uint64_t a1, __int128 *a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  char v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  __int128 v20;
  objc_super v21;

  v4 = v3;
  v20 = *a2;
  v7 = *((_QWORD *)a2 + 2);
  v8 = *((_BYTE *)a2 + 24);
  v9 = &v3[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_commonCompletion];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_reader;
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v11 = v3;
  v12 = (void *)sub_1903D097C();
  v13 = objc_msgSend(objc_allocWithZone((Class)PKSTSTapToProvisionReader), sel_initWithReplyQueue_, v12);

  *(_QWORD *)&v4[v10] = v13;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_tearEventCount] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_timeoutEventCount] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_eventCooldownTimer] = 0;
  v14 = &v11[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_onDidStartPolling];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v15 = &v11[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_onDidFindCard];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v16 = &v11[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_onFailedToReadCard];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_context] = a1;
  v17 = &v11[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_credential];
  *(_OWORD *)v17 = v20;
  *((_QWORD *)v17 + 2) = v7;
  v17[24] = v8;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_sharedState] = a3;
  swift_retain();
  v18 = a3;

  v21.receiver = v11;
  v21.super_class = (Class)type metadata accessor for ProvisioningStepReadCard();
  return objc_msgSendSuper2(&v21, sel_init);
}

uint64_t type metadata accessor for ProvisioningStepReadCard()
{
  return objc_opt_self();
}

uint64_t sub_18FDF3324(uint64_t (*a1)(id))
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer), sel_invalidate);
  v4 = *(void **)(v1 + v3);
  *(_QWORD *)(v1 + v3) = 0;

  v5 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_eventCooldownTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_eventCooldownTimer), sel_invalidate);
  v6 = *(void **)(v1 + v5);
  *(_QWORD *)(v1 + v5) = 0;

  v7 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_reader;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_reader), sel_setDelegate_, 0);
  v8 = *(void **)(v1 + v7);
  v13[0] = 0;
  if (objc_msgSend(v8, sel_cancelProvisionAndReturnError_, v13))
  {
    v9 = v13[0];
  }
  else
  {
    v10 = v13[0];
    v11 = (void *)sub_1903D0130();

    swift_willThrow();
  }
  return a1(v9);
}

void *sub_18FDF3440(void *result)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  id v9;
  id v10;

  if (result)
  {
    v1 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0A0);
    sub_18FCDC600(0, qword_1EE1C0920);
    if ((swift_dynamicCast() & 1) == 0)
      return 0;
    v2 = objc_msgSend(v10, sel_domain);
    v3 = sub_1903D05C8();
    v5 = v4;

    if (v3 == sub_1903D05C8() && v5 == v6)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v8 = sub_1903D0ED4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
      {

        return 0;
      }
    }
    v9 = objc_msgSend(v10, sel_code);

    return (void *)(v9 == (id)20007);
  }
  return result;
}

id sub_18FDF3574(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v18;

  if (!a1)
  {
    v11 = 0;
    goto LABEL_11;
  }
  v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0A0);
  sub_18FCDC600(0, qword_1EE1C0920);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = objc_msgSend(v18, sel_domain);
    v4 = sub_1903D05C8();
    v6 = v5;

    if (v4 == sub_1903D05C8() && v6 == v7)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v9 = sub_1903D0ED4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {

        goto LABEL_9;
      }
    }
    v13 = (uint64_t)objc_msgSend(v18, sel_code);
    v14 = 5;
    if (v13 <= 20199)
    {
      switch(v13)
      {
        case 20000:
        case 20001:
        case 20002:
        case 20005:
        case 20008:
          goto LABEL_25;
        case 20003:
        case 20004:
        case 20007:
        case 20009:
          v14 = 4;
          break;
        default:
          goto LABEL_22;
      }
      goto LABEL_25;
    }
    if (v13 > 20901)
    {
      if (v13 != 20902)
      {
        v15 = 20998;
LABEL_21:
        if (v13 != v15)
        {
LABEL_22:
          if (v13 == 20006)
            v14 = 4;
          else
            v14 = 5;
        }
      }
    }
    else if (v13 != 20200)
    {
      v15 = 20900;
      goto LABEL_21;
    }
LABEL_25:
    v16 = a1;
    v11 = (void *)sub_1903D0124();

    v12 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v11, v14);
    goto LABEL_26;
  }
LABEL_9:
  v10 = a1;
  v11 = (void *)sub_1903D0124();

LABEL_11:
  v12 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v11, 5);
LABEL_26:

  return v12;
}

void *sub_18FDF37F0(void *result)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  id v9;
  id v10;

  if (result)
  {
    v1 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0A0);
    sub_18FCDC600(0, qword_1EE1C0920);
    if ((swift_dynamicCast() & 1) == 0)
      return 0;
    v2 = objc_msgSend(v10, sel_domain);
    v3 = sub_1903D05C8();
    v5 = v4;

    if (v3 == sub_1903D05C8() && v5 == v6)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v8 = sub_1903D0ED4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
      {

        return 0;
      }
    }
    v9 = objc_msgSend(v10, sel_code);

    return (void *)(v9 == (id)20004);
  }
  return result;
}

void sub_18FDF3924(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t aBlock;
  uint64_t v51;
  void (*v52)(uint64_t, void *);
  void *v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;

  v2 = v1;
  v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_sharedState), "sid"));
  v5 = sub_1903D05C8();
  v7 = v6;

  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v8 = sub_1903D0340();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain_n();
  v9 = sub_1903D0328();
  v10 = sub_1903D0940();
  v49 = v5;
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock = v12;
    *(_DWORD *)v11 = 136315394;
    swift_bridgeObjectRetain();
    sub_18FCD5144(v5, v7, &aBlock);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    v13 = sub_18FDF2D08(a1);
    sub_18FCD5144(v13, v14, &aBlock);
    sub_1903D0ACC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18FC92000, v9, v10, "[%s] Received card reader event: '%s'", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v12, -1, -1);
    MEMORY[0x19400D804](v11, -1, -1);

    if (a1 > 0xA)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  switch(a1)
  {
    case 0uLL:
      swift_bridgeObjectRelease();
      v15 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_onDidStartPolling;
      goto LABEL_18;
    case 1uLL:
      v16 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_eventCooldownTimer;
      if (*(_QWORD *)(v2 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_eventCooldownTimer))
      {
        swift_bridgeObjectRetain();
        v17 = sub_1903D0328();
        v18 = sub_1903D0940();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = swift_slowAlloc();
          v20 = swift_slowAlloc();
          aBlock = v20;
          *(_DWORD *)v19 = 136315394;
          swift_bridgeObjectRetain();
          sub_18FCD5144(v49, v7, &aBlock);
          sub_1903D0ACC();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v19 + 12) = 2080;
          sub_18FCD5144(0x6465746365746564, 0xE800000000000000, &aBlock);
          sub_1903D0ACC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_18FC92000, v17, v18, "[%s] Ignoring event: '%s'", (uint8_t *)v19, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x19400D804](v20, -1, -1);
          MEMORY[0x19400D804](v19, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v30 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer;
        objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer), sel_invalidate);
        v31 = *(void **)(v2 + v30);
        *(_QWORD *)(v2 + v30) = 0;

        objc_msgSend(*(id *)(v2 + v16), sel_invalidate);
        v32 = *(void **)(v2 + v16);
        *(_QWORD *)(v2 + v16) = 0;

        v15 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_onDidFindCard;
LABEL_18:
        v33 = *(void (**)(uint64_t))(v2 + v15);
        if (v33)
        {
          v34 = swift_retain();
          v33(v34);
          sub_18FD4A1C4((uint64_t)v33);
        }
      }
      break;
    case 5uLL:
      swift_bridgeObjectRelease();
      v21 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_eventCooldownTimer;
      if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_eventCooldownTimer))
      {
        v22 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer;
        objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_readFailureTimeoutTimer), sel_invalidate);
        v23 = *(void **)(v2 + v22);
        *(_QWORD *)(v2 + v22) = 0;

        objc_msgSend(*(id *)(v2 + v21), sel_invalidate);
        v24 = *(void **)(v2 + v21);
        *(_QWORD *)(v2 + v21) = 0;

        v25 = OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_tearEventCount;
        v26 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_tearEventCount);
        if (v26 < 6)
        {
          v35 = *(void (**)(uint64_t))(v2
                                               + OBJC_IVAR____TtC11PassKitCore24ProvisioningStepReadCard_onFailedToReadCard);
          if (v35)
          {
            v36 = swift_retain();
            v35(v36);
            sub_18FD4A1C4((uint64_t)v35);
            v26 = *(_QWORD *)(v2 + v25);
          }
          v37 = __OFADD__(v26, 1);
          v38 = v26 + 1;
          if (v37)
          {
            __break(1u);
            JUMPOUT(0x18FDF4000);
          }
          *(_QWORD *)(v2 + v25) = v38;
          v39 = (void *)objc_opt_self();
          v40 = swift_allocObject();
          swift_unknownObjectWeakInit();
          v54 = sub_18FDF4168;
          v55 = v40;
          v41 = MEMORY[0x1E0C809B0];
          aBlock = MEMORY[0x1E0C809B0];
          v51 = 1107296256;
          v52 = sub_18FDF4F5C;
          v53 = &block_descriptor_33;
          v42 = _Block_copy(&aBlock);
          swift_release();
          v43 = objc_msgSend(v39, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v42, 2.0);
          _Block_release(v42);
          v44 = *(void **)(v2 + v21);
          *(_QWORD *)(v2 + v21) = v43;

          v45 = swift_allocObject();
          swift_unknownObjectWeakInit();
          v54 = sub_18FDF41A8;
          v55 = v45;
          aBlock = v41;
          v51 = 1107296256;
          v52 = sub_18FDF4F5C;
          v53 = &block_descriptor_5;
          v46 = _Block_copy(&aBlock);
          swift_release();
          v47 = objc_msgSend(v39, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v46, 8.0);
          _Block_release(v46);
          v48 = *(void **)(v2 + v22);
          *(_QWORD *)(v2 + v22) = v47;

        }
        else
        {
          v27 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
          v28 = (void *)sub_1903D05A4();
          objc_msgSend(v27, sel_addInternalDebugDescription_, v28);

          v29 = v27;
          sub_18FDF1678(v27, 2u);

        }
      }
      return;
    default:
      goto LABEL_8;
  }
}

uint64_t method lookup function for ProvisioningStepReadCard()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningStepReadCard.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 392))();
}

uint64_t initializeBufferWithCopyOfBuffer for ProvisioningStepReadCard.ReadCardResult(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_18FDF4084(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_18FDF4084(id result, unsigned __int8 a2)
{
  if (a2 <= 2u)
    return result;
  return result;
}

void destroy for ProvisioningStepReadCard.ReadCardResult(uint64_t a1)
{
  sub_18FD78678(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for ProvisioningStepReadCard.ReadCardResult(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_18FDF4084(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_18FD78678(v5, v6);
  return a1;
}

uint64_t assignWithTake for ProvisioningStepReadCard.ReadCardResult(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_18FD78678(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for ProvisioningStepReadCard.ReadCardResult()
{
  return &type metadata for ProvisioningStepReadCard.ReadCardResult;
}

uint64_t sub_18FDF4144()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18FDF4168(uint64_t a1)
{
  uint64_t v1;

  return sub_18FDF2E9C(a1, v1, (uint64_t)sub_18FDF4214, (uint64_t)&block_descriptor_19_4);
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t sub_18FDF41A8(uint64_t a1)
{
  uint64_t v1;

  return sub_18FDF2E9C(a1, v1, (uint64_t)sub_18FDF420C, (uint64_t)&block_descriptor_15_1);
}

uint64_t sub_18FDF41D0()
{
  uint64_t v0;

  sub_18FD78678(*(id *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

void sub_18FDF4200()
{
  uint64_t v0;

  sub_18FDF2B9C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

void sub_18FDF420C()
{
  uint64_t v0;

  sub_18FDF30A4(v0);
}

void sub_18FDF4214()
{
  uint64_t v0;

  sub_18FDF2E40(v0);
}

void sub_18FDF421C(void *a1, void *a2)
{
  uint64_t v2;

  sub_18FDF1558(a1, a2, v2);
}

uint64_t sub_18FDF4224()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_18FDF4258(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_18FDF1C44(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

void sub_18FDF4268()
{
  uint64_t v0;

  sub_18FDF2700(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_18FDF4274(uint64_t a1)
{
  uint64_t v1;

  return sub_18FDF28C0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t objectdestroy_33Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_18FDF42AC()
{
  uint64_t v0;

  sub_18FDF2AF4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_18FDF4300(uint64_t (*a1)(uint64_t, uint64_t, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_allocObject();
  return sub_18FDF44F8(a1, a2, a3, a4, a5, (uint64_t)&unk_1E2AB76D8, (uint64_t)&unk_1EE1C09C8);
}

uint64_t sub_18FDF4378(uint64_t (*a1)(uint64_t, uint64_t, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_allocObject();
  return sub_18FDF44F8(a1, a2, a3, a4, a5, (uint64_t)&unk_1E2AB76B0, (uint64_t)a4da);
}

uint64_t sub_18FDF43F0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *a2;
  return swift_task_switch();
}

uint64_t sub_18FDF4414()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  int *v6;

  v1 = v0[3];
  v2 = (int *)v0[4];
  type metadata accessor for TaskContainer(0, *(_QWORD *)(v0[6] + 80), MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
  v3 = nullsub_1(v1);
  v6 = (int *)((char *)v2 + *v2);
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_18FDF44B0;
  return ((uint64_t (*)(_QWORD, uint64_t))v6)(v0[2], v3);
}

uint64_t sub_18FDF44B0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_18FDF44F8(uint64_t (*a1)(uint64_t, uint64_t, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  _QWORD *v14;
  uint64_t v15;

  v9 = v7;
  *(_QWORD *)(v9 + 16) = 0;
  swift_beginAccess();
  *(_QWORD *)(v9 + 16) = 0;
  swift_release();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v9;
  v14[3] = a4;
  v14[4] = a5;
  swift_retain();
  swift_retain();
  v15 = a1(a3, a7, v14);
  swift_release();
  swift_release();
  sub_18FDF4E6C(a3);
  *(_QWORD *)(v9 + 16) = v15;
  swift_release();
  return v9;
}

uint64_t sub_18FDF45EC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *a2;
  return swift_task_switch();
}

uint64_t sub_18FDF4610()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  int *v6;

  v1 = v0[3];
  v2 = (int *)v0[4];
  type metadata accessor for TaskContainer(0, *(_QWORD *)(v0[6] + 80), *(_QWORD *)(v0[6] + 88), MEMORY[0x1E0DEDB38]);
  v3 = nullsub_1(v1);
  v6 = (int *)((char *)v2 + *v2);
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_18FDF44B0;
  return ((uint64_t (*)(_QWORD, uint64_t))v6)(v0[2], v3);
}

uint64_t sub_18FDF46A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v7;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(a2 + 16);
  v6 = (v4 | v5) == 0;
  if (v4)
    v7 = v5 == 0;
  else
    v7 = 1;
  if (!v7)
  {
    swift_retain();
    swift_retain();
    v6 = sub_1903D0868();
    swift_release();
    swift_release();
  }
  return v6 & 1;
}

uint64_t sub_18FDF4768()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = sub_1903D0880();
  sub_1903D0A84();
  MEMORY[0x19400D72C](MEMORY[0x1E0DF0910], v0);
  return sub_1903D0A90();
}

uint64_t TaskContainer.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t TaskContainer.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t TaskContainer.hashValue.getter()
{
  sub_1903D0F94();
  sub_18FDF4768();
  return sub_1903D0FC4();
}

uint64_t sub_18FDF4878(uint64_t *a1, uint64_t *a2)
{
  return sub_18FDF46A4(*a1, *a2);
}

uint64_t sub_18FDF4884()
{
  return TaskContainer.hashValue.getter();
}

uint64_t sub_18FDF48A4()
{
  return sub_18FDF4768();
}

uint64_t sub_18FDF48C4()
{
  sub_1903D0F94();
  sub_18FDF4768();
  return sub_1903D0FC4();
}

void sub_18FDF4900()
{
  JUMPOUT(0x19400D72CLL);
}

uint64_t sub_18FDF4910()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TaskContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TaskContainer);
}

uint64_t method lookup function for TaskContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TaskContainer.__allocating_init<>(builder:priority:operation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t destroy for AnyTask()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AnyTask(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for AnyTask(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *assignWithTake for AnyTask(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyTask(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyTask()
{
  return &type metadata for AnyTask;
}

uint64_t destroy for AnyTaskContainer()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for AnyTaskContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AnyTaskContainer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_OWORD *assignWithTake for AnyTaskContainer(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyTaskContainer(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyTaskContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyTaskContainer()
{
  return &type metadata for AnyTaskContainer;
}

uint64_t sub_18FDF4DEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = (_QWORD *)v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_18FCDE964;
  return ((uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t))&aA_2[*(int *)aA_2])(a1, v4, v5, v6);
}

uint64_t sub_18FDF4E6C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BF3B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18FDF4EB0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = (_QWORD *)v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_18FCDE964;
  return ((uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t))&a0A[*(int *)a0A])(a1, v4, v5, v6);
}

uint64_t sub_18FDF4F30(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_18FDF4F5C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

NSObject *sub_18FDF4FAC(uint64_t a1, uint64_t *a2, __int16 a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  __int128 v27;
  uint64_t v28;
  uint64_t v30;
  objc_super v31;

  v5 = a2[1];
  v28 = *a2;
  v6 = *((unsigned __int8 *)a2 + 16);
  v7 = *((_BYTE *)a2 + 17);
  v27 = *(_OWORD *)(a2 + 3);
  v9 = a2[5];
  v8 = a2[6];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v3[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_urlSession] = 0;
  v10 = OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_delegateQueue;
  v11 = objc_allocWithZone(MEMORY[0x1E0CB3828]);
  v12 = v3;
  v13 = objc_msgSend(v11, sel_init);
  objc_msgSend(v13, sel_setMaxConcurrentOperationCount_, 1);
  *(_QWORD *)&v3[v10] = v13;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_webSocketTask] = 0;
  v12[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_hasExplicitlyDisconnected] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_pingTimer] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_pingInterval] = 0x4024000000000000;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_pingTolerance] = 0x4000000000000000;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_connectionTimeout] = 0x4014000000000000;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_connectionAttemptCount] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_connectionAttemptLimit] = 2;
  v12[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_hasReportedError] = 0;
  v14 = &v12[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_websocketURL];
  v15 = sub_1903D0178();
  v16 = *(_QWORD *)(v15 - 8);
  v30 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a1, v15);
  v17 = &v12[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_remoteIdentifier];
  *(_QWORD *)v17 = v28;
  *((_QWORD *)v17 + 1) = v5;
  *((_QWORD *)v17 + 2) = v6 & 0xFFFFFFFFFFFFFEFFLL | ((unint64_t)(v7 & 1) << 8);
  *(_OWORD *)(v17 + 24) = v27;
  *((_QWORD *)v17 + 5) = v9;
  *((_QWORD *)v17 + 6) = v8;
  *(_WORD *)&v12[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier] = a3;

  v31.receiver = v12;
  v31.super_class = (Class)type metadata accessor for RemoteNetworkPaymentWebsocketURLSession();
  v18 = objc_msgSendSuper2(&v31, sel_init);
  v19 = qword_1EE1BCF98;
  v20 = v18;
  if (v19 != -1)
    swift_once();
  v21 = sub_1903D0340();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EE1BF650);
  v22 = v20;
  v23 = sub_1903D0328();
  v24 = sub_1903D091C();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v25 = 33685760;
    sub_1903D0ACC();

    _os_log_impl(&dword_18FC92000, v23, v24, "Websocket %{public}hd: Initialized URLSession WebSocket", v25, 6u);
    MEMORY[0x19400D804](v25, -1, -1);
  }
  else
  {

    v23 = v22;
  }

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v30, v15);
  return v22;
}

id sub_18FDF529C()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  objc_super v7;

  if (qword_1EE1BCF98 != -1)
    swift_once();
  v1 = sub_1903D0340();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EE1BF650);
  v2 = v0;
  v3 = sub_1903D0328();
  v4 = sub_1903D0928();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 33685760;
    sub_1903D0ACC();

    _os_log_impl(&dword_18FC92000, v3, v4, "Websocket %{public}hd: Deinit", v5, 6u);
    MEMORY[0x19400D804](v5, -1, -1);

  }
  else
  {

  }
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for RemoteNetworkPaymentWebsocketURLSession();
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_18FDF54B8()
{
  return type metadata accessor for RemoteNetworkPaymentWebsocketURLSession();
}

uint64_t type metadata accessor for RemoteNetworkPaymentWebsocketURLSession()
{
  uint64_t result;

  result = qword_1EE1C0AB0;
  if (!qword_1EE1C0AB0)
    return swift_getSingletonMetadata();
  return result;
}

id sub_18FDF54FC()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  objc_msgSend(v1, sel_setRequestCachePolicy_, 0);
  objc_msgSend(v1, sel_setWaitsForConnectivity_, 0);
  objc_msgSend(v1, sel_setTimeoutIntervalForRequest_, 5.0);
  v2 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v3 = objc_msgSend(v2, sel_bundleIdentifier);

  if (v3)
  {
    sub_1903D05C8();

    v3 = (id)sub_1903D05A4();
    swift_bridgeObjectRelease();
  }
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D00140]), sel_initWithIdentifier_, v3);

  objc_msgSend(v1, sel_set_appleIDContext_, v4);
  v5 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, v1, v0, *(_QWORD *)(v0 + OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_delegateQueue));

  return v5;
}

void sub_18FDF5670()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  _WORD v27[8];

  v1 = sub_1903CFE90();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE1BCF98 != -1)
    swift_once();
  v5 = sub_1903D0340();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EE1BF650);
  v6 = v0;
  v7 = sub_1903D0328();
  v8 = sub_1903D091C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 33685760;
    v27[6] = *(_WORD *)&v6[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];
    sub_1903D0ACC();

    _os_log_impl(&dword_18FC92000, v7, v8, "Websocket %{public}hd: Connect called", v9, 6u);
    MEMORY[0x19400D804](v9, -1, -1);

  }
  else
  {

  }
  v10 = OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_webSocketTask;
  if (*(_QWORD *)&v6[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_webSocketTask])
  {
    v11 = v6;
    v12 = sub_1903D0328();
    v13 = sub_1903D0934();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v14 = 33685760;
      v27[7] = *(_WORD *)&v11[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];
      sub_1903D0ACC();

      _os_log_impl(&dword_18FC92000, v12, v13, "Websocket %{public}hd: Websocket task already exists", v14, 6u);
      MEMORY[0x19400D804](v14, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v15 = *(_QWORD *)&v6[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_connectionAttemptCount];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)&v6[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_connectionAttemptCount] = v17;
      sub_18FDF7FFC((uint64_t)&v6[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_websocketURL], (uint64_t)v4);
      v18 = OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_urlSession;
      v19 = *(void **)&v6[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_urlSession];
      if (v19)
      {
        v20 = v19;
      }
      else
      {
        v22 = sub_18FDF54FC();
        v23 = *(void **)&v6[v18];
        *(_QWORD *)&v6[v18] = v22;
        v20 = v22;

      }
      v21 = (void *)sub_1903CFE60();
      v24 = objc_msgSend(v20, sel_webSocketTaskWithRequest_, v21);

      objc_msgSend(v24, sel_resume);
      v25 = *(void **)&v6[v10];
      *(_QWORD *)&v6[v10] = v24;
      v26 = v24;

      sub_18FDF676C();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
}

void sub_18FDF59B4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  _BYTE *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _BYTE *v12;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_hasExplicitlyDisconnected;
  if ((v0[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_hasExplicitlyDisconnected] & 1) != 0)
  {
    if (qword_1EE1BCF98 != -1)
      swift_once();
    v3 = sub_1903D0340();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EE1BF650);
    v12 = v0;
    v4 = sub_1903D0328();
    v5 = sub_1903D091C();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 33685760;
      sub_1903D0ACC();

      _os_log_impl(&dword_18FC92000, v4, v5, "Websocket %{public}hd: Disconnect already been called", v6, 6u);
      MEMORY[0x19400D804](v6, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (qword_1EE1BCF98 != -1)
      swift_once();
    v7 = sub_1903D0340();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EE1BF650);
    v8 = v0;
    v9 = sub_1903D0328();
    v10 = sub_1903D091C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v11 = 33685760;
      sub_1903D0ACC();

      _os_log_impl(&dword_18FC92000, v9, v10, "Websocket %{public}hd: Disconnect called", v11, 6u);
      MEMORY[0x19400D804](v11, -1, -1);

    }
    else
    {

    }
    v1[v2] = 1;
    sub_18FDF920C();
  }
}

void sub_18FDF5C18(uint64_t a1, unint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  int v23;
  uint64_t v24;
  id v25;
  __int16 v26;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  NSObject *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v5 = sub_1903D09F4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1903D0340();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)&v2[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_webSocketTask];
  if (!v13)
  {
    if (qword_1EE1BCF98 != -1)
      swift_once();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EE1BF650);
    v38 = v2;
    v15 = sub_1903D0328();
    v18 = sub_1903D0934();
    if (os_log_type_enabled(v15, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v19 = 33685760;
      LOWORD(v39) = *(_WORD *)&v38[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];
      sub_1903D0ACC();

      _os_log_impl(&dword_18FC92000, v15, v18, "Websocket %{public}hd: Send Data: Websocket task does not exist", v19, 6u);
      MEMORY[0x19400D804](v19, -1, -1);
      goto LABEL_11;
    }

    goto LABEL_18;
  }
  v38 = v13;
  if (objc_msgSend(v38, sel_state))
  {
    if (qword_1EE1BCF98 != -1)
      swift_once();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EE1BF650);
    v38 = v38;
    v14 = v2;
    v15 = sub_1903D0328();
    v16 = sub_1903D0934();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      *(_DWORD *)v17 = 33686016;
      LOWORD(v39) = *(_WORD *)&v14[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];
      sub_1903D0ACC();

      *(_WORD *)(v17 + 6) = 2048;
      v39 = objc_msgSend(v38, sel_state);
      sub_1903D0ACC();

      _os_log_impl(&dword_18FC92000, v15, v16, "Websocket %{public}hd: Send Data: Websocket not connected %ld, skipping payload", (uint8_t *)v17, 0x10u);
      MEMORY[0x19400D804](v17, -1, -1);

LABEL_11:
      return;
    }

LABEL_18:
    return;
  }
  if (qword_1EE1BCF98 != -1)
    swift_once();
  v36 = v5;
  v20 = __swift_project_value_buffer(v9, (uint64_t)qword_1EE1BF650);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v20, v9);
  v21 = v2;
  sub_18FCD58F4(a1, a2);
  v37 = v21;
  sub_18FCD58F4(a1, a2);
  v22 = sub_1903D0328();
  v23 = sub_1903D0928();
  if (os_log_type_enabled(v22, (os_log_type_t)v23))
  {
    v32 = v23;
    v33 = v22;
    v34 = v6;
    v35 = a2 >> 62;
    v24 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v40 = v31;
    *(_DWORD *)v24 = 33686018;
    v25 = v37;
    v26 = *(_WORD *)&v37[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];

    LOWORD(v39) = v26;
    sub_1903D0ACC();

    v30 = v24;
    *(_WORD *)(v24 + 6) = 2080;
    __asm { BR              X9 }
  }
  v27 = v37;

  sub_18FCD5938(a1, a2);
  sub_18FCD5938(a1, a2);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v28 = v36;
  *v8 = a1;
  v8[1] = a2;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CB1F68], v28);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_18FCD58F4(a1, a2);
  swift_retain();
  v29 = v38;
  sub_1903D09E8();

  swift_release();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v28);
  swift_release();
}

void sub_18FDF6538(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  id v16;
  uint64_t v17;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x19400D8B8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if (a1)
    {
      v6 = a1;
      if (qword_1EE1BCF98 != -1)
        swift_once();
      v7 = sub_1903D0340();
      __swift_project_value_buffer(v7, (uint64_t)qword_1EE1BF650);
      v8 = a1;
      v9 = a1;
      v10 = v5;
      v11 = sub_1903D0328();
      v12 = sub_1903D0934();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc();
        v14 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v13 = 33686018;
        sub_1903D0ACC();

        *(_WORD *)(v13 + 6) = 2112;
        v15 = a1;
        v17 = _swift_stdlib_bridgeErrorToNSError();
        sub_1903D0ACC();
        *v14 = v17;

        _os_log_impl(&dword_18FC92000, v11, v12, "Websocket %{public}hd: Send data payload failure: %@", (uint8_t *)v13, 0x10u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
        swift_arrayDestroy();
        MEMORY[0x19400D804](v14, -1, -1);
        MEMORY[0x19400D804](v13, -1, -1);
      }
      else
      {

      }
      v16 = a1;
      sub_18FDF8D80(a1);

    }
  }
}

void sub_18FDF676C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  char *v9;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_webSocketTask];
  if (v1)
  {
    v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = v1;
    swift_retain();
    sub_1903D0A00();

    swift_release();
    swift_release();
  }
  else
  {
    if (qword_1EE1BCF98 != -1)
      swift_once();
    v5 = sub_1903D0340();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EE1BF650);
    v9 = v0;
    v6 = sub_1903D0328();
    v7 = sub_1903D0934();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v8 = 33685760;
      sub_1903D0ACC();

      _os_log_impl(&dword_18FC92000, v6, v7, "Websocket %{public}hd: Listen: Websocket task does not exist", v8, 6u);
      MEMORY[0x19400D804](v8, -1, -1);

    }
    else
    {

    }
  }
}

void sub_18FDF6940(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0AF8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2 + 16;
  swift_beginAccess();
  v11 = MEMORY[0x19400D8B8](a2 + 16);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = *(id *)(v11 + OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_delegateQueue);

    v14 = swift_allocObject();
    swift_beginAccess();
    v15 = (void *)MEMORY[0x19400D8B8](v10);
    swift_unknownObjectWeakInit();

    sub_18FDFA570(a1, (uint64_t)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    v16 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v14;
    sub_18FDFA674((uint64_t)v9, v18 + v16);
    *(_QWORD *)(v18 + v17) = a3;
    aBlock[4] = sub_18FDFA6BC;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FDF4F30;
    aBlock[3] = &block_descriptor_25_3;
    v19 = _Block_copy(aBlock);
    v20 = a3;
    swift_release();
    objc_msgSend(v13, sel_addOperationWithBlock_, v19);
    _Block_release(v19);

  }
}

void sub_18FDF6B14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  BOOL v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  NSObject *v39;
  uint64_t v40;
  __int16 v41;
  unint64_t v42;
  id v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  __int16 v48;
  uint64_t v49;
  NSObject *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint8_t *v54;
  id v55;
  id v56;
  char *v57;
  id v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  _QWORD *v62;
  __int16 v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  void *v75;
  char *v76;
  _QWORD v77[4];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  __int128 v85;
  uint64_t v86[11];

  v86[9] = *MEMORY[0x1E0C80C00];
  v81 = sub_1903D0340();
  v6 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v8 = (char *)v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1903D0610();
  v9 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v11 = (char *)v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1903D09F4();
  v13 = *(_QWORD *)(v12 - 8);
  v82 = v12;
  v83 = v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (_QWORD *)((char *)v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v84 = (char *)v77 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0AF8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (void **)((char *)v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v21 = MEMORY[0x19400D8B8](a1 + 16);
  if (v21)
  {
    v22 = (void *)v21;
    sub_18FDFA570(a2, (uint64_t)v20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = *v20;
      v24 = objc_msgSend(a3, sel_response);
      if (v24)
      {
        v25 = v24;
        objc_opt_self();
        v26 = (void *)swift_dynamicCastObjCClass();
        v27 = v26;
        if (v26)
        {
          v28 = objc_msgSend(v26, sel_statusCode) == (id)401;
        }
        else
        {

          v28 = 0;
        }
      }
      else
      {
        v28 = 0;
        v27 = 0;
      }
      if ((*((_BYTE *)v22
            + OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_hasExplicitlyDisconnected) & 1) != 0
        || v28)
      {

      }
      else
      {
        if (qword_1EE1BCF98 != -1)
          swift_once();
        __swift_project_value_buffer(v81, (uint64_t)qword_1EE1BF650);
        v55 = v22;
        v56 = v23;
        v57 = (char *)v55;
        v58 = v23;
        v59 = sub_1903D0328();
        v60 = sub_1903D0934();
        if (os_log_type_enabled(v59, v60))
        {
          v61 = swift_slowAlloc();
          v62 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v61 = 33686018;
          v63 = *(_WORD *)&v57[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];

          LOWORD(v86[0]) = v63;
          sub_1903D0ACC();

          *(_WORD *)(v61 + 6) = 2112;
          v64 = v23;
          v65 = _swift_stdlib_bridgeErrorToNSError();
          v86[0] = v65;
          sub_1903D0ACC();
          *v62 = v65;

          _os_log_impl(&dword_18FC92000, v59, v60, "Websocket %{public}hd: Receive failure: %@", (uint8_t *)v61, 0x10u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
          swift_arrayDestroy();
          MEMORY[0x19400D804](v62, -1, -1);
          MEMORY[0x19400D804](v61, -1, -1);
        }
        else
        {

        }
        v73 = v23;
        sub_18FDF8D80(v23);

      }
    }
    else
    {
      v30 = v83;
      v29 = v84;
      v31 = v82;
      (*(void (**)(char *, void **, uint64_t))(v83 + 32))(v84, v20, v82);
      (*(void (**)(uint64_t *, char *, uint64_t))(v30 + 16))(v16, v29, v31);
      v32 = (*(uint64_t (**)(uint64_t *, uint64_t))(v30 + 88))(v16, v31);
      if (v32 == *MEMORY[0x1E0CB1F68])
      {
        (*(void (**)(uint64_t *, uint64_t))(v30 + 96))(v16, v31);
        v33 = *v16;
        v34 = v16[1];
        if (qword_1EE1BCF98 != -1)
          swift_once();
        v35 = v81;
        v36 = __swift_project_value_buffer(v81, (uint64_t)qword_1EE1BF650);
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v36, v35);
        v37 = v22;
        sub_18FCD58F4(v33, v34);
        v38 = (char *)v37;
        sub_18FCD58F4(v33, v34);
        v39 = sub_1903D0328();
        LODWORD(v80) = sub_1903D0928();
        if (os_log_type_enabled(v39, (os_log_type_t)v80))
        {
          v77[3] = v6;
          v79 = (uint64_t)v39;
          v40 = swift_slowAlloc();
          v78 = swift_slowAlloc();
          v86[5] = v78;
          *(_DWORD *)v40 = 33686018;
          v41 = *(_WORD *)&v38[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];

          LOWORD(v86[0]) = v41;
          sub_1903D0ACC();

          *(_WORD *)(v40 + 6) = 2080;
          __asm { BR              X9 }
        }

        sub_18FCD5938(v33, v34);
        sub_18FCD5938(v33, v34);

        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v35);
        v74 = MEMORY[0x19400D8B8](&v38[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_delegate]);
        if (v74)
        {
          v75 = (void *)v74;
          v76 = v38;
          sub_18FDFA704(v33, v34, v75);
          sub_18FCD5938(v33, v34);

          v72 = swift_unknownObjectRelease();
        }
        else
        {
          v72 = sub_18FCD5938(v33, v34);
        }
      }
      else if (v32 == *MEMORY[0x1E0CB1F70])
      {
        (*(void (**)(uint64_t *, uint64_t))(v30 + 96))(v16, v31);
        v42 = v16[1];
        v79 = *v16;
        if (qword_1EE1BCF98 != -1)
          swift_once();
        __swift_project_value_buffer(v81, (uint64_t)qword_1EE1BF650);
        v43 = v22;
        swift_bridgeObjectRetain_n();
        v44 = (char *)v43;
        v45 = sub_1903D0328();
        v46 = sub_1903D0928();
        if (os_log_type_enabled(v45, v46))
        {
          v47 = swift_slowAlloc();
          v81 = swift_slowAlloc();
          v86[0] = v81;
          *(_DWORD *)v47 = 33686018;
          v48 = *(_WORD *)&v44[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];

          LOWORD(v85) = v48;
          sub_1903D0ACC();

          *(_WORD *)(v47 + 6) = 2080;
          swift_bridgeObjectRetain();
          *(_QWORD *)&v85 = sub_18FCD5144(v79, v42, v86);
          sub_1903D0ACC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_18FC92000, v45, v46, "Websocket %{public}hd: Receive String Payload: %s)", (uint8_t *)v47, 0x10u);
          v49 = v81;
          swift_arrayDestroy();
          MEMORY[0x19400D804](v49, -1, -1);
          MEMORY[0x19400D804](v47, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v66 = MEMORY[0x19400D8B8](&v44[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_delegate]);
        v31 = v82;
        if (v66)
        {
          v67 = (void *)v66;
          v68 = v44;
          sub_1903D05F8();
          v69 = sub_1903D05D4();
          v71 = v70;
          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v80);
          if (v71 >> 60 == 15)
          {
            sub_18FDA0F38(0xD000000000000028, 0x800000019045CF00);
          }
          else
          {
            sub_18FDFA704(v69, v71, v67);
            sub_18FD4D5D8(v69, v71);
          }

          swift_bridgeObjectRelease();
          v72 = swift_unknownObjectRelease();
          v30 = v83;
        }
        else
        {
          v72 = swift_bridgeObjectRelease();
          v30 = v83;
        }
      }
      else
      {
        if (qword_1EE1BCF98 != -1)
          swift_once();
        __swift_project_value_buffer(v81, (uint64_t)qword_1EE1BF650);
        v50 = v22;
        v51 = sub_1903D0328();
        v52 = sub_1903D0934();
        if (os_log_type_enabled(v51, v52))
        {
          v53 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v53 = 33685760;
          LOWORD(v86[0]) = *(_WORD *)((char *)&v50->isa
                                    + OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier);
          sub_1903D0ACC();

          _os_log_impl(&dword_18FC92000, v51, v52, "Websocket %{public}hd: Unknown message type received", v53, 6u);
          v54 = v53;
          v30 = v83;
          MEMORY[0x19400D804](v54, -1, -1);
        }
        else
        {

          v51 = v50;
        }

        v72 = (*(uint64_t (**)(uint64_t *, uint64_t))(v30 + 8))(v16, v31);
      }
      sub_18FDF676C(v72);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v84, v31);
    }
  }
}

void sub_18FDF796C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  char *v9;
  _QWORD aBlock[6];

  v1 = *(void **)&v0[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_webSocketTask];
  if (v1)
  {
    v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_18FDFA500;
    aBlock[5] = v2;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FD55778;
    aBlock[3] = &block_descriptor_7_0;
    v3 = _Block_copy(aBlock);
    v4 = v1;
    swift_release();
    objc_msgSend(v4, sel_sendPingWithPongReceiveHandler_, v3);
    _Block_release(v3);

  }
  else
  {
    if (qword_1EE1BCF98 != -1)
      swift_once();
    v5 = sub_1903D0340();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EE1BF650);
    v9 = v0;
    v6 = sub_1903D0328();
    v7 = sub_1903D0934();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v8 = 33685760;
      LOWORD(aBlock[0]) = *(_WORD *)&v9[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];
      sub_1903D0ACC();

      _os_log_impl(&dword_18FC92000, v6, v7, "Websocket %{public}hd: Ping: Websocket task does not exist", v8, 6u);
      MEMORY[0x19400D804](v8, -1, -1);

    }
    else
    {

    }
  }
}

void sub_18FDF7B58(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD v12[6];

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x19400D8B8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(id *)(v4 + OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_delegateQueue);

    v7 = swift_allocObject();
    swift_beginAccess();
    v8 = (void *)MEMORY[0x19400D8B8](v3);
    swift_unknownObjectWeakInit();

    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v7;
    *(_QWORD *)(v9 + 24) = a1;
    v12[4] = sub_18FDFA534;
    v12[5] = v9;
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 1107296256;
    v12[2] = sub_18FDF4F30;
    v12[3] = &block_descriptor_14_1;
    v10 = _Block_copy(v12);
    v11 = a1;
    swift_release();
    objc_msgSend(v6, sel_addOperationWithBlock_, v10);
    _Block_release(v10);

  }
}

void sub_18FDF7CA8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x19400D8B8](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if (a2)
    {
      v6 = a2;
      if (qword_1EE1BCF98 != -1)
        swift_once();
      v7 = sub_1903D0340();
      __swift_project_value_buffer(v7, (uint64_t)qword_1EE1BF650);
      v8 = v5;
      v9 = a2;
      v10 = v8;
      v11 = a2;
      v12 = sub_1903D0328();
      v13 = sub_1903D0934();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = swift_slowAlloc();
        v15 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v14 = 33686018;

        sub_1903D0ACC();
        *(_WORD *)(v14 + 6) = 2112;
        v16 = a2;
        v23 = _swift_stdlib_bridgeErrorToNSError();
        sub_1903D0ACC();
        *v15 = v23;

        _os_log_impl(&dword_18FC92000, v12, v13, "Websocket %{public}hd: Ping failed: %@", (uint8_t *)v14, 0x10u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
        swift_arrayDestroy();
        MEMORY[0x19400D804](v15, -1, -1);
        MEMORY[0x19400D804](v14, -1, -1);

      }
      else
      {

        v10 = v12;
      }
    }
    else
    {
      if (qword_1EE1BCF98 != -1)
        swift_once();
      v17 = sub_1903D0340();
      __swift_project_value_buffer(v17, (uint64_t)qword_1EE1BF650);
      v10 = v5;
      v18 = sub_1903D0328();
      v19 = sub_1903D0928();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v20 = 33685760;
        sub_1903D0ACC();

        _os_log_impl(&dword_18FC92000, v18, v19, "Websocket %{public}hd: Ping succeeded", v20, 6u);
        MEMORY[0x19400D804](v20, -1, -1);
      }
      else
      {

        v18 = v10;
      }

      v21 = *(Class *)((char *)&v10->isa
                     + OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_pingTimer);
      *(Class *)((char *)&v10->isa + OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_pingTimer) = 0;

      sub_18FDF8B24(v22);
    }

  }
}

uint64_t sub_18FDF7FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1903D0178();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1903CFE90();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_1903CFE84();
  sub_18FDF8384();
  sub_1903CFE78();
  if (qword_1EE1BCF98 != -1)
    swift_once();
  v14 = sub_1903D0340();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EE1BF650);
  v15 = v3;
  v16 = sub_1903D0328();
  v17 = sub_1903D0928();
  if (os_log_type_enabled(v16, v17))
  {
    v29 = a2;
    v18 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v30 = v28;
    *(_DWORD *)v18 = 33686274;
    LOWORD(v31) = *(_WORD *)&v15[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];
    sub_1903D0ACC();

    *(_WORD *)(v18 + 6) = 2080;
    swift_beginAccess();
    sub_18FCD5E34((unint64_t *)&unk_1EE1C0AE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], MEMORY[0x1E0CADF70]);
    v19 = sub_1903D0EB0();
    v31 = sub_18FCD5144(v19, v20, &v30);
    sub_1903D0ACC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 16) = 2080;
    swift_beginAccess();
    v21 = sub_1903CFE6C();
    swift_endAccess();
    if (!v21)
      sub_18FD4FACC(MEMORY[0x1E0DEE9D8]);
    v22 = sub_1903D04F0();
    v24 = v23;
    swift_bridgeObjectRelease();
    v31 = sub_18FCD5144(v22, v24, &v30);
    sub_1903D0ACC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18FC92000, v16, v17, "Websocket %{public}hd: Connection request: %s - Headers: %s", (uint8_t *)v18, 0x1Au);
    v25 = v28;
    swift_arrayDestroy();
    MEMORY[0x19400D804](v25, -1, -1);
    MEMORY[0x19400D804](v18, -1, -1);

    a2 = v29;
  }
  else
  {

  }
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(a2, v13, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

id sub_18FDF8384()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  unint64_t v4;
  id result;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  id v12;
  char **v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  unint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  NSObject *v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  char v71;
  unint64_t v72;
  unint64_t v73;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedService);
  if (!v2)
  {
    if (qword_1EE1BCF98 != -1)
      swift_once();
    v27 = sub_1903D0340();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EE1BF650);
    v28 = v0;
    v29 = sub_1903D0328();
    v30 = sub_1903D0934();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v31 = 33685760;
      sub_1903D0ACC();

      _os_log_impl(&dword_18FC92000, v29, v30, "Websocket %{public}hd: Connection request: Web service not available", v31, 6u);
      MEMORY[0x19400D804](v31, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v3 = v2;
  v4 = sub_18FD4FACC(MEMORY[0x1E0DEE9D8]);
  v73 = v4;
  result = objc_msgSend(v3, sel__appleAccountInformation);
  if (result)
  {
    v6 = result;
    v7 = objc_msgSend(result, sel_authorizationHeader);

    if (v7)
    {
      v8 = sub_1903D05C8();
      v10 = v9;

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v72 = v4;
      sub_18FE06DC4(v8, v10, 0x7A69726F68747541, 0xED00006E6F697461, isUniquelyReferenced_nonNull_native);
      v73 = v4;
      swift_bridgeObjectRelease();
    }
    v12 = objc_msgSend(v3, sel_targetDevice, v72);
    v13 = &selRef_rejectSharingInvitation_completionHandler_;
    if (v12)
    {
      v14 = v12;
      v15 = objc_msgSend(v12, sel_secureElementIdentifiers);
      if (v15)
      {
        v16 = sub_1903D0784();

        v15 = (id)sub_18FD68868(v16);
        swift_bridgeObjectRelease();
      }
      v17 = sub_1903D05C8();
      v19 = v18;
      v20 = objc_msgSend(v14, sel_bridgedClientInfo);
      if (v20)
      {
        v21 = v20;
        v22 = sub_1903D05C8();
        v24 = v23;

        v25 = swift_isUniquelyReferenced_nonNull_native();
        v26 = v24;
        v13 = &selRef_rejectSharingInvitation_completionHandler_;
        sub_18FE06DC4(v22, v26, v17, v19, v25);
        v73 = v4;
      }
      else
      {
        sub_18FDF996C(v17, v19);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33 = objc_msgSend(v14, sel_deviceRegion);
      if (v33)
      {
        v34 = v33;
        v35 = sub_1903D05C8();
        v37 = v36;

        v38 = sub_1903D05C8();
        v40 = v39;
        v41 = swift_isUniquelyReferenced_nonNull_native();
        sub_18FE06DC4(v35, v37, v38, v40, v41);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v15)
          goto LABEL_23;
      }
      else
      {
        swift_unknownObjectRelease();
        if (v15)
          goto LABEL_23;
      }
    }
    v42 = objc_msgSend((id)objc_opt_self(), v13[498]);
    if (!v42
      || (v43 = v42,
          v44 = sub_1903D0784(),
          v43,
          v45 = sub_18FD68868(v44),
          swift_bridgeObjectRelease(),
          !v45))
    {
LABEL_24:
      v53 = objc_msgSend((id)objc_opt_self(), sel_clientInfoHTTPHeader);
      if (v53)
      {
        v54 = v53;
        v55 = sub_1903D05C8();
        v57 = v56;

        v58 = swift_isUniquelyReferenced_nonNull_native();
        sub_18FE06DC4(v55, v57, 0xD000000000000013, 0x800000019045CE60, v58);
      }
      else
      {
        sub_18FDF996C(0xD000000000000013, 0x800000019045CE60);
      }
      swift_bridgeObjectRelease();
      v59 = (uint64_t *)&v1[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_remoteIdentifier];
      v60 = *(_QWORD *)&v1[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_remoteIdentifier + 8];
      if (v60)
      {
        v62 = v59[3];
        v61 = v59[4];
        v63 = *v59;
        swift_bridgeObjectRetain();
        v64 = swift_isUniquelyReferenced_nonNull_native();
        sub_18FE06DC4(v62, v61, 0xD00000000000001DLL, 0x800000019045CEB0, v64);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v65 = swift_isUniquelyReferenced_nonNull_native();
        sub_18FE06DC4(v63, v60, 0xD000000000000021, 0x800000019045CED0, v65);
        swift_bridgeObjectRelease();
      }
      if (PKRemoteNetworkPaymentSkipAuthenticationHeader())
      {
        if (qword_1EE1BCF98 != -1)
          swift_once();
        v66 = sub_1903D0340();
        __swift_project_value_buffer(v66, (uint64_t)qword_1EE1BF650);
        v67 = v1;
        v68 = sub_1903D0328();
        v69 = sub_1903D0934();
        if (os_log_type_enabled(v68, v69))
        {
          v70 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v70 = 33685760;
          sub_1903D0ACC();

          _os_log_impl(&dword_18FC92000, v68, v69, "Websocket %{public}hd: Fetch connection options: Adding skip authentication header", v70, 6u);
          MEMORY[0x19400D804](v70, -1, -1);
        }
        else
        {

          v68 = v67;
        }

        v71 = swift_isUniquelyReferenced_nonNull_native();
        sub_18FE06DC4(1702195828, 0xE400000000000000, 0xD000000000000020, 0x800000019045CE80, v71);
        v32 = v73;

        swift_bridgeObjectRelease();
      }
      else
      {

        return (id)v73;
      }
      return (id)v32;
    }
LABEL_23:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BEFD0);
    sub_18FDAF8D8();
    v46 = sub_1903D0544();
    v48 = v47;
    swift_bridgeObjectRelease();
    v49 = sub_1903D05C8();
    v51 = v50;
    v52 = swift_isUniquelyReferenced_nonNull_native();
    sub_18FE06DC4(v46, v48, v49, v51, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

void sub_18FDF8B24()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  char *v9;
  id v10;
  id v11;
  void *v12;
  char *v13;
  _QWORD aBlock[6];

  v1 = OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_pingTimer;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_pingTimer])
  {
    if (qword_1EE1BCF98 != -1)
      swift_once();
    v2 = sub_1903D0340();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EE1BF650);
    v13 = v0;
    v3 = sub_1903D0328();
    v4 = sub_1903D0934();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 33685760;
      LOWORD(aBlock[0]) = *(_WORD *)&v13[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];
      sub_1903D0ACC();

      _os_log_impl(&dword_18FC92000, v3, v4, "Websocket %{public}hd: Ping scheduled but timer already exists", v5, 6u);
      MEMORY[0x19400D804](v5, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v0;
    aBlock[4] = sub_18FDFA4A4;
    aBlock[5] = v6;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FDF4F5C;
    aBlock[3] = &block_descriptor_34;
    v7 = _Block_copy(aBlock);
    v8 = (void *)objc_opt_self();
    v9 = v0;
    v10 = objc_msgSend(v8, sel_timerWithTimeInterval_repeats_block_, 0, v7, 10.0);
    _Block_release(v7);
    swift_release();
    objc_msgSend(v10, sel_setTolerance_, 2.0);
    v11 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
    objc_msgSend(v11, sel_addTimer_forMode_, v10, *MEMORY[0x1E0C99860]);

    v12 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v10;

  }
}

void sub_18FDF8D80(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  id v17;
  id v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;

  v2 = v1;
  v4 = MEMORY[0x19400D8B8](&v1[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_delegate]);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_hasReportedError;
    if ((v1[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_hasReportedError] & 1) != 0)
    {
      if (qword_1EE1BCF98 != -1)
        swift_once();
      v7 = sub_1903D0340();
      __swift_project_value_buffer(v7, (uint64_t)qword_1EE1BF650);
      v8 = v1;
      v9 = sub_1903D0328();
      v10 = sub_1903D0934();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v11 = 33685760;
        LOWORD(v28) = *(_WORD *)&v8[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];
        sub_1903D0ACC();

        _os_log_impl(&dword_18FC92000, v9, v10, "Websocket %{public}hd: Already reported an error, not informing delegate", v11, 6u);
        MEMORY[0x19400D804](v11, -1, -1);
        swift_unknownObjectRelease();

      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {
      if (qword_1EE1BCF98 != -1)
        swift_once();
      v16 = sub_1903D0340();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EE1BF650);
      v17 = a1;
      v18 = a1;
      v19 = v1;
      v20 = sub_1903D0328();
      v21 = sub_1903D091C();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        v23 = swift_slowAlloc();
        v28 = v23;
        *(_DWORD *)v22 = 33686018;
        sub_1903D0ACC();

        *(_WORD *)(v22 + 6) = 2080;
        if (a1)
        {
          swift_getErrorValue();
          v24 = sub_1903D0F40();
          v26 = v25;
        }
        else
        {
          v26 = 0xE300000000000000;
          v24 = 7104878;
        }
        sub_18FCD5144(v24, v26, &v28);
        sub_1903D0ACC();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_18FC92000, v20, v21, "Websocket %{public}hd: Report error: %s", (uint8_t *)v22, 0x10u);
        swift_arrayDestroy();
        MEMORY[0x19400D804](v23, -1, -1);
        MEMORY[0x19400D804](v22, -1, -1);
      }
      else
      {

      }
      v2[v6] = 1;
      sub_18FDF9E80(a1, v5);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    if (qword_1EE1BCF98 != -1)
      swift_once();
    v12 = sub_1903D0340();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EE1BF650);
    v27 = v1;
    v13 = sub_1903D0328();
    v14 = sub_1903D0934();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v15 = 33685760;
      LOWORD(v28) = *(_WORD *)&v27[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];
      sub_1903D0ACC();

      _os_log_impl(&dword_18FC92000, v13, v14, "Websocket %{public}hd: No delegate to inform of error", v15, 6u);
      MEMORY[0x19400D804](v15, -1, -1);

    }
    else
    {

    }
  }
}

void sub_18FDF920C()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;

  if (qword_1EE1BCF98 != -1)
    swift_once();
  v1 = sub_1903D0340();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EE1BF650);
  v2 = v0;
  v3 = sub_1903D0328();
  v4 = sub_1903D091C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 33685760;
    sub_1903D0ACC();

    _os_log_impl(&dword_18FC92000, v3, v4, "Websocket %{public}hd: Cleaning up state", v5, 6u);
    MEMORY[0x19400D804](v5, -1, -1);

  }
  else
  {

  }
  v6 = OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_pingTimer;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_pingTimer], sel_invalidate);
  v7 = *(void **)&v2[v6];
  *(_QWORD *)&v2[v6] = 0;

  v8 = OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_webSocketTask;
  v9 = *(void **)&v2[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_webSocketTask];
  if (v9)
  {
    objc_msgSend(v9, sel_cancelWithCloseCode_reason_, 1000, 0);
    v10 = *(void **)&v2[v8];
  }
  else
  {
    v10 = 0;
  }
  *(_QWORD *)&v2[v8] = 0;

  v11 = OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_urlSession;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_urlSession], sel_invalidateAndCancel);
  v12 = *(void **)&v2[v11];
  *(_QWORD *)&v2[v11] = 0;

}

uint64_t sub_18FDF95E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1903D0178();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

double sub_18FDF96A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_18FD5293C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_18FDD1DF8();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_18FD533A0((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_18FDD3310(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_18FDF9798(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_18FD5293C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_18FDD1FDC();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 24 * v6);
  sub_18FDD34E4(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_18FDF9888@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_18FD75D8C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_18FDD26B8();
      v9 = v11;
    }

    sub_18FD533A0((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_18FDD36BC(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_18FDF996C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_18FD5293C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_18FDD21B4();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
  sub_18FDD34E8(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_18FDF9A50(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_18FD5293C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_18FDD2A04();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 24 * v6);
  sub_18FDD34E4(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_18FDF9B40(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_18FCD58F4(a1, a2);
  sub_18FDF9CE4(a1, a2);
  sub_18FCD5938(a1, a2);
  v4 = sub_1903D0634();
  swift_release();
  return v4;
}

uint64_t sub_18FDF9BB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1903D0634();
  *a1 = result;
  a1[1] = v3;
  return result;
}

_QWORD *sub_18FDF9BEC(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  result = a3(&v6, a1, v4);
  if (!v3)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_18FDF9C38(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_1903CFFBC();
  v9 = result;
  if (result)
  {
    result = sub_1903CFFD4();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_1903CFFC8();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  result = (uint64_t)sub_18FDF9BEC(v9, v15, a4);
  if (v4)
    return v16;
  return result;
}

void sub_18FDF9CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_1903D01C0();
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

_QWORD *sub_18FDF9D60()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD1B0);
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_18FCD58F4(v2, v0);
    v7 = sub_1903D0184();
    sub_18FCD5938(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x18FDF9E34);
    }
  }
  return v4;
}

uint64_t sub_18FDF9E4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1903D0634();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_18FDF9E80(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  int v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t inited;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;

  v45 = sub_1903D02EC();
  v4 = *(_QWORD *)(v45 - 8);
  v5 = MEMORY[0x1E0C80A78](v45);
  v44 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v43 = (char *)&v40 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0AC0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1903D02F8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v42 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE1BCF98 != -1)
    swift_once();
  v14 = sub_1903D0340();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EE1BF650);
  v15 = a1;
  v16 = a1;
  v17 = a2;
  v18 = sub_1903D0328();
  v19 = sub_1903D0934();
  if (os_log_type_enabled(v18, v19))
  {
    v40 = v11;
    v46 = v12;
    v41 = v4;
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v48 = v21;
    *(_DWORD *)v20 = 33686018;
    LOWORD(v47) = *(_WORD *)&v17[OBJC_IVAR____TtC11PassKitCore27RemoteNetworkPaymentSession_sessionIdentifier];
    sub_1903D0ACC();

    *(_WORD *)(v20 + 6) = 2080;
    if (a1)
    {
      swift_getErrorValue();
      v22 = sub_1903D0F40();
      v24 = v23;
    }
    else
    {
      v24 = 0xE300000000000000;
      v22 = 7104878;
    }
    v47 = sub_18FCD5144(v22, v24, (uint64_t *)&v48);
    sub_1903D0ACC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_18FC92000, v18, v19, "Session %{public}hd: Websocket error: %s", (uint8_t *)v20, 0x10u);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v21, -1, -1);
    MEMORY[0x19400D804](v20, -1, -1);

    v4 = v41;
    v12 = v46;
    v11 = v40;
  }
  else
  {

  }
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_14;
  }
  v48 = (unint64_t)a1;
  v25 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0A0);
  v26 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, v26 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_14:
    sub_18FD36250((uint64_t)v10, &qword_1EE1C0AC0);
    goto LABEL_15;
  }
  v27 = v42;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v42, v10, v11);
  sub_18FCD5E34(&qword_1EE1C0AC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB15C0], MEMORY[0x1E0CB15B8]);
  v46 = v12;
  v28 = v43;
  sub_1903D0100();
  v29 = v44;
  sub_1903D02E0();
  sub_18FCD5E34((unint64_t *)&unk_1EE1C0AD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1578], MEMORY[0x1E0CB1590]);
  v30 = v45;
  sub_1903D0730();
  sub_1903D0730();
  v31 = v48;
  v32 = v47;
  v33 = *(void (**)(char *, uint64_t))(v4 + 8);
  v33(v29, v30);
  v33(v28, v30);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v27, v11);
  if (v31 == v32)
  {
    v34 = 0xD000000000000038;
    v35 = 0x800000019045CE20;
    v36 = 6;
    goto LABEL_18;
  }
LABEL_15:
  v48 = 0;
  v49 = 0xE000000000000000;
  sub_1903D0BF8();
  swift_bridgeObjectRelease();
  v48 = 0xD00000000000001ALL;
  v49 = 0x800000019045CE00;
  if (a1)
  {
    swift_getErrorValue();
    sub_1903D0F40();
  }
  sub_1903D067C();
  swift_bridgeObjectRelease();
  v34 = v48;
  v35 = v49;
  v36 = 5;
LABEL_18:
  if (v17[OBJC_IVAR____TtC11PassKitCore27RemoteNetworkPaymentSession_paymentSheetStatusReported] == 1)
  {
    sub_18FD66854(v34, v35, v36);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BEB68);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19043CD00;
    *(_QWORD *)(inited + 32) = v34;
    *(_QWORD *)(inited + 40) = v35;
    *(_BYTE *)(inited + 48) = v36;
    sub_18FD9D408(0, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  v38 = v17[OBJC_IVAR____TtC11PassKitCore27RemoteNetworkPaymentSession_state];
  v17[OBJC_IVAR____TtC11PassKitCore27RemoteNetworkPaymentSession_state] = 8;
  return sub_18FD9BE08(v38);
}

uint64_t sub_18FDFA480()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_18FDFA4A4()
{
  sub_18FDF796C();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t sub_18FDFA4DC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_18FDFA500(void *a1)
{
  uint64_t v1;

  sub_18FDF7B58(a1, v1);
}

uint64_t sub_18FDFA508()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_18FDFA534()
{
  uint64_t v0;

  sub_18FDF7CA8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_18FDFA53C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_18FDFA568(uint64_t a1)
{
  uint64_t v1;

  sub_18FDF6940(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_18FDFA570(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0AF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FDFA5B8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0AF8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    v4 = sub_1903D09F4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  }

  return swift_deallocObject();
}

uint64_t sub_18FDFA674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0AF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_18FDFA6BC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0AF8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_18FDF6B14(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_18FDFA704(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  unsigned __int8 *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  int v9;
  NSObject *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  if (qword_1EE1BCF98 != -1)
    swift_once();
  v4 = sub_1903D0340();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EE1BF650);
  v5 = a3;
  v6 = sub_1903D0328();
  v7 = sub_1903D091C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 33685760;
    sub_1903D0ACC();

    _os_log_impl(&dword_18FC92000, v6, v7, "Session %{public}hd: Processing onMessage", v8, 6u);
    MEMORY[0x19400D804](v8, -1, -1);

  }
  else
  {

  }
  v9 = v5[OBJC_IVAR____TtC11PassKitCore27RemoteNetworkPaymentSession_state];
  if (v9 == 6)
  {
    sub_18FDA09E4();
  }
  else
  {
    if (v9 != 5)
    {
      if (v9 == 3)
      {
        sub_18FD9F064();
        return;
      }
      v10 = v5;
      v11 = sub_1903D0328();
      v12 = sub_1903D091C();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v13 = 33685760;
        sub_1903D0ACC();

        _os_log_impl(&dword_18FC92000, v11, v12, "Session %{public}hd: Received unsolicited message, treating as merchant update", v13, 6u);
        MEMORY[0x19400D804](v13, -1, -1);
      }
      else
      {

        v11 = v10;
      }

    }
    sub_18FD9F5B8();
  }
}

void sub_18FDFA958(void *a1)
{
  uint64_t v1;

  sub_18FDF6538(a1, v1);
}

void sub_18FDFA960(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;

  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x19400D8B8](v7);
  if (v8)
  {
    v9 = (void *)v8;
    switch(a1)
    {
      case 2:
        if (qword_1EE1BCF98 != -1)
          swift_once();
        v15 = sub_1903D0340();
        __swift_project_value_buffer(v15, (uint64_t)qword_1EE1BF650);
        v16 = v9;
        v17 = sub_1903D0328();
        v18 = sub_1903D091C();
        if (!os_log_type_enabled(v17, v18))
          goto LABEL_22;
        v19 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v19 = 33685760;
        sub_1903D0ACC();

        v20 = "Websocket %{public}hd: URLSession: task:didCompleteWithError: Credential renewal failed";
        break;
      case 1:
        if (qword_1EE1BCF98 != -1)
          swift_once();
        v21 = sub_1903D0340();
        __swift_project_value_buffer(v21, (uint64_t)qword_1EE1BF650);
        v16 = v9;
        v17 = sub_1903D0328();
        v18 = sub_1903D091C();
        if (!os_log_type_enabled(v17, v18))
          goto LABEL_22;
        v19 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v19 = 33685760;
        sub_1903D0ACC();

        v20 = "Websocket %{public}hd: URLSession: task:didCompleteWithError: Credential renewal rejected";
        break;
      case 0:
        if (qword_1EE1BCF98 != -1)
          swift_once();
        v10 = sub_1903D0340();
        __swift_project_value_buffer(v10, (uint64_t)qword_1EE1BF650);
        v11 = v9;
        v12 = sub_1903D0328();
        v13 = sub_1903D091C();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v14 = 33685760;
          sub_1903D0ACC();

          _os_log_impl(&dword_18FC92000, v12, v13, "Websocket %{public}hd: URLSession: task:didCompleteWithError: Renewed credential", v14, 6u);
          MEMORY[0x19400D804](v14, -1, -1);
        }
        else
        {

          v12 = v11;
        }

        objc_msgSend(a3, sel_cancel);
        v23 = *(Class *)((char *)&v11->isa
                       + OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_webSocketTask);
        *(Class *)((char *)&v11->isa
                 + OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_webSocketTask) = 0;

        sub_18FDF5670();
        goto LABEL_26;
      default:
        if (qword_1EE1BCF98 != -1)
          swift_once();
        v22 = sub_1903D0340();
        __swift_project_value_buffer(v22, (uint64_t)qword_1EE1BF650);
        v16 = v9;
        v17 = sub_1903D0328();
        v18 = sub_1903D091C();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v19 = 33685760;
          sub_1903D0ACC();

          v20 = "Websocket %{public}hd: URLSession: task:didCompleteWithError: Unknown credential renewal state";
          break;
        }
LABEL_22:

        v17 = v16;
        goto LABEL_23;
    }
    _os_log_impl(&dword_18FC92000, v17, v18, v20, v19, 6u);
    MEMORY[0x19400D804](v19, -1, -1);
LABEL_23:

    sub_18FDF8D80(a4);
LABEL_26:

  }
}

void sub_18FDFAD94(void *a1, uint64_t a2, void *a3, void *a4)
{
  _QWORD *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD v20[6];

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v9 = (void *)objc_opt_self();
  swift_retain();
  v10 = a3;
  v11 = a4;
  v12 = objc_msgSend(v9, sel_sharedService);
  if (v12)
  {
    v13 = v12;
    v20[4] = sub_18FDFC3B4;
    v20[5] = v8;
    v20[0] = MEMORY[0x1E0C809B0];
    v20[1] = 1107296256;
    v20[2] = sub_18FCDDD28;
    v20[3] = &block_descriptor_33_0;
    v14 = _Block_copy(v20);
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel__renewAppleAccountWithCompletionHandler_, v14);
    _Block_release(v14);
    swift_release();

  }
  else
  {
    if (qword_1EE1BCF98 != -1)
      swift_once();
    v15 = sub_1903D0340();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EE1BF650);
    v16 = a1;
    v17 = sub_1903D0328();
    v18 = sub_1903D0934();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v19 = 33685760;
      LOWORD(v20[0]) = *(_WORD *)&v16[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];
      sub_1903D0ACC();

      _os_log_impl(&dword_18FC92000, v17, v18, "Websocket %{public}hd: handleAuthenticationFailure: Web service not available", v19, 6u);
      MEMORY[0x19400D804](v19, -1, -1);

    }
    else
    {

    }
    sub_18FDFA960(2, a2, v10, a4);
    swift_release();
  }
}

void sub_18FDFAFE8(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  char v7;

  if (qword_1EE1BCF98 != -1)
    swift_once();
  v2 = sub_1903D0340();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EE1BF650);
  v3 = a1;
  v4 = sub_1903D0328();
  v5 = sub_1903D091C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 33685760;
    sub_1903D0ACC();

    _os_log_impl(&dword_18FC92000, v4, v5, "Session %{public}hd: Websocket connected", v6, 6u);
    MEMORY[0x19400D804](v6, -1, -1);

  }
  else
  {

  }
  v7 = *((_BYTE *)v3 + OBJC_IVAR____TtC11PassKitCore27RemoteNetworkPaymentSession_state);
  *((_BYTE *)v3 + OBJC_IVAR____TtC11PassKitCore27RemoteNetworkPaymentSession_state) = 2;
  sub_18FD9BE08(v7);
  sub_18FD9D16C();
}

void sub_18FDFB138()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;

  if (qword_1EE1BCF98 != -1)
    swift_once();
  v1 = sub_1903D0340();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EE1BF650);
  v2 = v0;
  v3 = sub_1903D0328();
  v4 = sub_1903D091C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 33685760;
    sub_1903D0ACC();

    _os_log_impl(&dword_18FC92000, v3, v4, "Websocket %{public}hd: Did connect", v5, 6u);
    MEMORY[0x19400D804](v5, -1, -1);

  }
  else
  {

  }
  v6 = (void *)MEMORY[0x19400D8B8](&v2[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_delegate]);
  if (v6)
  {
    sub_18FDFAFE8(v6);
    swift_unknownObjectRelease();
  }
  sub_18FDF8B24();
}

void sub_18FDFB290(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  char v7;

  if (qword_1EE1BCF98 != -1)
    swift_once();
  v2 = sub_1903D0340();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EE1BF650);
  v3 = a1;
  v4 = sub_1903D0328();
  v5 = sub_1903D091C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 33685760;
    sub_1903D0ACC();

    _os_log_impl(&dword_18FC92000, v4, v5, "Session %{public}hd: Websocket disconnected", v6, 6u);
    MEMORY[0x19400D804](v6, -1, -1);

  }
  else
  {

  }
  if ((*((_BYTE *)v3 + OBJC_IVAR____TtC11PassKitCore27RemoteNetworkPaymentSession_paymentSheetStatusReported) & 1) == 0)
  {
    sub_18FD9D408(0, (uint64_t)&unk_1E2AA8A98);
    swift_arrayDestroy();
  }
  v7 = *((_BYTE *)v3 + OBJC_IVAR____TtC11PassKitCore27RemoteNetworkPaymentSession_state);
  *((_BYTE *)v3 + OBJC_IVAR____TtC11PassKitCore27RemoteNetworkPaymentSession_state) = 8;
  sub_18FD9BE08(v7);
}

void *sub_18FDFB418(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  uint64_t v6;
  id v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *result;
  uint64_t v18;

  if (qword_1EE1BCF98 != -1)
    swift_once();
  v6 = sub_1903D0340();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EE1BF650);
  v7 = v3;
  sub_18FD4D5EC(a2, a3);
  v8 = (char *)v7;
  sub_18FD4D5EC(a2, a3);
  v9 = sub_1903D0328();
  v10 = sub_1903D091C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v18 = v12;
    *(_DWORD *)v11 = 33686274;

    sub_1903D0ACC();
    *(_WORD *)(v11 + 6) = 2048;
    sub_1903D0ACC();
    *(_WORD *)(v11 + 16) = 2080;
    sub_18FD4D5EC(a2, a3);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1C0B20);
    v13 = sub_1903D061C();
    sub_18FCD5144(v13, v14, &v18);
    sub_1903D0ACC();
    swift_bridgeObjectRelease();
    sub_18FD4D5D8(a2, a3);
    sub_18FD4D5D8(a2, a3);
    _os_log_impl(&dword_18FC92000, v9, v10, "Websocket %{public}hd: Did disconnect, code: %ld, reason: %s", (uint8_t *)v11, 0x1Au);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v12, -1, -1);
    MEMORY[0x19400D804](v11, -1, -1);
  }
  else
  {

    sub_18FD4D5D8(a2, a3);
    sub_18FD4D5D8(a2, a3);
  }

  v15 = OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_pingTimer;
  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_pingTimer], sel_invalidate);
  v16 = *(void **)&v8[v15];
  *(_QWORD *)&v8[v15] = 0;

  result = (void *)MEMORY[0x19400D8B8](&v8[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_delegate]);
  if (result)
  {
    sub_18FDFB290(result);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_18FDFB6BC(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;

  if (qword_1EE1BCF98 != -1)
    swift_once();
  v3 = sub_1903D0340();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EE1BF650);
  v4 = a1;
  v5 = a1;
  v6 = v1;
  v7 = sub_1903D0328();
  v8 = sub_1903D0934();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 33686018;
    sub_1903D0ACC();

    *(_WORD *)(v9 + 6) = 2080;
    if (a1)
    {
      swift_getErrorValue();
      v11 = sub_1903D0F40();
      v13 = v12;
    }
    else
    {
      v13 = 0xE300000000000000;
      v11 = 7104878;
    }
    sub_18FCD5144(v11, v13, &v15);
    sub_1903D0ACC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_18FC92000, v7, v8, "Websocket %{public}hd: URLSession didBecomeInvalidWithError: %s", (uint8_t *)v9, 0x10u);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v10, -1, -1);
    MEMORY[0x19400D804](v9, -1, -1);
  }
  else
  {

  }
  v14 = *(void **)&v6[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_urlSession];
  *(_QWORD *)&v6[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_urlSession] = 0;

}

void sub_18FDFB8DC(uint64_t a1, void *a2)
{
  char *v2;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  char *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  id v43;
  char *v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  NSObject *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;

  v4 = *(void **)&v2[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_webSocketTask];
  if (!v4)
    goto LABEL_12;
  sub_18FDFC344();
  v61 = v4;
  if ((sub_1903D0A54() & 1) == 0)
  {

LABEL_12:
    if (qword_1EE1BCF98 != -1)
      swift_once();
    v15 = sub_1903D0340();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EE1BF650);
    v16 = a2;
    v17 = v2;
    v18 = a2;
    v19 = sub_1903D0328();
    v20 = sub_1903D0934();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v62 = v22;
      *(_DWORD *)v21 = 33686018;
      sub_1903D0ACC();

      *(_WORD *)(v21 + 6) = 2080;
      if (a2)
      {
        swift_getErrorValue();
        v23 = sub_1903D0F40();
        v25 = v24;
      }
      else
      {
        v23 = 7104878;
        v25 = 0xE300000000000000;
      }
      sub_18FCD5144(v23, v25, &v62);
      sub_1903D0ACC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18FC92000, v19, v20, "Websocket %{public}hd: URLSession: task:didCompleteWithError: Unknown task, error: %s", (uint8_t *)v21, 0x10u);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v22, -1, -1);
      MEMORY[0x19400D804](v21, -1, -1);
    }
    else
    {

    }
    sub_18FDF8D80(a2);
    return;
  }
  v5 = objc_msgSend(v61, sel_response);
  if (!v5)
  {
LABEL_22:
    if (qword_1EE1BCF98 != -1)
      swift_once();
    v26 = sub_1903D0340();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EE1BF650);
    v27 = a2;
    v28 = v2;
    v29 = a2;
    v30 = sub_1903D0328();
    v31 = sub_1903D0934();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v62 = v33;
      *(_DWORD *)v32 = 33686018;
      sub_1903D0ACC();

      *(_WORD *)(v32 + 6) = 2080;
      if (a2)
      {
        swift_getErrorValue();
        v34 = sub_1903D0F40();
        v36 = v35;
      }
      else
      {
        v34 = 7104878;
        v36 = 0xE300000000000000;
      }
      sub_18FCD5144(v34, v36, &v62);
      sub_1903D0ACC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18FC92000, v30, v31, "Websocket %{public}hd: URLSession: task:didCompleteWithError with an unknown kind of response, error: %s", (uint8_t *)v32, 0x10u);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v33, -1, -1);
      MEMORY[0x19400D804](v32, -1, -1);
    }
    else
    {

    }
    sub_18FDF8D80(a2);

    return;
  }
  v6 = v5;
  objc_opt_self();
  v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7)
  {

    goto LABEL_22;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, sel_statusCode);
  if (v9 == (id)200)
  {
    if (qword_1EE1BCF98 != -1)
      swift_once();
    v37 = sub_1903D0340();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EE1BF650);
    v38 = v2;
    v39 = sub_1903D0328();
    v40 = sub_1903D0928();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v41 = 33685760;
      LOWORD(v62) = *(_WORD *)&v38[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];
      sub_1903D0ACC();

      _os_log_impl(&dword_18FC92000, v39, v40, "Websocket %{public}hd: URLSession: task:didCompleteWithError: Received Status Code 200", v41, 6u);
      MEMORY[0x19400D804](v41, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (v9 == (id)401)
    {
      if (qword_1EE1BCF98 != -1)
        swift_once();
      v10 = sub_1903D0340();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EE1BF650);
      v11 = v2;
      v12 = sub_1903D0328();
      v13 = sub_1903D0934();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v14 = 33685760;
        LOWORD(v62) = *(_WORD *)&v11[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier];
        sub_1903D0ACC();

        _os_log_impl(&dword_18FC92000, v12, v13, "Websocket %{public}hd: URLSession: task:didCompleteWithError: Received Status Code 401", v14, 6u);
        MEMORY[0x19400D804](v14, -1, -1);

      }
      else
      {

      }
      if (*(uint64_t *)&v11[OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_connectionAttemptCount] < 3)
      {
        v57 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v58 = v61;
        swift_retain();
        v59 = a2;
        sub_18FDFAD94(v11, v57, v58, a2);
        swift_release();

        swift_release();
        return;
      }
      v53 = v11;
      v54 = sub_1903D0328();
      v55 = sub_1903D0934();
      if (os_log_type_enabled(v54, v55))
      {
        v56 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v56 = 33685760;
        LOWORD(v62) = *(_WORD *)((char *)&v53->isa
                               + OBJC_IVAR____TtC11PassKitCore39RemoteNetworkPaymentWebsocketURLSession_sessionIdentifier);
        sub_1903D0ACC();

        _os_log_impl(&dword_18FC92000, v54, v55, "Websocket %{public}hd: URLSession: task:didCompleteWithError: Exceeded connection attempt limit, aborting", v56, 6u);
        MEMORY[0x19400D804](v56, -1, -1);
      }
      else
      {

        v54 = v53;
      }

      sub_18FDF8D80(a2);
    }
    else
    {
      if (qword_1EE1BCF98 != -1)
        swift_once();
      v42 = sub_1903D0340();
      __swift_project_value_buffer(v42, (uint64_t)qword_1EE1BF650);
      v43 = a2;
      v44 = v2;
      v45 = a2;
      v6 = v6;
      v46 = sub_1903D0328();
      v47 = sub_1903D0934();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = swift_slowAlloc();
        v49 = swift_slowAlloc();
        v62 = v49;
        *(_DWORD *)v48 = 33686274;
        sub_1903D0ACC();

        *(_WORD *)(v48 + 6) = 2048;
        objc_msgSend(v8, sel_statusCode);
        sub_1903D0ACC();

        *(_WORD *)(v48 + 16) = 2080;
        if (a2)
        {
          swift_getErrorValue();
          v50 = sub_1903D0F40();
          v52 = v51;
        }
        else
        {
          v50 = 7104878;
          v52 = 0xE300000000000000;
        }
        sub_18FCD5144(v50, v52, &v62);
        sub_1903D0ACC();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_18FC92000, v46, v47, "Websocket %{public}hd: URLSession: task:didCompleteWithError: Status Code: %ld, Error: %s", (uint8_t *)v48, 0x1Au);
        swift_arrayDestroy();
        MEMORY[0x19400D804](v49, -1, -1);
        MEMORY[0x19400D804](v48, -1, -1);

      }
      else
      {

      }
      if (a2)
      {
        v60 = a2;
        sub_18FDF8D80(a2);

        return;
      }
    }

  }
}

unint64_t sub_18FDFC344()
{
  unint64_t result;

  result = qword_1EE1C0B18;
  if (!qword_1EE1C0B18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE1C0B18);
  }
  return result;
}

uint64_t sub_18FDFC380()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_18FDFC3B4(uint64_t a1)
{
  uint64_t v1;

  sub_18FDFA960(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t static ProvisioningCarKeyStepTrackKey.TrackedPass.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_1EE1C0BF0;
}

uint64_t static ProvisioningCarKeyStepTrackKey.TrackedPass.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE1C0BF0 = a1;
  return result;
}

uint64_t (*static ProvisioningCarKeyStepTrackKey.TrackedPass.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

id ProvisioningCarKeyStepTrackKey.TrackedPass.__allocating_init(passURL:subcredential:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR___PKProvisioningCarKeyStepTrackKeyTrackedPass_passURL];
  v7 = sub_1903D0178();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  *(_QWORD *)&v5[OBJC_IVAR___PKProvisioningCarKeyStepTrackKeyTrackedPass_subcredential] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

id ProvisioningCarKeyStepTrackKey.TrackedPass.init(passURL:subcredential:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v5 = &v2[OBJC_IVAR___PKProvisioningCarKeyStepTrackKeyTrackedPass_passURL];
  v6 = sub_1903D0178();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  *(_QWORD *)&v2[OBJC_IVAR___PKProvisioningCarKeyStepTrackKeyTrackedPass_subcredential] = a2;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for ProvisioningCarKeyStepTrackKey.TrackedPass();
  v8 = objc_msgSendSuper2(&v10, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t type metadata accessor for ProvisioningCarKeyStepTrackKey.TrackedPass()
{
  uint64_t result;

  result = qword_1EE1C0CA0;
  if (!qword_1EE1C0CA0)
    return swift_getSingletonMetadata();
  return result;
}

id ProvisioningCarKeyStepTrackKey.TrackedPass.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ProvisioningCarKeyStepTrackKey.TrackedPass.init(coder:)(a1);
}

id ProvisioningCarKeyStepTrackKey.TrackedPass.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  objc_class *v22;
  id v23;
  objc_super v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BEFE0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v25 - v7;
  v9 = sub_1903D0178();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCDC600(0, &qword_1EE1C0C00);
  v13 = v1;
  v14 = sub_1903D0A18();
  if (!v14)
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    goto LABEL_7;
  }
  v15 = (void *)v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v16(v6, 1, 1, v9);
  sub_18FDFC9E0();
  sub_1903D0D60();

  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v17(v6, 1, v9) == 1)
  {
LABEL_7:
    v16(v8, 1, 1, v9);
    goto LABEL_8;
  }
  v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v18(v8, v6, v9);
  v16(v8, 0, 1, v9);
  if (v17(v8, 1, v9) == 1)
  {
LABEL_8:

    sub_18FCD7F70((uint64_t)v8);
LABEL_9:
    type metadata accessor for ProvisioningCarKeyStepTrackKey.TrackedPass();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v18(v12, v8, v9);
  v19 = &v13[OBJC_IVAR___PKProvisioningCarKeyStepTrackKeyTrackedPass_passURL];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&v13[OBJC_IVAR___PKProvisioningCarKeyStepTrackKeyTrackedPass_passURL], v12, v9);
  sub_18FCDC600(0, &qword_1EE1C0C10);
  v20 = sub_1903D0A18();
  v21 = *(void (**)(char *, uint64_t))(v10 + 8);
  v21(v12, v9);
  if (!v20)
  {

    v21(v19, v9);
    goto LABEL_9;
  }
  *(_QWORD *)&v13[OBJC_IVAR___PKProvisioningCarKeyStepTrackKeyTrackedPass_subcredential] = v20;

  v22 = (objc_class *)type metadata accessor for ProvisioningCarKeyStepTrackKey.TrackedPass();
  v25.receiver = v13;
  v25.super_class = v22;
  v23 = objc_msgSendSuper2(&v25, sel_init);

  return v23;
}

unint64_t sub_18FDFC9E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1C0C08;
  if (!qword_1EE1C0C08)
  {
    v1 = sub_1903D0178();
    result = MEMORY[0x19400D72C](MEMORY[0x1E0CB0040], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1C0C08);
  }
  return result;
}

void sub_18FDFCA4C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;

  v2 = v1;
  v4 = (void *)sub_1903D0148();
  v5 = (void *)sub_1903D05A4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  v6 = *(_QWORD *)(v2 + OBJC_IVAR___PKProvisioningCarKeyStepTrackKeyTrackedPass_subcredential);
  v7 = (id)sub_1903D05A4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

}

id ProvisioningCarKeyStepTrackKey.TrackedPass.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ProvisioningCarKeyStepTrackKey.TrackedPass.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ProvisioningCarKeyStepTrackKey.TrackedPass.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProvisioningCarKeyStepTrackKey.TrackedPass();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

__n128 ProvisioningCarKeyStepTrackKey.__allocating_init(context:credential:sharedState:)(uint64_t a1, __n128 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  __n128 result;

  v6 = swift_allocObject();
  v7 = a2[1].n128_u64[0];
  v8 = a2[1].n128_u8[8];
  *(_QWORD *)(v6 + 16) = a1;
  result = *a2;
  *(__n128 *)(v6 + 24) = *a2;
  *(_QWORD *)(v6 + 40) = v7;
  *(_BYTE *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 56) = a3;
  return result;
}

uint64_t ProvisioningCarKeyStepTrackKey.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 40) = v4;
  *(_BYTE *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = a3;
  return v3;
}

uint64_t ProvisioningCarKeyStepTrackKey.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return v0;
}

uint64_t ProvisioningCarKeyStepTrackKey.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return swift_deallocClassInstance();
}

__n128 sub_18FDFCD64@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  __n128 result;

  type metadata accessor for ProvisioningCarKeyStepTrackKey();
  v8 = swift_allocObject();
  v9 = a2[1].n128_u64[0];
  v10 = a2[1].n128_u8[8];
  *(_QWORD *)(v8 + 16) = a1;
  result = *a2;
  *(__n128 *)(v8 + 24) = *a2;
  *(_QWORD *)(v8 + 40) = v9;
  *(_BYTE *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 56) = a3;
  *a4 = v8;
  return result;
}

uint64_t type metadata accessor for ProvisioningCarKeyStepTrackKey()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningCarKeyStepTrackKey()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningCarKeyStepTrackKey.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_18FDFCDFC()
{
  return type metadata accessor for ProvisioningCarKeyStepTrackKey.TrackedPass();
}

uint64_t sub_18FDFCE04()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1903D0178();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ProvisioningCarKeyStepTrackKey.TrackedPass()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningCarKeyStepTrackKey.TrackedPass.__allocating_init(passURL:subcredential:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ProvisioningCarKeyStepTrackKey.TrackedPass.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ProvisioningCarKeyStepTrackKey.TrackedPass.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t initializeBufferWithCopyOfBuffer for ProvisioningCarKeyStepTrackKey.TrackKeyResult(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for ProvisioningCarKeyStepTrackKey.TrackKeyResult(id *a1)
{

}

uint64_t assignWithCopy for ProvisioningCarKeyStepTrackKey.TrackKeyResult(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;
  void *v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;

  return a1;
}

uint64_t assignWithTake for ProvisioningCarKeyStepTrackKey.TrackKeyResult(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

ValueMetadata *type metadata accessor for ProvisioningCarKeyStepTrackKey.TrackKeyResult()
{
  return &type metadata for ProvisioningCarKeyStepTrackKey.TrackKeyResult;
}

void sub_18FDFCFA8(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64x2_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;

  v3 = *(void **)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(unsigned __int8 *)(v1 + 48);
  LOBYTE(v30) = *(_BYTE *)(v1 + 48);
  v7 = ProvisioningCredentialsConfiguration.Credential.carKeyTransferComponents.getter();
  if (v7)
  {
    v10 = (void *)v7;
    v11 = v9;

    v12 = objc_msgSend(v10, sel_vehicleIssuer, v3, v4, v5, v30);
    v13 = sub_1903D05C8();
    v15 = v14;

    v16 = objc_msgSend(v10, sel_vehicleModel);
    v17 = sub_1903D05C8();
    v19 = v18;

    v20 = vdupq_n_s64(1uLL);
  }
  else
  {
    if (v6)
      v21 = 0;
    else
      v21 = v3;
    sub_18FCDC6A4(v3, v4, v5, v6);
    v22 = objc_msgSend(v21, sel_carKeyTerminalPairingCredential, v3, v4, v5, v30);

    v23 = objc_msgSend(v22, sel_configuration);
    sub_18FCD6F28(v3, v4, v5, v6);
    v20 = 0uLL;
    if (!v23)
    {
      v13 = 0;
      v17 = 0;
      v15 = 1;
      goto LABEL_4;
    }
    v24 = objc_msgSend(v23, sel_issuerIdentifier, 0.0);
    if (v24)
    {
      v25 = v24;
      v13 = sub_1903D05C8();
      v15 = v26;

    }
    else
    {
      v13 = 0;
      v15 = 0;
    }
    v27 = objc_msgSend(v23, sel_localizedDescription);
    if (!v27)
    {

      v17 = 0;
      v20 = 0uLL;
      goto LABEL_4;
    }
    v28 = v27;
    v17 = sub_1903D05C8();
    v19 = v29;

    v20.i64[1] = 0;
  }
  v20.i64[0] = v19;
LABEL_4:
  *(_QWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = v15;
  *(_QWORD *)(a1 + 16) = v17;
  *(int64x2_t *)(a1 + 24) = v20;
}

void sub_18FDFD1A8(int a1, void *a2, uint64_t a3, uint64_t a4, id a5, uint64_t a6, unint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  id v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  _QWORD *v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t aBlock[6];

  v16 = objc_msgSend(a5, sel_identifier);
  if (!v16)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }
  v17 = v16;
  v35 = sub_1903D05C8();
  v19 = v18;

  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v20 = sub_1903D0340();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v21 = sub_1903D0328();
  v22 = sub_1903D0940();
  v34 = a3;
  if (os_log_type_enabled(v21, v22))
  {
    v33 = a4;
    v23 = a2;
    v24 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    aBlock[0] = v25;
    *(_DWORD *)v24 = 136315394;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a6, a7, aBlock);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_18FCD5144(v35, v19, aBlock);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v21, v22, "[%s] Fetching pretrack request for key identifier: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v25, -1, -1);
    v26 = v24;
    a2 = v23;
    a4 = v33;
    MEMORY[0x19400D804](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v27 = objc_msgSend(a8, sel_targetDevice, v33);
  if (!v27)
    goto LABEL_12;
  v28 = v27;
  if ((objc_msgSend(v27, sel_respondsToSelector_, sel_carKeyGetPretrackRequestForKeyWithInvitationIdentifier_completion_) & 1) != 0)
  {
    v29 = (_QWORD *)swift_allocObject();
    v29[2] = a9;
    v29[3] = a10;
    v29[4] = v34;
    v29[5] = a4;
    v29[6] = a2;
    swift_retain();
    swift_retain();
    swift_retain();
    v30 = a2;
    v31 = (void *)sub_1903D05A4();
    aBlock[4] = (uint64_t)sub_18FDFECB0;
    aBlock[5] = (uint64_t)v29;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_18FDB0DD4;
    aBlock[3] = (uint64_t)&block_descriptor_41_1;
    v32 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_carKeyGetPretrackRequestForKeyWithInvitationIdentifier_completion_, v31, v32);
    _Block_release(v32);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_18FDFD538(void *a1, id a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, BOOL), uint64_t a6, uint64_t a7)
{
  id *v9;
  void *v12;
  id v13;
  id v15;
  void *v16;
  id v17;
  id v19;
  id v20;
  id v21;

  v9 = (id *)(a4 + 16);
  if (a1)
  {
    swift_beginAccess();
    v12 = *(void **)(a3 + 16);
    *(_QWORD *)(a3 + 16) = a1;
    v13 = a1;
LABEL_5:

    goto LABEL_6;
  }
  if (a2)
  {
    v15 = a2;
    v16 = (void *)sub_1903D0124();
    v17 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v16, 5);

    swift_beginAccess();
    v12 = *v9;
    *v9 = v17;
    goto LABEL_5;
  }
  if (PKSharingForceErrorAfterKMLReturnsPreTrackRequest())
  {
    v19 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
    swift_beginAccess();
    v20 = *v9;
    *v9 = v19;

    swift_beginAccess();
    if (*v9)
    {
      v21 = *v9;
      v12 = (void *)sub_1903D05A4();
      objc_msgSend(v21, sel_addInternalDebugDescription_, v12);

      goto LABEL_5;
    }
  }
LABEL_6:
  swift_beginAccess();
  return a5(a7, *v9 != 0);
}

void sub_18FDFD6FC(uint64_t a1, void *a2, void (*a3)(void *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  _QWORD *v30;
  void *v31;
  id v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t aBlock[10];

  if (a6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = (void *)sub_1903D05A4();
    swift_bridgeObjectRelease();
    v22 = a12;
    if (a8)
    {
LABEL_3:
      v23 = (void *)sub_1903D05A4();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v21 = 0;
    v22 = a12;
    if (a8)
      goto LABEL_3;
  }
  v23 = 0;
LABEL_6:
  v24 = objc_msgSend(objc_allocWithZone((Class)PKCarKeyCredentialRegistrationMetadata), sel_initWithMake_model_keyType_, v21, v23, a9);

  if (a10)
  {
    if (a10 == 1)
    {
      v25 = objc_msgSend(objc_allocWithZone((Class)PKPaymentRegisterPreTrackCredentialRequest), sel_initWithCredential_metadata_, v22, v24);
      if (!v25)
        goto LABEL_15;
LABEL_14:
      v28 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      v29 = v25;
      swift_release();
      v30 = (_QWORD *)swift_allocObject();
      v30[2] = a17;
      v30[3] = a18;
      v30[4] = v28;
      v30[5] = a3;
      v30[6] = a4;
      v30[7] = a2;
      aBlock[4] = (uint64_t)sub_18FDFED18;
      aBlock[5] = (uint64_t)v30;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_18FDB0DD4;
      aBlock[3] = (uint64_t)&block_descriptor_58_2;
      v31 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      v32 = a2;
      swift_release();
      objc_msgSend(a15, sel_registerCredentialWithRequest_withCompletion_, v29, v31);

      _Block_release(v31);
      v24 = v29;
      goto LABEL_21;
    }
    v27 = objc_msgSend(objc_allocWithZone((Class)PKPaymentRegisterTrackCredentialRequest), sel_initWithCredential_registrationData_metadata_, v22, a10, v24);
  }
  else
  {
    swift_beginAccess();
    v26 = *(_QWORD *)(a11 + 16);
    if (!v26)
      goto LABEL_15;
    v27 = objc_msgSend(objc_allocWithZone((Class)PKPaymentRegisterPreTrackCredentialRequest), sel_initWithCredential_encryptedVehicleDataRequest_metadata_, v22, v26, v24);
  }
  v25 = v27;
  if (v27)
    goto LABEL_14;
LABEL_15:
  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v33 = sub_1903D0340();
  __swift_project_value_buffer(v33, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain_n();
  v34 = sub_1903D0328();
  v35 = sub_1903D0940();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    aBlock[0] = v37;
    *(_DWORD *)v36 = 136315138;
    swift_bridgeObjectRetain();
    aBlock[6] = sub_18FCD5144(a13, a14, aBlock);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v34, v35, "[%s] Failed to create registration request", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v37, -1, -1);
    MEMORY[0x19400D804](v36, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  a3(a2, 1);
LABEL_21:

}

uint64_t sub_18FDFDB40(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, BOOL), uint64_t a7, uint64_t a8)
{
  id *v10;
  void *v13;
  id v14;
  id v16;
  id v17;
  id v18;
  id v19;

  v10 = (id *)(a4 + 16);
  if (a1)
  {
    swift_beginAccess();
    v13 = *(void **)(a3 + 16);
    *(_QWORD *)(a3 + 16) = a1;
    v14 = a1;
LABEL_10:

    goto LABEL_11;
  }
  if (!PKSharingForceErrorAfterBrokerReturnsRegisterCredentialResponse())
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v19 = sub_18FDFFD8C(a2);
      swift_release();
    }
    else
    {
      v19 = 0;
    }
    swift_beginAccess();
    v13 = *v10;
    *v10 = v19;
    goto LABEL_10;
  }
  v16 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
  swift_beginAccess();
  v17 = *v10;
  *v10 = v16;

  swift_beginAccess();
  if (*v10)
  {
    v18 = *v10;
    v13 = (void *)sub_1903D05A4();
    objc_msgSend(v18, sel_addInternalDebugDescription_, v13);

    goto LABEL_10;
  }
LABEL_11:
  swift_beginAccess();
  return a6(a8, *v10 != 0);
}

id sub_18FDFDCFC(uint64_t a1, void *a2, uint64_t (*a3)(void *, uint64_t), uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13)
{
  void *v16;
  uint64_t v17;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id result;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  id v34;
  void *v35;
  uint64_t (*v36)(char);
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t aBlock[7];

  if (a5 < 2)
  {
    v16 = a2;
    v17 = 0;
    return (id)a3(v16, v17);
  }
  swift_beginAccess();
  v21 = *(void **)(a6 + 16);
  if (!v21)
  {
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v37 = sub_1903D0340();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain_n();
    v38 = sub_1903D0328();
    v39 = sub_1903D0940();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      *(_DWORD *)v40 = 136315138;
      aBlock[0] = v41;
      swift_bridgeObjectRetain();
      aBlock[6] = sub_18FCD5144(a7, a8, aBlock);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FC92000, v38, v39, "[%s] Failed to get track key response", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v41, -1, -1);
      MEMORY[0x19400D804](v40, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v16 = a2;
    v17 = 1;
    return (id)a3(v16, v17);
  }
  v22 = v21;
  v23 = objc_msgSend(v22, sel_vehicleMobilizationEncryptedContainer);
  v24 = a11;
  v25 = a10;
  result = objc_msgSend(v25, sel_targetDevice);
  if (result)
  {
    v27 = result;

    if ((objc_msgSend(v27, sel_respondsToSelector_, sel_carKeyUpdateTrackingAttestation_forCredential_encryptedContainer_completion_) & 1) != 0)
    {
      v28 = objc_msgSend(v22, sel_credentialAttestation);
      if (v28)
      {
        v29 = v28;
        v30 = sub_1903D01B4();
        v32 = v31;

        v33 = (_QWORD *)swift_allocObject();
        v33[2] = a13;
        v33[3] = a3;
        v33[4] = a4;
        v33[5] = a2;
        swift_retain();
        swift_retain();
        v34 = a2;
        v35 = (void *)sub_1903D01A8();
        v36 = sub_18FE001FC;
      }
      else
      {
        v33 = (_QWORD *)swift_allocObject();
        v33[2] = a13;
        v33[3] = a3;
        v33[4] = a4;
        v33[5] = a2;
        swift_retain();
        swift_retain();
        v42 = a2;
        v35 = 0;
        v30 = 0;
        v32 = 0xF000000000000000;
        v36 = sub_18FDFECC4;
      }
      aBlock[4] = (uint64_t)v36;
      aBlock[5] = (uint64_t)v33;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_18FDA4ED8;
      aBlock[3] = (uint64_t)&block_descriptor_47_0;
      v43 = _Block_copy(aBlock);
      sub_18FD77978((uint64_t)v36);
      swift_release();
      objc_msgSend(v27, sel_carKeyUpdateTrackingAttestation_forCredential_encryptedContainer_completion_, v35, a12, v23, v43);
      _Block_release(v43);
      swift_release();

      swift_unknownObjectRelease();
      return (id)sub_18FD4D5D8(v30, v32);
    }
    else
    {

      return (id)swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_18FDFE0F8(char a1, uint64_t a2, uint64_t (*a3)(uint64_t, BOOL), uint64_t a4, uint64_t a5)
{
  id *v7;
  id v8;
  id v9;
  id v10;
  void *v11;

  v7 = (id *)(a2 + 16);
  if ((a1 & 1) == 0)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
    swift_beginAccess();
    v9 = *v7;
    *v7 = v8;

    swift_beginAccess();
    if (*v7)
    {
      v10 = *v7;
      v11 = (void *)sub_1903D05A4();
      objc_msgSend(v10, sel_addInternalDebugDescription_, v11);

    }
  }
  swift_beginAccess();
  return a3(a5, *v7 != 0);
}

void sub_18FDFE20C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(id, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void **v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void (*v33)(char *, char *, uint64_t);
  objc_class *v34;
  char *v35;
  void *v36;
  id v37;
  id v38;
  void (*v39)(char *, uint64_t);
  _QWORD v40[2];
  void (*v41)(id, uint64_t);
  objc_super v42;

  v40[0] = a8;
  v40[1] = a7;
  v41 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BEFE0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v40 - v15;
  v17 = sub_1903D0178();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v40 - v22;
  v24 = (void **)(a4 + 16);
  swift_beginAccess();
  if (!*(_QWORD *)(a4 + 16) && (objc_msgSend(a3, sel_isCanceled) & 1) == 0)
  {
    swift_beginAccess();
    v25 = *(void **)(a5 + 16);
    if (v25)
    {
      v26 = objc_msgSend(v25, sel_passURL);
      if (v26)
      {
        v27 = v26;
        sub_1903D0160();

        v28 = 0;
      }
      else
      {
        v28 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v14, v28, 1, v17);
      sub_18FCD6068((uint64_t)v14, (uint64_t)v16, (uint64_t *)&unk_1EE1BEFE0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v16, v17);
        v33 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
        v33(v21, v23, v17);
        v34 = (objc_class *)type metadata accessor for ProvisioningCarKeyStepTrackKey.TrackedPass();
        v35 = (char *)objc_allocWithZone(v34);
        v33(&v35[OBJC_IVAR___PKProvisioningCarKeyStepTrackKeyTrackedPass_passURL], v21, v17);
        v36 = (void *)v40[0];
        *(_QWORD *)&v35[OBJC_IVAR___PKProvisioningCarKeyStepTrackKeyTrackedPass_subcredential] = v40[0];
        v42.receiver = v35;
        v42.super_class = v34;
        v37 = v36;
        v38 = objc_msgSendSuper2(&v42, sel_init);
        v39 = *(void (**)(char *, uint64_t))(v18 + 8);
        v39(v21, v17);
        v41(v38, 0);

        v39(v23, v17);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    }
    sub_18FCD7F70((uint64_t)v16);
  }
  swift_beginAccess();
  v29 = *v24;
  if (*v24)
  {
    v30 = v29;
    v41(v29, 1);
  }
  else
  {
    v31 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
    v32 = (void *)sub_1903D05A4();
    objc_msgSend(v31, sel_addInternalDebugDescription_, v32);

    v30 = v31;
    v41(v31, 1);

  }
}

void sub_18FDFE568(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  _QWORD *v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t aBlock;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t (*v66)();
  _QWORD *v67;
  _BYTE v68[40];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  swift_retain();
  swift_retain();
  sub_18FDFCFA8((uint64_t)v68);
  sub_18FCD6068((uint64_t)v68, (uint64_t)&v69, (uint64_t *)&unk_1EE1C0CB0);
  v13 = v70;
  if (v70 == 1)
  {
    v14 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
    v15 = (void *)sub_1903D05A4();
    objc_msgSend(v14, sel_addInternalDebugDescription_, v15);

    swift_beginAccess();
    if (MEMORY[0x19400D8B8](a4 + 16))
    {
      v16 = *(_QWORD *)(a4 + 24);
      ObjectType = swift_getObjectType();
      v18 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 64);
      v19 = v14;
      v18(v14, 1, a5, a6, ObjectType, v16);
      swift_release();

      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();

    }
  }
  else
  {
    v56 = a1;
    v52 = v72;
    v53 = v71;
    v50 = v69;
    v51 = v73;
    v20 = objc_msgSend(*(id *)(a3 + 56), "sid");
    v21 = sub_1903D05C8();
    v58 = v22;
    v59 = v21;

    v23 = *(_QWORD *)(a3 + 16);
    swift_beginAccess();
    v54 = *(_BYTE *)(v23 + 64);
    v24 = *(void **)(v23 + 72);
    v25 = *(void **)(v23 + 80);
    v26 = objc_allocWithZone((Class)PKAsyncUnaryOperationComposer);
    v55 = v25;
    v57 = v24;
    v61 = objc_msgSend(v26, sel_init);
    v27 = objc_msgSend(objc_allocWithZone((Class)PKDAManager), sel_init);
    if (v27)
    {
      v49 = v27;
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = 0;
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 16) = 0;
      if (!a2)
      {
        v30 = (_QWORD *)swift_allocObject();
        v30[2] = v56;
        v30[3] = v59;
        v30[4] = v58;
        v30[5] = v57;
        v30[6] = v29;
        v30[7] = v28;
        v66 = sub_18FDFECA8;
        v67 = v30;
        aBlock = MEMORY[0x1E0C809B0];
        v63 = 1107296256;
        v64 = sub_18FD5B4F8;
        v65 = &block_descriptor_35_0;
        v31 = _Block_copy(&aBlock);
        v32 = v57;
        v33 = v56;
        a2 = 0;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_release();
        objc_msgSend(v61, sel_addOperation_, v31);
        _Block_release(v31);
      }
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = 0;
      v35 = swift_allocObject();
      swift_weakInit();
      v36 = (_QWORD *)swift_allocObject();
      v36[2] = v50;
      v36[3] = v13;
      v36[4] = v53;
      v36[5] = v52;
      v36[6] = v51;
      v36[7] = a2;
      v36[8] = v29;
      v36[9] = v56;
      v36[10] = v59;
      v36[11] = v58;
      v36[12] = v57;
      v36[13] = v35;
      v36[14] = v34;
      v36[15] = v28;
      v66 = sub_18FDFEC68;
      v67 = v36;
      aBlock = MEMORY[0x1E0C809B0];
      v63 = 1107296256;
      v64 = sub_18FD5B4F8;
      v65 = &block_descriptor_35;
      v37 = _Block_copy(&aBlock);
      v38 = v57;
      v39 = v56;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_18FDFEC84(a2);
      swift_retain();
      swift_release();
      objc_msgSend(v61, sel_addOperation_, v37);
      _Block_release(v37);
      v40 = swift_allocObject();
      *(_QWORD *)(v40 + 16) = a2;
      *(_QWORD *)(v40 + 24) = v34;
      *(_QWORD *)(v40 + 32) = v59;
      *(_QWORD *)(v40 + 40) = v58;
      *(_BYTE *)(v40 + 48) = v54;
      *(_QWORD *)(v40 + 56) = v38;
      *(_QWORD *)(v40 + 64) = v25;
      *(_QWORD *)(v40 + 72) = v39;
      *(_QWORD *)(v40 + 80) = v28;
      v66 = sub_18FDFEC98;
      v67 = (_QWORD *)v40;
      aBlock = MEMORY[0x1E0C809B0];
      v63 = 1107296256;
      v64 = sub_18FD5B4F8;
      v65 = &block_descriptor_23_1;
      v41 = _Block_copy(&aBlock);
      v42 = v38;
      v60 = v55;
      v43 = v39;
      swift_retain();
      sub_18FDFEC84(a2);
      swift_retain();
      swift_release();
      objc_msgSend(v61, sel_addOperation_, v41);
      _Block_release(v41);
      v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
      v45 = (_QWORD *)swift_allocObject();
      v45[2] = v28;
      v45[3] = v34;
      v45[4] = sub_18FDFEC0C;
      v45[5] = v12;
      v45[6] = v43;
      v66 = sub_18FDFECA0;
      v67 = v45;
      aBlock = MEMORY[0x1E0C809B0];
      v63 = 1107296256;
      v64 = sub_18FD5B5A8;
      v65 = &block_descriptor_29_1;
      v46 = _Block_copy(&aBlock);
      v47 = v43;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      v48 = objc_msgSend(v61, sel_evaluateWithInput_completion_, v44, v46);
      _Block_release(v46);
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

    }
    else
    {
      swift_release();
      swift_release();
      __break(1u);
    }
  }
}

uint64_t sub_18FDFEBFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18FDFF3C8(a1, a2, a3, a4, a5, sub_18FDFE568);
}

uint64_t sub_18FDFEC0C(uint64_t a1, char a2)
{
  _QWORD *v2;

  return sub_18FD92EC0(a1, a2 & 1, v2[2], v2[3], v2[4]);
}

uint64_t sub_18FDFEC1C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_18FDFEC40()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

id sub_18FDFEC84(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

uint64_t sub_18FDFECB0(void *a1, void *a2)
{
  uint64_t v2;

  return sub_18FDFD538(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t (**)(uint64_t, BOOL))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_18FDFECC4(char a1)
{
  uint64_t v1;

  return sub_18FDFE0F8(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t, BOOL))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_18FDFECD4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_18FDFED18(void *a1, void *a2)
{
  uint64_t v2;

  return sub_18FDFDB40(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(uint64_t (**)(uint64_t, BOOL))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

void sub_18FDFED28(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  _QWORD *v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t aBlock;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t (*v66)();
  _QWORD *v67;
  _BYTE v68[40];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  swift_retain();
  swift_retain();
  sub_18FDFCFA8((uint64_t)v68);
  sub_18FCD6068((uint64_t)v68, (uint64_t)&v69, (uint64_t *)&unk_1EE1C0CB0);
  v13 = v70;
  if (v70 == 1)
  {
    v14 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
    v15 = (void *)sub_1903D05A4();
    objc_msgSend(v14, sel_addInternalDebugDescription_, v15);

    swift_beginAccess();
    if (MEMORY[0x19400D8B8](a4 + 16))
    {
      v16 = *(_QWORD *)(a4 + 24);
      ObjectType = swift_getObjectType();
      v18 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 64);
      v19 = v14;
      v18(v14, 1, a5, a6, ObjectType, v16);
      swift_release();

      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();

    }
  }
  else
  {
    v56 = a1;
    v52 = v72;
    v53 = v71;
    v50 = v69;
    v51 = v73;
    v20 = objc_msgSend(*(id *)(a3 + 56), "sid");
    v21 = sub_1903D05C8();
    v58 = v22;
    v59 = v21;

    v23 = *(_QWORD *)(a3 + 16);
    swift_beginAccess();
    v54 = *(_BYTE *)(v23 + 64);
    v24 = *(void **)(v23 + 72);
    v25 = *(void **)(v23 + 80);
    v26 = objc_allocWithZone((Class)PKAsyncUnaryOperationComposer);
    v55 = v25;
    v57 = v24;
    v61 = objc_msgSend(v26, sel_init);
    v27 = objc_msgSend(objc_allocWithZone((Class)PKDAManager), sel_init);
    if (v27)
    {
      v49 = v27;
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = 0;
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 16) = 0;
      if (!a2)
      {
        v30 = (_QWORD *)swift_allocObject();
        v30[2] = v56;
        v30[3] = v59;
        v30[4] = v58;
        v30[5] = v57;
        v30[6] = v29;
        v30[7] = v28;
        v66 = sub_18FDFECA8;
        v67 = v30;
        aBlock = MEMORY[0x1E0C809B0];
        v63 = 1107296256;
        v64 = sub_18FD5B4F8;
        v65 = &block_descriptor_128;
        v31 = _Block_copy(&aBlock);
        v32 = v57;
        v33 = v56;
        a2 = 0;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_release();
        objc_msgSend(v61, sel_addOperation_, v31);
        _Block_release(v31);
      }
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = 0;
      v35 = swift_allocObject();
      swift_weakInit();
      v36 = (_QWORD *)swift_allocObject();
      v36[2] = v50;
      v36[3] = v13;
      v36[4] = v53;
      v36[5] = v52;
      v36[6] = v51;
      v36[7] = a2;
      v36[8] = v29;
      v36[9] = v56;
      v36[10] = v59;
      v36[11] = v58;
      v36[12] = v57;
      v36[13] = v35;
      v36[14] = v34;
      v36[15] = v28;
      v66 = sub_18FDFEC68;
      v67 = v36;
      aBlock = MEMORY[0x1E0C809B0];
      v63 = 1107296256;
      v64 = sub_18FD5B4F8;
      v65 = &block_descriptor_107;
      v37 = _Block_copy(&aBlock);
      v38 = v57;
      v39 = v56;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_18FDFEC84(a2);
      swift_retain();
      swift_release();
      objc_msgSend(v61, sel_addOperation_, v37);
      _Block_release(v37);
      v40 = swift_allocObject();
      *(_QWORD *)(v40 + 16) = a2;
      *(_QWORD *)(v40 + 24) = v34;
      *(_QWORD *)(v40 + 32) = v59;
      *(_QWORD *)(v40 + 40) = v58;
      *(_BYTE *)(v40 + 48) = v54;
      *(_QWORD *)(v40 + 56) = v38;
      *(_QWORD *)(v40 + 64) = v25;
      *(_QWORD *)(v40 + 72) = v39;
      *(_QWORD *)(v40 + 80) = v28;
      v66 = sub_18FDFEC98;
      v67 = (_QWORD *)v40;
      aBlock = MEMORY[0x1E0C809B0];
      v63 = 1107296256;
      v64 = sub_18FD5B4F8;
      v65 = &block_descriptor_114;
      v41 = _Block_copy(&aBlock);
      v42 = v38;
      v60 = v55;
      v43 = v39;
      swift_retain();
      sub_18FDFEC84(a2);
      swift_retain();
      swift_release();
      objc_msgSend(v61, sel_addOperation_, v41);
      _Block_release(v41);
      v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
      v45 = (_QWORD *)swift_allocObject();
      v45[2] = v28;
      v45[3] = v34;
      v45[4] = sub_18FDFEC0C;
      v45[5] = v12;
      v45[6] = v43;
      v66 = sub_18FDFECA0;
      v67 = v45;
      aBlock = MEMORY[0x1E0C809B0];
      v63 = 1107296256;
      v64 = sub_18FD5B5A8;
      v65 = &block_descriptor_121;
      v46 = _Block_copy(&aBlock);
      v47 = v43;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      v48 = objc_msgSend(v61, sel_evaluateWithInput_completion_, v44, v46);
      _Block_release(v46);
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

    }
    else
    {
      swift_release();
      swift_release();
      __break(1u);
    }
  }
}

uint64_t sub_18FDFF3BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18FDFF3C8(a1, a2, a3, a4, a5, sub_18FDFED28);
}

uint64_t sub_18FDFF3C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *, void *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  id v12;
  void *v13;
  id v14;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t ObjectType;
  void (*v27)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v28;
  uint64_t v29;
  uint64_t v30[3];

  swift_retain();
  swift_retain();
  v12 = objc_msgSend(a1, sel_trackingRequest);
  if (v12)
  {
    v13 = v12;
    swift_retain();
    swift_retain();
    v14 = v13;
    a6(a1, v13, a2, a3, a4, a5);

    swift_release_n();
    return swift_release_n();
  }
  else
  {
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v16 = sub_1903D0340();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EE1BF740);
    swift_retain_n();
    v17 = sub_1903D0328();
    v18 = sub_1903D0940();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      *(_DWORD *)v19 = 136315138;
      v30[0] = v29;
      v20 = objc_msgSend(*(id *)(a2 + 56), "sid");
      v21 = sub_1903D05C8();
      v23 = v22;

      sub_18FCD5144(v21, v23, v30);
      sub_1903D0ACC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_18FC92000, v17, v18, "[%s] Unable to find tracking request for subcredential", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v29, -1, -1);
      MEMORY[0x19400D804](v19, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v24 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
    swift_beginAccess();
    if (MEMORY[0x19400D8B8](a3 + 16))
    {
      v25 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      v27 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 64);
      v28 = v24;
      v27(v24, 1, a4, a5, ObjectType, v25);
      swift_release();

      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();

    }
    return swift_release();
  }
}

void sub_18FDFF6F8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  _QWORD *v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t aBlock;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t (*v66)();
  _QWORD *v67;
  _BYTE v68[40];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  swift_retain();
  swift_retain();
  sub_18FDFCFA8((uint64_t)v68);
  sub_18FCD6068((uint64_t)v68, (uint64_t)&v69, (uint64_t *)&unk_1EE1C0CB0);
  v13 = v70;
  if (v70 == 1)
  {
    v14 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
    v15 = (void *)sub_1903D05A4();
    objc_msgSend(v14, sel_addInternalDebugDescription_, v15);

    swift_beginAccess();
    if (MEMORY[0x19400D8B8](a4 + 16))
    {
      v16 = *(_QWORD *)(a4 + 24);
      ObjectType = swift_getObjectType();
      v18 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 64);
      v19 = v14;
      v18(v14, 1, a5, a6, ObjectType, v16);
      swift_release();

      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();

    }
  }
  else
  {
    v56 = a1;
    v52 = v72;
    v53 = v71;
    v50 = v69;
    v51 = v73;
    v20 = objc_msgSend(*(id *)(a3 + 56), "sid");
    v21 = sub_1903D05C8();
    v58 = v22;
    v59 = v21;

    v23 = *(_QWORD *)(a3 + 16);
    swift_beginAccess();
    v54 = *(_BYTE *)(v23 + 64);
    v24 = *(void **)(v23 + 72);
    v25 = *(void **)(v23 + 80);
    v26 = objc_allocWithZone((Class)PKAsyncUnaryOperationComposer);
    v55 = v25;
    v57 = v24;
    v61 = objc_msgSend(v26, sel_init);
    v27 = objc_msgSend(objc_allocWithZone((Class)PKDAManager), sel_init);
    if (v27)
    {
      v49 = v27;
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = 0;
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 16) = 0;
      if (!a2)
      {
        v30 = (_QWORD *)swift_allocObject();
        v30[2] = v56;
        v30[3] = v59;
        v30[4] = v58;
        v30[5] = v57;
        v30[6] = v29;
        v30[7] = v28;
        v66 = sub_18FDFECA8;
        v67 = v30;
        aBlock = MEMORY[0x1E0C809B0];
        v63 = 1107296256;
        v64 = sub_18FD5B4F8;
        v65 = &block_descriptor_93;
        v31 = _Block_copy(&aBlock);
        v32 = v57;
        v33 = v56;
        a2 = 0;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_release();
        objc_msgSend(v61, sel_addOperation_, v31);
        _Block_release(v31);
      }
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = 0;
      v35 = swift_allocObject();
      swift_weakInit();
      v36 = (_QWORD *)swift_allocObject();
      v36[2] = v50;
      v36[3] = v13;
      v36[4] = v53;
      v36[5] = v52;
      v36[6] = v51;
      v36[7] = a2;
      v36[8] = v29;
      v36[9] = v56;
      v36[10] = v59;
      v36[11] = v58;
      v36[12] = v57;
      v36[13] = v35;
      v36[14] = v34;
      v36[15] = v28;
      v66 = sub_18FDFEC68;
      v67 = v36;
      aBlock = MEMORY[0x1E0C809B0];
      v63 = 1107296256;
      v64 = sub_18FD5B4F8;
      v65 = &block_descriptor_72_0;
      v37 = _Block_copy(&aBlock);
      v38 = v57;
      v39 = v56;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_18FDFEC84(a2);
      swift_retain();
      swift_release();
      objc_msgSend(v61, sel_addOperation_, v37);
      _Block_release(v37);
      v40 = swift_allocObject();
      *(_QWORD *)(v40 + 16) = a2;
      *(_QWORD *)(v40 + 24) = v34;
      *(_QWORD *)(v40 + 32) = v59;
      *(_QWORD *)(v40 + 40) = v58;
      *(_BYTE *)(v40 + 48) = v54;
      *(_QWORD *)(v40 + 56) = v38;
      *(_QWORD *)(v40 + 64) = v25;
      *(_QWORD *)(v40 + 72) = v39;
      *(_QWORD *)(v40 + 80) = v28;
      v66 = sub_18FDFEC98;
      v67 = (_QWORD *)v40;
      aBlock = MEMORY[0x1E0C809B0];
      v63 = 1107296256;
      v64 = sub_18FD5B4F8;
      v65 = &block_descriptor_79_1;
      v41 = _Block_copy(&aBlock);
      v42 = v38;
      v60 = v55;
      v43 = v39;
      swift_retain();
      sub_18FDFEC84(a2);
      swift_retain();
      swift_release();
      objc_msgSend(v61, sel_addOperation_, v41);
      _Block_release(v41);
      v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
      v45 = (_QWORD *)swift_allocObject();
      v45[2] = v28;
      v45[3] = v34;
      v45[4] = sub_18FDFEC0C;
      v45[5] = v12;
      v45[6] = v43;
      v66 = sub_18FDFECA0;
      v67 = v45;
      aBlock = MEMORY[0x1E0C809B0];
      v63 = 1107296256;
      v64 = sub_18FD5B5A8;
      v65 = &block_descriptor_86;
      v46 = _Block_copy(&aBlock);
      v47 = v43;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      v48 = objc_msgSend(v61, sel_evaluateWithInput_completion_, v44, v46);
      _Block_release(v46);
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

    }
    else
    {
      swift_release();
      swift_release();
      __break(1u);
    }
  }
}

id sub_18FDFFD8C(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v16;

  if (!a1)
  {
    v10 = 0;
LABEL_15:
    v12 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v10, 5);
    goto LABEL_16;
  }
  v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0A0);
  sub_18FCDC600(0, qword_1EE1C0920);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    v13 = a1;
    v10 = (void *)sub_1903D0124();

    goto LABEL_15;
  }
  v3 = objc_msgSend(v16, sel_domain);
  v4 = sub_1903D05C8();
  v6 = v5;

  if (v4 == sub_1903D05C8() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v9 = sub_1903D0ED4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      goto LABEL_13;
  }
  if (objc_msgSend(v16, sel_code) != (id)40102)
  {
LABEL_13:

    goto LABEL_14;
  }
  v11 = (void *)sub_1903D05A4();
  v10 = (void *)sub_1903D05A4();
  v12 = objc_msgSend((id)objc_opt_self(), sel_errorWithTitleKey_messageKey_severity_, v11, v10, 3);

LABEL_16:
  v14 = (void *)sub_1903D05A4();
  objc_msgSend(v12, sel_addInternalDebugDescription_, v14);

  return v12;
}

uint64_t objectdestroy_16Tm_0()
{
  uint64_t v0;
  void *v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 56);
  if ((unint64_t)v1 >= 2)

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_18FE0005C(uint64_t a1, void *a2, void (*a3)(void *, uint64_t), uint64_t a4)
{
  uint64_t v4;

  sub_18FDFD6FC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), *(void **)(v4 + 96), *(_QWORD *)(v4 + 104), *(_QWORD *)(v4 + 112), *(_QWORD *)(v4 + 120));
}

uint64_t objectdestroy_19Tm()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if ((unint64_t)v1 >= 2)

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

id sub_18FE000F8(uint64_t a1, void *a2, uint64_t (*a3)(void *, uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  LOBYTE(v6) = *(_BYTE *)(v4 + 48);
  return sub_18FDFDCFC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), v6, *(void **)(v4 + 56), *(void **)(v4 + 64), *(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 80));
}

uint64_t objectdestroy_25Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_18FE00174(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_18FDFE20C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void (**)(id, uint64_t))(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48));
}

uint64_t objectdestroy_31Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_18FE001CC(int a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_18FDFD1A8(a1, a2, a3, a4, *(id *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(void **)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56));
}

__n128 ProvisioningStepCompleteTransfer.__allocating_init(context:credential:sharedState:)(uint64_t a1, __n128 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  __n128 result;

  v6 = swift_allocObject();
  v7 = a2[1].n128_u64[0];
  v8 = a2[1].n128_u8[8];
  *(_QWORD *)(v6 + 16) = a1;
  result = *a2;
  *(__n128 *)(v6 + 24) = *a2;
  *(_QWORD *)(v6 + 40) = v7;
  *(_BYTE *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 56) = a3;
  return result;
}

uint64_t ProvisioningStepCompleteTransfer.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 40) = v4;
  *(_BYTE *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = a3;
  return v3;
}

uint64_t ProvisioningStepCompleteTransfer.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return v0;
}

uint64_t ProvisioningStepCompleteTransfer.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return swift_deallocClassInstance();
}

__n128 sub_18FE0036C@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  __n128 result;

  type metadata accessor for ProvisioningStepCompleteTransfer();
  v8 = swift_allocObject();
  v9 = a2[1].n128_u64[0];
  v10 = a2[1].n128_u8[8];
  *(_QWORD *)(v8 + 16) = a1;
  result = *a2;
  *(__n128 *)(v8 + 24) = *a2;
  *(_QWORD *)(v8 + 40) = v9;
  *(_BYTE *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 56) = a3;
  *a4 = v8;
  return result;
}

uint64_t type metadata accessor for ProvisioningStepCompleteTransfer()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningStepCompleteTransfer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningStepCompleteTransfer.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_18FE00404(char a1, id a2, void (*a3)(id, uint64_t))
{
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  if ((a1 & 1) != 0)
  {
    a3(0, 0);
  }
  else
  {
    if (a2)
    {
      v5 = a2;
      v6 = (void *)sub_1903D0124();
      v7 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v6, 5);

    }
    else
    {
      v7 = objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, 1, 5);
    }
    v8 = (void *)sub_1903D05A4();
    objc_msgSend(v7, sel_addInternalDebugDescription_, v8);

    v9 = v7;
    a3(v7, 1);

  }
}

__n128 ProvisioningCarKeyStepActivation.__allocating_init(context:credential:sharedState:)(uint64_t a1, __n128 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  __n128 result;

  v6 = swift_allocObject();
  v7 = a2[1].n128_u64[0];
  v8 = a2[1].n128_u8[8];
  *(_QWORD *)(v6 + 16) = a1;
  result = *a2;
  *(__n128 *)(v6 + 24) = *a2;
  *(_QWORD *)(v6 + 40) = v7;
  *(_BYTE *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 56) = a3;
  return result;
}

uint64_t ProvisioningCarKeyStepActivation.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 40) = v4;
  *(_BYTE *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = a3;
  return v3;
}

uint64_t ProvisioningCarKeyStepActivation.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return v0;
}

uint64_t ProvisioningCarKeyStepActivation.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return swift_deallocClassInstance();
}

__n128 sub_18FE00634@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  __n128 result;

  type metadata accessor for ProvisioningCarKeyStepActivation();
  v8 = swift_allocObject();
  v9 = a2[1].n128_u64[0];
  v10 = a2[1].n128_u8[8];
  *(_QWORD *)(v8 + 16) = a1;
  result = *a2;
  *(__n128 *)(v8 + 24) = *a2;
  *(_QWORD *)(v8 + 40) = v9;
  *(_BYTE *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 56) = a3;
  *a4 = v8;
  return result;
}

uint64_t type metadata accessor for ProvisioningCarKeyStepActivation()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningCarKeyStepActivation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningCarKeyStepActivation.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for ProvisioningCarKeyStepActivation.ActivationKeyResult()
{
  return &type metadata for ProvisioningCarKeyStepActivation.ActivationKeyResult;
}

uint64_t sub_18FE006DC(void *a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_18FD5D5E4(a1);
    __asm { BR              X10 }
  }
  return result;
}

void sub_18FE00FBC(char a1, id a2, void (*a3)(id))
{
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  if ((a1 & 1) != 0)
  {
    if (!a2)
    {
      a3(0);
      return;
    }
  }
  else if (!a2)
  {
    v6 = 0;
    goto LABEL_7;
  }
  v5 = a2;
  v6 = (void *)sub_1903D0124();

LABEL_7:
  v7 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v6, 5);

  v8 = (void *)sub_1903D05A4();
  objc_msgSend(v7, sel_addInternalDebugDescription_, v8);

  v9 = v7;
  a3(v7);

}

void sub_18FE010C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, void *);
  char v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(id, uint64_t, uint64_t, uint64_t, uint64_t);
  id v43;
  uint64_t v44;
  uint64_t ObjectType;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void (*v52)(id, uint64_t, uint64_t, uint64_t, uint64_t);
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  id v57;
  void *v58;
  void *v59;
  void *v60;
  uint64_t v61;
  void *v62;
  __int128 aBlock;
  void (*v64)(uint64_t, void *);
  void *v65;
  uint64_t (*v66)(void *);
  _QWORD *v67;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v61 = a3;
  v8[4] = a4;
  v9 = *(void **)(a1 + 56);
  swift_retain();
  swift_retain();
  v10 = objc_msgSend(v9, "sid");
  v11 = sub_1903D05C8();
  v13 = v12;

  v14 = *(void (**)(uint64_t, void *))(a1 + 40);
  v15 = *(_BYTE *)(a1 + 48);
  aBlock = *(_OWORD *)(a1 + 24);
  v64 = v14;
  LOBYTE(v65) = v15;
  v16 = ProvisioningCredentialsConfiguration.Credential.carKeyTransferComponents.getter();
  if (v16)
  {
    v19 = (void *)v16;
    v20 = v17;
    v21 = v18;
    if (objc_msgSend(v18, sel_status) != (id)5)
    {
      swift_bridgeObjectRelease();
      swift_beginAccess();
      if (MEMORY[0x19400D8B8](a2 + 16))
      {
        v44 = *(_QWORD *)(a2 + 24);
        ObjectType = swift_getObjectType();
        (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 88))(0, v61, a4, ObjectType, v44);

        swift_unknownObjectRelease();
      }
      else
      {

      }
      swift_release();

      return;
    }
    v56 = v11;
    v22 = objc_msgSend(v21, sel_activationOptions);
    if (v22)
    {
      v23 = v22;
      v24 = objc_msgSend(v22, sel_optionOfType_, 1);

      if (v24)
      {
        v25 = objc_msgSend(v24, sel_value);
        if (v25)
        {
          v26 = v25;
          v58 = v20;
          v62 = v24;
          v27 = v19;
          sub_1903D05C8();

          v28 = *(_QWORD *)(a1 + 16);
          swift_beginAccess();
          v29 = *(void **)(v28 + 72);
          v55 = *(id *)(v28 + 80);
          v30 = v29;
          v31 = objc_msgSend(v30, sel_targetDevice);
          if (v31)
          {
            v32 = v31;
            if ((objc_msgSend(v31, sel_respondsToSelector_, sel_carKeyRetryActivationCodeWithInvitationIdentifier_activationCode_completion_) & 1) != 0)
            {
              v33 = objc_msgSend(v27, sel_shareIdentifier);
              sub_1903D05C8();

              v34 = swift_allocObject();
              swift_weakInit();
              v35 = (_QWORD *)swift_allocObject();
              v35[2] = v34;
              v35[3] = v56;
              v35[4] = v13;
              v35[5] = v58;
              v35[6] = sub_18FE01744;
              v35[7] = v8;
              swift_retain();
              v57 = v58;
              swift_retain();
              v59 = v30;
              v54 = (void *)sub_1903D05A4();
              v36 = (void *)sub_1903D05A4();
              v66 = sub_18FE017B0;
              v67 = v35;
              *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
              *((_QWORD *)&aBlock + 1) = 1107296256;
              v64 = sub_18FD55778;
              v65 = &block_descriptor_36;
              v37 = _Block_copy(&aBlock);
              swift_retain();
              swift_release();
              objc_msgSend(v32, sel_carKeyRetryActivationCodeWithInvitationIdentifier_activationCode_completion_, v54, v36, v37);
              _Block_release(v37);
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();

              swift_unknownObjectRelease();
              return;
            }
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_11;
          }
          swift_release();
          swift_release();
          __break(1u);
          return;
        }

      }
    }
    swift_bridgeObjectRelease();
    v46 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 1);
    v47 = (void *)sub_1903D05A4();
    objc_msgSend(v46, sel_addInternalDebugDescription_, v47);

    swift_beginAccess();
    if (MEMORY[0x19400D8B8](a2 + 16))
    {
      v48 = *(_QWORD *)(a2 + 24);
      v49 = swift_getObjectType();
      v60 = v20;
      v50 = v21;
      v51 = v19;
      v52 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 88);
      v53 = v46;
      v52(v46, v61, a4, v49, v48);
      v19 = v51;

      v20 = v60;
      swift_unknownObjectRelease();
    }
    else
    {

    }
    swift_release();

    return;
  }
  swift_bridgeObjectRelease();
  v38 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
  v39 = (void *)sub_1903D05A4();
  objc_msgSend(v38, sel_addInternalDebugDescription_, v39);

  swift_beginAccess();
  if (MEMORY[0x19400D8B8](a2 + 16))
  {
    v40 = *(_QWORD *)(a2 + 24);
    v41 = swift_getObjectType();
    v42 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 88);
    v43 = v38;
    v42(v38, v61, a4, v41, v40);
    swift_release();

LABEL_11:
    swift_unknownObjectRelease();
    return;
  }
  swift_release();

}

uint64_t sub_18FE01718()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FE01744(uint64_t a1)
{
  uint64_t *v1;

  return sub_18FD9325C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_18FE01750()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18FE01774()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FE017B0(void *a1)
{
  return sub_18FE006DC(a1);
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t sub_18FE017D8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_18FE017FC(char a1, void *a2)
{
  uint64_t v2;

  sub_18FE00FBC(a1, a2, *(void (**)(id))(v2 + 16));
}

void sub_18FE0180C(unint64_t a1)
{
  id v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_18FD802FC(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
      __break(1u);
LABEL_19:

LABEL_20:
      __break(1u);
      return;
    }
    v4 = 0;
    while (v3 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x19400B200](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v1 = v5;
      v6 = objc_msgSend(v1, sel_uniqueID);
      if (!v6)
        goto LABEL_19;
      v7 = v6;
      v8 = sub_1903D05C8();
      v10 = v9;

      if (!v10)
        goto LABEL_20;
      v12 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      v1 = (id)(v12 + 1);
      if (v12 >= v11 >> 1)
        sub_18FD802FC(v11 > 1, v12 + 1, 1);
      ++v4;
      *(_QWORD *)(v14 + 16) = v1;
      v13 = v14 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
      if (v3 == v4)
        return;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v3 = sub_1903D0D00();
    swift_bridgeObjectRelease();
  }
}

id SEProvisionedPasses.__allocating_init(primaryPass:passes:moreInfoItems:externalProvisioningOptions:suppressMakeDefaultOfferForPass:isExpressModeSetupOptional:isExpressEnabled:)(void *a1, unint64_t a2, unint64_t a3, void *a4, uint64_t a5, char a6, char a7)
{
  return _s11PassKitCore19SEProvisionedPassesC07primaryA06passes13moreInfoItems24externalProvisioningMode027suppressMakeDefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0(a1, a2, a3, a4, 2 * (a4 == 0), a5, a6, a7);
}

uint64_t sub_18FE019C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  uint64_t result;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passUniqueIdentifiers);
  swift_beginAccess();
  v2 = *v1;
  if (!*(_QWORD *)(*v1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = *(_QWORD *)(v2 + 32);
  v3 = *(_QWORD *)(v2 + 40);
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passesForUniqueIdentifier);
  swift_beginAccess();
  v6 = *v5;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_18FD5293C(v4, v3);
  if ((v8 & 1) != 0)
  {
    v9 = *(id *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v9;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_18FE01AA4()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passUniqueIdentifiers];
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  v18 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v4)
  {
    v5 = &v1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passesForUniqueIdentifier];
    swift_bridgeObjectRetain_n();
    v6 = v1;
    swift_beginAccess();
    v7 = (uint64_t *)(v3 + 40);
    do
    {
      v8 = *(_QWORD *)v5;
      if (*(_QWORD *)(*(_QWORD *)v5 + 16))
      {
        v9 = *(v7 - 1);
        v10 = *v7;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v11 = sub_18FD5293C(v9, v10);
        if ((v12 & 1) != 0)
        {
          v13 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v11);
          swift_bridgeObjectRelease_n();
          v14 = swift_bridgeObjectRelease();
          MEMORY[0x19400AD50](v14);
          if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1903D07B4();
          sub_1903D07D8();
          sub_1903D079C();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
      }
      v7 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v15 = v18;
  }
  else
  {
    v16 = v1;
    swift_bridgeObjectRetain();
    v15 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();

  return v15;
}

id sub_18FE01C50()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = v0 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_externalProvisioningMode;
  swift_beginAccess();
  v2 = 0;
  if (!*(_BYTE *)(v1 + 8))
  {
    v2 = *(id *)v1;
    v3 = *(id *)v1;
  }
  return v2;
}

id sub_18FE01CA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *a1 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_externalProvisioningMode;
  swift_beginAccess();
  v4 = *(void **)v3;
  *(_QWORD *)a2 = *(_QWORD *)v3;
  v5 = *(_BYTE *)(v3 + 8);
  *(_BYTE *)(a2 + 8) = v5;
  return sub_18FE07A04(v4, v5);
}

void sub_18FE01D04(uint64_t a1, _QWORD *a2)
{
  void *v2;
  uint64_t v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v2 = *(void **)a1;
  v3 = *a2 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_externalProvisioningMode;
  v4 = *(_BYTE *)(a1 + 8);
  swift_beginAccess();
  v5 = *(void **)v3;
  *(_QWORD *)v3 = v2;
  v6 = *(_BYTE *)(v3 + 8);
  *(_BYTE *)(v3 + 8) = v4;
  sub_18FE07A04(v2, v4);
  sub_18FCDC690(v5, v6);
}

id sub_18FE01D88()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = v0 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_externalProvisioningMode;
  swift_beginAccess();
  v2 = *(id *)v1;
  sub_18FE07A04(*(id *)v1, *(_BYTE *)(v1 + 8));
  return v2;
}

void sub_18FE01DE4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  unsigned __int8 v7;

  v5 = v2 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_externalProvisioningMode;
  swift_beginAccess();
  v6 = *(void **)v5;
  *(_QWORD *)v5 = a1;
  v7 = *(_BYTE *)(v5 + 8);
  *(_BYTE *)(v5 + 8) = a2;
  sub_18FCDC690(v6, v7);
}

uint64_t (*sub_18FE01E48())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t SEProvisionedPasses.isExpressModeSetupOptional.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_isExpressModeSetupOptional);
}

uint64_t SEProvisionedPasses.isExpressEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_isExpressEnabled);
}

uint64_t sub_18FE01EAC()
{
  return sub_18FE020B8(&OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_cardIdentifier);
}

uint64_t sub_18FE01EB8(uint64_t a1, uint64_t a2)
{
  return sub_18FE02114(a1, a2, &OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_cardIdentifier);
}

uint64_t (*sub_18FE01EC4())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

void sub_18FE01F08(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_notificationSuppressionAssertion);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

void *sub_18FE01F68()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_notificationSuppressionAssertion);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_18FE01FB4(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_notificationSuppressionAssertion);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_18FE02004())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_18FE02048(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FE020AC()
{
  return sub_18FE020B8(&OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_provisioningTemplateIdentifier);
}

uint64_t sub_18FE020B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_18FE02108(uint64_t a1, uint64_t a2)
{
  return sub_18FE02114(a1, a2, &OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_provisioningTemplateIdentifier);
}

uint64_t sub_18FE02114(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)(v3 + *a3);
  swift_beginAccess();
  *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_18FE0216C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

void sub_18FE021B0()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v1 = (void *)sub_18FE019C0();
  v2 = objc_msgSend(v1, sel_uniqueID);

  if (v2)
  {
    v3 = sub_1903D05C8();
    v5 = v4;

    if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_moreInfoItemsForPass) + 16))
    {
      swift_bridgeObjectRetain();
      sub_18FD5293C(v3, v5);
      if ((v6 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t SEProvisionedPasses.__allocating_init(primaryPass:passes:moreInfoItemsForPass:externalProvisioningMode:suppressMakeDefaultOfferForPass:isExpressModeSetupOptional:isExpressEnabled:)(void *a1, unint64_t a2, unint64_t a3, void *a4, unsigned __int8 a5, uint64_t a6, char a7, char a8)
{
  objc_class *v8;
  id v17;

  v17 = objc_allocWithZone(v8);
  return SEProvisionedPasses.init(primaryPass:passes:moreInfoItemsForPass:externalProvisioningMode:suppressMakeDefaultOfferForPass:isExpressModeSetupOptional:isExpressEnabled:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t SEProvisionedPasses.init(primaryPass:passes:moreInfoItemsForPass:externalProvisioningMode:suppressMakeDefaultOfferForPass:isExpressModeSetupOptional:isExpressEnabled:)(void *a1, unint64_t a2, unint64_t a3, void *a4, unsigned __int8 a5, uint64_t a6, char a7, char a8)
{
  char *v8;
  char *v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  void *v28;
  id v29;
  BOOL v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  BOOL v57;
  unint64_t v58;
  unsigned __int8 v59;
  uint64_t inited;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  id v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  char *v76;
  char *v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  id v82;
  void *v83;
  uint64_t result;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t i;
  id v96;
  id v97;
  objc_super v98;
  _QWORD *v99;
  uint64_t v100;
  unint64_t v101;

  v10 = &v8[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_cardIdentifier];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_notificationSuppressionAssertion] = 0;
  v11 = &v8[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_provisioningTemplateIdentifier];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v12 = (unint64_t)&v8[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passUniqueIdentifiers];
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v8[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passUniqueIdentifiers] = MEMORY[0x1E0DEE9D8];
  v14 = (uint64_t)&v8[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passesForUniqueIdentifier];
  v15 = v8;
  *(_QWORD *)v14 = sub_18FD4FE5C(v13);
  v85 = OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_moreInfoItemsForPass;
  *(_QWORD *)&v15[v85] = sub_18FD4FE68(v13);
  v86 = OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_suppressMakeDefaultOfferForPass;
  v87 = v15;
  *(_QWORD *)&v15[v86] = sub_18FD4FE50(v13);
  v16 = objc_msgSend(a1, sel_uniqueID);
  if (!v16)
  {
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v17 = v16;
  v18 = sub_1903D05C8();
  v20 = v19;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v21 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v99 = *(_QWORD **)v14;
  *(_QWORD *)v14 = 0x8000000000000000;
  v96 = v21;
  sub_18FE070C0((uint64_t)v21, v18, v20, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)v14 = v99;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  v23 = *(_QWORD **)v12;
  v24 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v12 = v23;
  if ((v24 & 1) == 0)
  {
LABEL_59:
    v23 = sub_18FD51B0C(0, v23[2] + 1, 1, v23);
    *(_QWORD *)v12 = v23;
  }
  v26 = v23[2];
  v25 = v23[3];
  if (v26 >= v25 >> 1)
  {
    v23 = sub_18FD51B0C((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
    *(_QWORD *)v12 = v23;
  }
  v23[2] = v26 + 1;
  v27 = &v23[2 * v26];
  v27[4] = v18;
  v27[5] = v20;
  swift_endAccess();
  v23 = (_QWORD *)a2;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1903D0D00();
    swift_bridgeObjectRelease();
    if (v18)
      goto LABEL_7;
  }
  else
  {
    v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
    {
LABEL_7:
      v20 = 0;
      for (i = v18; i != v20; v18 = i)
      {
        if ((a2 & 0xC000000000000001) != 0)
        {
          v29 = (id)MEMORY[0x19400B200](v20, a2);
          v30 = __OFADD__(v20++, 1);
          if (v30)
            goto LABEL_54;
        }
        else
        {
          if (v20 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_57;
          v29 = *(id *)(a2 + 32 + 8 * v20);
          v30 = __OFADD__(v20++, 1);
          if (v30)
          {
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
        }
        v18 = v12;
        v97 = v29;
        v31 = objc_msgSend(v29, sel_uniqueID);
        if (!v31)
        {
          __break(1u);
          goto LABEL_74;
        }
        v32 = v31;
        v33 = sub_1903D05C8();
        v35 = v34;

        swift_beginAccess();
        v36 = v96;
        swift_bridgeObjectRetain();
        v37 = swift_isUniquelyReferenced_nonNull_native();
        v99 = *(_QWORD **)v14;
        v23 = v99;
        v38 = (_QWORD *)v14;
        *(_QWORD *)v14 = 0x8000000000000000;
        v12 = sub_18FD5293C(v33, v35);
        v40 = v23[2];
        v41 = (v39 & 1) == 0;
        v42 = v40 + v41;
        if (__OFADD__(v40, v41))
          goto LABEL_55;
        v14 = v39;
        if (v23[3] >= v42)
        {
          if ((v37 & 1) != 0)
          {
            v45 = v99;
            if ((v39 & 1) != 0)
              goto LABEL_26;
          }
          else
          {
            v23 = &v99;
            sub_18FDD2BDC();
            v45 = v99;
            if ((v14 & 1) != 0)
              goto LABEL_26;
          }
        }
        else
        {
          sub_18FDD1120(v42, v37);
          v23 = v99;
          v43 = sub_18FD5293C(v33, v35);
          if ((v14 & 1) != (v44 & 1))
            goto LABEL_77;
          v12 = v43;
          v45 = v99;
          if ((v14 & 1) != 0)
          {
LABEL_26:
            v49 = v45[7];

            *(_QWORD *)(v49 + 8 * v12) = v36;
            goto LABEL_27;
          }
        }
        v45[(v12 >> 6) + 8] |= 1 << v12;
        v46 = (uint64_t *)(v45[6] + 16 * v12);
        *v46 = v33;
        v46[1] = v35;
        *(_QWORD *)(v45[7] + 8 * v12) = v36;
        v47 = v45[2];
        v30 = __OFADD__(v47, 1);
        v48 = v47 + 1;
        if (v30)
          goto LABEL_56;
        v45[2] = v48;
        swift_bridgeObjectRetain();
LABEL_27:
        v14 = (uint64_t)v38;
        *v38 = v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        v12 = v18;
        v50 = *(_QWORD **)v18;
        v23 = *(_QWORD **)(*(_QWORD *)v18 + 16);
        if (v23)
        {
          if (v50[4] == v33 && v50[5] == v35 || (sub_1903D0ED4() & 1) != 0)
          {
LABEL_8:
            swift_bridgeObjectRelease();
LABEL_9:
            v28 = v97;
            goto LABEL_10;
          }
          if (v23 != (_QWORD *)1)
          {
            if (v50[6] == v33 && v50[7] == v35 || (sub_1903D0ED4() & 1) != 0)
              goto LABEL_8;
            if (v23 != (_QWORD *)2)
            {
              v55 = v50 + 9;
              v56 = 2;
              do
              {
                v14 = v56 + 1;
                if (__OFADD__(v56, 1))
                  goto LABEL_58;
                v57 = *(v55 - 1) == v33 && *v55 == v35;
                if (v57 || (sub_1903D0ED4() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  v14 = (uint64_t)v38;
                  goto LABEL_9;
                }
                v55 += 2;
                ++v56;
                v57 = v14 == (_QWORD)v23;
                v14 = (uint64_t)v38;
              }
              while (!v57);
            }
          }
        }
        swift_beginAccess();
        v23 = *(_QWORD **)v18;
        v51 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)v18 = v23;
        if ((v51 & 1) == 0)
        {
          v23 = sub_18FD51B0C(0, v23[2] + 1, 1, v23);
          *(_QWORD *)v18 = v23;
        }
        v28 = v97;
        v53 = v23[2];
        v52 = v23[3];
        if (v53 >= v52 >> 1)
        {
          v23 = sub_18FD51B0C((_QWORD *)(v52 > 1), v53 + 1, 1, v23);
          *(_QWORD *)v12 = v23;
        }
        v23[2] = v53 + 1;
        v54 = &v23[2 * v53];
        v54[4] = v33;
        v54[5] = v35;
        swift_endAccess();
LABEL_10:

      }
    }
  }
  swift_bridgeObjectRelease();
  v58 = a3;
  if (*(_QWORD *)(a3 + 16))
  {
    v59 = a5;
    goto LABEL_67;
  }
  v59 = a5;
  if (!PKShowFakeMoreInfo())
  {
LABEL_67:
    *(_QWORD *)&v87[v85] = v58;
    swift_bridgeObjectRelease();
    if (v59 == 2 && !a4 && PKShowFakeExternalDevicePicker())
    {
      v75 = objc_msgSend((id)objc_opt_self(), sel_mockOptions);
      v76 = &v87[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_externalProvisioningMode];
      *(_QWORD *)v76 = v75;
      v76[8] = 0;
    }
    else
    {
      v77 = &v87[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_externalProvisioningMode];
      *(_QWORD *)v77 = a4;
      v77[8] = v59;
      sub_18FE07A04(a4, v59);
    }
    *(_QWORD *)&v87[v86] = a6;
    swift_bridgeObjectRelease();
    v87[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_isExpressModeSetupOptional] = a7 & 1;
    v87[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_isExpressEnabled] = a8 & 1;

    v98.receiver = v87;
    v98.super_class = (Class)type metadata accessor for SEProvisionedPasses();
    v78 = objc_msgSendSuper2(&v98, sel_init);
    v79 = (void *)objc_opt_self();
    v80 = v78;

    v81 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    sub_1903D05C8();
    v82 = v80;
    v83 = (void *)sub_1903D05A4();
    swift_bridgeObjectRelease();
    objc_msgSend(v81, sel_addObserver_selector_name_object_, v82, sel_passLibraryDidChangeWithNotification_, v83, 0);
    sub_18FCDC690(a4, v59);

    return (uint64_t)v82;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0D78);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19043F3B0;
  v100 = 0x656C746974;
  v101 = 0xE500000000000000;
  v61 = MEMORY[0x1E0DEA968];
  sub_1903D0BD4();
  *(_QWORD *)(inited + 96) = v61;
  strcpy((char *)(inited + 72), "Fake Title 1");
  *(_BYTE *)(inited + 85) = 0;
  *(_WORD *)(inited + 86) = -5120;
  v100 = 2036625250;
  v101 = 0xE400000000000000;
  sub_1903D0BD4();
  *(_QWORD *)(inited + 168) = v61;
  *(_QWORD *)(inited + 144) = 0x646F4220656B6146;
  *(_QWORD *)(inited + 152) = 0xE900000000000079;
  v100 = 0x4C52556B6E696CLL;
  v101 = 0xE700000000000000;
  sub_1903D0BD4();
  v62 = sub_1903D05C8();
  *(_QWORD *)(inited + 240) = v61;
  *(_QWORD *)(inited + 216) = v62;
  *(_QWORD *)(inited + 224) = v63;
  v100 = 0x747865546B6E696CLL;
  v101 = 0xE800000000000000;
  sub_1903D0BD4();
  *(_QWORD *)(inited + 312) = v61;
  *(_QWORD *)(inited + 288) = 0x6E694C20656B6146;
  *(_QWORD *)(inited + 296) = 0xEB0000000031206BLL;
  sub_18FD5009C(inited);
  v64 = objc_allocWithZone((Class)PKPaymentSetupMoreInfoItem);
  v65 = (void *)sub_1903D04CC();
  swift_bridgeObjectRelease();
  v66 = objc_msgSend(v64, sel_initWithMoreInfoDictionary_, v65);

  if (!v66)
    goto LABEL_75;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1C0D80);
  v67 = swift_initStackObject();
  *(_OWORD *)(v67 + 16) = xmmword_19043CD00;
  v68 = objc_msgSend(v96, sel_uniqueID);
  if (v68)
  {
    v69 = v68;
    v70 = sub_1903D05C8();
    v72 = v71;

    *(_QWORD *)(v67 + 32) = v70;
    *(_QWORD *)(v67 + 40) = v72;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD540);
    v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_190436140;
    *(_QWORD *)(v73 + 32) = v66;
    *(_QWORD *)(v73 + 40) = v66;
    v100 = v73;
    sub_1903D079C();
    *(_QWORD *)(v67 + 48) = v100;
    v74 = v66;
    v58 = sub_18FD4FE68(v67);
    goto LABEL_67;
  }
LABEL_76:
  __break(1u);
LABEL_77:
  result = sub_1903D0F1C();
  __break(1u);
  return result;
}

id SEProvisionedPasses.__deallocating_deinit()
{
  char *v0;
  id v1;
  id *v2;
  objc_super v4;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  v2 = (id *)&v0[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_notificationSuppressionAssertion];
  swift_beginAccess();
  if (*v2)
    objc_msgSend(*v2, sel_invalidate);
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for SEProvisionedPasses();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_18FE02EF8(unint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  const char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v60;
  unint64_t v61;
  unint64_t v62;

  v2 = &v1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passUniqueIdentifiers];
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  v62 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v60 = v1;
  if (v4)
  {
    v5 = &v1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passesForUniqueIdentifier];
    swift_bridgeObjectRetain_n();
    v6 = v1;
    swift_beginAccess();
    v7 = (uint64_t *)(v3 + 40);
    do
    {
      v8 = *(_QWORD *)v5;
      if (*(_QWORD *)(*(_QWORD *)v5 + 16))
      {
        v9 = *(v7 - 1);
        v10 = *v7;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v11 = sub_18FD5293C(v9, v10);
        if ((v12 & 1) != 0)
        {
          v13 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v11);
          swift_bridgeObjectRelease_n();
          v14 = swift_bridgeObjectRelease();
          MEMORY[0x19400AD50](v14);
          if (*(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1903D07B4();
          sub_1903D07D8();
          sub_1903D079C();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
      }
      v7 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v15 = v62;
    v1 = v60;
  }
  else
  {
    v16 = v1;
    swift_bridgeObjectRetain();
    v15 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();

  v58 = v2;
  if (v15 >> 62)
  {
LABEL_52:
    v57 = v1;
    swift_bridgeObjectRetain();
    v17 = sub_1903D0D00();
    if (v17)
    {
LABEL_14:
      v19 = &v60[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passesForUniqueIdentifier];
      swift_beginAccess();
      v20 = 4;
      while (1)
      {
        v1 = (char *)(v20 - 4);
        if ((v15 & 0xC000000000000001) != 0)
          v21 = (id)MEMORY[0x19400B200](v20 - 4, v15);
        else
          v21 = *(id *)(v15 + 8 * v20);
        v22 = v21;
        v23 = v20 - 3;
        if (__OFADD__(v1, 1))
        {
          __break(1u);
          goto LABEL_52;
        }
        v24 = objc_msgSend(v21, sel_uniqueID);
        if (!v24)
        {
          __break(1u);
          return;
        }
        v25 = v24;
        v26 = sub_1903D05C8();
        v28 = v27;

        if (!*(_QWORD *)(*(_QWORD *)v19 + 16))
          break;
        swift_bridgeObjectRetain();
        sub_18FD5293C(v26, v28);
        v30 = v29;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0)
          goto LABEL_45;
        ++v20;
        if (v23 == v17)
          goto LABEL_23;
      }

      swift_bridgeObjectRelease();
LABEL_45:

      swift_bridgeObjectRelease_n();
      if (qword_1EE1BCFD8 != -1)
        swift_once();
      v56 = sub_1903D0340();
      __swift_project_value_buffer(v56, (uint64_t)qword_1EE1BF710);
      v52 = sub_1903D0328();
      v53 = sub_1903D0940();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v54 = 0;
        v55 = "SEProvisionedPasses.rearrange(passes:) called with unknown pass";
        goto LABEL_49;
      }
      goto LABEL_50;
    }
  }
  else
  {
    v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = v1;
    swift_bridgeObjectRetain();
    if (v17)
      goto LABEL_14;
  }
LABEL_23:
  v31 = v60;

  swift_bridgeObjectRelease_n();
  v32 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v31 = v60;
    v33 = sub_1903D0D00();
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v34 = *(_QWORD *)v58;
  v61 = MEMORY[0x1E0DEE9D8];
  v35 = *(_QWORD *)(*(_QWORD *)v58 + 16);
  if (v35)
  {
    v36 = &v31[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passesForUniqueIdentifier];
    swift_bridgeObjectRetain_n();
    v37 = v31;
    swift_beginAccess();
    v38 = (uint64_t *)(v34 + 40);
    do
    {
      v39 = *(_QWORD *)v36;
      if (*(_QWORD *)(*(_QWORD *)v36 + 16))
      {
        v40 = *(v38 - 1);
        v41 = *v38;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v42 = sub_18FD5293C(v40, v41);
        if ((v43 & 1) != 0)
        {
          v44 = *(id *)(*(_QWORD *)(v39 + 56) + 8 * v42);
          swift_bridgeObjectRelease_n();
          v45 = swift_bridgeObjectRelease();
          MEMORY[0x19400AD50](v45);
          if (*(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1903D07B4();
          sub_1903D07D8();
          sub_1903D079C();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
      }
      v38 += 2;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
    v46 = v61;
    v32 = a1;
    v47 = v60;
  }
  else
  {
    v48 = v31;
    swift_bridgeObjectRetain();
    v47 = v31;
    v46 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();

  if (v46 >> 62)
  {
    swift_bridgeObjectRetain();
    v49 = sub_1903D0D00();
    swift_bridgeObjectRelease();
  }
  else
  {
    v49 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v33 == v49)
  {
    sub_18FE0180C(v32);
    *(_QWORD *)v58 = v50;
    swift_bridgeObjectRelease();
    return;
  }
  if (qword_1EE1BCFD8 != -1)
    swift_once();
  v51 = sub_1903D0340();
  __swift_project_value_buffer(v51, (uint64_t)qword_1EE1BF710);
  v52 = sub_1903D0328();
  v53 = sub_1903D0940();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v54 = 0;
    v55 = "SEProvisionedPasses.rearrange(passes:) called with pass count not equal to current pass count";
LABEL_49:
    _os_log_impl(&dword_18FC92000, v52, v53, v55, v54, 2u);
    MEMORY[0x19400D804](v54, -1, -1);
  }
LABEL_50:

}

uint64_t sub_18FE03550(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_moreInfoItemsForPass;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_moreInfoItemsForPass);
  swift_bridgeObjectRetain();
  v5 = sub_18FD4FE68(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRetain();
  v6 = sub_18FE0764C(v5, v4, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FE035E0(char *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  char v35;
  _QWORD *v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD **v54;
  _QWORD *v55;
  unint64_t v56;

  v2 = v1;
  v4 = &a1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passUniqueIdentifiers];
  swift_beginAccess();
  v5 = *(_QWORD *)v4;
  v56 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v6)
  {
    v7 = &unk_1EE1C0000;
    v8 = &a1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passesForUniqueIdentifier];
    swift_bridgeObjectRetain_n();
    v9 = a1;
    swift_beginAccess();
    v10 = (uint64_t *)(v5 + 40);
    do
    {
      v11 = *(_QWORD *)v8;
      if (*(_QWORD *)(*(_QWORD *)v8 + 16))
      {
        v12 = *(v10 - 1);
        v13 = *v10;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v14 = sub_18FD5293C(v12, v13);
        if ((v15 & 1) != 0)
        {
          v16 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v14);
          swift_bridgeObjectRelease_n();
          v17 = swift_bridgeObjectRelease();
          MEMORY[0x19400AD50](v17);
          if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1903D07B4();
          sub_1903D07D8();
          sub_1903D079C();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
      }
      v10 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v18 = v56;
  }
  else
  {
    v7 = &unk_1EE1C0000;
    v19 = a1;
    swift_bridgeObjectRetain();
    v18 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();

  if (v18 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    v20 = sub_1903D0D00();
    swift_bridgeObjectRelease();
    if (v20)
      goto LABEL_14;
    return swift_bridgeObjectRelease();
  }
  v20 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v20)
    return swift_bridgeObjectRelease();
LABEL_14:
  v54 = (_QWORD **)((char *)v2 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passUniqueIdentifiers);
  v2 = (_QWORD *)((char *)v2 + v7[422]);
  v52 = v18;
  v53 = v18 & 0xC000000000000001;
  v21 = 4;
  v51 = v20;
  while (1)
  {
    if (v53)
      v23 = (id)MEMORY[0x19400B200](v21 - 4, v18);
    else
      v23 = *(id *)(v18 + 8 * v21);
    v24 = v23;
    v25 = v21 - 3;
    if (__OFADD__(v21 - 4, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v26 = objc_msgSend(v23, sel_uniqueID);
    if (!v26)
      break;
    v27 = v26;
    v28 = sub_1903D05C8();
    v18 = v29;

    swift_beginAccess();
    v30 = *v54;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v54 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v30 = sub_18FD51B0C(0, v30[2] + 1, 1, v30);
      *v54 = v30;
    }
    v33 = v30[2];
    v32 = v30[3];
    if (v33 >= v32 >> 1)
    {
      v30 = sub_18FD51B0C((_QWORD *)(v32 > 1), v33 + 1, 1, v30);
      *v54 = v30;
    }
    v30[2] = v33 + 1;
    v34 = &v30[2 * v33];
    v34[4] = v28;
    v34[5] = v18;
    swift_endAccess();
    swift_beginAccess();
    v7 = v24;
    v35 = swift_isUniquelyReferenced_nonNull_native();
    v36 = (_QWORD *)*v2;
    v55 = (_QWORD *)*v2;
    *v2 = 0x8000000000000000;
    v38 = sub_18FD5293C(v28, v18);
    v39 = v36[2];
    v40 = (v37 & 1) == 0;
    v41 = v39 + v40;
    if (__OFADD__(v39, v40))
      goto LABEL_38;
    v42 = v37;
    if (v36[3] >= v41)
    {
      if ((v35 & 1) != 0)
      {
        v45 = v55;
        if ((v37 & 1) != 0)
          goto LABEL_15;
      }
      else
      {
        sub_18FDD2BDC();
        v45 = v55;
        if ((v42 & 1) != 0)
          goto LABEL_15;
      }
    }
    else
    {
      sub_18FDD1120(v41, v35);
      v43 = sub_18FD5293C(v28, v18);
      if ((v42 & 1) != (v44 & 1))
        goto LABEL_43;
      v38 = v43;
      v45 = v55;
      if ((v42 & 1) != 0)
      {
LABEL_15:
        v22 = v45[7];

        *(_QWORD *)(v22 + 8 * v38) = v7;
        goto LABEL_16;
      }
    }
    v45[(v38 >> 6) + 8] |= 1 << v38;
    v46 = (uint64_t *)(v45[6] + 16 * v38);
    *v46 = v28;
    v46[1] = v18;
    *(_QWORD *)(v45[7] + 8 * v38) = v7;
    v47 = v45[2];
    v48 = __OFADD__(v47, 1);
    v49 = v47 + 1;
    if (v48)
      goto LABEL_39;
    v45[2] = v49;
    swift_bridgeObjectRetain();
LABEL_16:
    *v2 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();

    ++v21;
    v18 = v52;
    if (v25 == v51)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_43:
  result = sub_1903D0F1C();
  __break(1u);
  return result;
}

id sub_18FE03A94(void *a1)
{
  uint64_t v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  result = objc_msgSend(a1, sel_uniqueID);
  if (result)
  {
    v3 = result;
    v4 = sub_1903D05C8();
    v6 = v5;

    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_suppressMakeDefaultOfferForPass);
    if (*(_QWORD *)(v7 + 16))
    {
      swift_bridgeObjectRetain();
      v8 = sub_18FD5293C(v4, v6);
      if ((v9 & 1) != 0)
      {
        v10 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 56) + v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (id)v10;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_18FE03B4C(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  __CFString *v14;
  unint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _QWORD aBlock[7];
  __int128 v28;
  __int128 v29;

  v3 = sub_1903D03B8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1903D03D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_userInfo);
  if (!v11)
  {
    v28 = 0u;
    v29 = 0u;
    return sub_18FD36250((uint64_t)&v28, (uint64_t *)&unk_1EE1C06E0);
  }
  v12 = v11;
  v25 = v1;
  v26 = v4;
  v13 = sub_1903D04E4();

  aBlock[6] = CFSTR("PKPassLibraryReplacementPassesUserInfo");
  type metadata accessor for PKPassLibraryNotificationKey(0);
  sub_18FCD5E34((unint64_t *)&unk_1EE1C0DD0, (uint64_t (*)(uint64_t))type metadata accessor for PKPassLibraryNotificationKey, (uint64_t)&unk_190435FBC);
  v14 = CFSTR("PKPassLibraryReplacementPassesUserInfo");
  sub_1903D0BD4();
  if (*(_QWORD *)(v13 + 16) && (v15 = sub_18FD75D04((uint64_t)aBlock), (v16 & 1) != 0))
  {
    sub_18FCD6028(*(_QWORD *)(v13 + 56) + 32 * v15, (uint64_t)&v28);
  }
  else
  {
    v28 = 0u;
    v29 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_18FD784F8((uint64_t)aBlock);
  if (!*((_QWORD *)&v29 + 1))
    return sub_18FD36250((uint64_t)&v28, (uint64_t *)&unk_1EE1C06E0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1C06F0);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v18 = aBlock[0];
    sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
    v19 = (void *)sub_1903D097C();
    v20 = swift_allocObject();
    v21 = v25;
    *(_QWORD *)(v20 + 16) = v25;
    *(_QWORD *)(v20 + 24) = v18;
    aBlock[4] = sub_18FE07EB8;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FDF4F30;
    aBlock[3] = &block_descriptor_37;
    v22 = _Block_copy(aBlock);
    v23 = v21;
    swift_release();
    sub_1903D03C4();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_18FCD5E34((unint64_t *)&qword_1EE1C0730, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
    sub_18FD667E8((unint64_t *)&qword_1EE1C0740, (uint64_t *)&unk_1EE1BD530, MEMORY[0x1E0DEAF38]);
    sub_1903D0B38();
    MEMORY[0x19400AF6C](0, v10, v6, v22);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t sub_18FE03E8C(uint64_t a1, unint64_t a2)
{
  void *v4;
  char **v5;
  id v6;
  char **v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v4 = (void *)sub_18FE019C0();
  v5 = &selRef_continuityPaymentCoordinatorDidReceiveCancellation_;
  v6 = objc_msgSend(v4, sel_devicePrimaryPaymentApplication);

  v7 = &selRef_rejectSharingInvitation_completionHandler_;
  if (v6)
  {
    v8 = objc_msgSend(v6, sel_secureElementIdentifier);

    if (v8)
    {
      v32 = sub_1903D05C8();
      v33 = v9;

    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v7 = &selRef_rejectSharingInvitation_completionHandler_;
  }
  else
  {
    v32 = 0;
    v33 = 0;
  }
  if (a2 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    v10 = sub_1903D0D00();
    if (v10)
      goto LABEL_9;
LABEL_38:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v10)
    goto LABEL_38;
LABEL_9:
  v36 = a2 & 0xC000000000000001;
  v34 = a1 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passesForUniqueIdentifier;
  swift_beginAccess();
  v11 = 4;
  v35 = v10;
  while (1)
  {
    a1 = v11 - 4;
    if (v36)
      v12 = (id)MEMORY[0x19400B200](v11 - 4, a2);
    else
      v12 = *(id *)(a2 + 8 * v11);
    v13 = v12;
    v14 = v11 - 3;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    v15 = objc_msgSend(v12, sel_uniqueID);
    if (!v15)
      break;
    v16 = v15;
    v17 = sub_1903D05C8();
    v19 = v18;

    v20 = objc_msgSend(v13, v5[481]);
    if (v20)
    {
      v21 = v20;
      v22 = objc_msgSend(v20, v7[497]);

      if (v22)
      {
        v23 = a2;
        v24 = sub_1903D05C8();
        v26 = v25;

        if (*(_QWORD *)(*(_QWORD *)v34 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_18FD5293C(v17, v19);
          if ((v27 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v10 = v35;
            if (v33)
            {
              if (v32 == v24 && v33 == v26)
              {
                swift_bridgeObjectRelease();
                v7 = &selRef_rejectSharingInvitation_completionHandler_;
                goto LABEL_32;
              }
              v28 = sub_1903D0ED4();
              swift_bridgeObjectRelease();
              v7 = &selRef_rejectSharingInvitation_completionHandler_;
              if ((v28 & 1) != 0)
              {
LABEL_32:
                swift_beginAccess();
                v29 = v13;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v37 = *(_QWORD *)v34;
                *(_QWORD *)v34 = 0x8000000000000000;
                sub_18FE070C0((uint64_t)v29, v17, v19, isUniquelyReferenced_nonNull_native);
                *(_QWORD *)v34 = v37;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_endAccess();

                v10 = v35;
              }
              else
              {
                swift_bridgeObjectRelease();

              }
              a2 = v23;
              v5 = &selRef_continuityPaymentCoordinatorDidReceiveCancellation_;
              goto LABEL_11;
            }
            swift_bridgeObjectRelease();

            goto LABEL_29;
          }

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();

        }
        v10 = v35;
LABEL_29:
        swift_bridgeObjectRelease();
        a2 = v23;
        v5 = &selRef_continuityPaymentCoordinatorDidReceiveCancellation_;
        v7 = &selRef_rejectSharingInvitation_completionHandler_;
        goto LABEL_11;
      }

      swift_bridgeObjectRelease();
      v10 = v35;
    }
    else
    {

      swift_bridgeObjectRelease();
    }
LABEL_11:
    ++v11;
    if (v14 == v10)
      goto LABEL_38;
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

id sub_18FE04310()
{
  char *v0;
  char *v1;
  void *v2;
  id result;
  void *v4;
  id v5;
  void *v6;
  id v7;
  __CFString *v8;
  __CFString *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  void *v30;
  void *v31;
  unint64_t v32;

  v1 = v0;
  v2 = (void *)sub_18FE019C0();
  result = objc_msgSend(v2, sel_uniqueID);
  if (result)
  {
    v4 = result;
    sub_1903D05C8();

    sub_1903D067C();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v2, sel_devicePrimaryPaymentApplication);
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, sel_state);

      v8 = PKDisplayableStringForPaymentApplicationState((uint64_t)v7);
      if (v8)
      {
        v9 = v8;
        v10 = sub_1903D05C8();
        v12 = v11;

      }
      else
      {
        v12 = 0xE700000000000000;
        v10 = 0x6E776F6E6B6E75;
      }
      v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0)
        v13 = v10 & 0xFFFFFFFFFFFFLL;
      if (!v13)
      {
        swift_bridgeObjectRelease();
        sub_1903D0EB0();
      }
      sub_1903D067C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1903D067C();
      swift_bridgeObjectRelease();
      sub_1903D067C();
      swift_bridgeObjectRelease();
    }
    v31 = v2;
    sub_1903D0BF8();
    sub_1903D067C();
    swift_bridgeObjectRetain();
    sub_1903D067C();
    swift_bridgeObjectRelease();
    sub_1903D067C();
    v14 = &v1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passUniqueIdentifiers];
    swift_beginAccess();
    v15 = *(_QWORD *)v14;
    v32 = MEMORY[0x1E0DEE9D8];
    v16 = *(_QWORD *)(*(_QWORD *)v14 + 16);
    if (v16)
    {
      v17 = &v1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passesForUniqueIdentifier];
      swift_bridgeObjectRetain_n();
      v18 = v1;
      swift_beginAccess();
      v19 = (uint64_t *)(v15 + 40);
      do
      {
        v20 = *(_QWORD *)v17;
        if (*(_QWORD *)(*(_QWORD *)v17 + 16))
        {
          v21 = *(v19 - 1);
          v22 = *v19;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          v23 = sub_18FD5293C(v21, v22);
          if ((v24 & 1) != 0)
          {
            v25 = *(id *)(*(_QWORD *)(v20 + 56) + 8 * v23);
            swift_bridgeObjectRelease_n();
            v26 = swift_bridgeObjectRelease();
            MEMORY[0x19400AD50](v26);
            if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1903D07B4();
            sub_1903D07D8();
            sub_1903D079C();
          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
          }
        }
        v19 += 2;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
      v27 = v32;
    }
    else
    {
      v28 = v1;
      swift_bridgeObjectRetain();
      v27 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();

    sub_18FE0180C(v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BEFD0);
    sub_18FD667E8((unint64_t *)&qword_1EE1C0AE0, (uint64_t *)&unk_1EE1BEFD0, MEMORY[0x1E0DEAF20]);
    sub_1903D0544();
    swift_bridgeObjectRelease();
    sub_1903D067C();
    swift_bridgeObjectRelease();
    sub_1903D067C();
    v29 = &v1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_externalProvisioningMode];
    swift_beginAccess();
    v30 = *(void **)v29;
    LOBYTE(v29) = v29[8];
    sub_18FE07A04(v30, v29);
    SEProvisionedPasses.ExternalProvisioningMode.description.getter(v30, (char)v29);
    sub_18FCDC690(v30, v29);
    sub_1903D067C();
    swift_bridgeObjectRelease();
    sub_1903D067C();
    sub_1903D067C();
    swift_bridgeObjectRelease();
    sub_1903D067C();
    sub_1903D067C();
    swift_bridgeObjectRelease();
    sub_1903D067C();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1903D067C();
    swift_bridgeObjectRelease();
    sub_1903D067C();
    sub_1903D0EB0();
    sub_1903D067C();
    swift_bridgeObjectRelease();
    sub_1903D067C();
    swift_beginAccess();
    sub_1903D067C();
    swift_bridgeObjectRelease();
    sub_1903D067C();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1903D067C();
    swift_bridgeObjectRelease();
    sub_1903D067C();

    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static SEProvisionedPasses.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_1EE1C0D20;
}

uint64_t static SEProvisionedPasses.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE1C0D20 = a1;
  return result;
}

uint64_t (*static SEProvisionedPasses.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

void sub_18FE04B7C(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1903D0778();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1903D05A4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  swift_beginAccess();
  sub_18FCDC600(0, &qword_1EE1C0D90);
  swift_bridgeObjectRetain();
  v5 = (void *)sub_1903D04CC();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1903D05A4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_isExpressModeSetupOptional);
  v8 = (void *)sub_1903D05A4();
  objc_msgSend(a1, sel_encodeBool_forKey_, v7, v8);

  v9 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_isExpressEnabled);
  v10 = (void *)sub_1903D05A4();
  objc_msgSend(a1, sel_encodeBool_forKey_, v9, v10);

  v11 = v1 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_cardIdentifier;
  swift_beginAccess();
  if (*(_QWORD *)(v11 + 8))
  {
    swift_bridgeObjectRetain();
    v12 = sub_1903D05A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v13 = (void *)sub_1903D05A4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v12, v13);
  swift_unknownObjectRelease();

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0D98);
  v14 = (void *)sub_1903D04CC();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1903D05A4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v14, v15);

  v16 = v1 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_provisioningTemplateIdentifier;
  swift_beginAccess();
  if (*(_QWORD *)(v16 + 8))
  {
    swift_bridgeObjectRetain();
    v17 = sub_1903D05A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  v18 = (void *)sub_1903D05A4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v17, v18);
  swift_unknownObjectRelease();

  v19 = v1 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_externalProvisioningMode;
  swift_beginAccess();
  v20 = *(void **)v19;
  if (*(_BYTE *)(v19 + 8))
  {
    if (*(_BYTE *)(v19 + 8) == 1)
    {
      v21 = v20;
      v22 = (void *)sub_1903D05A4();
      v23 = (void *)sub_1903D05A4();
      objc_msgSend(a1, sel_encodeObject_forKey_, v22, v23);

      v24 = v21;
      v25 = (void *)sub_1903D05A4();
      objc_msgSend(a1, sel_encodeObject_forKey_, v24, v25);

      sub_18FCDC690(v20, 1u);
      sub_18FCDC690(v20, 1u);
    }
    else
    {
      v31 = (void *)sub_1903D05A4();
      v32 = (void *)sub_1903D05A4();
      objc_msgSend(a1, sel_encodeObject_forKey_, v31, v32);

    }
  }
  else
  {
    v26 = v20;
    v27 = (void *)sub_1903D05A4();
    v28 = (void *)sub_1903D05A4();
    objc_msgSend(a1, sel_encodeObject_forKey_, v27, v28);

    v29 = v26;
    v30 = (void *)sub_1903D05A4();
    objc_msgSend(a1, sel_encodeObject_forKey_, v29, v30);

    sub_18FCDC690(v20, 0);
    sub_18FCDC690(v20, 0);
  }
}

id SEProvisionedPasses.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return SEProvisionedPasses.init(coder:)(a1);
}

id SEProvisionedPasses.init(coder:)(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  unint64_t *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  char *v27;
  void *v28;
  void *v29;
  void *v30;
  unsigned __int8 v31;
  void *v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  unint64_t *v44;
  objc_super v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_cardIdentifier];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v41 = v4;
  v38 = OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_notificationSuppressionAssertion;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_notificationSuppressionAssertion] = 0;
  v5 = &v1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_provisioningTemplateIdentifier];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v42 = v5;
  v6 = &v1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passUniqueIdentifiers];
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passUniqueIdentifiers] = MEMORY[0x1E0DEE9D8];
  v8 = (unint64_t *)&v1[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passesForUniqueIdentifier];
  v9 = v1;
  v44 = v8;
  *v8 = sub_18FD4FE5C(v7);
  v43 = OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_moreInfoItemsForPass;
  *(_QWORD *)&v9[v43] = sub_18FD4FE68(v7);
  v39 = OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_suppressMakeDefaultOfferForPass;
  v40 = v9;
  *(_QWORD *)&v9[v39] = sub_18FD4FE50(v7);
  v10 = sub_18FCDC600(0, (unint64_t *)&unk_1EE1C0DA0);
  v11 = sub_1903D0A3C();
  if (v11)
    v12 = v11;
  else
    v12 = v7;
  v13 = (_QWORD *)sub_18FD6EC7C(v12);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0E50);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_19043CD00;
  *(_QWORD *)(v14 + 32) = v10;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_19043CD00;
  *(_QWORD *)(v15 + 32) = sub_18FCDC600(0, &qword_1EE1C0D90);
  v16 = sub_1903D0A30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16 && (sub_18FE05A34(v16), v18 = v17, swift_bridgeObjectRelease(), v18))
  {
    if (!v13[2])
      goto LABEL_13;
  }
  else
  {
    v18 = sub_18FD4FE5C(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRelease();
    if (!v13[2])
    {
LABEL_13:
      swift_bridgeObjectRelease();

LABEL_15:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      type metadata accessor for SEProvisionedPasses();
      swift_deallocPartialClassInstance();
      return 0;
    }
  }
  if (!*(_QWORD *)(v18 + 16))
    goto LABEL_13;
  v20 = v13[4];
  v19 = v13[5];
  swift_bridgeObjectRetain();
  sub_18FD5293C(v20, v19);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)v6 = v13;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *v44 = v18;
  swift_bridgeObjectRelease();
  v22 = a1;
  v23 = sub_1903D0A18();
  if (v23)
  {
    v24 = (void *)v23;
    v48 = 0;
    v49 = 0;
    sub_1903D05BC();

  }
  v27 = &v40[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_externalProvisioningMode];
  *(_QWORD *)&v40[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_externalProvisioningMode] = 0;
  v27[8] = 2;
  v28 = (void *)sub_1903D0A18();
  if (v28)
  {
    v48 = 0;
    v49 = 0;
    sub_1903D05BC();

  }
  swift_beginAccess();
  *(_QWORD *)v41 = 0;
  *((_QWORD *)v41 + 1) = 0;
  swift_bridgeObjectRelease();
  v29 = (void *)sub_1903D0A18();
  if (v29)
  {
    v46 = 0;
    v47 = 0;
    sub_1903D05BC();

  }
  swift_beginAccess();
  *(_QWORD *)v42 = 0;
  *((_QWORD *)v42 + 1) = 0;
  swift_bridgeObjectRelease();
  v30 = (void *)sub_1903D05A4();
  v31 = objc_msgSend(a1, sel_decodeBoolForKey_, v30);

  v40[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_isExpressModeSetupOptional] = v31;
  v32 = (void *)sub_1903D05A4();
  v33 = objc_msgSend(a1, sel_decodeBoolForKey_, v32);

  v40[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_isExpressEnabled] = v33;
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_19043CD00;
  *(_QWORD *)(v34 + 32) = v10;
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_19043E310;
  *(_QWORD *)(v35 + 32) = sub_18FCDC600(0, (unint64_t *)&unk_1EE1C0DB0);
  *(_QWORD *)(v35 + 40) = sub_18FCDC600(0, (unint64_t *)&unk_1EE1C1250);
  v36 = sub_1903D0A30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v36 || (v37 = sub_18FE05E18(v36), swift_bridgeObjectRelease(), !v37))
  {
    v37 = sub_18FD4FE68(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v40[v43] = v37;

  swift_bridgeObjectRelease();
  v45.receiver = v40;
  v45.super_class = (Class)type metadata accessor for SEProvisionedPasses();
  v25 = objc_msgSendSuper2(&v45, sel_init);

  return v25;
}

void sub_18FE05A34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  char *v7;
  int64_t v8;
  char *v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[40];
  _OWORD v33[2];
  _OWORD v34[2];
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[2];
  uint64_t v38;

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0DE0);
    v2 = (_QWORD *)sub_1903D0D24();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v29 = v1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(v1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v6 = (char *)v37 + 8;
  v7 = (char *)v34 + 8;
  swift_bridgeObjectRetain();
  v8 = 0;
  v27 = v1;
  while (1)
  {
    if (v5)
    {
      v14 = (v5 - 1) & v5;
      v15 = __clz(__rbit64(v5)) | (v8 << 6);
      v16 = v8;
    }
    else
    {
      v17 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_39;
      if (v17 >= v28)
      {
LABEL_36:
        sub_18FD486FC();
        return;
      }
      v18 = *(_QWORD *)(v29 + 8 * v17);
      v16 = v8 + 1;
      if (!v18)
      {
        v16 = v8 + 2;
        if (v8 + 2 >= v28)
          goto LABEL_36;
        v18 = *(_QWORD *)(v29 + 8 * v16);
        if (!v18)
        {
          v16 = v8 + 3;
          if (v8 + 3 >= v28)
            goto LABEL_36;
          v18 = *(_QWORD *)(v29 + 8 * v16);
          if (!v18)
          {
            v16 = v8 + 4;
            if (v8 + 4 >= v28)
              goto LABEL_36;
            v18 = *(_QWORD *)(v29 + 8 * v16);
            if (!v18)
            {
              v19 = v8 + 5;
              if (v8 + 5 >= v28)
                goto LABEL_36;
              v18 = *(_QWORD *)(v29 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  v16 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_40;
                  if (v16 >= v28)
                    goto LABEL_36;
                  v18 = *(_QWORD *)(v29 + 8 * v16);
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v16 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      v14 = (v18 - 1) & v18;
      v15 = __clz(__rbit64(v18)) + (v16 << 6);
    }
    sub_18FD784BC(*(_QWORD *)(v1 + 48) + 40 * v15, (uint64_t)v36);
    sub_18FCD6028(*(_QWORD *)(v1 + 56) + 32 * v15, (uint64_t)v6);
    v34[0] = v37[0];
    v34[1] = v37[1];
    v35 = v38;
    v33[0] = v36[0];
    v33[1] = v36[1];
    sub_18FD784BC((uint64_t)v33, (uint64_t)v32);
    if (!swift_dynamicCast())
    {
      sub_18FD36250((uint64_t)v33, &qword_1EE1C0DE8);
      swift_bridgeObjectRelease();
LABEL_35:
      sub_18FD486FC();
      swift_release();
      return;
    }
    sub_18FCD6028((uint64_t)v7, (uint64_t)v32);
    sub_18FD36250((uint64_t)v33, &qword_1EE1C0DE8);
    sub_18FCDC600(0, &qword_1EE1C0D90);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();

      goto LABEL_35;
    }
    v20 = sub_18FD5293C(v30, v31);
    v21 = v20;
    if ((v22 & 1) != 0)
    {
      v9 = v7;
      v10 = v6;
      v11 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      *v11 = v30;
      v11[1] = v31;
      v12 = v2[7];
      v13 = 8 * v21;

      *(_QWORD *)(v12 + v13) = v30;
      v6 = v10;
      v7 = v9;
      v1 = v27;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    v23 = (uint64_t *)(v2[6] + 16 * v20);
    *v23 = v30;
    v23[1] = v31;
    *(_QWORD *)(v2[7] + 8 * v20) = v30;
    v24 = v2[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_38;
    v2[2] = v26;
LABEL_8:
    v8 = v16;
    v5 = v14;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

unint64_t sub_18FE05E18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  char *v7;
  unint64_t result;
  int64_t v9;
  char *v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[40];
  _OWORD v32[2];
  _OWORD v33[2];
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];
  uint64_t v37;

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1C0DF0);
    v2 = (_QWORD *)sub_1903D0D24();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v28 = v1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(v1 + 64);
  v27 = (unint64_t)(63 - v4) >> 6;
  v6 = (char *)v36 + 8;
  v7 = (char *)v33 + 8;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v26 = v1;
  while (1)
  {
    if (v5)
    {
      v14 = (v5 - 1) & v5;
      v15 = __clz(__rbit64(v5)) | (v9 << 6);
      v16 = v9;
    }
    else
    {
      v17 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_40;
      if (v17 >= v27)
      {
LABEL_36:
        sub_18FD486FC();
        return (unint64_t)v2;
      }
      v18 = *(_QWORD *)(v28 + 8 * v17);
      v16 = v9 + 1;
      if (!v18)
      {
        v16 = v9 + 2;
        if (v9 + 2 >= v27)
          goto LABEL_36;
        v18 = *(_QWORD *)(v28 + 8 * v16);
        if (!v18)
        {
          v16 = v9 + 3;
          if (v9 + 3 >= v27)
            goto LABEL_36;
          v18 = *(_QWORD *)(v28 + 8 * v16);
          if (!v18)
          {
            v16 = v9 + 4;
            if (v9 + 4 >= v27)
              goto LABEL_36;
            v18 = *(_QWORD *)(v28 + 8 * v16);
            if (!v18)
            {
              v19 = v9 + 5;
              if (v9 + 5 >= v27)
                goto LABEL_36;
              v18 = *(_QWORD *)(v28 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  v16 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_41;
                  if (v16 >= v27)
                    goto LABEL_36;
                  v18 = *(_QWORD *)(v28 + 8 * v16);
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v16 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      v14 = (v18 - 1) & v18;
      v15 = __clz(__rbit64(v18)) + (v16 << 6);
    }
    sub_18FD784BC(*(_QWORD *)(v1 + 48) + 40 * v15, (uint64_t)v35);
    sub_18FCD6028(*(_QWORD *)(v1 + 56) + 32 * v15, (uint64_t)v6);
    v33[0] = v36[0];
    v33[1] = v36[1];
    v34 = v37;
    v32[0] = v35[0];
    v32[1] = v35[1];
    sub_18FD784BC((uint64_t)v32, (uint64_t)v31);
    if (!swift_dynamicCast())
    {
      sub_18FD36250((uint64_t)v32, &qword_1EE1C0DE8);
LABEL_35:
      swift_bridgeObjectRelease();
      sub_18FD486FC();
      swift_release();
      return 0;
    }
    sub_18FCD6028((uint64_t)v7, (uint64_t)v31);
    sub_18FD36250((uint64_t)v32, &qword_1EE1C0DE8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0D98);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    result = sub_18FD5293C(v29, v30);
    v20 = result;
    if ((v21 & 1) != 0)
    {
      v10 = v7;
      v11 = v6;
      v12 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v12 = v29;
      v12[1] = v30;
      v13 = v2[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v13 + 8 * v20) = v29;
      v6 = v11;
      v7 = v10;
      v1 = v26;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v22 = (uint64_t *)(v2[6] + 16 * result);
    *v22 = v29;
    v22[1] = v30;
    *(_QWORD *)(v2[7] + 8 * result) = v29;
    v23 = v2[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_39;
    v2[2] = v25;
LABEL_8:
    v9 = v16;
    v5 = v14;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

id SEProvisionedPasses.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SEProvisionedPasses.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void *SEProvisionedPasses.ExternalProvisioningMode.externalOptions.getter(void *a1, char a2)
{
  void *v2;
  id v3;

  if (a2)
    return 0;
  v2 = a1;
  v3 = a1;
  return v2;
}

uint64_t SEProvisionedPasses.ExternalProvisioningMode.description.getter(void *a1, char a2)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;

  v2 = a1;
  if (!a2)
  {
    v7 = objc_msgSend(a1, sel_devices);
    sub_18FCDC600(0, &qword_1EE1C0DC0);
    v8 = sub_1903D0784();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1903D0D00();
      swift_bridgeObjectRelease();
      if (v9)
        goto LABEL_6;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9)
      {
LABEL_6:
        v21 = v2;
        v23 = MEMORY[0x1E0DEE9D8];
        result = sub_18FD802FC(0, v9 & ~(v9 >> 63), 0);
        if (v9 < 0)
        {
          __break(1u);
          return result;
        }
        v11 = 0;
        do
        {
          if ((v8 & 0xC000000000000001) != 0)
            v12 = (id)MEMORY[0x19400B200](v11, v8);
          else
            v12 = *(id *)(v8 + 8 * v11 + 32);
          v13 = v12;
          v14 = objc_msgSend(v12, sel_serialNumber);
          v15 = sub_1903D05C8();
          v17 = v16;

          v19 = *(_QWORD *)(v23 + 16);
          v18 = *(_QWORD *)(v23 + 24);
          if (v19 >= v18 >> 1)
            sub_18FD802FC(v18 > 1, v19 + 1, 1);
          ++v11;
          *(_QWORD *)(v23 + 16) = v19 + 1;
          v20 = v23 + 16 * v19;
          *(_QWORD *)(v20 + 32) = v15;
          *(_QWORD *)(v20 + 40) = v17;
        }
        while (v9 != v11);
        swift_bridgeObjectRelease();
        v2 = v21;
LABEL_20:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BEFD0);
        sub_18FD667E8((unint64_t *)&qword_1EE1C0AE0, (uint64_t *)&unk_1EE1BEFD0, MEMORY[0x1E0DEAF20]);
        sub_1903D0544();
        swift_bridgeObjectRelease();
        sub_1903D0BF8();
        swift_bridgeObjectRelease();
        v22 = 0xD000000000000010;
        sub_1903D067C();
        swift_bridgeObjectRelease();
        sub_1903D067C();
        v5 = v2;
        v6 = 0;
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (a2 == 1)
  {
    v3 = a1;
    sub_1903D0BF8();
    swift_bridgeObjectRelease();
    v22 = 0xD000000000000016;
    v4 = objc_msgSend(v3, sel_serialNumber);
    sub_1903D05C8();

    sub_1903D067C();
    swift_bridgeObjectRelease();
    sub_1903D067C();
    v5 = v2;
    v6 = 1;
LABEL_21:
    sub_18FCDC690(v5, v6);
    return v22;
  }
  if (a1)
    return 0xD00000000000001CLL;
  else
    return 0x656E6F6E2ELL;
}

uint64_t sub_18FE0663C(uint64_t a1, uint64_t a2)
{
  return _s11PassKitCore19SEProvisionedPassesC24ExternalProvisioningModeO2eeoiySbAE_AEtFZ_0(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_18FE06654()
{
  uint64_t v0;

  return SEProvisionedPasses.ExternalProvisioningMode.description.getter(*(void **)v0, *(_BYTE *)(v0 + 8));
}

unint64_t sub_18FE06660(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

_OWORD *sub_18FE066A8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_18FD533A0(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_18FE06710(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, _QWORD *a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a7[6] + 16 * result);
  *v7 = a2;
  v7[1] = a3;
  v8 = a7[7] + 24 * result;
  *(_QWORD *)v8 = a4;
  *(_QWORD *)(v8 + 8) = a5;
  *(_BYTE *)(v8 + 16) = a6 & 1;
  v9 = a7[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a7[2] = v11;
  return result;
}

_OWORD *sub_18FE06768(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_18FD533A0(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

_OWORD *sub_18FE067CC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_18FD5293C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        return sub_18FD533A0(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_18FDD1DF8();
      goto LABEL_7;
    }
    sub_18FDCF68C(v15, a4 & 1);
    v21 = sub_18FD5293C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_18FE066A8(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1903D0F1C();
  __break(1u);
  return result;
}

void sub_18FE068FC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_18FD5293C(a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_13;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_9;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_18FDD1FDC();
    goto LABEL_9;
  }
  sub_18FDCF988(v19, a6 & 1);
  v22 = sub_18FD5293C(a4, a5);
  if ((v20 & 1) != (v23 & 1))
  {
LABEL_13:
    sub_1903D0F1C();
    __break(1u);
    return;
  }
  v16 = v22;
LABEL_9:
  v24 = a3 & 1;
  v25 = *v7;
  if ((v20 & 1) != 0)
  {
    v26 = v24 != 0;
    v27 = v25[7] + 24 * v16;
    sub_18FD598B0(*(void **)v27, *(void **)(v27 + 8), *(_BYTE *)(v27 + 16));
    *(_QWORD *)v27 = a1;
    *(_QWORD *)(v27 + 8) = a2;
    *(_BYTE *)(v27 + 16) = v26;
  }
  else
  {
    sub_18FE06710(v16, a4, a5, a1, a2, v24, v25);
    swift_bridgeObjectRetain();
  }
}

uint64_t sub_18FE06A54(char a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_18FD75D34(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_18FDD2530();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v16[7] + v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_BYTE *)(v16[7] + v10) = a1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_18FDD02E0(result, a3 & 1);
  result = sub_18FD75D34(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1903D0F1C();
  __break(1u);
  return result;
}

_OWORD *sub_18FE06B7C(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_18FD75D8C((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
        return sub_18FD533A0(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_18FDD26B8();
      goto LABEL_7;
    }
    sub_18FDD05BC(v12, a3 & 1);
    v18 = sub_18FD75D8C((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_18FE06768(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for ODIAttributeKey(0);
  result = (_OWORD *)sub_1903D0F1C();
  __break(1u);
  return result;
}

uint64_t sub_18FE06C9C(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_18FD75E3C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_18FDD287C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v16[7] + v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_BYTE *)(v16[7] + v10) = a1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_18FDD08F4(result, a3 & 1);
  result = sub_18FD75E3C(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1903D0F1C();
  __break(1u);
  return result;
}

uint64_t sub_18FE06DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_18FD5293C(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_18FDD21B4();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_18FDCFCB0(v17, a5 & 1);
  v23 = sub_18FD5293C(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1903D0F1C();
  __break(1u);
  return result;
}

uint64_t sub_18FE06F38(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v7 = v6;
  v14 = *v6;
  v16 = sub_18FD5293C(a4, a5);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_18FDD2A04();
LABEL_7:
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7] + 24 * v16;
      result = sub_18FDA1F74(*(_QWORD *)v23, *(_QWORD *)(v23 + 8), *(_BYTE *)(v23 + 16));
      *(_QWORD *)v23 = a1;
      *(_QWORD *)(v23 + 8) = a2;
      *(_BYTE *)(v23 + 16) = a3;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (uint64_t *)(v22[6] + 16 * v16);
    *v27 = a4;
    v27[1] = a5;
    v28 = v22[7] + 24 * v16;
    *(_QWORD *)v28 = a1;
    *(_QWORD *)(v28 + 8) = a2;
    *(_BYTE *)(v28 + 16) = a3;
    v29 = v22[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v22[2] = v31;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_18FDD0DF8(v19, a6 & 1);
  v25 = sub_18FD5293C(a4, a5);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1903D0F1C();
  __break(1u);
  return result;
}

void sub_18FE070C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_18FD5293C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_18FDD2BDC();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_18FDD1120(v15, a4 & 1);
  v20 = sub_18FD5293C(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1903D0F1C();
  __break(1u);
}

uint64_t sub_18FE0721C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_18FD5293C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_18FDD2D8C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_18FDD142C(v15, a4 & 1);
  v21 = sub_18FD5293C(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1903D0F1C();
  __break(1u);
  return result;
}

uint64_t _s11PassKitCore19SEProvisionedPassesC24ExternalProvisioningModeO2eeoiySbAE_AEtFZ_0(void *a1, char a2, void *a3, char a4)
{
  char v6;
  void *v7;
  unsigned __int8 v8;

  if (!a2)
  {
    if (!a4)
    {
      sub_18FCDC600(0, (unint64_t *)&qword_1EE1C0B18);
      sub_18FE07A04(a1, 0);
      sub_18FE07A04(a3, 0);
      v6 = sub_1903D0A54();
      sub_18FCDC690(a3, 0);
      v7 = a1;
      v8 = 0;
      goto LABEL_12;
    }
    return 0;
  }
  if (a2 == 1)
  {
    if (a4 == 1)
    {
      sub_18FCDC600(0, (unint64_t *)&qword_1EE1C0B18);
      sub_18FE07A04(a1, 1u);
      sub_18FE07A04(a3, 1u);
      v6 = sub_1903D0A54();
      sub_18FCDC690(a3, 1u);
      v7 = a1;
      v8 = 1;
LABEL_12:
      sub_18FCDC690(v7, v8);
      return v6 & 1;
    }
    return 0;
  }
  if (a1)
  {
    if (a4 != 2 || a3 != (void *)1)
      return 0;
  }
  else if (a4 != 2 || a3)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_18FE074B4(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  void *v10;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;
  uint64_t v18;

  v3 = a1;
  v18 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_24;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_1903D0D00())
  {
    v17 = v3;
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    v8 = (_QWORD *)(v3 + 32);
    while (1)
    {
      while (1)
      {
        if (v6)
        {
          v9 = (id)MEMORY[0x19400B200](v5, v17);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v7 + 16))
            goto LABEL_22;
          v9 = (id)v8[v5];
        }
        v10 = v9;
        if (__OFADD__(v5++, 1))
          goto LABEL_23;
        v12 = objc_msgSend(v9, sel_type);
        v13 = *(_QWORD *)(a2 + 16);
        if (v13)
          break;
LABEL_4:
        sub_1903D0C70();
        sub_1903D0C94();
        sub_1903D0CA0();
        v3 = (unint64_t)&v18;
        sub_1903D0C7C();
        if (v5 == i)
          return v18;
      }
      if (*(id *)(a2 + 32) != v12)
        break;
LABEL_11:

      if (v5 == i)
        return v18;
    }
    if (v13 == 1)
      goto LABEL_4;
    v14 = 5;
    while (1)
    {
      v15 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      if (*(id *)(a2 + 8 * v14) == v12)
        goto LABEL_11;
      ++v14;
      if (v15 == v13)
        goto LABEL_4;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    ;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_18FE0764C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  int64_t v22;

  v21 = a2 + 64;
  v5 = 1 << *(_BYTE *)(a2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a2 + 64);
  v22 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v9 >= v22)
      goto LABEL_24;
    v19 = *(_QWORD *)(v21 + 8 * v9);
    if (!v19)
      break;
LABEL_19:
    v7 = (v19 - 1) & v19;
    v11 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    v15 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v11);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_18FE074B4(v15, a3);
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_18FE0721C(v16, v13, v14, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    result = swift_bridgeObjectRelease();
  }
  v20 = v9 + 1;
  if (v9 + 1 >= v22)
    goto LABEL_24;
  v19 = *(_QWORD *)(v21 + 8 * v20);
  if (v19)
    goto LABEL_18;
  v20 = v9 + 2;
  if (v9 + 2 >= v22)
    goto LABEL_24;
  v19 = *(_QWORD *)(v21 + 8 * v20);
  if (v19)
    goto LABEL_18;
  v20 = v9 + 3;
  if (v9 + 3 >= v22)
    goto LABEL_24;
  v19 = *(_QWORD *)(v21 + 8 * v20);
  if (v19)
    goto LABEL_18;
  v20 = v9 + 4;
  if (v9 + 4 >= v22)
  {
LABEL_24:
    swift_release();
    return a1;
  }
  v19 = *(_QWORD *)(v21 + 8 * v20);
  if (v19)
  {
LABEL_18:
    v9 = v20;
    goto LABEL_19;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v22)
      goto LABEL_24;
    v19 = *(_QWORD *)(v21 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

id _s11PassKitCore19SEProvisionedPassesC07primaryA06passes13moreInfoItems24externalProvisioningMode027suppressMakeDefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0(id a1, unint64_t a2, unint64_t a3, void *a4, unsigned __int8 a5, uint64_t a6, char a7, char a8)
{
  char v16;
  char v17;
  void *v18;
  unsigned __int8 v19;
  uint64_t v20;
  id result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  id v29;
  unint64_t v30;
  unint64_t v31;

  if (!(a3 >> 62))
  {
    if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_6:
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x1E0DEE9E0];
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  v28 = sub_1903D0D00();
  swift_bridgeObjectRelease();
  if (!v28)
    goto LABEL_6;
LABEL_3:
  v30 = a2;
  v16 = a7;
  v17 = a8;
  v18 = a4;
  v19 = a5;
  v20 = a6;
  result = objc_msgSend(a1, sel_uniqueID, v30);
  if (result)
  {
    v22 = result;
    v23 = sub_1903D05C8();
    v25 = v24;

    v26 = MEMORY[0x1E0DEE9E0];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_18FE0721C(a3, v23, v25, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a6 = v20;
    a5 = v19;
    a4 = v18;
    a8 = v17;
    a7 = v16;
    a2 = v31;
LABEL_7:
    v29 = objc_allocWithZone((Class)type metadata accessor for SEProvisionedPasses());
    return (id)SEProvisionedPasses.init(primaryPass:passes:moreInfoItemsForPass:externalProvisioningMode:suppressMakeDefaultOfferForPass:isExpressModeSetupOptional:isExpressEnabled:)(a1, a2, v26, a4, a5, a6, a7 & 1, a8 & 1);
  }
  __break(1u);
  return result;
}

id sub_18FE07A04(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

uint64_t type metadata accessor for SEProvisionedPasses()
{
  return objc_opt_self();
}

uint64_t sub_18FE07A40@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_cardIdentifier, a2);
}

uint64_t sub_18FE07A4C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_18FE02048(a1, a2, a3, a4, &OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_cardIdentifier);
}

id sub_18FE07A68@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_notificationSuppressionAssertion);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_18FE07ABC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_provisioningTemplateIdentifier, a2);
}

uint64_t keypath_get_1Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FE07B18(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_18FE02048(a1, a2, a3, a4, &OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_provisioningTemplateIdentifier);
}

uint64_t method lookup function for SEProvisionedPasses()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SEProvisionedPasses.primaryPass.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SEProvisionedPasses.passes.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SEProvisionedPasses.externalProvisioningOptions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SEProvisionedPasses.externalProvisioningMode.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SEProvisionedPasses.externalProvisioningMode.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SEProvisionedPasses.externalProvisioningMode.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of SEProvisionedPasses.cardIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of SEProvisionedPasses.cardIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of SEProvisionedPasses.cardIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of SEProvisionedPasses.notificationSuppressionAssertion.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of SEProvisionedPasses.notificationSuppressionAssertion.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of SEProvisionedPasses.notificationSuppressionAssertion.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of SEProvisionedPasses.provisioningTemplateIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of SEProvisionedPasses.provisioningTemplateIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of SEProvisionedPasses.provisioningTemplateIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of SEProvisionedPasses.moreInfoItems.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of SEProvisionedPasses.__allocating_init(primaryPass:passes:moreInfoItemsForPass:externalProvisioningMode:suppressMakeDefaultOfferForPass:isExpressModeSetupOptional:isExpressEnabled:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 384))();
}

uint64_t dispatch thunk of SEProvisionedPasses.rearrange(passes:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of SEProvisionedPasses.removeMoreInfoItemsOfTypes(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of SEProvisionedPasses.addPasses(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of SEProvisionedPasses.suppressMakeDefaultOffer(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of SEProvisionedPasses.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of SEProvisionedPasses.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 440))();
}

uint64_t initializeBufferWithCopyOfBuffer for SEProvisionedPasses.ExternalProvisioningMode(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_18FE07A04(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for SEProvisionedPasses.ExternalProvisioningMode(uint64_t a1)
{
  sub_18FCDC690(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for SEProvisionedPasses.ExternalProvisioningMode(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_18FE07A04(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_18FCDC690(v5, v6);
  return a1;
}

uint64_t assignWithTake for SEProvisionedPasses.ExternalProvisioningMode(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_18FCDC690(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for SEProvisionedPasses.ExternalProvisioningMode()
{
  return &type metadata for SEProvisionedPasses.ExternalProvisioningMode;
}

uint64_t sub_18FE07E8C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18FE07EB8()
{
  uint64_t v0;

  return sub_18FE03E8C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t sub_18FE07EDC(uint64_t a1)
{
  return sub_18FE07F00(a1, MEMORY[0x1E0D89528]);
}

uint64_t sub_18FE07EF4(uint64_t a1)
{
  return sub_18FE07F00(a1, MEMORY[0x1E0D894B0]);
}

uint64_t sub_18FE07F00(uint64_t a1, uint64_t (*a2)(void))
{
  char v3;

  sub_18FDA7930(a1);
  v3 = a2();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_18FE07F78(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  id v7;
  char v8;

  v6 = sub_1903D0784();
  v7 = a1;
  sub_18FDA7930(v6);
  v8 = a4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v8 & 1;
}

uint64_t sub_18FE0801C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, unint64_t, uint64_t);
  uint64_t v12;

  v2 = sub_1903D04A8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_18FDA7930(a1);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v10(v5, v8, v2);
    while (1)
    {
      sub_1903D046C();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v8 += v9;
      if (!--v7)
        break;
      v10(v5, v8, v2);
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FE0819C()
{
  return sub_1903D0430();
}

uint64_t sub_18FE08200(uint64_t a1)
{
  void *v1;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;

  v3 = v1;
  v4 = sub_18FE097E0(a1);

  v5 = *(_QWORD *)(a1 + 16);
  result = (uint64_t)v4;
  if (v5 != v4[2])
  {
    swift_bridgeObjectRelease();
    return sub_18FE1D840(0xD000000000000011, 0x8000000190457790, v5);
  }
  return result;
}

uint64_t sub_18FE08294@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a2;
  v4 = sub_1903D04A8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v31 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0E18);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v31 - v15;
  v17 = *a1;
  v18 = a1[1];
  v32 = v17;
  sub_1903D0418();
  if (v2)
  {

    v19 = 1;
  }
  else
  {
    v19 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v16, v19, 1, v4);
  sub_18FE09B2C((uint64_t)v16, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
  {
    sub_18FD36250((uint64_t)v14, &qword_1EE1C0E18);
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v20 = sub_1903D0340();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain_n();
    v21 = sub_1903D0328();
    v22 = sub_1903D0940();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v35 = v24;
      *(_DWORD *)v23 = 136315138;
      swift_bridgeObjectRetain();
      v34 = sub_18FCD5144(v32, v18, &v35);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FC92000, v21, v22, "Failed to find applet type for AID: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v24, -1, -1);
      MEMORY[0x19400D804](v23, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    result = sub_18FD36250((uint64_t)v16, &qword_1EE1C0E18);
    v30 = v33;
    *v33 = 0;
    v30[1] = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v14, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    sub_18FE0CAC0((uint64_t)v8, (char *)&v35);
    v25 = ProvisioningSEStorageAppletType.rawValue.getter();
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    result = sub_18FD36250((uint64_t)v16, &qword_1EE1C0E18);
    v29 = v33;
    *v33 = v25;
    v29[1] = v27;
  }
  return result;
}

uint64_t sub_18FE086C4(uint64_t a1, void *a2)
{
  return sub_18FE086E8(a1, a2, MEMORY[0x1E0D89520]);
}

uint64_t sub_18FE086DC(uint64_t a1, void *a2)
{
  return sub_18FE086E8(a1, a2, MEMORY[0x1E0D89518]);
}

uint64_t sub_18FE086E8(uint64_t a1, void *a2, uint64_t (*a3)(_BYTE *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  void (*v13)(_BYTE *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];

  v6 = sub_1903D04A8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v16[-v11];
  sub_18FDAB6B8(a1, a2, (uint64_t)&v16[-v11]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x1E0D89610], v6);
  sub_18FE09934();
  LOBYTE(a1) = sub_1903D0598();
  v13 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v13(v10, v6);
  v14 = 0;
  if ((a1 & 1) == 0)
    v14 = a3(v12);
  v13(v12, v6);
  return v14;
}

uint64_t sub_18FE08834(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  v6 = sub_1903D05C8();
  v8 = v7;
  v9 = a1;
  v10 = a4(v6, v8);

  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_18FE08894()
{
  uint64_t v0;

  sub_1903D0400();
  return v0;
}

uint64_t sub_18FE08950()
{
  return sub_1903D0400();
}

uint64_t sub_18FE08A04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  void *v18;
  Swift::String v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  char *v74;
  char *v75;
  char *v76;
  void *v77;
  uint64_t v78;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0E10);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v71 = (uint64_t)&v43 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0E18);
  MEMORY[0x1E0C80A78](v7);
  v70 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = 0;
  v9 = sub_1903D04A8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v76 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v75 = (char *)&v43 - v14;
  MEMORY[0x1E0C80A78](v13);
  v15 = *(_QWORD *)(a1 + 16);
  v74 = v5;
  if (v15)
  {
    v68 = *MEMORY[0x1E0D89610];
    v67 = *MEMORY[0x1E0D89598];
    v66 = *MEMORY[0x1E0D89608];
    v65 = *MEMORY[0x1E0D89600];
    v64 = *MEMORY[0x1E0D89570];
    v63 = *MEMORY[0x1E0D895D8];
    v62 = *MEMORY[0x1E0D895C8];
    v61 = *MEMORY[0x1E0D895B8];
    v60 = *MEMORY[0x1E0D895F0];
    v59 = *MEMORY[0x1E0D895D0];
    v58 = *MEMORY[0x1E0D895C0];
    v57 = *MEMORY[0x1E0D89560];
    v56 = *MEMORY[0x1E0D89568];
    v55 = *MEMORY[0x1E0D89550];
    v54 = *MEMORY[0x1E0D89558];
    v53 = *MEMORY[0x1E0D895E8];
    v52 = *MEMORY[0x1E0D895B0];
    v51 = *MEMORY[0x1E0D895E0];
    v50 = *MEMORY[0x1E0D89588];
    v49 = *MEMORY[0x1E0D895A8];
    v48 = *MEMORY[0x1E0D89618];
    v47 = *MEMORY[0x1E0D89580];
    v46 = *MEMORY[0x1E0D895A0];
    v45 = *MEMORY[0x1E0D895F8];
    v44 = *MEMORY[0x1E0D89578];
    v69 = *MEMORY[0x1E0D89590];
    swift_bridgeObjectRetain();
    v43 = a1;
    v16 = (void **)(a1 + 40);
    v17 = (uint64_t)*(v16 - 1);
    v18 = *v16;
    swift_bridgeObjectRetain_n();
    v19._countAndFlagsBits = v17;
    v72 = (uint64_t)v18;
    v19._object = v18;
    ProvisioningSEStorageAppletType.init(rawValue:)(v19);
    v20 = (char *)&loc_18FE08D54 + dword_18FE0930C[v78];
    v73 = (int64_t)(v16 + 2);
    __asm { BR              X9 }
  }
  v21 = MEMORY[0x1E0DEE9E0];
  v22 = 0;
  v23 = 0;
  v24 = *(_QWORD *)(MEMORY[0x1E0DEE9E0] + 64);
  v72 = MEMORY[0x1E0DEE9E0] + 64;
  v25 = 1 << *(_BYTE *)(MEMORY[0x1E0DEE9E0] + 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v27 = v26 & v24;
  v75 = (char *)OBJC_IVAR____PKProvisioningSEStorageSnapshot_snapshot;
  v73 = (unint64_t)(v25 + 63) >> 6;
  v70 = (char *)(v73 - 1);
  while (1)
  {
    if (v27)
    {
      v30 = __clz(__rbit64(v27));
      v27 &= v27 - 1;
      v31 = v30 | (v23 << 6);
LABEL_10:
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v5, *(_QWORD *)(v21 + 48) + *(_QWORD *)(v10 + 72) * v31, v9);
      v32 = *(_QWORD *)(v21 + 56);
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0E20);
      *(_QWORD *)&v5[*(int *)(v33 + 48)] = *(_QWORD *)(v32 + 8 * v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v5, 0, 1, v33);
      goto LABEL_20;
    }
    v34 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      JUMPOUT(0x18FE092F8);
    }
    if (v34 < v73)
    {
      v35 = *(_QWORD *)(v72 + 8 * v34);
      if (v35)
        goto LABEL_14;
      v23 += 2;
      if (v34 + 1 >= v73)
      {
        v23 = v34;
      }
      else
      {
        v35 = *(_QWORD *)(v72 + 8 * v23);
        if (v35)
        {
          ++v34;
LABEL_14:
          v27 = (v35 - 1) & v35;
          v31 = __clz(__rbit64(v35)) + (v34 << 6);
          v23 = v34;
          goto LABEL_10;
        }
        if (v34 + 2 < v73)
        {
          v35 = *(_QWORD *)(v72 + 8 * (v34 + 2));
          if (v35)
          {
            v34 += 2;
            goto LABEL_14;
          }
          v41 = v34 + 3;
          if (v34 + 3 >= v73)
          {
            v23 = v34 + 2;
          }
          else
          {
            v35 = *(_QWORD *)(v72 + 8 * v41);
            if (v35)
            {
              v34 += 3;
              goto LABEL_14;
            }
            while (1)
            {
              v34 = v41 + 1;
              if (__OFADD__(v41, 1))
              {
                __break(1u);
                JUMPOUT(0x18FE09300);
              }
              if (v34 >= v73)
                break;
              v35 = *(_QWORD *)(v72 + 8 * v34);
              ++v41;
              if (v35)
                goto LABEL_14;
            }
            v23 = (int64_t)v70;
          }
        }
      }
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0E20);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v5, 1, 1, v36);
    v27 = 0;
LABEL_20:
    v37 = v71;
    sub_18FE0997C((uint64_t)v5, v71);
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0E20);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38) == 1)
      break;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v76, v37, v9);
    v39 = v77;
    v40 = sub_1903D0424();
    if (v39)
    {

      v28 = 0;
    }
    else
    {
      v28 = v40;
    }
    v77 = 0;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v76, v9);
    v29 = __OFADD__(v22, v28);
    v22 += v28;
    v5 = v74;
    if (v29)
    {
      __break(1u);
      JUMPOUT(0x18FE092ECLL);
    }
  }
  swift_release();
  return v22;
}

uint64_t static ProvisioningSEStorageSnapshot.purpleTrustAirHomeAppletType()()
{
  return 0x656D6F485F415450;
}

uint64_t static ProvisioningSEStorageSnapshot.purpleTrustAirAccessAppletType()()
{
  return 4281424;
}

uint64_t static ProvisioningSEStorageSnapshot.purpleTrustAirAliroAppletType()()
{
  return 0x6F72696C41;
}

uint64_t static ProvisioningSEStorageSnapshot.supportsSecureCoding.getter()
{
  return 1;
}

void sub_18FE09490(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____PKProvisioningSEStorageSnapshot_snapshot);
  v4 = (id)sub_1903D05A4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

}

id ProvisioningSEStorageSnapshot.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ProvisioningSEStorageSnapshot.init(coder:)(a1);
}

id ProvisioningSEStorageSnapshot.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  id v7;
  objc_super v9;
  void *v10;
  _BYTE v11[24];
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0E50);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_19043CD00;
  *(_QWORD *)(v3 + 32) = sub_1903D0484();
  v4 = v1;
  sub_1903D0A24();
  swift_bridgeObjectRelease();
  if (!v12)
  {

    sub_18FD36250((uint64_t)v11, (uint64_t *)&unk_1EE1C06E0);
LABEL_6:
    type metadata accessor for ProvisioningSEStorageSnapshot();
    swift_deallocPartialClassInstance();
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_6;
  }
  v5 = v10;
  *(_QWORD *)&v4[OBJC_IVAR____PKProvisioningSEStorageSnapshot_snapshot] = v10;
  v6 = v5;

  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for ProvisioningSEStorageSnapshot();
  v7 = objc_msgSendSuper2(&v9, sel_init);

  return v7;
}

id ProvisioningSEStorageSnapshot.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ProvisioningSEStorageSnapshot.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ProvisioningSEStorageSnapshot.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProvisioningSEStorageSnapshot();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_QWORD *sub_18FE097E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[2];
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v15 = swift_bridgeObjectRetain();
  v3 = (uint64_t *)(v15 + 40);
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v6 = *v3;
    v14[0] = *(v3 - 1);
    v14[1] = v6;
    swift_bridgeObjectRetain();
    sub_18FE08294(v14, &v12);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v4;
    }
    swift_bridgeObjectRelease();
    v7 = v13;
    if (v13)
    {
      v8 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_18FD51B0C(0, v4[2] + 1, 1, v4);
      v10 = v4[2];
      v9 = v4[3];
      if (v10 >= v9 >> 1)
        v4 = sub_18FD51B0C((_QWORD *)(v9 > 1), v10 + 1, 1, v4);
      v4[2] = v10 + 1;
      v5 = &v4[2 * v10];
      v5[4] = v8;
      v5[5] = v7;
    }
    v3 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_18FE09934()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1BEFF8;
  if (!qword_1EE1BEFF8)
  {
    v1 = sub_1903D04A8();
    result = MEMORY[0x19400D72C](MEMORY[0x1E0D89638], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1BEFF8);
  }
  return result;
}

uint64_t sub_18FE0997C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ProvisioningSEStorageSnapshot()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningSEStorageSnapshot()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningSEStorageSnapshot.canFit(appletTypes:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ProvisioningSEStorageSnapshot.addToSnapshot(appletTypes:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ProvisioningSEStorageSnapshot.removeFromSnapshot(appletTypes:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ProvisioningSEStorageSnapshot.reset()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ProvisioningSEStorageSnapshot.appletTypes(forAppletIDs:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ProvisioningSEStorageSnapshot.totalUsage(ofAppletType:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ProvisioningSEStorageSnapshot.usage(ofAppletType:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ProvisioningSEStorageSnapshot.totalStorage()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ProvisioningSEStorageSnapshot.totalUsage()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ProvisioningSEStorageSnapshot.requiredStorage(forAppletTypes:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ProvisioningSEStorageSnapshot.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ProvisioningSEStorageSnapshot.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_18FE09B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0E18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ProvisioningCarKeyStepImportKey.__allocating_init(context:credential:sharedState:)(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v9;

  v6 = swift_allocObject();
  v9 = *a2;
  v7 = *((_QWORD *)a2 + 2);
  LOBYTE(a2) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(v6 + 64) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + 16) = a1;
  *(_OWORD *)(v6 + 24) = v9;
  *(_QWORD *)(v6 + 40) = v7;
  *(_BYTE *)(v6 + 48) = (_BYTE)a2;
  *(_QWORD *)(v6 + 56) = a3;
  return v6;
}

uint64_t ProvisioningCarKeyStepImportKey.init(context:credential:sharedState:)(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  __int128 v9;

  v9 = *a2;
  v6 = *((_QWORD *)a2 + 2);
  v7 = *((_BYTE *)a2 + 24);
  *(_QWORD *)(v3 + 64) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v3 + 16) = a1;
  *(_OWORD *)(v3 + 24) = v9;
  *(_QWORD *)(v3 + 40) = v6;
  *(_BYTE *)(v3 + 48) = v7;
  *(_QWORD *)(v3 + 56) = a3;
  return v3;
}

uint64_t ProvisioningCarKeyStepImportKey.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t ProvisioningCarKeyStepImportKey.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

__n128 sub_18FE09D04@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  __n128 result;
  __n128 v11;

  type metadata accessor for ProvisioningCarKeyStepImportKey();
  v8 = swift_allocObject();
  v11 = *a2;
  v9 = a2[1].n128_u64[0];
  LOBYTE(a2) = a2[1].n128_u8[8];
  *(_QWORD *)(v8 + 64) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v8 + 16) = a1;
  result = v11;
  *(__n128 *)(v8 + 24) = v11;
  *(_QWORD *)(v8 + 40) = v9;
  *(_BYTE *)(v8 + 48) = (_BYTE)a2;
  *(_QWORD *)(v8 + 56) = a3;
  *a4 = v8;
  return result;
}

uint64_t type metadata accessor for ProvisioningCarKeyStepImportKey()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningCarKeyStepImportKey()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningCarKeyStepImportKey.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

ValueMetadata *type metadata accessor for ProvisioningCarKeyStepImportKey.ImportKeyResult()
{
  return &type metadata for ProvisioningCarKeyStepImportKey.ImportKeyResult;
}

uint64_t sub_18FE09DD8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, void *a6)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    a4(a1, a2);
    objc_msgSend(a6, sel_setInvalidationHandler_, 0);
    objc_msgSend(a6, sel_setMessageReceivedHandler_, 0);
    swift_unknownObjectWeakAssign();
    return swift_release();
  }
  return result;
}

void sub_18FE09E8C(void (*a1)(id, uint64_t))
{
  id v2;
  void *v3;
  id v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
  v3 = (void *)sub_1903D05A4();
  objc_msgSend(v2, sel_addInternalDebugDescription_, v3);

  v4 = v2;
  a1(v2, 2);

}

uint64_t sub_18FE09F3C(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;
  uint64_t v14;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v14 = result;
    swift_retain();
    swift_retain();
    sub_18FE0B680(a1, v14, a2, a6, a7, a3, a4);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_18FE09FFC(void *a1, char a2, _BYTE *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  _QWORD aBlock[6];

  v28 = a7;
  v29 = a6;
  v12 = ~a2;
  v13 = sub_1903D03B8();
  v27 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1903D03D0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    *a3 = 1;
    v26 = v18;
    sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
    v21 = a1;
    v22 = (void *)sub_1903D097C();
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = a4;
    *(_QWORD *)(v23 + 24) = a5;
    *(_QWORD *)(v23 + 32) = a1;
    *(_BYTE *)(v23 + 40) = a2;
    aBlock[4] = sub_18FD7C6E0;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FDF4F30;
    aBlock[3] = &block_descriptor_45_2;
    v24 = _Block_copy(aBlock);
    sub_18FE0C020(a1, a2);
    swift_retain();
    swift_release();
    sub_1903D03C4();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_18FCDC494();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
    sub_18FCDC4DC();
    sub_1903D0B38();
    MEMORY[0x19400AF6C](0, v20, v15, v24);
    _Block_release(v24);

    sub_18FE0C034(a1, a2);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v13);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v26);
  }
  return v29(1);
}

void sub_18FE0A238(char a1, void (*a2)(id, uint64_t))
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v4 = objc_msgSend((id)objc_opt_self(), sel_pkSharingError_, 13);
  if ((a1 & 1) != 0)
    v5 = 4;
  else
    v5 = 5;
  v6 = (void *)sub_1903D0124();

  v7 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v6, v5);
  v8 = (void *)sub_1903D05A4();
  objc_msgSend(v7, sel_addInternalDebugDescription_, v8);

  v9 = v7;
  a2(v7, 1);

}

uint64_t sub_18FE0A33C(void *a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_18FD5D5E4(a1);
    __asm { BR              X10 }
  }
  return result;
}

void sub_18FE0B048(char a1, id a2, void (*a3)(id, uint64_t))
{
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  if ((a1 & 1) != 0)
  {
    if (!a2)
    {
      a3(0, 255);
      return;
    }
  }
  else if (!a2)
  {
    v6 = 0;
    goto LABEL_7;
  }
  v5 = a2;
  v6 = (void *)sub_1903D0124();

LABEL_7:
  v7 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v6, 5);

  v8 = (void *)sub_1903D05A4();
  objc_msgSend(v7, sel_addInternalDebugDescription_, v8);

  v9 = v7;
  a3(v7, 2);

}

void sub_18FE0B154(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  double v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t ObjectType;
  void (*v36)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t aBlock;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  _QWORD *v45;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v11 = *(void **)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_BYTE *)(a2 + 48);
  v38 = a1;
  v39 = a4;
  if (v14)
    v15 = 0;
  else
    v15 = v11;
  sub_18FCDC6A4(v11, v12, v13, v14);
  swift_retain();
  swift_retain();
  v16 = objc_msgSend(v15, sel_statefulTransferCredential);

  sub_18FCD6F28(v11, v12, v13, v14);
  if (v16 && (v17 = objc_msgSend(v16, sel_handle), v16, v17))
  {
    v18 = *(void **)(a2 + 64);
    *(_QWORD *)(a2 + 64) = v38;
    v19 = v38;

    swift_unknownObjectWeakAssign();
    v20 = swift_allocObject();
    swift_weakInit();
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = v20;
    v21[3] = sub_18FE0B5B4;
    v21[4] = v10;
    v21[5] = v17;
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = sub_18FE0B618;
    *(_QWORD *)(v22 + 24) = v21;
    v44 = sub_18FE0B624;
    v45 = (_QWORD *)v22;
    v23 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v41 = 1107296256;
    v42 = sub_18FDF4F30;
    v43 = &block_descriptor_38;
    v24 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    v25 = v17;
    swift_release();
    objc_msgSend(v25, sel_setInvalidationHandler_, v24);
    _Block_release(v24);
    if (*(__int16 *)(*(_QWORD *)(a2 + 16) + 33) == -16384)
      v26 = 10.0;
    else
      v26 = 30.0;
    v27 = swift_allocObject();
    swift_weakInit();
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = v27;
    v28[3] = sub_18FE0B618;
    v28[4] = v21;
    v44 = sub_18FE0B648;
    v45 = v28;
    aBlock = v23;
    v41 = 1107296256;
    v42 = sub_18FD57688;
    v43 = &block_descriptor_17_0;
    v29 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = sub_18FE0B618;
    *(_QWORD *)(v30 + 24) = v21;
    v44 = sub_18FE0B678;
    v45 = (_QWORD *)v30;
    aBlock = v23;
    v41 = 1107296256;
    v42 = sub_18FDA4ED8;
    v43 = &block_descriptor_23_2;
    v31 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v25, sel_waitForMessageWithTimeout_messageHandler_invalidationHandler_, v29, v31, v26);
    _Block_release(v31);
    _Block_release(v29);
    swift_release();

    swift_release();
  }
  else
  {
    v32 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
    v33 = (void *)sub_1903D05A4();
    objc_msgSend(v32, sel_addInternalDebugDescription_, v33);

    swift_beginAccess();
    if (MEMORY[0x19400D8B8](a3 + 16))
    {
      v34 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      v36 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 72);
      v37 = v32;
      v36(v32, 2, v39, a5, ObjectType, v34);
      swift_release();

      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();

    }
  }
}

uint64_t sub_18FE0B5B4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_18FD932F4(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_18FE0B5C0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18FE0B5E4()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_18FE0B618(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_18FE09DD8(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

void sub_18FE0B624()
{
  uint64_t v0;

  sub_18FE09E8C(*(void (**)(id, uint64_t))(v0 + 16));
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

uint64_t sub_18FE0B648(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t *v4;

  return sub_18FE09F3C(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_18FE0B654()
{
  swift_release();
  return swift_deallocObject();
}

void sub_18FE0B678(char a1)
{
  uint64_t v1;

  sub_18FE0A238(a1, *(void (**)(id, uint64_t))(v1 + 16));
}

void sub_18FE0B680(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  _QWORD *v14;
  void (*v15)(uint64_t, void *);
  char v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  void *v57;
  void *v58;
  _QWORD *v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  unint64_t v68;
  id v69;
  id v70;
  __int128 aBlock;
  void (*v72)(uint64_t, void *);
  void *v73;
  uint64_t (*v74)(void *);
  _QWORD *v75;
  uint64_t v76;

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = a7;
  v15 = *(void (**)(uint64_t, void *))(a2 + 40);
  v16 = *(_BYTE *)(a2 + 48);
  aBlock = *(_OWORD *)(a2 + 24);
  v72 = v15;
  LOBYTE(v73) = v16;
  swift_retain();
  swift_retain();
  v70 = (id)ProvisioningCredentialsConfiguration.Credential.carKeyTransferComponents.getter();
  if (!v70)
    goto LABEL_10;
  v19 = v18;

  v20 = MEMORY[0x19400D8B8](a2 + 72);
  if (!v20)
  {

LABEL_10:
    a6(1);
    swift_release();
    return;
  }
  v21 = (void *)v20;
  v22 = objc_msgSend(*(id *)(a2 + 56), "sid");
  v23 = sub_1903D05C8();
  v25 = v24;

  objc_opt_self();
  v26 = swift_dynamicCastObjCClass();
  if (v26)
  {
    v65 = v26;
    v68 = v25;
    objc_opt_self();
    v27 = swift_dynamicCastObjCClass();
    v28 = qword_1EE1BCFE8;
    v29 = a1;
    if (v27)
    {
      if (v28 != -1)
        swift_once();
      v30 = sub_1903D0340();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EE1BF740);
      swift_bridgeObjectRetain();
      v31 = sub_1903D0328();
      v32 = sub_1903D0940();
      if (os_log_type_enabled(v31, v32))
      {
        v63 = v23;
        v33 = (uint8_t *)swift_slowAlloc();
        v66 = v29;
        v34 = swift_slowAlloc();
        *(_QWORD *)&aBlock = v34;
        *(_DWORD *)v33 = 136315138;
        swift_bridgeObjectRetain();
        v76 = sub_18FCD5144(v63, v68, (uint64_t *)&aBlock);
        sub_1903D0ACC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_18FC92000, v31, v32, "[%s] ignoring car key message because it is the invite", v33, 0xCu);
        swift_arrayDestroy();
        v35 = v34;
        v29 = v66;
        MEMORY[0x19400D804](v35, -1, -1);
        MEMORY[0x19400D804](v33, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a6(1);
      swift_release();

    }
    else
    {
      if (v28 != -1)
        swift_once();
      v67 = v21;
      v42 = sub_1903D0340();
      __swift_project_value_buffer(v42, (uint64_t)qword_1EE1BF740);
      swift_bridgeObjectRetain_n();
      v43 = v29;
      v44 = sub_1903D0328();
      v45 = sub_1903D0940();
      v64 = v23;
      if (os_log_type_enabled(v44, v45))
      {
        v46 = swift_slowAlloc();
        v59 = (_QWORD *)swift_slowAlloc();
        v60 = swift_slowAlloc();
        *(_QWORD *)&aBlock = v60;
        *(_DWORD *)v46 = 136315394;
        swift_bridgeObjectRetain();
        v76 = sub_18FCD5144(v23, v68, (uint64_t *)&aBlock);
        sub_1903D0ACC();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v46 + 12) = 2112;
        v76 = v65;
        v61 = v43;
        v47 = v43;
        sub_1903D0ACC();
        *v59 = v65;

        v43 = v61;
        _os_log_impl(&dword_18FC92000, v44, v45, "[%s] Received message: %@", (uint8_t *)v46, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
        swift_arrayDestroy();
        MEMORY[0x19400D804](v59, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x19400D804](v60, -1, -1);
        MEMORY[0x19400D804](v46, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v48 = *(_QWORD *)(a2 + 16);
      swift_beginAccess();
      v49 = *(void **)(v48 + 72);
      v50 = *(id *)(v48 + 80);
      v51 = v49;
      v52 = objc_msgSend(v51, sel_targetDevice);
      if (v52)
      {
        v53 = v52;
        if ((objc_msgSend(v52, sel_respondsToSelector_, sel_carKeyHandleRecipientMessage_forInvitationIdentifier_completion_) & 1) != 0)
        {
          v62 = v43;
          v54 = objc_msgSend(v70, sel_shareIdentifier);
          sub_1903D05C8();

          v55 = swift_allocObject();
          swift_weakInit();
          v56 = (_QWORD *)swift_allocObject();
          v56[2] = v55;
          v56[3] = v64;
          v56[4] = v68;
          v56[5] = sub_18FE0BF90;
          v56[6] = v14;
          v56[7] = v67;
          swift_retain();
          swift_retain();
          v69 = v67;
          v57 = (void *)sub_1903D05A4();
          v74 = sub_18FE0BFDC;
          v75 = v56;
          *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
          *((_QWORD *)&aBlock + 1) = 1107296256;
          v72 = sub_18FD55778;
          v73 = &block_descriptor_33_1;
          v58 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          objc_msgSend(v53, sel_carKeyHandleRecipientMessage_forInvitationIdentifier_completion_, v65, v57, v58);
          _Block_release(v58);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_unknownObjectRelease();

        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();

          swift_unknownObjectRelease();
        }
      }
      else
      {
        swift_release();
        swift_release();
        __break(1u);
      }
    }
  }
  else
  {
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v36 = sub_1903D0340();
    __swift_project_value_buffer(v36, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain();
    v37 = sub_1903D0328();
    v38 = sub_1903D0940();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = v23;
      v41 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v41;
      *(_DWORD *)v39 = 136315138;
      swift_bridgeObjectRetain();
      v76 = sub_18FCD5144(v40, v25, (uint64_t *)&aBlock);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FC92000, v37, v38, "[%s] ignoring car key message because it is not a car key message", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v41, -1, -1);
      MEMORY[0x19400D804](v39, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a6(1);
    swift_release();

  }
}

uint64_t sub_18FE0BF64()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FE0BF90(void *a1, char a2)
{
  uint64_t v2;

  return sub_18FE09FFC(a1, a2, *(_BYTE **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(uint64_t (**)(uint64_t))(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_18FE0BFA0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_18FE0BFDC(void *a1)
{
  return sub_18FE0A33C(a1);
}

void sub_18FE0BFEC(char a1, void *a2)
{
  uint64_t v2;

  sub_18FE0B048(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_18FE0BFF4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

id sub_18FE0C020(id result, char a2)
{
  if (a2 != -1)
    return result;
  return result;
}

void sub_18FE0C034(id a1, char a2)
{
  if (a2 != -1)

}

id ProvisioningDevice.target.getter()
{
  uint64_t v0;
  id result;

  result = objc_msgSend(*(id *)(v0 + 8), sel_targetDevice);
  if (!result)
    __break(1u);
  return result;
}

void ProvisioningDevice.init(type:webService:)(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char v13;

  v5 = *a1;
  if (v5 != 5)
    goto LABEL_12;
  v6 = a2;
  v7 = objc_msgSend(v6, sel_targetDevice);
  if (v7)
  {
    v8 = objc_msgSend(v7, sel_deviceClass);
    swift_unknownObjectRelease();
    if (v8)
    {
      v9 = sub_1903D05C8();
      v11 = v10;

      v12 = v9 == 0x656E6F685069 && v11 == 0xE600000000000000;
      if (!v12 && (sub_1903D0ED4() & 1) == 0)
      {
        if (v9 == 1684099177 && v11 == 0xE400000000000000 || (sub_1903D0ED4() & 1) != 0)
        {
          swift_bridgeObjectRelease();

          LOBYTE(v5) = 2;
          goto LABEL_12;
        }
        if (v9 == 0x6863746157 && v11 == 0xE500000000000000 || (sub_1903D0ED4() & 1) != 0)
        {
          swift_bridgeObjectRelease();

          LOBYTE(v5) = 1;
          goto LABEL_12;
        }
        if (v9 == 6512973 && v11 == 0xE300000000000000 || (sub_1903D0ED4() & 1) != 0)
        {
          swift_bridgeObjectRelease();

          LOBYTE(v5) = 3;
          goto LABEL_12;
        }
        if (v9 == 0x447974696C616552 && v11 == 0xED00006563697665)
        {
          swift_bridgeObjectRelease();

        }
        else
        {
          v13 = sub_1903D0ED4();
          swift_bridgeObjectRelease();

          if ((v13 & 1) == 0)
            goto LABEL_11;
        }
        LOBYTE(v5) = 4;
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
    }

LABEL_11:
    LOBYTE(v5) = 0;
LABEL_12:
    *(_BYTE *)a3 = v5;
    *(_QWORD *)(a3 + 8) = a2;
    *(_QWORD *)(a3 + 16) = 0;
    return;
  }
  __break(1u);
}

BOOL static ProvisioningDevice.DeviceType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void ProvisioningDevice.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

id ProvisioningDevice.webService.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void *ProvisioningDevice.peerPaymentWebService.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void ProvisioningDevice.peerPaymentWebService.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*ProvisioningDevice.peerPaymentWebService.modify())()
{
  return nullsub_1;
}

id ProvisioningDevice.peerPaymentTarget.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_targetDevice);
}

BOOL static ProvisioningDevice.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
}

void __swiftcall ProvisioningDevice.passLibrary()(PKPassLibrary_optional *__return_ptr retstr)
{
  unsigned __int8 *v1;
  int v2;
  void *v3;
  id v4;
  void *v5;

  v2 = *v1;
  v3 = (void *)objc_opt_self();
  if (v2 == 1)
  {
    v4 = objc_msgSend(v3, sel_sharedInstanceWithRemoteLibrary);
    if (v4)
    {
      v5 = v4;
      if (objc_msgSend(v4, sel__hasRemoteLibrary))
        objc_msgSend(v5, sel__remoteLibrary);

    }
  }
  else
  {
    objc_msgSend(v3, sel_sharedInstance);
  }
}

BOOL sub_18FE0C4B8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
}

uint64_t ProvisioningDevice.DeviceType.hash(into:)()
{
  return sub_1903D0FA0();
}

uint64_t ProvisioningDevice.DeviceType.hashValue.getter()
{
  sub_1903D0F94();
  sub_1903D0FA0();
  return sub_1903D0FC4();
}

unint64_t sub_18FE0C53C()
{
  unint64_t result;

  result = qword_1EE1C0E30;
  if (!qword_1EE1C0E30)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for ProvisioningDevice.DeviceType, &type metadata for ProvisioningDevice.DeviceType);
    atomic_store(result, (unint64_t *)&qword_1EE1C0E30);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ProvisioningDevice(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for ProvisioningDevice(uint64_t a1)
{

}

uint64_t assignWithCopy for ProvisioningDevice(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  v7 = *(void **)(a1 + 16);
  v8 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for ProvisioningDevice(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;

  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for ProvisioningDevice(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProvisioningDevice(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProvisioningDevice()
{
  return &type metadata for ProvisioningDevice;
}

uint64_t storeEnumTagSinglePayload for ProvisioningDevice.DeviceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_18FE0C764 + 4 * byte_190440745[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_18FE0C798 + 4 * asc_190440740[v4]))();
}

uint64_t sub_18FE0C798(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FE0C7A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FE0C7A8);
  return result;
}

uint64_t sub_18FE0C7B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FE0C7BCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_18FE0C7C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FE0C7C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProvisioningDevice.DeviceType()
{
  return &type metadata for ProvisioningDevice.DeviceType;
}

PassKitCore::ProvisioningSEStorageAppletType_optional __swiftcall ProvisioningSEStorageAppletType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  PassKitCore::ProvisioningSEStorageAppletType_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1903D0EF8();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 9;
  switch(v3)
  {
    case 0:
      goto LABEL_11;
    case 1:
      v5 = 1;
      goto LABEL_11;
    case 2:
      v5 = 2;
      goto LABEL_11;
    case 3:
      v5 = 3;
      goto LABEL_11;
    case 4:
      v5 = 4;
      goto LABEL_11;
    case 5:
      v5 = 5;
      goto LABEL_11;
    case 6:
      v5 = 6;
      goto LABEL_11;
    case 7:
      v5 = 7;
      goto LABEL_11;
    case 8:
      v5 = 8;
LABEL_11:
      v6 = v5;
      break;
    case 9:
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    case 25:
      v6 = 25;
      break;
    case 26:
      v6 = 26;
      break;
    default:
      v6 = 27;
      break;
  }
  *v2 = v6;
  return result;
}

void sub_18FE0C934()
{
  __asm { BR              X10 }
}

uint64_t sub_18FE0C960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x1E0D89610];
  v2 = sub_1903D04A8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

uint64_t sub_18FE0CAC0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;

  v4 = sub_1903D04A8();
  v5 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(a1, v4);
  if ((_DWORD)result == *MEMORY[0x1E0D89590])
  {
    v7 = 0;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D89578])
  {
    v7 = 1;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D895F8])
  {
    v7 = 2;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D895A0])
  {
    v7 = 3;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D89580])
  {
    v7 = 4;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D89618])
  {
    v7 = 5;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D895A8])
  {
    v7 = 6;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D89588])
  {
    v7 = 7;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D895E0])
  {
    v7 = 8;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D895B0])
  {
    v7 = 9;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D895E8])
  {
    v7 = 10;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D89558])
  {
    v7 = 11;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D89550])
  {
    v7 = 12;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D89568])
  {
    v7 = 13;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D89560])
  {
    v7 = 14;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D895C0])
  {
    v7 = 15;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D895D0])
  {
    v7 = 16;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D895F0])
  {
    v7 = 17;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D89608])
  {
    v7 = 23;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D89598])
  {
    v7 = 24;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D895B8])
  {
    v7 = 18;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D895C8])
  {
    v7 = 19;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D895D8])
  {
    v7 = 20;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D89570])
  {
    v7 = 21;
  }
  else if ((_DWORD)result == *MEMORY[0x1E0D89600])
  {
    v7 = 22;
  }
  else
  {
    if ((_DWORD)result != *MEMORY[0x1E0D89610])
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    v7 = 26;
  }
  *a2 = v7;
  return result;
}

uint64_t ProvisioningSEStorageAppletType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18FE0CE1C + 4 * byte_190440866[*v0]))(0x6E6F677241, 0xE500000000000000);
}

uint64_t sub_18FE0CE1C()
{
  return 1852797513;
}

uint64_t sub_18FE0CE30()
{
  return 0x7265656E6F6950;
}

uint64_t sub_18FE0CE48()
{
  return 0x746962724FLL;
}

uint64_t sub_18FE0CE58()
{
  return 1969321292;
}

uint64_t sub_18FE0CE68()
{
  return 0x74697270736E7553;
}

uint64_t sub_18FE0CE84()
{
  return 0x6E6F6E6558;
}

uint64_t sub_18FE0CE94()
{
  return 1852794190;
}

uint64_t sub_18FE0CEA4()
{
  return 0x7369736F6E6548;
}

uint64_t sub_18FE0CEBC()
{
  return 0x6D75696C6548;
}

uint64_t sub_18FE0CED0()
{
  return 0x6E6F747079724BLL;
}

uint64_t sub_18FE0CEE8()
{
  return 0x656D6F485F415450;
}

uint64_t sub_18FE0CF00()
{
  return 0x7261435F415450;
}

uint64_t sub_18FE0CF18()
{
  return 4281424;
}

uint64_t sub_18FE0CF28()
{
  return 0x6F72696C41;
}

uint64_t sub_18FE0CF38()
{
  return 0x726F706E65766144;
}

uint64_t sub_18FE0CF58()
{
  return 0x6D7569646F53;
}

uint64_t sub_18FE0CF6C()
{
  return 0x6D75696874694CLL;
}

uint64_t sub_18FE0CF84()
{
  return 0x65726166694DLL;
}

uint64_t sub_18FE0CF98()
{
  return 0x6D6F6C616C53;
}

uint64_t sub_18FE0CFAC()
{
  return 0x6E616873696148;
}

uint64_t sub_18FE0CFC4()
{
  return 4412496;
}

uint64_t sub_18FE0CFD8()
{
  return 0x6F736E6F68706C41;
}

uint64_t sub_18FE0CFF0()
{
  return 0x727546746867694ELL;
}

uint64_t sub_18FE0D010()
{
  return 0x73616C7441;
}

uint64_t sub_18FE0D020()
{
  return 0x6E776F6E6B6E75;
}

unint64_t sub_18FE0D038()
{
  return 0xD000000000000011;
}

uint64_t sub_18FE0D054(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_18FD4DB20(*a1, *a2);
}

unint64_t sub_18FE0D064()
{
  unint64_t result;

  result = qword_1EE1C0E38;
  if (!qword_1EE1C0E38)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for ProvisioningSEStorageAppletType, &type metadata for ProvisioningSEStorageAppletType);
    atomic_store(result, (unint64_t *)&qword_1EE1C0E38);
  }
  return result;
}

uint64_t sub_18FE0D0A8()
{
  sub_1903D0F94();
  ProvisioningSEStorageAppletType.rawValue.getter();
  sub_1903D064C();
  swift_bridgeObjectRelease();
  return sub_1903D0FC4();
}

uint64_t sub_18FE0D10C()
{
  ProvisioningSEStorageAppletType.rawValue.getter();
  sub_1903D064C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FE0D15C()
{
  sub_1903D0F94();
  ProvisioningSEStorageAppletType.rawValue.getter();
  sub_1903D064C();
  swift_bridgeObjectRelease();
  return sub_1903D0FC4();
}

PassKitCore::ProvisioningSEStorageAppletType_optional sub_18FE0D1BC(Swift::String *a1)
{
  return ProvisioningSEStorageAppletType.init(rawValue:)(*a1);
}

uint64_t sub_18FE0D1C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ProvisioningSEStorageAppletType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ProvisioningSEStorageAppletType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE6)
    goto LABEL_17;
  if (a2 + 26 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 26) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 26;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 26;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 26;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1B;
  v8 = v6 - 27;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ProvisioningSEStorageAppletType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 26 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 26) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE5)
    return ((uint64_t (*)(void))((char *)&loc_18FE0D2C8 + 4 * byte_190440886[v4]))();
  *a1 = a2 + 26;
  return ((uint64_t (*)(void))((char *)sub_18FE0D2FC + 4 * byte_190440881[v4]))();
}

uint64_t sub_18FE0D2FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FE0D304(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FE0D30CLL);
  return result;
}

uint64_t sub_18FE0D318(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FE0D320);
  *(_BYTE *)result = a2 + 26;
  return result;
}

uint64_t sub_18FE0D324(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FE0D32C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProvisioningSEStorageAppletType()
{
  return &type metadata for ProvisioningSEStorageAppletType;
}

PKProvisioningRequirementsContainer __swiftcall PKProvisioningRequirementsContainer.init(requirements:)(Swift::OpaquePointer requirements)
{
  objc_class *v2;
  char *v3;
  char *v4;
  id v5;
  objc_class *v6;
  void *v7;
  objc_class *v8;
  PKProvisioningRequirementsContainer result;
  objc_super v10;

  v2 = (objc_class *)type metadata accessor for ProvisioningRequirementsContainer();
  v3 = (char *)objc_allocWithZone(v2);
  v4 = &v3[OBJC_IVAR____PKProvisioningRequirementsContainer_provisioningSID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(Swift::OpaquePointer *)&v3[OBJC_IVAR____PKProvisioningRequirementsContainer_requirements] = requirements;
  v10.receiver = v3;
  v10.super_class = v2;
  v5 = objc_msgSendSuper2(&v10, sel_init);
  v6 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContainer_, v5);

  v8 = v6;
  result._container = v7;
  result.super.isa = v8;
  return result;
}

uint64_t PKProvisioningRequirementsContainer.requirements.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  char *v4;

  v1 = objc_msgSend(v0, sel_container);
  sub_1903D0B08();
  swift_unknownObjectRelease();
  type metadata accessor for ProvisioningRequirementsContainer();
  if (!swift_dynamicCast())
    return MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)&v4[OBJC_IVAR____PKProvisioningRequirementsContainer_requirements];
  swift_bridgeObjectRetain();

  return v2;
}

uint64_t ProvisioningRequirementsContainer.requirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FE0D504()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____PKProvisioningRequirementsContainer_provisioningSID);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_18FE0D5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____PKProvisioningRequirementsContainer_provisioningSID);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FE0D62C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____PKProvisioningRequirementsContainer_provisioningSID);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_18FE0D694())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

id ProvisioningRequirementsContainer.__allocating_init(requirements:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  objc_super v6;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = &v3[OBJC_IVAR____PKProvisioningRequirementsContainer_provisioningSID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____PKProvisioningRequirementsContainer_requirements] = a1;
  v6.receiver = v3;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for ProvisioningRequirementsContainer()
{
  return objc_opt_self();
}

id ProvisioningRequirementsContainer.init(requirements:)(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_super v4;

  v2 = &v1[OBJC_IVAR____PKProvisioningRequirementsContainer_provisioningSID];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____PKProvisioningRequirementsContainer_requirements] = a1;
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ProvisioningRequirementsContainer();
  return objc_msgSendSuper2(&v4, sel_init);
}

id sub_18FE0D7A0(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  char *v11;
  char *v12;
  objc_super v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____PKProvisioningRequirementsContainer_requirements);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_18FD80350(0, v2, 0);
    v4 = 0;
    v3 = v15;
    v5 = *(_QWORD *)(v15 + 16);
    do
    {
      v6 = *(_BYTE *)(v1 + v4 + 32);
      v15 = v3;
      v7 = *(_QWORD *)(v3 + 24);
      if (v5 + v4 >= v7 >> 1)
      {
        sub_18FD80350(v7 > 1, v5 + v4 + 1, 1);
        v3 = v15;
      }
      *(_QWORD *)(v3 + 16) = v5 + v4 + 1;
      *(_BYTE *)(v3 + v5 + v4++ + 32) = v6 & 0x7F;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
  }
  v8 = swift_bridgeObjectRetain();
  v9 = sub_18FE0E9B8(v8, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (objc_class *)type metadata accessor for ProvisioningRequirementsContainer();
  v11 = (char *)objc_allocWithZone(v10);
  v12 = &v11[OBJC_IVAR____PKProvisioningRequirementsContainer_provisioningSID];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____PKProvisioningRequirementsContainer_requirements] = v9;
  v14.receiver = v11;
  v14.super_class = v10;
  return objc_msgSendSuper2(&v14, sel_init);
}

uint64_t sub_18FE0D950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____PKProvisioningRequirementsContainer_requirements) + 16);
  if (!v1)
    return 0;
  swift_bridgeObjectRetain();
  v2 = 0;
  while (ProvisioningRequirement.RequirementType.rawValue.getter() != 0xD000000000000011
       || v3 != 0x8000000190457280)
  {
    v4 = sub_1903D0ED4();
    swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
      goto LABEL_14;
    if (ProvisioningRequirement.RequirementType.rawValue.getter() == 0xD000000000000029 && v5 == 0x80000001904572A0)
      break;
    v6 = sub_1903D0ED4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      goto LABEL_14;
    if (v1 == ++v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  swift_bridgeObjectRelease();
  return 1;
}

id sub_18FE0DAF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  id result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_18FD77AFC(v0);
  swift_bridgeObjectRelease();
  v2 = sub_18FD6EE38(v1);
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    do
    {
      v5 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_62:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v39 = 6;
        return objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, v39, 5);
      }
      if (ProvisioningRequirement.RequirementType.rawValue.getter() == 0x75536E6F69676572
        && v6 == 0xEF646574726F7070)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
LABEL_55:
        v39 = 3;
        return objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, v39, 5);
      }
      v7 = sub_1903D0ED4();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_55;
      }
      ++v4;
    }
    while (v5 != v3);
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(v2 + 16);
    if (!v8)
      goto LABEL_51;
    swift_bridgeObjectRetain();
    v9 = 0;
    do
    {
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_65:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v39 = 10;
        return objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, v39, 5);
      }
      if (ProvisioningRequirement.RequirementType.rawValue.getter() == 0x746C756461 && v11 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v39 = 5;
        return objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, v39, 5);
      }
      v12 = sub_1903D0ED4();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease_n();
        v39 = 5;
        return objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, v39, 5);
      }
      ++v9;
    }
    while (v10 != v8);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v2 + 16);
    if (!v13)
      goto LABEL_51;
    swift_bridgeObjectRetain();
    v14 = 0;
    do
    {
      v15 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
LABEL_68:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v39 = 11;
        return objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, v39, 5);
      }
      if (ProvisioningRequirement.RequirementType.rawValue.getter() == 0x65646F6373736170
        && v16 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v39 = 9;
        return objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, v39, 5);
      }
      v17 = sub_1903D0ED4();
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
      {
        swift_bridgeObjectRelease_n();
        v39 = 9;
        return objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, v39, 5);
      }
      ++v14;
    }
    while (v15 != v13);
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(v2 + 16);
    if (!v18)
      goto LABEL_51;
    result = (id)swift_bridgeObjectRetain();
    v20 = 0;
    do
    {
      v21 = v20 + 1;
      if (__OFADD__(v20, 1))
      {
        __break(1u);
        goto LABEL_71;
      }
      if (ProvisioningRequirement.RequirementType.rawValue.getter() == 0x634164756F6C6369
        && v22 == 0xED0000746E756F63)
      {
        goto LABEL_62;
      }
      v23 = sub_1903D0ED4();
      result = (id)swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
      {
        swift_bridgeObjectRelease_n();
        v39 = 6;
        return objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, v39, 5);
      }
      ++v20;
    }
    while (v21 != v18);
    swift_bridgeObjectRelease();
    v24 = *(_QWORD *)(v2 + 16);
    if (!v24)
      goto LABEL_51;
    result = (id)swift_bridgeObjectRetain();
    v25 = 0;
    while (1)
    {
      v26 = v25 + 1;
      if (__OFADD__(v25, 1))
        break;
      if (ProvisioningRequirement.RequirementType.rawValue.getter() == 0x6E4974656C6C6177
        && v27 == 0xEF64656C6C617473)
      {
        goto LABEL_65;
      }
      v28 = sub_1903D0ED4();
      result = (id)swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
      {
        swift_bridgeObjectRelease_n();
        v39 = 10;
        return objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, v39, 5);
      }
      ++v25;
      if (v26 == v24)
      {
        swift_bridgeObjectRelease();
        v29 = *(_QWORD *)(v2 + 16);
        if (!v29)
          goto LABEL_51;
        result = (id)swift_bridgeObjectRetain();
        v30 = 0;
        while (1)
        {
          v31 = v30 + 1;
          if (__OFADD__(v30, 1))
            goto LABEL_72;
          if (ProvisioningRequirement.RequirementType.rawValue.getter() == 0xD000000000000011
            && v32 == 0x8000000190457280)
          {
            goto LABEL_68;
          }
          v33 = sub_1903D0ED4();
          result = (id)swift_bridgeObjectRelease();
          if ((v33 & 1) != 0)
          {
LABEL_69:
            swift_bridgeObjectRelease_n();
            v39 = 11;
            return objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, v39, 5);
          }
          ++v30;
          if (v31 == v29)
          {
            swift_bridgeObjectRelease();
            v34 = *(_QWORD *)(v2 + 16);
            if (!v34)
              goto LABEL_51;
            result = (id)swift_bridgeObjectRetain();
            v35 = 0;
            while (1)
            {
              v36 = v35 + 1;
              if (__OFADD__(v35, 1))
                goto LABEL_73;
              if (ProvisioningRequirement.RequirementType.rawValue.getter() == 0xD000000000000029
                && v37 == 0x80000001904572A0)
              {
                goto LABEL_68;
              }
              v38 = sub_1903D0ED4();
              result = (id)swift_bridgeObjectRelease();
              if ((v38 & 1) != 0)
                goto LABEL_69;
              ++v35;
              if (v36 == v34)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_52;
              }
            }
          }
        }
      }
    }
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
  }
  else
  {
LABEL_51:
    swift_bridgeObjectRelease();
LABEL_52:
    v39 = 1;
    return objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, v39, 5);
  }
  return result;
}

id ProvisioningRequirementsContainer.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ProvisioningRequirementsContainer.init(coder:)(a1);
}

id ProvisioningRequirementsContainer.init(coder:)(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  char *v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  void *v24;
  Swift::String v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_super v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[32];
  _BYTE v39[40];

  v2 = v1;
  v4 = &v2[OBJC_IVAR____PKProvisioningRequirementsContainer_provisioningSID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0E50);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_19043E310;
  v6 = sub_18FCDC600(0, (unint64_t *)&unk_1EE1C0DB0);
  *(_QWORD *)(v5 + 32) = v6;
  v7 = sub_18FCDC600(0, (unint64_t *)&unk_1EE1C0DA0);
  *(_QWORD *)(v5 + 40) = v7;
  v8 = v2;
  sub_1903D0A24();
  swift_bridgeObjectRelease();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19043E310;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v7;
  sub_1903D0A24();
  swift_bridgeObjectRelease();
  sub_18FE0EB94((uint64_t)v39, (uint64_t)&v35);
  if (!v37)
  {

LABEL_17:
    sub_18FCD92C8((uint64_t)&v35);
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BEFD0);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_18:
    sub_18FCD92C8((uint64_t)v38);
    sub_18FCD92C8((uint64_t)v39);

    swift_bridgeObjectRelease();
    type metadata accessor for ProvisioningRequirementsContainer();
    swift_deallocPartialClassInstance();
    return 0;
  }
  sub_18FE0EB94((uint64_t)v38, (uint64_t)&v35);
  if (!v37)
  {

    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v32 = v34;
  v10 = *(_QWORD *)(v34 + 16);
  if (v10)
  {
    v11 = (void **)(v34 + 40);
    v12 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v13 = (uint64_t)*(v11 - 1);
      v14 = *v11;
      swift_bridgeObjectRetain();
      v15._countAndFlagsBits = v13;
      v15._object = v14;
      ProvisioningRequirement.RequirementType.init(rawValue:)(v15);
      v16 = v35;
      if (v35 != 34)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_18FD51C18(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
        v18 = *((_QWORD *)v12 + 2);
        v17 = *((_QWORD *)v12 + 3);
        if (v18 >= v17 >> 1)
          v12 = sub_18FD51C18((char *)(v17 > 1), v18 + 1, 1, v12);
        *((_QWORD *)v12 + 2) = v18 + 1;
        v12[v18 + 32] = v16 | 0x80;
      }
      v11 += 2;
      --v10;
    }
    while (v10);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v32 + 16);
  if (v21)
  {
    v22 = (void **)(v32 + 40);
    do
    {
      v23 = (uint64_t)*(v22 - 1);
      v24 = *v22;
      swift_bridgeObjectRetain();
      v25._countAndFlagsBits = v23;
      v25._object = v24;
      ProvisioningRequirement.RequirementType.init(rawValue:)(v25);
      v26 = v35;
      if (v35 != 34)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_18FD51C18(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
        v28 = *((_QWORD *)v12 + 2);
        v27 = *((_QWORD *)v12 + 3);
        if (v28 >= v27 >> 1)
          v12 = sub_18FD51C18((char *)(v27 > 1), v28 + 1, 1, v12);
        *((_QWORD *)v12 + 2) = v28 + 1;
        v12[v28 + 32] = v26;
      }
      v22 += 2;
      --v21;
    }
    while (v21);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[OBJC_IVAR____PKProvisioningRequirementsContainer_requirements] = v12;
  v29 = (void *)sub_1903D0A18();
  sub_18FCD92C8((uint64_t)v38);
  sub_18FCD92C8((uint64_t)v39);
  if (v29)
  {
    v35 = 0;
    v36 = 0;
    sub_1903D05BC();

    v30 = v35;
    v31 = v36;
  }
  else
  {
    v30 = 0;
    v31 = 0;
  }
  swift_beginAccess();
  *(_QWORD *)v4 = v30;
  *((_QWORD *)v4 + 1) = v31;

  swift_bridgeObjectRelease();
  v33.receiver = v8;
  v33.super_class = (Class)type metadata accessor for ProvisioningRequirementsContainer();
  v19 = objc_msgSendSuper2(&v33, sel_init);

  return v19;
}

void sub_18FE0E674(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v3 = swift_bridgeObjectRetain();
  v4 = sub_18FD77AFC(v3);
  swift_bridgeObjectRelease();
  sub_18FD6EEF8(v4);
  swift_bridgeObjectRelease();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_18FE0EBDC(v5);
  swift_bridgeObjectRelease();
  sub_18FD6EEF8(v6);
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1903D0778();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1903D05A4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  v9 = (void *)sub_1903D0778();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1903D05A4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  v11 = v1 + OBJC_IVAR____PKProvisioningRequirementsContainer_provisioningSID;
  swift_beginAccess();
  if (*(_QWORD *)(v11 + 8))
  {
    swift_bridgeObjectRetain();
    v12 = sub_1903D05A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v13 = (void *)sub_1903D05A4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v12, v13);
  swift_unknownObjectRelease();

}

uint64_t static ProvisioningRequirementsContainer.supportsSecureCoding.getter()
{
  return 1;
}

id ProvisioningRequirementsContainer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ProvisioningRequirementsContainer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ProvisioningRequirementsContainer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProvisioningRequirementsContainer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18FE0E9B8(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v20 = result + 32;
  v5 = MEMORY[0x1E0DEE9D8];
  v18 = *(_QWORD *)(result + 16);
  do
  {
    if (v4 <= v2)
      v6 = v2;
    else
      v6 = v4;
    v21 = v5;
    v19 = v6;
    while (1)
    {
      if (v4 == v6)
      {
        __break(1u);
        return result;
      }
      v7 = *(_BYTE *)(v20 + v4++);
      v8 = *(_QWORD *)(a2 + 16);
      if (!v8)
        break;
      swift_bridgeObjectRetain();
      v9 = 0;
      while (1)
      {
        v10 = ProvisioningRequirement.RequirementType.rawValue.getter();
        v12 = v11;
        if (v10 == ProvisioningRequirement.RequirementType.rawValue.getter() && v12 == v13)
          break;
        v15 = sub_1903D0ED4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) != 0)
          goto LABEL_18;
        if (v8 == ++v9)
        {
          swift_bridgeObjectRelease();
          v2 = v18;
          v5 = v21;
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_18:
      result = swift_bridgeObjectRelease();
      v2 = v18;
      v6 = v19;
      v5 = v21;
      if (v4 == v18)
        return v5;
    }
LABEL_20:
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_18FD8036C(0, *(_QWORD *)(v5 + 16) + 1, 1);
    v17 = *(_QWORD *)(v5 + 16);
    v16 = *(_QWORD *)(v5 + 24);
    if (v17 >= v16 >> 1)
      result = sub_18FD8036C(v16 > 1, v17 + 1, 1);
    *(_QWORD *)(v5 + 16) = v17 + 1;
    *(_BYTE *)(v5 + v17 + 32) = v7;
  }
  while (v4 != v2);
  return v5;
}

uint64_t sub_18FE0EB94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1C06E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FE0EBDC(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;

  v1 = 0;
  v2 = *(_QWORD *)(result + 16);
  v3 = result + 32;
  v4 = MEMORY[0x1E0DEE9D8];
LABEL_2:
  if (v1 <= v2)
    v5 = v2;
  else
    v5 = v1;
  while (1)
  {
    if (v2 == v1)
      return v4;
    if (v5 == v1)
      break;
    v6 = *(char *)(v3 + v1++);
    if ((v6 & 0x80000000) == 0)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_18FD8036C(0, *(_QWORD *)(v4 + 16) + 1, 1);
      v8 = *(_QWORD *)(v4 + 16);
      v7 = *(_QWORD *)(v4 + 24);
      if (v8 >= v7 >> 1)
        result = sub_18FD8036C(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v4 + 16) = v8 + 1;
      *(_BYTE *)(v4 + v8 + 32) = v6;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_18FE0ECC8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____PKProvisioningRequirementsContainer_provisioningSID);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for ProvisioningRequirementsContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningRequirementsContainer.provisioningSID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ProvisioningRequirementsContainer.provisioningSID.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ProvisioningRequirementsContainer.provisioningSID.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ProvisioningRequirementsContainer.__allocating_init(requirements:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of ProvisioningRequirementsContainer.container(minus:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ProvisioningRequirementsContainer.containsNotManagedAccount()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ProvisioningRequirementsContainer.displayableError()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ProvisioningRequirementsContainer.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ProvisioningRequirementsContainer.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t sub_18FE0EE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1903D085C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1903D0850();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_18FDF4E6C(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1903D0814();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_18FE0EF44(uint64_t a1, char a2)
{
  sub_1903D0F94();
  __asm { BR              X10 }
}

uint64_t sub_18FE0EF98()
{
  sub_1903D064C();
  swift_bridgeObjectRelease();
  return sub_1903D0FC4();
}

void sub_18FE0F020(uint64_t a1, char a2)
{
  sub_1903D0F94();
  __asm { BR              X10 }
}

uint64_t sub_18FE0F078()
{
  sub_1903D064C();
  swift_bridgeObjectRelease();
  return sub_1903D0FC4();
}

void sub_18FE0F10C(uint64_t a1, char a2)
{
  sub_1903D0F94();
  __asm { BR              X10 }
}

uint64_t sub_18FE0F15C()
{
  sub_1903D064C();
  swift_bridgeObjectRelease();
  return sub_1903D0FC4();
}

void sub_18FE0F1F0(uint64_t a1, char a2)
{
  sub_1903D0F94();
  __asm { BR              X10 }
}

uint64_t sub_18FE0F248()
{
  sub_1903D064C();
  swift_bridgeObjectRelease();
  return sub_1903D0FC4();
}

uint64_t sub_18FE0F2CC()
{
  sub_1903D0F94();
  sub_1903D064C();
  swift_bridgeObjectRelease();
  return sub_1903D0FC4();
}

void sub_18FE0F370(uint64_t a1, char a2)
{
  sub_1903D0F94();
  __asm { BR              X10 }
}

uint64_t sub_18FE0F3BC()
{
  sub_1903D064C();
  swift_bridgeObjectRelease();
  return sub_1903D0FC4();
}

void sub_18FE0F498(uint64_t a1, char a2)
{
  sub_1903D0F94();
  __asm { BR              X10 }
}

uint64_t sub_18FE0F4EC()
{
  sub_1903D064C();
  swift_bridgeObjectRelease();
  return sub_1903D0FC4();
}

void sub_18FE0F570(uint64_t a1, char a2)
{
  sub_1903D0F94();
  __asm { BR              X10 }
}

uint64_t sub_18FE0F5C8()
{
  sub_1903D064C();
  swift_bridgeObjectRelease();
  return sub_1903D0FC4();
}

uint64_t NearbyPeerPaymentReceiverResponseMetadata.__allocating_init(nonce:nearbyMetadata:appearanceData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  uint64_t v6;
  _QWORD *v12;

  objc_allocWithZone(v5);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_18FE0F744;
  return NearbyPeerPaymentReceiverResponseMetadata.init(nonce:nearbyMetadata:appearanceData:)(a1, a2, a3, a4, a5);
}

uint64_t sub_18FE0F744(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t NearbyPeerPaymentReceiverResponseMetadata.serializedData.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_getObjectType();
  sub_1903CFF14();
  swift_allocObject();
  sub_1903CFF08();
  sub_18FE12080((unint64_t *)&unk_1EE1C0600, v0, (uint64_t (*)(uint64_t))type metadata accessor for NearbyPeerPaymentReceiverResponseMetadata, (uint64_t)&protocol conformance descriptor for NearbyPeerPaymentReceiverResponseMetadata);
  v1 = sub_1903CFEFC();
  swift_release();
  return v1;
}

uint64_t sub_18FE0F89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1903D085C();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1903D0850();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_18FDF4E6C(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1903D0814();
    swift_unknownObjectRelease();
  }
LABEL_5:
  type metadata accessor for NearbyPeerPaymentReceiverResponseMetadata();
  return swift_task_create();
}

uint64_t NearbyPeerPaymentReceiverResponseMetadata.encryptedData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_encryptedData);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NearbyPeerPaymentReceiverResponseMetadata.encryptionVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_encryptionVersion);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NearbyPeerPaymentReceiverResponseMetadata.publicKeyHash.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_publicKeyHash);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NearbyPeerPaymentReceiverResponseMetadata.ephemeralPublicKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_ephemeralPublicKey);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NearbyPeerPaymentReceiverResponseMetadata.senderAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_senderAddress);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NearbyPeerPaymentReceiverResponseMetadata.receiverAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_receiverAddress);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NearbyPeerPaymentReceiverResponseMetadata.receiverImageData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_receiverImageData);
  sub_18FD4D5EC(v1, *(_QWORD *)(v0 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_receiverImageData + 8));
  return v1;
}

uint64_t NearbyPeerPaymentReceiverResponseMetadata.contactAddressType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_contactAddressType);
}

uint64_t NearbyPeerPaymentReceiverResponseMetadata.init(nonce:nearbyMetadata:appearanceData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[65] = v5;
  v6[63] = a4;
  v6[64] = a5;
  v6[61] = a2;
  v6[62] = a3;
  v6[60] = a1;
  v6[66] = swift_getObjectType();
  v6[67] = type metadata accessor for NearbyPeerPaymentSenderRequestMetadata();
  v6[68] = swift_task_alloc();
  v6[69] = swift_task_alloc();
  return swift_task_switch();
}

id sub_18FE0FC0C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  unsigned __int8 v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id result;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  void *v30;
  void *v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37;
  const __CFString *v38;
  __CFString *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id *v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  void *v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  void *v82;
  void *v83;
  id v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  id v92;
  uint64_t v93;
  void *v94;
  void *v95;
  void *v96;
  uint64_t v97;
  unint64_t v98;
  void *v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110[2];

  v110[1] = *MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 520);
  sub_1903CFECC();
  swift_allocObject();
  v2 = v1;
  sub_1903CFEC0();
  sub_18FE12080(&qword_1EE1C06B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for NearbyPeerPaymentSenderRequestMetadata, (uint64_t)&protocol conformance descriptor for NearbyPeerPaymentSenderRequestMetadata);
  sub_1903CFEB4();
  swift_release();
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  *(_QWORD *)(v0 + 560) = v3;
  v4 = objc_msgSend(v3, sel_account);
  *(_QWORD *)(v0 + 568) = v4;
  *(_QWORD *)(v0 + 576) = objc_msgSend(v3, sel_preferences);
  if (!v4)
    goto LABEL_9;
  v5 = objc_msgSend(v4, sel_supportsDeviceTap);
  v6 = objc_msgSend(v4, sel_paymentModeIdentifiers);
  if (!v6)
  {
    __break(1u);
LABEL_35:
    result = (id)swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_36;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_deviceTap);

  if (!v8)
  {
    if ((v5 & 1) != 0)
    {
      if (v3)
      {
        *(_QWORD *)(v0 + 56) = v0 + 464;
        *(_QWORD *)(v0 + 16) = v0;
        *(_QWORD *)(v0 + 24) = sub_18FE10900;
        *(_QWORD *)(v0 + 400) = swift_continuation_init();
        *(_QWORD *)(v0 + 368) = MEMORY[0x1E0C809B0];
        *(_QWORD *)(v0 + 376) = 0x40000000;
        *(_QWORD *)(v0 + 384) = sub_18FE120C0;
        *(_QWORD *)(v0 + 392) = &block_descriptor_39;
        objc_msgSend(v3, sel_updateAccountWithCompletion_, v0 + 368);
        return (id)swift_continuation_await();
      }
      v101 = *(void **)(v0 + 520);

      swift_bridgeObjectRelease();
      v4 = 0;
      goto LABEL_10;
    }
LABEL_9:
    v24 = *(void **)(v0 + 520);
    swift_bridgeObjectRelease();

LABEL_10:
    if (qword_1EE1BCF78 != -1)
      swift_once();
    v25 = sub_1903D0340();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EE1BF5F0);
    v26 = sub_1903D0328();
    v27 = sub_1903D0934();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_18FC92000, v26, v27, "NearbyPeerPayment: receiver data encryption failed, missing payment mode identifier", v28, 2u);
      MEMORY[0x19400D804](v28, -1, -1);
    }
    v29 = *(void **)(v0 + 576);
    v30 = *(void **)(v0 + 560);
    v107 = *(_QWORD *)(v0 + 552);
    v32 = *(_QWORD *)(v0 + 504);
    v31 = *(void **)(v0 + 512);
    v33 = *(_QWORD *)(v0 + 496);

    sub_18FCD50A4();
    swift_allocError();
    *v34 = 0;
    swift_willThrow();

    sub_18FCD5938(v33, v32);
    sub_18FDDE9C4(v107);

LABEL_32:
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = sub_1903D05C8();
  v11 = v10;

  *(_QWORD *)(v0 + 584) = v4;
  v12 = *(_QWORD *)(v0 + 552);
  v13 = *(void **)(v0 + 512);
  *(_QWORD *)(v0 + 592) = *(_QWORD *)(v12 + 56);
  *(_QWORD *)(v0 + 600) = *(_QWORD *)(v12 + 64);
  swift_bridgeObjectRetain();
  v106 = v11;
  swift_bridgeObjectRetain();
  v14 = objc_msgSend(v13, sel_displayName);
  v15 = sub_1903D05C8();
  v17 = v16;

  *(_QWORD *)(v0 + 608) = v15;
  v104 = v17;
  *(_QWORD *)(v0 + 616) = v17;
  v18 = _s11PassKitCore17NearbyPeerPaymentO15amountFormatterSo08NSNumberH0CvgZ_0();
  *(_QWORD *)(v0 + 624) = v18;
  v19 = (void *)sub_1903D0A6C();
  v20 = objc_msgSend(v18, sel_stringForObjectValue_, v19);

  if (v20)
  {
    v102 = sub_1903D05C8();
    v22 = v21;

  }
  else
  {
    v102 = 0;
    v22 = 0;
  }
  v35 = *(_QWORD *)(v0 + 552);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BF8C0);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 632) = inited;
  *(_OWORD *)(inited + 16) = xmmword_190440C40;
  *(_QWORD *)(inited + 32) = 0xD000000000000015;
  *(_QWORD *)(inited + 40) = 0x800000019045D900;
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 56) = v106;
  *(_QWORD *)(inited + 64) = 0xD000000000000015;
  *(_QWORD *)(inited + 72) = 0x80000001904578A0;
  v37 = *(_QWORD *)(v35 + 48);
  *(_QWORD *)(inited + 80) = *(_QWORD *)(v35 + 40);
  *(_QWORD *)(inited + 88) = v37;
  *(_QWORD *)(inited + 96) = 0xD000000000000014;
  *(_QWORD *)(inited + 104) = 0x800000019045D920;
  swift_bridgeObjectRetain();
  v38 = (id)PKPeerPaymentContactAddressTypeToString(1);
  if (!v38)
    goto LABEL_35;
  v39 = (__CFString *)v38;
  v40 = *(_QWORD *)(v0 + 552);
  v41 = *(_QWORD *)(v0 + 544);
  v42 = sub_1903D05C8();
  v44 = v43;

  *(_QWORD *)(inited + 112) = v42;
  *(_QWORD *)(inited + 120) = v44;
  *(_QWORD *)(inited + 128) = 0xD000000000000010;
  *(_QWORD *)(inited + 136) = 0x800000019045D940;
  *(_QWORD *)(inited + 144) = v15;
  *(_QWORD *)(inited + 152) = v104;
  *(_QWORD *)(inited + 160) = 0x746E756F6D61;
  *(_QWORD *)(inited + 168) = 0xE600000000000000;
  sub_18FDEF4B4(v40, v41);
  if (v22)
  {
    swift_bridgeObjectRetain();
    v45 = v102;
  }
  else
  {
    v46 = *(_QWORD *)(v0 + 544);
    v47 = *(_DWORD *)(v46 + 16);
    v103 = *(_OWORD *)(v46 + 20);
    v48 = objc_allocWithZone(MEMORY[0x1E0CB3598]);
    swift_bridgeObjectRetain();
    *(_DWORD *)(v0 + 696) = v47;
    *(_OWORD *)(v0 + 700) = v103;
    v49 = objc_msgSend(v48, sel_initWithDecimal_, v0 + 696);
    v50 = objc_msgSend(v49, sel_stringValue);

    v45 = sub_1903D05C8();
    v22 = v51;

  }
  v52 = *(uint64_t **)(v0 + 552);
  v53 = *(_QWORD *)(v0 + 544);
  v55 = *(_QWORD *)(v0 + 480);
  v54 = *(_QWORD *)(v0 + 488);
  *(_QWORD *)(inited + 176) = v45;
  *(_QWORD *)(inited + 184) = v22;
  sub_18FDDE9C4(v53);
  *(_QWORD *)(inited + 192) = 0x79636E6572727563;
  *(_QWORD *)(inited + 200) = 0xE800000000000000;
  v56 = *v52;
  v57 = v52[1];
  *(_QWORD *)(inited + 208) = v56;
  *(_QWORD *)(inited + 216) = v57;
  strcpy((char *)(inited + 224), "recipientNonce");
  *(_BYTE *)(inited + 239) = -18;
  *(_QWORD *)(inited + 240) = v55;
  *(_QWORD *)(inited + 248) = v54;
  *(_QWORD *)(inited + 256) = 0x6E49746E65696C63;
  *(_QWORD *)(inited + 264) = 0xEA00000000006F66;
  v58 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  result = objc_msgSend(v58, sel_clientInfoHTTPHeader);
  if (result)
  {
    v59 = result;
    v60 = sub_1903D05C8();
    v62 = v61;

    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 272) = v60;
    *(_QWORD *)(inited + 280) = v62;
    *(_QWORD *)(v0 + 640) = sub_18FD4FACC(inited);
    if (qword_1EE1BCF78 != -1)
      swift_once();
    v63 = (id *)(v0 + 424);
    v64 = sub_1903D0340();
    *(_QWORD *)(v0 + 648) = __swift_project_value_buffer(v64, (uint64_t)qword_1EE1BF5F0);
    swift_bridgeObjectRetain_n();
    v65 = sub_1903D0328();
    v66 = sub_1903D0940();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      v68 = swift_slowAlloc();
      v110[0] = v68;
      *(_DWORD *)v67 = 136315138;
      swift_bridgeObjectRetain();
      v69 = sub_1903D04F0();
      v71 = v70;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 472) = sub_18FCD5144(v69, v71, v110);
      v63 = (id *)(v0 + 424);
      sub_1903D0ACC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FC92000, v65, v66, "NearbyPeerPayment: encrypting receiver data: %s", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v68, -1, -1);
      MEMORY[0x19400D804](v67, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v72 = (void *)objc_opt_self();
    v73 = (void *)sub_1903D04CC();
    *v63 = 0;
    v74 = objc_msgSend(v72, sel_dataWithJSONObject_options_error_, v73, 1, v63);

    v75 = *v63;
    if (v74)
    {
      v76 = *(_QWORD *)(v0 + 560);
      v77 = sub_1903D01B4();
      v79 = v78;

      *(_QWORD *)(v0 + 656) = v77;
      *(_QWORD *)(v0 + 664) = v79;
      v80 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 672) = v80;
      v80[2] = v76;
      v80[3] = v77;
      v80[4] = v79;
      v81 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 680) = v81;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BE630);
      *v81 = v0;
      v81[1] = sub_18FE11474;
      return (id)sub_1903D0F04();
    }
    v82 = v75;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v83 = (void *)sub_1903D0130();

    swift_willThrow();
    v84 = v83;
    swift_bridgeObjectRetain();
    v85 = v83;
    v86 = sub_1903D0328();
    v87 = sub_1903D0940();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = swift_slowAlloc();
      v105 = (_QWORD *)swift_slowAlloc();
      v108 = swift_slowAlloc();
      v110[0] = v108;
      *(_DWORD *)v88 = 136315394;
      swift_bridgeObjectRetain();
      v89 = sub_1903D04F0();
      v91 = v90;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 432) = sub_18FCD5144(v89, v91, v110);
      sub_1903D0ACC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v88 + 12) = 2112;
      v92 = v83;
      v93 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 440) = v93;
      sub_1903D0ACC();
      *v105 = v93;

      _os_log_impl(&dword_18FC92000, v86, v87, "NearbyPeerPayment: error serializing dictionary representation of receiver data: %s error: %@", (uint8_t *)v88, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v105, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v108, -1, -1);
      MEMORY[0x19400D804](v88, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v94 = *(void **)(v0 + 624);
    v109 = *(void **)(v0 + 584);
    v95 = *(void **)(v0 + 576);
    v96 = *(void **)(v0 + 560);
    v97 = *(_QWORD *)(v0 + 552);
    v98 = *(_QWORD *)(v0 + 504);
    v99 = *(void **)(v0 + 512);
    v100 = *(_QWORD *)(v0 + 496);
    swift_willThrow();

    sub_18FCD5938(v100, v98);
    sub_18FDDE9C4(v97);

    goto LABEL_32;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_18FE10900()
{
  return swift_task_switch();
}

id sub_18FE10978()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  id result;
  uint64_t v34;
  uint64_t inited;
  uint64_t v36;
  const __CFString *v37;
  __CFString *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id *v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  void *v71;
  void *v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  void *v81;
  void *v82;
  id v83;
  id v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  id v91;
  uint64_t v92;
  void *v93;
  void *v94;
  void *v95;
  uint64_t v96;
  unint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106[2];

  v106[1] = *MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 568);
  v2 = *(void **)(v0 + 464);

  if (!v2)
    goto LABEL_6;
  v3 = objc_msgSend(v2, sel_paymentModeIdentifiers);
  if (!v3)
  {
    __break(1u);
LABEL_30:
    result = (id)swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_31;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, sel_deviceTap);

  if (!v5)
  {
LABEL_6:
    v20 = *(void **)(v0 + 520);
    swift_bridgeObjectRelease();

    if (qword_1EE1BCF78 != -1)
      swift_once();
    v21 = sub_1903D0340();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EE1BF5F0);
    v22 = sub_1903D0328();
    v23 = sub_1903D0934();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_18FC92000, v22, v23, "NearbyPeerPayment: receiver data encryption failed, missing payment mode identifier", v24, 2u);
      MEMORY[0x19400D804](v24, -1, -1);
    }
    v25 = *(void **)(v0 + 576);
    v26 = *(void **)(v0 + 560);
    v27 = *(_QWORD *)(v0 + 552);
    v29 = *(_QWORD *)(v0 + 504);
    v28 = *(void **)(v0 + 512);
    v30 = *(_QWORD *)(v0 + 496);

    sub_18FCD50A4();
    swift_allocError();
    *v31 = 0;
    swift_willThrow();

    sub_18FCD5938(v30, v29);
    v32 = v27;
    goto LABEL_11;
  }
  v6 = sub_1903D05C8();
  v8 = v7;

  *(_QWORD *)(v0 + 584) = v2;
  v9 = *(_QWORD *)(v0 + 552);
  v10 = *(void **)(v0 + 512);
  *(_QWORD *)(v0 + 592) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v0 + 600) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  v104 = v8;
  swift_bridgeObjectRetain();
  v11 = objc_msgSend(v10, sel_displayName);
  v12 = sub_1903D05C8();
  v14 = v13;

  *(_QWORD *)(v0 + 608) = v12;
  v102 = v14;
  *(_QWORD *)(v0 + 616) = v14;
  v15 = _s11PassKitCore17NearbyPeerPaymentO15amountFormatterSo08NSNumberH0CvgZ_0();
  *(_QWORD *)(v0 + 624) = v15;
  v16 = (void *)sub_1903D0A6C();
  v17 = objc_msgSend(v15, sel_stringForObjectValue_, v16);

  if (v17)
  {
    v100 = sub_1903D05C8();
    v19 = v18;

  }
  else
  {
    v100 = 0;
    v19 = 0;
  }
  v34 = *(_QWORD *)(v0 + 552);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BF8C0);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 632) = inited;
  *(_OWORD *)(inited + 16) = xmmword_190440C40;
  *(_QWORD *)(inited + 32) = 0xD000000000000015;
  *(_QWORD *)(inited + 40) = 0x800000019045D900;
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v104;
  *(_QWORD *)(inited + 64) = 0xD000000000000015;
  *(_QWORD *)(inited + 72) = 0x80000001904578A0;
  v36 = *(_QWORD *)(v34 + 48);
  *(_QWORD *)(inited + 80) = *(_QWORD *)(v34 + 40);
  *(_QWORD *)(inited + 88) = v36;
  *(_QWORD *)(inited + 96) = 0xD000000000000014;
  *(_QWORD *)(inited + 104) = 0x800000019045D920;
  swift_bridgeObjectRetain();
  v37 = (id)PKPeerPaymentContactAddressTypeToString(1);
  if (!v37)
    goto LABEL_30;
  v38 = (__CFString *)v37;
  v39 = *(_QWORD *)(v0 + 552);
  v40 = *(_QWORD *)(v0 + 544);
  v41 = sub_1903D05C8();
  v43 = v42;

  *(_QWORD *)(inited + 112) = v41;
  *(_QWORD *)(inited + 120) = v43;
  *(_QWORD *)(inited + 128) = 0xD000000000000010;
  *(_QWORD *)(inited + 136) = 0x800000019045D940;
  *(_QWORD *)(inited + 144) = v12;
  *(_QWORD *)(inited + 152) = v102;
  *(_QWORD *)(inited + 160) = 0x746E756F6D61;
  *(_QWORD *)(inited + 168) = 0xE600000000000000;
  sub_18FDEF4B4(v39, v40);
  if (v19)
  {
    swift_bridgeObjectRetain();
    v44 = v100;
  }
  else
  {
    v45 = *(_QWORD *)(v0 + 544);
    v46 = *(_DWORD *)(v45 + 16);
    v101 = *(_OWORD *)(v45 + 20);
    v47 = objc_allocWithZone(MEMORY[0x1E0CB3598]);
    swift_bridgeObjectRetain();
    *(_DWORD *)(v0 + 696) = v46;
    *(_OWORD *)(v0 + 700) = v101;
    v48 = objc_msgSend(v47, sel_initWithDecimal_, v0 + 696);
    v49 = objc_msgSend(v48, sel_stringValue);

    v44 = sub_1903D05C8();
    v19 = v50;

  }
  v51 = *(uint64_t **)(v0 + 552);
  v52 = *(_QWORD *)(v0 + 544);
  v54 = *(_QWORD *)(v0 + 480);
  v53 = *(_QWORD *)(v0 + 488);
  *(_QWORD *)(inited + 176) = v44;
  *(_QWORD *)(inited + 184) = v19;
  sub_18FDDE9C4(v52);
  *(_QWORD *)(inited + 192) = 0x79636E6572727563;
  *(_QWORD *)(inited + 200) = 0xE800000000000000;
  v55 = *v51;
  v56 = v51[1];
  *(_QWORD *)(inited + 208) = v55;
  *(_QWORD *)(inited + 216) = v56;
  strcpy((char *)(inited + 224), "recipientNonce");
  *(_BYTE *)(inited + 239) = -18;
  *(_QWORD *)(inited + 240) = v54;
  *(_QWORD *)(inited + 248) = v53;
  *(_QWORD *)(inited + 256) = 0x6E49746E65696C63;
  *(_QWORD *)(inited + 264) = 0xEA00000000006F66;
  v57 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  result = objc_msgSend(v57, sel_clientInfoHTTPHeader);
  if (result)
  {
    v58 = result;
    v59 = sub_1903D05C8();
    v61 = v60;

    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 272) = v59;
    *(_QWORD *)(inited + 280) = v61;
    *(_QWORD *)(v0 + 640) = sub_18FD4FACC(inited);
    if (qword_1EE1BCF78 != -1)
      swift_once();
    v62 = (id *)(v0 + 424);
    v63 = sub_1903D0340();
    *(_QWORD *)(v0 + 648) = __swift_project_value_buffer(v63, (uint64_t)qword_1EE1BF5F0);
    swift_bridgeObjectRetain_n();
    v64 = sub_1903D0328();
    v65 = sub_1903D0940();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      v67 = swift_slowAlloc();
      v106[0] = v67;
      *(_DWORD *)v66 = 136315138;
      swift_bridgeObjectRetain();
      v68 = sub_1903D04F0();
      v70 = v69;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 472) = sub_18FCD5144(v68, v70, v106);
      v62 = (id *)(v0 + 424);
      sub_1903D0ACC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FC92000, v64, v65, "NearbyPeerPayment: encrypting receiver data: %s", v66, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v67, -1, -1);
      MEMORY[0x19400D804](v66, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v71 = (void *)objc_opt_self();
    v72 = (void *)sub_1903D04CC();
    *v62 = 0;
    v73 = objc_msgSend(v71, sel_dataWithJSONObject_options_error_, v72, 1, v62);

    v74 = *v62;
    if (v73)
    {
      v75 = *(_QWORD *)(v0 + 560);
      v76 = sub_1903D01B4();
      v78 = v77;

      *(_QWORD *)(v0 + 656) = v76;
      *(_QWORD *)(v0 + 664) = v78;
      v79 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 672) = v79;
      v79[2] = v75;
      v79[3] = v76;
      v79[4] = v78;
      v80 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 680) = v80;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BE630);
      *v80 = v0;
      v80[1] = sub_18FE11474;
      return (id)sub_1903D0F04();
    }
    v81 = v74;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v82 = (void *)sub_1903D0130();

    swift_willThrow();
    v83 = v82;
    swift_bridgeObjectRetain();
    v84 = v82;
    v85 = sub_1903D0328();
    v86 = sub_1903D0940();
    if (os_log_type_enabled(v85, v86))
    {
      v87 = swift_slowAlloc();
      v103 = (_QWORD *)swift_slowAlloc();
      v105 = swift_slowAlloc();
      v106[0] = v105;
      *(_DWORD *)v87 = 136315394;
      swift_bridgeObjectRetain();
      v88 = sub_1903D04F0();
      v90 = v89;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 432) = sub_18FCD5144(v88, v90, v106);
      sub_1903D0ACC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v87 + 12) = 2112;
      v91 = v82;
      v92 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 440) = v92;
      sub_1903D0ACC();
      *v103 = v92;

      _os_log_impl(&dword_18FC92000, v85, v86, "NearbyPeerPayment: error serializing dictionary representation of receiver data: %s error: %@", (uint8_t *)v87, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v103, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v105, -1, -1);
      MEMORY[0x19400D804](v87, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v93 = *(void **)(v0 + 624);
    v2 = *(void **)(v0 + 584);
    v94 = *(void **)(v0 + 576);
    v95 = *(void **)(v0 + 560);
    v96 = *(_QWORD *)(v0 + 552);
    v97 = *(_QWORD *)(v0 + 504);
    v98 = *(void **)(v0 + 512);
    v99 = *(_QWORD *)(v0 + 496);
    swift_willThrow();

    sub_18FCD5938(v99, v97);
    v32 = v96;
LABEL_11:
    sub_18FDDE9C4(v32);

    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_18FE11474()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 688) = v0;
  swift_task_dealloc();
  if (v0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18FE11560()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  _BYTE *v49;
  id v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  id v58;
  uint64_t v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  uint64_t v64;
  void *v65;
  unint64_t v66;
  uint64_t v67;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  unint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  uint64_t v91[2];

  v91[1] = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)(v0 + 448);
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_18FD5293C(0x6E6F6973726576, 0xE700000000000000), (v3 & 1) != 0))
  {
    v4 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v2);
    v6 = *v4;
    v5 = v4[1];
    v7 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    if (v7 && (v8 = sub_18FD5293C(0x654B63696C627570, 0xED00006873614879), (v9 & 1) != 0))
    {
      v10 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v8);
      v12 = *v10;
      v11 = v10[1];
      v13 = *(_QWORD *)(v1 + 16);
      swift_bridgeObjectRetain();
      if (v13 && (v14 = sub_18FD5293C(0xD000000000000012, 0x8000000190457990), (v15 & 1) != 0))
      {
        v16 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v14);
        v18 = *v16;
        v17 = v16[1];
        v19 = *(_QWORD *)(v1 + 16);
        swift_bridgeObjectRetain();
        if (v19)
        {
          v20 = sub_18FD5293C(1635017060, 0xE400000000000000);
          if ((v21 & 1) != 0)
          {
            v82 = *(_QWORD *)(v0 + 600);
            v84 = *(_QWORD *)(v0 + 608);
            v80 = v18;
            v81 = *(_QWORD *)(v0 + 592);
            v22 = *(_QWORD *)(v0 + 520);
            v86 = *(void **)(v0 + 512);
            v89 = *(id *)(v0 + 616);
            v23 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v20);
            v24 = v23[1];
            v79 = *v23;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v25 = (_QWORD *)(v22 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_encryptedData);
            *v25 = v79;
            v25[1] = v24;
            v26 = (_QWORD *)(v22 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_encryptionVersion);
            *v26 = v6;
            v26[1] = v5;
            v27 = (_QWORD *)(v22 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_publicKeyHash);
            *v27 = v12;
            v27[1] = v11;
            v28 = (_QWORD *)(v22 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_ephemeralPublicKey);
            *v28 = v80;
            v28[1] = v17;
            v29 = (_QWORD *)(v22 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_senderAddress);
            *v29 = v81;
            v29[1] = v82;
            v30 = (_QWORD *)(v22 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_receiverAddress);
            *v30 = v84;
            v30[1] = v89;
            v31 = objc_msgSend(v86, sel_imageData);
            v32 = *(_QWORD *)(v0 + 664);
            v33 = *(_QWORD *)(v0 + 656);
            v34 = *(void **)(v0 + 560);
            if (v31)
            {
              v35 = v31;
              v36 = sub_1903D01B4();
              v85 = v37;
              v87 = v36;
              sub_18FCD5938(v33, v32);

            }
            else
            {
              sub_18FCD5938(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 664));
              v85 = 0xF000000000000000;
              v87 = 0;
            }

            v69 = *(void **)(v0 + 624);
            v70 = *(void **)(v0 + 584);
            v71 = *(_QWORD *)(v0 + 552);
            v72 = *(_QWORD *)(v0 + 528);
            v73 = *(char **)(v0 + 520);
            v75 = *(_QWORD *)(v0 + 504);
            v74 = *(void **)(v0 + 512);
            v76 = *(_QWORD *)(v0 + 496);

            sub_18FDDE9C4(v71);
            v77 = (uint64_t *)&v73[OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_receiverImageData];
            *v77 = v87;
            v77[1] = v85;
            *(_QWORD *)&v73[OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_contactAddressType] = 1;

            *(_QWORD *)(v0 + 408) = v73;
            *(_QWORD *)(v0 + 416) = v72;
            v78 = objc_msgSendSuper2((objc_super *)(v0 + 408), sel_init);

            sub_18FCD5938(v76, v75);
            swift_task_dealloc();
            swift_task_dealloc();
            return (*(uint64_t (**)(id))(v0 + 8))(v78);
          }
        }
        v38 = *(void **)(v0 + 520);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v38 = *(void **)(v0 + 520);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v38 = *(void **)(v0 + 520);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v38 = *(void **)(v0 + 520);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v39 = sub_1903D0328();
  v40 = sub_1903D0934();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    v42 = swift_slowAlloc();
    v91[0] = v42;
    *(_DWORD *)v41 = 136315138;
    swift_bridgeObjectRetain();
    v43 = sub_1903D04F0();
    v45 = v44;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 456) = sub_18FCD5144(v43, v45, v91);
    sub_1903D0ACC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v39, v40, "NearbyPeerPayment: receiver data encryption failed, fields missing from fields: %s", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v42, -1, -1);
    MEMORY[0x19400D804](v41, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v46 = *(_QWORD *)(v0 + 664);
  v47 = *(_QWORD *)(v0 + 656);
  sub_18FE13974();
  v48 = (void *)swift_allocError();
  *v49 = 0;
  swift_willThrow();
  sub_18FCD5938(v47, v46);
  v50 = v48;
  swift_bridgeObjectRetain();
  v90 = v48;
  v51 = v48;
  v52 = sub_1903D0328();
  v53 = sub_1903D0940();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = swift_slowAlloc();
    v83 = (_QWORD *)swift_slowAlloc();
    v88 = swift_slowAlloc();
    v91[0] = v88;
    *(_DWORD *)v54 = 136315394;
    swift_bridgeObjectRetain();
    v55 = sub_1903D04F0();
    v57 = v56;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 432) = sub_18FCD5144(v55, v57, v91);
    sub_1903D0ACC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v54 + 12) = 2112;
    v58 = v90;
    v59 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 440) = v59;
    sub_1903D0ACC();
    *v83 = v59;

    _os_log_impl(&dword_18FC92000, v52, v53, "NearbyPeerPayment: error serializing dictionary representation of receiver data: %s error: %@", (uint8_t *)v54, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v83, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v88, -1, -1);
    MEMORY[0x19400D804](v54, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  v60 = *(void **)(v0 + 624);
  v61 = *(void **)(v0 + 584);
  v62 = *(void **)(v0 + 576);
  v63 = *(void **)(v0 + 560);
  v64 = *(_QWORD *)(v0 + 552);
  v66 = *(_QWORD *)(v0 + 504);
  v65 = *(void **)(v0 + 512);
  v67 = *(_QWORD *)(v0 + 496);
  swift_willThrow();

  sub_18FCD5938(v67, v66);
  sub_18FDDE9C4(v64);

  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FE11D50()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23[2];

  v23[1] = *MEMORY[0x1E0C80C00];
  sub_18FCD5938(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 664));
  v1 = *(void **)(v0 + 688);
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_1903D0328();
  v5 = sub_1903D0940();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v23[0] = v22;
    *(_DWORD *)v6 = 136315394;
    swift_bridgeObjectRetain();
    v8 = sub_1903D04F0();
    v10 = v9;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 432) = sub_18FCD5144(v8, v10, v23);
    sub_1903D0ACC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2112;
    v11 = v1;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 440) = v12;
    sub_1903D0ACC();
    *v7 = v12;

    _os_log_impl(&dword_18FC92000, v4, v5, "NearbyPeerPayment: error serializing dictionary representation of receiver data: %s error: %@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v22, -1, -1);
    MEMORY[0x19400D804](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  v13 = *(void **)(v0 + 624);
  v14 = *(void **)(v0 + 584);
  v15 = *(void **)(v0 + 576);
  v16 = *(void **)(v0 + 560);
  v17 = *(_QWORD *)(v0 + 552);
  v19 = *(_QWORD *)(v0 + 504);
  v18 = *(void **)(v0 + 512);
  v20 = *(_QWORD *)(v0 + 496);
  swift_willThrow();

  sub_18FCD5938(v20, v19);
  sub_18FDDE9C4(v17);

  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for NearbyPeerPaymentReceiverResponseMetadata()
{
  return objc_opt_self();
}

uint64_t sub_18FE12080(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x19400D72C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FE120C0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v6;

  v2 = *(_QWORD *)(a1 + 32);
  v6 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40);
  v4 = a2;
  sub_18FE14098((uint64_t)&v6, v3);
  return swift_continuation_resume();
}

void sub_18FE12108(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0F20);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  if (a2)
  {
    v7 = (void *)sub_1903D01A8();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v9 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_18FE14030;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FE124BC;
    aBlock[3] = &block_descriptor_30_5;
    v10 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(a2, sel_encryptData_usingCertificateWithDestination_completion_, v7, 1, v10);
    _Block_release(v10);

  }
}

uint64_t sub_18FE12260(uint64_t a1, void *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  _BYTE *v13;

  if (a1)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0F20);
    return sub_1903D082C();
  }
  else
  {
    if (qword_1EE1BCF78 != -1)
      swift_once();
    v4 = sub_1903D0340();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EE1BF5F0);
    v5 = a2;
    v6 = a2;
    v7 = sub_1903D0328();
    v8 = sub_1903D0934();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412290;
      if (a2)
      {
        v11 = a2;
        v12 = _swift_stdlib_bridgeErrorToNSError();
        sub_1903D0ACC();
      }
      else
      {
        sub_1903D0ACC();
        v12 = 0;
      }
      *v10 = v12;

      _os_log_impl(&dword_18FC92000, v7, v8, "NearbyPeerPayment: receiver data encryption failed with error %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v10, -1, -1);
      MEMORY[0x19400D804](v9, -1, -1);
    }
    else
    {

    }
    sub_18FE13974();
    swift_allocError();
    *v13 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0F20);
    return sub_1903D0820();
  }
}

uint64_t sub_18FE124BC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_1903D04E4();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t static NearbyPeerPaymentReceiverResponseMetadata.receiverData(nonce:nearbyMetadata:appearanceData:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v21;

  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BF3B0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1903D085C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = a1;
  v18[5] = a2;
  v18[6] = a3;
  v18[7] = a4;
  v18[8] = a5;
  v18[9] = a6;
  v18[10] = a7;
  swift_bridgeObjectRetain();
  sub_18FCD58F4(a3, a4);
  v19 = a5;
  swift_retain();
  sub_18FE0EE00((uint64_t)v16, (uint64_t)&unk_1EE1C0EB8, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_18FE1265C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v8[9] = v10;
  v8[10] = v11;
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[4] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BF3B0);
  v8[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18FE126C8()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  _QWORD *v10;

  v1 = v0[11];
  v2 = v0[7];
  v3 = (void *)v0[8];
  v5 = v0[5];
  v4 = v0[6];
  v6 = v0[4];
  v7 = sub_1903D085C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v1, 1, 1, v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v6;
  v8[5] = v5;
  v8[6] = v4;
  v8[7] = v2;
  v8[8] = v3;
  v9 = v3;
  swift_bridgeObjectRetain();
  sub_18FCD58F4(v4, v2);
  v0[12] = sub_18FE0F89C(v1, (uint64_t)&unk_1EE1C0F18, (uint64_t)v8);
  v10 = (_QWORD *)swift_task_alloc();
  v0[13] = v10;
  type metadata accessor for NearbyPeerPaymentReceiverResponseMetadata();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0A0);
  *v10 = v0;
  v10[1] = sub_18FE127EC;
  return sub_1903D0874();
}

uint64_t sub_18FE127EC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18FE12840()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *);
  id v3;

  v1 = *(void **)(v0 + 16);
  v2 = *(void (**)(void *))(v0 + 72);
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v2(0);
    swift_release();
    sub_18FE13FC0(v1);
  }
  else
  {
    v3 = v1;
    v2(v1);
    swift_release();
    sub_18FE13FC0(v1);
    sub_18FE13FC0(v1);

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FE128EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void *a8)
{
  uint64_t v8;
  id v14;
  _QWORD *v15;

  *(_QWORD *)(v8 + 16) = a1;
  objc_allocWithZone((Class)type metadata accessor for NearbyPeerPaymentReceiverResponseMetadata());
  swift_bridgeObjectRetain();
  sub_18FCD58F4(a6, a7);
  v14 = a8;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 24) = v15;
  *v15 = v8;
  v15[1] = sub_18FE129A4;
  return NearbyPeerPaymentReceiverResponseMetadata.init(nonce:nearbyMetadata:appearanceData:)(a4, a5, a6, a7, (uint64_t)v14);
}

uint64_t sub_18FE129A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_18FE12A20()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FE12CF0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18FE12D30 + 4 * byte_190440A3C[a1]))(0x6574707972636E65, 0xED00006174614464);
}

unint64_t sub_18FE12D30()
{
  return 0xD000000000000011;
}

void sub_18FE12DDC()
{
  JUMPOUT(0x18FE12DF0);
}

uint64_t sub_18FE12DFC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18FE12E3C + 4 * byte_190440A44[a1]))(0x6574707972636E65, 0xED00006174614464);
}

unint64_t sub_18FE12E3C()
{
  return 0xD000000000000011;
}

void sub_18FE12EE8()
{
  JUMPOUT(0x18FE12EFCLL);
}

void sub_18FE12F08(char *a1)
{
  sub_18FD4D7F4(*a1);
}

void sub_18FE12F14()
{
  char *v0;

  sub_18FE0F570(0, *v0);
}

void sub_18FE12F20(uint64_t a1)
{
  char *v1;

  sub_18FD99694(a1, *v1);
}

void sub_18FE12F28(uint64_t a1)
{
  char *v1;

  sub_18FE0F570(a1, *v1);
}

uint64_t sub_18FE12F30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FE13D00();
  *a1 = result;
  return result;
}

uint64_t sub_18FE12F5C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_18FE12CF0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_18FE12F84()
{
  unsigned __int8 *v0;

  return sub_18FE12DFC(*v0);
}

uint64_t sub_18FE12F8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FE13D00();
  *a1 = result;
  return result;
}

uint64_t sub_18FE12FB0()
{
  sub_18FE13A64();
  return sub_1903D1018();
}

uint64_t sub_18FE12FD8()
{
  sub_18FE13A64();
  return sub_1903D1024();
}

id NearbyPeerPaymentReceiverResponseMetadata.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void NearbyPeerPaymentReceiverResponseMetadata.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id NearbyPeerPaymentReceiverResponseMetadata.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t NearbyPeerPaymentReceiverResponseMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0EC0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_18FE13A64();
  sub_1903D100C();
  LOBYTE(v11) = 0;
  sub_1903D0E68();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1903D0E68();
    LOBYTE(v11) = 2;
    sub_1903D0E68();
    LOBYTE(v11) = 3;
    sub_1903D0E68();
    LOBYTE(v11) = 4;
    sub_1903D0E68();
    LOBYTE(v11) = 5;
    sub_1903D0E68();
    v11 = *(_OWORD *)(v3 + OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_receiverImageData);
    v10[15] = 6;
    sub_18FCD9AA0();
    sub_1903D0E5C();
    LOBYTE(v11) = 7;
    sub_1903D0E8C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

id NearbyPeerPaymentReceiverResponseMetadata.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return NearbyPeerPaymentReceiverResponseMetadata.init(from:)(a1);
}

id NearbyPeerPaymentReceiverResponseMetadata.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char *v35;
  objc_class *ObjectType;
  _QWORD *v37;
  objc_super v38;
  __int128 v39;
  char v40;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0ED0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v8);
  sub_18FE13A64();
  v9 = v1;
  v35 = v7;
  sub_1903D1000();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
    v33 = ObjectType;

    swift_deallocPartialClassInstance();
  }
  else
  {
    v10 = v5;
    LOBYTE(v39) = 0;
    v11 = v4;
    v12 = sub_1903D0DCC();
    v14 = (uint64_t *)&v9[OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_encryptedData];
    *v14 = v12;
    v14[1] = v15;
    LOBYTE(v39) = 1;
    v16 = sub_1903D0DCC();
    v17 = (uint64_t)v37;
    v18 = (uint64_t *)&v9[OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_encryptionVersion];
    *v18 = v16;
    v18[1] = v19;
    LOBYTE(v39) = 2;
    v20 = sub_1903D0DCC();
    v21 = (uint64_t *)&v9[OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_publicKeyHash];
    *v21 = v20;
    v21[1] = v22;
    LOBYTE(v39) = 3;
    v23 = sub_1903D0DCC();
    v24 = (uint64_t *)&v9[OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_ephemeralPublicKey];
    *v24 = v23;
    v24[1] = v25;
    LOBYTE(v39) = 4;
    v26 = v35;
    v27 = sub_1903D0DCC();
    v28 = (uint64_t *)&v9[OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_senderAddress];
    *v28 = v27;
    v28[1] = v29;
    LOBYTE(v39) = 5;
    v34 = 0;
    v30 = sub_1903D0DCC();
    v31 = (uint64_t *)&v9[OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_receiverAddress];
    *v31 = v30;
    v31[1] = v32;
    v40 = 6;
    sub_18FCD9CC0();
    sub_1903D0DC0();
    *(_OWORD *)&v9[OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_receiverImageData] = v39;
    LOBYTE(v39) = 7;
    *(_QWORD *)&v9[OBJC_IVAR____PKNearbyPeerPaymentReceiverResponseMetadata_contactAddressType] = sub_1903D0DF0();

    v38.receiver = v9;
    v38.super_class = ObjectType;
    v33 = objc_msgSendSuper2(&v38, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v26, v11);
    __swift_destroy_boxed_opaque_existential_1Tm(v17);
  }
  return v33;
}

id sub_18FE138FC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  id v6;
  id result;

  v6 = objc_allocWithZone(v2);
  result = NearbyPeerPaymentReceiverResponseMetadata.init(from:)(a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_18FE13948(_QWORD *a1)
{
  return NearbyPeerPaymentReceiverResponseMetadata.encode(to:)(a1);
}

void sub_18FE13968(uint64_t a1)
{
  uint64_t v1;

  sub_18FE12108(a1, *(void **)(v1 + 16));
}

unint64_t sub_18FE13974()
{
  unint64_t result;

  result = qword_1EE1C0EA8;
  if (!qword_1EE1C0EA8)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for NearbyPeerPayment.InternalError, &type metadata for NearbyPeerPayment.InternalError);
    atomic_store(result, &qword_1EE1C0EA8);
  }
  return result;
}

uint64_t sub_18FE139BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_18FCDEBAC;
  return sub_18FE1265C(a1, v12, v4, v5, v6, v7, v8, v9);
}

unint64_t sub_18FE13A64()
{
  unint64_t result;

  result = qword_1EE1C0EC8;
  if (!qword_1EE1C0EC8)
  {
    result = MEMORY[0x19400D72C](&unk_190440BEC, &type metadata for NearbyPeerPaymentReceiverResponseMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1C0EC8);
  }
  return result;
}

uint64_t method lookup function for NearbyPeerPaymentReceiverResponseMetadata()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NearbyPeerPaymentReceiverResponseMetadata.__allocating_init(nonce:nearbyMetadata:appearanceData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v5 + 144)
                                                                            + *(_QWORD *)(v5 + 144));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_18FCD5A64;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of NearbyPeerPaymentReceiverResponseMetadata.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t storeEnumTagSinglePayload for NearbyPeerPaymentReceiverResponseMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_18FE13BA8 + 4 * byte_190440A51[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_18FE13BDC + 4 * byte_190440A4C[v4]))();
}

uint64_t sub_18FE13BDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FE13BE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FE13BECLL);
  return result;
}

uint64_t sub_18FE13BF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FE13C00);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_18FE13C04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FE13C0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NearbyPeerPaymentReceiverResponseMetadata.CodingKeys()
{
  return &type metadata for NearbyPeerPaymentReceiverResponseMetadata.CodingKeys;
}

unint64_t sub_18FE13C2C()
{
  unint64_t result;

  result = qword_1EE1C0EE0;
  if (!qword_1EE1C0EE0)
  {
    result = MEMORY[0x19400D72C](&unk_190440BC4, &type metadata for NearbyPeerPaymentReceiverResponseMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1C0EE0);
  }
  return result;
}

unint64_t sub_18FE13C74()
{
  unint64_t result;

  result = qword_1EE1C0EE8;
  if (!qword_1EE1C0EE8)
  {
    result = MEMORY[0x19400D72C](&unk_190440AFC, &type metadata for NearbyPeerPaymentReceiverResponseMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1C0EE8);
  }
  return result;
}

unint64_t sub_18FE13CBC()
{
  unint64_t result;

  result = qword_1EE1C0EF0;
  if (!qword_1EE1C0EF0)
  {
    result = MEMORY[0x19400D72C](&unk_190440B24, &type metadata for NearbyPeerPaymentReceiverResponseMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1C0EF0);
  }
  return result;
}

uint64_t sub_18FE13D00()
{
  unint64_t v0;

  v0 = sub_1903D0D6C();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_18FE13D48()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_18FCD5938(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FE13DB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_18FCDE964;
  return sub_18FE1265C(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_18FE13E5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FE13E80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_18FCDEBAC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE1C0F00 + dword_1EE1C0F00))(a1, v4);
}

uint64_t sub_18FE13EF0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_18FCD5938(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));

  return swift_deallocObject();
}

uint64_t sub_18FE13F2C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = (void *)v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_18FCDE964;
  return sub_18FE128EC(a1, v4, v5, v6, v7, v8, v9, v10);
}

void sub_18FE13FC0(id a1)
{

}

uint64_t sub_18FE13FCC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0F20);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_18FE14030(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0F20);
  return sub_18FE12260(a1, a2);
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t sub_18FE14098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C0F28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id ProvisioningCredentialsConfiguration.Credential.paymentCredential.getter()
{
  uint64_t v0;
  id v1;
  id v2;

  if (*(_BYTE *)(v0 + 24))
    return 0;
  v1 = *(id *)v0;
  v2 = *(id *)v0;
  return v1;
}

uint64_t ProvisioningCredentialsConfiguration.Credential.carKeyTransferComponents.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  char v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 24);
  if (v4)
    v5 = 0;
  else
    v5 = v2;
  sub_18FCDC6A4(v2, v1, v3, v4);
  v6 = objc_msgSend(v5, sel_statefulTransferCredential);

  sub_18FCD6F28(v2, v1, v3, v4);
  if (!v6)
    return 0;
  v7 = objc_msgSend(v6, sel_invitation);
  if (!v7)
  {

    return 0;
  }
  v8 = v7;
  objc_opt_self();
  v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    v10 = objc_msgSend(v6, sel_handle);
    if (v10)
    {
      v11 = objc_msgSend(v6, sel_share);

      if (!v11)
      {

        return 0;
      }
    }
    else
    {

      return 0;
    }
  }
  else
  {

  }
  return v9;
}

id ProvisioningCredentialsConfiguration.Credential.statefulTransferCredential.getter()
{
  uint64_t v0;
  id v1;
  id v2;

  if (*(_BYTE *)(v0 + 24))
    v1 = 0;
  else
    v1 = *(id *)v0;
  v2 = objc_msgSend(v1, sel_statefulTransferCredential);

  return v2;
}

BOOL ProvisioningCredentialsConfiguration.Credential.isAppleBalance.getter()
{
  uint64_t v0;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;

  if (*(_BYTE *)(v0 + 24))
    return 0;
  v2 = *(id *)v0;
  v3 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(id *)v0;
  if (objc_msgSend(v5, sel_isAppleBalanceCredential))
  {
    sub_18FCD6F28(v2, v3, v4, 0);
    return 1;
  }
  else
  {
    v6 = objc_msgSend(v5, sel_credentialType);
    sub_18FCD6F28(v2, v3, v4, 0);
    return v6 == (id)135;
  }
}

void ProvisioningCredentialsConfiguration.Credential.isPushProvisioningCredential.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_18FE143B8()
{
  return 0;
}

void ProvisioningCredentialsConfiguration.Credential.addPassRequestConfiguration.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  if (*(unsigned __int8 *)(v0 + 24) - 2 >= 4)
  {
    v1 = *(void **)v0;
    if (*(_BYTE *)(v0 + 24))
    {
      v7 = v1;
    }
    else
    {
      v3 = *(_QWORD *)(v0 + 8);
      v2 = *(_QWORD *)(v0 + 16);
      v4 = objc_msgSend(v1, sel_issuerProvisioningExtensionCredential);
      if (v4)
      {
        v5 = v4;
        v6 = objc_msgSend(v4, sel_entry);

        if (v6)
        {
          objc_msgSend(v6, sel_addRequestConfiguration);
          sub_18FCD6F28(v1, v3, v2, 0);

        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        sub_18FCD6F28(v1, v3, v2, 0);
      }
    }
  }
}

id ProvisioningCredentialsConfiguration.Credential.pushableConfiguration.getter()
{
  uint64_t v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  v1 = *(void **)v0;
  v2 = *(unsigned __int8 *)(v0 + 24);
  if (v2 == 3)
  {
    v4 = *(_QWORD *)(v0 + 8);
    v3 = *(_QWORD *)(v0 + 16);
    objc_opt_self();
    v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      v6 = (void *)v5;
      sub_18FCDC6A4(v1, v4, v3, 3);
      v7 = v1;
      v8 = objc_msgSend(v6, sel_metadatas);
      sub_18FCDC600(0, (unint64_t *)&unk_1EE1BF430);
      sub_1903D0784();

      v9 = objc_allocWithZone((Class)PKAddShareablePassConfiguration);
      v10 = (void *)sub_1903D0778();
      swift_bridgeObjectRelease();
      v11 = objc_msgSend(v9, sel_initWithPrimaryAction_credentialsMetadata_, 0, v10);

      sub_18FCD6F28(v1, v4, v3, 3);
      sub_18FCD6F28(v1, v4, v3, 3);
      return v11;
    }
    return 0;
  }
  if (v2 != 2)
    return 0;
  swift_unknownObjectRetain();
  return v1;
}

id ProvisioningCredentialsConfiguration.Credential.carKeyPairingConfiguration.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;

  if (*(_BYTE *)(v0 + 24))
    v1 = 0;
  else
    v1 = *(id *)v0;
  v2 = objc_msgSend(v1, sel_carKeyTerminalPairingCredential);

  v3 = objc_msgSend(v2, sel_configuration);
  return v3;
}

_QWORD *ProvisioningCredentialsConfiguration.__allocating_init(credentials:availableDestinationDevices:)(uint64_t a1, uint64_t a2)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[4] = 0;
  result[5] = 0;
  result[2] = a1;
  result[3] = a2;
  return result;
}

void ProvisioningCredentialsConfiguration.Credential.provisioningState.getter()
{
  __asm { BR              X10 }
}

id sub_18FE147FC()
{
  return objc_msgSend(objc_allocWithZone((Class)PKSecureElementProvisioningState), sel_init);
}

id sub_18FE14824(id a1)
{
  return a1;
}

id sub_18FE14838(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;

  v3 = objc_msgSend(a1, sel_state);
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x18FE1488CLL);
  }
  v4 = v3;
  sub_18FCD6F28(a1, v1, v2, 0);
  return v4;
}

BOOL ProvisioningCredentialsConfiguration.Credential.isCarKey.getter()
{
  void *v0;
  void *v1;

  ProvisioningCredentialsConfiguration.Credential.carKeyPassConfiguration.getter();
  v1 = v0;
  if (v0)

  return v1 != 0;
}

void ProvisioningCredentialsConfiguration.Credential.carKeyPassConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned __int8 *)(v0 + 24);
  v34 = *(void **)v0;
  LOBYTE(v35) = *(_BYTE *)(v0 + 24);
  v5 = ProvisioningCredentialsConfiguration.Credential.carKeyTransferComponents.getter();
  if (v5)
  {
    v8 = (void *)v5;
    v9 = v7;

    v10 = objc_msgSend(objc_allocWithZone((Class)PKAppletSubcredentialSharingInvitation), sel_initWithCrossPlatformInvitation_, v8, v34, v1, v3, v35);
    objc_msgSend(v10, sel_addCarKeyPassConfiguration);

    return;
  }
  if (v4)
    v11 = 0;
  else
    v11 = v2;
  sub_18FCDC6A4(v2, v1, v3, v4);
  v12 = objc_msgSend(v11, sel_carKeyTerminalPairingCredential, v34, v1, v3, v35);

  v13 = objc_msgSend(v12, sel_configuration);
  sub_18FCD6F28(v2, v1, v3, v4);
  if (!v13 && !v4)
  {
    v14 = v2;
    v15 = objc_msgSend(v14, sel_localAppletSubcredentialPassCredential);
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, sel_configuration);

LABEL_10:
      sub_18FCD6F28(v2, v1, v3, 0);
      return;
    }
    v17 = objc_msgSend(v14, sel_remoteCredential);
    if (!v17)
    {
      sub_18FCD6F28(v2, v1, v3, 0);
      return;
    }
    v18 = v17;
    if (objc_msgSend(v17, sel_transferType) != (id)2)
      goto LABEL_26;
    v19 = objc_msgSend(v18, sel_underlyingPaymentPass);
    if (!v19)
      goto LABEL_26;
    v20 = v19;
    v21 = objc_msgSend(v19, sel_paymentApplications);

    if (v21)
    {
      sub_18FCDC600(0, &qword_1EE1BEA18);
      sub_18FDE4754((unint64_t *)&qword_1EE1BEA20, &qword_1EE1BEA18);
      v22 = sub_1903D08A4();

      v23 = (void *)sub_18FE14D90(v22, &qword_1EE1BEA18);
      swift_bridgeObjectRelease();
      if (!v23)
        goto LABEL_26;
      v24 = objc_msgSend(v23, sel_subcredentials);

      if (v24)
      {
        sub_18FCDC600(0, &qword_1EE1C0C10);
        sub_18FDE4754((unint64_t *)&unk_1EE1C0700, &qword_1EE1C0C10);
        v25 = sub_1903D08A4();

        v26 = (void *)sub_18FE14D90(v25, &qword_1EE1C0C10);
        swift_bridgeObjectRelease();
        if (v26)
        {
          v27 = objc_allocWithZone((Class)PKAddCarKeyPassConfiguration);
          v28 = v26;
          v29 = objc_msgSend(v27, sel_init);
          objc_msgSend(v29, sel_setSupportedRadioTechnologies_, objc_msgSend(v28, sel_allSupportedRadioTechnologies));
          v30 = v29;
          v31 = objc_msgSend(v28, sel_brandIdentifier);
          if (v31 || (v31 = objc_msgSend(v28, sel_manufacturerIdentifier)) != 0)
          {
            sub_1903D05C8();

            v31 = (id)sub_1903D05A4();
            swift_bridgeObjectRelease();
          }
          objc_msgSend(v30, sel_setIssuerIdentifier_, v31);

          v32 = objc_msgSend(v28, sel_manufacturerIdentifier);
          if (v32)
          {
            v33 = v32;
            objc_msgSend(v30, sel_setManufacturerIdentifier_, v32);

            goto LABEL_10;
          }
LABEL_29:
          __break(1u);
          return;
        }
LABEL_26:
        sub_18FCD6F28(v2, v1, v3, 0);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_29;
  }
}

uint64_t sub_18FE14D90(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v4 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v5 = sub_1903D0B50();
    v7 = v6;
    v8 = sub_1903D0BB0();
    v10 = MEMORY[0x19400B14C](v5, v7, v8, v9);
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
LABEL_3:
      sub_18FE15E10(v5, v7, v4 != 0);
      return 0;
    }
LABEL_7:
    sub_18FE15E1C(v5, v7, v4 != 0, a1, a2);
    v11 = v15;
    sub_18FE15E10(v5, v7, v4 != 0);
    return v11;
  }
  result = sub_18FE1607C(a1);
  if ((v14 & 1) == 0)
  {
    v7 = v13;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v13)
    {
      v5 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id ProvisioningCredentialsConfiguration.Credential.isHomeKey.getter()
{
  return sub_18FE14F24((SEL *)&selRef_isHomeKeyCredential);
}

uint64_t ProvisioningCredentialsConfiguration.Credential.isAccountCredential.getter()
{
  uint64_t v0;
  id v2;

  if (*(_BYTE *)(v0 + 24))
    return 0;
  v2 = *(id *)v0;
  if ((objc_msgSend(*(id *)v0, sel_isAccountCredential) & 1) != 0)
    return 1;
  else
    return (uint64_t)objc_msgSend(v2, sel_isAccountReferenceCredential);
}

id ProvisioningCredentialsConfiguration.Credential.isPeerPaymentCredential.getter()
{
  return sub_18FE14F24((SEL *)&selRef_isPeerPaymentCredential);
}

id sub_18FE14F24(SEL *a1)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + 24))
    return 0;
  else
    return objc_msgSend(*(id *)v1, *a1);
}

BOOL ProvisioningCredentialsConfiguration.Credential.isTapToProvision.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 24) == 5;
}

void ProvisioningCredentialsConfiguration.Credential.transferType.getter(char *a1@<X8>)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  unsigned int v12;
  id v13;
  void *v14;
  id v15;

  if (*(_BYTE *)(v1 + 24))
  {
LABEL_2:
    v3 = 2;
LABEL_3:
    *a1 = v3;
    return;
  }
  v5 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = v5;
  v8 = objc_msgSend(v7, sel_localPassCredential);
  if (!v8)
  {
LABEL_8:
    v13 = objc_msgSend(v7, sel_remoteCredential);
    if (v13)
    {
      v14 = v13;
      v15 = objc_msgSend(v13, sel_status);
      sub_18FCD6F28(v5, v4, v6, 0);

      if (v15 == (id)5)
      {
        v3 = 1;
        goto LABEL_3;
      }
    }
    else
    {
      sub_18FCD6F28(v5, v4, v6, 0);
    }
    goto LABEL_2;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, sel_paymentPass);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_requiresTransferSerialNumberBasedProvisioning);

    if (v12)
    {
      sub_18FCD6F28(v5, v4, v6, 0);
      v3 = 0;
      goto LABEL_3;
    }
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_18FE150A0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FE150FC()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FE15130(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_18FE15174())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t sub_18FE151B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FE1520C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FE15240(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_18FE15284())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_18FE152C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FE1531C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FE15350(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_18FE15394())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

void sub_18FE153D0(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;
  v5 = v2;

}

void *sub_18FE15424()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_beginAccess();
  v1 = *(void **)(v0 + 40);
  v2 = v1;
  return v1;
}

void sub_18FE15464(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = a1;

}

uint64_t (*sub_18FE154A8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

_QWORD *ProvisioningCredentialsConfiguration.init(credentials:availableDestinationDevices:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[4] = 0;
  v2[5] = 0;
  v2[2] = a1;
  v2[3] = a2;
  return v2;
}

uint64_t ProvisioningCredentialsConfiguration.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t ProvisioningCredentialsConfiguration.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t (*sub_18FE15564())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

id sub_18FE155A0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 24);
}

uint64_t ProvisioningCredentialsConfiguration.CarKeyInviteState.__allocating_init(sharedState:share:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t ProvisioningCredentialsConfiguration.CarKeyInviteState.init(sharedState:share:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t ProvisioningCredentialsConfiguration.CarKeyInviteState.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ProvisioningCredentialsConfiguration.CarKeyInviteState.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id ProvisioningCredentialsConfiguration.Credential.invitation.getter()
{
  uint64_t v0;
  id v1;
  id v2;

  if (*(_BYTE *)(v0 + 24) != 3)
    return 0;
  v1 = *(id *)v0;
  v2 = *(id *)v0;
  return v1;
}

uint64_t ProvisioningCredentialsConfiguration.Credential.passCount.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;

  if (*(_BYTE *)(v0 + 24) != 2)
    return 1;
  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_metadataProviders);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE1BF990);
  v5 = sub_1903D0784();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1903D0D00();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_18FCD6F28(v1, v2, v3, 2);
  return v6;
}

BOOL static ProvisioningCredentialsConfiguration.Credential.TransferType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ProvisioningCredentialsConfiguration.Credential.TransferType.hash(into:)()
{
  return sub_1903D0FA0();
}

uint64_t ProvisioningCredentialsConfiguration.Credential.TransferType.hashValue.getter()
{
  sub_1903D0F94();
  sub_1903D0FA0();
  return sub_1903D0FC4();
}

BOOL ProvisioningCredentialsConfiguration.Credential.isManualEntry.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24) > 3u;
}

unint64_t sub_18FE15818()
{
  unint64_t result;

  result = qword_1EE1C0F30;
  if (!qword_1EE1C0F30)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for ProvisioningCredentialsConfiguration.Credential.TransferType, &type metadata for ProvisioningCredentialsConfiguration.Credential.TransferType);
    atomic_store(result, (unint64_t *)&qword_1EE1C0F30);
  }
  return result;
}

uint64_t sub_18FE1585C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FE158A8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FE158F4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

id sub_18FE15940@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 40);
  *a2 = v4;
  return v4;
}

id sub_18FE15988@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 16);
  *a2 = v4;
  return v4;
}

id sub_18FE159D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 24);
  *a2 = v4;
  return v4;
}

uint64_t type metadata accessor for ProvisioningCredentialsConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningCredentialsConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.credentials.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.credentials.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.credentials.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.availableDestinationDevices.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.availableDestinationDevices.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.availableDestinationDevices.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.secureElementReservation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.secureElementReservation.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.secureElementReservation.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.tracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.tracker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.tracker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.__allocating_init(credentials:availableDestinationDevices:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

void destroy for ProvisioningCredentialsConfiguration.Credential(uint64_t a1)
{
  sub_18FCD6F28(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for ProvisioningCredentialsConfiguration.Credential(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_18FCDC6A4(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for ProvisioningCredentialsConfiguration.Credential(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_18FCDC6A4(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_18FCD6F28(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ProvisioningCredentialsConfiguration.Credential(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_18FCD6F28(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProvisioningCredentialsConfiguration.Credential(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ProvisioningCredentialsConfiguration.Credential(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_18FE15CA8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_18FE15CB0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ProvisioningCredentialsConfiguration.Credential()
{
  return &type metadata for ProvisioningCredentialsConfiguration.Credential;
}

uint64_t type metadata accessor for ProvisioningCredentialsConfiguration.CarKeyInviteState()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningCredentialsConfiguration.CarKeyInviteState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.CarKeyInviteState.sharedState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.CarKeyInviteState.sharedState.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.CarKeyInviteState.sharedState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.CarKeyInviteState.share.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.CarKeyInviteState.share.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.CarKeyInviteState.share.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ProvisioningCredentialsConfiguration.CarKeyInviteState.__allocating_init(sharedState:share:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t storeEnumTagSinglePayload for ProvisioningCredentialsConfiguration.Credential.TransferType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_18FE15D90 + 4 * byte_190440C61[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_18FE15DC4 + 4 * byte_190440C5C[v4]))();
}

uint64_t sub_18FE15DC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FE15DCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FE15DD4);
  return result;
}

uint64_t sub_18FE15DE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FE15DE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_18FE15DEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FE15DF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProvisioningCredentialsConfiguration.Credential.TransferType()
{
  return &type metadata for ProvisioningCredentialsConfiguration.Credential.TransferType;
}

uint64_t sub_18FE15E10(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_18FE15E1C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  unint64_t *v17;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_1903D0B74() == *(_DWORD *)(a4 + 36))
      {
        sub_1903D0B80();
        sub_18FCDC600(0, a5);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a5 = v17;
        swift_unknownObjectRelease();
        v9 = sub_1903D0A48();
        v10 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v9 & ~v10;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v11 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v12 = sub_1903D0A54();

          if ((v12 & 1) == 0)
          {
            v13 = ~v10;
            do
            {
              v7 = (v7 + 1) & v13;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v14 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v15 = sub_1903D0A54();

            }
            while ((v15 & 1) == 0);
          }

LABEL_20:
          v16 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x19400B17C](a1, a2, v8);
  sub_18FCDC600(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_18FE1607C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

_QWORD *sub_18FE16104(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_allocObject();
  return sub_18FE1613C(a1, v2, v3, v4);
}

_QWORD *sub_18FE1613C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  _OWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;

  v6 = *v4;
  v7 = type metadata accessor for TaskQueue.ContextContainer(255, *(_QWORD *)(*v4 + 80), a3, a4);
  v8 = sub_1903D0A84();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - v10;
  v12 = (char *)v4 + *(_QWORD *)(v6 + 96);
  v13 = *(_QWORD *)(v7 - 8);
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v14(v12, 1, 1, v7);
  v15 = (_OWORD *)((char *)v4 + *(_QWORD *)(*v4 + 104));
  *v15 = 0u;
  v15[1] = 0u;
  v15[2] = 0u;
  v15[3] = 0u;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BF470);
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = 0;
  v4[2] = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v11, a1, v7);
  v14(v11, 0, 1, v7);
  v17 = (char *)v4 + *(_QWORD *)(*v4 + 96);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v17, v11, v8);
  swift_endAccess();
  v18 = (char *)v4 + *(_QWORD *)(*v4 + 104);
  swift_beginAccess();
  v19 = *(_QWORD *)v18;
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((_OWORD *)v18 + 2) = 0u;
  *((_OWORD *)v18 + 3) = 0u;
  sub_18FE16358(v19);
  return v4;
}

uint64_t *TaskQueue.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  swift_release();
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  type metadata accessor for TaskQueue.ContextContainer(255, *(_QWORD *)(v1 + 80), v3, v4);
  v5 = sub_1903D0A84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  sub_18FE16358(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 104)));
  return v0;
}

uint64_t type metadata accessor for TaskQueue.ContextContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TaskQueue.ContextContainer);
}

uint64_t sub_18FE16358(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t TaskQueue.__deallocating_deinit()
{
  TaskQueue.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_18FE163CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  type metadata accessor for TaskQueue.ContextContainer(255, *(_QWORD *)(a1 + 80), a3, a4);
  result = sub_1903D0A84();
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for TaskQueue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TaskQueue);
}

uint64_t method lookup function for TaskQueue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TaskQueue.__allocating_init(context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_18FE16480()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_18FE164F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 != 1)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
      return v3;
    }
    v11 = a2[1];
    *v3 = *a2;
    v3[1] = v11;
    *((_BYTE *)v3 + v5) = 1;
  }
  swift_retain();
  return v3;
}

uint64_t sub_18FE16608(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 0x10)
    v3 = 16;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return swift_release();
    else
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_18FE16650 + 4 * byte_190440DC5[v5]))();
  }
}

_QWORD *sub_18FE166A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_retain();
    v9 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v9 = 0;
  }
  *((_BYTE *)a1 + v5) = v9;
  return a1;
}

_QWORD *sub_18FE16780(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_release();
    else
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((_BYTE *)a1 + v7) = 1;
      swift_retain();
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 0;
    }
  }
  return a1;
}

_OWORD *sub_18FE16910(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_OWORD *sub_18FE169E4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_release();
    else
      (*(void (**)(_OWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_18FE16B70(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 0x10uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_18FE16C34 + 4 * byte_190440DE8[(v4 - 1)]))();
}

void sub_18FE16C80(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10)
    v5 = 16;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_18FE16E28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 0x10uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_18FE16E70 + 4 * byte_190440DF6[v3]))();
}

void sub_18FE16EB8(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 0x10uLL)
    v4 = 16;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

void static NearbyPeerPayment.reportFailureDiagnostic(_:for:transactionIdentifier:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  _QWORD v20[6];

  v7 = objc_msgSend(objc_allocWithZone((Class)PKPeerPaymentFailureDiagnostic), sel_init);
  objc_msgSend(v7, sel_setFlowType_, 0);
  objc_msgSend(v7, sel_setRole_, a2);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = (void *)sub_1903D0124();

  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v7, sel_setError_, v12);

  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v13);
  objc_msgSend(v7, sel_setReasonCode_, (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14));
  if (a4)
    v15 = (void *)sub_1903D05A4();
  else
    v15 = 0;
  objc_msgSend(v7, sel_setTransactionIdentifier_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (v16)
  {
    v17 = v16;
    v20[4] = sub_18FE17174;
    v20[5] = 0;
    v20[0] = MEMORY[0x1E0C809B0];
    v20[1] = 1107296256;
    v20[2] = sub_18FCDDD28;
    v20[3] = &block_descriptor_40;
    v18 = _Block_copy(v20);
    v19 = v7;
    objc_msgSend(v17, sel_reportFailureDiagnostic_completion_, v19, v18);
    _Block_release(v18);

  }
  else
  {
    __break(1u);
  }
}

void sub_18FE17174(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  NSObject *oslog;

  if (qword_1EE1BCF78 != -1)
    swift_once();
  v3 = sub_1903D0340();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EE1BF5F0);
  v4 = a2;
  v5 = a2;
  oslog = sub_1903D0328();
  v6 = sub_1903D0940();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 67109378;
    sub_1903D0ACC();
    *(_WORD *)(v7 + 8) = 2112;
    if (a2)
    {
      v9 = a2;
      v10 = _swift_stdlib_bridgeErrorToNSError();
      sub_1903D0ACC();
    }
    else
    {
      sub_1903D0ACC();
      v10 = 0;
    }
    *v8 = v10;

    _os_log_impl(&dword_18FC92000, oslog, v6, "Reported failure diagnostic with success: %{BOOL}d %@", (uint8_t *)v7, 0x12u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v8, -1, -1);
    MEMORY[0x19400D804](v7, -1, -1);

  }
  else
  {

  }
}

double NearbyPeerPayment.ErrorUIStyle.vfxColor.getter()
{
  _BYTE *v0;
  unsigned int v1;
  double result;

  if (*v0)
    v1 = -1;
  else
    v1 = 0;
  *(_QWORD *)&result = vbslq_s8((int8x16_t)vdupq_n_s32(v1), (int8x16_t)xmmword_190440EA0, (int8x16_t)xmmword_190440E90).u64[0];
  return result;
}

BOOL static NearbyPeerPayment.ErrorUIStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NearbyPeerPayment.ErrorUIStyle.hash(into:)()
{
  return sub_1903D0FA0();
}

uint64_t NearbyPeerPayment.ErrorUIStyle.hashValue.getter()
{
  sub_1903D0F94();
  sub_1903D0FA0();
  return sub_1903D0FC4();
}

unint64_t NearbyPeerPayment.FeatureError.description.getter()
{
  void **v0;
  void *v1;
  unint64_t result;
  id v3;
  id v4;

  v1 = *v0;
  result = 0xD000000000000014;
  switch((unint64_t)*v0)
  {
    case 0uLL:
      return result;
    case 1uLL:
    case 5uLL:
      result = 0xD00000000000001CLL;
      break;
    case 2uLL:
      result = 0xD000000000000022;
      break;
    case 3uLL:
      result = 0xD000000000000019;
      break;
    case 4uLL:
      result = 0xD00000000000001BLL;
      break;
    default:
      v3 = v1;
      sub_1903D0BF8();
      swift_bridgeObjectRelease();
      v4 = v1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0A0);
      sub_1903D061C();
      sub_1903D067C();
      swift_bridgeObjectRelease();
      sub_18FE1A050(v1);
      result = 0xD000000000000015;
      break;
  }
  return result;
}

uint64_t NearbyPeerPayment.FeatureError.errorDescription.getter()
{
  _QWORD *v0;
  id v1;
  void *v2;
  unint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v13;
  void *v14;

  switch(*v0)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      goto LABEL_5;
    default:
      v1 = NearbyPeerPayment.FeatureError.nsError.getter();
      if (!v1)
        goto LABEL_9;
      v2 = v1;
      v3 = (unint64_t)objc_msgSend(v1, sel_code);
      if ((v3 & 0x8000000000000000) != 0)
      {

      }
      else
      {
        v4 = v3;

        if (v4 == 40325)
          goto LABEL_5;
      }
LABEL_9:
      v13 = NearbyPeerPayment.FeatureError.nsError.getter();
      if (v13)
      {
        v14 = v13;
        v10 = objc_msgSend(v13, sel_localizedFailureReason);

        if (v10)
        {
          v11 = sub_1903D05C8();
          goto LABEL_7;
        }
      }
LABEL_5:
      v5 = PKPassKitBundle();
      if (!v5)
      {
        __break(1u);
        JUMPOUT(0x18FE177A4);
      }
      v6 = v5;
      v7 = (void *)sub_1903D05A4();
      v8 = (void *)sub_1903D05A4();
      v9 = (void *)sub_1903D05A4();
      v10 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, v8, v9);

      v11 = sub_1903D05C8();
      swift_bridgeObjectRelease();
LABEL_7:

      return v11;
  }
}

id NearbyPeerPayment.FeatureError.nsError.getter()
{
  void **v0;
  void *v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;

  v1 = *v0;
  if ((unint64_t)*v0 >= 6)
  {
    v18 = v1;
    v17 = (id)sub_1903D0124();
    sub_18FE1A050(v1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD5F0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19043E310;
    *(_QWORD *)(inited + 32) = sub_1903D05C8();
    *(_QWORD *)(inited + 40) = v3;
    v4 = NearbyPeerPayment.FeatureError.errorDescription.getter();
    v6 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    if (v5)
      v7 = v4;
    else
      v7 = 7104878;
    if (v5)
      v8 = v5;
    else
      v8 = 0xE300000000000000;
    *(_QWORD *)(inited + 48) = v7;
    *(_QWORD *)(inited + 56) = v8;
    *(_QWORD *)(inited + 80) = sub_1903D05C8();
    *(_QWORD *)(inited + 88) = v9;
    v10 = NearbyPeerPayment.FeatureError.recoverySuggestion.getter();
    *(_QWORD *)(inited + 120) = v6;
    if (v11)
      v12 = v10;
    else
      v12 = 7104878;
    if (v11)
      v13 = v11;
    else
      v13 = 0xE300000000000000;
    *(_QWORD *)(inited + 96) = v12;
    *(_QWORD *)(inited + 104) = v13;
    sub_18FD4F84C(inited);
    v14 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v15 = (void *)sub_1903D05A4();
    v16 = (void *)sub_1903D04CC();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v14, sel_initWithDomain_code_userInfo_, v15, -1, v16);

  }
  return v17;
}

uint64_t NearbyPeerPayment.FeatureError.recoverySuggestion.getter()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v13;
  void *v14;

  v1 = 0;
  switch(*v0)
  {
    case 0:
    case 2:
    case 3:
    case 5:
      goto LABEL_5;
    case 1:
    case 4:
      return v1;
    default:
      v2 = (void *)NearbyPeerPayment.FeatureError.nsError.getter();
      if (!v2)
        goto LABEL_10;
      v3 = v2;
      v4 = (unint64_t)objc_msgSend(v2, sel_code);
      if ((v4 & 0x8000000000000000) != 0)
      {

      }
      else
      {
        v5 = v4;

        if (v5 == 40325)
        {
LABEL_5:
          v6 = PKPassKitBundle();
          if (!v6)
          {
            __break(1u);
            JUMPOUT(0x18FE17B60);
          }
          v7 = v6;
          v8 = (void *)sub_1903D05A4();
          v9 = (void *)sub_1903D05A4();
          v10 = (void *)sub_1903D05A4();
          v11 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v8, v9, v10);

          v1 = sub_1903D05C8();
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
      }
LABEL_10:
      v13 = (void *)NearbyPeerPayment.FeatureError.nsError.getter();
      if (v13)
      {
        v14 = v13;
        v11 = objc_msgSend(v13, sel_localizedRecoverySuggestion);

        if (v11)
        {
          v1 = sub_1903D05C8();
LABEL_7:

          return v1;
        }
      }
      return 0;
  }
}

void NearbyPeerPayment.FeatureError.uiStyle.getter(BOOL *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1 == 4;
}

BOOL NearbyPeerPayment.FeatureError.retriable.getter()
{
  _QWORD *v0;

  return *v0 == 4;
}

void sub_18FE17BA0(BOOL *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1 == 4;
}

BOOL sub_18FE17BB4()
{
  _QWORD *v0;

  return *v0 == 4;
}

uint64_t static NearbyPeerPayment.AirdropError.isAirDropDomain(_:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x800000019045DE40)
    return 1;
  else
    return sub_1903D0ED4();
}

unint64_t NearbyPeerPayment.AirdropError.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v1 = sub_1903D0388();
  v22 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v21 - v5;
  v7 = sub_1903D03A0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for NearbyPeerPayment.AirdropError();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FE1A09C(v0, (uint64_t)v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v18 = v22;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v6, v16, v1);
      v23 = 0;
      v24 = 0xE000000000000000;
      sub_1903D0BF8();
      swift_bridgeObjectRelease();
      v23 = 0xD00000000000001BLL;
      v24 = 0x800000019045DE80;
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v4, v6, v1);
      sub_1903D061C();
      sub_1903D067C();
      swift_bridgeObjectRelease();
      v19 = v23;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v1);
    }
    else
    {
      return 0xD00000000000001ALL;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v16, v7);
    v23 = 0;
    v24 = 0xE000000000000000;
    sub_1903D0BF8();
    swift_bridgeObjectRelease();
    v23 = 0xD00000000000001ELL;
    v24 = 0x800000019045DEA0;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    sub_1903D061C();
    sub_1903D067C();
    swift_bridgeObjectRelease();
    v19 = v23;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  return v19;
}

id NearbyPeerPayment.AirdropError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  char **v27;
  id result;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  int v34;
  int v35;
  void (*v36)(char *, uint64_t);
  char v37;
  void (*v38)(char *, uint64_t);
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;

  v1 = sub_1903D0388();
  v46 = *(_QWORD *)(v1 - 8);
  v47 = v1;
  v2 = MEMORY[0x1E0C80A78](v1);
  v45 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v48 = (char *)&v45 - v4;
  v5 = sub_1903D0364();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1903D03A0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v45 - v14;
  v16 = type metadata accessor for NearbyPeerPayment.AirdropError();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FE1A09C(v0, (uint64_t)v18);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v48 = (char *)v0;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v18, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    v25 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
    if (v25 != *MEMORY[0x1E0D970E0])
    {
      v34 = v25;
      v35 = *MEMORY[0x1E0D970F0];
      v36 = *(void (**)(char *, uint64_t))(v10 + 8);
      v36(v15, v9);
      v27 = &selRef_isEqualToPaymentSummaryItem_;
      if (v34 != v35)
        v36(v13, v9);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v10 + 96))(v13, v9);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v13, v5);
    v27 = &selRef_isEqualToPaymentSummaryItem_;
    if (sub_1903D034C() == 0xD000000000000016 && v26 == 0x800000019045DE40)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v37 = sub_1903D0ED4();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0)
        goto LABEL_18;
    }
    if (sub_1903D0358() == 1)
    {
      sub_18FE18474();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
LABEL_18:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    goto LABEL_21;
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_9:
    v27 = &selRef_isEqualToPaymentSummaryItem_;
    goto LABEL_21;
  }
  v21 = v46;
  v20 = v47;
  v22 = v48;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v48, v18, v47);
  v23 = v45;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v45, v22, v20);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v23, v20);
  if (v24 == *MEMORY[0x1E0D96EE8])
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v20);
    goto LABEL_9;
  }
  v27 = &selRef_isEqualToPaymentSummaryItem_;
  if (v24 == *MEMORY[0x1E0D96EF0])
  {
    result = PKPassKitBundle();
    if (!result)
      goto LABEL_24;
    v29 = result;
    v30 = (void *)sub_1903D05A4();
    v31 = (void *)sub_1903D05A4();
    v32 = (void *)sub_1903D05A4();
    v33 = objc_msgSend(v29, sel_localizedStringForKey_value_table_, v30, v31, v32);

    sub_1903D05C8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v20);
  }
  else
  {
    v38 = *(void (**)(char *, uint64_t))(v21 + 8);
    v38(v22, v20);
    v38(v23, v20);
  }
LABEL_21:
  result = PKPassKitBundle();
  if (result)
  {
    v39 = result;
    v40 = (void *)sub_1903D05A4();
    v41 = (void *)sub_1903D05A4();
    v42 = (void *)sub_1903D05A4();
    v43 = objc_msgSend(v39, v27[459], v40, v41, v42);

    v44 = sub_1903D05C8();
    swift_bridgeObjectRelease();

    return (id)v44;
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

id sub_18FE18474()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id result;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  char v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  unsigned int v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;

  v0 = PKCurrentRegion();
  if (v0)
  {
    v1 = v0;
    v2 = sub_1903D05C8();
    v4 = v3;

  }
  else
  {
    v2 = 0;
    v4 = 0;
  }
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!v5)
  {
    result = (id)swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_32;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, sel_account);

  result = PKPassKitBundle();
  if (!result)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v9 = result;
  v10 = (void *)sub_1903D05A4();
  v11 = (void *)sub_1903D05A4();
  v12 = (void *)sub_1903D05A4();
  v13 = objc_msgSend(v9, sel_localizedStringForKey_value_table_, v10, v11, v12);

  v14 = sub_1903D05C8();
  if (!v4)
    goto LABEL_16;
  if (v2 == 21333 && v4 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v15 = sub_1903D0ED4();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_16:
    result = PKPassKitBundle();
    if (result)
    {
      v17 = result;
      v18 = (void *)sub_1903D05A4();
      v19 = (void *)sub_1903D05A4();
      v20 = (void *)sub_1903D05A4();
      v21 = objc_msgSend(v17, sel_localizedStringForKey_value_table_, v18, v19, v20);

      sub_1903D05C8();
LABEL_25:

      return (id)v14;
    }
    goto LABEL_33;
  }
LABEL_11:
  if (v7)
  {
    v7 = v7;
    v16 = objc_msgSend(v7, sel_state);
    if (v16 == (id)3)
    {
      result = PKPassKitBundle();
      if (result)
      {
LABEL_24:
        v29 = result;
        v30 = (void *)sub_1903D05A4();
        v31 = (void *)sub_1903D05A4();
        v32 = (void *)sub_1903D05A4();
        v21 = objc_msgSend(v29, sel_localizedStringForKey_value_table_, v30, v31, v32);

        sub_1903D05C8();
        goto LABEL_25;
      }
      goto LABEL_38;
    }
    if (v16 != (id)2)
    {

      return (id)v14;
    }
    result = PKPassKitBundle();
    if (result)
      goto LABEL_24;
    goto LABEL_35;
  }
  swift_bridgeObjectRelease();
  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!result)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v22 = result;
  v23 = objc_msgSend(result, sel_passbookHasBeenDeleted);

  result = PKPassKitBundle();
  v24 = result;
  if (v23)
  {
    if (!result)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v25 = (void *)sub_1903D05A4();
    v26 = (void *)sub_1903D05A4();
    v27 = (void *)sub_1903D05A4();
    v28 = objc_msgSend(v24, sel_localizedStringForKey_value_table_, v25, v26, v27);

    v14 = sub_1903D05C8();
    result = PKPassKitBundle();
    if (!result)
    {
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
LABEL_30:
    v37 = result;
    v38 = (void *)sub_1903D05A4();
    v39 = (void *)sub_1903D05A4();
    v40 = (void *)sub_1903D05A4();
    v41 = objc_msgSend(v37, sel_localizedStringForKey_value_table_, v38, v39, v40);

    sub_1903D05C8();
    return (id)v14;
  }
  if (!result)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v33 = (void *)sub_1903D05A4();
  v34 = (void *)sub_1903D05A4();
  v35 = (void *)sub_1903D05A4();
  v36 = objc_msgSend(v24, sel_localizedStringForKey_value_table_, v33, v34, v35);

  v14 = sub_1903D05C8();
  result = PKPassKitBundle();
  if (result)
    goto LABEL_30;
LABEL_40:
  __break(1u);
  return result;
}

id NearbyPeerPayment.AirdropError.recoverySuggestion.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int EnumCaseMultiPayload;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id result;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, uint64_t);
  char v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;

  v1 = sub_1903D0388();
  v2 = *(_QWORD *)(v1 - 8);
  v43 = v1;
  v44 = v2;
  v3 = MEMORY[0x1E0C80A78](v1);
  v42 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v45 = (char *)&v42 - v5;
  v6 = sub_1903D0364();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1903D03A0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v42 - v15;
  v17 = type metadata accessor for NearbyPeerPayment.AirdropError();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FE1A09C(v0, (uint64_t)v19);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v19, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v14, v10) != *MEMORY[0x1E0D970E0])
    {
      v39 = *(void (**)(char *, uint64_t))(v11 + 8);
      v39(v16, v10);
      v39(v14, v10);
      return 0;
    }
    v44 = v10;
    v45 = v16;
    v43 = v11;
    (*(void (**)(char *, uint64_t))(v11 + 96))(v14, v10);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v14, v6);
    if (sub_1903D034C() == 0xD000000000000016 && v32 == 0x800000019045DE40)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v40 = sub_1903D0ED4();
      swift_bridgeObjectRelease();
      if ((v40 & 1) == 0)
      {
LABEL_17:
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v44);
        return 0;
      }
    }
    if (sub_1903D0358() == 1)
    {
      sub_18FE18474();
      v31 = v41;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v44);
      swift_bridgeObjectRelease();
      return (id)v31;
    }
    goto LABEL_17;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v22 = v44;
    v21 = v45;
    v23 = v43;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v45, v19, v43);
    v24 = v42;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v42, v21, v23);
    if ((*(unsigned int (**)(char *, uint64_t))(v22 + 88))(v24, v23) == *MEMORY[0x1E0D96EF0])
    {
      result = PKPassKitBundle();
      if (result)
      {
        v26 = result;
        v27 = (void *)sub_1903D05A4();
        v28 = (void *)sub_1903D05A4();
        v29 = (void *)sub_1903D05A4();
        v30 = objc_msgSend(v26, sel_localizedStringForKey_value_table_, v27, v28, v29);

        v31 = sub_1903D05C8();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v23);
        return (id)v31;
      }
      goto LABEL_21;
    }
    v38 = *(void (**)(char *, uint64_t))(v22 + 8);
    v38(v21, v23);
    v38(v24, v23);
    return 0;
  }
  result = PKPassKitBundle();
  if (result)
  {
    v33 = result;
    v34 = (void *)sub_1903D05A4();
    v35 = (void *)sub_1903D05A4();
    v36 = (void *)sub_1903D05A4();
    v37 = objc_msgSend(v33, sel_localizedStringForKey_value_table_, v34, v35, v36);

    v31 = sub_1903D05C8();
    return (id)v31;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

id NearbyPeerPayment.AirdropError.nsError.getter()
{
  uint64_t inited;
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD5F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19043E310;
  *(_QWORD *)(inited + 32) = sub_1903D05C8();
  *(_QWORD *)(inited + 40) = v1;
  v2 = NearbyPeerPayment.AirdropError.errorDescription.getter();
  v4 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  if (v3)
    v5 = (uint64_t)v2;
  else
    v5 = 7104878;
  if (v3)
    v6 = v3;
  else
    v6 = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = v5;
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 80) = sub_1903D05C8();
  *(_QWORD *)(inited + 88) = v7;
  v8 = NearbyPeerPayment.AirdropError.recoverySuggestion.getter();
  *(_QWORD *)(inited + 120) = v4;
  if (v9)
    v10 = (uint64_t)v8;
  else
    v10 = 7104878;
  if (v9)
    v11 = v9;
  else
    v11 = 0xE300000000000000;
  *(_QWORD *)(inited + 96) = v10;
  *(_QWORD *)(inited + 104) = v11;
  sub_18FD4F84C(inited);
  v12 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v13 = (void *)sub_1903D05A4();
  v14 = (void *)sub_1903D04CC();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v12, sel_initWithDomain_code_userInfo_, v13, -1, v14);

  return v15;
}

uint64_t NearbyPeerPayment.AirdropError.diagnosticCode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int EnumCaseMultiPayload;
  int v14;
  uint64_t result;
  int v16;
  int v18;
  uint64_t v20;

  v1 = v0;
  v2 = sub_1903D03A0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1903D0388();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NearbyPeerPayment.AirdropError();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FE1A09C(v1, (uint64_t)v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v14 = EnumCaseMultiPayload;
    result = 0;
    if (v14 != 1)
      return result;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
    if (v16 != *MEMORY[0x1E0D96EE8])
    {
      if (v16 != *MEMORY[0x1E0D96F00] && v16 != *MEMORY[0x1E0D96EF0])
      {
        if (v16 != *MEMORY[0x1E0D96EE0])
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          return 0;
        }
        return 1;
      }
      return 5;
    }
    return 4;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v18 == *MEMORY[0x1E0D97110])
    return 4;
  if (v18 == *MEMORY[0x1E0D970F0] || v18 == *MEMORY[0x1E0D970F8])
    return 5;
  if (v18 == *MEMORY[0x1E0D97100])
    return 4;
  if (v18 == *MEMORY[0x1E0D970E8])
    return 1;
  if (v18 == *MEMORY[0x1E0D970D8])
    return 2;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

void NearbyPeerPayment.AirdropError.uiStyle.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t NearbyPeerPayment.AirdropError.retriable.getter()
{
  return 0;
}

unint64_t static NearbyPeerPayment.ForwardedError.domain.getter()
{
  return 0xD000000000000020;
}

unint64_t NearbyPeerPayment.ForwardedError.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001FLL;
  else
    return 0xD000000000000016;
}

id NearbyPeerPayment.ForwardedError.errorDescription.getter()
{
  id result;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  result = PKPassKitBundle();
  if (result)
  {
    v1 = result;
    v2 = (void *)sub_1903D05A4();
    v3 = (void *)sub_1903D05A4();
    v4 = (void *)sub_1903D05A4();
    v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

    v6 = sub_1903D05C8();
    swift_bridgeObjectRelease();

    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id NearbyPeerPayment.ForwardedError.recoverySuggestion.getter()
{
  id result;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  result = PKPassKitBundle();
  if (result)
  {
    v1 = result;
    v2 = (void *)sub_1903D05A4();
    v3 = (void *)sub_1903D05A4();
    v4 = (void *)sub_1903D05A4();
    v5 = objc_msgSend(v1, sel_localizedStringForKey_value_table_, v2, v3, v4);

    v6 = sub_1903D05C8();
    swift_bridgeObjectRelease();

    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id NearbyPeerPayment.ForwardedError.nsError.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD5F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19043E310;
  *(_QWORD *)(inited + 32) = sub_1903D05C8();
  *(_QWORD *)(inited + 40) = v3;
  v4 = NearbyPeerPayment.ForwardedError.errorDescription.getter();
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  if (v5)
    v7 = (uint64_t)v4;
  else
    v7 = 7104878;
  if (v5)
    v8 = v5;
  else
    v8 = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 80) = sub_1903D05C8();
  *(_QWORD *)(inited + 88) = v9;
  v10 = NearbyPeerPayment.ForwardedError.recoverySuggestion.getter();
  *(_QWORD *)(inited + 120) = v6;
  if (v11)
    v12 = (uint64_t)v10;
  else
    v12 = 7104878;
  if (v11)
    v13 = v11;
  else
    v13 = 0xE300000000000000;
  *(_QWORD *)(inited + 96) = v12;
  *(_QWORD *)(inited + 104) = v13;
  sub_18FD4F84C(inited);
  v14 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v15 = (void *)sub_1903D05A4();
  v16 = (void *)sub_1903D04CC();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v14, sel_initWithDomain_code_userInfo_, v15, v1, v16);

  return v17;
}

uint64_t NearbyPeerPayment.ForwardedError.codableError.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  if (NearbyPeerPayment.ForwardedError.nsError.getter())
  {
    sub_1903D0370();
    v2 = sub_1903D0364();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
  }
  else
  {
    v4 = sub_1903D0364();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
}

void NearbyPeerPayment.ForwardedError.uiStyle.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t NearbyPeerPayment.ForwardedError.retriable.getter()
{
  return 0;
}

void sub_18FE19878(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

unint64_t sub_18FE1988C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001FLL;
  else
    return 0xD000000000000016;
}

uint64_t sub_18FE198D0(uint64_t a1, uint64_t a2)
{
  return sub_18FE19A0C(a1, a2, (void (*)(void))sub_18FE1ACA0);
}

unint64_t NearbyPeerPayment.InternalError.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000030;
  else
    return 0xD000000000000027;
}

uint64_t NearbyPeerPayment.InternalError.diagnosticCode.getter()
{
  _BYTE *v0;

  if (*v0)
    return 6;
  else
    return 2;
}

id NearbyPeerPayment.InternalError.nsError.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;

  v1 = *v0;
  v2 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v3 = (void *)sub_1903D05A4();
  v4 = objc_msgSend(v2, sel_initWithDomain_code_userInfo_, v3, v1, 0);

  return v4;
}

uint64_t NearbyPeerPayment.InternalError.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

PassKitCore::NearbyPeerPayment::InternalError_optional __swiftcall NearbyPeerPayment.InternalError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (PassKitCore::NearbyPeerPayment::InternalError_optional)rawValue;
}

_QWORD *sub_18FE199D4@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_18FE199F4(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_18FE19A00(uint64_t a1, uint64_t a2)
{
  return sub_18FE19A0C(a1, a2, (void (*)(void))sub_18FE1AC5C);
}

uint64_t sub_18FE19A0C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_18FCD64D0();
  return sub_1903D0F7C();
}

uint64_t sub_18FE19A50()
{
  _BYTE *v0;

  if (*v0)
    return 6;
  else
    return 2;
}

id sub_18FE19A68()
{
  unsigned __int8 *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;

  v1 = *v0;
  v2 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v3 = (void *)sub_1903D05A4();
  v4 = objc_msgSend(v2, sel_initWithDomain_code_userInfo_, v3, v1, 0);

  return v4;
}

unint64_t sub_18FE19AE4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000030;
  else
    return 0xD000000000000027;
}

uint64_t _s11PassKitCore17NearbyPeerPaymentO12AirdropErrorO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  char *v23;
  char v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_1903D0388();
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x1E0C80A78](v4);
  v29 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1903D03A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NearbyPeerPayment.AirdropError();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1C1120);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_18FE1A09C(a1, (uint64_t)v19);
  sub_18FE1A09C(a2, v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_18FE1A09C((uint64_t)v19, (uint64_t)v15);
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v20, v6);
      v24 = MEMORY[0x19400A978](v15, v9);
      v25 = *(void (**)(char *, uint64_t))(v7 + 8);
      v25(v9, v6);
      v26 = v15;
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_18FE1A09C((uint64_t)v19, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = v29;
      v22 = v30;
      v6 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v29, v20, v31);
      v24 = MEMORY[0x19400A960](v13, v23);
      v25 = *(void (**)(char *, uint64_t))(v22 + 8);
      v25(v23, v6);
      v26 = v13;
LABEL_12:
      v25(v26, v6);
      sub_18FE1A92C((uint64_t)v19);
      return v24 & 1;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_10:
    sub_18FE1ACE4((uint64_t)v19);
    v24 = 0;
    return v24 & 1;
  }
  sub_18FE1A92C((uint64_t)v19);
  v24 = 1;
  return v24 & 1;
}

uint64_t _s11PassKitCore17NearbyPeerPaymentO12FeatureErrorO2eeoiySbAE_AEtFZ_0(void **a1, id *a2)
{
  void *v2;
  id v3;
  char v4;
  void *v6;
  void *v7;

  v2 = *a1;
  v3 = *a2;
  switch((unint64_t)*a1)
  {
    case 0uLL:
      if (v3)
        goto LABEL_13;
      goto LABEL_11;
    case 1uLL:
      if (v3 != (id)1)
        goto LABEL_13;
      goto LABEL_11;
    case 2uLL:
      goto LABEL_13;
    case 3uLL:
      if (v3 != (id)3)
        goto LABEL_13;
      goto LABEL_11;
    case 4uLL:
      if (v3 != (id)4)
        goto LABEL_13;
      goto LABEL_11;
    case 5uLL:
      if (v3 != (id)5)
        goto LABEL_13;
LABEL_11:
      sub_18FE1AD24(*a2);
      v4 = 1;
      break;
    default:
      if ((unint64_t)v3 >= 6)
      {
        sub_18FDFC344();
        sub_18FE1AD24(v3);
        sub_18FE1AD24(v2);
        sub_18FE1AD24(v3);
        sub_18FE1AD24(v2);
        v6 = (void *)sub_1903D0124();
        v7 = (void *)sub_1903D0124();
        v4 = sub_1903D0A54();

        sub_18FE1A050(v3);
        sub_18FE1A050(v2);
      }
      else
      {
LABEL_13:
        sub_18FE1AD24(*a2);
        sub_18FE1AD24(v2);
        v4 = 0;
      }
      break;
  }
  sub_18FE1A050(v2);
  sub_18FE1A050(v3);
  return v4 & 1;
}

id _s11PassKitCore17NearbyPeerPaymentO15amountFormatterSo08NSNumberH0CvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;

  v0 = sub_1903D0274();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  objc_msgSend(v4, sel_setMaximumFractionDigits_, 2);
  objc_msgSend(v4, sel_setMinimumFractionDigits_, 2);
  objc_msgSend(v4, sel_setUsesGroupingSeparator_, 0);
  objc_msgSend(v4, sel_setNumberStyle_, 1);
  sub_1903D025C();
  sub_1903D0268();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6)
  {
    v7 = (void *)sub_1903D05A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v4, sel_setDecimalSeparator_, v7);

  return v4;
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

void sub_18FE1A050(id a1)
{
  if ((unint64_t)a1 >= 6)

}

uint64_t type metadata accessor for NearbyPeerPayment.AirdropError()
{
  uint64_t result;

  result = qword_1EE1C1100;
  if (!qword_1EE1C1100)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_18FE1A09C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NearbyPeerPayment.AirdropError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_18FE1A0E4()
{
  unint64_t result;

  result = qword_1EE1C10A0;
  if (!qword_1EE1C10A0)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for NearbyPeerPayment.ErrorUIStyle, &type metadata for NearbyPeerPayment.ErrorUIStyle);
    atomic_store(result, (unint64_t *)&qword_1EE1C10A0);
  }
  return result;
}

uint64_t sub_18FE1A128(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_18FD33ECC(a1, a2, a3, (uint64_t (*)(void))sub_18FE1A144, (uint64_t (*)(void))sub_18FE1A188, (uint64_t (*)(void))sub_18FE1A1CC);
}

unint64_t sub_18FE1A144()
{
  unint64_t result;

  result = qword_1EE1C10A8;
  if (!qword_1EE1C10A8)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for NearbyPeerPayment.FeatureError, &type metadata for NearbyPeerPayment.FeatureError);
    atomic_store(result, (unint64_t *)&qword_1EE1C10A8);
  }
  return result;
}

unint64_t sub_18FE1A188()
{
  unint64_t result;

  result = qword_1EE1C10B0;
  if (!qword_1EE1C10B0)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for NearbyPeerPayment.FeatureError, &type metadata for NearbyPeerPayment.FeatureError);
    atomic_store(result, (unint64_t *)&qword_1EE1C10B0);
  }
  return result;
}

unint64_t sub_18FE1A1CC()
{
  unint64_t result;

  result = qword_1EE1C10B8;
  if (!qword_1EE1C10B8)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for NearbyPeerPayment.FeatureError, &type metadata for NearbyPeerPayment.FeatureError);
    atomic_store(result, (unint64_t *)&qword_1EE1C10B8);
  }
  return result;
}

uint64_t sub_18FE1A214(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_18FE1A29C(&qword_1EE1C10C0, (uint64_t)&protocol conformance descriptor for NearbyPeerPayment.AirdropError);
  a1[2] = sub_18FE1A29C(&qword_1EE1C10C8, (uint64_t)"argR̢\v");
  result = sub_18FE1A29C(&qword_1EE1C10D0, (uint64_t)&protocol conformance descriptor for NearbyPeerPayment.AirdropError);
  a1[3] = result;
  return result;
}

uint64_t sub_18FE1A278()
{
  return sub_18FE1A29C(&qword_1EE1C10D8, (uint64_t)&protocol conformance descriptor for NearbyPeerPayment.AirdropError);
}

uint64_t sub_18FE1A29C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for NearbyPeerPayment.AirdropError();
    result = MEMORY[0x19400D72C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_18FE1A2E0()
{
  unint64_t result;

  result = qword_1EE1C10E0;
  if (!qword_1EE1C10E0)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for NearbyPeerPayment.ForwardedError, &type metadata for NearbyPeerPayment.ForwardedError);
    atomic_store(result, (unint64_t *)&qword_1EE1C10E0);
  }
  return result;
}

uint64_t sub_18FE1A324(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_18FD33ECC(a1, a2, a3, (uint64_t (*)(void))sub_18FE1A340, (uint64_t (*)(void))sub_18FE1A384, (uint64_t (*)(void))sub_18FE1A2E0);
}

unint64_t sub_18FE1A340()
{
  unint64_t result;

  result = qword_1EE1C10E8;
  if (!qword_1EE1C10E8)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for NearbyPeerPayment.ForwardedError, &type metadata for NearbyPeerPayment.ForwardedError);
    atomic_store(result, (unint64_t *)&qword_1EE1C10E8);
  }
  return result;
}

unint64_t sub_18FE1A384()
{
  unint64_t result;

  result = qword_1EE1C10F0;
  if (!qword_1EE1C10F0)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for NearbyPeerPayment.ForwardedError, &type metadata for NearbyPeerPayment.ForwardedError);
    atomic_store(result, (unint64_t *)&qword_1EE1C10F0);
  }
  return result;
}

unint64_t sub_18FE1A3D0()
{
  unint64_t result;

  result = qword_1EE1C10F8;
  if (!qword_1EE1C10F8)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for NearbyPeerPayment.InternalError, &type metadata for NearbyPeerPayment.InternalError);
    atomic_store(result, (unint64_t *)&qword_1EE1C10F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyPeerPayment()
{
  return &type metadata for NearbyPeerPayment;
}

ValueMetadata *type metadata accessor for NearbyPeerPayment.ErrorUIStyle()
{
  return &type metadata for NearbyPeerPayment.ErrorUIStyle;
}

uint64_t dispatch thunk of NearbyPeerPayment.DisplayableError.nsError.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NearbyPeerPayment.DisplayableError.uiStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of NearbyPeerPayment.DisplayableError.retriable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of NearbyPeerPayment.DiagnosticError.diagnosticCode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NearbyPeerPayment.DiagnosticError.nsError.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

_QWORD *initializeBufferWithCopyOfBuffer for NearbyPeerPayment.FeatureError(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for NearbyPeerPayment.FeatureError(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for NearbyPeerPayment.FeatureError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
      v7 = v4;
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    v5 = v4;
    v6 = *a1;
    *a1 = v4;

  }
  return a1;
}

void **assignWithTake for NearbyPeerPayment.FeatureError(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyPeerPayment.FeatureError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF9 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483642);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 5;
  if (v4 >= 7)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NearbyPeerPayment.FeatureError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 5;
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyPeerPayment.FeatureError()
{
  return &type metadata for NearbyPeerPayment.FeatureError;
}

uint64_t *initializeBufferWithCopyOfBuffer for NearbyPeerPayment.AirdropError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_1903D0388();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_1903D03A0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for NearbyPeerPayment.AirdropError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_1903D0388();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_1903D03A0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

void *initializeWithCopy for NearbyPeerPayment.AirdropError(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_1903D0388();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1903D03A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for NearbyPeerPayment.AirdropError(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_18FE1A92C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_1903D0388();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1903D03A0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_18FE1A92C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NearbyPeerPayment.AirdropError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for NearbyPeerPayment.AirdropError(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_1903D0388();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1903D03A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for NearbyPeerPayment.AirdropError(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_18FE1A92C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_1903D0388();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1903D03A0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_18FE1AB00()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1903D03A0();
  if (v1 <= 0x3F)
  {
    result = sub_1903D0388();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyPeerPayment.ForwardedError()
{
  return &type metadata for NearbyPeerPayment.ForwardedError;
}

uint64_t _s11PassKitCore17NearbyPeerPaymentO12ErrorUIStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_18FE1ABDC + 4 * byte_190440EC1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_18FE1AC10 + 4 * byte_190440EBC[v4]))();
}

uint64_t sub_18FE1AC10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FE1AC18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FE1AC20);
  return result;
}

uint64_t sub_18FE1AC2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FE1AC34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_18FE1AC38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FE1AC40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NearbyPeerPayment.InternalError()
{
  return &type metadata for NearbyPeerPayment.InternalError;
}

unint64_t sub_18FE1AC5C()
{
  unint64_t result;

  result = qword_1EE1C1110;
  if (!qword_1EE1C1110)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for NearbyPeerPayment.InternalError, &type metadata for NearbyPeerPayment.InternalError);
    atomic_store(result, (unint64_t *)&qword_1EE1C1110);
  }
  return result;
}

unint64_t sub_18FE1ACA0()
{
  unint64_t result;

  result = qword_1EE1C1118;
  if (!qword_1EE1C1118)
  {
    result = MEMORY[0x19400D72C](&protocol conformance descriptor for NearbyPeerPayment.ForwardedError, &type metadata for NearbyPeerPayment.ForwardedError);
    atomic_store(result, (unint64_t *)&qword_1EE1C1118);
  }
  return result;
}

uint64_t sub_18FE1ACE4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1C1120);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_18FE1AD24(id result)
{
  if ((unint64_t)result >= 6)
    return result;
  return result;
}

id ProvisioningCarKeyStepTransact.__allocating_init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return ProvisioningCarKeyStepTransact.init(context:credential:sharedState:)(a1, a2, a3);
}

id ProvisioningCarKeyStepTransact.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  objc_super v8;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = &v3[OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_commonCompletion];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_sessionHandle] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_session] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_timeout] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_context] = a1;
  LOBYTE(v5) = *(_BYTE *)(a2 + 24);
  v6 = &v3[OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_credential];
  *(_OWORD *)v6 = *(_OWORD *)a2;
  *((_QWORD *)v6 + 2) = v4;
  v6[24] = (char)v5;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_sharedState] = a3;
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for ProvisioningCarKeyStepTransact();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for ProvisioningCarKeyStepTransact()
{
  return objc_opt_self();
}

uint64_t sub_18FE1AE50(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v3 = sub_1903D03B8();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1903D03D0();
  v7 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v10 = (void *)sub_1903D097C();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_18FE1CCBC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = &block_descriptor_41;
  v12 = _Block_copy(aBlock);
  v13 = a1;
  v14 = v1;
  swift_release();
  sub_1903D03C4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCD5E34((unint64_t *)&qword_1EE1C0730, v4, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
  sub_18FD4A258((unint64_t *)&qword_1EE1C0740, (uint64_t *)&unk_1EE1BD530);
  sub_1903D0B38();
  MEMORY[0x19400AF6C](0, v9, v6, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v16);
}

uint64_t sub_18FE1B064(uint64_t a1, void *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;

  v4 = OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_timeout;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_timeout))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1903D09C4();
    *(_QWORD *)(a1 + v4) = 0;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  v5 = (_QWORD *)(a1 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_commonCompletion);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_commonCompletion);
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_commonCompletion + 8);
  *v5 = 0;
  v5[1] = 0;
  sub_18FD77978(v6);
  sub_18FD4A1C4(v6);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v6;
  v8[3] = v7;
  v8[4] = a2;
  sub_18FD77978(v6);
  v9 = a2;
  sub_18FE1C2D4((uint64_t)sub_18FE1CD10, (uint64_t)v8);
  swift_release();
  return sub_18FD4A1C4(v6);
}

uint64_t ProvisioningCarKeyStepTransact.terminateOperation(success:output:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FE1C2D4(a3, a4);
}

id ProvisioningCarKeyStepTransact.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ProvisioningCarKeyStepTransact.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ProvisioningCarKeyStepTransact.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProvisioningCarKeyStepTransact();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_18FE1B2A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v8;
  id result;

  v8 = objc_allocWithZone((Class)type metadata accessor for ProvisioningCarKeyStepTransact());
  result = ProvisioningCarKeyStepTransact.init(context:credential:sharedState:)(a1, a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_18FE1B2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FE1C2D4(a3, a4);
}

void sub_18FE1B320(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31[7];

  v8 = a3 + 16;
  swift_beginAccess();
  v9 = MEMORY[0x19400D8B8](v8);
  if (v9)
  {
    v10 = (char *)v9;
    if (a2)
    {
      v11 = *(void **)(v9 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_sharedState);
      v12 = a2;
      v13 = objc_msgSend(v11, "sid");
      v14 = sub_1903D05C8();
      v16 = v15;

      v17 = (void *)objc_opt_self();
      v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v19 = (_QWORD *)swift_allocObject();
      v19[2] = v18;
      v19[3] = v12;
      v19[4] = v14;
      v19[5] = v16;
      v31[4] = (uint64_t)sub_18FE1CE2C;
      v31[5] = (uint64_t)v19;
      v31[0] = MEMORY[0x1E0C809B0];
      v31[1] = 1107296256;
      v31[2] = (uint64_t)sub_18FCD3020;
      v31[3] = (uint64_t)&block_descriptor_42_1;
      v20 = _Block_copy(v31);
      v21 = v12;
      swift_release();
      v22 = objc_msgSend(v17, sel_startContactlessInterfaceSessionWithCompletion_, v20);
      _Block_release(v20);
      v23 = *(id *)&v10[OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_sessionHandle];
      *(_QWORD *)&v10[OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_sessionHandle] = v22;

    }
    else
    {
      if (qword_1EE1BCFE8 != -1)
        swift_once();
      v24 = sub_1903D0340();
      __swift_project_value_buffer(v24, (uint64_t)qword_1EE1BF740);
      swift_bridgeObjectRetain_n();
      v25 = sub_1903D0328();
      v26 = sub_1903D0934();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        v31[0] = v28;
        *(_DWORD *)v27 = 136315138;
        swift_bridgeObjectRetain();
        v31[6] = sub_18FCD5144(a4, a5, v31);
        sub_1903D0ACC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_18FC92000, v25, v26, "[%s] ProvisioningCarKeyStepTransact: Failed to download pass", v27, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x19400D804](v28, -1, -1);
        MEMORY[0x19400D804](v27, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v29 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 4);
      v30 = (void *)sub_1903D05A4();
      objc_msgSend(v29, sel_addInternalDebugDescription_, v30);

      v23 = v29;
      sub_18FE1AE50(v29);

    }
  }
}

void sub_18FE1B6A0(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  unsigned int v37;
  void *v38;
  uint64_t v39;
  uint64_t ObjectType;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void (*v45)(_QWORD *, uint64_t);
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  char *v52;
  char *v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD aBlock[6];

  v66 = a5;
  v67 = a6;
  v10 = sub_1903D03B8();
  v71 = *(_QWORD *)(v10 - 8);
  v72 = v10;
  MEMORY[0x1E0C80A78](v10);
  v70 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_1903D03D0();
  v12 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v68 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1903D03AC();
  v64 = *(_QWORD *)(v14 - 8);
  v65 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v63 = (_QWORD *)((char *)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v62 = (uint64_t)v58 - v17;
  v61 = sub_1903D03E8();
  v60 = *(_QWORD *)(v61 - 8);
  v18 = MEMORY[0x1E0C80A78](v61);
  v20 = (char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v58 - v21;
  v23 = sub_1903D0994();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v27 = MEMORY[0x19400D8B8](a3 + 16);
  if (v27)
  {
    v28 = (char *)v27;
    if (a1)
    {
      v59 = v12;
      v29 = *(void **)(v27 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_session);
      *(_QWORD *)(v27 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_session) = a1;
      v30 = a1;

      v31 = v30;
      objc_msgSend(v30, sel_setDelegate_, v28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD540);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_190436510;
      v33 = objc_msgSend(a4, sel_devicePrimaryPaymentApplication);
      if (v33)
      {
        *(_QWORD *)(v32 + 32) = v33;
        aBlock[0] = v32;
        sub_1903D079C();
        sub_18FCDC600(0, &qword_1EE1BEA18);
        v34 = (void *)sub_1903D0778();
        swift_bridgeObjectRelease();
        v35 = objc_msgSend(a4, sel_paymentPass);
        if (v35)
        {
          v36 = v35;
          v37 = objc_msgSend(v31, sel_activatePaymentApplications_forPaymentPass_, v34, v35);

          if (v37
            && objc_msgSend(v31, sel_authorizeAndStartCardEmulationWithCredential_deferAuthorization_, 0, 0))
          {
            v58[1] = sub_18FCDC600(0, (unint64_t *)&unk_1EE1BEB30);
            sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
            v58[0] = sub_1903D097C();
            aBlock[0] = MEMORY[0x1E0DEE9D8];
            sub_18FCD5E34((unint64_t *)&unk_1EE1C0710, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], MEMORY[0x1E0DEF948]);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BEB40);
            sub_18FD4A258((unint64_t *)&unk_1EE1C0720, &qword_1EE1BEB40);
            sub_1903D0B38();
            v38 = (void *)v58[0];
            v39 = sub_1903D09A0();

            (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
            ObjectType = swift_getObjectType();
            sub_1903D03DC();
            MEMORY[0x19400A9D8](v20, 10.0);
            v41 = *(void (**)(char *, uint64_t))(v60 + 8);
            v42 = v61;
            v41(v20, v61);
            v43 = v62;
            sub_18FE20D60(v62);
            v44 = v63;
            sub_18FE20DA4(v63);
            MEMORY[0x19400AFC0](v22, v43, v44, ObjectType);
            v45 = *(void (**)(_QWORD *, uint64_t))(v64 + 8);
            v46 = v44;
            v47 = v65;
            v45(v46, v65);
            v45((_QWORD *)v43, v47);
            v41(v22, v42);
            v48 = swift_allocObject();
            swift_unknownObjectWeakInit();
            v49 = (_QWORD *)swift_allocObject();
            v50 = v67;
            v49[2] = v66;
            v49[3] = v50;
            v49[4] = v48;
            aBlock[4] = sub_18FE1CE64;
            aBlock[5] = v49;
            aBlock[0] = MEMORY[0x1E0C809B0];
            aBlock[1] = 1107296256;
            aBlock[2] = sub_18FDF4F30;
            aBlock[3] = &block_descriptor_49_3;
            v51 = _Block_copy(aBlock);
            swift_bridgeObjectRetain();
            swift_retain();
            v52 = v68;
            sub_18FE20DEC();
            v53 = v70;
            sub_18FE20DF0();
            sub_1903D09B8();
            _Block_release(v51);
            (*(void (**)(char *, uint64_t))(v71 + 8))(v53, v72);
            (*(void (**)(char *, uint64_t))(v59 + 8))(v52, v69);
            swift_release();
            swift_release();
            *(_QWORD *)&v28[OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_timeout] = v39;
            swift_unknownObjectRetain();
            swift_unknownObjectRelease();
            sub_1903D09D0();

            swift_unknownObjectRelease();
          }
          else
          {
            v56 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 4);
            sub_18FE1AE50(v56);

          }
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
    if (a2)
    {
      v54 = a2;
      v55 = (void *)sub_1903D0124();

    }
    else
    {
      v55 = 0;
    }
    v57 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v55, 4);

    sub_18FE1AE50(v57);
  }
  else if (a1)
  {
    objc_msgSend(a1, sel_invalidateSession);
  }
}

void sub_18FE1BD80(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16[3];

  v5 = a3 + 16;
  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v6 = sub_1903D0340();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain_n();
  v7 = sub_1903D0328();
  v8 = sub_1903D0934();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v16[0] = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a1, a2, v16);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v7, v8, "[%s] ProvisioningCarKeyStepTransact: Timed out waiting for transaction", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v10, -1, -1);
    MEMORY[0x19400D804](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 4);
  v12 = (void *)sub_1903D05A4();
  objc_msgSend(v11, sel_addInternalDebugDescription_, v12);

  swift_beginAccess();
  v13 = MEMORY[0x19400D8B8](v5);
  if (v13)
  {
    v14 = (void *)v13;
    v15 = v11;
    sub_18FE1AE50(v11);

  }
}

void sub_18FE1BFC8(uint64_t a1, NSObject *a2, uint64_t *a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = (char *)MEMORY[0x19400D8B8](v5);
  if (v6)
  {
    v7 = *a3;
    v8 = *(void **)&v6[*a3];
    *(_QWORD *)&v6[v7] = 0;

  }
  dispatch_group_leave(a2);
}

Swift::Void __swiftcall ProvisioningCarKeyStepTransact.contactlessInterfaceSessionDidTerminate(_:)(PKContactlessInterfaceSession_optional *a1)
{
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 4);
  sub_18FE1AE50(v1);

}

Swift::Void __swiftcall ProvisioningCarKeyStepTransact.contactlessInterfaceSession(_:didFinishTransactionWith:)(PKContactlessInterfaceSession_optional *_, PKContactlessInterfaceTransactionContext_optional *didFinishTransactionWith)
{
  sub_18FE1C9E8(didFinishTransactionWith);
}

void _s11PassKitCore30ProvisioningCarKeyStepTransactC39contactlessInterfaceSessionDidTerminate_13withErrorCodeySo013PKContactlessjK0CSg_So0qjkO0VtF_0()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 4);
  sub_18FE1AE50(v0);

}

uint64_t sub_18FE1C2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  NSObject *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t aBlock;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  void *v37;
  void *v38;
  uint64_t v39;

  v30 = a1;
  v4 = sub_1903D03B8();
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1903D03D0();
  v7 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = dispatch_group_create();
  v11 = *(void **)(v2 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_sessionHandle);
  if (v11)
  {
    v12 = v11;
    dispatch_group_enter(v10);
    v13 = swift_allocObject();
    v29 = v9;
    v14 = v13;
    swift_unknownObjectWeakInit();
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(v15 + 24) = v10;
    v38 = sub_18FE1CDA8;
    v39 = v15;
    aBlock = MEMORY[0x1E0C809B0];
    v35 = 1107296256;
    v36 = sub_18FDF4F30;
    v37 = &block_descriptor_25_4;
    v16 = _Block_copy(&aBlock);
    v17 = v10;
    swift_release();
    objc_msgSend(v12, sel_invalidateSessionWithCompletion_, v16);
    v9 = v29;
    _Block_release(v16);

  }
  v18 = *(void **)(v2 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_session);
  if (v18)
  {
    v19 = v18;
    dispatch_group_enter(v10);
    v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = v10;
    v38 = sub_18FE1CD84;
    v39 = v21;
    aBlock = MEMORY[0x1E0C809B0];
    v35 = 1107296256;
    v36 = sub_18FDF4F30;
    v37 = &block_descriptor_18_0;
    v22 = _Block_copy(&aBlock);
    v23 = v10;
    swift_release();
    objc_msgSend(v19, sel_invalidateSessionWithCompletion_, v22);
    _Block_release(v22);

  }
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v24 = (void *)sub_1903D097C();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v30;
  *(_QWORD *)(v25 + 24) = a2;
  v38 = sub_18FCDC3A8;
  v39 = v25;
  aBlock = MEMORY[0x1E0C809B0];
  v35 = 1107296256;
  v36 = sub_18FDF4F30;
  v37 = &block_descriptor_9_1;
  v26 = _Block_copy(&aBlock);
  swift_retain();
  sub_1903D03C4();
  v33 = MEMORY[0x1E0DEE9D8];
  sub_18FCD5E34((unint64_t *)&qword_1EE1C0730, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
  sub_18FD4A258((unint64_t *)&qword_1EE1C0740, (uint64_t *)&unk_1EE1BD530);
  sub_1903D0B38();
  sub_1903D0964();
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v31);
  return swift_release();
}

void sub_18FE1C6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v9)(uint64_t);
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t (**v23)(uint64_t);
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v9 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((_QWORD *)v9 + 2) = a3;
  *((_QWORD *)v9 + 3) = a4;
  v31 = a4;
  *((_QWORD *)v9 + 4) = a5;
  v10 = *(void **)(a2 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_sharedState);
  swift_retain();
  swift_retain();
  v11 = objc_msgSend(v10, "sid");
  v30 = sub_1903D05C8();
  v32 = v12;

  v14 = *(void **)(a2 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_credential);
  v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_credential + 8);
  v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_credential + 16);
  v16 = *(_BYTE *)(a2 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_credential + 24);
  if (v16)
    v17 = 0;
  else
    v17 = v14;
  sub_18FCDC6A4(v14, v13, v15, v16);
  v18 = objc_msgSend(v17, sel_carKeyTerminalPairingCredential);

  v19 = objc_msgSend(v18, sel_configuration);
  sub_18FCD6F28(v14, v13, v15, v16);
  if (v19)
  {
    if (objc_msgSend(v19, sel_supportedRadioTechnologies) == (id)1)
    {
      v20 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_context);
      swift_beginAccess();
      if (!*(_BYTE *)(v20 + 64) && *(__int16 *)(v20 + 33) != -16384)
      {
        v23 = (uint64_t (**)(uint64_t))(a2
                                               + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_commonCompletion);
        v24 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_commonCompletion);
        *v23 = sub_18FE1CDD4;
        v23[1] = v9;
        swift_retain();
        sub_18FD4A1C4(v24);
        v25 = *(id *)(v20 + 48);
        v26 = (void *)sub_1903D0148();
        v27 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v28 = (_QWORD *)swift_allocObject();
        v28[2] = v27;
        v28[3] = v30;
        v28[4] = v32;
        aBlock[4] = sub_18FE1CDEC;
        aBlock[5] = v28;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_18FCDDD28;
        aBlock[3] = &block_descriptor_35_1;
        v29 = _Block_copy(aBlock);
        swift_release();
        objc_msgSend(v25, sel_passAtURL_completion_, v26, v29);
        _Block_release(v29);
        swift_release();

        return;
      }
    }

  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (MEMORY[0x19400D8B8](a3 + 16))
  {
    v21 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 104))(0, v31, a5, ObjectType, v21);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
}

void sub_18FE1C9E8(void *a1)
{
  void *v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;

  if (a1)
  {
    if (objc_msgSend(a1, sel_success))
    {
      sub_18FE1AE50(0);
    }
    else
    {
      if (qword_1EE1BCFE8 != -1)
        swift_once();
      v2 = sub_1903D0340();
      __swift_project_value_buffer(v2, (uint64_t)qword_1EE1BF740);
      v3 = v1;
      v4 = sub_1903D0328();
      v5 = sub_1903D0934();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        v7 = swift_slowAlloc();
        v15 = v7;
        *(_DWORD *)v6 = 136315138;
        v8 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_sharedState], "sid");
        v9 = sub_1903D05C8();
        v11 = v10;

        sub_18FCD5144(v9, v11, &v15);
        sub_1903D0ACC();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_18FC92000, v4, v5, "[%s] ProvisioningCarKeyStepTransact: Failed to transact", v6, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x19400D804](v7, -1, -1);
        MEMORY[0x19400D804](v6, -1, -1);

      }
      else
      {

      }
      v12 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 4);
      v13 = (void *)sub_1903D05A4();
      objc_msgSend(v12, sel_addInternalDebugDescription_, v13);

      v14 = v12;
      sub_18FE1AE50(v12);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t method lookup function for ProvisioningCarKeyStepTransact()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningCarKeyStepTransact.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

ValueMetadata *type metadata accessor for ProvisioningCarKeyStepTransact.TransactResult()
{
  return &type metadata for ProvisioningCarKeyStepTransact.TransactResult;
}

uint64_t sub_18FE1CC90()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_18FE1CCBC()
{
  uint64_t v0;

  return sub_18FE1B064(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t sub_18FE1CCDC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_18FE1CD10()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(*(_QWORD *)(v0 + 32));
  return result;
}

uint64_t sub_18FE1CD38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FE1CD5C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_18FE1CD84()
{
  uint64_t v0;

  sub_18FE1BFC8(*(_QWORD *)(v0 + 16), *(NSObject **)(v0 + 24), &OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_session);
}

void sub_18FE1CDA8()
{
  uint64_t v0;

  sub_18FE1BFC8(*(_QWORD *)(v0 + 16), *(NSObject **)(v0 + 24), &OBJC_IVAR____TtC11PassKitCore30ProvisioningCarKeyStepTransact_sessionHandle);
}

uint64_t sub_18FE1CDC8()
{
  return objectdestroy_16Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_18FE1CDD4(uint64_t a1)
{
  uint64_t *v1;

  return sub_18FD92F44(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_18FE1CDE0()
{
  return objectdestroy_16Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_18FE1CDEC(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_18FE1B320(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_18FE1CDF8()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_18FE1CE2C(void *a1, void *a2)
{
  uint64_t v2;

  sub_18FE1B6A0(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_18FE1CE38()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_18FE1CE64()
{
  uint64_t v0;

  sub_18FE1BD80(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

__n128 ProvisioningStepBiometricBinding.__allocating_init(context:credential:sharedState:)(uint64_t a1, __n128 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  __n128 result;

  v6 = swift_allocObject();
  v7 = a2[1].n128_u64[0];
  v8 = a2[1].n128_u8[8];
  *(_QWORD *)(v6 + 16) = a1;
  result = *a2;
  *(__n128 *)(v6 + 24) = *a2;
  *(_QWORD *)(v6 + 40) = v7;
  *(_BYTE *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 56) = a3;
  return result;
}

uint64_t ProvisioningStepBiometricBinding.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 40) = v4;
  *(_BYTE *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = a3;
  return v3;
}

uint64_t ProvisioningStepBiometricBinding.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return v0;
}

uint64_t ProvisioningStepBiometricBinding.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return swift_deallocClassInstance();
}

__n128 sub_18FE1CF94@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  __n128 result;

  type metadata accessor for ProvisioningStepBiometricBinding();
  v8 = swift_allocObject();
  v9 = a2[1].n128_u64[0];
  v10 = a2[1].n128_u8[8];
  *(_QWORD *)(v8 + 16) = a1;
  result = *a2;
  *(__n128 *)(v8 + 24) = *a2;
  *(_QWORD *)(v8 + 40) = v9;
  *(_BYTE *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 56) = a3;
  *a4 = v8;
  return result;
}

uint64_t type metadata accessor for ProvisioningStepBiometricBinding()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningStepBiometricBinding()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningStepBiometricBinding.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for ProvisioningStepBiometricBinding.BindingResult()
{
  return &type metadata for ProvisioningStepBiometricBinding.BindingResult;
}

__n128 ProvisioningStepUpdateAccounts.__allocating_init(context:credential:sharedState:)(uint64_t a1, __n128 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  __n128 result;

  v6 = swift_allocObject();
  v7 = a2[1].n128_u64[0];
  v8 = a2[1].n128_u8[8];
  *(_QWORD *)(v6 + 16) = a1;
  result = *a2;
  *(__n128 *)(v6 + 24) = *a2;
  *(_QWORD *)(v6 + 40) = v7;
  *(_BYTE *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 56) = a3;
  return result;
}

uint64_t ProvisioningStepUpdateAccounts.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 40) = v4;
  *(_BYTE *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = a3;
  return v3;
}

uint64_t ProvisioningStepUpdateAccounts.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return v0;
}

uint64_t ProvisioningStepUpdateAccounts.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return swift_deallocClassInstance();
}

__n128 sub_18FE1D130@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  __n128 result;

  type metadata accessor for ProvisioningStepUpdateAccounts();
  v8 = swift_allocObject();
  v9 = a2[1].n128_u64[0];
  v10 = a2[1].n128_u8[8];
  *(_QWORD *)(v8 + 16) = a1;
  result = *a2;
  *(__n128 *)(v8 + 24) = *a2;
  *(_QWORD *)(v8 + 40) = v9;
  *(_BYTE *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 56) = a3;
  *a4 = v8;
  return result;
}

uint64_t type metadata accessor for ProvisioningStepUpdateAccounts()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningStepUpdateAccounts()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningStepUpdateAccounts.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_18FE1D1C8(uint64_t a1, void *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v14;

  if (a2)
  {
    if (qword_1EE1BCF70 != -1)
      swift_once();
    v5 = sub_1903D0340();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EE1BF5D8);
    v6 = a2;
    v7 = a2;
    v8 = sub_1903D0328();
    v9 = sub_1903D0934();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = a2;
      v14 = _swift_stdlib_bridgeErrorToNSError();
      sub_1903D0ACC();
      *v11 = v14;

      _os_log_impl(&dword_18FC92000, v8, v9, "Failed to update accounts post provisioning with error %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v11, -1, -1);
      MEMORY[0x19400D804](v10, -1, -1);
    }
    else
    {

    }
  }
  return a3(0, 0);
}

uint64_t CNPostalAddress.streetLineCount.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];
  _QWORD v9[2];

  v1 = objc_msgSend(v0, sel_street);
  v2 = sub_1903D05C8();
  v4 = v3;

  v9[0] = 10;
  v9[1] = 0xE100000000000000;
  v8[2] = v9;
  swift_bridgeObjectRetain();
  v5 = sub_18FE1DE98(0x7FFFFFFFFFFFFFFFLL, 0, sub_18FE1E508, (uint64_t)v8, v2, v4);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease();
  return v6;
}

Swift::String __swiftcall CNPostalAddress.streetLine(at:)(Swift::Int at)
{
  void *v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  Swift::String result;
  _QWORD v26[4];
  _BYTE v27[16];
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;

  v3 = objc_msgSend(v1, sel_street);
  v4 = sub_1903D05C8();
  v6 = v5;

  v29 = 10;
  v30 = 0xE100000000000000;
  v28 = &v29;
  swift_bridgeObjectRetain();
  v7 = sub_18FE1DE98(0x7FFFFFFFFFFFFFFFLL, 0, sub_18FE1E508, (uint64_t)v27, v4, v6);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRelease();
  if (v8 <= at)
  {
    v22 = 0;
    v24 = 0xE000000000000000;
    goto LABEL_6;
  }
  v9 = objc_msgSend(v1, sel_street);
  v10 = sub_1903D05C8();
  v12 = v11;

  v29 = 10;
  v30 = 0xE100000000000000;
  MEMORY[0x1E0C80A78](v13);
  v26[2] = &v29;
  swift_bridgeObjectRetain();
  v14 = sub_18FE1DE98(0x7FFFFFFFFFFFFFFFLL, 0, sub_18FE1E508, (uint64_t)v26, v10, v12);
  v15 = swift_bridgeObjectRelease();
  if (at < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (*(_QWORD *)(v14 + 16) <= (unint64_t)at)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v17 = (_QWORD *)(v14 + 32 * at);
  v18 = v17[4];
  v19 = v17[5];
  v20 = v17[6];
  v21 = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = MEMORY[0x19400AC0C](v18, v19, v20, v21);
  v24 = v23;
  swift_bridgeObjectRelease();
LABEL_6:
  v15 = v22;
  v16 = (void *)v24;
LABEL_9:
  result._object = v16;
  result._countAndFlagsBits = v15;
  return result;
}

uint64_t sub_18FE1D5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;

  if (a5 < 0)
  {
    result = sub_1903D0CDC();
    __break(1u);
  }
  else
  {
    if (a5)
    {
      v10 = (_QWORD *)sub_1903D07C0();
      v11 = v10;
      v10[2] = a5;
      v10[4] = a1;
      v10[5] = a2;
      v10[6] = a3;
      v10[7] = a4;
      if (a5 != 1)
      {
        v10[8] = a1;
        v10[9] = a2;
        v10[10] = a3;
        v10[11] = a4;
        v12 = a5 - 2;
        if (v12)
        {
          v13 = v10 + 15;
          do
          {
            *(v13 - 3) = a1;
            *(v13 - 2) = a2;
            *(v13 - 1) = a3;
            *v13 = a4;
            swift_bridgeObjectRetain();
            v13 += 4;
            --v12;
          }
          while (v12);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
    return (uint64_t)v11;
  }
  return result;
}

uint64_t sub_18FE1D710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_1903D0CDC();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = sub_1903D04A8();
      v5 = sub_1903D07C0();
      *(_QWORD *)(v5 + 16) = a2;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16);
      v8(v5 + v7, a1, v4);
      v9 = a2 - 1;
      if (a2 != 1)
      {
        v10 = *(_QWORD *)(v6 + 72);
        v11 = v5 + v10 + v7;
        do
        {
          v8(v11, a1, v4);
          v11 += v10;
          --v9;
        }
        while (v9);
      }
    }
    else
    {
      v5 = MEMORY[0x1E0DEE9D8];
    }
    v12 = sub_1903D04A8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
    return v5;
  }
  return result;
}

uint64_t sub_18FE1D840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;

  if (a3 < 0)
  {
    result = sub_1903D0CDC();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      v6 = (_QWORD *)sub_1903D07C0();
      v7 = v6;
      v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        v8 = a3 - 2;
        if (v8)
        {
          v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
    return (uint64_t)v7;
  }
  return result;
}

Swift::Void __swiftcall CNMutablePostalAddress.setStreetLine(_:at:)(Swift::String _, Swift::Int at)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *object;
  uint64_t countAndFlagsBits;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD v30[3];
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v4 = v2;
  object = _._object;
  countAndFlagsBits = _._countAndFlagsBits;
  v8 = objc_msgSend(v2, sel_street);
  v9 = sub_1903D05C8();
  v11 = v10;

  v31 = 10;
  v32 = 0xE100000000000000;
  v30[2] = &v31;
  swift_bridgeObjectRetain();
  v12 = (_QWORD *)sub_18FE1DE98(0x7FFFFFFFFFFFFFFFLL, 0, sub_18FE1E508, (uint64_t)v30, v9, v11);
  swift_bridgeObjectRelease();
  v34 = v12;
  v13 = at + 1;
  if (__OFADD__(at, 1))
  {
    __break(1u);
  }
  else
  {
    if (v12[2] < v13)
    {
      v14 = MEMORY[0x19400B08C](0, 0xE000000000000000);
      v18 = sub_18FE1D5FC(v14, v15, v16, v17, v13 - v12[2]);
      sub_18FD758B8(v18);
      v12 = v34;
    }
    swift_bridgeObjectRetain();
    object = (void *)MEMORY[0x19400B08C](countAndFlagsBits, object);
    countAndFlagsBits = v19;
    v13 = v20;
    v3 = v21;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      if ((at & 0x8000000000000000) == 0)
        goto LABEL_6;
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
  }
  v12 = sub_18FE1E48C(v12);
  if (at < 0)
    goto LABEL_10;
LABEL_6:
  if (v12[2] > (unint64_t)at)
  {
    v22 = &v12[4 * at];
    v22[4] = object;
    v22[5] = countAndFlagsBits;
    v22[6] = v13;
    v22[7] = v3;
    swift_bridgeObjectRelease();
    v34 = v12;
    v23 = swift_bridgeObjectRetain();
    v24 = sub_18FE1DBC4(v23);
    v26 = v25;
    v28 = v27;
    swift_bridgeObjectRelease();
    v31 = v24;
    v32 = v26;
    v33 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C11D0);
    sub_18FE1E574();
    sub_18FE1E5C0();
    sub_1903D0724();
    swift_bridgeObjectRelease();
    v29 = (void *)sub_1903D05A4();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setStreet_, v29);

    return;
  }
LABEL_11:
  __break(1u);
}

id sub_18FE1DB48(void *a1, uint64_t a2)
{
  return sub_18FE1DB60(a1, a2, 0);
}

uint64_t CNPostalAddress.street1.getter()
{
  return CNPostalAddress.streetLine(at:)(0)._countAndFlagsBits;
}

id sub_18FE1DB58(void *a1, uint64_t a2)
{
  return sub_18FE1DB60(a1, a2, 1);
}

id sub_18FE1DB60(void *a1, uint64_t a2, Swift::Int a3)
{
  id v4;
  void *v5;

  v4 = a1;
  CNPostalAddress.streetLine(at:)(a3);

  v5 = (void *)sub_1903D05A4();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t CNPostalAddress.street2.getter()
{
  return CNPostalAddress.streetLine(at:)(1)._countAndFlagsBits;
}

uint64_t sub_18FE1DBC4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = result;
  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = result + 32 * v2 + 16;
    v4 = *(_QWORD *)(result + 16);
    while (1)
    {
      if (v4 > *(_QWORD *)(v1 + 16))
      {
        __break(1u);
        goto LABEL_11;
      }
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease();
      result = swift_release();
      if (v5 != 1)
        break;
      v3 -= 32;
      if (!--v4)
        return v4;
    }
    if (v2 >= v4)
      return v4;
LABEL_11:
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

id sub_18FE1DCC4(void *a1, uint64_t a2)
{
  return sub_18FE1DD18(a1, a2, (const char **)&selRef_street1);
}

uint64_t CNMutablePostalAddress.street1.getter()
{
  return sub_18FE1DDAC((SEL *)&selRef_street1);
}

uint64_t sub_18FE1DCDC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_18FE1DE18(a1, a2, a3, 0);
}

uint64_t CNMutablePostalAddress.street1.setter(uint64_t a1, uint64_t a2)
{
  CNMutablePostalAddress.setStreetLine(_:at:)(*(Swift::String *)&a1, 0);
  return swift_bridgeObjectRelease();
}

id sub_18FE1DD0C(void *a1, uint64_t a2)
{
  return sub_18FE1DD18(a1, a2, (const char **)&selRef_street2);
}

id sub_18FE1DD18(void *a1, uint64_t a2, const char **a3)
{
  const char *v3;
  id v4;
  id v5;
  void *v6;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)MEMORY[0x1E0C97378];
  v3 = *a3;
  v4 = a1;
  v5 = objc_msgSendSuper2(&v8, v3);
  sub_1903D05C8();

  v6 = (void *)sub_1903D05A4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t CNMutablePostalAddress.street2.getter()
{
  return sub_18FE1DDAC((SEL *)&selRef_street2);
}

uint64_t sub_18FE1DDAC(SEL *a1)
{
  id v1;
  uint64_t v2;
  objc_super v4;

  v4.super_class = (Class)MEMORY[0x1E0C97378];
  v1 = objc_msgSendSuper2(&v4, *a1);
  v2 = sub_1903D05C8();

  return v2;
}

uint64_t sub_18FE1DE10(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_18FE1DE18(a1, a2, a3, 1);
}

uint64_t sub_18FE1DE18(void *a1, uint64_t a2, uint64_t a3, Swift::Int a4)
{
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  Swift::String v10;

  v6 = sub_1903D05C8();
  v8 = v7;
  v9 = a1;
  v10._countAndFlagsBits = v6;
  v10._object = v8;
  CNMutablePostalAddress.setStreetLine(_:at:)(v10, a4);

  return swift_bridgeObjectRelease();
}

uint64_t CNMutablePostalAddress.street2.setter(uint64_t a1, uint64_t a2)
{
  CNMutablePostalAddress.setStreetLine(_:at:)(*(Swift::String *)&a1, 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FE1DE98(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_18FE1E334(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_1903D06DC();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_1903D0664();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_1903D0664();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_1903D06F4();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_18FD51A00(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_18FD51A00((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_1903D0664();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_1903D06F4();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_18FD51A00(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_18FD51A00((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1903D0CDC();
  __break(1u);
LABEL_42:
  result = sub_1903D0CDC();
  __break(1u);
  return result;
}

uint64_t sub_18FE1E334(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_1903D06F4();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_18FD51A00(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_18FD51A00((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_1903D0CDC();
  __break(1u);
  return result;
}

_QWORD *sub_18FE1E48C(_QWORD *a1)
{
  return sub_18FD51A00(0, a1[2], 0, a1);
}

char *sub_18FE1E4A0(uint64_t a1)
{
  return sub_18FD51C18(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_18FE1E4B4(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1903D0ED4() & 1;
}

uint64_t sub_18FE1E508(_QWORD *a1)
{
  return sub_18FE1E520(a1) & 1;
}

uint64_t sub_18FE1E520(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_1903D0ED4() & 1;
}

unint64_t sub_18FE1E574()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1C11D8;
  if (!qword_1EE1C11D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1C11D0);
    result = MEMORY[0x19400D72C](MEMORY[0x1E0DECCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1C11D8);
  }
  return result;
}

unint64_t sub_18FE1E5C0()
{
  unint64_t result;

  result = qword_1EE1C11E0;
  if (!qword_1EE1C11E0)
  {
    result = MEMORY[0x19400D72C](MEMORY[0x1E0DEBB28], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EE1C11E0);
  }
  return result;
}

unint64_t sub_18FE1E608()
{
  unint64_t result;

  result = qword_1EE1C11E8;
  if (!qword_1EE1C11E8)
  {
    result = MEMORY[0x19400D72C](MEMORY[0x1E0DEBB18], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EE1C11E8);
  }
  return result;
}

_QWORD *sub_18FE1E64C@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (result[1] ^ *result) < 0x4000uLL;
  return result;
}

uint64_t sub_18FE1E664()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18FE1E688()
{
  return swift_deallocObject();
}

uint64_t sub_18FE1E698(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return result;
    v8 = MEMORY[0x1E0DEE9D8];
    result = sub_1903D0C88();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x19400B200](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      v7 = objc_msgSend(v6, sel_secureElementPass);

      if (!v7)
        goto LABEL_15;
      ++v4;
      sub_1903D0C70();
      sub_1903D0C94();
      sub_1903D0CA0();
      sub_1903D0C7C();
      if (v2 == v4)
        return v8;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v2 = sub_1903D0D00();
    swift_bridgeObjectRelease();
  }
}

void ProvisioningStepIngestPass.ingest(for:eligibilityResponse:assertions:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  _QWORD aBlock[7];

  v10 = *(void **)a3;
  v11 = *(void **)(a3 + 8);
  v12 = *(void **)(a3 + 16);
  v13 = *(void **)(v5 + 64);
  v14 = *(void **)(v5 + 72);
  v15 = *(void **)(v5 + 80);
  *(_QWORD *)(v5 + 64) = *(_QWORD *)a3;
  *(_QWORD *)(v5 + 72) = v11;
  *(_QWORD *)(v5 + 80) = v12;
  v16 = v12;
  v17 = v10;
  v18 = v11;
  sub_18FD6797C(v13, v14, v15);
  v19 = *(void **)(v5 + 88);
  *(_QWORD *)(v5 + 88) = a2;
  v20 = a2;

  v21 = objc_msgSend(*(id *)(v5 + 56), "sid");
  if (!v21)
  {
    sub_1903D05C8();
    v21 = (id)sub_1903D05A4();
    swift_bridgeObjectRelease();
  }
  v22 = *(_QWORD *)(v5 + 16);
  swift_beginAccess();
  v23 = 0;
  v24 = *(void **)(v22 + 16);
  if (!*(_BYTE *)(v5 + 48))
    v23 = *(id *)(v5 + 24);
  v25 = v24;
  objc_msgSend(v25, sel_setState_forCredential_, 5, v23);

  swift_beginAccess();
  v26 = objc_msgSend(objc_allocWithZone((Class)PKProvisioningUtility), sel_initWithDestinationWebService_managingWebService_, *(_QWORD *)(v22 + 72), *(_QWORD *)(v22 + 48));
  aBlock[6] = &unk_1EE239B20;
  v27 = swift_dynamicCastObjCProtocolConditional();
  if (v27)
    objc_msgSend(v26, sel_setDataProvider_, v27);
  v28 = objc_msgSend(*(id *)(v22 + 16), sel_cloudStoreCoordinator);
  sub_18FE1F094();
  v30 = v29;
  v31 = swift_allocObject();
  swift_weakInit();
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = v31;
  v32[3] = a4;
  v32[4] = a5;
  aBlock[4] = sub_18FE1F53C;
  aBlock[5] = v32;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FCD3020;
  aBlock[3] = &block_descriptor_42;
  v33 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v26, sel_downloadAndIngestPassesForResponse_cloudStoreCoordinatorDelegate_ingestionProperties_sid_completion_, a1, v28, v30, v21, v33);
  _Block_release(v33);

  swift_unknownObjectRelease();
}

void ProvisioningStepIngestPass.ingest(for:deviceCredential:assertions:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  _QWORD v17[6];

  v9 = objc_msgSend(*(id *)(v5 + 56), "sid");
  if (!v9)
  {
    sub_1903D05C8();
    v9 = (id)sub_1903D05A4();
    swift_bridgeObjectRelease();
  }
  v10 = *(_QWORD *)(v5 + 16);
  swift_beginAccess();
  v11 = objc_msgSend(objc_allocWithZone((Class)PKProvisioningUtility), sel_initWithDestinationWebService_managingWebService_, *(_QWORD *)(v10 + 72), *(_QWORD *)(v10 + 48));
  v12 = (void *)sub_1903D0148();
  swift_beginAccess();
  v13 = objc_msgSend(*(id *)(v10 + 16), sel_cloudStoreCoordinator);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a4;
  v15[4] = a5;
  v17[4] = sub_18FE2079C;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_18FE207A8;
  v17[3] = &block_descriptor_10_5;
  v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_downloadAndIngestPassForPassURL_deviceCredential_cloudStoreCoordinatorDelegate_ingestionProperties_sid_completion_, v12, a2, v13, 0, v9, v16);
  _Block_release(v16);

  swift_unknownObjectRelease();
}

__n128 ProvisioningStepIngestPass.__allocating_init(context:credential:sharedState:)(uint64_t a1, __n128 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  __n128 result;

  v6 = swift_allocObject();
  v7 = a2[1].n128_u64[0];
  v8 = a2[1].n128_u8[8];
  *(_QWORD *)(v6 + 80) = 0;
  *(_QWORD *)(v6 + 88) = 0;
  *(_QWORD *)(v6 + 64) = 1;
  *(_QWORD *)(v6 + 72) = 0;
  *(_QWORD *)(v6 + 16) = a1;
  result = *a2;
  *(__n128 *)(v6 + 24) = *a2;
  *(_QWORD *)(v6 + 40) = v7;
  *(_BYTE *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 56) = a3;
  return result;
}

uint64_t ProvisioningStepIngestPass.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 88) = 0;
  *(_QWORD *)(v3 + 64) = 1;
  *(_QWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 16) = a1;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 40) = v4;
  *(_BYTE *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = a3;
  return v3;
}

uint64_t ProvisioningStepIngestPass.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  sub_18FD6797C(*(void **)(v0 + 64), *(void **)(v0 + 72), *(void **)(v0 + 80));
  return v0;
}

uint64_t ProvisioningStepIngestPass.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  sub_18FD6797C(*(void **)(v0 + 64), *(void **)(v0 + 72), *(void **)(v0 + 80));
  return swift_deallocClassInstance();
}

__n128 sub_18FE1ED94@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  __n128 result;

  type metadata accessor for ProvisioningStepIngestPass();
  v8 = swift_allocObject();
  v9 = a2[1].n128_u64[0];
  v10 = a2[1].n128_u8[8];
  *(_QWORD *)(v8 + 80) = 0;
  *(_QWORD *)(v8 + 88) = 0;
  *(_QWORD *)(v8 + 64) = 1;
  *(_QWORD *)(v8 + 72) = 0;
  *(_QWORD *)(v8 + 16) = a1;
  result = *a2;
  *(__n128 *)(v8 + 24) = *a2;
  *(_QWORD *)(v8 + 40) = v9;
  *(_BYTE *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 56) = a3;
  *a4 = v8;
  return result;
}

uint64_t sub_18FE1EE04(uint64_t a1, void **a2, uint64_t (*a3)(uint64_t))
{
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;

  if ((a1 & 1) == 0)
  {
    v4 = *a2;
    if (*a2)
    {
      swift_beginAccess();
      v5 = v4;
      v6 = swift_bridgeObjectRetain();
      v7 = sub_18FD77114(v6, (uint64_t)v5);
      swift_bridgeObjectRelease();
      sub_18FE20814(v7);

      a1 = swift_bridgeObjectRelease();
    }
  }
  return a3(a1);
}

uint64_t ProvisioningStepIngestPass.terminateOperation(success:output:completion:)(uint64_t a1, char *a2, uint64_t (*a3)(uint64_t))
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  unint64_t v21;

  if ((a1 & 1) == 0 && a2)
  {
    v5 = &a2[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passUniqueIdentifiers];
    swift_beginAccess();
    v6 = *(_QWORD *)v5;
    v21 = MEMORY[0x1E0DEE9D8];
    v7 = *(_QWORD *)(*(_QWORD *)v5 + 16);
    if (v7)
    {
      v8 = &a2[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_passesForUniqueIdentifier];
      swift_bridgeObjectRetain_n();
      v9 = a2;
      swift_beginAccess();
      v10 = (uint64_t *)(v6 + 40);
      do
      {
        v11 = *(_QWORD *)v8;
        if (*(_QWORD *)(*(_QWORD *)v8 + 16))
        {
          v12 = *(v10 - 1);
          v13 = *v10;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          v14 = sub_18FD5293C(v12, v13);
          if ((v15 & 1) != 0)
          {
            v16 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v14);
            swift_bridgeObjectRelease_n();
            v17 = swift_bridgeObjectRelease();
            MEMORY[0x19400AD50](v17);
            if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1903D07B4();
            sub_1903D07D8();
            sub_1903D079C();
          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
          }
        }
        v10 += 2;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
      v18 = v21;
    }
    else
    {
      v19 = a2;
      swift_bridgeObjectRetain();
      v18 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    sub_18FE20814(v18);

    a1 = swift_bridgeObjectRelease();
  }
  return a3(a1);
}

void sub_18FE1F094()
{
  uint64_t v0;
  id v1;
  int v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  char v14;

  v1 = objc_msgSend(objc_allocWithZone((Class)PKPassIngestionProperties), sel_init);
  v2 = *(unsigned __int8 *)(v0 + 48);
  v13 = *(_OWORD *)(v0 + 24);
  ProvisioningCredentialsConfiguration.Credential.transferType.getter(&v14);
  if (v14 == 2)
    return;
  if ((v14 & 1) == 0)
    return;
  if (v2)
    return;
  v3 = objc_msgSend((id)v13, sel_remoteCredential);
  if (!v3)
    return;
  v4 = v3;
  v5 = objc_msgSend(v3, sel_transferableFromDevices);
  if (!v5)
  {

    return;
  }
  v6 = v5;
  sub_18FCDC600(0, &qword_1EE1C0DC0);
  v7 = sub_1903D0784();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1903D0D00();
    swift_bridgeObjectRelease();
    if (v12)
      goto LABEL_9;
LABEL_15:

    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_15;
LABEL_9:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)MEMORY[0x19400B200](0, v7);
    goto LABEL_12;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v7 + 32);
LABEL_12:
    v9 = v8;
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(objc_allocWithZone((Class)PKPassProvisioningMetadata), sel_init);
    objc_msgSend(v10, sel_setSourceDeviceType_, 1);
    v11 = objc_msgSend(v9, sel_name);
    objc_msgSend(v10, sel_setLocalizedSourceDeviceDescription_, v11);

    objc_msgSend(v1, sel_setProvisioningMetadata_, v10);
    return;
  }
  __break(1u);
}

uint64_t sub_18FE1F29C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18FE1F2C0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v23 = a4;
  v8 = sub_1903D03B8();
  v26 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1903D03D0();
  v24 = *(_QWORD *)(v11 - 8);
  v25 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v14 = (void *)sub_1903D097C();
  v15 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a1;
  v17 = v23;
  v16[4] = a2;
  v16[5] = v17;
  v16[6] = a5;
  aBlock[4] = sub_18FE20CFC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = &block_descriptor_25_5;
  v18 = _Block_copy(aBlock);
  v19 = a1;
  v20 = a2;
  swift_retain();
  swift_release();
  sub_1903D03C4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCDC494();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
  sub_18FD667E8((unint64_t *)&qword_1EE1C0740, (uint64_t *)&unk_1EE1BD530, MEMORY[0x1E0DEAF38]);
  sub_1903D0B38();
  MEMORY[0x19400AF6C](0, v13, v10, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v13, v25);
}

uint64_t sub_18FE1F53C(void *a1, void *a2)
{
  uint64_t *v2;

  return sub_18FE1F2C0(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_18FE1F548(uint64_t a1, void *a2, void *a3, char **a4, char a5)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_18FE1F5D0(a2, a3, a4, a5);
    return swift_release();
  }
  return result;
}

void sub_18FE1F5D0(void *a1, void *a2, char **a3, char a4)
{
  NSObject *v4;
  uint64_t v5;
  id v9;
  void *v10;
  char **v11;
  char **v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  SEL *v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t isa;
  uint64_t v58;
  int isa_low;
  char v60;
  id v61;
  void *v62;
  unint64_t v63;
  id v64;
  void *v65;
  unint64_t v66;
  char *DefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0;
  Class v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  Class v75;
  Class v76;
  Class v77;
  Class v78;
  objc_class *v79;
  void **v80;
  void *v81;
  objc_class *v82;
  id v83;
  id v84;
  id v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  NSObject *v92;
  unint64_t v93;
  os_log_type_t v94;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  id v98;
  void *v99;
  id v100;
  uint64_t v101;
  char **v102;
  uint64_t v103;
  uint64_t v104;
  unsigned __int8 v105;
  Class v106;
  unint64_t v107;
  uint64_t v108;
  id v109;
  SEL *v110;
  NSObject *v111;
  id v112;
  unint64_t v113;
  int v114;
  uint64_t v115[3];
  uint64_t v116;
  uint64_t v117[3];
  char v118;

  LOBYTE(v5) = a4;
  v9 = -[objc_class sid](v4[7].isa, "sid");
  v10 = (void *)sub_1903D05C8();
  v12 = v11;

  if (!a1)
  {
    swift_bridgeObjectRelease();
    if (!a2)
    {
      v19 = 0;
      v112 = 0;
      goto LABEL_8;
    }
    v112 = 0;
LABEL_7:
    v18 = a2;
    v19 = (void *)sub_1903D0124();

LABEL_8:
    v20 = objc_msgSend((id)objc_opt_self(), sel_errorWithUnderlyingError_defaultSeverity_, v19, 5);

    v21 = (void *)sub_1903D05A4();
    objc_msgSend(v20, sel_addInternalDebugDescription_, v21);

    v22 = v20;
    ((void (*)(id, uint64_t))a3)(v20, 1);

    return;
  }
  v112 = objc_msgSend(a1, sel_provisioningResponse);
  if (a2)
  {
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(a1, sel_provisionedPasses);
    v14 = objc_msgSend(v13, sel_array);

    v15 = sub_1903D0784();
    v16 = sub_18FD689AC(v15);
    swift_bridgeObjectRelease();
    if (v16)
    {
      v17 = sub_18FE1E698(v16);
      swift_bridgeObjectRelease();
      sub_18FE20814(v17);
      swift_bridgeObjectRelease();
    }
    goto LABEL_7;
  }
  v23 = a1;
  v24 = -[SEL provisionedPasses](v23, sel_provisionedPasses);
  v25 = objc_msgSend(v24, sel_array);

  v26 = sub_1903D0784();
  v27 = sub_18FD689AC(v26);
  swift_bridgeObjectRelease();
  if (v27)
  {
    v28 = (id)(v27 >> 62);
    if (v27 >> 62)
      goto LABEL_74;
    v29 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v29; v29 = sub_1903D0D00())
    {
      v113 = v27 & 0xC000000000000001;
      if ((v27 & 0xC000000000000001) != 0)
      {
        v30 = (id)MEMORY[0x19400B200](0, v27);
      }
      else
      {
        if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
          goto LABEL_82;
        }
        v30 = *(id *)(v27 + 32);
      }
      v109 = v30;
      v103 = (uint64_t)v10;
      v111 = v4;
      swift_bridgeObjectRelease();
      if (qword_1EE1BCFE8 != -1)
        swift_once();
      v31 = sub_1903D0340();
      __swift_project_value_buffer(v31, (uint64_t)qword_1EE1BF740);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v4 = sub_1903D0328();
      v32 = sub_1903D0940();
      v107 = v27;
      v110 = v23;
      v102 = v12;
      if (os_log_type_enabled(v4, v32))
      {
        v33 = swift_slowAlloc();
        v34 = (unint64_t)v12;
        v35 = swift_slowAlloc();
        v117[0] = v35;
        *(_DWORD *)v33 = 136315394;
        swift_bridgeObjectRetain();
        v116 = sub_18FCD5144(v103, v34, v117);
        sub_1903D0ACC();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v33 + 12) = 2050;
        if (v28)
        {
          v28 = (id)v107;
          swift_bridgeObjectRetain();
          v36 = sub_1903D0D00();
          swift_bridgeObjectRelease();
        }
        else
        {
          v28 = (id)v107;
          v36 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        v116 = v36;
        sub_1903D0ACC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_18FC92000, v4, v32, "[%s] ProvisioningStepIngestPass: successfully ingested %{public}ld passes", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x19400D804](v35, -1, -1);
        MEMORY[0x19400D804](v33, -1, -1);

        v27 = (unint64_t)v28;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRetain();
      v108 = MEMORY[0x1E0DEE9E0];
      a3 = &selRef_rejectSharingInvitation_completionHandler_;
      v12 = &selRef_supportsURL_;
      v23 = (SEL *)&selRef_setSupportsInApp_;
      v37 = 0;
      while (1)
      {
        v38 = v113 ? (id)MEMORY[0x19400B200](v37, v27) : *(id *)(v27 + 8 * v37 + 32);
        v10 = v38;
        v5 = v37 + 1;
        if (__OFADD__(v37, 1))
          break;
        v39 = objc_msgSend(v38, a3[503]);
        if (!v39)
          goto LABEL_81;
        v4 = v39;
        v28 = -[NSObject uniqueID](v39, sel_uniqueID);

        if (v28)
        {
          v40 = sub_1903D05C8();
          v42 = v41;

          v105 = objc_msgSend(v10, v23[355]);
          v4 = v108;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v117[0] = v108;
          v28 = (id)v40;
          v45 = sub_18FD5293C(v40, v42);
          v46 = *(_QWORD *)(v108 + 16);
          v47 = (v44 & 1) == 0;
          v48 = v46 + v47;
          if (__OFADD__(v46, v47))
            goto LABEL_79;
          v49 = v44;
          if (*(_QWORD *)(v108 + 24) >= v48)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v4 = v117;
              sub_18FDD3168();
            }
          }
          else
          {
            sub_18FDD1AE4(v48, isUniquelyReferenced_nonNull_native);
            v4 = v117[0];
            v50 = sub_18FD5293C((uint64_t)v28, v42);
            if ((v49 & 1) != (v51 & 1))
            {
              sub_1903D0F1C();
              __break(1u);
              JUMPOUT(0x18FE204F8);
            }
            v45 = v50;
          }
          v27 = v107;
          v52 = (_QWORD *)v117[0];
          v108 = v117[0];
          if ((v49 & 1) != 0)
          {
            *(_BYTE *)(*(_QWORD *)(v117[0] + 56) + v45) = v105;
          }
          else
          {
            *(_QWORD *)(v117[0] + 8 * (v45 >> 6) + 64) |= 1 << v45;
            v53 = (_QWORD *)(v52[6] + 16 * v45);
            *v53 = v28;
            v53[1] = v42;
            *(_BYTE *)(v52[7] + v45) = v105;
            v54 = v52[2];
            v55 = __OFADD__(v54, 1);
            v56 = v54 + 1;
            if (v55)
              goto LABEL_80;
            v52[2] = v56;
            swift_bridgeObjectRetain();
          }
          a3 = &selRef_rejectSharingInvitation_completionHandler_;
          v23 = (SEL *)&selRef_setSupportsInApp_;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v5 == v29)
          {
LABEL_46:
            swift_bridgeObjectRelease();
            isa = (uint64_t)v111[4].isa;
            v58 = (uint64_t)v111[5].isa;
            isa_low = LOBYTE(v111[6].isa);
            v106 = v111[3].isa;
            v117[0] = (uint64_t)v106;
            v117[1] = isa;
            v117[2] = v58;
            v114 = isa_low;
            v118 = isa_low;
            ProvisioningCredentialsConfiguration.Credential.isPushProvisioningCredential.getter();
            if ((v60 & 1) != 0)
            {
              LOBYTE(v5) = 2;
              v104 = 1;
            }
            else if (v112)
            {
              v104 = (uint64_t)objc_msgSend(v112, sel_externalProvisioningOptions);
              LOBYTE(v5) = 2 * (v104 == 0);
            }
            else
            {
              v104 = 0;
              LOBYTE(v5) = 2;
            }
            v61 = objc_msgSend(v109, a3[503]);
            if (v61)
            {
              v62 = v61;
              v63 = sub_18FE1E698(v27);
              v64 = -[SEL moreInfoItems](v110, sel_moreInfoItems);
              if (v64)
              {
                v65 = v64;
                sub_18FCDC600(0, (unint64_t *)&unk_1EE1C1250);
                v66 = sub_1903D0784();

              }
              else
              {
                v66 = MEMORY[0x1E0DEE9D8];
              }
              sub_18FE07A04((id)v104, v5);
              DefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0 = (char *)_s11PassKitCore19SEProvisionedPassesC07primaryA06passes13moreInfoItems24externalProvisioningMode027suppressMakeDefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0(v62, v63, v66, (void *)v104, v5, v108, (char)-[SEL expressModeSetupOptional](v110, sel_expressModeSetupOptional), (char)-[SEL expressEnabled](v110, sel_expressEnabled));
              v68 = v111[11].isa;
              if (v68
                && (v69 = -[objc_class identifier](v68, sel_identifier)) != 0)
              {
                v70 = v69;
                v71 = sub_1903D05C8();
                v73 = v72;

              }
              else
              {
                v71 = 0;
                v73 = 0;
              }
              v74 = (uint64_t *)&DefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_cardIdentifier];
              swift_beginAccess();
              *v74 = v71;
              v74[1] = v73;
              swift_bridgeObjectRelease();
              v75 = 0;
              v76 = v111[8].isa;
              if (v76 != (Class)1)
              {
                v78 = v111[9].isa;
                v77 = v111[10].isa;
                sub_18FD96598(v111[8].isa, v78, v77);
                v79 = v76;
                sub_18FD6797C(v76, v78, v77);
                v75 = v76;
              }
              v80 = (void **)&DefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_notificationSuppressionAssertion];
              swift_beginAccess();
              v81 = *v80;
              *v80 = v75;

              v82 = 0;
              if (!v114)
                v82 = v106;
              sub_18FCDC6A4(v106, isa, v58, v114);
              v83 = -[objc_class carKeyTerminalPairingCredential](v82, sel_carKeyTerminalPairingCredential);

              v84 = objc_msgSend(v83, sel_configuration);
              sub_18FCD6F28(v106, isa, v58, v114);
              if (v84)
              {
                v85 = objc_msgSend(v84, sel_provisioningTemplateIdentifier);

                v86 = (unint64_t)v102;
                if (v85)
                {
                  v84 = (id)sub_1903D05C8();
                  v88 = v87;

                }
                else
                {
                  v84 = 0;
                  v88 = 0;
                }
              }
              else
              {
                v88 = 0;
                v86 = (unint64_t)v102;
              }
              LOBYTE(v108) = v5;
              v89 = &DefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0[OBJC_IVAR____TtC11PassKitCore19SEProvisionedPasses_provisioningTemplateIdentifier];
              swift_beginAccess();
              *(_QWORD *)v89 = v84;
              *((_QWORD *)v89 + 1) = v88;
              swift_bridgeObjectRelease();
              v90 = DefaultOfferForA009isExpressM13SetupOptional0sT7EnabledACSo015PKSecureElementA0C_SayALGSaySo09PKPaymentu4MoreI4ItemCGAC08ExternallM0OSDySSSbGS2btcfC_0;
              swift_bridgeObjectRetain();
              v91 = v90;
              v92 = sub_1903D0328();
              v93 = v86;
              v94 = sub_1903D0940();
              if (os_log_type_enabled(v92, v94))
              {
                v95 = swift_slowAlloc();
                v96 = (_QWORD *)swift_slowAlloc();
                v101 = swift_slowAlloc();
                v115[0] = v101;
                *(_DWORD *)v95 = 136315394;
                swift_bridgeObjectRetain();
                sub_18FCD5144(v103, v93, v115);
                sub_1903D0ACC();
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v95 + 12) = 2112;
                v97 = v91;
                sub_1903D0ACC();
                *v96 = v91;

                _os_log_impl(&dword_18FC92000, v92, v94, "[%s] provisionedPass: %@", (uint8_t *)v95, 0x16u);
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0C0);
                swift_arrayDestroy();
                MEMORY[0x19400D804](v96, -1, -1);
                swift_arrayDestroy();
                MEMORY[0x19400D804](v101, -1, -1);
                MEMORY[0x19400D804](v95, -1, -1);

              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              if (objc_msgSend(v109, sel_secureElementPass))
                __asm { BR              X11 }
LABEL_83:
              sub_18FCDC690((id)v104, v108);
              __break(1u);
              JUMPOUT(0x18FE204E4);
            }
LABEL_82:
            sub_18FCDC690((id)v104, v5);
            __break(1u);
            goto LABEL_83;
          }
          v37 = v5;
        }
        else
        {

          ++v37;
          if (v5 == v29)
            goto LABEL_46;
        }
      }
      __break(1u);
LABEL_74:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v98 = objc_msgSend((id)objc_opt_self(), sel_errorWithSeverity_, 5);
  v99 = (void *)sub_1903D05A4();
  objc_msgSend(v98, sel_addInternalDebugDescription_, v99);

  v100 = v98;
  ((void (*)(id, uint64_t))a3)(v98, 1);

}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

uint64_t sub_18FE20520(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v23 = a4;
  v8 = sub_1903D03B8();
  v26 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1903D03D0();
  v24 = *(_QWORD *)(v11 - 8);
  v25 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v14 = (void *)sub_1903D097C();
  v15 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a1;
  v17 = v23;
  v16[4] = a2;
  v16[5] = v17;
  v16[6] = a5;
  aBlock[4] = sub_18FE20CFC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = &block_descriptor_18_1;
  v18 = _Block_copy(aBlock);
  v19 = a1;
  v20 = a2;
  swift_retain();
  swift_release();
  sub_1903D03C4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCDC494();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
  sub_18FD667E8((unint64_t *)&qword_1EE1C0740, (uint64_t *)&unk_1EE1BD530, MEMORY[0x1E0DEAF38]);
  sub_1903D0B38();
  MEMORY[0x19400AF6C](0, v13, v10, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v13, v25);
}

uint64_t sub_18FE2079C(void *a1, void *a2)
{
  uint64_t *v2;

  return sub_18FE20520(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_18FE207A8(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, id);
  id v6;
  id v7;

  v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, v6);
  swift_release();

}

uint64_t sub_18FE20814(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t result;
  uint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31[3];

  v2 = v1;
  v3 = a1;
  sub_18FE0180C(a1);
  v31[0] = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BEFD0);
  sub_18FD667E8((unint64_t *)&qword_1EE1C0AE0, (uint64_t *)&unk_1EE1BEFD0, MEMORY[0x1E0DEAF20]);
  v5 = sub_1903D0544();
  v7 = v6;
  swift_bridgeObjectRelease();
  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v8 = sub_1903D0340();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EE1BF740);
  swift_retain_n();
  swift_bridgeObjectRetain();
  v9 = sub_1903D0328();
  v10 = sub_1903D0940();
  v30 = v3;
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v31[0] = swift_slowAlloc();
    v29 = v5;
    v12 = v31[0];
    *(_DWORD *)v11 = 136315394;
    v13 = objc_msgSend(*(id *)(v2 + 56), "sid");
    v14 = sub_1903D05C8();
    v16 = v15;

    sub_18FCD5144(v14, v16, v31);
    sub_1903D0ACC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_18FCD5144(v29, v7, v31);
    v3 = v30;
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v9, v10, "[%s] Removing provisioned passes: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v12, -1, -1);
    MEMORY[0x19400D804](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v17 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  v18 = *(void **)(v17 + 72);
  if (!(v3 >> 62))
  {
    v19 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v20 = v18;
    result = swift_bridgeObjectRetain();
    if (v19)
      goto LABEL_8;
LABEL_15:

    return swift_bridgeObjectRelease();
  }
  v28 = v18;
  swift_bridgeObjectRetain();
  result = sub_1903D0D00();
  v19 = result;
  if (!result)
    goto LABEL_15;
LABEL_8:
  if (v19 >= 1)
  {
    v22 = 0;
    v23 = v3 & 0xC000000000000001;
    do
    {
      if (v23)
        v24 = (id)MEMORY[0x19400B200](v22, v3);
      else
        v24 = *(id *)(v3 + 8 * v22 + 32);
      v25 = v24;
      ++v22;
      v26 = objc_msgSend(v24, sel_paymentPass);
      v27 = objc_msgSend(objc_allocWithZone((Class)PKPaymentDeprovisionRequest), sel_initWithPaymentPass_, v26);

      objc_msgSend(v18, sel_deprovisionForRequest_completion_, v27, 0);
      v3 = v30;
    }
    while (v19 != v22);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void (*sub_18FE20BC8(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_18FE20C48(v6, a2, a3);
  return sub_18FE20C1C;
}

void sub_18FE20C1C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_18FE20C48(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x19400B200](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for ProvisioningStepPostActivationActions.PostActivationActionsResult;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ProvisioningStepIngestPass()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningStepIngestPass()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningStepIngestPass.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

ValueMetadata *type metadata accessor for ProvisioningStepIngestPass.IngestResult()
{
  return &type metadata for ProvisioningStepIngestPass.IngestResult;
}

uint64_t sub_18FE20CFC()
{
  return sub_18FDD7E9C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_18FE1F548);
}

uint64_t objectdestroy_14Tm_0()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FE20D60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DEF498];
  v3 = sub_1903D03AC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_18FE20DA4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 0;
  v2 = *MEMORY[0x1E0DEF480];
  v3 = sub_1903D03AC();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_18FE20DF0()
{
  sub_1903D03B8();
  sub_18FCD5E34((unint64_t *)&qword_1EE1C0730, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
  sub_18FD4A258((unint64_t *)&qword_1EE1C0740, (uint64_t *)&unk_1EE1BD530);
  return sub_1903D0B38();
}

__n128 ProvisioningStepAddPassRequest.__allocating_init(context:credential:sharedState:)(uint64_t a1, __n128 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  __n128 result;

  v6 = swift_allocObject();
  v7 = a2[1].n128_u64[0];
  v8 = a2[1].n128_u8[8];
  *(_QWORD *)(v6 + 16) = a1;
  result = *a2;
  *(__n128 *)(v6 + 24) = *a2;
  *(_QWORD *)(v6 + 40) = v7;
  *(_BYTE *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 56) = a3;
  return result;
}

uint64_t ProvisioningStepAddPassRequest.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 40) = v4;
  *(_BYTE *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = a3;
  return v3;
}

uint64_t ProvisioningStepAddPassRequest.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return v0;
}

uint64_t ProvisioningStepAddPassRequest.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return swift_deallocClassInstance();
}

__n128 sub_18FE20F90@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  __n128 result;

  type metadata accessor for ProvisioningStepAddPassRequest();
  v8 = swift_allocObject();
  v9 = a2[1].n128_u64[0];
  v10 = a2[1].n128_u8[8];
  *(_QWORD *)(v8 + 16) = a1;
  result = *a2;
  *(__n128 *)(v8 + 24) = *a2;
  *(_QWORD *)(v8 + 40) = v9;
  *(_BYTE *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 56) = a3;
  *a4 = v8;
  return result;
}

uint64_t type metadata accessor for ProvisioningStepAddPassRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningStepAddPassRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningStepAddPassRequest.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for ProvisioningStepAddPassRequest.AddPassResult()
{
  return &type metadata for ProvisioningStepAddPassRequest.AddPassResult;
}

uint64_t sub_18FE21038(void *a1, char a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t result;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  void (*v18)(_QWORD *, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t (*)(void *), _QWORD *);
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  _QWORD *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  void (*v45)(_QWORD, _QWORD);
  id v46;
  uint64_t aBlock[6];
  uint64_t v48;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v14 = result;
    if ((a2 & 1) == 0)
    {
      v15 = (_QWORD *)swift_allocObject();
      v15[2] = a4;
      v15[3] = a5;
      v15[4] = a1;
      v15[5] = a6;
      v15[6] = a7;
      v16 = *(void **)(v14 + 24);
      if (*(_BYTE *)(v14 + 48))
      {
        if (*(_BYTE *)(v14 + 48) == 1)
        {
          v18 = *(void (**)(_QWORD *, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t (*)(void *), _QWORD *))(v14 + 32);
          v17 = *(_QWORD *)(v14 + 40);
          sub_18FE23654(a1);
          sub_18FE23654(a1);
          swift_retain();
          swift_bridgeObjectRetain();
          sub_18FE23654(a1);
          swift_retain();
          swift_bridgeObjectRetain();
          sub_18FCDC6A4(v16, (uint64_t)v18, v17, 1);

          sub_18FE236AC(v18, v17, a1, (uint64_t)sub_18FE23634, (uint64_t)v15);
          sub_18FE13FC0(a1);
          swift_release();
          swift_release();
          sub_18FE13FC0(a1);
          swift_release();
LABEL_24:
          swift_release();
          return swift_bridgeObjectRelease();
        }
        sub_18FE23654(a1);
        sub_18FE23654(a1);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_18FE23654(a1);
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      }
      sub_18FE23654(a1);
      sub_18FE23654(a1);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_18FE23654(a1);
      swift_retain();
      swift_bridgeObjectRetain();
      v23 = objc_msgSend(v16, sel_issuerProvisioningExtensionCredential);
      if (!v23)
      {
LABEL_15:
        if (qword_1EE1BCFE8 != -1)
          swift_once();
        v35 = sub_1903D0340();
        __swift_project_value_buffer(v35, (uint64_t)qword_1EE1BF740);
        swift_bridgeObjectRetain_n();
        v36 = sub_1903D0328();
        v37 = sub_1903D0940();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc();
          v45 = a4;
          v39 = swift_slowAlloc();
          aBlock[0] = v39;
          *(_DWORD *)v38 = 136315138;
          swift_bridgeObjectRetain();
          v48 = sub_18FCD5144(a6, a7, aBlock);
          sub_1903D0ACC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_18FC92000, v36, v37, "[%s] ProvisioningStepAddPassRequest: unable to generate payment request based on credential", v38, 0xCu);
          swift_arrayDestroy();
          v40 = v39;
          a4 = v45;
          MEMORY[0x19400D804](v40, -1, -1);
          MEMORY[0x19400D804](v38, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v24 = objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, 1, 4);
        v41 = (void *)sub_1903D05A4();
        objc_msgSend(v24, sel_addInternalDebugDescription_, v41);

        objc_msgSend(v24, sel_setUnderlyingError_, 0);
        a4(v24, 1);
        goto LABEL_23;
      }
      v24 = v23;
      v25 = objc_msgSend(v23, sel_extension);
      if (v25)
      {
        v26 = v25;
        v27 = objc_msgSend(v24, sel_entry);
        if (v27)
        {
          v28 = v27;
          v46 = (id)objc_opt_self();
          v29 = (_QWORD *)swift_allocObject();
          v29[2] = v26;
          v29[3] = sub_18FE23634;
          v29[4] = v15;
          v29[5] = a1;
          v29[6] = v28;
          aBlock[4] = (uint64_t)sub_18FE2369C;
          aBlock[5] = (uint64_t)v29;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_18FE23548;
          aBlock[3] = (uint64_t)&block_descriptor_16_3;
          v30 = _Block_copy(aBlock);
          v31 = v26;
          sub_18FE23654(a1);
          v32 = v31;
          swift_retain();
          v33 = v28;
          swift_release();
          v34 = objc_msgSend(v46, sel_beginWithExtension_completion_, v32, v30);
          _Block_release(v30);

          swift_unknownObjectRelease();
LABEL_23:
          sub_18FE13FC0(a1);
          swift_release();
          swift_release();
          sub_18FE13FC0(a1);

          goto LABEL_24;
        }

      }
      v42 = objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, 1, 4);
      v43 = (void *)sub_1903D05A4();
      objc_msgSend(v42, sel_addInternalDebugDescription_, v43);

      objc_msgSend(v42, sel_setUnderlyingError_, 0);
      v44 = v42;
      a4(v42, 1);

      goto LABEL_23;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BD0A0);
    swift_willThrowTypedImpl();
    aBlock[0] = (uint64_t)a1;
    v19 = a1;
    v20 = a1;
    sub_18FCDC600(0, &qword_1EE1C1268);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v21 = (id)v48;
    }
    else
    {
      v21 = objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, 1, 4);
      v22 = (void *)sub_1903D05A4();
      objc_msgSend(v21, sel_addInternalDebugDescription_, v22);

      objc_msgSend(v21, sel_setUnderlyingError_, 0);
    }
    a4(v21, 1);
    sub_18FE13FC0(a1);

    return swift_release();
  }
  return result;
}

void sub_18FE2177C(void *a1, void *a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, void *a5, uint64_t a6, unint64_t a7)
{
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  void *v28;
  void (*v29)(_QWORD, _QWORD);
  void *v30;
  id v31;
  id v32;
  void (*v33)(id, uint64_t);
  uint64_t v34;

  if (!a1)
  {
    if (a2)
    {
      v32 = a2;
    }
    else
    {
      v32 = objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, 1, 4);
      v29 = a3;
      v30 = (void *)sub_1903D05A4();
      objc_msgSend(v32, sel_addInternalDebugDescription_, v30);

      a3 = v29;
      objc_msgSend(v32, sel_setUnderlyingError_, 0);
    }
    v31 = a2;
    a3(v32, 1);
    goto LABEL_18;
  }
  v12 = a1;
  v13 = objc_msgSend(a5, sel_publicKeyHash);
  if (v13)
  {
    v14 = sub_1903D01B4();
    v16 = v15;

    v13 = (id)sub_1903D01A8();
    sub_18FCD5938(v14, v16);
  }
  objc_msgSend(v12, sel_setPublicKeyHash_, v13);

  v17 = objc_msgSend(a5, sel_nonce);
  if (v17)
  {
    v18 = sub_1903D01B4();
    v20 = v19;

    v17 = (id)sub_1903D01A8();
    sub_18FCD5938(v18, v20);
  }
  objc_msgSend(v12, sel_setNonce_, v17);

  if (objc_msgSend(v12, sel__hasRequiredFields_, 1))
  {
    v32 = v12;
    a3(a1, 0);

LABEL_18:
    return;
  }
  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v33 = (void (*)(id, uint64_t))a3;
  v22 = sub_1903D0340();
  __swift_project_value_buffer(v22, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain_n();
  v23 = sub_1903D0328();
  v24 = sub_1903D0940();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v34 = v26;
    *(_DWORD *)v25 = 136315138;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a6, a7, &v34);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v23, v24, "[%s] ProvisioningStepAddPassRequest: missing required fields", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v26, -1, -1);
    MEMORY[0x19400D804](v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v27 = objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, 1, 4);
  v28 = (void *)sub_1903D05A4();
  objc_msgSend(v27, sel_addInternalDebugDescription_, v28);

  objc_msgSend(v27, sel_setUnderlyingError_, 0);
  v33(v27, 1);

}

void sub_18FE21BAC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t aBlock;
  unint64_t v24;
  void (*v25)(uint64_t, void *, void *);
  void *v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  _QWORD *v28;

  v4 = v3;
  v8 = objc_msgSend(*(id *)(v4 + 56), "sid");
  v9 = sub_1903D05C8();
  v11 = v10;

  v12 = objc_msgSend(a1, sel_encryptionScheme);
  sub_1903D05C8();

  v13 = objc_allocWithZone((Class)PKPaymentIssuerProvisioningCertificatesRequest);
  v14 = (void *)sub_1903D05A4();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_initWithEncryptionScheme_, v14);

  if (v15)
  {
    aBlock = 1011108179;
    v24 = 0xE400000000000000;
    sub_1903D067C();
    sub_1903D067C();
    v16 = (void *)sub_1903D05A4();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_addDiagnosticReason_, v16);

    v17 = *(_QWORD *)(v4 + 16);
    swift_beginAccess();
    v18 = *(void **)(v17 + 72);
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v9;
    v19[3] = v11;
    v19[4] = a2;
    v19[5] = a3;
    v19[6] = v18;
    v27 = sub_18FE22234;
    v28 = v19;
    aBlock = MEMORY[0x1E0C809B0];
    v24 = 1107296256;
    v25 = sub_18FCD3020;
    v26 = &block_descriptor_43;
    v20 = _Block_copy(&aBlock);
    v21 = v18;
    v22 = v15;
    swift_retain();
    swift_release();
    objc_msgSend(v21, sel_issuerProvisioningCertificatesForRequest_withCompletion_, v22, v20);
    _Block_release(v20);

  }
  else
  {
    __break(1u);
  }
}

void sub_18FE21DD4(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(_QWORD, _QWORD), uint64_t a6, void *a7)
{
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t inited;
  __CFString *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void (*v32)(_QWORD, _QWORD);
  uint64_t aBlock[7];

  if (a1)
  {
    v10 = a1;
    v11 = objc_msgSend(v10, sel_nonce);
    if (v11)
    {
      v12 = sub_1903D01B4();
      v14 = v13;

      v11 = (id)sub_1903D01A8();
      sub_18FCD5938(v12, v14);
    }
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v10;
    v15[3] = a5;
    v15[4] = a6;
    aBlock[4] = (uint64_t)sub_18FE235F4;
    aBlock[5] = (uint64_t)v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_18FE22444;
    aBlock[3] = (uint64_t)&block_descriptor_7_1;
    v16 = _Block_copy(aBlock);
    v17 = v10;
    swift_retain();
    swift_release();
    objc_msgSend(a7, sel_signNonce_withCompletion_, v11, v16);
    _Block_release(v16);

  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C1260);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19043CD00;
    *(_QWORD *)(inited + 32) = 0x746C75736572;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    v22 = CFSTR("com.apple.passbook.payment.issuer-provisioning");
    *(_QWORD *)(inited + 48) = sub_1903D05A4();
    sub_18FD501DC(inited);
    sub_18FCDC600(0, (unint64_t *)&qword_1EE1C0B18);
    v23 = (void *)sub_1903D04CC();
    swift_bridgeObjectRelease();
    PKAnalyticsSendEvent(v22, v23);

    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v24 = sub_1903D0340();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain_n();
    v25 = sub_1903D0328();
    v26 = sub_1903D0940();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v32 = a5;
      aBlock[0] = swift_slowAlloc();
      v28 = aBlock[0];
      *(_DWORD *)v27 = 136315138;
      swift_bridgeObjectRetain();
      aBlock[6] = sub_18FCD5144(a3, a4, aBlock);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FC92000, v25, v26, "[%s] ProvisioningStepAddPassRequest: failed to fetch certificates", v27, 0xCu);
      swift_arrayDestroy();
      v29 = v28;
      a5 = v32;
      MEMORY[0x19400D804](v29, -1, -1);
      MEMORY[0x19400D804](v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v11 = objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, 1, 4);
    v30 = (void *)sub_1903D05A4();
    objc_msgSend(v11, sel_addInternalDebugDescription_, v30);

    if (a2)
      v31 = (void *)sub_1903D0124();
    else
      v31 = 0;
    objc_msgSend(v11, sel_setUnderlyingError_, v31);

    a5(v11, 1);
  }

}

uint64_t sub_18FE22200()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_18FE22234(uint64_t a1, uint64_t a2)
{
  return sub_18FE23640(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_18FE21DD4);
}

void sub_18FE22240(uint64_t a1, unint64_t a2, void *a3, void (*a4)(id, uint64_t))
{
  id v5;
  void *v6;
  uint64_t inited;
  __CFString *v8;
  void *v9;
  void *v13;

  if (a2 >> 60 == 15)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, 1, 4);
    v6 = (void *)sub_1903D05A4();
    objc_msgSend(v5, sel_addInternalDebugDescription_, v6);

    objc_msgSend(v5, sel_setUnderlyingError_, 0);
    a4(v5, 1);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C1260);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19043CD00;
    *(_QWORD *)(inited + 32) = 0x746C75736572;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    v8 = CFSTR("com.apple.passbook.payment.issuer-provisioning");
    *(_QWORD *)(inited + 48) = sub_1903D05A4();
    sub_18FD501DC(inited);
    sub_18FCDC600(0, (unint64_t *)&qword_1EE1C0B18);
    v9 = (void *)sub_1903D04CC();
    swift_bridgeObjectRelease();
    PKAnalyticsSendEvent(v8, v9);

  }
  else
  {
    sub_18FCD58F4(a1, a2);
    v13 = (void *)sub_1903D01A8();
    objc_msgSend(a3, sel_setNonceSignature_, v13);

    a4(a3, 0);
    sub_18FD4D5D8(a1, a2);
  }
}

uint64_t sub_18FE22444(uint64_t a1, void *a2)
{
  void *v2;
  void (*v3)(void *, unint64_t);
  id v4;
  unint64_t v5;
  unint64_t v6;

  v2 = a2;
  v3 = *(void (**)(void *, unint64_t))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v4 = v2;
    v2 = (void *)sub_1903D01B4();
    v6 = v5;

  }
  else
  {
    swift_retain();
    v6 = 0xF000000000000000;
  }
  v3(v2, v6);
  sub_18FD4D5D8((uint64_t)v2, v6);
  return swift_release();
}

uint64_t block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_42()
{
  return swift_release();
}

void sub_18FE224DC(uint64_t a1, unint64_t a2, void (*a3)(_QWORD, id))
{
  uint64_t inited;
  __CFString *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1C1260);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19043CD00;
  *(_QWORD *)(inited + 32) = 0x746C75736572;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v7 = CFSTR("com.apple.passbook.payment.issuer-provisioning");
  *(_QWORD *)(inited + 48) = sub_1903D05A4();
  sub_18FD501DC(inited);
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1C0B18);
  v8 = (void *)sub_1903D04CC();
  swift_bridgeObjectRelease();
  PKAnalyticsSendEvent(v7, v8);

  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v9 = sub_1903D0340();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain_n();
  v10 = sub_1903D0328();
  v11 = sub_1903D0934();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_18FCD5144(a1, a2, &v16);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v10, v11, "[%s] Error: Timed out waiting for add payment pass request to be returned", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400D804](v13, -1, -1);
    MEMORY[0x19400D804](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v14 = objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, 1, 4);
  v15 = (void *)sub_1903D05A4();
  objc_msgSend(v14, sel_addInternalDebugDescription_, v15);

  objc_msgSend(v14, sel_setUnderlyingError_, 0);
  a3(0, v14);

}

uint64_t sub_18FE227DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v23 = a5;
  v11 = sub_1903D03B8();
  v26 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1903D03D0();
  v24 = *(_QWORD *)(v14 - 8);
  v25 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v17 = (void *)sub_1903D097C();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  v19 = v23;
  v18[4] = a4;
  v18[5] = v19;
  v18[6] = a6;
  v18[7] = a1;
  aBlock[4] = sub_18FE23EC4;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = &block_descriptor_31_1;
  v20 = _Block_copy(aBlock);
  v21 = a1;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  sub_1903D03C4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCD5E34((unint64_t *)&qword_1EE1C0730, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1BD530);
  sub_18FD4A258((unint64_t *)&qword_1EE1C0740, (uint64_t *)&unk_1EE1BD530);
  sub_1903D0B38();
  MEMORY[0x19400AF6C](0, v16, v13, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v25);
}

void sub_18FE22A1C(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(uint64_t, _QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;

  swift_getObjectType();
  if ((sub_1903D09AC() & 1) != 0)
  {
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v10 = sub_1903D0340();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain_n();
    v11 = sub_1903D0328();
    v12 = sub_1903D0940();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v15 = v14;
      *(_DWORD *)v13 = 136315138;
      swift_bridgeObjectRetain();
      sub_18FCD5144(a2, a3, &v15);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FC92000, v11, v12, "[%s] Add payment pass request returned after timeout", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v14, -1, -1);
      MEMORY[0x19400D804](v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    sub_1903D09C4();
    a4(a6, 0);
  }
}

void sub_18FE22BF4(int a1, void *a2, int a3, id a4, void (*a5)(_QWORD, id), uint64_t a6, void *a7, void *a8)
{
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t inited;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  void *v70;
  _QWORD aBlock[6];
  char v73[32];
  __int128 v74;

  if (a2)
  {
    v11 = a2;
    v12 = objc_msgSend(a7, sel_certificates);
    if (v12)
    {
      v13 = v12;
      v68 = v11;
      v69 = a6;
      v14 = sub_1903D0784();

      v15 = *(_QWORD *)(v14 + 16);
      v70 = a7;
      if (v15)
      {
        v67 = a8;
        v16 = v14 + 32;
        swift_bridgeObjectRetain();
        v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          sub_18FCD6028(v16, (uint64_t)aBlock);
          sub_18FCD6028((uint64_t)aBlock, (uint64_t)v73);
          if ((swift_dynamicCast() & 1) == 0)
            v74 = xmmword_19043D540;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
          v19 = *((_QWORD *)&v74 + 1);
          if (*((_QWORD *)&v74 + 1) >> 60 != 15)
          {
            v20 = v74;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v17 = sub_18FD52830(0, v17[2] + 1, 1, v17);
            v22 = v17[2];
            v21 = v17[3];
            if (v22 >= v21 >> 1)
              v17 = sub_18FD52830((_QWORD *)(v21 > 1), v22 + 1, 1, v17);
            v17[2] = v22 + 1;
            v18 = &v17[2 * v22];
            v18[4] = v20;
            v18[5] = v19;
          }
          v16 += 32;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease_n();
        a8 = v67;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v42 = objc_msgSend(a8, sel_identifier);
      if (!v42)
      {
        sub_1903D05C8();
        v42 = (id)sub_1903D05A4();
        swift_bridgeObjectRelease();
      }
      v43 = objc_msgSend(a8, sel_addRequestConfiguration);
      v44 = (void *)sub_1903D0778();
      swift_bridgeObjectRelease();
      v45 = objc_msgSend(a7, sel_nonce);
      if (v45)
      {
        v46 = v45;
        v47 = sub_1903D01B4();
        v49 = v48;

        v40 = (id)sub_1903D01A8();
        v50 = v49;
        a7 = v70;
        sub_18FCD5938(v47, v50);
      }
      else
      {
        v40 = 0;
      }
      v51 = objc_msgSend(a7, sel_nonceSignature);
      if (v51)
      {
        v52 = v51;
        v53 = sub_1903D01B4();
        v55 = v54;

        v41 = (void *)sub_1903D01A8();
        v56 = v53;
        a7 = v70;
        sub_18FCD5938(v56, v55);
      }
      else
      {
        v41 = 0;
      }
      v57 = (_QWORD *)swift_allocObject();
      v57[2] = v68;
      v57[3] = a5;
      v57[4] = v69;
      v57[5] = a7;
      aBlock[4] = sub_18FE23F08;
      aBlock[5] = v57;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_18FD55778;
      aBlock[3] = &block_descriptor_37_3;
      v58 = _Block_copy(aBlock);
      v59 = v68;
      swift_retain();
      v60 = a7;
      swift_release();
      objc_msgSend(v59, sel_generateRequestWithEntryIdentifier_configuration_certificateChain_nonce_nonceSignature_completionHandler_, v42, v43, v44, v40, v41, v58);
      _Block_release(v58);

      goto LABEL_32;
    }
    __break(1u);
    goto LABEL_36;
  }
  v24 = objc_msgSend(a4, sel__plugIn);
  if (!v24)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v25 = objc_msgSend(v24, sel_localizedContainingName);
  swift_unknownObjectRelease();
  if (v25)
    goto LABEL_19;
  v26 = objc_msgSend(a4, sel__localizedName);
  if (v26)
  {
    v25 = v26;
LABEL_19:
    v27 = sub_1903D05C8();
    v29 = v28;
    goto LABEL_20;
  }
  v61 = PKPassKitBundle();
  if (v61)
  {
    v62 = v61;
    v63 = (void *)sub_1903D05A4();
    v64 = (void *)sub_1903D05A4();
    v65 = (void *)sub_1903D05A4();
    v25 = objc_msgSend(v62, sel_localizedStringForKey_value_table_, v63, v64, v65);

    v27 = sub_1903D05C8();
    v29 = v66;

LABEL_20:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1C1270);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19043CD00;
    *(_QWORD *)(inited + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 64) = sub_18FD5D558();
    *(_QWORD *)(inited + 32) = v27;
    *(_QWORD *)(inited + 40) = v29;
    sub_18FD44178(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1C1280);
    swift_arrayDestroy();
    v31 = PKPassKitBundle();
    if (v31)
    {
      v32 = v31;
      v33 = (void *)sub_1903D05A4();
      v34 = (void *)sub_1903D05A4();
      v35 = (void *)sub_1903D05A4();
      v36 = objc_msgSend(v32, (SEL)&selRef_isNFCExpressEnabled + 3, v33, v34, v35);

      sub_1903D05C8();
      v37 = (void *)sub_1903D05A4();
      swift_bridgeObjectRelease();
      v38 = (void *)sub_1903D05A4();
      swift_bridgeObjectRelease();
      v39 = objc_msgSend((id)objc_opt_self(), sel_errorWithTitle_message_severity_, v37, v38, 5);

      v40 = v39;
      a5(0, v39);
      v41 = v40;
LABEL_32:

      return;
    }
    goto LABEL_37;
  }
LABEL_38:
  __break(1u);
}

void sub_18FE232BC(void *a1, id a2, void (*a3)(void *, id), uint64_t a4, void *a5)
{
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;

  objc_msgSend(a2, sel_invalidate);
  if (a1)
  {
    v19 = a1;
    v8 = objc_msgSend(a5, sel_publicKeyHash);
    if (v8)
    {
      v9 = sub_1903D01B4();
      v11 = v10;

      v8 = (id)sub_1903D01A8();
      sub_18FCD5938(v9, v11);
    }
    objc_msgSend(v19, sel_setPublicKeyHash_, v8);

    v12 = objc_msgSend(a5, sel_nonce);
    if (v12)
    {
      v13 = sub_1903D01B4();
      v15 = v14;

      v12 = (id)sub_1903D01A8();
      sub_18FCD5938(v13, v15);
    }
    objc_msgSend(v19, sel_setNonce_, v12);

    if (objc_msgSend(v19, sel__hasRequiredFields_, 1))
    {
      v19 = v19;
      a3(a1, 0);

    }
    else
    {
      v17 = objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, 1, 4);
      v18 = (void *)sub_1903D05A4();
      objc_msgSend(v17, sel_addInternalDebugDescription_, v18);

      objc_msgSend(v17, sel_setUnderlyingError_, 0);
      a3(0, v17);

    }
  }
  else
  {
    v19 = objc_msgSend((id)objc_opt_self(), sel_errorWithCommonType_severity_, 1, 4);
    v16 = (void *)sub_1903D05A4();
    objc_msgSend(v19, sel_addInternalDebugDescription_, v16);

    objc_msgSend(v19, sel_setUnderlyingError_, 0);
    a3(0, v19);
  }

}

void sub_18FE23548(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void (*v7)(uint64_t, void *, uint64_t);
  id v8;

  v7 = *(void (**)(uint64_t, void *, uint64_t))(a1 + 32);
  swift_retain();
  v8 = a3;
  swift_unknownObjectRetain();
  v7(a2, a3, a4);
  swift_release();
  swift_unknownObjectRelease();

}

uint64_t sub_18FE235C8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_18FE235F4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_18FE22240(a1, a2, *(void **)(v2 + 16), *(void (**)(id, uint64_t))(v2 + 24));
}

uint64_t sub_18FE23600()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18FE23634(uint64_t a1, uint64_t a2)
{
  return sub_18FE23640(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_18FE2177C);
}

uint64_t sub_18FE23640(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

id sub_18FE23654(id a1)
{
  return a1;
}

uint64_t sub_18FE23660()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

void sub_18FE2369C(int a1, void *a2, int a3)
{
  uint64_t v3;

  sub_18FE22BF4(a1, a2, a3, *(id *)(v3 + 16), *(void (**)(_QWORD, id))(v3 + 24), *(_QWORD *)(v3 + 32), *(void **)(v3 + 40), *(void **)(v3 + 48));
}

id sub_18FE236AC(void (*a1)(_QWORD *, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t (*)(void *a1), _QWORD *), uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t ObjectType;
  char *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t);
  char *v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  char *v42;
  id result;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(_QWORD *, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t (*)(void *), _QWORD *);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  char v84[32];
  __int128 v85;
  _QWORD aBlock[6];

  v81 = a4;
  v82 = a5;
  v78 = a3;
  v65 = a2;
  v66 = a1;
  *(_QWORD *)&v83 = sub_1903D03B8();
  v77 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v74 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1903D03D0();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v73 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1903D03AC();
  v72 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v71 = (char *)&v65 - v12;
  v70 = sub_1903D03E8();
  v69 = *(_QWORD *)(v70 - 8);
  v13 = MEMORY[0x1E0C80A78](v70);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v68 = (char *)&v65 - v16;
  v17 = sub_1903D0994();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938];
  v67 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend(*(id *)(v5 + 56), "sid", v65);
  v22 = sub_1903D05C8();
  v79 = v23;
  v80 = v22;

  sub_18FCDC600(0, (unint64_t *)&unk_1EE1BEB30);
  sub_18FCDC600(0, (unint64_t *)&qword_1EE1BD520);
  v24 = (void *)sub_1903D097C();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FCD5E34((unint64_t *)&unk_1EE1C0710, v18, MEMORY[0x1E0DEF948]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BEB40);
  sub_18FD4A258((unint64_t *)&unk_1EE1C0720, &qword_1EE1BEB40);
  sub_1903D0B38();
  v25 = sub_1903D09A0();

  (*(void (**)(char *, uint64_t))(v67 + 8))(v20, v17);
  ObjectType = swift_getObjectType();
  sub_1903D03DC();
  v27 = v68;
  MEMORY[0x19400A9D8](v15, 20.0);
  v28 = *(void (**)(char *, uint64_t))(v69 + 8);
  v29 = v15;
  v30 = v70;
  v28(v29, v70);
  v31 = v72;
  v32 = *(void (**)(char *, _QWORD, uint64_t))(v72 + 104);
  v33 = v71;
  v32(v71, *MEMORY[0x1E0DEF498], v8);
  *(_QWORD *)v11 = 0;
  v32(v11, *MEMORY[0x1E0DEF480], v8);
  MEMORY[0x19400AFC0](v27, v33, v11, ObjectType);
  v34 = *(void (**)(char *, uint64_t))(v31 + 8);
  v34(v11, v8);
  v34(v33, v8);
  v35 = v27;
  v36 = v78;
  v28(v35, v30);
  v37 = (_QWORD *)swift_allocObject();
  v38 = v79;
  v37[2] = v80;
  v37[3] = v38;
  v39 = v82;
  v37[4] = v81;
  v37[5] = v39;
  aBlock[4] = sub_18FE23E38;
  aBlock[5] = v37;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FDF4F30;
  aBlock[3] = &block_descriptor_22_1;
  v40 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v41 = v73;
  sub_1903D03C4();
  v42 = v74;
  sub_18FE20DF0();
  v72 = ObjectType;
  sub_1903D09B8();
  _Block_release(v40);
  (*(void (**)(char *, _QWORD))(v77 + 8))(v42, v83);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v41, v76);
  swift_release();
  result = objc_msgSend(v36, sel_certificates);
  if (!result)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v44 = result;
  v77 = v25;
  v45 = sub_1903D0784();

  v46 = *(_QWORD *)(v45 + 16);
  if (v46)
  {
    v47 = v45 + 32;
    swift_bridgeObjectRetain();
    v48 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v83 = xmmword_19043D540;
    do
    {
      sub_18FCD6028(v47, (uint64_t)aBlock);
      sub_18FCD6028((uint64_t)aBlock, (uint64_t)v84);
      if ((swift_dynamicCast() & 1) == 0)
        v85 = v83;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
      v50 = *((_QWORD *)&v85 + 1);
      if (*((_QWORD *)&v85 + 1) >> 60 != 15)
      {
        v51 = v85;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v48 = sub_18FD52830(0, v48[2] + 1, 1, v48);
        v53 = v48[2];
        v52 = v48[3];
        if (v53 >= v52 >> 1)
          v48 = sub_18FD52830((_QWORD *)(v52 > 1), v53 + 1, 1, v48);
        v48[2] = v53 + 1;
        v49 = &v48[2 * v53];
        v49[4] = v51;
        v49[5] = v50;
      }
      v47 += 32;
      --v46;
    }
    while (v46);
    swift_bridgeObjectRelease_n();
    v36 = v78;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  result = objc_msgSend(v36, sel_nonce);
  if (!result)
    goto LABEL_19;
  v54 = result;
  v55 = sub_1903D01B4();
  v57 = v56;

  result = objc_msgSend(v36, sel_nonceSignature);
  if (result)
  {
    v58 = result;
    v59 = sub_1903D01B4();
    v61 = v60;

    v62 = (_QWORD *)swift_allocObject();
    v63 = v80;
    v62[2] = v77;
    v62[3] = v63;
    v64 = v81;
    v62[4] = v79;
    v62[5] = v64;
    v62[6] = v82;
    swift_retain();
    swift_unknownObjectRetain();
    v66(v48, v55, v57, v59, v61, sub_18FE23E78, v62);
    swift_release();
    swift_bridgeObjectRelease();
    sub_18FCD5938(v59, v61);
    sub_18FCD5938(v55, v57);
    sub_1903D09D0();
    return (id)swift_unknownObjectRelease();
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_18FE23E0C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_18FE23E38()
{
  uint64_t v0;

  sub_18FE224DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD, id))(v0 + 32));
}

uint64_t sub_18FE23E44()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FE23E78(void *a1)
{
  uint64_t *v1;

  return sub_18FE227DC(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_18FE23E88()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_18FE23EC4()
{
  uint64_t v0;

  sub_18FE22A1C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(uint64_t, _QWORD))(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_18FE23ED4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_18FE23F08(void *a1)
{
  uint64_t v1;

  sub_18FE232BC(a1, *(id *)(v1 + 16), *(void (**)(void *, id))(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

char *sub_18FE23F3C(uint64_t a1)
{
  char *v2;
  uint64_t v3;
  uint64_t i;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t j;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  char *v23;
  int64_t v24;
  char v25;
  char *v26;

  v2 = (char *)sub_18FD4F980(MEMORY[0x1E0DEE9D8]);
  v26 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v3; ++i)
    {
      v25 = *(_BYTE *)(a1 + i + 32);
      sub_18FD5181C(&v26, &v25);
    }
    swift_bridgeObjectRelease();
    v5 = v26;
  }
  else
  {
    v5 = v2;
  }
  v6 = 0;
  v7 = *((_QWORD *)v5 + 8);
  v23 = v5 + 64;
  v8 = 1 << v5[32];
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v24 = (unint64_t)(v8 + 63) >> 6;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  if ((v9 & v7) == 0)
    goto LABEL_10;
LABEL_9:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (j = v12 | (v6 << 6); ; j = __clz(__rbit64(v15)) + (v6 << 6))
  {
    v17 = *(_QWORD *)(*((_QWORD *)v5 + 7) + 8 * j);
    v18 = *(_QWORD *)(v17 + 16);
    if (!v18)
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __break(1u);
      JUMPOUT(0x18FE24868);
    }
    v19 = *(_BYTE *)(v17 + 32);
    if (v18 != 1)
    {
      swift_bridgeObjectRetain();
      __asm { BR              X10 }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_18FD51C18(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v21 = *((_QWORD *)v11 + 2);
    v20 = *((_QWORD *)v11 + 3);
    if (v21 >= v20 >> 1)
      v11 = sub_18FD51C18((char *)(v20 > 1), v21 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v21 + 1;
    v11[v21 + 32] = v19;
    if (v10)
      goto LABEL_9;
LABEL_10:
    if (__OFADD__(v6++, 1))
      goto LABEL_40;
    if (v6 >= v24)
      break;
    v15 = *(_QWORD *)&v23[8 * v6];
    if (v15)
      goto LABEL_24;
    v16 = v6 + 1;
    if (v6 + 1 >= v24)
      break;
    v15 = *(_QWORD *)&v23[8 * v16];
    if (!v15)
    {
      v16 = v6 + 2;
      if (v6 + 2 >= v24)
        break;
      v15 = *(_QWORD *)&v23[8 * v16];
      if (!v15)
      {
        v16 = v6 + 3;
        if (v6 + 3 >= v24)
          break;
        v15 = *(_QWORD *)&v23[8 * v16];
        if (!v15)
        {
          v16 = v6 + 4;
          if (v6 + 4 >= v24)
            break;
          v15 = *(_QWORD *)&v23[8 * v16];
          if (!v15)
          {
            v16 = v6 + 5;
            if (v6 + 5 >= v24)
              break;
            v15 = *(_QWORD *)&v23[8 * v16];
            if (!v15)
            {
              while (1)
              {
                v6 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v6 >= v24)
                  goto LABEL_38;
                v15 = *(_QWORD *)&v23[8 * v6];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
          }
        }
      }
    }
    v6 = v16;
LABEL_24:
    v10 = (v15 - 1) & v15;
  }
LABEL_38:
  swift_release();
  return v11;
}

id ProvisioningRequirementOracle.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_18FE24998(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1903D05C8();
    sub_1903D0F94();
    sub_1903D064C();
    v3 = sub_1903D0FC4();
    swift_bridgeObjectRelease();
    v4 = -1 << *(_BYTE *)(a2 + 32);
    v5 = v3 & ~v4;
    v6 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    {
      v7 = sub_1903D05C8();
      v9 = v8;
      if (v7 == sub_1903D05C8() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      v12 = sub_1903D0ED4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
LABEL_18:
        v20 = 1;
        return v20 & 1;
      }
      v13 = ~v4;
      v14 = (v5 + 1) & v13;
      if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
      {
        while (1)
        {
          v15 = sub_1903D05C8();
          v17 = v16;
          if (v15 == sub_1903D05C8() && v17 == v18)
            break;
          v20 = sub_1903D0ED4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            v14 = (v14 + 1) & v13;
            if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
              continue;
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  v20 = 0;
  return v20 & 1;
}

uint64_t sub_18FE24B5C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1903D0F94();
    ProvisioningRequirement.RequirementType.rawValue.getter();
    sub_1903D064C();
    swift_bridgeObjectRelease();
    v3 = sub_1903D0FC4() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_18FE25290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1903D0F94();
    sub_1903D064C();
    v6 = sub_1903D0FC4();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1903D0ED4() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1903D0ED4() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

id ProvisioningRequirementOracle.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProvisioningRequirementOracle();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for ProvisioningRequirementOracle()
{
  return objc_opt_self();
}

char *sub_18FE25450()
{
  char *v0;
  char *v2;

  v2 = sub_18FE25C54();
  sub_18FD75BC0((uint64_t)&unk_1E2AA9108);
  v0 = sub_18FE23F3C((uint64_t)v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_18FE254A8(void *a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  char v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t result;
  char *v23;

  v23 = sub_18FE25C54();
  v2 = objc_msgSend(a1, sel_configuration);
  if (!v2)
  {
    __break(1u);
    goto LABEL_34;
  }
  v3 = v2;
  v4 = objc_msgSend(v2, sel_featureIdentifier);

  v5 = sub_18FE25D38((unint64_t)v4);
  sub_18FD75BC0(v5);
  v6 = objc_msgSend(a1, sel_regions);
  if (v6)
  {
    v7 = v6;
    v8 = sub_1903D08A4();

  }
  else
  {
    v8 = MEMORY[0x1E0DEE9E8];
  }
  v9 = sub_18FE25290(20035, 0xE200000000000000, v8);
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0 || PKEnforceUpgradedPasscodePolicyForAllRegions())
  {
    v10 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_18FD51C18(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
    v12 = *((_QWORD *)v10 + 2);
    v11 = *((_QWORD *)v10 + 3);
    if (v12 >= v11 >> 1)
      v10 = sub_18FD51C18((char *)(v11 > 1), v12 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v12 + 1;
    v10[v12 + 32] = -124;
    v23 = v10;
  }
  v13 = objc_msgSend(a1, sel_hsa2Requirement);
  if (v13 == (id)2)
  {
    v14 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_18FD51C18(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
    v18 = *((_QWORD *)v14 + 2);
    v17 = *((_QWORD *)v14 + 3);
    if (v18 >= v17 >> 1)
      v14 = sub_18FD51C18((char *)(v17 > 1), v18 + 1, 1, v14);
    *((_QWORD *)v14 + 2) = v18 + 1;
    v14[v18 + 32] = 0x80;
    goto LABEL_26;
  }
  if (v13 == (id)1)
  {
    v14 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_18FD51C18(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
    v16 = *((_QWORD *)v14 + 2);
    v15 = *((_QWORD *)v14 + 3);
    if (v16 >= v15 >> 1)
      v14 = sub_18FD51C18((char *)(v15 > 1), v16 + 1, 1, v14);
    *((_QWORD *)v14 + 2) = v16 + 1;
    v14[v16 + 32] = 0;
    goto LABEL_26;
  }
  if (v13)
  {
LABEL_34:
    result = sub_1903D0CE8();
    __break(1u);
    return result;
  }
  v14 = v23;
LABEL_26:
  if ((objc_msgSend(a1, sel_allowOnManagedAccount) & 1) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_18FD51C18(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
    v20 = *((_QWORD *)v14 + 2);
    v19 = *((_QWORD *)v14 + 3);
    if (v20 >= v19 >> 1)
      v14 = sub_18FD51C18((char *)(v19 > 1), v20 + 1, 1, v14);
    *((_QWORD *)v14 + 2) = v20 + 1;
    v14[v20 + 32] = -116;
  }
  v21 = sub_18FE23F3C((uint64_t)v14);
  swift_bridgeObjectRelease();
  return (uint64_t)v21;
}

uint64_t sub_18FE257E8(unint64_t a1, void *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char *v11;

  v4 = sub_18FE25C54();
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v11 = sub_18FE23F3C((uint64_t)v4);
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  swift_bridgeObjectRetain();
  result = sub_1903D0D00();
  v5 = result;
  if (!result)
    goto LABEL_11;
LABEL_3:
  if (v5 >= 1)
  {
    v7 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x19400B200](v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      v10 = sub_18FE25F1C(v8, a2);
      sub_18FD75BC0(v10);

    }
    while (v5 != v7);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

char *sub_18FE25908(void *a1)
{
  char *v1;
  char *v2;

  v1 = sub_18FE2699C(a1);
  v2 = sub_18FE23F3C((uint64_t)v1);
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_18FE25944()
{
  return &unk_1E2AA9130;
}

id ProvisioningRequirementOracle.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProvisioningRequirementOracle();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

PKProvisioningRequirementsContainer __swiftcall ProvisioningRequirementOracle.requirements(forAddSecureElementPassConfiguration:)(PKAddSecureElementPassConfiguration *forAddSecureElementPassConfiguration)
{
  char *v1;
  char *v2;
  objc_class *v3;
  char *v4;
  char *v5;
  PKAddSecureElementPassConfiguration *v6;
  objc_class *v7;
  void *v8;
  objc_class *v9;
  PKProvisioningRequirementsContainer result;
  objc_super v11;

  v1 = sub_18FE2699C(forAddSecureElementPassConfiguration);
  v2 = sub_18FE23F3C((uint64_t)v1);
  swift_bridgeObjectRelease();
  v3 = (objc_class *)type metadata accessor for ProvisioningRequirementsContainer();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = &v4[OBJC_IVAR____PKProvisioningRequirementsContainer_provisioningSID];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____PKProvisioningRequirementsContainer_requirements] = v2;
  v11.receiver = v4;
  v11.super_class = v3;
  v6 = -[PKAddSecureElementPassConfiguration init](&v11, sel_init);
  v7 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)PKProvisioningRequirementsContainer), sel_initWithContainer_, v6);

  v9 = v7;
  result._container = v8;
  result.super.isa = v9;
  return result;
}

PKProvisioningRequirementsContainer __swiftcall ProvisioningRequirementOracle.recoverableRequirementsContainer()()
{
  objc_class *v0;
  char *v1;
  char *v2;
  id v3;
  objc_class *v4;
  void *v5;
  objc_class *v6;
  PKProvisioningRequirementsContainer result;
  objc_super v8;

  v0 = (objc_class *)type metadata accessor for ProvisioningRequirementsContainer();
  v1 = (char *)objc_allocWithZone(v0);
  v2 = &v1[OBJC_IVAR____PKProvisioningRequirementsContainer_provisioningSID];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____PKProvisioningRequirementsContainer_requirements] = &unk_1E2AA9130;
  v8.receiver = v1;
  v8.super_class = v0;
  v3 = objc_msgSendSuper2(&v8, sel_init);
  v4 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)PKProvisioningRequirementsContainer), sel_initWithContainer_, v3);

  v6 = v4;
  result._container = v5;
  result.super.isa = v6;
  return result;
}

char *sub_18FE25C54()
{
  uint64_t inited;
  char *v1;
  unint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BEC28);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190441780;
  *(_DWORD *)(inited + 32) = -1953593457;
  *(_WORD *)(inited + 36) = -29289;
  v1 = sub_18FD51C18((char *)1, 7, 1, (char *)inited);
  *((_QWORD *)v1 + 2) = 7;
  v1[38] = -120;
  v2 = *((_QWORD *)v1 + 3);
  if (v2 <= 0xF)
    v1 = sub_18FD51C18((char *)(v2 > 1), 8, 1, v1);
  *((_QWORD *)v1 + 2) = 8;
  v1[39] = -125;
  return v1;
}

uint64_t sub_18FE25D38(unint64_t a1)
{
  char *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  if (a1 > 5)
  {
    result = sub_1903D0CE8();
    __break(1u);
  }
  else
  {
    if (((1 << a1) & 0x16) != 0)
    {
      v1 = sub_18FD51C18(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v3 = *((_QWORD *)v1 + 2);
      v2 = *((_QWORD *)v1 + 3);
      v4 = v2 >> 1;
      v5 = v3 + 1;
      if (v2 >> 1 <= v3)
      {
        v1 = sub_18FD51C18((char *)(v2 > 1), v3 + 1, 1, v1);
        v2 = *((_QWORD *)v1 + 3);
        v4 = v2 >> 1;
      }
      *((_QWORD *)v1 + 2) = v5;
      v1[v3 + 32] = 0x80;
      v6 = v3 + 2;
      if (v4 < (uint64_t)(v3 + 2))
      {
        v1 = sub_18FD51C18((char *)(v2 > 1), v3 + 2, 1, v1);
        v2 = *((_QWORD *)v1 + 3);
        v4 = v2 >> 1;
      }
      *((_QWORD *)v1 + 2) = v6;
      v1[v5 + 32] = -127;
      if (v4 < (uint64_t)(v3 + 3))
        v1 = sub_18FD51C18((char *)(v2 > 1), v3 + 3, 1, v1);
      *((_QWORD *)v1 + 2) = v3 + 3;
      v1[v6 + 32] = -126;
    }
    else
    {
      v1 = (char *)MEMORY[0x1E0DEE9D8];
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_18FD51C18(0, *((_QWORD *)v1 + 2) + 1, 1, v1);
    v8 = *((_QWORD *)v1 + 2);
    v7 = *((_QWORD *)v1 + 3);
    if (v8 >= v7 >> 1)
      v1 = sub_18FD51C18((char *)(v7 > 1), v8 + 1, 1, v1);
    *((_QWORD *)v1 + 2) = v8 + 1;
    v1[v8 + 32] = -116;
    return (uint64_t)v1;
  }
  return result;
}

uint64_t sub_18FE25F1C(void *a1, void *a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  unsigned int v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  unsigned __int8 v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  void *v60;
  unsigned __int8 v61;
  void *v62;
  uint64_t v63;
  id v64;
  id v65;
  void *v66;
  unsigned __int8 v67;
  id v68;
  id v69;
  unsigned __int8 v70;
  void *v71;
  char *v72;
  unint64_t v73;
  unint64_t v74;
  int64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t result;
  char *v80;

  v4 = (void *)MEMORY[0x1E0DEE9D8];
  v80 = (char *)MEMORY[0x1E0DEE9D8];
  v5 = objc_msgSend(a1, sel_accountCredential);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_account);

    if (!v7)
    {
      __break(1u);
      goto LABEL_114;
    }
    v8 = (unint64_t)objc_msgSend(v7, sel_feature);

    goto LABEL_8;
  }
  if ((objc_msgSend(a1, sel_isPeerPaymentCredential) & 1) != 0)
  {
    v8 = 1;
LABEL_8:
    v9 = sub_18FE25D38(v8);
    sub_18FD75BC0(v9);
    goto LABEL_9;
  }
  if (objc_msgSend(a1, sel_credentialType) == (id)135)
  {
    v8 = 4;
    goto LABEL_8;
  }
LABEL_9:
  v10 = objc_msgSend(a1, sel_cardType);
  if ((unint64_t)v10 < 3 || v10 == (id)4)
    goto LABEL_19;
  if (v10 == (id)3)
  {
    v11 = v80;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_18FD51C18(0, *((_QWORD *)v80 + 2) + 1, 1, v80);
    v13 = *((_QWORD *)v11 + 2);
    v12 = *((_QWORD *)v11 + 3);
    v14 = v12 >> 1;
    v15 = v13 + 1;
    if (v12 >> 1 <= v13)
    {
      v11 = sub_18FD51C18((char *)(v12 > 1), v13 + 1, 1, v11);
      v12 = *((_QWORD *)v11 + 3);
      v14 = v12 >> 1;
    }
    *((_QWORD *)v11 + 2) = v15;
    v11[v13 + 32] = 0;
    v16 = v13 + 2;
    if (v14 < v16)
      v11 = sub_18FD51C18((char *)(v12 > 1), v16, 1, v11);
    *((_QWORD *)v11 + 2) = v16;
    v11[v15 + 32] = 1;
    v80 = v11;
LABEL_19:
    if (objc_msgSend(a1, sel_isIssuerProvisioningExtensionCredential))
    {
      v17 = v80;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_18FD51C18(0, *((_QWORD *)v80 + 2) + 1, 1, v80);
      v19 = *((_QWORD *)v17 + 2);
      v18 = *((_QWORD *)v17 + 3);
      if (v19 >= v18 >> 1)
        v17 = sub_18FD51C18((char *)(v18 > 1), v19 + 1, 1, v17);
      *((_QWORD *)v17 + 2) = v19 + 1;
      v17[v19 + 32] = -116;
      v80 = v17;
    }
    v20 = objc_msgSend(a1, sel_remoteCredential);
    if (!v20)
      goto LABEL_45;
    v21 = v20;
    if (objc_msgSend(v20, sel_credentialType) == (id)130)
    {
      v22 = v80;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v22 = sub_18FD51C18(0, *((_QWORD *)v80 + 2) + 1, 1, v80);
      v24 = *((_QWORD *)v22 + 2);
      v23 = *((_QWORD *)v22 + 3);
      v25 = v23 >> 1;
      v26 = v24 + 1;
      if (v23 >> 1 <= v24)
      {
        v22 = sub_18FD51C18((char *)(v23 > 1), v24 + 1, 1, v22);
        v23 = *((_QWORD *)v22 + 3);
        v25 = v23 >> 1;
      }
      *((_QWORD *)v22 + 2) = v26;
      v22[v24 + 32] = -127;
      v27 = v24 + 2;
      if (v25 < v27)
        v22 = sub_18FD51C18((char *)(v23 > 1), v27, 1, v22);
      *((_QWORD *)v22 + 2) = v27;
      v22[v26 + 32] = -108;
      v80 = v22;
    }
    if (PKEnforceUpgradedPasscodePolicyForAllRegions())
      goto LABEL_39;
    v28 = objc_msgSend(v21, sel_passTypeIdentifier);
    if (!v28)
    {
      v29 = objc_msgSend(v21, sel_underlyingPaymentPass);
      if (!v29)
        goto LABEL_44;
      v30 = v29;
      v28 = objc_msgSend(v29, sel_passTypeIdentifier);

    }
    sub_1903D05C8();

    v31 = (void *)sub_1903D05A4();
    swift_bridgeObjectRelease();
    v32 = objc_msgSend(a2, sel_isChinaRegionIdentifier_, v31);

    if (v32)
    {
LABEL_39:
      v33 = v80;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_18FD51C18(0, *((_QWORD *)v80 + 2) + 1, 1, v80);
      v35 = *((_QWORD *)v33 + 2);
      v34 = *((_QWORD *)v33 + 3);
      if (v35 >= v34 >> 1)
        v33 = sub_18FD51C18((char *)(v34 > 1), v35 + 1, 1, v33);
      *((_QWORD *)v33 + 2) = v35 + 1;
      v33[v35 + 32] = -124;

      v80 = v33;
      goto LABEL_45;
    }
LABEL_44:

LABEL_45:
    v36 = objc_msgSend(a1, sel_shareableCredential);
    if (v36)
    {
      v37 = v36;
      v38 = v80;
      if (objc_msgSend(v36, sel_source) == (id)5)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v38 = sub_18FD51C18(0, *((_QWORD *)v80 + 2) + 1, 1, v80);
        v40 = *((_QWORD *)v38 + 2);
        v39 = *((_QWORD *)v38 + 3);
        if (v40 >= v39 >> 1)
          v38 = sub_18FD51C18((char *)(v39 > 1), v40 + 1, 1, v38);
        *((_QWORD *)v38 + 2) = v40 + 1;
        v38[v40 + 32] = -108;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v38 = sub_18FD51C18(0, *((_QWORD *)v38 + 2) + 1, 1, v38);
      v42 = *((_QWORD *)v38 + 2);
      v41 = *((_QWORD *)v38 + 3);
      v43 = v41 >> 1;
      v44 = v42 + 1;
      if (v41 >> 1 <= v42)
      {
        v38 = sub_18FD51C18((char *)(v41 > 1), v42 + 1, 1, v38);
        v41 = *((_QWORD *)v38 + 3);
        v43 = v41 >> 1;
      }
      *((_QWORD *)v38 + 2) = v44;
      v38[v42 + 32] = 0x80;
      v45 = v42 + 2;
      if (v43 < (uint64_t)(v42 + 2))
      {
        v38 = sub_18FD51C18((char *)(v41 > 1), v42 + 2, 1, v38);
        v41 = *((_QWORD *)v38 + 3);
        v43 = v41 >> 1;
      }
      *((_QWORD *)v38 + 2) = v45;
      v38[v44 + 32] = -127;
      v46 = v42 + 3;
      if (v43 < (uint64_t)(v42 + 3))
      {
        v38 = sub_18FD51C18((char *)(v41 > 1), v42 + 3, 1, v38);
        v41 = *((_QWORD *)v38 + 3);
        v43 = v41 >> 1;
      }
      *((_QWORD *)v38 + 2) = v46;
      v38[v45 + 32] = -125;
      if (v43 < (uint64_t)(v42 + 4))
        v38 = sub_18FD51C18((char *)(v41 > 1), v42 + 4, 1, v38);
      *((_QWORD *)v38 + 2) = v42 + 4;
      v38[v46 + 32] = -121;

      v80 = v38;
    }
    if (objc_msgSend(a1, sel_isContactlessProductCredential))
    {
      v47 = v80;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v47 = sub_18FD51C18(0, *((_QWORD *)v80 + 2) + 1, 1, v80);
      v49 = *((_QWORD *)v47 + 2);
      v48 = *((_QWORD *)v47 + 3);
      if (v49 >= v48 >> 1)
        v47 = sub_18FD51C18((char *)(v48 > 1), v49 + 1, 1, v47);
      *((_QWORD *)v47 + 2) = v49 + 1;
      v47[v49 + 32] = -125;
      v80 = v47;
    }
    v50 = objc_msgSend(a1, sel_remoteCredential);
    if (v50)
    {
      v51 = v50;
      if (objc_msgSend(v50, sel_transferType) == (id)2)
      {
        v52 = objc_msgSend(v51, sel_underlyingPaymentPass);
        if (v52
          && (v53 = v52,
              v54 = objc_msgSend(v52, sel_supportedRadioTechnologies),
              v53,
              (v54 & 2) != 0))
        {
          if ((v54 & 1) != 0)
            v55 = &unk_1E2AA9158;
          else
            v55 = &unk_1E2AA9180;
        }
        else
        {
          v55 = (void *)MEMORY[0x1E0DEE9D8];
        }
LABEL_96:
        sub_18FD75BC0((uint64_t)v55);
LABEL_97:

        v72 = v80;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v72 = sub_18FD51C18(0, *((_QWORD *)v80 + 2) + 1, 1, v80);
        v74 = *((_QWORD *)v72 + 2);
        v73 = *((_QWORD *)v72 + 3);
        v75 = v73 >> 1;
        v76 = v74 + 1;
        if (v73 >> 1 <= v74)
        {
          v72 = sub_18FD51C18((char *)(v73 > 1), v74 + 1, 1, v72);
          v73 = *((_QWORD *)v72 + 3);
          v75 = v73 >> 1;
        }
        *((_QWORD *)v72 + 2) = v76;
        v72[v74 + 32] = -109;
        v77 = v74 + 2;
        if (v75 < (uint64_t)(v74 + 2))
        {
          v72 = sub_18FD51C18((char *)(v73 > 1), v74 + 2, 1, v72);
          v73 = *((_QWORD *)v72 + 3);
          v75 = v73 >> 1;
        }
        *((_QWORD *)v72 + 2) = v77;
        v72[v76 + 32] = -95;
        v78 = v74 + 3;
        if (v75 < (uint64_t)(v74 + 3))
        {
          v72 = sub_18FD51C18((char *)(v73 > 1), v74 + 3, 1, v72);
          v73 = *((_QWORD *)v72 + 3);
          v75 = v73 >> 1;
        }
        *((_QWORD *)v72 + 2) = v78;
        v72[v77 + 32] = -116;
        if (v75 < (uint64_t)(v74 + 4))
          v72 = sub_18FD51C18((char *)(v73 > 1), v74 + 4, 1, v72);
        *((_QWORD *)v72 + 2) = v74 + 4;
        v72[v78 + 32] = -110;
        return (uint64_t)v72;
      }

    }
    v56 = objc_msgSend(a1, sel_statefulTransferCredential);
    if (v56)
    {
      v57 = v56;
      v58 = objc_msgSend(v56, sel_invitation);

      if (v58)
      {
        objc_opt_self();
        v59 = swift_dynamicCastObjCClass();
        if (v59)
        {
          v60 = (void *)v59;
          v51 = v58;
          v61 = objc_msgSend(v60, sel_radioTechnology);
          v62 = &unk_1E2AA9158;
          if ((v61 & 1) == 0)
            v62 = &unk_1E2AA9180;
          if ((v61 & 2) != 0)
            v63 = (uint64_t)v62;
          else
            v63 = (uint64_t)v4;
          sub_18FD75BC0(v63);

          goto LABEL_97;
        }

      }
    }
    v64 = objc_msgSend(a1, sel_carKeyTerminalPairingCredential);
    if (!v64)
    {
      v68 = objc_msgSend(a1, sel_localAppletSubcredentialPassCredential);
      if (!v68)
        return (uint64_t)v80;
      v51 = v68;
      v69 = objc_msgSend(v68, sel_credentialToShare);
      if (v69)
      {
        v66 = v69;
        v67 = objc_msgSend(v69, sel_allSupportedRadioTechnologies);
        goto LABEL_91;
      }
      goto LABEL_115;
    }
    v51 = v64;
    v65 = objc_msgSend(v64, sel_configuration);
    if (v65)
    {
      v66 = v65;
      v67 = objc_msgSend(v65, sel_supportedRadioTechnologies);
LABEL_91:
      v70 = v67;

      v71 = &unk_1E2AA9158;
      if ((v70 & 1) == 0)
        v71 = &unk_1E2AA9180;
      if ((v70 & 2) != 0)
        v55 = v71;
      else
        v55 = v4;
      goto LABEL_96;
    }
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
  }
  result = sub_1903D0CE8();
  __break(1u);
  return result;
}

char *sub_18FE2699C(void *a1)
{
  char *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  unsigned __int8 v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v36;
  unint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  int64_t v41;
  uint64_t v42;

  v2 = (char *)MEMORY[0x1E0DEE9D8];
  v42 = MEMORY[0x1E0DEE9D8];
  v3 = objc_msgSend(a1, sel_configurationType);
  if (v3 == (id)5)
  {
    v2 = sub_18FD51C18(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v11 = *((_QWORD *)v2 + 2);
    v10 = *((_QWORD *)v2 + 3);
    if (v11 >= v10 >> 1)
      v2 = sub_18FD51C18((char *)(v10 > 1), v11 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v11 + 1;
    v2[v11 + 32] = -113;
  }
  else if (v3 == (id)2)
  {
    v12 = swift_dynamicCastObjCProtocolConditional();
    if (v12)
    {
      v13 = (void *)v12;
      v14 = a1;
      v15 = objc_msgSend(v13, sel_shareablePassConfiguration);
      if (v15 && (v16 = v15, v17 = objc_msgSend(v15, sel_primaryAction), v16, v17 == (id)1))
      {
        v2 = (char *)MEMORY[0x1E0DEE9D8];
      }
      else
      {
        v18 = sub_18FE25C54();
        sub_18FD75BC0((uint64_t)v18);
        v2 = (char *)v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v2 = sub_18FD51C18(0, *(_QWORD *)(v42 + 16) + 1, 1, (char *)v42);
        v20 = *((_QWORD *)v2 + 2);
        v19 = *((_QWORD *)v2 + 3);
        v21 = v19 >> 1;
        v22 = v20 + 1;
        if (v19 >> 1 <= v20)
        {
          v36 = sub_18FD51C18((char *)(v19 > 1), v20 + 1, 1, v2);
          v22 = v20 + 1;
          v2 = v36;
          v19 = *((_QWORD *)v36 + 3);
          v21 = v19 >> 1;
        }
        *((_QWORD *)v2 + 2) = v22;
        v2[v20 + 32] = 0;
        v23 = v20 + 2;
        if (v21 < (uint64_t)(v20 + 2))
        {
          v37 = v22;
          v41 = v23;
          v38 = sub_18FD51C18((char *)(v19 > 1), v23, 1, v2);
          v23 = v41;
          v22 = v37;
          v2 = v38;
        }
        *((_QWORD *)v2 + 2) = v23;
        v2[v22 + 32] = -120;
        v24 = PKRequiresUnifiedAccessCapableDeviceForPushableConfiguration(v13);
        v26 = *((_QWORD *)v2 + 2);
        v25 = *((_QWORD *)v2 + 3);
        v27 = v25 >> 1;
        v28 = v26 + 1;
        if (v24)
        {
          if (v27 <= v26)
          {
            v2 = sub_18FD51C18((char *)(v25 > 1), v26 + 1, 1, v2);
            v25 = *((_QWORD *)v2 + 3);
            v27 = v25 >> 1;
          }
          *((_QWORD *)v2 + 2) = v28;
          v2[v26 + 32] = -108;
          v29 = v26 + 2;
          if ((uint64_t)v27 < (uint64_t)(v26 + 2))
          {
            v39 = sub_18FD51C18((char *)(v25 > 1), v26 + 2, 1, v2);
            v29 = v26 + 2;
            v2 = v39;
          }
          v30 = -127;
        }
        else
        {
          if (v27 <= v26)
          {
            v40 = sub_18FD51C18((char *)(v25 > 1), v26 + 1, 1, v2);
            v30 = 1;
            v2 = v40;
          }
          else
          {
            v30 = 1;
          }
          v29 = v26 + 1;
          v28 = v26;
        }
        *((_QWORD *)v2 + 2) = v29;
        v2[v28 + 32] = v30;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v2 = sub_18FD51C18(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
      v32 = *((_QWORD *)v2 + 2);
      v31 = *((_QWORD *)v2 + 3);
      if (v32 >= v31 >> 1)
        v2 = sub_18FD51C18((char *)(v31 > 1), v32 + 1, 1, v2);
      *((_QWORD *)v2 + 2) = v32 + 1;
      v2[v32 + 32] = -96;

    }
  }
  else if (v3 == (id)1)
  {
    objc_opt_self();
    v4 = swift_dynamicCastObjCClass();
    if (v4)
    {
      v5 = (void *)v4;
      v6 = a1;
      v7 = objc_msgSend(v5, sel_supportedRadioTechnologies);
      v8 = &unk_1E2AA9158;
      if ((v7 & 1) == 0)
        v8 = &unk_1E2AA9180;
      if ((v7 & 2) != 0)
        v9 = (uint64_t)v8;
      else
        v9 = (uint64_t)v2;
      sub_18FD75BC0(v9);

      v2 = (char *)v42;
    }
  }
  if (objc_msgSend(a1, sel_allowManagedAppleID) != (id)1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_18FD51C18(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
    v34 = *((_QWORD *)v2 + 2);
    v33 = *((_QWORD *)v2 + 3);
    if (v34 >= v33 >> 1)
      v2 = sub_18FD51C18((char *)(v33 > 1), v34 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v34 + 1;
    v2[v34 + 32] = -116;
  }
  return v2;
}

char *sub_18FE26DF0()
{
  char *v0;
  unint64_t v1;
  unint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  char *v6;

  v0 = sub_18FE25C54();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v0 = sub_18FD51C18(0, *((_QWORD *)v0 + 2) + 1, 1, v0);
  v2 = *((_QWORD *)v0 + 2);
  v1 = *((_QWORD *)v0 + 3);
  v3 = v1 >> 1;
  v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    v0 = sub_18FD51C18((char *)(v1 > 1), v2 + 1, 1, v0);
    v1 = *((_QWORD *)v0 + 3);
    v3 = v1 >> 1;
  }
  *((_QWORD *)v0 + 2) = v4;
  v0[v2 + 32] = -123;
  v5 = v2 + 2;
  if (v3 < v5)
    v0 = sub_18FD51C18((char *)(v1 > 1), v5, 1, v0);
  *((_QWORD *)v0 + 2) = v5;
  v0[v4 + 32] = -116;
  v6 = sub_18FE23F3C((uint64_t)v0);
  swift_bridgeObjectRelease();
  return v6;
}

void sub_18FE26EE0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(unsigned __int8 *)(a1 + 24);
  sub_18FE25C54();
  __asm { BR              X9 }
}

char *sub_18FE26F28()
{
  char *v0;
  char *v1;
  unint64_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_18FE26DF0();
  sub_18FD75BC0((uint64_t)v0);
  v1 = (char *)v6;
  if (PKEnforceUpgradedPasscodePolicyForAllRegions())
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_18FD51C18(0, *(_QWORD *)(v6 + 16) + 1, 1, (char *)v6);
    v3 = *((_QWORD *)v1 + 2);
    v2 = *((_QWORD *)v1 + 3);
    if (v3 >= v2 >> 1)
      v1 = sub_18FD51C18((char *)(v2 > 1), v3 + 1, 1, v1);
    *((_QWORD *)v1 + 2) = v3 + 1;
    v1[v3 + 32] = -124;
  }
  v4 = sub_18FE23F3C((uint64_t)v1);
  swift_bridgeObjectRelease();
  return v4;
}

char *sub_18FE27230(void *a1, void *a2)
{
  id v4;
  void *v5;
  unsigned int v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;

  if (PKEnforceUpgradedPasscodePolicyForAllRegions()
    || (v4 = objc_msgSend(a1, sel_region)) != 0
    && (v5 = v4, v6 = objc_msgSend(a2, sel_isChinaRegionIdentifier_, v4), v5, v6))
  {
    v7 = sub_18FD51C18(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v9 = *((_QWORD *)v7 + 2);
    v8 = *((_QWORD *)v7 + 3);
    if (v9 >= v8 >> 1)
      v7 = sub_18FD51C18((char *)(v8 > 1), v9 + 1, 1, v7);
    *((_QWORD *)v7 + 2) = v9 + 1;
    v7[v9 + 32] = -124;
  }
  else
  {
    v7 = (char *)MEMORY[0x1E0DEE9D8];
  }
  if (objc_msgSend(a1, sel_hasEnableRequirements))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v7 = sub_18FD51C18(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
    v11 = *((_QWORD *)v7 + 2);
    v10 = *((_QWORD *)v7 + 3);
    if (v11 >= v10 >> 1)
      v7 = sub_18FD51C18((char *)(v10 > 1), v11 + 1, 1, v7);
    *((_QWORD *)v7 + 2) = v11 + 1;
    v7[v11 + 32] = -110;
  }
  v12 = sub_18FE23F3C((uint64_t)v7);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_18FE273A0(void *a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1BEC28);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_190441790;
  *(_DWORD *)(v2 + 32) = -2088265064;
  *(_BYTE *)(v2 + 36) = -116;
  if ((objc_msgSend(a1, sel_isFollowupAction) & 1) == 0)
  {
    v2 = (uint64_t)sub_18FD51C18((char *)1, 6, 1, (char *)v2);
    *(_QWORD *)(v2 + 16) = 6;
    *(_BYTE *)(v2 + 37) = -103;
  }
  return v2;
}

char *sub_18FE27438(void *a1)
{
  char *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  char *v11;

  v2 = sub_18FE273A0(a1);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = v4 + 2;
  if (__OFADD__(v4, 2))
  {
    __break(1u);
LABEL_13:
    v1 = sub_18FD51C18((char *)(v3 > 1), v4, 1, v1);
    v3 = *((_QWORD *)v1 + 3);
    v7 = v3 >> 1;
    goto LABEL_9;
  }
  v1 = (char *)v2;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v3 = *((_QWORD *)v1 + 3), v7 = v3 >> 1, (uint64_t)(v3 >> 1) < v5))
  {
    if (v4 <= v5)
      v8 = v4 + 2;
    else
      v8 = v4;
    v1 = sub_18FD51C18(isUniquelyReferenced_nonNull_native, v8, 1, v1);
    v3 = *((_QWORD *)v1 + 3);
    v7 = v3 >> 1;
  }
  v5 = *((_QWORD *)v1 + 2);
  v4 = v5 + 1;
  if (v7 <= v5)
    goto LABEL_13;
LABEL_9:
  *((_QWORD *)v1 + 2) = v4;
  v1[v5 + 32] = -120;
  v9 = v5 + 2;
  if ((uint64_t)v7 < v9)
    v1 = sub_18FD51C18((char *)(v3 > 1), v9, 1, v1);
  *((_QWORD *)v1 + 2) = v9;
  v1[v4 + 32] = -119;
  v10 = sub_18FE25C54();
  sub_18FD75BC0((uint64_t)v10);
  v11 = sub_18FE23F3C((uint64_t)v1);
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_18FE27560(void *a1)
{
  char *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;

  v3 = sub_18FE273A0(a1);
  v5 = *(_QWORD *)(v3 + 16);
  v6 = v5 + 4;
  if (__OFADD__(v5, 4))
  {
    __break(1u);
LABEL_17:
    v1 = sub_18FD51C18((char *)(v4 > 1), v5, 1, v1);
    v4 = *((_QWORD *)v1 + 3);
    v8 = v4 >> 1;
    goto LABEL_9;
  }
  v1 = (char *)v3;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v4 = *((_QWORD *)v1 + 3), v8 = v4 >> 1, (uint64_t)(v4 >> 1) < v6))
  {
    if (v5 <= v6)
      v9 = v5 + 4;
    else
      v9 = v5;
    v1 = sub_18FD51C18(isUniquelyReferenced_nonNull_native, v9, 1, v1);
    v4 = *((_QWORD *)v1 + 3);
    v8 = v4 >> 1;
  }
  v2 = *((_QWORD *)v1 + 2);
  v5 = v2 + 1;
  if (v8 <= v2)
    goto LABEL_17;
LABEL_9:
  *((_QWORD *)v1 + 2) = v5;
  v1[v2 + 32] = -111;
  v10 = v2 + 2;
  if (v8 < (uint64_t)(v2 + 2))
  {
    v1 = sub_18FD51C18((char *)(v4 > 1), v2 + 2, 1, v1);
    v4 = *((_QWORD *)v1 + 3);
    v8 = v4 >> 1;
  }
  *((_QWORD *)v1 + 2) = v10;
  v1[v5 + 32] = -107;
  v11 = v2 + 3;
  if (v8 < (uint64_t)(v2 + 3))
  {
    v1 = sub_18FD51C18((char *)(v4 > 1), v2 + 3, 1, v1);
    v4 = *((_QWORD *)v1 + 3);
    v8 = v4 >> 1;
  }
  *((_QWORD *)v1 + 2) = v11;
  v1[v10 + 32] = -101;
  if (v8 < (uint64_t)(v2 + 4))
    v1 = sub_18FD51C18((char *)(v4 > 1), v2 + 4, 1, v1);
  *((_QWORD *)v1 + 2) = v2 + 4;
  v1[v11 + 32] = -99;
  v12 = sub_18FE25C54();
  sub_18FD75BC0((uint64_t)v12);
  v13 = sub_18FE23F3C((uint64_t)v1);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t method lookup function for ProvisioningRequirementOracle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningRequirementOracle.requirementsForWalletProvisioning()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of ProvisioningRequirementOracle.requirementsForManualEntry()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of ProvisioningRequirementOracle.requirements(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ProvisioningRequirementOracle.requirements(for:webService:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ProvisioningRequirementOracle.requirementsForPhoneSetupAssistant(context:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ProvisioningRequirementOracle.requirementsForMacSetupAssistant(context:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ProvisioningRequirementOracle.recoverableRequirements()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

void ProvisioningStepDeviceAssessment.generateAssessment(fieldsModel:completion:)(void *a1, void (*a2)(id, uint64_t))
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  v5 = objc_msgSend(*(id *)(v2 + 56), "sid");
  v6 = sub_1903D05C8();
  v8 = v7;

  v9 = sub_18FE27C90();
  if (v9)
  {
    v10 = v9;
    swift_bridgeObjectRelease();
    v11 = v10;
    v12 = PKPassKitCoreBundle();
    v13 = objc_msgSend(objc_allocWithZone((Class)PKODIServiceProviderAssessment), sel_initWithServiceProviderIdentifier_locationBundle_, v11, v12);

    objc_msgSend(v13, sel_setAllowPartialAssessment_, 1);
    objc_msgSend(v13, sel_startAssessment);
    v14 = sub_18FE27FF4(a1);
    objc_msgSend(v13, sel_updateAssessment_, v14);

    objc_msgSend(v13, sel_computeAssessment);
    v20 = v13;
    a2(v13, 0);

  }
  else
  {
    if (qword_1EE1BCFE8 != -1)
      swift_once();
    v15 = sub_1903D0340();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EE1BF740);
    swift_bridgeObjectRetain();
    v16 = sub_1903D0328();
    v17 = sub_1903D0940();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21 = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain();
      sub_18FCD5144(v6, v8, &v21);
      sub_1903D0ACC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FC92000, v16, v17, "[%s] ProvisioningStepDeviceAssessment: Unable to find assessment service", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400D804](v19, -1, -1);
      MEMORY[0x19400D804](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a2(0, 2);
  }
}

__n128 ProvisioningStepDeviceAssessment.__allocating_init(context:credential:sharedState:)(uint64_t a1, __n128 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  __n128 result;

  v6 = swift_allocObject();
  v7 = a2[1].n128_u64[0];
  v8 = a2[1].n128_u8[8];
  *(_QWORD *)(v6 + 16) = a1;
  result = *a2;
  *(__n128 *)(v6 + 24) = *a2;
  *(_QWORD *)(v6 + 40) = v7;
  *(_BYTE *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 56) = a3;
  return result;
}

uint64_t ProvisioningStepDeviceAssessment.init(context:credential:sharedState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 40) = v4;
  *(_BYTE *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = a3;
  return v3;
}

uint64_t ProvisioningStepDeviceAssessment.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return v0;
}

uint64_t ProvisioningStepDeviceAssessment.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FCD6F28(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));

  return swift_deallocClassInstance();
}

__n128 sub_18FE27C00@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  __n128 result;

  type metadata accessor for ProvisioningStepDeviceAssessment();
  v8 = swift_allocObject();
  v9 = a2[1].n128_u64[0];
  v10 = a2[1].n128_u8[8];
  *(_QWORD *)(v8 + 16) = a1;
  result = *a2;
  *(__n128 *)(v8 + 24) = *a2;
  *(_QWORD *)(v8 + 40) = v9;
  *(_BYTE *)(v8 + 48) = v10;
  *(_QWORD *)(v8 + 56) = a3;
  *a4 = v8;
  return result;
}

uint64_t sub_18FE27C64(char a1, void **a2, uint64_t (*a3)(void))
{
  return _s11PassKitCore32ProvisioningStepDeviceAssessmentC18terminateOperation7success6output10completionySb_So020PKODIServiceProviderG0CSgSgyyctF_0(a1, *a2, a3);
}

uint64_t static ProvisioningStepDeviceAssessment.archive(output:)()
{
  return 0;
}

void sub_18FE27C7C(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t static ProvisioningStepDeviceAssessment.unarchive(outputData:)()
{
  return 1;
}

id sub_18FE27C90()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = *(unsigned __int8 *)(v0 + 48);
  ProvisioningCredentialsConfiguration.Credential.carKeyPassConfiguration.getter();
  v3 = v2;

  if (!v3)
    __asm { BR              X9 }
  return (id)*MEMORY[0x1E0D17700];
}

void sub_18FE27D20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id *v7;
  id *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id *v17;
  id v18;

  v4 = v2;
  v5 = objc_msgSend(v4, sel_remoteCredential);
  if (v5)
  {
    v6 = v5;
    if (objc_msgSend(v5, sel_transferType) == (id)2)
      v7 = (id *)MEMORY[0x1E0D176C0];
    else
      v7 = (id *)MEMORY[0x1E0D17718];
    v9 = *v7;

    goto LABEL_16;
  }
  if (objc_msgSend(v4, sel_isExternalOfferCredential))
  {
    v8 = (id *)MEMORY[0x1E0D17728];
  }
  else
  {
    v10 = objc_msgSend(v4, sel_shareableCredential);

    if (v10)
    {
      if (*(__int16 *)(*(_QWORD *)(v3 + 16) + 33) == -16384)
        v8 = (id *)MEMORY[0x1E0D17730];
      else
        v8 = (id *)MEMORY[0x1E0D17700];
    }
    else if ((objc_msgSend(v4, sel_isDigitalIssuanceProductCredential) & 1) != 0
           || objc_msgSend(v4, sel_isPurchasedProductCredential))
    {
      v8 = (id *)MEMORY[0x1E0D17758];
    }
    else if (objc_msgSend(v4, sel_isIdentityCredential))
    {
      v8 = (id *)MEMORY[0x1E0D17720];
    }
    else
    {
      v12 = objc_msgSend(v4, sel_accountCredential);
      if (v12)
      {
        v13 = v12;
        v14 = objc_msgSend(v12, sel_account);
        if (!v14)
        {
          __break(1u);
          JUMPOUT(0x18FE27F58);
        }
        v15 = v14;
        v16 = objc_msgSend(v14, sel_feature);

        if (v16 == (id)2)
        {
          v17 = (id *)MEMORY[0x1E0D17708];
        }
        else if (v16 == (id)1)
        {
          v17 = (id *)MEMORY[0x1E0D17710];
        }
        else
        {
          v17 = (id *)MEMORY[0x1E0D17740];
        }
        v18 = *v17;

LABEL_16:
        sub_18FCD6F28(v2, v1, v0, 0);
        JUMPOUT(0x18FE27CECLL);
      }
      if (objc_msgSend(v4, sel_isPeerPaymentCredential))
      {
        v8 = (id *)MEMORY[0x1E0D17710];
      }
      else
      {
        objc_msgSend(v4, sel_isAppleBalanceCredential);
        v8 = (id *)MEMORY[0x1E0D17740];
      }
    }
  }
  v11 = *v8;
  goto LABEL_16;
}

uint64_t _s11PassKitCore32ProvisioningStepDeviceAssessmentC18terminateOperation7success6output10completionySb_So020PKODIServiceProviderG0CSgSgyyctF_0(char a1, void *a2, uint64_t (*a3)(void))
{
  id v6;
  uint64_t v7;

  if ((unint64_t)a2 >= 2)
  {
    v6 = a2;
    if (objc_msgSend(v6, sel_currentAssessmentDidTimeout))
      v7 = 2;
    else
      v7 = (a1 & 1) == 0;
    objc_msgSend(v6, sel_provideSessionFeedback_, v7);
    sub_18FD95B70(a2);
  }
  return a3();
}

id sub_18FE27FF4(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  id v10;
  void *v11;
  _OWORD v13[2];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v1 = MEMORY[0x1E0DEE9E0];
  v16 = MEMORY[0x1E0DEE9E0];
  v2 = objc_msgSend(a1, sel_paymentSetupFieldWithIdentifier_, CFSTR("cardholderName"));
  v3 = (id)*MEMORY[0x1E0D175D8];
  if (v2 && (v4 = objc_msgSend(v2, sel_displayString)) != 0)
  {
    v5 = v4;
    v6 = sub_1903D05C8();
    v8 = v7;

    v15 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v14 = v6;
    *((_QWORD *)&v14 + 1) = v8;
    sub_18FD533A0(&v14, v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_18FE06B7C(v13, v3, isUniquelyReferenced_nonNull_native);
    v16 = v1;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_18FDF9888((uint64_t)v3, &v14);

    sub_18FCD92C8((uint64_t)&v14);
  }
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D17580]), sel_init);
  type metadata accessor for ODIAttributeKey(0);
  sub_18FE281C8();
  v11 = (void *)sub_1903D04CC();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setAttributes_, v11);

  return v10;
}

uint64_t type metadata accessor for ProvisioningStepDeviceAssessment()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProvisioningStepDeviceAssessment()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProvisioningStepDeviceAssessment.__allocating_init(context:credential:sharedState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for ProvisioningStepDeviceAssessment.AssessmentResult()
{
  return &type metadata for ProvisioningStepDeviceAssessment.AssessmentResult;
}

unint64_t sub_18FE281C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1BD2B8;
  if (!qword_1EE1BD2B8)
  {
    type metadata accessor for ODIAttributeKey(255);
    result = MEMORY[0x19400D72C](&unk_190435E38, v1);
    atomic_store(result, (unint64_t *)&qword_1EE1BD2B8);
  }
  return result;
}

void sub_18FE28214(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t ObjectType;
  void (*v21)(id, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[3];

  v9 = objc_msgSend(*(id *)(a2 + 56), "sid");
  v10 = sub_1903D05C8();
  v12 = v11;

  v13 = sub_18FE27C90();
  if (v13)
  {
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = v14;
    v16 = PKPassKitCoreBundle();
    v17 = objc_msgSend(objc_allocWithZone((Class)PKODIServiceProviderAssessment), sel_initWithServiceProviderIdentifier_locationBundle_, v15, v16);

    objc_msgSend(v17, sel_setAllowPartialAssessment_, 1);
    objc_msgSend(v17, sel_startAssessment);
    v18 = sub_18FE27FF4(a1);
    objc_msgSend(v17, sel_updateAssessment_, v18);

    objc_msgSend(v17, sel_computeAssessment);
    swift_beginAccess();
    if (!MEMORY[0x19400D8B8](a3 + 16))
    {

      return;
    }
    v19 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    v21 = *(void (**)(id, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 72);
    v22 = v17;
    v21(v17, 0, a4, a5, ObjectType, v19);

    goto LABEL_12;
  }
  if (qword_1EE1BCFE8 != -1)
    swift_once();
  v23 = sub_1903D0340();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EE1BF740);
  swift_bridgeObjectRetain();
  v24 = sub_1903D0328();
  v25 = sub_1903D0940();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v32 = a4;
    v27 = a5;
    v28 = swift_slowAlloc();
    v33[0] = v28;
    *(_DWORD *)v26 = 136315138;
    swift_bridgeObjectRetain();
    sub_18FCD5144(v10, v12, v33);
    sub_1903D0ACC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FC92000, v24, v25, "[%s] ProvisioningStepDeviceAssessment: Unable to find assessment service", v26, 0xCu);
    swift_arrayDestroy();
    v29 = v28;
    a5 = v27;
    a4 = v32;
    MEMORY[0x19400D804](v29, -1, -1);
    MEMORY[0x19400D804](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  if (MEMORY[0x19400D8B8](a3 + 16))
  {
    v30 = *(_QWORD *)(a3 + 24);
    v31 = swift_getObjectType();
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 72))(0, 2, a4, a5, v31, v30);
LABEL_12:
    swift_unknownObjectRelease();
  }
}

uint64_t sub_18FE28584()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

void sub_18FE2877C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18FE28954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18FE28C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18FE28E28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18FE2903C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18FE2933C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 152));
  _Unwind_Resume(a1);
}

void sub_18FE29578(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void bcgsyabc74vz12(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  int v4;

  if (a1)
    v3 = a3 == 0;
  else
    v3 = 1;
  v4 = !v3;
  __asm { BR              X8 }
}

uint64_t sub_18FE2BB88(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD, uint64_t);
  void (*v7)(uint64_t, unint64_t *, uint64_t);
  uint64_t v8;
  BOOL v9;

  v6 = (uint64_t (*)(_QWORD, uint64_t))v4[20];
  STACK[0x4C8] = v3;
  *a3 = v6(a2, 3384187359);
  v7 = (void (*)(uint64_t, unint64_t *, uint64_t))(v4[3] - 12);
  v7(v4[16] - 4, &STACK[0x4D0], 16);
  v8 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v7)(*v4, v5 - 144, 16);
  v9 = (unint64_t)&STACK[0x4E0] - v4[15] + 12 < 0x20;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x4C8]
                                                      + 8 * ((v9 ^ 0x15) & 1 | (32 * ((v9 ^ 0x15) & 1)) | 0x16u))
                                          - 8))(v8);
}

uint64_t sub_18FE2BC68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  *(_OWORD *)&STACK[0x4E0] = xmmword_190441870;
  *(_OWORD *)&STACK[0x4F0] = xmmword_190441880;
  *(_OWORD *)&STACK[0x500] = xmmword_190441890;
  *(_OWORD *)&STACK[0x510] = xmmword_1904418A0;
  *(_OWORD *)&STACK[0x520] = xmmword_1904418B0;
  *(_OWORD *)&STACK[0x530] = xmmword_1904418C0;
  *(_OWORD *)&STACK[0x540] = xmmword_1904418D0;
  *(_OWORD *)&STACK[0x550] = xmmword_1904418E0;
  *(_OWORD *)&STACK[0x560] = xmmword_1904418F0;
  *(_OWORD *)&STACK[0x570] = xmmword_190441900;
  *(_OWORD *)&STACK[0x580] = xmmword_190441910;
  *(_OWORD *)&STACK[0x590] = xmmword_190441920;
  *(_OWORD *)&STACK[0x5A0] = xmmword_190441930;
  *(_OWORD *)&STACK[0x5B0] = xmmword_190441940;
  *(_OWORD *)&STACK[0x5C0] = xmmword_190441950;
  *(_OWORD *)&STACK[0x5D0] = xmmword_190441960;
  *(_OWORD *)&STACK[0x5E0] = xmmword_190441970;
  *(_OWORD *)&STACK[0x5F0] = xmmword_190441980;
  *(_OWORD *)&STACK[0x600] = xmmword_190441990;
  *(_OWORD *)&STACK[0x610] = xmmword_1904419A0;
  *(_OWORD *)&STACK[0x620] = xmmword_1904419B0;
  *(_OWORD *)&STACK[0x630] = xmmword_1904419C0;
  *(_OWORD *)&STACK[0x640] = xmmword_1904419D0;
  *(_OWORD *)&STACK[0x650] = xmmword_1904419E0;
  *(_OWORD *)&STACK[0x660] = xmmword_1904419F0;
  *(_OWORD *)&STACK[0x670] = xmmword_190441A00;
  *(_OWORD *)&STACK[0x680] = xmmword_190441A10;
  *(_OWORD *)&STACK[0x690] = xmmword_190441A20;
  *(_OWORD *)&STACK[0x6A0] = 0u;
  *(_OWORD *)&STACK[0x6B0] = 0u;
  *(_OWORD *)&STACK[0x6C0] = 0u;
  *(_OWORD *)&STACK[0x6D0] = 0u;
  *(_OWORD *)&STACK[0x6E0] = 0u;
  *(_OWORD *)&STACK[0x6F0] = 0u;
  *(_DWORD *)(a1 + 544) = *(_DWORD *)(v1 + 544);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v3 + 21)) - ((v3 - 19) | 0xCu) + 7))();
}

uint64_t sub_18FE2BE24()
{
  uint64_t v0;
  int v1;
  unint64_t *v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 ^ (29 * (&STACK[0x4D0] == v2)))) - 4))();
}

uint64_t sub_18FE2BE48()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 144) = 0x951FAAEE1026D03;
  *(_QWORD *)(v3 - 136) = 0x9AAF552B875DE8C0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((((12 * (v1 ^ 0xD) + 25) ^ 0x38) + 39) * (v2 != 0)) ^ (12 * (v1 ^ 0xD))))
                            - 4))();
}

uint64_t sub_18FE2BEA8()
{
  return 4294940294;
}

uint64_t sub_18FE2C078()
{
  int v0;
  char v1;
  _QWORD *v2;
  unint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  unint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  _BOOL4 v25;

  STACK[0x4C0] = v3;
  LODWORD(STACK[0x250]) = v4;
  v5 = (v4 >> (v1 ^ 0xC)) ^ 0x1DC09FB4;
  v6 = v2[0xA88D4269 % v5];
  v7 = v6 - 1133730458;
  STACK[0x4B0] = v5;
  v8 = v5 - ((2 * (_DWORD)v5) & 0x36422CF2) + 0xFD213FFB211679;
  v6 += 928383084;
  v9 = v8 ^ 0xFD213FFB211679;
  LODWORD(v8) = (v6 + (v8 ^ 0xFF02DEC004DEE986) + 1) % (v8 ^ 0xFD213FFB211679uLL);
  v10 = (v8 ^ 0xCF7FE4FA) - 1248411648 + ((2 * v8) & 0x9EFFC9F4);
  if (v6 >= v9)
    v11 = v10;
  else
    v11 = v7;
  v12 = v2[(v2[(v2[v11 + 2062113542] + 3855038535) % v9] + 3865674970) % v9] + 578455804;
  STACK[0x460] = v9;
  v13 = v12 % v9;
  v14 = 0x758109B77F350519 * *v2 + 0x677F146CEA5ED0AALL - ((0xEB02136EFE6A0A32 * *v2) & 0xCEFE28D9D4BDA154);
  *(_QWORD *)STACK[0x4C0] = *v2 ^ 0x6D6D6D6D6D6D6D6DLL;
  v15 = (((v0 + 3) - 0x6E5F64EADF7E76BLL) ^ 0xA2E1F5149196B302 ^ v14)
      - 0x555115307B90BF2ELL
      - ((2 * (((v0 + 3) - 0x6E5F64EADF7E76BLL) ^ 0xA2E1F5149196B302 ^ v14)) & 0x555DD59F08DE81A4);
  v16 = (((HIDWORD(v15) ^ 0xAAAEEACF) - 0x555115307B90BF2ELL - ((2 * (HIDWORD(v15) ^ 0xAAAEEACF)) & 0x108DE81A4)) ^ v15)
      + 2 * ((HIDWORD(v15) ^ 0xAAAEEACF) & (v15 ^ 0xAAAEEACF846F40D2));
  v17 = v16 + (v16 >> 16) + ((v16 + (v16 >> 16)) >> 8);
  v18 = v17 + 1954684949 - ((2 * v17) & 0xE904402A);
  v19 = (v17 + 0x677F146CEA5ED0AALL - ((2 * v17) & 0xCEFE28D9D4BDA154)) ^ v14;
  v20 = v19 + HIDWORD(v19) + ((v19 + HIDWORD(v19)) >> 16);
  v21 = v20 + (v20 >> 8);
  v22 = ((v21 + 0x677F146CEA5ED0AALL - ((2 * v21) & 0xCEFE28D9D4BDA154)) ^ v14)
      + (((v21 + 0x677F146CEA5ED0AALL - ((2 * v21) & 0xCEFE28D9D4BDA154)) ^ v14) >> 32);
  v23 = v22 + (v22 >> 16) + ((v22 + (v22 >> 16)) >> 8);
  v24 = v23 - 1202272205 - ((2 * v23) & 0x70AD9066);
  v25 = v13 - 412949984 > 0xE762E221;
  if (v13 > 0x189D1DDF)
    v25 = 1;
  return (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, unint64_t, _QWORD))(STACK[0x4C8] + 8 * ((!v25 | (4 * !v25)) ^ v0)))(0xCEFE28D9D4BDA154, 0xAAAEEACF846F40D2, 0x677F146CEA5ED0AALL, 0x9E651DDDB856C833, v18 ^ 0x64CF9DC3 ^ v21 ^ v24);
}

void sub_18FE2C420()
{
  JUMPOUT(0x18FE2C298);
}

uint64_t sub_18FE2C444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v6 + 8 * (v9 + v8)) = *(_QWORD *)(v10 + 8 * (v9 + v8)) ^ v7;
  return (*(uint64_t (**)(void))(v11 + 8 * ((50 * (STACK[0x4B0] <= v9 + 1 + v8)) ^ a6)))();
}

uint64_t sub_18FE2C530(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  if (((*(_BYTE *)(STACK[0x4B8]
                  + ((*(_BYTE *)(STACK[0x4B8]
                               + ((*(_BYTE *)(STACK[0x4B8] + ((*(_BYTE *)(STACK[0x4B8] + 11) + 12) & 0xF)) + 2) & 0xF))
                    + 6) & 0xF))
       + 10) & 0xE) != 0)
    v3 = (*(_BYTE *)(STACK[0x4B8]
                   + ((*(_BYTE *)(STACK[0x4B8]
                                + ((*(_BYTE *)(STACK[0x4B8] + ((*(_BYTE *)(STACK[0x4B8] + 11) + 12) & 0xF)) + 2) & 0xF))
                     + 6) & 0xF))
        + 10) & 0xF;
  else
    v3 = 1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (((v3 != 1) | (8 * (v3 != 1))) ^ (7 * (a2 ^ 0x2F))))
                                          - 12))(1040154350);
}

uint64_t sub_18FE2C77C@<X0>(int a1@<W2>, unsigned int a2@<W3>, int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((51 * ((a1 + a3 + 1) < 0x10)) ^ a2)) - 12))();
}

#error "18FE30534: call analysis failed (funcsize=3213)"

void sub_18FE30538()
{
  JUMPOUT(0x18FE302A0);
}

uint64_t sub_18FE3054C(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  LODWORD(STACK[0x3CC]) = LODWORD(STACK[0x3F8]) + 1526920166;
  LODWORD(STACK[0x248]) = LODWORD(STACK[0x41C]) + 392542021;
  LODWORD(STACK[0x370]) = LODWORD(STACK[0x3E8]) ^ LODWORD(STACK[0x47C]) ^ (LODWORD(STACK[0x36C]) - LODWORD(STACK[0x370]));
  v7 = v5;
  v8 = *(_QWORD *)(STACK[0x4C0] + 8 * v5);
  v9 = ((v8 + (v8 ^ 0x9292929292929292) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v8;
  v10 = 0x418B018541479FA3 * v9
      - ((v9 * ((a4 ^ 0x12u) - 0x7CE9FCF57D70C0DBLL)) & 0xFFE890BCDC3D3DB4)
      - 0xBB7A191E16126;
  v11 = (v6 ^ 0x4020841F998A7835 ^ v10) + v7 - (((v6 ^ 0x4020841F998A7835 ^ v10) + v7) >> 32);
  v12 = v11 - (v11 >> 16) - ((v11 - (v11 >> 16)) >> 8);
  v13 = (v12 - 1664618190 - ((2 * (v12 - 1664618190) + 1512219598) & 0xACCF5440) - 2089223161) ^ a5;
  v14 = v12
      + 0x62668D3C9CC7F132
      - 2 * ((v12 + 0x62EA362A93B28632) & 0x64189079CF1C212 ^ (v12 + 0x62668D3C9CC7F132) & 0x10)
      - 0x493ACE0A6C23A8FELL;
  v15 = ((v14 ^ 0x9CF1C202) - 252409235 - ((2 * (v14 ^ 0x9CF1C202)) & 0xE1E914DA)) ^ a3;
  v16 = (v10 ^ 0xF9B5C159F2EF5CD8 ^ v14) + v7 - (((v10 ^ 0xF9B5C159F2EF5CD8 ^ v14) + v7) >> 32);
  v17 = v16 - (v16 >> 16) - ((v16 - (v16 >> 16)) >> 8) + 0x5401861DA34BF76;
  v18 = v13 ^ (v17 + 1873052579);
  v19 = v17 - ((2 * v17 + 0x1B543B9172FB8D78) & 0x900D2FD3E0A1AFFELL) + 0x55B0B5B2A9CE9EBBLL;
  v20 = (v10 ^ 0xB7F2DFB79E4E4925 ^ v19) + v7 - (((v10 ^ 0xB7F2DFB79E4E4925 ^ v19) + v7) >> 32);
  v21 = v20 - (v20 >> 16) - ((v20 - (v20 >> 16)) >> 8) + 0x7D2B4A3801DD0F3;
  return (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(STACK[0x4C8]
                                                                     + 8
                                                                     * (a4 ^ (8 * (v5 + 1 >= STACK[0x4B0])))))(v15 ^ ((_DWORD)v17 - ((2 * (_DWORD)v17 + 1929088376) & 0xE0A1AFFE) - 1446076741) ^ ((_DWORD)v21- ((2 * (_DWORD)v21+ 657025662) & 0xEF29CDDE)+ 187276334), 0xB7F2DFB79E4E4925, v18 ^ ((_DWORD)v20 - (v20 >> 16) - ((v20 - (v20 >> 16)) >> 8) + 1238975257));
}

void sub_18FE30898()
{
  JUMPOUT(0x18FE30670);
}

uint64_t sub_18FE308BC(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  unint64_t v82;
  int v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  int v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  int v91;
  unint64_t v92;
  int v93;

  LODWORD(STACK[0x36C]) = LODWORD(STACK[0x474]) ^ LODWORD(STACK[0x29C]);
  v56 = a5
      - 0x3F0DEC20512E0ABELL
      + ((unint64_t)(a5 - 0x3F0DEC20512E0ABELL) >> 28)
      + ((a5 - 0x3F0DEC20512E0ABELL + ((unint64_t)(a5 - 0x3F0DEC20512E0ABELL) >> 28)) >> 11);
  v57 = v56 - (v56 >> 7) - ((2 * (v56 - (v56 >> 7))) & 0xD8E73A4232243FC4) - 0x138C62DEE6EDE01ELL;
  v58 = ((2 * ((v57 ^ 0xEC739D2119121FE2) - 0x13AFA5FA8FB17A6)) & 0xC3FD7ABDFFFBF7CELL)
      + (((v57 ^ 0xEC739D2119121FE2) - 0x13AFA5FA8FB17A6) ^ 0x61FEBD5EFFFDFBE7)
      - 0x61FEBD5EFFFDFBE7;
  v59 = v58 + (v58 >> 29) - ((v58 + (v58 >> 29)) >> 8);
  v60 = v59 + (v59 >> 6) - ((2 * (v59 + (v59 >> 6))) & 0xFC9B50453FD9B8CLL) + 0x7E4DA8229FECDC6;
  v61 = ((2 * ((v60 ^ 0x7E4DA8229FECDC6) + 0x47CBE9EA4DE0F1B7)) & 0xFFFFECB5DCEC4FC8)
      + (((v60 ^ 0x7E4DA8229FECDC6) + 0x47CBE9EA4DE0F1B7) ^ 0xFFFFF65AEE7627E4);
  v62 = v61
      - ((v61 + 0x9A51189D81CLL) >> 28)
      + 0x9A51189D81CLL
      + ((v61 - ((v61 + 0x9A51189D81CLL) >> 28) + 0x9A51189D81CLL) >> 8);
  v63 = v62 + (v62 >> 7) - ((2 * (v62 + (v62 >> 7))) & 0x549A9F3601A22D82) + 0x2A4D4F9B00D116C1;
  v64 = (v63 ^ 0x2A4D4F9B00D116C1)
      - ((2 * (v63 ^ 0x2A4D4F9B00D116C1) + 0x34D59D5DDD29F6ECLL) & 0x2C4968B8CC0D9A8ALL)
      + 0x708F830B549BC8BBLL;
  v65 = (v64 ^ 0x9624B458D7236FA6 ^ (v64 >> 29)) + 2 * (((v64 >> 29) ^ 0x4B125A2E3) & (v64 ^ 0x1624B45C6606CD45));
  v66 = v65 - (v65 >> 14) - ((v65 - (v65 >> 14)) >> 7);
  v67 = ((2
        * (((v66 - ((2 * v66) & 0xA1B5F7C311112426) - 0x2F25041E77776DEDLL) ^ 0xD0DAFBE188889213)
         - 0x10BF2422B96631C1)) & 0xEFFE977FFFEF7EE6)
      + ((((v66 - ((2 * v66) & 0xA1B5F7C311112426) - 0x2F25041E77776DEDLL) ^ 0xD0DAFBE188889213)
        - 0x10BF2422B96631C1) ^ 0x77FF4BBFFFF7BF73);
  v68 = v67
      - ((v67 - 0x77FF4BBFFFF7BF73) >> 28)
      - 0x77FF4BBFFFF7BF73
      + ((v67 - ((v67 - 0x77FF4BBFFFF7BF73) >> 28) - 0x77FF4BBFFFF7BF73) >> 8);
  v69 = v68 + (v68 >> 8) - ((2 * (v68 + (v68 >> 8))) & 0x2B0FB3A388ACF140) + 0x1587D9D1C45678A0;
  v70 = ((2 * (((v69 >> 26) ^ 0x3B2B8B89C9) + (v69 ^ 0xECAE2E2725BA676ELL))) & 0x7AFF7FE5FFDD7F72)
      + ((((v69 >> 26) ^ 0x3B2B8B89C9) + (v69 ^ 0xECAE2E2725BA676ELL)) ^ 0xBD7FBFF2FFEEBFB9)
      + 0x4280400D00114047;
  v71 = v70 + (v70 >> 14) + ((v70 + (v70 >> 14)) >> 6);
  v72 = v71 - ((2 * v71) & 0x50956B68B291B7C2) + 0x284AB5B45948DBE1;
  v73 = ((2 * ((v72 ^ 0x284AB5B45948DBE1) - 0x70FE5FCAA42AEA45)) & 0xFFD15EDCFD9FFEAALL)
      + (((v72 ^ 0x284AB5B45948DBE1) - 0x70FE5FCAA42AEA45) ^ 0x7FE8AF6E7ECFFF55);
  v74 = v73
      - ((v73 - 0x7FE8AF6E7ECFFF55) >> 26)
      - 0x7FE8AF6E7ECFFF55
      - ((v73 - ((v73 - 0x7FE8AF6E7ECFFF55) >> 26) - 0x7FE8AF6E7ECFFF55) >> 13);
  v75 = v74 - (v74 >> 3) - ((2 * (v74 - (v74 >> 3))) & 0xF777B9C8C849EE88) + 0x7BBBDCE46424F744;
  v76 = (v75 ^ 0x3374757BEBF5AE41) + ((v75 >> 28) ^ 0xFFFFFFFCC8B8A841) + 1;
  v77 = ((2 * v76) & 0x6F7FFE9EDFA8FEFCLL) + (v76 ^ 0x37BFFF4F6FD47F7ELL) - 0x37BFFF4F6FD47F7ELL;
  v78 = v77 - (v77 >> 11) + ((v77 - (v77 >> 11)) >> 4);
  v79 = v78 - ((2 * v78) & 0xEFA7AA312763242ELL) - 0x82C2AE76C4E6DE9;
  v80 = ((2 * ((v79 ^ 0xF7D3D51893B19217) - 0x59A32DF87660B188)) & 0x4FFFC5BBFFDE6BFELL)
      + (((v79 ^ 0xF7D3D51893B19217) - 0x59A32DF87660B188) ^ 0xA7FFE2DDFFEF35FFLL);
  v81 = a3 ^ ((v69 ^ v60 ^ 0xEDA8B566) - 2 * ((v69 ^ v60 ^ 0xEDA8B566) & 0x13B1921F ^ (v69 ^ v60) & 8) - 1817079273) ^ 0x115609E4 ^ v79;
  v82 = v80
      - ((v80 + 0x58001D220010CA01) >> 30)
      + 0x58001D220010CA01
      - ((v80 - ((v80 + 0x58001D220010CA01) >> 30) + 0x58001D220010CA01) >> 9);
  LODWORD(v82) = ((v82 >> 7) + v82 + 1497947105 - ((2 * ((v82 >> 7) + v82)) & 0xB291B7C2)) ^ v72;
  v83 = a1 ^ v63 ^ 0x5B126890 ^ (v82 - ((2 * v82) & 0x1A22D82) + 13702849);
  if (((*(_BYTE *)(STACK[0x4B8]
                  + ((*(_BYTE *)(STACK[0x4B8]
                               + ((*(_BYTE *)(STACK[0x4B8] + ((*(_BYTE *)(STACK[0x4B8] + 2) + 13) & 0xF)) + 2) & 0xF))
                    + 3) & 0xF))
       + 1) & 0xE) != 0)
    v84 = (*(_BYTE *)(STACK[0x4B8]
                    + ((*(_BYTE *)(STACK[0x4B8]
                                 + ((*(_BYTE *)(STACK[0x4B8] + ((*(_BYTE *)(STACK[0x4B8] + 2) + 13) & 0xF)) + 2) & 0xF))
                      + 3) & 0xF))
         + 1) & 0xF;
  else
    v84 = 1;
  v85 = (v55 - 2761266) & 0xFBFFB3D6;
  LODWORD(STACK[0x4A8]) = v85;
  v86 = v85 + 119427264;
  v87 = 1903817027 * *(unsigned __int8 *)STACK[0x4B8]
      - ((*(unsigned __int8 *)STACK[0x4B8] * (_DWORD)v86) & 0x13E3AF28)
      - 1980639340;
  v88 = v87 ^ 0x90D3B1DC;
  v89 = v88 >> 16;
  v90 = v88 + WORD1(v88);
  LODWORD(v88) = (v87 ^ 0x90D3B1DC) + ((v87 ^ 0x90D3B1DC) >> 16) + ((v88 + WORD1(v88)) >> 8);
  v91 = ((v87 ^ 0x90D3B1DC) - 651057517 + v89 + (v90 >> 8)) ^ v81;
  LODWORD(v89) = v89
               - 558323820
               + (v87 ^ 0x90D3B1DC)
               + (v90 >> 8)
               - 2 * ((v88 + 1919110438) & 0x2C555A6F ^ ((_BYTE)v88 + 124) & 1);
  LODWORD(v88) = v83 ^ 0x708303EE ^ v89;
  LODWORD(v89) = (v87 ^ 0xA5A48DFA ^ v89)
               + ((v87 ^ 0xA5A48DFA ^ v89) >> (v91 & 0x10) >> (v91 & 0x10 ^ 0x10));
  v92 = (unint64_t)v89 >> 8;
  v93 = v88 - ((2 * v88) & 0x382BB90C);
  LODWORD(v88) = v87 ^ 0x95E40B12 ^ (v92
                                   - 830920276
                                   + v89
                                   - ((2 * (v89 + (v89 >> 8)) + 1690737228) & 0x382BB90C));
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * ((7 * (v84 == 1)) ^ v55)) - 8))(v84, ((_DWORD)v89 - 651057517 + (_DWORD)v92) ^ v91 ^ ((_DWORD)v88- 651057517+ WORD1(v88)+ ((v88 + WORD1(v88)) >> 8)), v84 - 1, 616995404, 0, v86, (v93 + 471194758), (_DWORD)v88 + ((v88 + WORD1(v88)) >> 8) + WORD1(v88), a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_18FE311D4(uint64_t a1)
{
  LODWORD(STACK[0x360]) = LODWORD(STACK[0x494]) + 1059696505;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x4C8]
                                        + 8
                                        * ((121 * ((unint64_t)(a1 + 1) > 0xF)) ^ (LODWORD(STACK[0x4A8]) + 69889656)))
                            - 8))();
}

void sub_18FE31468()
{
  JUMPOUT(0x18FE31288);
}

uint64_t sub_18FE31478@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  unint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unsigned int v59;
  _BOOL4 v60;

  v8 = v4 + ((a2 + a3 + ((a2 + a3) >> 16)) >> 8) + ((a2 + a3) >> 16) + 1376862134 + a1;
  v9 = (v8 ^ 0x50943741) + (v7 ^ 8) + ((v8 >> 13) ^ 0xFFFD7B5E) - 1;
  v10 = (v9 ^ 0x4FFD9BF7) - 1342020599 + ((2 * v9) & 0x9FFB37EE);
  v11 = v10 + (v10 >> 5) - ((2 * (v10 + (v10 >> 5))) & 0xE32E0788) + 1905722308;
  v12 = ((2 * ((v11 ^ 0x719703C4) - 107998449)) & 0x7EBCFFDE)
      + (((v11 ^ 0x719703C4) - 107998449) ^ 0xBF5E7FEF)
      + 1084325905;
  v13 = v12 - (v12 >> 10) - ((v12 - (v12 >> 10)) >> 2);
  v14 = v13 - ((2 * v13) & 0x6884ED8A) - 1270712635;
  v15 = ((((v14 >> 14) ^ 0x11D1C) + (v14 ^ 0x4747003C)) ^ 0xFFCEFFCF)
      + 3211313
      + ((2 * (((v14 >> 14) ^ 0x11D1C) + (v14 ^ 0x4747003C))) & 0xFF9DFF9E);
  v16 = v15 - (v15 >> 2) - ((2 * (v15 - (v15 >> 2))) & 0xE2C3FAEE) + 1902247287;
  v17 = ((2 * ((v16 ^ 0x7161FD77) + 511487013)) & 0x7FFFFEF0)
      + (((v16 ^ 0x7161FD77) + 511487013) ^ 0xBFFFFF78)
      + 1073741960;
  v18 = v17 + (v17 >> 15) + ((v17 + (v17 >> 15)) >> 3);
  v19 = v18 - ((2 * v18) & 0xA4301014) + 1377306634;
  v20 = (v19 ^ 0xB9DA625) + ((v19 >> 10) ^ 0xFFFD1896) + 1;
  v21 = (v20 ^ 0x69BFD377) - 1774179191 + ((2 * v20) & 0xD37FA6EE);
  v22 = v21 + (v21 >> 7) - ((2 * (v21 + (v21 >> 7))) & 0x715AB81E) - 1196598257;
  v23 = ((2 * ((v22 ^ 0xB8AD5C0F) - 787086048)) & 0x9FDBA734)
      + (((v22 ^ 0xB8AD5C0F) - 787086048) ^ 0x4FEDD39A)
      - 1340986266;
  v24 = v23 - (v23 >> 9) + ((v23 - (v23 >> 9)) >> 5);
  v25 = v24 - ((2 * v24) & 0xF9CF13D2) + 2095548905;
  v26 = ((2 * ((v25 ^ 0x7CE789E9) - 1168002143)) & 0xFCFD5B6E)
      + (((v25 ^ 0x7CE789E9) - 1168002143) ^ 0xFE7EADB7)
      + 25252425;
  v27 = v26 - (v26 >> 14) + ((v26 - (v26 >> 14)) >> 4);
  v28 = v27 - ((2 * v27) & 0xC2E9B770) + 1635048376;
  v29 = ((2 * ((v28 ^ 0x6174DBB8) - 879085134)) & 0xF957FE9E)
      + (((v28 ^ 0x6174DBB8) - 879085134) ^ 0x7CABFF4F)
      - 2091646799;
  v30 = v29 + (v29 >> 10) - ((v29 + (v29 >> 10)) >> 5);
  v31 = v30 - ((2 * v30) & 0x605ED6F0) + 808414072;
  v32 = ((2 * ((v31 ^ 0x302F6B78) + 1300749569)) & 0x7FBFDA7E)
      + (((v31 ^ 0x302F6B78) + 1300749569) ^ 0x3FDFED3F)
      - 1071639871;
  v33 = v32 - (v32 >> 9) - ((v32 - (v32 >> 9)) >> 4);
  v34 = v33 + 1557551489 + (~(2 * v33) | 0x46534CFF);
  v35 = v25 ^ v16 ^ ((v34 ^ v6) - ((2 * (v34 ^ v6)) & 0xE2C3FAEE) + 1902247287);
  v36 = v35 & 7;
  LODWORD(STACK[0x474]) = v35;
  v37 = (v35 ^ 5) + 1;
  LODWORD(STACK[0x2A0]) = v37;
  v38 = v37 & 7;
  LODWORD(STACK[0x268]) = v36;
  v39 = v36 ^ 2;
  if (v39)
    v40 = 255;
  else
    v40 = 0;
  STACK[0x350] = v38;
  LODWORD(STACK[0x41C]) = v39;
  v41 = v11 ^ v5;
  v42 = v14 ^ a4;
  v44 = (v40 << v38) - ((2 * (v40 << v38)) & 0x16A0) + 1425345360;
  v45 = v44 ^ 0xAF;
  if (!v39)
    v45 = 0;
  v43 = ((v41 ^ 0x813857E8 ^ v19) + (v19 ^ 0x5218080A) + 1) ^ ((v41 ^ 0xD3205FE2) + 1);
  v46 = v28 ^ (((v43 - ((2 * v43) & 0x59BF403A) + 752853021) ^ v41) + (v19 ^ 0x5218080A));
  v47 = v22 ^ ((v42 ^ 0xB44276C5) - 2 * ((v42 ^ 0xB44276C5) & 0x38AD5C1F ^ v42 & 0x10) - 1196598257) ^ v31;
  v48 = v46 ^ 0x3BC2E800 ^ ((v46 & 0x9A38B5A8 ^ 0x65F7DBFF)
                          - ((2 * (v46 & 0x9A38B5A8 ^ 0x65F7DBFF)) & 0x7EE2F3DA)
                          + 1064401389) | v46 ^ 0x6174DBBA;
  v49 = v48 - ((2 * v48) & 0x511578D4) - 1467302806;
  LODWORD(STACK[0x288]) = v46;
  v50 = (((2 * (v46 & 0xFE ^ 0x78)) & 0x78) - (v46 & 0xFE ^ 0x78) + 1409145794) ^ 0x13F75900;
  v51 = v50 - ((2 * v50) & 0x80110F4C) + 1167693735;
  LODWORD(STACK[0x2E8]) = v51;
  v52 = (((2 * (v44 ^ 0xB8)) & 0x90) - (v44 ^ 0xB8) + 2231) ^ 0x85F;
  v53 = 16843009 * v52 - ((33686018 * v52) & 0xB3E56970) - 638405448;
  LODWORD(STACK[0x2F8]) = (1929379840 * v52) & (v47 ^ 0x30000000);
  LODWORD(STACK[0x4A8]) = v45 & (v49 ^ 0x68);
  LODWORD(STACK[0x494]) = v49;
  v54 = (((BYTE1(v49) ^ BYTE2(v49) ^ 0x4B) - ((2 * (BYTE1(v49) ^ BYTE2(v49) ^ 0x4B)) & 0x70) - 72) ^ v49) ^ HIBYTE(v49) ^ 0x89;
  LODWORD(STACK[0x2A8]) = (33686018 * v54) & 0xE9F5E63A;
  LODWORD(STACK[0x278]) = 16843009 * v54 + 1962603293;
  LODWORD(STACK[0x29C]) = v47;
  v55 = (((BYTE1(v47) ^ BYTE2(v47) ^ 0x2D) - ((2 * (BYTE1(v47) ^ BYTE2(v47) ^ 0x2D)) & 0x3C) + 30) ^ v47) ^ HIBYTE(v47) ^ 0xAF;
  v56 = STACK[0x4C0];
  v57 = STACK[0x460];
  v58 = *(_QWORD *)(STACK[0x4C0]
                  + 8
                  * (((*(_QWORD *)(STACK[0x4C0] + 8 * (0xB4C2D96D % STACK[0x4B0])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                    + 2986301921u)
                   % STACK[0x460]));
  LODWORD(STACK[0x300]) = 16843009 * v55 - ((33686018 * v55) & 0xAFEEB294) + 1475828042;
  v59 = ((*(_QWORD *)(v56
                    + 8
                    * (((*(_QWORD *)(v56 + 8 * (((v58 ^ 0x6D6D6D6D6D6D6D6DuLL) + 2923655298u) % v57)) ^ 0x6D6D6D6D6D6D6D6DuLL)
                      + 2008708959)
                     % v57)) ^ 0x6D6D6D6D6D6D6D6DuLL)
       + 3811120295u)
      % v57;
  LODWORD(STACK[0x3A4]) = 16843009 * (v51 ^ 0x59315A7) - ((33686018 * (v51 ^ 0x59315A7)) & 0x995BA082) + 1286459457;
  LODWORD(STACK[0x308]) = v53;
  LODWORD(STACK[0x3F8]) = v53 ^ 0x260D4B47;
  LODWORD(STACK[0x260]) = 2 * (v53 ^ 0x260D4B47);
  v60 = v59 > 0x3000275B;
  if (v59 <= 0x3000275B)
    v60 = v59 - 805316444 > 0xCFFFD8A5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x4C8] + 8 * (v7 ^ 8 ^ (8 * v60))) - 8))();
}

void sub_18FE31F7C()
{
  JUMPOUT(0x18FE31CF8);
}

uint64_t sub_18FE31F90@<X0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0x2F0]) = LODWORD(STACK[0x478]) ^ 0x8941A8C7;
  LODWORD(STACK[0x2B8]) = STACK[0x494] & 0xFFFFFF01;
  LODWORD(STACK[0x260]) = ~LODWORD(STACK[0x260]);
  LODWORD(STACK[0x308]) ^= LODWORD(STACK[0x2F8]);
  LODWORD(STACK[0x2F8]) = LODWORD(STACK[0x278]) - LODWORD(STACK[0x2A8]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x4C8] + 8 * ((45 * (STACK[0x4B0] <= v1 + 1)) ^ a1))
                            - 12))();
}

void sub_18FE3233C()
{
  JUMPOUT(0x18FE320A8);
}

uint64_t sub_18FE32354(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unint64_t v40;
  unint64_t v41;
  unsigned int v42;

  v8 = a2 ^ 2;
  LODWORD(STACK[0x278]) = LODWORD(STACK[0x29C]) ^ 0xEAA5A0;
  LODWORD(STACK[0x3F8]) = (LODWORD(STACK[0x260]) + LODWORD(STACK[0x3F8])) ^ LODWORD(STACK[0x4A8]);
  v9 = ((2 * ((v7 ^ 0xFCB7ED34685A3616) - 0x4A256DA764C2BFFDLL)) & 0x3FE37AF3BBEFCA3ELL)
     + (((v7 ^ 0xFCB7ED34685A3616) - 0x4A256DA764C2BFFDLL) ^ 0x9FF1BD79DDF7E51FLL)
     + 0x600E428622081AE1;
  STACK[0x4A8] = (v8 - 8);
  v10 = v9 + (v9 >> ((v8 - 8) ^ 0x38u)) + ((v9 + (v9 >> ((v8 - 8) ^ 0x38u))) >> 11);
  v11 = v10 - (v10 >> 7) - ((2 * (v10 - (v10 >> 7))) & 0xB7BF16DEE7221792) - 0x242074908C6EF437;
  v12 = ((2 * ((v11 ^ 0xDBDF8B6F73910BC9) - 0x13AFA5FA8FB17A6)) & 0x6FFDFFF7EF1DF7F6)
      + (((v11 ^ 0xDBDF8B6F73910BC9) - 0x13AFA5FA8FB17A6) ^ 0xB7FEFFFBF78EFBFBLL)
      + 0x4801000408710405;
  v13 = v12 + (v12 >> 29) - ((v12 + (v12 >> 29)) >> 8);
  v14 = v13 + (v13 >> 6) - ((2 * (v13 + (v13 >> 6))) & 0xFFF52C49393268A6) + 0x7FFA96249C993453;
  v15 = ((2 * ((v14 ^ 0x7FFA96249C993453) + 0x47CBE9EA4DE0F1B7)) & 0xF7FBFBB6FD7EFAFELL)
      + (((v14 ^ 0x7FFA96249C993453) + 0x47CBE9EA4DE0F1B7) ^ 0xFBFDFDDB7EBF7D7FLL);
  v16 = v15
      - ((v15 + 0x402022481408281) >> 28)
      + 0x402022481408281
      + ((v15 - ((v15 + 0x402022481408281) >> 28) + 0x402022481408281) >> 8);
  v17 = v16 + (v16 >> 7) - ((2 * (v16 + (v16 >> 7))) & 0x962D840343CD5578) + 0x4B16C201A1E6AABCLL;
  v18 = ((2 * ((v17 ^ 0x4B16C201A1E6AABCLL) - 0x25953151116B048ALL)) & 0xEFDDFFFFBBFFEB7CLL)
      + (((v17 ^ 0x4B16C201A1E6AABCLL) - 0x25953151116B048ALL) ^ 0x77EEFFFFDDFFF5BELL)
      - 0x77EEFFFFDDFFF5BELL;
  v19 = v18 + (v18 >> 29) - ((v18 + (v18 >> 29)) >> 14);
  v20 = v19 - (v19 >> 7) - ((2 * (v19 - (v19 >> 7))) & 0x3846234F208FBC0) + 0x1C2311A79047DE0;
  v21 = ((2 * ((v20 ^ 0x1C2311A79047DE0) - 0x10BF2422B96631C1)) & 0xDFFBEFD1CF7FC5DELL)
      + (((v20 ^ 0x1C2311A79047DE0) - 0x10BF2422B96631C1) ^ 0xEFFDF7E8E7BFE2EFLL);
  v22 = v21
      - ((v21 + 0x1002081718401D11) >> 28)
      + 0x1002081718401D11
      + ((v21 - ((v21 + 0x1002081718401D11) >> 28) + 0x1002081718401D11) >> 8);
  v23 = v22 + (v22 >> 8) - ((2 * (v22 + (v22 >> 8))) & 0xDA5E41BA3F345234) + 0x6D2F20DD1F9A291ALL;
  v24 = ((v23 >> 26) ^ 0x2501B5CAFFLL)
      + (v23 ^ 0x9406D72BFE7636D4)
      - ((2 * (((v23 >> 26) ^ 0x2501B5CAFFLL) + (v23 ^ 0x9406D72BFE7636D4))) & 0x3BDAB82BDE326D6ELL)
      - 0x6212A3EA10E6C949;
  v25 = (v24 ^ 0x9DEF2BA09F4E8AD3 ^ (v24 >> 14))
      + 2 * (((v24 >> 14) ^ 0x277B57057BC64) & (v24 ^ 0x9DED5C15EF1936B7));
  v26 = v25 + (v25 >> 6) - ((2 * (v25 + (v25 >> 6))) & 0x5564F390E99F92D6) + 0x2AB279C874CFC96BLL;
  v27 = ((2 * ((v26 ^ 0x2AB279C874CFC96BLL) - 0x70FE5FCAA42AEA45)) & 0xF7F1BFEDBAA7DFB8)
      + (((v26 ^ 0x2AB279C874CFC96BLL) - 0x70FE5FCAA42AEA45) ^ 0xFBF8DFF6DD53EFDCLL);
  v28 = v27
      - ((v27 + 0x407200922AC1024) >> 26)
      + 0x407200922AC1024
      - ((v27 - ((v27 + 0x407200922AC1024) >> 26) + 0x407200922AC1024) >> 13);
  v29 = v28 - (v28 >> 3) - ((2 * (v28 - (v28 >> 3))) & 0xD27E29DB2D040A24) - 0x16C0EB12697DFAEELL;
  *((_QWORD *)&v31 + 1) = v29 ^ 0x93F14ED96820512;
  *(_QWORD *)&v31 = v29 ^ 0xE000000000000000;
  v30 = v31 >> 60;
  *((_QWORD *)&v31 + 1) = v30 ^ 0xC;
  *(_QWORD *)&v31 = v30 ^ 0x6C993897BE944870;
  v32 = ((v31 >> 4) ^ 0x8E063A16F4381D82) + (((unint64_t)(v31 >> 4) >> 28) ^ 0xFFFFFFF71F9C5E90) + 1;
  v33 = ((2 * v32) & 0x9B77F7FFFD3CFD7ELL) + (v32 ^ 0x4DBBFBFFFE9E7EBFLL) - 0x4DBBFBFFFE9E7EBFLL;
  v34 = v33 - (v33 >> 11) + ((v33 - (v33 >> 11)) >> 4);
  v35 = a7 ^ ((v14 ^ 0x83031D49 ^ v23) - ((2 * (v14 ^ 0x83031D49 ^ v23)) & 0xDC6966D0) + 1848947560) ^ 0xB3DF63AB ^ (v34 - ((2 * v34) & 0xDC6966D0) + 1848947560);
  if (((*(_BYTE *)(STACK[0x4B8]
                  + ((*(_BYTE *)(STACK[0x4B8]
                               + ((*(_BYTE *)(STACK[0x4B8]
                                            + ((*(unsigned __int8 *)(STACK[0x4B8] + 7) + 5) & 0xFLL))
                                 + 9) & 0xF))
                    + 9) & 0xF))
       + 7) & 0xE) != 0)
    v36 = (*(_BYTE *)(STACK[0x4B8]
                    + ((*(_BYTE *)(STACK[0x4B8]
                                 + ((*(_BYTE *)(STACK[0x4B8]
                                              + ((*(unsigned __int8 *)(STACK[0x4B8] + 7) + 5) & 0xFLL))
                                   + 9) & 0xF))
                      + 9) & 0xF))
         + 7) & 0xF;
  else
    v36 = 1;
  v37 = 1903817027 * *(unsigned __int8 *)STACK[0x4B8]
      - ((1660150406 * *(unsigned __int8 *)STACK[0x4B8]) & 0x61BC9796)
      - 1327608885;
  v38 = (v37 ^ 0xA9FC2D83)
      + (((v37 ^ 0xA9FC2D83) + (((v37 ^ 0xA9FC2D83) + v8 - 44) >> 16)) >> 8)
      + (((v37 ^ 0xA9FC2D83) + v8 - 44) >> 16);
  v39 = v37 ^ 0x36DD1478 ^ (v38 - ((2 * v38 - 1798923700) & 0xC06BF66) + 946253017);
  v40 = (unint64_t)v39 >> 16;
  v41 = (unint64_t)(v39 + HIWORD(v39)) >> 8;
  v42 = v37 ^ 0x2A97E66B ^ (v41 + v40 + 1286404806 + v39 - ((2 * (v39 + HIWORD(v39) + v41) + 1690737228) & 0x34935B40));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x4C8] + 8 * (int)(STACK[0x4A8] ^ (8 * (v36 != 1)))) - 8))(v35 ^ 0x3442B71F ^ (v38 - ((2 * v38 - 1302115034) & 0x68856E3E) + 225729970) ^ (v39 - 651057517 + (_DWORD)v40 + (_DWORD)v41) ^ (v42 - 651057517 + HIWORD(v42) + ((v42 + HIWORD(v42)) >> 8)));
}

void sub_18FE32CE4()
{
  JUMPOUT(0x18FE32AFCLL);
}

uint64_t sub_18FE32CEC()
{
  int v0;
  int v1;

  v1 = STACK[0x4A8] - 69889630;
  LODWORD(STACK[0x260]) = STACK[0x474] & 0xFFFFFFF8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x4C8] + 8 * ((30 * ((v0 + 1) > 0xF)) ^ (v1 + 69889599)))
                            - 8))();
}

void sub_18FE32FA4()
{
  JUMPOUT(0x18FE32D98);
}

uint64_t sub_18FE32FB4(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unint64_t v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  unint64_t v52;
  int v53;
  char *v54;
  int v55;
  int v56;
  int v57;
  unint64_t v58;
  unint64_t v59;
  unsigned int v60;
  int v61;
  _BOOL4 v62;
  unsigned int v64;

  LODWORD(STACK[0x258]) = LODWORD(STACK[0x3F0]) ^ 0x719C22BA;
  v64 = LODWORD(STACK[0x344]) ^ 0xD65CF8CF;
  v11 = a3 + ((a1 + v8 + ((a1 + v8) >> 16)) >> 8) + ((a1 + v8) >> 16) + 1850249891 + v9;
  v12 = (v11 ^ 0x74DC80AE) + ((v11 >> 13) ^ 0xFFFC591B) + 1;
  v13 = (v12 ^ 0x78FCD3F6) - 2029835254 + ((2 * v12) & 0xF1F9A7EC);
  v14 = v13 + (v13 >> 5) - ((2 * (v13 + (v13 >> 5))) & 0xF8F19B38) - 59191908;
  v15 = ((2 * ((v14 ^ 0xFC78CD9C) - 107998449)) & 0x6F5FFFF6)
      + (((v14 ^ 0xFC78CD9C) - 107998449) ^ 0x37AFFFFB)
      - 934281211;
  v16 = v15 - (v15 >> 10) - ((v15 - (v15 >> 10)) >> 2);
  v17 = v16 + 1424499130 + (~(2 * v16) | 0x562FBC8B) + 1;
  v18 = ((((v17 >> 14) ^ 0x29FB5) + (v17 ^ 0xA7ED5743)) ^ 0x73917B73)
      - 1938914163
      + ((2 * (((v17 >> 14) ^ 0x29FB5) + (v17 ^ 0xA7ED5743))) & 0xE722F6E6);
  v19 = v18 - (v18 >> 2) - ((2 * (v18 - (v18 >> 2))) & 0x68E7C3C4) - 1267473950;
  v20 = ((2 * ((v19 ^ 0xB473E1E2) + 511487013)) & 0x7E7EDFEC)
      + (((v19 ^ 0xB473E1E2) + 511487013) ^ 0x3F3F6FF6)
      - 1061122038;
  v21 = v20 + (v20 >> 15) + ((v20 + (v20 >> 15)) >> 3);
  v22 = v21 - ((2 * v21) & 0x869DBEA6) - 1018241197;
  v23 = (v22 ^ 0x9ACB717C) + ((v22 >> 10) ^ 0xFFD94D23) + 1;
  v24 = (v23 ^ 0x1F6FAFB7) - 527413175 + ((2 * v23) & 0x3EDF5F6E);
  v25 = v24 + (v24 >> 7) - ((2 * (v24 + (v24 >> 7))) & 0x9BB39724) + 1306119058;
  v26 = ((2 * ((v25 ^ 0x4DD9CB92) - 787086048)) & 0x6B67FDDE)
      + (((v25 ^ 0x4DD9CB92) - 787086048) ^ 0xB5B3FEEF)
      + 1246494993;
  v27 = v26 - (v26 >> 9) + ((v26 - (v26 >> 9)) >> 5);
  v28 = v27 - ((2 * v27) & 0xE5BD02C4) + 1927184738;
  v29 = ((2 * ((v28 ^ 0x72DE8162) - 1168002143)) & 0xC9FBFAAE)
      + (((v28 ^ 0x72DE8162) - 1168002143) ^ 0xE4FDFD57)
      + 453116585;
  v30 = v29 - (v29 >> 14) + ((v29 - (v29 >> 14)) >> 4);
  v31 = v30 - ((2 * v30) & 0x92BAD1EC) - 916625162;
  v32 = ((2 * ((v31 ^ 0xC95D68F6) - 879085134)) & 0xDB6F75DA)
      + (((v31 ^ 0xC95D68F6) - 879085134) ^ 0x6DB7BAED)
      - 1840757485;
  v33 = v32 + (v32 >> 10) - ((v32 + (v32 >> 10)) >> 5);
  v34 = v33 - ((2 * v33) & 0x30BB2A6A) - 1738697419;
  v35 = ((2 * ((v34 ^ 0x985D9535) + 1300749569)) & 0xBEDC7FFE)
      + (((v34 ^ 0x985D9535) + 1300749569) ^ 0x5F6E3FFF)
      - 1601060863;
  v36 = v35 - (v35 >> 9) - ((v35 - (v35 >> 9)) >> 4);
  v37 = v28 ^ v19 ^ (((v36 - ((2 * v36) & 0x417194F8) - 1598502276) ^ v6)
                   - ((2 * ((v36 - ((2 * v36) & 0x417194F8) - 1598502276) ^ v6)) & 0x68E7C3C4)
                   - 1267473950);
  v38 = ((v37 ^ 3) + 1) & 7;
  v39 = v22 ^ ((a6 ^ 0xD0A6FDEA ^ v14) - ((2 * (a6 ^ 0xD0A6FDEA ^ v14)) & 0x869DBEA6) - 1018241197) ^ v31;
  v40 = v25 ^ ((v17 ^ v10 ^ 0x54E821BA) - 2 * ((v17 ^ v10 ^ 0x54E821BA) & 0x4DD9CB97 ^ (v17 ^ v10) & 5) + 1306119058) ^ v34;
  v41 = (((BYTE1(v39) ^ HIBYTE(v39) ^ BYTE2(v39) ^ 0xA5)
                         - 2
                         * ((BYTE1(v39) ^ HIBYTE(v39) ^ BYTE2(v39) ^ 0xA5) & 0x1F ^ (BYTE1(v39) ^ HIBYTE(v39) ^ BYTE2(v39)) & 8)
                         - 105) ^ v39) ^ 0xC9;
  v42 = (16843009 * v41) & 2 | (4 * ((((16843009 * v41) & 2u) >> 1) & 1)) | 0xFF7DD5F1;
  v43 = (((BYTE1(v40) ^ BYTE2(v40) ^ 0xA1)
                         - 2 * ((BYTE1(v40) ^ BYTE2(v40) ^ 0xA1) & 0x2D ^ (BYTE1(v40) ^ BYTE2(v40)) & 4)
                         + 41) ^ v40) ^ HIBYTE(v40) ^ 0x8F;
  v44 = 16843009 * v43 - ((33686018 * v43) & 0x1E981D32) + 256642713;
  v45 = STACK[0x3A4];
  v46 = ((STACK[0x3A4] & 0xFE ^ 0x48) - ((2 * (STACK[0x3A4] & 0xFE ^ 0x48)) & 0x3C) + 60929823) ^ 0x668C575D;
  v47 = v46 - ((2 * v46) & 0xC003FCD4) + 1921252971;
  v48 = v47 ^ 0x17AE1E21 | LODWORD(STACK[0x2B8]) ^ 0x562B9C01;
  v49 = 16843009 * (v39 & 0xFE ^ 0xE0) - ((33686018 * (v39 & 0xFE ^ 0xE0)) & 0xC0098EC4);
  v50 = 16843009 * v41 - ((33686018 * v41) & 0x121F10D0) - 1995470744;
  LODWORD(STACK[0x2B0]) = v50;
  v51 = (v42 ^ 4) + 1576790816;
  if (((v44 ^ 0xF4C0E98) & ((v42 ^ 4) + 8530445)) != 0)
    v51 = 1559729926 - (v42 ^ 4);
  LODWORD(STACK[0x2B8]) = v44;
  LODWORD(STACK[0x4A8]) = ((v44 ^ 0xF4C0E99) - 1568260371 + v51) ^ v50 & 0xFFFFFFFD;
  v52 = STACK[0x350];
  v53 = (STACK[0x350] & 0xFFFFFE3F | ((((v37 ^ 3) + 1) & 7) << 6)) ^ (STACK[0x350] << 6);
  LODWORD(STACK[0x2A8]) = v38 ^ LODWORD(STACK[0x434]) ^ (v53 - 2052301572 - ((2 * v53) & 0x1F8));
  LODWORD(STACK[0x3EC]) = (v49 - 536557726) ^ 0xE004C762;
  v54 = (char *)*(&off_1E2AB8CD0 + (v7 ^ 0xD)) - 4;
  LODWORD(STACK[0x344]) = v45 ^ 0x4CADD041;
  STACK[0x3F0] = v38;
  v55 = *(_DWORD *)&v54[4 * (((v37 ^ 3) + 1) & 7)]
      - ((2 * *(_DWORD *)&v54[4 * (((v37 ^ 3) + 1) & 7)] + 300042748) & 0x146E9144)
      - 1289196128;
  LODWORD(STACK[0x434]) = v64
                        + ((v52 - ((2 * LODWORD(STACK[0x2A0])) & 8) - 83252236) ^ 0x5CA9DF85 ^ *((_DWORD *)*(&off_1E2AB8CD0 + v7 + 14)
                                                                                               + v52
                                                                                               - 1))
                        + (v55 ^ 0x89892BD5 ^ (((16 * v55) ^ 0xA3748A20)
                                             - 2 * (((16 * v55) ^ 0xA3748A20) & 0xA3748B0 ^ (16 * v55) & 0x10)
                                             - 1976088414));
  v56 = LODWORD(STACK[0x300]) ^ LODWORD(STACK[0x2F8]);
  v57 = STACK[0x474];
  LODWORD(STACK[0x2C0]) = (v49 - 536557726) >> 1;
  LODWORD(STACK[0x2A0]) = v48 - 2 * (v48 & 0x37DC347B ^ v47 & 0xA) + 937178225;
  v58 = STACK[0x4C0];
  v59 = (*(_QWORD *)(STACK[0x4C0] + 8 * (0x63B017C8 % STACK[0x4B0])) ^ 0x6D6D6D6D6D6D6D6DLL) + 478045266;
  LODWORD(STACK[0x498]) = 1662096499 * ((v57 ^ 0x83187616) + (v37 ^ 0x3E282977)) + 1662096499;
  v60 = ((*(_QWORD *)(v58
                    + 8
                    * (((*(_QWORD *)(v58
                                   + 8
                                   * (((*(_QWORD *)(v58 + 8 * (v59 % STACK[0x460])) ^ 0x6D6D6D6D6D6D6D6DuLL) + 460756153)
                                    % STACK[0x460])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                      + 3520911219u)
                     % STACK[0x460])) ^ 0x6D6D6D6D6D6D6D6DuLL)
       + 3569301573u)
      % STACK[0x460];
  LODWORD(STACK[0x404]) = v37 & 7 ^ 4;
  v61 = LODWORD(STACK[0x3A4]) ^ LODWORD(STACK[0x490]);
  LODWORD(STACK[0x2E8]) = v49 - 536557726;
  LODWORD(STACK[0x394]) = v61 ^ (v49 - 536557726);
  LODWORD(STACK[0x260]) = v37 ^ 0x2D472E34;
  LODWORD(STACK[0x434]) = v56;
  LODWORD(STACK[0x4A0]) = v39 & 0xFFFFFF01 | (2
                                            * (((v39 & 0xFE ^ 0xE0)
                                                               - ((2 * (v39 & 0xFE ^ 0xE0)) & 0xC4)
                                                               + 98) >> 1));
  v62 = v60 - 2132867975 > 0x80DF047A;
  if (v60 > 0x7F20FB86)
    v62 = 1;
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * ((27 * !v62) ^ v7)) - 4))(0xF8334AA910DDDA1ALL);
}

void sub_18FE3450C()
{
  JUMPOUT(0x18FE34060);
}

uint64_t sub_18FE34514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,int a45,int a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55,uint64_t a56,int a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a66;
  int v66;

  LODWORD(STACK[0x258]) = a63 - a66;
  LODWORD(STACK[0x490]) = a45 + (a57 ^ 0x13);
  LODWORD(STACK[0x270]) = LODWORD(STACK[0x474]) ^ LODWORD(STACK[0x390]);
  LODWORD(STACK[0x2A0]) ^= LODWORD(STACK[0x494]) ^ a48;
  LODWORD(STACK[0x280]) ^= LODWORD(STACK[0x260]) ^ (a43 - a44);
  LODWORD(STACK[0x390]) = a49 - a55;
  LODWORD(STACK[0x294]) ^= a46;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4C8]
                                                               + 8
                                                               * ((14 * (STACK[0x4B0] <= v66 + 1)) ^ a8))
                                                   - 4))(2097129484, 3745267350);
}

void sub_18FE34A8C()
{
  JUMPOUT(0x18FE34698);
}

uint64_t sub_18FE34AA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  int v54;
  int v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  int v85;
  unsigned int v86;
  uint64_t v87;
  unsigned int v88;
  unint64_t v89;
  int v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  int v95;

  HIDWORD(a52) = LODWORD(STACK[0x498]) + (LODWORD(STACK[0x298]) ^ 0x8D508511);
  v56 = ((v53 + ((unint64_t)(v53 + 0x5E00BFD7A3965722) >> 28) + 0x5E00BFD7A3965722) >> ((v55 - 17) ^ 0x3Bu))
      + v53
      + ((unint64_t)(v53 + 0x5E00BFD7A3965722) >> 28);
  v57 = (((v56 + 0x5E00BFD7A3965722) >> 6) & 0x1FFFFFF6D6FEFF2)
      + (((v56 + 0x5E00BFD7A3965722) >> 7) ^ 0x6EFFFFFFB6B7F7F9);
  v58 = v57
      + v56
      - 2 * v57
      - ((2 * (v57 + v56 - 2 * v57) + 0x1A017FAEB49C9E36) & 0x69DE6D329D4DBE82)
      + 0x1EFF670A8F52E5CLL;
  v59 = ((2 * ((v58 ^ 0x34EF36994EA6DF41) - 0x13AFA5FA8FB17A6)) & 0xFEBF936CC7976AFELL)
      + (((v58 ^ 0x34EF36994EA6DF41) - 0x13AFA5FA8FB17A6) ^ 0x7F5FC9B663CBB57FLL);
  v60 = v59
      + ((v59 - 0x7F5FC9B663CBB57FLL) >> 29)
      - ((v59 + ((v59 - 0x7F5FC9B663CBB57FLL) >> 29) - 0x7F5FC9B663CBB57FLL) >> 8);
  v61 = v60 + ((v60 - 0x7F5FC9B663CBB57FLL) >> 6);
  v62 = v61 - 715936216;
  v63 = v61 - 0x40CAD0B12AAC51D8 - ((v61 - 0x3793DFCC15EAC3C8) >> 28) + 0x936F0E514C18E10;
  v64 = v63 + (v63 >> 8);
  LODWORD(v63) = v62 - 958358439;
  v65 = v64 + (v64 >> 7) - ((2 * (v64 + (v64 >> 7))) & 0xA364981CFA8E6F8ALL) - 0x2E4DB3F182B8C83BLL;
  v66 = ((2 * ((v65 ^ 0xD1B24C0E7D4737C5) - 0x25953151116B048ALL)) & 0xB9F3FFF5B8BEE6FELL)
      + (((v65 ^ 0xD1B24C0E7D4737C5) - 0x25953151116B048ALL) ^ 0xDCF9FFFADC5F737FLL)
      + 0x2306000523A08C81;
  v67 = v66 + (v66 >> 29) - ((v66 + (v66 >> 29)) >> 14);
  v68 = v67 - (v67 >> 7) - ((2 * (v67 - (v67 >> 7))) & 0xAA8A265717712388) - 0x2ABAECD474476E3CLL;
  v69 = ((2 * ((v68 ^ 0xD545132B8BB891C4) - 0x10BF2422B96631C1)) & 0xF6FBFA5B87BED2ECLL)
      + (((v68 ^ 0xD545132B8BB891C4) - 0x10BF2422B96631C1) ^ 0x7B7DFD2DC3DF6976);
  v70 = v69
      - ((v69 - 0x7B7DFD2DC3DF6976) >> 28)
      - 0x7B7DFD2DC3DF6976
      + ((v69 - ((v69 - 0x7B7DFD2DC3DF6976) >> 28) - 0x7B7DFD2DC3DF6976) >> 8);
  v71 = v70 + (v70 >> 8) - ((2 * (v70 + (v70 >> 8))) & 0x73D925E1BC97BE4ALL) - 0x46136D0F21B420DBLL;
  v72 = ((2 * (((v71 >> 26) ^ 0x103159418FLL) + (v71 ^ 0x40C565063FA7C0EBLL))) & 0xEF47FBFA2DFFBFE0)
      + ((((v71 >> 26) ^ 0x103159418FLL) + (v71 ^ 0x40C565063FA7C0EBLL)) ^ 0xF7A3FDFD16FFDFF0)
      + 0x85C0202E9002010;
  v73 = v72 + (v72 >> 14) + ((v72 + (v72 >> 14)) >> 6);
  v74 = ((2
        * (((v73 - ((2 * v73) & 0xA2F3EFA3550EA5BALL) - 0x2E86082E5578AD23) ^ 0xD179F7D1AA8752DDLL)
         - 0x70FE5FCAA42AEA45)) & 0xFD57DFFEBFFFBFFELL)
      + ((((v73 - ((2 * v73) & 0xA2F3EFA3550EA5BALL) - 0x2E86082E5578AD23) ^ 0xD179F7D1AA8752DDLL)
        - 0x70FE5FCAA42AEA45) ^ 0xFEABEFFF5FFFDFFFLL);
  v75 = v74
      - ((v74 + 0x1541000A0002001) >> 26)
      + 0x1541000A0002001
      - ((v74 - ((v74 + 0x1541000A0002001) >> 26) + 0x1541000A0002001) >> 13);
  v76 = v75 - (v75 >> 3) - ((2 * (v75 - (v75 >> 3))) & 0x1CBE78B02DB41AFCLL) + 0xE5F3C5816DA0D7ELL;
  v77 = (v76 ^ 0x469095C7990B547BLL) + ((v76 >> 28) ^ 0xFFFFFFFB96F6A386) + 1;
  v78 = ((2 * v77) & 0xF5FBFFF7EE94DA8ELL) + (v77 ^ 0x7AFDFFFBF74A6D47) - 0x7AFDFFFBF74A6D47;
  v79 = v78 - (v78 >> 11) + ((v78 - (v78 >> 11)) >> 4);
  v80 = v79 - ((2 * v79) & 0xFA8014D526DD7C0ELL) - 0x2BFF5956C9141F9;
  LODWORD(STACK[0x298]) = LODWORD(STACK[0x4A8]) ^ LODWORD(STACK[0x2B8]);
  v81 = v54 ^ v63 ^ v71 ^ ((v71 ^ v63) >> 1) & 0x55DF6EBA ^ 0x3A2F4E8A ^ (((v80 >> 1) & a3 ^ 0x41974E02) - 2 * (((v80 >> 1) & a3 ^ 0x41974E02) & 0x114E2E22 ^ (v80 >> 1) & 0x20) - 1821458937) ^ v80;
  LODWORD(STACK[0x390]) = LODWORD(STACK[0x2A8]) ^ 0x85B62CCC;
  if (((*(_BYTE *)(STACK[0x4B8]
                  + ((*(_BYTE *)(STACK[0x4B8]
                               + ((*(_BYTE *)(STACK[0x4B8] + ((*(_BYTE *)(STACK[0x4B8] + 13) + 8) & 0xF)) + 6) & 0xF))
                    + 7) & 0xF))
       + 11) & 0xE) != 0)
    v82 = (*(_BYTE *)(STACK[0x4B8]
                    + ((*(_BYTE *)(STACK[0x4B8]
                                 + ((*(_BYTE *)(STACK[0x4B8] + ((*(_BYTE *)(STACK[0x4B8] + 13) + 8) & 0xF)) + 6) & 0xF))
                      + 7) & 0xF))
         + 11) & 0xF;
  else
    v82 = 1;
  v83 = (v55 - 855128947) & 0x32F83B37;
  v84 = 1903817027 * *(unsigned __int8 *)STACK[0x4B8]
      - ((49537670 * *(unsigned __int8 *)STACK[0x4B8]) & 0x1D7FEC92)
      + 247461449;
  v85 = (v83 ^ 0x179D9007 ^ v84)
      + (((v83 ^ 0x179D9007 ^ v84) + ((v83 ^ 0x179D9007 ^ v84) >> 16)) >> 8)
      + ((v83 ^ 0x179D9007 ^ v84) >> 16);
  v86 = v85 - ((2 * v85 - 1302115034) & 0x462AC0F4) - 62454003;
  v87 = v85 - ((2 * v85 + 1422301772) & 0xC60B57Au) + 949200867;
  v88 = v84 ^ 0x888FACF4 ^ v87;
  v89 = (unint64_t)(v88 + HIWORD(v88)) >> 8;
  v90 = v88 + HIWORD(v88) + v89;
  LODWORD(v89) = v89 + HIWORD(v88);
  v91 = v89 + 10468555 + v88 - 2 * ((v90 - 1724799341) & 0x276E163B ^ (v90 + 1682557199) & 3);
  v92 = v84 ^ 0xA2C689A5 ^ ((_DWORD)v89 + 1591528722 + v88 - ((2 * (v90 + 1682557199) + 473106478) & 0x58F2FFD8));
  v93 = (unint64_t)v92 >> 16;
  v94 = (unint64_t)(v92 + WORD1(v92)) >> 8;
  LODWORD(v89) = v92 + WORD1(v92) + v94;
  v95 = v89 + 977943715;
  LODWORD(v89) = v94 + v93 - 753633352 + v92 - 2 * ((v89 + 1496426131) & 0x79E2D127 ^ (v89 + 977943715) & 2);
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * ((113 * (v82 != 1)) ^ (v55 - 17))) - 4))(((((v86 >> 1) & 0x55DF6EBA ^ 0x118A2038)- 1587413187- ((2 * ((v86 >> 1) & 0x55DF6EBA ^ 0x118A2038)) & 0x282DC70)) ^ v81 ^ (v91 >> 1) & 0x55DF6EBA ^ v89 ^ (((v89 >> 1) & 0x55DF6EBA ^ 0x54D16892) - ((2 * ((v89 >> 1) & 0x55DF6EBA ^ 0x54D16892)) & 0xA3848040) - 102575835) ^ 0x11970A18) & 0x2315607B, (v91 >> 1) & 0x55DF6EBA, v87, v83, 1440706234, (_DWORD)v94 - 1082241499 + (_DWORD)v93 + v92 - ((2 * v95 + 271720710) & 0x1A360200) + 1, ((v87 >> 1) & 0x55DF6EBA ^ 0x41182C1A)+ 1086468696- ((2 * ((v87 >> 1) & 0x55DF6EBA ^ 0x41182C1A)) & 0x81844430), v92, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_18FE35660(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49)
{
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;

  LODWORD(STACK[0x498]) = v50;
  LODWORD(STACK[0x4A8]) = v53;
  LODWORD(STACK[0x4A0]) = v49;
  LODWORD(STACK[0x3A0]) = LODWORD(STACK[0x258]) ^ a49;
  LODWORD(STACK[0x268]) ^= LODWORD(STACK[0x3E8]) ^ LODWORD(STACK[0x490]);
  LODWORD(STACK[0x270]) ^= a48;
  v56 = (a4 + 6) | 2;
  v57 = *(unsigned __int8 *)(STACK[0x4B8] + v54);
  LODWORD(STACK[0x490]) = v56;
  v58 = v57 * (v56 + 1903817013) - ((1660150406 * v57) & 0x7FD15EEE) + 1072213879;
  v59 = (v51 + ((a8 + v55 + ((a8 + v55) >> 16)) >> 8)
             + ((a8 + v55) >> 16)
             - 1082241499
             + v52) ^ 0x32F3AE77 ^ v58;
  v60 = v59 + v54;
  v61 = v54
      + 1806274160
      + ((v60 + WORD1(v60)) >> 8)
      + (v60 >> 16)
      + v59
      - ((2 * (v59 + v54 + ((v59 + v54) >> 16) + ((v60 + WORD1(v60)) >> 8))) & 0xD7531CE0);
  v62 = (v61 ^ 0x6BA98E70) - ((2 * (v61 ^ 0x6BA98E70) - 1302115034) & 0xB575A664) - 1276347963;
  v63 = ((2 * v62) & 0xB2634D26 ^ 0xB0610424) + (v62 ^ 0x38B75A1);
  v64 = v58 ^ 0xDF2B4326 ^ (v63 - 524030895 - ((2 * v63) & 0xC187D8A2));
  v65 = (unint64_t)(v64 + (_DWORD)v54 + ((v64 + v54) >> 16)) >> 8;
  v66 = v64 + v54 + ((v64 + v54) >> 16) + v65;
  LODWORD(v65) = v54 + v65 + ((v64 + v54) >> 16);
  v67 = v65 + 1092181543 + v64 - ((2 * v66 - 1302115034) & 0xCFCF6F28);
  v68 = v58 ^ 0x86D10BB2 ^ (v65 + 1805447659 + v64 - ((2 * v66 - 456746420) & 0x7273498A));
  v69 = v54
      + ((v68 + (_DWORD)v54 + ((v68 + v54) >> 16)) >> 8)
      + ((v68 + v54) >> 16)
      - 85321469
      + v68
      - ((2
        * (v68 + v54 + ((v68 + v54) >> 16) + ((v68 + (_DWORD)v54 + ((v68 + v54) >> 16)) >> 8))
        + 845368614) & 0x4370E4E0);
  v70 = LODWORD(STACK[0x4A8]) ^ (((v62 >> 1) & 0x55DF6EBA ^ 0x455D6898)
                               - 1587413187
                               - ((2 * ((v62 >> 1) & 0x55DF6EBA ^ 0x455D6898)) & 0x282DC70)) ^ v67 ^ (((v67 >> 1) & 0x55DF6EBA ^ 0x11D34A8A) - ((2 * ((v67 >> 1) & 0x55DF6EBA ^ 0x11D34A8A)) & 0x8B8E4D20) + 1743239060) ^ 0x10DC2838 ^ (v69 >> 1) & 0x55DF6EBA;
  LODWORD(STACK[0x4A8]) = v62 ^ v69 ^ 0x80D98D4D ^ (v70 - 625290445 + ~((2 * v70) & 0xB575A664));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x4C8] + 8 * ((86 * ((unint64_t)(v54 + 1) > 0xF)) ^ a4)) - 12))();
}

void sub_18FE35AE4()
{
  int v0;
  int v1;

  LODWORD(STACK[0x498]) = v1;
  LODWORD(STACK[0x4A0]) = v0;
  JUMPOUT(0x18FE356F0);
}

uint64_t sub_18FE35AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,int a55,int a56,int a57,int a58)
{
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  unsigned int v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  int v109;
  int v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  _BOOL4 v118;
  uint64_t (*v119)(unint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v63 = v59
      + ((v61 + v58 + ((v61 + v58) >> 16)) >> 8)
      + ((v61 + v58) >> 16)
      - 1082241499
      + v62;
  v64 = (v63 ^ 0xC222C4D0) + ((v63 >> 13) ^ 0xFFF9EEE9) + 1;
  v65 = (v64 ^ 0x75FF26FB) - 1979655931 + ((2 * v64) & 0xEBFE4DF6);
  v66 = v65 + (v65 >> 5) - ((2 * (v65 + (v65 >> 5))) & 0xE023A410) - 267267576;
  v67 = ((2 * ((v66 ^ 0xF011D208) - 107998449)) & 0x7EFFF3F8)
      + (((v66 ^ 0xF011D208) - 107998449) ^ 0xBF7FF9FC)
      + 1082131972;
  v68 = v67 - (v67 >> 10) - ((v67 - (v67 >> 10)) >> 2);
  v69 = v68 - ((2 * v68) & 0x25092BF8) + 310679036;
  v70 = ((((v69 >> 14) ^ 0x38607) + (v69 ^ 0xE181E305)) ^ 0x57FBC7D6)
      - 1476118486
      + ((2 * (((v69 >> 14) ^ 0x38607) + (v69 ^ 0xE181E305))) & 0xAFF78FAC);
  v71 = v70 - (v70 >> 2) + 126764935 + (~(2 * (v70 - (v70 >> 2))) | 0xF0E370F1) + 1;
  v72 = ((2 * ((v71 ^ 0x78E4787) + 511487013)) & 0xFFFFBDEC) + (((v71 ^ 0x78E4787) + 511487013) ^ 0xFFFFDEF6) + 8458;
  v73 = v72 + (v72 >> 15) + ((v72 + (v72 >> 15)) >> 3);
  v74 = v73 - ((2 * v73) & 0xCB9D6E5A) + 1708046125;
  v75 = (v74 ^ 0x3C4B1902) + ((v74 >> 10) ^ 0xFFF0ED39) + 1;
  v76 = (v75 ^ 0xFFFAF77E) + 329858 + ((2 * v75) & 0xFFF5EEFC);
  v77 = v76 + (v76 >> 7) - ((2 * (v76 + (v76 >> 7))) & 0xD0BDBED0) - 396435608;
  v78 = ((2 * ((v77 ^ 0xE85EDF68) - 787086048)) & 0xCFDFDB76)
      + (((v77 ^ 0xE85EDF68) - 787086048) ^ 0x67EFEDBB)
      - 1743777211;
  v79 = v78 - (v78 >> 9) + ((v78 - (v78 >> 9)) >> 5);
  v80 = ((2 * (((v79 - ((2 * v79) & 0x7936AC36) - 1130670565) ^ 0xBC9B561B) - 1168002143)) & 0xEFDF5174)
      + ((((v79 - ((2 * v79) & 0x7936AC36) - 1130670565) ^ 0xBC9B561B) - 1168002143) ^ 0xF7EFA8BA)
      + 135288646;
  v81 = v80 - (v80 >> 14) + ((v80 - (v80 >> 14)) >> 4);
  v82 = v81 - ((2 * v81) & 0x1AE5FEB6) + 225640283;
  v83 = ((2 * ((v82 ^ 0xD72FF5B) - 879085134)) & 0xEEEEFFBC)
      + (((v82 ^ 0xD72FF5B) - 879085134) ^ 0xF7777FDE)
      + 143163426;
  v84 = v83 + (v83 >> 10) - ((v83 + (v83 >> 10)) >> 5);
  v85 = v84 - ((2 * v84) & 0xE031F024) + 1880684562;
  v86 = LODWORD(STACK[0x484]) ^ LODWORD(STACK[0x288]) ^ 0x50D21D80;
  v87 = (((LODWORD(STACK[0x484]) >> 1) & 0x55DF6EBA ^ 0x111E2428)
       + 641559130
       - ((2 * ((LODWORD(STACK[0x484]) >> 1) & 0x55DF6EBA ^ 0x111E2428)) & 0x83AD434)) ^ LODWORD(STACK[0x484]) ^ ((v86 ^ LODWORD(STACK[0x488])) >> 1) & 0x55DF6EBA ^ a56 ^ a53;
  LODWORD(STACK[0x4A0]) = v82;
  v88 = v87 ^ ((v82 ^ ((v66 ^ 0x95DF6525 ^ v74) - ((2 * (v66 ^ 0x95DF6525 ^ v74)) & 0x1AE5FEB6) + 225640283)) >> 1) & 0x55DF6EBA;
  v89 = LODWORD(STACK[0x474]) ^ 0xFD5431F4 ^ ((v88 ^ 0x93458DD2)
                                            - 2 * ((v88 ^ 0x93458DD2) & 0x7F12981F ^ v88 & 1)
                                            + 2131925022);
  v90 = (v89 - ((2 * v89) & 0x2F3758C4) + 396078178) ^ v86;
  v91 = (v90 - ((2 * v90) & 0xE023A410) - 267267576) ^ v66;
  v92 = (v91 + a8 - ((2 * v91) & 0xD42CA8)) ^ v60;
  v93 = (v92 - ((2 * v92) & 0xCB9D6E5A) + 1708046125) ^ v74;
  LODWORD(STACK[0x498]) = v93 - ((2 * v93) & 0x1AE5FEB6) + 225640283;
  v94 = v85 ^ ((v77 ^ v69 ^ 0xFADA4A94) - 2 * ((v77 ^ v69 ^ 0xFADA4A94) & 0x7018F832 ^ (v77 ^ v69) & 0x20) + 1880684562);
  v95 = LODWORD(STACK[0x278]) ^ LODWORD(STACK[0x48C]);
  v96 = (v94 - ((2 * v94) & 0x446898D4) - 1573630870) ^ v95;
  v97 = (-2051658548 - (v96 & 0xB2C5910) + ((v96 >> 1) & 0x55DF6EBA)) ^ LODWORD(STACK[0x390]);
  v98 = (v97 - ((2 * v97) & 0x446898D4) - 1573630870) ^ v95;
  v99 = (v98 - 1587413187 - ((2 * v98) & 0x42C3FE7A)) ^ LODWORD(STACK[0x4A8]);
  v100 = (v99 - ((2 * v99) & 0x25092BF8) + 310679036) ^ v69;
  v101 = (v100 - ((2 * v100) & 0xD0BDBED0) - 396435608) ^ v77;
  v102 = (v101 - ((2 * v101) & 0xE031F024) + 1880684562) ^ v85;
  v103 = (v102 - 2017488746 - ((2 * v102) & 0xF7F212C)) ^ a58;
  v104 = (v103 - ((2 * v103) & 0x25E30564) - 1829666126) ^ LODWORD(STACK[0x48C]);
  LODWORD(STACK[0x4A8]) = v104 - 2051658548 - ((2 * v104) & 0xB6C5998);
  v105 = ((*(_QWORD *)(STACK[0x4C0]
                     + 8
                     * (((*(_QWORD *)(STACK[0x4C0]
                                    + 8
                                    * (((*(_QWORD *)(STACK[0x4C0]
                                                   + 8
                                                   * (((*(_QWORD *)(STACK[0x4C0]
                                                                  + 8 * (0x791DF2FA % STACK[0x4B0])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                                                     + 2126161460)
                                                    % STACK[0x460])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                                      + 2993841644u)
                                     % STACK[0x460])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                       + 2220923829u)
                      % STACK[0x460])) ^ 0x6D6D6D6D6D6D6D6DuLL)
        + 1951303181)
       % STACK[0x460];
  v106 = 0x418B018541479FA3 * (*(_QWORD *)STACK[0x4C0] ^ 0x6D6D6D6D6D6D6D6DLL)
       - ((0x316030A828F3F46 * (*(_QWORD *)STACK[0x4C0] ^ 0x6D6D6D6D6D6D6D6DLL)) & ((LODWORD(STACK[0x490]) - 69889608)
                                                                                    + 0x31E9277A389A1F7ALL))
       - 0x670B6C4265C82760;
  v107 = (v106 ^ 0x8F8DD0FFDB7676ABLL)
       - ((v106 ^ 0x8F8DD0FFDB7676ABLL) >> 32)
       - (((v106 ^ 0x8F8DD0FFDB7676ABLL) - ((v106 ^ 0x8F8DD0FFDB7676ABLL) >> 32)) >> 16)
       - (((v106 ^ 0x8F8DD0FFDB7676ABLL)
         - ((v106 ^ 0x8F8DD0FFDB7676ABLL) >> 32)
         - (((v106 ^ 0x8F8DD0FFDB7676ABLL) - ((v106 ^ 0x8F8DD0FFDB7676ABLL) >> 32)) >> 16)) >> 8)
       + 0x932B57ECCE25EEFLL;
  v108 = v107 - ((2 * v107 + 0x136F01578DA04E86) & 0xB86B78AB92E3193CLL) - 0x1A12C2FE6FBE4C1FLL;
  v109 = (((v108 >> 1) & 0x37E0663F ^ 0x24A0460F)
        - 2 * (((v108 >> 1) & 0x37E0663F ^ 0x24A0460F) & 0x160043E ^ (v108 >> 1) & 0x20)
        - 915305314) ^ v108;
  v110 = v109 - 1564388464 - ((2 * v109) & 0x4582A720);
  v111 = (v106 ^ 0x44C12FE85346543ELL ^ v108) - ((v106 ^ 0x44C12FE85346543ELL ^ v108) >> 32);
  v112 = v111 - (v111 >> 16) - ((v111 - (v111 >> 16)) >> 8) + 0x6282ED7561EDEDDFLL;
  v113 = v112 - ((2 * v112 + 0x60CE916A638930A6) & 0x52FB4A2AEFA7FD2CLL) + 0x59E4EDCAA99896E9;
  v114 = (((v113 >> 1) & 0x37E0663F ^ 0x33E0660B)
        - ((2 * ((v113 >> 1) & 0x37E0663F ^ 0x33E0660B)) & 0x6F80CC2C)
        + 2010381974) ^ v113;
  v115 = (v106 ^ 0x318936A8EDE42636 ^ v113) - ((v106 ^ 0x318936A8EDE42636 ^ (unint64_t)v113) >> 32);
  v116 = v115 - (v115 >> 16) - ((v115 - (v115 >> 16)) >> 8) + 0x736AAC5A9E7F9007;
  v117 = v116 - ((2 * v116 + 0x3EFF139FEA65EC56) & 0x9BDD0C2C86B78978) - 0x1291F019C7714519;
  v118 = v105 - 1492263352 > 0xA70DDE49;
  if (v105 > 0x58F221B7)
    v118 = 1;
  v119 = (uint64_t (*)(unint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * ((39 * !v118) ^ LODWORD(STACK[0x490]))) - 12);
  return v119(v117, 2426052677, 0x3EFF139FEA65EC56, LODWORD(STACK[0x478]) ^ 0x7AEED6B3 ^ v110 ^ v114 ^ (((v117 >> 1) & 0x37E0663F ^ 0x21A0621E)+ 1130087612- ((2* ((v117 >> 1) & 0x37E0663F ^ 0x21A0621E)) & 0x6808878)) ^ v117, 0xED6E0FE6388EBAE7, 3875586809, 39, v119, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

void sub_18FE36858()
{
  JUMPOUT(0x18FE363DCLL);
}

uint64_t sub_18FE36860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;

  v49 = *(_QWORD *)(STACK[0x4C0] + 8 * v48) ^ 0x6D6D6D6D6D6D6D6DLL;
  v50 = 0x418B018541479FA3 * v49
      - ((v49 * ((v47 + 69889628) ^ 0x8316030A828F3F64)) & 0xE30058457C890E0CLL)
      + 0x71802C22BE448706;
  v51 = (a1 ^ 0x3C6EAA34FD1F43BALL ^ v50) + v48 - (((a1 ^ 0x3C6EAA34FD1F43BALL ^ v50) + v48) >> 32);
  v52 = v51 - (v51 >> 16) - ((v51 - (v51 >> 16)) >> 8) + 0x52B5C25E96D70DF0;
  v53 = v52 - ((2 * v52 + 0x68E797F9B6F084) & 0x8476F25C2A7E252) + 0x44582B5EDE2F696BLL;
  v54 = (v50 ^ 0xF5A39BB05F17762FLL ^ v53) + v48 - (((v50 ^ 0xF5A39BB05F17762FLL ^ v53) + v48) >> 32);
  v55 = v54 - (v54 >> 16) - ((v54 - (v54 >> 16)) >> 8) + 0x7BA84C0E8EC7FD17;
  v56 = v55 - ((2 * v55 + 0x2E83D43809D51236) & 0xB9F406F768D45F86) + 0x743BED97B954B8DELL;
  v57 = (v50 ^ 0xAD7A2F590A2EA8C5 ^ v56) + v48 - (((v50 ^ 0xAD7A2F590A2EA8C5 ^ v56) + v48) >> 32);
  v58 = v57 - (v57 >> 16) - ((v57 - (v57 >> 16)) >> 8);
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * ((26 * (STACK[0x4B0] <= v48 + 1)) ^ (v47 + 69889605))) - 8))(((v58 - 0xFD22630127B177FLL - ((2 * v58) & 0xE05BB39FDB09D102)) ^ 0xF02DD9CFED84E881)- ((2 * ((v58 - 0xFD22630127B177FLL - ((2 * v58) & 0xE05BB39FDB09D102)) ^ 0xF02DD9CFED84E881)+ 0x25D46C5527650C64) & 0x9BDD0C2C86B78978)+ 0x60D8BC40D70E4AEELL, 2061355656, 0x60D8BC40D70E4AEELL, (v58 - 0xFD22630127B177FLL - ((2 * v58) & 0xE05BB39FDB09D102)) ^ 0xF02DD9CFED84E881, 0, a6, 895509508, 2232604644, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

void sub_18FE36E14()
{
  JUMPOUT(0x18FE36918);
}

uint64_t sub_18FE36E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  int v46;
  int v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  unsigned int v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unsigned int v74;
  unint64_t v75;
  unint64_t v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  int v80;
  unsigned int v81;
  unint64_t v82;
  int v83;
  int v84;
  unsigned int v85;
  uint64_t v86;
  unsigned int v87;
  unint64_t v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  int v98;

  v48 = ((2 * (a4 - 0x373B377CD11039CBLL)) & 0xFCFEFFFBFBFECB74)
      + ((a4 - 0x373B377CD11039CBLL) ^ 0x7E7F7FFDFDFF65BALL)
      - 0x7E7F7FFDFDFF65BALL;
  STACK[0x4A0] = (v46 - 34) | 8u;
  v49 = v48 + (v48 >> 28) + ((v48 + (v48 >> 28)) >> (((v46 - 34) | 8) ^ 3u));
  v50 = v49 - (v49 >> 7) - ((2 * (v49 - (v49 >> 7))) & 0x6634B4C76EF4C86ALL) + 0x331A5A63B77A6435;
  v51 = ((2 * ((v50 ^ 0x331A5A63B77A6435) - 0x13AFA5FA8FB17A6)) & 0xEE6FFE3FC759BBF6)
      + (((v50 ^ 0x331A5A63B77A6435) - 0x13AFA5FA8FB17A6) ^ 0x7737FF1FE3ACDDFBLL)
      - 0x7737FF1FE3ACDDFBLL;
  v52 = v51 + (v51 >> 29) - ((v51 + (v51 >> 29)) >> 8);
  v53 = v52 + (v52 >> 6) - ((2 * (v52 + (v52 >> 6))) & 0xAC57978FF9036246) - 0x29D43438037E4EDDLL;
  v54 = ((2 * ((v53 ^ 0xD62BCBC7FC81B123) + 0x47CBE9EA4DE0F1B7)) & 0x7FFBEF7F7E3DDF5ELL)
      + (((v53 ^ 0xD62BCBC7FC81B123) + 0x47CBE9EA4DE0F1B7) ^ 0xBFFDF7BFBF1EEFAFLL);
  v55 = v54
      - ((v54 + 0x4002084040E11051) >> 28)
      + 0x4002084040E11051
      + ((v54 - ((v54 + 0x4002084040E11051) >> 28) + 0x4002084040E11051) >> 8);
  v56 = v55 + (v55 >> 7) - ((2 * (v55 + (v55 >> 7))) & 0x74DE54DE57C68A28) + 0x3A6F2A6F2BE34514;
  v57 = ((2 * ((v56 ^ 0x3A6F2A6F2BE34514) - 0x25953151116B048ALL)) & 0x7BFBFEEFF176FFAELL)
      + (((v56 ^ 0x3A6F2A6F2BE34514) - 0x25953151116B048ALL) ^ 0xBDFDFF77F8BB7FD7)
      + 0x4202008807448029;
  v58 = v57 + (v57 >> 29) - ((v57 + (v57 >> 29)) >> 14);
  v59 = v58 - (v58 >> 7) - ((2 * (v58 - (v58 >> 7))) & 0xD11BCFE07A47B0BALL) + 0x688DE7F03D23D85DLL;
  v60 = ((2 * ((v59 ^ 0x688DE7F03D23D85DLL) - 0x10BF2422B96631C1)) & 0xB7EEBE5FBEFEFFBELL)
      + (((v59 ^ 0x688DE7F03D23D85DLL) - 0x10BF2422B96631C1) ^ 0x5BF75F2FDF7F7FDFLL);
  v61 = v60
      - ((v60 - 0x5BF75F2FDF7F7FDFLL) >> 28)
      - 0x5BF75F2FDF7F7FDFLL
      + ((v60 - ((v60 - 0x5BF75F2FDF7F7FDFLL) >> 28) - 0x5BF75F2FDF7F7FDFLL) >> 8);
  v62 = v61 + (v61 >> 8) - ((2 * (v61 + (v61 >> 8))) & 0x60D59EFCA9CBEA60) + 0x306ACF7E54E5F530;
  v63 = ((((v62 ^ v53) >> 1) & v45 ^ 0x14202209)
       + 1424356656
       - 2 * ((((v62 ^ v53) >> 1) & v45 ^ 0x14202209) & 0x14E06432 ^ ((v62 ^ v53) >> 1) & 2)) ^ v62;
  v64 = v63 - ((2 * v63) & 0xF9036246) - 58609373;
  v65 = ((2 * (((v62 >> 26) ^ 0x3250CE222DLL) + (v62 ^ 0xC9433888B509EAFELL))) & 0xFB63FDF3F7EC7FFALL)
      + ((((v62 >> 26) ^ 0x3250CE222DLL) + (v62 ^ 0xC9433888B509EAFELL)) ^ 0xFDB1FEF9FBF63FFDLL)
      + 0x24E01060409C003;
  v66 = v65 + (v65 >> 14) + ((v65 + (v65 >> 14)) >> 6);
  v67 = v66 - ((2 * v66) & 0xDB42ABEA27E38C08) - 0x125EAA0AEC0E39FCLL;
  v68 = ((2 * ((v67 ^ 0xEDA155F513F1C604) - 0x70FE5FCAA42AEA45)) & 0x9DBB7DB2DCFDFDDELL)
      + (((v67 ^ 0xEDA155F513F1C604) - 0x70FE5FCAA42AEA45) ^ 0xCEDDBED96E7EFEEFLL);
  v69 = v68
      - ((v68 + 0x3122412691810111) >> 26)
      + 0x3122412691810111
      - ((v68 - ((v68 + 0x3122412691810111) >> 26) + 0x3122412691810111) >> 13);
  v70 = v69 - (v69 >> 3) - ((2 * (v69 - (v69 >> 3))) & 0x1F6AE82C912F9CFELL) - 0x704A8BE9B7683181;
  v71 = (v70 ^ 0xC77ADD89C746977ALL) + ((v70 >> 28) ^ 0xFFFFFFF388522763) + 1;
  v72 = ((2 * v71) & 0xFE387FFF7EFF5FFELL)
      + (v71 ^ 0x7F1C3FFFBF7FAFFFLL)
      - ((((2 * v71) & 0xFE387FFF7EFF5FFELL) + (v71 ^ 0x7F1C3FFFBF7FAFFFLL) - 0x7F1C3FFFBF7FAFFFLL) >> 11);
  v73 = v72 + ((v72 - 0x7F1C3FFFBF7FAFFFLL) >> 4);
  v74 = v73 + 1082150913;
  v75 = v73 - 0x1C5C47731BA5D855 - ((v73 + 0x27409207CA1F9E79) >> 30) + 0x439CD97AE5C576CELL;
  LODWORD(STACK[0x4A8]) = v44 ^ v53 ^ v64 ^ v74 ^ 0xD51294F0 ^ (v74 >> 1) & 0x37E0663F;
  LODWORD(v53) = ((v75 - (v75 >> 9)) >> 7) + v75 - (v75 >> 9);
  LODWORD(v53) = v53 - 269846650 - ((2 * v53) & 0xDFD4EF0C);
  v76 = STACK[0x4B8];
  v77 = *(_BYTE *)(STACK[0x4B8] + 1);
  v78 = v53 ^ ((v56 ^ 0x38128310 ^ v67) - ((2 * (v56 ^ 0x38128310 ^ v67)) & 0x5FD4EF0C) - 269846650);
  LODWORD(v53) = (((-269846650 - (v78 & 0x4FC0CC0C) + (v45 & (v78 >> 1))) ^ v53)
                + 334611972
                - ((2 * ((-269846650 - (v78 & 0x4FC0CC0C) + (v45 & (v78 >> 1))) ^ v53)) & 0x27E38C08)) ^ v67;
  LODWORD(STACK[0x4B0]) = v47 ^ v56 ^ 0xA6723C37 ^ (v53 - ((2 * v53) & 0x57C68A28) + 736314644);
  if (((*(_BYTE *)(v76 + ((*(_BYTE *)(v76 + ((*(_BYTE *)(v76 + ((v77 + 14) & 0xF)) + 1) & 0xF)) + 6) & 0xF)) + 12) & 0xE) != 0)
    v79 = (*(_BYTE *)(v76 + ((*(_BYTE *)(v76 + ((*(_BYTE *)(v76 + ((v77 + 14) & 0xF)) + 1) & 0xF)) + 6) & 0xF)) + 12) & 0xF;
  else
    v79 = 1;
  STACK[0x498] = v79 - 1;
  v80 = 1903817027 * *(unsigned __int8 *)STACK[0x4B8]
      - ((-487333242 * *(unsigned __int8 *)STACK[0x4B8]) & (STACK[0x4A0] - 1042679522))
      - 521339757;
  v81 = v80 ^ 0xF9CE9ADB;
  v82 = (unint64_t)(v81 + HIWORD(v81)) >> 8;
  v83 = v81 + HIWORD(v81) + v82;
  v84 = v82 + ((v80 ^ 0xF9CE9ADB) >> 16);
  v85 = v84 - 1246690279 + (v80 ^ 0xF9CE9ADB) - ((2 * v83 - 1302115034) & 0xB8FEBB0C);
  v86 = v84 + 745241484 + (v80 ^ 0xF9CE9ADB) - ((2 * v83 + 1690737228) & 0xF4105CCC);
  v87 = v80 ^ 0x9AE4D2F5 ^ v86;
  v88 = (unint64_t)(v87 + HIWORD(v87)) >> 8;
  v89 = v87 + HIWORD(v87) + v88;
  LODWORD(v88) = v88 + HIWORD(v87);
  v90 = v88 + 1288793507 + v87 - ((2 * v89 - 1302115034) & 0xE73F8E20);
  v91 = v80 ^ 0xBDAA0BDA ^ (v88 + 262816879 + v87 - ((2 * v89 + 1690737228) & 0xBA8DEE92));
  v92 = (unint64_t)v91 >> 16;
  v93 = (unint64_t)(v91 + HIWORD(v91)) >> 8;
  v94 = 2 * (v91 + HIWORD(v91) + v93);
  v95 = v93 + 3986457 + v92 + v91 - ((v94 + 845368614) & 0x4E165B0C);
  v96 = v95 >> 1;
  v97 = (v90 >> 1) & 0x37E0663F;
  v98 = LODWORD(STACK[0x4A8]) ^ (((v85 >> 1) & 0x37E0663F ^ 0x26202603)
                               - 720202512
                               - ((2 * ((v85 >> 1) & 0x37E0663F ^ 0x26202603)) & 0x2A000860)) ^ v97 ^ v95 ^ 0x31C06208 ^ (((v95 >> 1) & 0x37E0663F ^ 0x13800603) - 2 * (((v95 >> 1) & 0x37E0663F ^ 0x13800603) & 0x27002426 ^ (v95 >> 1) & 0x20) + 655043974);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * (int)((42 * (STACK[0x498] != 0)) ^ STACK[0x4A0])) - 4))(v97, (v93 - 2092591816 + v92), v96, v85 ^ v90 ^ 0xA68D53E0 ^ (v98 - ((2 * v98) & 0xB8FEBB0C) - 595632762), v93, v94, v92, v86, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

void sub_18FE379C8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  LODWORD(STACK[0x4A8]) = a4;
  LODWORD(STACK[0x4B0]) = v4;
  JUMPOUT(0x18FE375C4);
}

uint64_t sub_18FE379D4()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x4B0]) = v0 - 8;
  LODWORD(STACK[0x4A8]) = LODWORD(STACK[0x394]) ^ 0xCE49165E;
  return (*(uint64_t (**)(void))(STACK[0x4C8]
                              + 8 * ((61 * ((unint64_t)(v1 + 1) < 0x10)) ^ (LODWORD(STACK[0x4B0]) + 69889594))))();
}

uint64_t sub_18FE37E14@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45,int a46,int a47,int a48,int a49,int a50,int a51,int a52)
{
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  int v107;
  int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  uint64_t v113;
  int v114;
  int v115;

  v60 = (v52 + v57);
  v61 = LODWORD(STACK[0x478]) ^ LODWORD(STACK[0x474]);
  LODWORD(STACK[0x3E8]) = LODWORD(STACK[0x258]) ^ ~a44;
  v62 = (v56 + 540261563) & 0xDFCC433F;
  LODWORD(STACK[0x4B0]) = v62;
  LODWORD(v60) = v53 + ((v60 + WORD1(v60)) >> 8) + (v60 >> 16) - 2092591816 + v58;
  LODWORD(v60) = (v60 ^ 0x1FDB8DC3) + (v62 ^ (v60 >> 13) ^ 0xFFFF0139) + 1;
  LODWORD(v60) = (v60 ^ 0xDFCD7BDB) + 540181541 + ((2 * v60) & 0xBF9AF7B6);
  v63 = v60 + (v60 >> 5) - ((2 * (v60 + (v60 >> 5))) & 0x1422CA52) - 1978571479;
  v64 = ((2 * ((v63 ^ 0x8A116529) - 107998449)) & 0xF79FFFDA)
      + (((v63 ^ 0x8A116529) - 107998449) ^ 0x7BCFFFED)
      - 2077229037;
  v65 = v64 - (v64 >> 10) - ((v64 - (v64 >> 10)) >> 2);
  v66 = v65 - ((2 * v65) & 0x35FD8FCE) + 452904935;
  v67 = ((((v66 >> 14) ^ 0x3A7EE) + (v66 ^ 0xE9FBB11E)) ^ 0xF1D0FFFA)
      + 237961222
      + ((2 * (((v66 >> 14) ^ 0x3A7EE) + (v66 ^ 0xE9FBB11E))) & 0xE3A1FFF4);
  v68 = v67 - (v67 >> 2) - ((2 * (v67 - (v67 >> 2))) & 0x8F938BC0) + 1204405728;
  v69 = ((2 * ((v68 ^ 0x47C9C5E0) + 511487013)) & 0xFD67B7EA)
      + (((v68 ^ 0x47C9C5E0) + 511487013) ^ 0xFEB3DBF5)
      + 21767179;
  v70 = v69 + (v69 >> 15) + ((v69 + (v69 >> 15)) >> 3);
  v71 = v70 - ((2 * v70) & 0x3A84B590) + 490887880;
  v72 = ((((v71 ^ v63) >> 1) & a2 ^ 0x3A00630)
       - 2 * ((((v71 ^ v63) >> 1) & a2 ^ 0x3A00630) & 0x1540420F ^ ((v71 ^ v63) >> 1) & 7)
       + 490887880) ^ v71;
  v73 = v63 ^ v54 ^ (v72 - ((2 * v72) & 0x1422CA52) - 1978571479);
  LODWORD(v60) = (v71 ^ 0x44C7F4E7) + ((v71 >> 10) ^ 0xFFEECE02) + 1;
  LODWORD(v60) = (v60 ^ 0x2F7EDAE9) - 796842729 + ((2 * v60) & 0x5EFDB5D2);
  v74 = v60 + (v60 >> 7) - ((2 * (v60 + (v60 >> 7))) & 0x5D17D99E) - 1366561585;
  v75 = ((2 * ((v74 ^ 0xAE8BECCF) - 787086048)) & 0xDB76FCDC)
      + (((v74 ^ 0xAE8BECCF) - 787086048) ^ 0xEDBB7E6E)
      + 306479506;
  v76 = v75 - (v75 >> 9) + ((v75 - (v75 >> 9)) >> 5);
  v77 = v76 - ((2 * v76) & 0xCA3293C4) - 451327518;
  v78 = ((2 * ((v77 ^ 0xE51949E2) - 1168002143)) & 0x67AB3F8E)
      + (((v77 ^ 0xE51949E2) - 1168002143) ^ 0xB3D59FC7)
      + 1277845561;
  v79 = v78 - (v78 >> 14) + ((v78 - (v78 >> 14)) >> 4);
  v80 = v73 ^ 0xC97F78D4;
  v81 = v73 ^ v59;
  v82 = v79 - 1337661611 + (~(2 * v79) | 0x9F763155) + 1;
  v83 = a2 & (v82 >> 1) ^ v82;
  v84 = ((2 * ((v82 ^ 0xB044E755) - 879085134)) & 0xFFFCF9BE)
      + (((v82 ^ 0xB044E755) - 879085134) ^ 0x7FFE7CDF)
      - 2147384543;
  v85 = v84 + (v84 >> 10) - ((v84 + (v84 >> 10)) >> 5);
  v86 = (v81 + (v80 ^ v83) + 1) ^ ((v83 ^ 0x5F9B7A80) + 1);
  v87 = v83 ^ 0x36C5F5CA ^ (v86 - ((2 * v86) & 0x2D42E16A) - 1767804747);
  v88 = v85 - ((2 * v85) & 0xF386504E) - 104650713;
  v89 = ((2 * ((v88 ^ 0xF9C32827) + 1300749569)) & 0xBFAAFFFC)
      + (((v88 ^ 0xF9C32827) + 1300749569) ^ 0x5FD57FFE)
      - 1607827454;
  v90 = v89 - (v89 >> 9) - ((v89 - (v89 >> 9)) >> 4);
  v91 = v90 - ((2 * v90) & 0x69C4BE9E);
  v92 = LODWORD(STACK[0x288]) ^ LODWORD(STACK[0x488]) ^ LODWORD(STACK[0x280]);
  v93 = a45 ^ a2 & (LODWORD(STACK[0x280]) >> 1) ^ a2 & (v92 >> 1) ^ 0xAFCDB417 ^ (v87 + v81);
  v94 = LODWORD(STACK[0x434]) ^ 0x74903940 ^ (v93 - ((2 * v93) & 0x7DE9F4FC) + 1056242302);
  v95 = (v94 - 1362576195 - ((2 * v94) & 0x5D91797A)) ^ LODWORD(STACK[0x398]);
  v96 = (v95 - 1603828836 - ((2 * v95) & 0x40CF0738)) ^ a46;
  v97 = v92 ^ 0xC7B36F25 ^ (v96 - ((2 * v96) & 0x8CA1BECE) - 967778457);
  v98 = LODWORD(STACK[0x280]) ^ 0x1264E3EE ^ (v97 - ((2 * v97) & 0x8EDEDC04) + 1198484994);
  LODWORD(STACK[0x498]) = v98 - ((2 * v98) & 0x6B39CC2C) + 899474966;
  v99 = STACK[0x29C];
  v100 = LODWORD(STACK[0x48C]) ^ LODWORD(STACK[0x47C]) ^ LODWORD(STACK[0x29C]);
  v101 = v61 ^ LODWORD(STACK[0x394]) ^ 0xFE2F8723;
  v102 = ((a2 & (LODWORD(STACK[0x47C]) >> 1) ^ 0x3340420D)
        + 1992066203
        - ((2 * (a2 & (LODWORD(STACK[0x47C]) >> 1) ^ 0x3340420D)) & 0x6D400836)) ^ LODWORD(STACK[0x47C]) ^ v100 ^ a47 ^ (((v100 >> 1) & a2 ^ 0x22202628) - 2 * (((v100 >> 1) & a2 ^ 0x22202628) & 0x14C0043C ^ (v100 >> 1) & 0x14) - 590277336) ^ ((((v74 ^ 0x3EB4DF4F) + (v74 & 0x903F3380 ^ 0xEFCBECFF) + 1) ^ v66 & 0x6FC0CC7E) >> 1) ^ ((v88 & 0x6FC0CC7F ^ 0x69C00827) >> (v76 & 1) >> !(v76 & 1));
  v103 = ((v102 ^ 0x24BC8045) - 2 * ((v102 ^ 0x24BC8045) & 0x79C3282F ^ v102 & 8) - 104650713) ^ v88;
  LODWORD(v60) = (v103 - ((2 * v103) & 0x5D17D99E) - 1366561585) ^ v74;
  LODWORD(v60) = (v60 - 720202512 - ((2 * v60) & 0xAA2529E0)) ^ a1;
  LODWORD(v60) = (v60 - ((2 * v60) & 0x35FD8FCE) + 452904935) ^ v66;
  LODWORD(v60) = (v60 - 305256640 - ((2 * v60) & 0xDB9C4E80)) ^ LODWORD(STACK[0x260]);
  LODWORD(v60) = (v60 - 579842559 - ((2 * v60) & 0xBAE09C02)) ^ LODWORD(STACK[0x3D8]);
  LODWORD(v60) = (v60 + 1698128202 - ((2 * v60) & 0xCA6EC294)) ^ a48;
  LODWORD(v60) = (v60 - ((2 * v60) & 0x618B9DB0) + 818269912) ^ LODWORD(STACK[0x278]);
  LODWORD(v60) = a52 ^ 0xDEA3E60 ^ (v60 - ((2 * v60) & 0x2B6F56AA) - 1783125163);
  LODWORD(STACK[0x490]) = v60 - 1829666126 - ((2 * v60) & 0x25E30564);
  v104 = (v91 + 887250767) ^ ((v77 ^ v68 ^ 0xA2D08C02)
                            - 2 * ((v77 ^ v68 ^ 0xA2D08C02) & 0x34E25F5F ^ (v77 ^ v68) & 0x10)
                            + 887250767);
  v105 = (v104 - ((2 * v104) & 0x51BB9C7C) - 1461858754) ^ v101;
  v106 = (v105 - ((2 * v105) & 0x2A3B40A6) - 719478701) ^ LODWORD(STACK[0x4A8]);
  v107 = ((a2 & (v106 >> 1)) - (v106 & 0x2A004026) - 719478701) ^ LODWORD(STACK[0x4A8]);
  LODWORD(v60) = (v107 - ((2 * v107) & 0x69C4BE9E) + 887250767) ^ (v91 + 887250767);
  LODWORD(v60) = (v60 - ((2 * v60) & 0xCA3293C4) - 451327518) ^ v77;
  LODWORD(v60) = (v60 - ((2 * v60) & 0x8F938BC0) + 1204405728) ^ v68;
  LODWORD(v60) = (v60 - 1502462921 - ((2 * v60) & 0x4CE4786E)) ^ v55;
  LODWORD(v60) = (v60 - ((2 * v60) & 0x51BB9C7C) - 1461858754) ^ v101;
  LODWORD(v60) = (v60 - 1507231780 - ((2 * v60) & 0x4C52EFB8)) ^ LODWORD(STACK[0x2C8]);
  LODWORD(STACK[0x4A0]) = v60 - 1207902658 - ((2 * v60) & 0x7001BC7C);
  v108 = LODWORD(STACK[0x3A0]) ^ 0xD2;
  v109 = STACK[0x4B0];
  LODWORD(STACK[0x3D8]) = (LODWORD(STACK[0x4B0]) + 1984069411) & 0x89BD80F7;
  v110 = *((_DWORD *)*(&off_1E2AB8CD0 + v109 - 19) + 235) ^ 0x9B67EC4D;
  v111 = (((v110 ^ ((v110 & STACK[0x3EC]) >> 1)) & STACK[0x3F8]) >> STACK[0x3F0]) | (((v110 ^ ((v110 & STACK[0x3EC]) >> 1)) & STACK[0x3E8]) << LODWORD(STACK[0x404]));
  v112 = a51 ^ 0x1615ABCB ^ (v111 - ((2 * v111) & 0xBE91867A) - 548879555);
  v113 = 4
       * ((LODWORD(STACK[0x3D8]) + 9) ^ LODWORD(STACK[0x434]) ^ (((v108 & 0x6E802500u) >> STACK[0x3F0])
                                                                                + (1853891840 << LODWORD(STACK[0x41C]))));
  *(_DWORD *)(STACK[0x408] + v113) = a52 ^ 0xEDE719DF ^ (v112 - 1783125163 - ((2 * v112) & 0x2B6F56AA));
  v114 = *((unsigned __int16 *)*(&off_1E2AB8CD0 + (v109 ^ 0x1B)) + 67) ^ 0xE3D5;
  v115 = (v114 - 1467302806 - ((2 * v114) & 0x178D4)) ^ LODWORD(STACK[0x494]);
  *(_DWORD *)(STACK[0x410] + v113) = v99 ^ 0x574DFF46 ^ (v115 + 818269912 - ((2 * v115) & 0x618B9DB0));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * (v109 | 5)) - 12))(1853882368);
}

#error "18FE40F5C: call analysis failed (funcsize=7682)"

void sub_18FE40F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int v74;
  int v75;
  int v77;

  LODWORD(STACK[0x360]) = (((a71 - 53) | 3) ^ 0xEFF5FDBE) + a8;
  LODWORD(STACK[0x32C]) = a67 ^ 0xD52D1F2A;
  LODWORD(STACK[0x328]) = a70 ^ 0x27CEBC7A;
  LODWORD(STACK[0x320]) = a68 ^ 0x294A2058;
  LODWORD(STACK[0x324]) = a69 ^ 0xC4F07114;
  v74 = STACK[0x4B8];
  if ((STACK[0x4B8] & 1) != 0)
    v75 = a74;
  else
    v75 = STACK[0x35C];
  if ((v74 & 1) != 0)
    a72 = a73;
  if ((v74 & 2) != 0)
    v77 = a72;
  else
    v77 = v75;
  LODWORD(STACK[0x35C]) = v77;
  JUMPOUT(0x18FE3C538);
}

char *sub_18FE41024(char *result, char *a2, unint64_t a3)
{
  unint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  BOOL v11;
  char v12;
  unint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
      return (char *)((uint64_t (*)(void))((char *)&loc_18FE410F8 + 4 * byte_190442350[a3 & 7]))();
  }
  else
  {
    v3 = -(int)result & 7;
    switch((int)v3)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        v4 = *result++;
        *a2++ = v4;
LABEL_6:
        v5 = *result++;
        *a2++ = v5;
LABEL_7:
        v6 = *result++;
        *a2++ = v6;
LABEL_8:
        v7 = *result++;
        *a2++ = v7;
LABEL_9:
        v8 = *result++;
        *a2++ = v8;
LABEL_10:
        v9 = *result++;
        *a2++ = v9;
LABEL_11:
        v10 = *result++;
        *a2++ = v10;
        break;
      default:
        break;
    }
    v11 = a3 >= v3;
    v12 = a3 - v3;
    if (!v11)
      v12 = 0;
    v13 = v12 & 7;
    switch(v13)
    {
      case 0uLL:
        return result;
      case 1uLL:
        goto LABEL_24;
      case 2uLL:
        goto LABEL_23;
      case 3uLL:
        goto LABEL_22;
      case 4uLL:
        goto LABEL_21;
      case 5uLL:
        goto LABEL_20;
      case 6uLL:
        goto LABEL_19;
      case 7uLL:
        v14 = *result++;
        *a2++ = v14;
LABEL_19:
        v15 = *result++;
        *a2++ = v15;
LABEL_20:
        v16 = *result++;
        *a2++ = v16;
LABEL_21:
        v17 = *result++;
        *a2++ = v17;
LABEL_22:
        v18 = *result++;
        *a2++ = v18;
LABEL_23:
        v19 = *result++;
        *a2++ = v19;
LABEL_24:
        *a2 = *result;
        break;
      default:
        result = (char *)((uint64_t (*)(void))((char *)&loc_18FE41144 + 4 * byte_19044235F[(v13 >> 3) & 7]))();
        break;
    }
  }
  return result;
}

uint64_t SSEIsFeatureSupported(int a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t DeviceFeatures;
  uint64_t v10;
  unsigned int v11;

  v11 = 0;
  v10 = 0;
  init();
  if (_hasSSE)
  {
    v2 = SSEGetVersion(&v11);
    if ((_DWORD)v2)
    {
      v3 = v2;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEIsFeatureSupported_cold_4();
    }
    else
    {
      v3 = 0;
      switch(a1)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 8:
        case 9:
        case 10:
        case 18:
        case 19:
        case 20:
        case 21:
        case 22:
        case 23:
        case 24:
          return v3;
        case 7:
        case 11:
        case 15:
        case 26:
        case 27:
        case 28:
          v4 = HIWORD(v11);
          goto LABEL_8;
        case 12:
        case 25:
          v5 = v11 > 1;
          goto LABEL_26;
        case 13:
        case 14:
          v5 = v11 > 2;
          goto LABEL_26;
        case 16:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
          v4 = v11 >> 18;
          goto LABEL_8;
        case 17:
        case 40:
          v6 = v11;
          v7 = 393215;
          goto LABEL_25;
        case 29:
        case 30:
        case 31:
          v4 = v11 >> 17;
          goto LABEL_8;
        case 32:
        case 45:
        case 46:
        case 47:
        case 48:
          v4 = v11 >> 19;
LABEL_8:
          if (v4)
            return 0;
          else
            return 4294967279;
        case 33:
          v6 = v11;
          v7 = 655359;
          goto LABEL_25;
        case 34:
          DeviceFeatures = getDeviceFeatures(&v10);
          if ((_DWORD)DeviceFeatures)
          {
            v3 = DeviceFeatures;
            if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
              SSEIsFeatureSupported_cold_3();
          }
          else if ((v10 & 1) != 0)
          {
            return 0;
          }
          else
          {
            return 4294967279;
          }
          return v3;
        case 41:
        case 42:
          v5 = HIWORD(v11) > 4u;
          goto LABEL_26;
        case 43:
        case 44:
          v6 = v11;
          v7 = 458751;
          goto LABEL_25;
        case 49:
          v6 = v11;
          v7 = 589823;
LABEL_25:
          v5 = v6 > v7;
LABEL_26:
          if (v5)
            v3 = 0;
          else
            v3 = 4294967279;
          break;
        default:
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSEIsFeatureSupported_cold_2();
          return 4294967279;
      }
    }
  }
  else
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEIsFeatureSupported_cold_1();
    return 4294967279;
  }
  return v3;
}

uint64_t SSEGetVersion(_DWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  size_t outputStructCnt;
  unsigned int outputStruct;
  uint64_t inputStruct;

  if (SSEGetVersion_protocolVersion)
  {
    v2 = 0;
    goto LABEL_10;
  }
  inputStruct = 0x153534563;
  outputStruct = 0;
  v3 = init();
  if ((_DWORD)v3)
  {
    v2 = v3;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetVersion_cold_4();
  }
  else
  {
    outputStructCnt = 4;
    v4 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 8uLL, &outputStruct, &outputStructCnt);
    if (!(_DWORD)v4)
    {
      if (outputStructCnt == 4)
      {
        v5 = outputStruct;
        if (outputStruct)
        {
          v2 = 0;
          if (outputStruct >= 0xA0000)
            v5 = 655360;
          SSEGetVersion_protocolVersion = v5;
          goto LABEL_10;
        }
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          SSEGetVersion_cold_1();
      }
      else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      {
        SSEGetVersion_cold_2();
      }
      v2 = 4294967290;
      goto LABEL_10;
    }
    v2 = v4;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetVersion_cold_3();
  }
LABEL_10:
  if (a1)
    *a1 = SSEGetVersion_protocolVersion;
  return v2;
}

uint64_t getDeviceFeatures(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  size_t v7;
  uint64_t outputStruct;
  uint64_t inputStruct;
  unsigned int v10;

  if (a1)
  {
    if ((getDeviceFeatures_featuresValid & 1) != 0)
    {
LABEL_10:
      v5 = 0;
      *a1 = getDeviceFeatures_deviceFeatures;
      return v5;
    }
    v10 = 0;
    v2 = SSEGetVersion(&v10);
    if ((_DWORD)v2)
    {
      v5 = v2;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        getDeviceFeatures_cold_5();
    }
    else
    {
      if (v10 < 0x30000)
      {
LABEL_9:
        getDeviceFeatures_featuresValid = 1;
        goto LABEL_10;
      }
      outputStruct = 0;
      inputStruct = 0x1E53534563;
      v3 = init();
      if ((_DWORD)v3)
      {
        v5 = v3;
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          getDeviceFeatures_cold_4();
      }
      else
      {
        v7 = 8;
        v4 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 8uLL, &outputStruct, &v7);
        if ((_DWORD)v4)
        {
          v5 = v4;
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            getDeviceFeatures_cold_3();
        }
        else
        {
          if (v7 == 8)
          {
            getDeviceFeatures_deviceFeatures = outputStruct;
            goto LABEL_9;
          }
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            getDeviceFeatures_cold_2();
          return 4294967290;
        }
      }
    }
  }
  else
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      getDeviceFeatures_cold_1();
    return 4294967292;
  }
  return v5;
}

uint64_t init()
{
  uint64_t v0;
  mach_port_t v1;
  const __CFDictionary *v2;
  io_service_t MatchingService;
  io_object_t v4;
  uint64_t v5;
  IONotificationPort *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  size_t v17;
  _QWORD v18[2];
  int v19[2];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  if ((_initialized & 1) == 0)
  {
    if (isRestoreMode_onceToken != -1)
      dispatch_once(&isRestoreMode_onceToken, &__block_literal_global_160);
    if ((isRestoreMode_restoreMode & 1) != 0 || _skipSEAvailabilityCheck)
    {
      _hasSSE = 1;
    }
    else
    {
      if (getMGAnswers_onceToken != -1)
        dispatch_once(&getMGAnswers_onceToken, &__block_literal_global_164);
      _hasSSE = getMGAnswers_cachedHasSE;
      if (!getMGAnswers_cachedHasSE)
      {
        _initialized = 1;
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          init_cold_5();
        goto LABEL_13;
      }
    }
    v1 = *MEMORY[0x1E0CBBAB8];
    v2 = IOServiceMatching("AppleSSE");
    MatchingService = IOServiceGetMatchingService(v1, v2);
    if (!MatchingService)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        init_cold_1();
      v0 = 4294967276;
      goto LABEL_14;
    }
    v4 = MatchingService;
    v5 = IOServiceOpen(MatchingService, *MEMORY[0x1E0C83DA0], 0, (io_connect_t *)&_connect);
    if ((_DWORD)v5)
    {
      v0 = v5;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        init_cold_4();
      IOObjectRelease(v4);
      goto LABEL_14;
    }
    v6 = IONotificationPortCreate(v1);
    _notifyport = (uint64_t)v6;
    if (v6)
      goto LABEL_24;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      init_cold_3();
    v6 = (IONotificationPort *)_notifyport;
    if (_notifyport)
    {
LABEL_24:
      v7 = dispatch_get_global_queue(21, 0);
      IONotificationPortSetDispatchQueue(v6, v7);

      if (IOServiceAddInterestNotification((IONotificationPortRef)_notifyport, v4, "IOGeneralInterest", (IOServiceInterestCallback)serviceNotificationHandler, 0, (io_object_t *)&_notifyobj)&& os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      {
        init_cold_2();
      }
    }
    if (getMGAnswers_onceToken != -1)
      dispatch_once(&getMGAnswers_onceToken, &__block_literal_global_164);
    if (getMGAnswers_cachedIsInternal)
    {
      if (isRestoreMode_onceToken != -1)
        dispatch_once(&isRestoreMode_onceToken, &__block_literal_global_160);
      if ((isRestoreMode_restoreMode & 1) == 0)
      {
        _logFile = (uint64_t)fopen("/var/mobile/Library/Logs/AppleSSE.log", "a");
        if (_logFile)
        {
          if (MEMORY[0x19400CDF0]() < 1)
            chmod("/var/mobile/Library/Logs/AppleSSE.log", 0x1B6u);
          else
            fputs("\n", (FILE *)_logFile);
          v18[1] = 0;
          *(_QWORD *)v19 = 0x4100000001;
          v17 = 16;
          v18[0] = 0;
          sysctl(v19, 2u, v18, &v17, 0, 0);
          logLine("AppleSSE Log Starts - System Version %s", v8, v9, v10, v11, v12, v13, v14, (char)v18);
          logState(0, 0);
        }
      }
    }
    _initialized = 1;
    v15 = dispatch_get_global_queue(21, 0);
    dispatch_async(v15, &__block_literal_global_0);

    IOObjectRelease(v4);
    return 0;
  }
  if (_hasSSE)
    return 0;
LABEL_13:
  v0 = 4294967279;
LABEL_14:
  if (_notifyobj)
  {
    IOObjectRelease(_notifyobj);
    _notifyobj = 0;
  }
  if (_notifyport)
  {
    IONotificationPortDestroy((IONotificationPortRef)_notifyport);
    _notifyport = 0;
  }
  if (_connect)
  {
    IOServiceClose(_connect);
    _connect = 0;
  }
  return v0;
}

uint64_t SSEGetHostChallenge(CFDataRef *a1)
{
  uint64_t v2;
  uint64_t v3;
  CFDataRef v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v10;
  uint64_t inputStruct;
  _QWORD outputStruct[2];

  outputStruct[1] = *MEMORY[0x1E0C80C00];
  inputStruct = 0;
  outputStruct[0] = 0;
  v10 = 0;
  if (a1)
  {
    v2 = init();
    if ((_DWORD)v2)
    {
      v8 = v2;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetHostChallenge_cold_5();
    }
    else
    {
      LODWORD(inputStruct) = 1397966179;
      WORD2(inputStruct) = 2;
      v10 = 8;
      v3 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 8uLL, outputStruct, &v10);
      if ((_DWORD)v3)
      {
        v8 = v3;
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          SSEGetHostChallenge_cold_4();
      }
      else if (v10 == 8)
      {
        v4 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], (const UInt8 *)outputStruct, 8);
        *a1 = v4;
        if (v4)
        {
          v8 = 0;
        }
        else
        {
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSEGetHostChallenge_cold_2();
          v8 = 4294967291;
        }
      }
      else
      {
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          SSEGetHostChallenge_cold_3();
        v8 = 4294967290;
      }
    }
  }
  else
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetHostChallenge_cold_1();
    v8 = 4294967292;
  }
  logCmdCall((uint64_t)"SSEGetHostChallenge", v8, 0, 0, 0, v5, v6, v7);
  return v8;
}

uint64_t logCmdCall(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((_DWORD)a2 || (_DWORD)a3)
  {
    if (_logFile)
    {
      logLine("%s() -> %d", a2, a3, a4, a5, a6, a7, a8, result);
      return logState(a4, a5);
    }
  }
  return result;
}

uint64_t SSEAuthorize(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, _DWORD *a8, CFDataRef *a9)
{
  return authorize(0, a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, 0, 0, 0);
}

uint64_t authorize(int a1, int a2, const __CFData *a3, int a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, char a9, _DWORD *a10, CFDataRef *a11, CFDataRef *a12, CFDataRef *a13, CFTypeRef *a14)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  UInt8 *v25;
  uint64_t v26;
  const __CFAllocator *v27;
  CFDataRef v28;
  CFDataRef v29;
  CFIndex v30;
  CFDataRef v31;
  CFDataRef v32;
  const UInt8 *v33;
  CFDataRef v34;
  CFDataRef v35;
  uint64_t CertificatesFromBuffer;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  UInt8 *v41;
  int v42;
  CFTypeRef cf;
  size_t outputStructCnt;
  int v45;
  __int128 inputStruct;
  _OWORD v47[8];
  uint64_t v48;
  CFRange v49;
  CFRange v50;
  CFRange v51;
  CFRange v52;
  CFRange v53;

  v48 = *MEMORY[0x1E0C80C00];
  v45 = a4;
  memset(v47, 0, 126);
  inputStruct = 0u;
  cf = 0;
  outputStructCnt = 0;
  if (!a3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_1();
    goto LABEL_76;
  }
  if (!a5)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_2();
    goto LABEL_76;
  }
  if (!a6)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_3();
    goto LABEL_76;
  }
  if (!a7)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_4();
    goto LABEL_76;
  }
  if (!a8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_5();
    goto LABEL_76;
  }
  if (!a10)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_6();
    goto LABEL_76;
  }
  if (!a11)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_7();
    goto LABEL_76;
  }
  if (a1)
  {
    if (a12)
    {
      if (a13)
        goto LABEL_11;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        authorize_cold_9();
    }
    else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    {
      authorize_cold_8();
    }
LABEL_76:
    v25 = 0;
LABEL_77:
    CertificatesFromBuffer = 4294967292;
    goto LABEL_78;
  }
LABEL_11:
  v41 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x722A5B9EuLL);
  if (!v41)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_10();
    v25 = 0;
    goto LABEL_92;
  }
  v22 = init();
  if ((_DWORD)v22)
  {
    CertificatesFromBuffer = v22;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_24();
    goto LABEL_61;
  }
  if (a9 == 2 && a1)
  {
    v23 = SSEIsFeatureSupported(7);
    if ((_DWORD)v23)
    {
      CertificatesFromBuffer = v23;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        authorize_cold_23();
      goto LABEL_61;
    }
    v24 = baaPrepare();
    if ((_DWORD)v24)
    {
      CertificatesFromBuffer = v24;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        authorize_cold_22();
      goto LABEL_61;
    }
  }
  LODWORD(inputStruct) = 1397966179;
  WORD2(inputStruct) = 3;
  DWORD2(inputStruct) = a2;
  if ((unint64_t)CFDataGetLength(a3) >= 0x41)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_11();
    goto LABEL_60;
  }
  v49.length = CFDataGetLength(a3);
  v49.location = 0;
  CFDataGetBytes(a3, v49, (UInt8 *)v47);
  HIDWORD(inputStruct) = CFDataGetLength(a3);
  LODWORD(v47[4]) = a4;
  if ((unint64_t)CFDataGetLength(a5) >= 0x19)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_12();
LABEL_60:
    CertificatesFromBuffer = 4294967292;
LABEL_61:
    v25 = v41;
    goto LABEL_78;
  }
  v50.length = CFDataGetLength(a5);
  v50.location = 0;
  CFDataGetBytes(a5, v50, (UInt8 *)&v47[4] + 4);
  if (CFDataGetLength(a6) != 8)
  {
    v25 = v41;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_21();
    goto LABEL_77;
  }
  v51.length = CFDataGetLength(a6);
  v51.location = 0;
  CFDataGetBytes(a6, v51, (UInt8 *)&v47[5] + 12);
  v25 = v41;
  if (CFDataGetLength(a7) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_20();
    goto LABEL_77;
  }
  v52.length = CFDataGetLength(a7);
  v52.location = 0;
  CFDataGetBytes(a7, v52, (UInt8 *)&v47[6] + 4);
  if (CFDataGetLength(a8) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_19();
    goto LABEL_77;
  }
  v53.length = CFDataGetLength(a8);
  v53.location = 0;
  CFDataGetBytes(a8, v53, (UInt8 *)&v47[6] + 12);
  *(_QWORD *)((char *)&v47[7] + 4) = 0;
  if (a1)
  {
    BYTE12(v47[7]) = 1;
    BYTE13(v47[7]) = a9;
  }
  outputStructCnt = 0x4000;
  v26 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 0x8EuLL, v41, &outputStructCnt);
  if ((_DWORD)v26)
  {
    CertificatesFromBuffer = v26;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_18();
    goto LABEL_78;
  }
  v27 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v28 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], v41 + 4, 8);
  if (!v28)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_13();
    goto LABEL_92;
  }
  v29 = v28;
  if (!a1)
  {
    CertificatesFromBuffer = 0;
    *a10 = *(_DWORD *)v41;
    *a11 = v28;
    goto LABEL_35;
  }
  v30 = *((unsigned int *)v41 + 3);
  if (outputStructCnt < v30 + (unint64_t)*((unsigned int *)v41 + 4) + 20)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_14();
    CFRelease(v29);
    CertificatesFromBuffer = 4294967290;
    goto LABEL_78;
  }
  v31 = CFDataCreate(v27, v41 + 20, v30);
  if (!v31)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_15();
    CFRelease(v29);
LABEL_92:
    CertificatesFromBuffer = 4294967291;
    goto LABEL_78;
  }
  v32 = v31;
  v33 = &v41[*((unsigned int *)v41 + 3) + 20];
  v34 = CFDataCreate(v27, v33, *((unsigned int *)v41 + 4));
  v35 = v34;
  if (v34)
  {
    if (!a14)
    {
      CertificatesFromBuffer = 0;
      *a10 = *(_DWORD *)v41;
      *a11 = v29;
      *a12 = v32;
      *a13 = v34;
      goto LABEL_35;
    }
    v42 = 0;
    CertificatesFromBuffer = getCertificatesFromBuffer((int *)&v33[*((unsigned int *)v41 + 4)], (unint64_t)&v41[outputStructCnt], &cf, &v42);
    if (!(_DWORD)CertificatesFromBuffer)
    {
      *a10 = *(_DWORD *)v41;
      *a11 = v29;
      *a12 = v32;
      *a13 = v35;
      *a14 = cf;
LABEL_35:
      free(v25);
      goto LABEL_36;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_17();
  }
  else
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorize_cold_16();
    CertificatesFromBuffer = 4294967291;
  }
  CFRelease(v29);
  CFRelease(v32);
  if (v35)
    CFRelease(v35);
LABEL_78:
  if (cf)
    CFRelease(cf);
  if (v25)
    goto LABEL_35;
LABEL_36:
  logCmdCall((uint64_t)"authorize", CertificatesFromBuffer, 0, (uint64_t)&v45, (uint64_t)&v47[4] + 4, v37, v38, v39);
  return CertificatesFromBuffer;
}

uint64_t SSEAuthorize(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, char a8, _DWORD *a9, CFDataRef *a10, CFDataRef *a11, CFDataRef *a12, CFTypeRef *a13)
{
  return authorize(1, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t SSEAuthorizeWithPIN(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, _DWORD *a8, CFDataRef *a9, CFDataRef *a10)
{
  return authorizeWithPIN(0, a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, a10, 0, 0, 0);
}

uint64_t authorizeWithPIN(int a1, int a2, const __CFData *a3, int a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, char a9, _DWORD *a10, CFDataRef *a11, CFDataRef *a12, CFDataRef *a13, CFDataRef *a14, CFTypeRef *a15)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  UInt8 *v26;
  uint64_t v27;
  const __CFAllocator *v28;
  CFDataRef v29;
  CFDataRef v30;
  CFDataRef v31;
  CFDataRef v32;
  CFIndex v33;
  CFDataRef v34;
  CFDataRef v35;
  const UInt8 *v36;
  CFDataRef v37;
  CFDataRef v38;
  uint64_t CertificatesFromBuffer;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  UInt8 *v44;
  int v45;
  CFTypeRef cf;
  size_t outputStructCnt;
  int v48;
  __int128 inputStruct;
  _OWORD v50[8];
  uint64_t v51;
  CFRange v52;
  CFRange v53;
  CFRange v54;
  CFRange v55;
  CFRange v56;

  v51 = *MEMORY[0x1E0C80C00];
  v48 = a4;
  memset(v50, 0, 126);
  inputStruct = 0u;
  cf = 0;
  outputStructCnt = 0;
  if (!a3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_1();
    goto LABEL_83;
  }
  if (!a5)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_2();
    goto LABEL_83;
  }
  if (!a6)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_3();
    goto LABEL_83;
  }
  if (!a7)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_4();
    goto LABEL_83;
  }
  if (!a8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_5();
    goto LABEL_83;
  }
  if (!a10)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_6();
    goto LABEL_83;
  }
  if (!a11)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_7();
    goto LABEL_83;
  }
  if (!a12)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_8();
    goto LABEL_83;
  }
  if (a1)
  {
    if (a13)
    {
      if (a14)
        goto LABEL_12;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        authorizeWithPIN_cold_10();
    }
    else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    {
      authorizeWithPIN_cold_9();
    }
LABEL_83:
    v26 = 0;
LABEL_84:
    CertificatesFromBuffer = 4294967292;
    goto LABEL_85;
  }
LABEL_12:
  v44 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x468DD742uLL);
  if (!v44)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_11();
    v26 = 0;
    goto LABEL_78;
  }
  v23 = init();
  if ((_DWORD)v23)
  {
    CertificatesFromBuffer = v23;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_26();
    goto LABEL_93;
  }
  if (a9 == 2 && a1)
  {
    v24 = SSEIsFeatureSupported(11);
    if ((_DWORD)v24)
    {
      CertificatesFromBuffer = v24;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        authorizeWithPIN_cold_25();
      goto LABEL_93;
    }
    v25 = baaPrepare();
    if ((_DWORD)v25)
    {
      CertificatesFromBuffer = v25;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        authorizeWithPIN_cold_24();
      goto LABEL_93;
    }
  }
  strcpy((char *)&inputStruct, "cESS\b");
  DWORD2(inputStruct) = a2;
  if ((unint64_t)CFDataGetLength(a3) >= 0x41)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_12();
    CertificatesFromBuffer = 4294967292;
LABEL_93:
    v26 = v44;
    goto LABEL_85;
  }
  v52.length = CFDataGetLength(a3);
  v52.location = 0;
  CFDataGetBytes(a3, v52, (UInt8 *)v50);
  HIDWORD(inputStruct) = CFDataGetLength(a3);
  LODWORD(v50[4]) = a4;
  if ((unint64_t)CFDataGetLength(a5) >= 0x19)
  {
    v26 = v44;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_13();
    goto LABEL_84;
  }
  v53.length = CFDataGetLength(a5);
  v53.location = 0;
  CFDataGetBytes(a5, v53, (UInt8 *)&v50[4] + 4);
  v26 = v44;
  if (CFDataGetLength(a6) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_23();
    goto LABEL_84;
  }
  v54.length = CFDataGetLength(a6);
  v54.location = 0;
  CFDataGetBytes(a6, v54, (UInt8 *)&v50[5] + 12);
  if (CFDataGetLength(a7) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_22();
    goto LABEL_84;
  }
  v55.length = CFDataGetLength(a7);
  v55.location = 0;
  CFDataGetBytes(a7, v55, (UInt8 *)&v50[6] + 4);
  if (CFDataGetLength(a8) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      authorizeWithPIN_cold_21();
    goto LABEL_84;
  }
  v56.length = CFDataGetLength(a8);
  v56.location = 0;
  CFDataGetBytes(a8, v56, (UInt8 *)&v50[6] + 12);
  *(_QWORD *)((char *)&v50[7] + 4) = 0;
  if (a1)
  {
    BYTE12(v50[7]) = 1;
    BYTE13(v50[7]) = a9;
  }
  outputStructCnt = 0x4000;
  v27 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 0x8EuLL, v44, &outputStructCnt);
  if (!(_DWORD)v27)
  {
    v28 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
    v29 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], v44 + 4, 16);
    if (v29)
    {
      v30 = v29;
      v31 = CFDataCreate(v28, v44 + 20, 8);
      if (v31)
      {
        v32 = v31;
        if (!a1)
        {
          CertificatesFromBuffer = 0;
          *a10 = *(_DWORD *)v44;
          *a11 = v30;
          *a12 = v31;
          goto LABEL_37;
        }
        v33 = *((unsigned int *)v44 + 7);
        if (outputStructCnt < v33 + (unint64_t)*((unsigned int *)v44 + 8) + 36)
        {
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            authorizeWithPIN_cold_16();
          v38 = 0;
          v35 = 0;
          CertificatesFromBuffer = 4294967290;
        }
        else
        {
          v34 = CFDataCreate(v28, v44 + 36, v33);
          if (v34)
          {
            v35 = v34;
            v36 = &v44[*((unsigned int *)v44 + 7) + 36];
            v37 = CFDataCreate(v28, v36, *((unsigned int *)v44 + 8));
            if (v37)
            {
              v38 = v37;
              if (!a15)
              {
                CertificatesFromBuffer = 0;
                *a10 = *(_DWORD *)v44;
                *a11 = v30;
                *a12 = v32;
                *a13 = v35;
                *a14 = v37;
                goto LABEL_37;
              }
              v45 = 0;
              CertificatesFromBuffer = getCertificatesFromBuffer((int *)&v36[*((unsigned int *)v44 + 8)], (unint64_t)&v44[outputStructCnt], &cf, &v45);
              if (!(_DWORD)CertificatesFromBuffer)
              {
                *a10 = *(_DWORD *)v44;
                *a11 = v30;
                *a12 = v32;
                *a13 = v35;
                *a14 = v38;
                *a15 = cf;
LABEL_37:
                free(v26);
                goto LABEL_38;
              }
              if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                authorizeWithPIN_cold_19();
              goto LABEL_106;
            }
            if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
              authorizeWithPIN_cold_18();
            v38 = 0;
          }
          else
          {
            if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
              authorizeWithPIN_cold_17();
            v38 = 0;
            v35 = 0;
          }
          CertificatesFromBuffer = 4294967291;
        }
LABEL_106:
        CFRelease(v30);
        CFRelease(v32);
        if (v35)
          CFRelease(v35);
        if (v38)
          CFRelease(v38);
        goto LABEL_85;
      }
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        authorizeWithPIN_cold_15();
      CFRelease(v30);
    }
    else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    {
      authorizeWithPIN_cold_14();
    }
LABEL_78:
    CertificatesFromBuffer = 4294967291;
    goto LABEL_85;
  }
  CertificatesFromBuffer = v27;
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    authorizeWithPIN_cold_20();
LABEL_85:
  if (cf)
    CFRelease(cf);
  if (v26)
    goto LABEL_37;
LABEL_38:
  logCmdCall((uint64_t)"authorizeWithPIN", CertificatesFromBuffer, 0, (uint64_t)&v48, (uint64_t)&v50[4] + 4, v40, v41, v42);
  return CertificatesFromBuffer;
}

uint64_t SSEAuthorizeWithPIN(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, char a8, _DWORD *a9, CFDataRef *a10, CFDataRef *a11, CFDataRef *a12, CFDataRef *a13, CFTypeRef *a14)
{
  return authorizeWithPIN(1, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t SSEAuthorizeAndSignECommerceBlob(const __CFData *a1, int a2, const __CFData *a3, char a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, const __CFData **a9)
{
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  size_t v20;
  UInt8 *v21;
  uint64_t v22;
  CFIndex v23;
  const __CFData *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  UInt8 *outputStruct;
  size_t outputStructCnt;
  int v32;
  CFRange v33;
  CFRange v34;
  CFRange v35;
  CFRange v36;
  CFRange v37;
  CFRange v38;

  v32 = a2;
  outputStructCnt = 0;
  if (!a1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_38;
  }
  if (!a3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_38;
  }
  if (!a5)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_38;
  }
  if (!a6)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_38;
  }
  if (!a7)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_38;
  }
  if (!a8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_38;
  }
  if (!a9)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
LABEL_38:
    v25 = 4294967292;
    goto LABEL_23;
  }
  v17 = malloc_type_calloc(0x4000uLL, 1uLL, 0x27E86296uLL);
  if (!v17)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_44;
  }
  v18 = v17;
  outputStruct = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x1855B243uLL);
  if (!outputStruct)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    free(v18);
LABEL_44:
    v25 = 4294967291;
    goto LABEL_23;
  }
  v19 = init();
  if ((_DWORD)v19)
  {
    v25 = v19;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_60;
  }
  *v18 = 1397966179;
  *((_WORD *)v18 + 2) = 15;
  if ((unint64_t)CFDataGetLength(a1) >= 0x41)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_59;
  }
  v33.length = CFDataGetLength(a1);
  v33.location = 0;
  CFDataGetBytes(a1, v33, (UInt8 *)v18 + 12);
  v18[2] = CFDataGetLength(a1);
  v18[19] = a2;
  if ((unint64_t)CFDataGetLength(a3) >= 0x19)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_59;
  }
  v34.length = CFDataGetLength(a3);
  v34.location = 0;
  CFDataGetBytes(a3, v34, (UInt8 *)v18 + 80);
  *((_BYTE *)v18 + 104) = a4;
  if (CFDataGetLength(a5) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_59;
  }
  v35.length = CFDataGetLength(a5);
  v35.location = 0;
  CFDataGetBytes(a5, v35, (UInt8 *)v18 + 105);
  if (CFDataGetLength(a6) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_59;
  }
  v36.length = CFDataGetLength(a6);
  v36.location = 0;
  CFDataGetBytes(a6, v36, (UInt8 *)v18 + 113);
  if (CFDataGetLength(a7) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_59;
  }
  v37.length = CFDataGetLength(a7);
  v37.location = 0;
  CFDataGetBytes(a7, v37, (UInt8 *)v18 + 121);
  if ((unint64_t)CFDataGetLength(a8) >> 2 >= 0xFDD)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
LABEL_59:
    v25 = 4294967292;
LABEL_60:
    v21 = outputStruct;
    goto LABEL_22;
  }
  *(_DWORD *)((char *)v18 + 137) = CFDataGetLength(a8);
  v38.length = CFDataGetLength(a8);
  v38.location = 0;
  CFDataGetBytes(a8, v38, (UInt8 *)v18 + 141);
  *(_QWORD *)((char *)v18 + 129) = 0;
  v20 = *(unsigned int *)((char *)v18 + 137) + 141;
  outputStructCnt = 0x4000;
  v21 = outputStruct;
  v22 = IOConnectCallStructMethod(_connect, 0, v18, v20, outputStruct, &outputStructCnt);
  if ((_DWORD)v22)
  {
    v25 = v22;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_22;
  }
  if (outputStructCnt <= 3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
  }
  else
  {
    v23 = *(unsigned int *)outputStruct;
    if (outputStructCnt == v23 + 4)
    {
      v24 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], outputStruct + 4, v23);
      if (v24)
      {
        v25 = 0;
        *a9 = v24;
      }
      else
      {
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          SSEAuthorizeAndSignECommerceBlob();
        v25 = 4294967291;
      }
      goto LABEL_22;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
  }
  v25 = 4294967290;
LABEL_22:
  free(v18);
  free(v21);
LABEL_23:
  logCmdCall((uint64_t)"SSEAuthorizeAndSignECommerceBlob", v25, 0, (uint64_t)&v32, 0, v26, v27, v28);
  return v25;
}

uint64_t SSEAuthorizeAndSignECommerceBlob(const __CFData *a1, int a2, const __CFData *a3, char a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, unsigned __int8 a9, const __CFData **a10, const __CFData **a11, const __CFData **a12, const __CFArray **a13)
{
  char *v20;
  char *v21;
  UInt8 *v22;
  UInt8 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  uint64_t v28;
  size_t v29;
  unint64_t v30;
  unsigned int *v31;
  const __CFAllocator *v32;
  CFDataRef v33;
  CFDataRef v34;
  unint64_t v35;
  CFIndex v36;
  char *v37;
  const __CFData *v38;
  CFIndex v39;
  const UInt8 *v40;
  const __CFData *v41;
  const __CFData *v42;
  int *v43;
  uint64_t CertificatesFromBuffer;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v50;
  CFTypeRef cf;
  size_t outputStructCnt;
  int v53;
  CFRange v54;
  CFRange v55;
  CFRange v56;
  CFRange v57;
  CFRange v58;
  CFRange v59;

  v53 = a2;
  cf = 0;
  outputStructCnt = 0;
  if (!a1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_55;
  }
  if (!a3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_55;
  }
  if (!a5)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_55;
  }
  if (!a6)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_55;
  }
  if (!a7)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_55;
  }
  if (!a8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_55;
  }
  if (!a10)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_55;
  }
  if (!a11)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_55;
  }
  if (!a12)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
LABEL_55:
    v21 = 0;
    v23 = 0;
    CertificatesFromBuffer = 4294967292;
    goto LABEL_106;
  }
  v20 = (char *)malloc_type_calloc(0x4000uLL, 1uLL, 0xA48A32DEuLL);
  if (!v20)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    v21 = 0;
    goto LABEL_61;
  }
  v21 = v20;
  v22 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xDC724F47uLL);
  if (!v22)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
LABEL_61:
    v23 = 0;
LABEL_88:
    CertificatesFromBuffer = 4294967291;
    goto LABEL_106;
  }
  v23 = v22;
  v24 = init();
  if ((_DWORD)v24)
  {
    CertificatesFromBuffer = v24;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_106;
  }
  if (a9 - 2 <= 2)
  {
    v25 = SSEIsFeatureSupported((a9 - 2) + 15);
    if ((_DWORD)v25)
    {
      CertificatesFromBuffer = v25;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEAuthorizeAndSignECommerceBlob();
      goto LABEL_106;
    }
    v26 = baaPrepare();
    if ((_DWORD)v26)
    {
      CertificatesFromBuffer = v26;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEAuthorizeAndSignECommerceBlob();
      goto LABEL_106;
    }
  }
  *(_DWORD *)v21 = 1397966179;
  *((_WORD *)v21 + 2) = 17;
  if ((unint64_t)CFDataGetLength(a1) >= 0x41)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_76;
  }
  v54.length = CFDataGetLength(a1);
  v54.location = 0;
  CFDataGetBytes(a1, v54, (UInt8 *)v21 + 12);
  *((_DWORD *)v21 + 2) = CFDataGetLength(a1);
  *((_DWORD *)v21 + 19) = a2;
  if ((unint64_t)CFDataGetLength(a3) >= 0x19)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_76;
  }
  v55.length = CFDataGetLength(a3);
  v55.location = 0;
  CFDataGetBytes(a3, v55, (UInt8 *)v21 + 80);
  v21[104] = a4;
  if (CFDataGetLength(a5) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_76;
  }
  v56.length = CFDataGetLength(a5);
  v56.location = 0;
  CFDataGetBytes(a5, v56, (UInt8 *)v21 + 105);
  if (CFDataGetLength(a6) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_76;
  }
  v57.length = CFDataGetLength(a6);
  v57.location = 0;
  CFDataGetBytes(a6, v57, (UInt8 *)v21 + 113);
  if (CFDataGetLength(a7) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_76;
  }
  v58.length = CFDataGetLength(a7);
  v58.location = 0;
  CFDataGetBytes(a7, v58, (UInt8 *)v21 + 121);
  if ((unint64_t)CFDataGetLength(a8) >= 0x3F7B)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
LABEL_76:
    CertificatesFromBuffer = 4294967292;
    goto LABEL_106;
  }
  *(_DWORD *)(v21 + 129) = CFDataGetLength(a8);
  v59.length = CFDataGetLength(a8);
  v59.location = 0;
  CFDataGetBytes(a8, v59, (UInt8 *)v21 + 134);
  v21[133] = a9;
  v27 = *(unsigned int *)(v21 + 129) + 134;
  outputStructCnt = 0x4000;
  v28 = IOConnectCallStructMethod(_connect, 0, v21, v27, v23, &outputStructCnt);
  if ((_DWORD)v28)
  {
    CertificatesFromBuffer = v28;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_106;
  }
  v29 = outputStructCnt;
  if (outputStructCnt <= 0xB)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_92;
  }
  if (outputStructCnt > 0x4000)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_92;
  }
  v31 = (unsigned int *)(v23 + 12);
  v30 = *(unsigned int *)v23;
  if (outputStructCnt - 12 < v30)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_92;
  }
  v32 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v33 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], v23 + 12, v30);
  if (!v33)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    goto LABEL_88;
  }
  v34 = v33;
  v35 = (unint64_t)&v23[v29];
  v36 = *((unsigned int *)v23 + 1);
  v37 = (char *)v31 + *(unsigned int *)v23;
  if ((uint64_t)(v35 - (_QWORD)v37) < v36)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    CFRelease(v34);
LABEL_92:
    CertificatesFromBuffer = 4294967290;
    goto LABEL_106;
  }
  v38 = CFDataCreate(v32, (const UInt8 *)v31 + *(unsigned int *)v23, v36);
  v39 = *((unsigned int *)v23 + 2);
  v40 = (const UInt8 *)&v37[*((unsigned int *)v23 + 1)];
  if ((uint64_t)(v35 - (_QWORD)v40) < v39)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
    v42 = 0;
    CertificatesFromBuffer = 4294967290;
  }
  else
  {
    v41 = CFDataCreate(v32, v40, v39);
    v42 = v41;
    if (!a13)
    {
      CertificatesFromBuffer = 0;
      *a10 = v34;
      *a11 = v38;
      *a12 = v41;
      goto LABEL_33;
    }
    v43 = (int *)&v40[*((unsigned int *)v23 + 2)];
    v50 = 0;
    CertificatesFromBuffer = getCertificatesFromBuffer(v43, v35, &cf, &v50);
    if (!(_DWORD)CertificatesFromBuffer)
    {
      *a10 = v34;
      *a11 = v38;
      *a12 = v42;
      *a13 = (const __CFArray *)cf;
LABEL_33:
      free(v21);
      goto LABEL_34;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignECommerceBlob();
  }
  CFRelease(v34);
  if (v38)
    CFRelease(v38);
  if (v42)
    CFRelease(v42);
LABEL_106:
  if (cf)
    CFRelease(cf);
  if (v21)
    goto LABEL_33;
LABEL_34:
  if (v23)
    free(v23);
  logCmdCall((uint64_t)"SSEAuthorizeAndSignECommerceBlob", CertificatesFromBuffer, 0, (uint64_t)&v53, 0, v45, v46, v47);
  return CertificatesFromBuffer;
}

uint64_t baaPrepare()
{
  if (baaInit_onceToken != -1)
    dispatch_once(&baaInit_onceToken, &__block_literal_global_197);
  if (_baaSupportClass)
    return objc_msgSend((id)_baaSupportClass, "prepare");
  else
    return 4294967290;
}

uint64_t getCertificatesFromBuffer(int *a1, unint64_t a2, _QWORD *a3, _DWORD *a4)
{
  id v8;
  int v9;
  int v10;
  unsigned int *v11;
  _DWORD *v12;
  uint64_t v13;
  unsigned int v14;
  id v15;
  uint64_t v16;

  v8 = (id)objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  if (!a1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      getCertificatesFromBuffer_cold_1();
    goto LABEL_32;
  }
  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      getCertificatesFromBuffer_cold_2();
    goto LABEL_32;
  }
  if ((unint64_t)a1 > a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      getCertificatesFromBuffer_cold_3();
    goto LABEL_32;
  }
  if (!a3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      getCertificatesFromBuffer_cold_4();
    goto LABEL_32;
  }
  if (!a4)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      getCertificatesFromBuffer_cold_5();
LABEL_32:
    v16 = 4294967292;
    goto LABEL_16;
  }
  if ((unint64_t)a1 < a2)
  {
    if (a2 - (unint64_t)a1 <= 3)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        getCertificatesFromBuffer_cold_6();
LABEL_21:
      v16 = 4294967290;
      goto LABEL_16;
    }
    v9 = *a1;
    if (*a1)
    {
      v10 = 0;
      v11 = (unsigned int *)(a1 + 1);
      while (a2 - (unint64_t)v11 > 3)
      {
        v14 = *v11;
        v12 = v11 + 1;
        v13 = v14;
        if ((uint64_t)(a2 - (_QWORD)v12) < v14)
        {
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            getCertificatesFromBuffer_cold_8();
          goto LABEL_21;
        }
        v15 = (id)objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytes:length:", v12, v13);
        objc_msgSend(v8, "addObject:", v15);

        v11 = (_DWORD *)((char *)v12 + v13);
        v10 += v13 + 4;
        if (!--v9)
          goto LABEL_15;
      }
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        getCertificatesFromBuffer_cold_7();
      goto LABEL_21;
    }
  }
  v10 = 0;
LABEL_15:
  v16 = 0;
  *a3 = v8;
  *a4 = v10;
LABEL_16:

  return v16;
}

uint64_t SSEAuthorizeAndSignAPDU(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, CFDataRef *a9)
{
  UInt8 *v17;
  UInt8 *v18;
  uint64_t v19;
  size_t v20;
  UInt8 *v21;
  uint64_t v22;
  CFIndex v23;
  CFDataRef v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  UInt8 *outputStruct;
  size_t outputStructCnt;
  int v32;
  CFRange v33;
  CFRange v34;
  CFRange v35;
  CFRange v36;
  CFRange v37;
  CFRange v38;

  v32 = a3;
  outputStructCnt = 0;
  if (a1 != 8 && !a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_41;
  }
  if (!a4)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_41;
  }
  if (!a5)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_41;
  }
  if (!a6)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_41;
  }
  if (!a7)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_41;
  }
  if (!a8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_41;
  }
  if (!a9)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
LABEL_41:
    v25 = 4294967292;
    goto LABEL_26;
  }
  v17 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xE7B35AA9uLL);
  if (!v17)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_47;
  }
  v18 = v17;
  outputStruct = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x939AC92CuLL);
  if (!outputStruct)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    free(v18);
LABEL_47:
    v25 = 4294967291;
    goto LABEL_26;
  }
  v19 = init();
  if ((_DWORD)v19)
  {
    v25 = v19;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_73;
  }
  *(_DWORD *)v18 = 1397966179;
  *((_WORD *)v18 + 2) = 31;
  *((_DWORD *)v18 + 2) = a1;
  if (a1 != 8)
  {
    if ((unint64_t)CFDataGetLength(a2) >= 0x41)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEAuthorizeAndSignAPDU();
      goto LABEL_72;
    }
    v33.length = CFDataGetLength(a2);
    v33.location = 0;
    CFDataGetBytes(a2, v33, v18 + 16);
    *((_DWORD *)v18 + 3) = CFDataGetLength(a2);
  }
  *((_DWORD *)v18 + 20) = a3;
  if ((unint64_t)CFDataGetLength(a4) >= 0x19)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_72;
  }
  v34.length = CFDataGetLength(a4);
  v34.location = 0;
  CFDataGetBytes(a4, v34, v18 + 84);
  if (CFDataGetLength(a5) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_72;
  }
  v35.length = CFDataGetLength(a5);
  v35.location = 0;
  CFDataGetBytes(a5, v35, v18 + 108);
  if (CFDataGetLength(a6) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_72;
  }
  v36.length = CFDataGetLength(a6);
  v36.location = 0;
  CFDataGetBytes(a6, v36, v18 + 116);
  if (CFDataGetLength(a7) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_72;
  }
  v37.length = CFDataGetLength(a7);
  v37.location = 0;
  CFDataGetBytes(a7, v37, v18 + 124);
  if ((unint64_t)CFDataGetLength(a8) >= 0x3F79)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
LABEL_72:
    v25 = 4294967292;
LABEL_73:
    v21 = outputStruct;
    goto LABEL_25;
  }
  *((_DWORD *)v18 + 33) = CFDataGetLength(a8);
  v38.length = CFDataGetLength(a8);
  v38.location = 0;
  CFDataGetBytes(a8, v38, v18 + 136);
  v20 = *((unsigned int *)v18 + 33) + 136;
  outputStructCnt = 0x4000;
  v21 = outputStruct;
  v22 = IOConnectCallStructMethod(_connect, 0, v18, v20, outputStruct, &outputStructCnt);
  if ((_DWORD)v22)
  {
    v25 = v22;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_25;
  }
  if (outputStructCnt <= 3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
  }
  else
  {
    v23 = *(unsigned int *)outputStruct;
    if (outputStructCnt == v23 + 4)
    {
      v24 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], outputStruct + 4, v23);
      if (v24)
      {
        v25 = 0;
        *a9 = v24;
      }
      else
      {
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          SSEAuthorizeAndSignAPDU();
        v25 = 4294967291;
      }
      goto LABEL_25;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
  }
  v25 = 4294967290;
LABEL_25:
  free(v18);
  free(v21);
LABEL_26:
  logCmdCall((uint64_t)"SSEAuthorizeAndSignAPDU", v25, 0, (uint64_t)&v32, 0, v26, v27, v28);
  return v25;
}

uint64_t SSEGetActivationTimeout(int a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFData *a5, unsigned __int16 *a6, const __CFData **a7)
{
  uint64_t v14;
  uint64_t v15;
  const __CFData *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v22;
  int v23;
  uint64_t outputStruct;
  __int16 v25;
  _BYTE inputStruct[68];
  uint64_t v27;
  CFRange v28;
  CFRange v29;
  CFRange v30;
  CFRange v31;

  v27 = *MEMORY[0x1E0C80C00];
  v23 = a1;
  memset(inputStruct, 0, sizeof(inputStruct));
  v25 = 0;
  outputStruct = 0;
  v22 = 0;
  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetActivationTimeout();
    goto LABEL_39;
  }
  if (!a3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetActivationTimeout();
    goto LABEL_39;
  }
  if (!a4)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetActivationTimeout();
    goto LABEL_39;
  }
  if (!a5)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetActivationTimeout();
    goto LABEL_39;
  }
  if (!a6)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetActivationTimeout();
    goto LABEL_39;
  }
  if (!a7)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetActivationTimeout();
    goto LABEL_39;
  }
  v14 = init();
  if (!(_DWORD)v14)
  {
    *(_DWORD *)inputStruct = 1397966179;
    *(_WORD *)&inputStruct[4] = 4;
    *(_DWORD *)&inputStruct[8] = a1;
    if ((unint64_t)CFDataGetLength(a2) >= 0x19)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetActivationTimeout();
    }
    else
    {
      v28.length = CFDataGetLength(a2);
      v28.location = 0;
      CFDataGetBytes(a2, v28, (UInt8 *)((unint64_t)inputStruct | 0xC));
      if (CFDataGetLength(a3) == 8)
      {
        v29.length = CFDataGetLength(a3);
        v29.location = 0;
        CFDataGetBytes(a3, v29, &inputStruct[36]);
        if (CFDataGetLength(a4) == 8)
        {
          v30.length = CFDataGetLength(a4);
          v30.location = 0;
          CFDataGetBytes(a4, v30, &inputStruct[44]);
          if (CFDataGetLength(a5) == 8)
          {
            v31.length = CFDataGetLength(a5);
            v31.location = 0;
            CFDataGetBytes(a5, v31, &inputStruct[52]);
            *(_QWORD *)&inputStruct[60] = 0;
            v22 = 10;
            v15 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x44uLL, &outputStruct, &v22);
            if ((_DWORD)v15)
            {
              v20 = v15;
              if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                SSEGetActivationTimeout();
            }
            else if (v22 == 10)
            {
              v16 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], (const UInt8 *)&outputStruct + 2, 8);
              *a7 = v16;
              if (v16)
              {
                v20 = 0;
                *a6 = outputStruct;
              }
              else
              {
                if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                  SSEGetActivationTimeout();
                v20 = 4294967291;
              }
            }
            else
            {
              if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                SSEGetActivationTimeout();
              v20 = 4294967290;
            }
            goto LABEL_16;
          }
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSEGetActivationTimeout();
        }
        else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        {
          SSEGetActivationTimeout();
        }
      }
      else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      {
        SSEGetActivationTimeout();
      }
    }
LABEL_39:
    v20 = 4294967292;
    goto LABEL_16;
  }
  v20 = v14;
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    SSEGetActivationTimeout();
LABEL_16:
  logCmdCall((uint64_t)"SSEGetActivationTimeout", v20, 0, (uint64_t)&v23, (unint64_t)inputStruct | 0xC, v17, v18, v19);
  return v20;
}

uint64_t SSEAuthorizeAndSignAPDU(unsigned int a1, const __CFData *a2, unsigned int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, unsigned __int8 a9, CFDataRef *a10, CFDataRef *a11, CFDataRef *a12, CFTypeRef *a13)
{
  unsigned int *v21;
  unsigned int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  UInt8 *v26;
  size_t v27;
  uint64_t v28;
  size_t v29;
  unint64_t v30;
  unsigned int *v31;
  const __CFAllocator *v32;
  CFDataRef v33;
  CFDataRef v34;
  unint64_t v35;
  CFIndex v36;
  char *v37;
  CFDataRef v38;
  CFIndex v39;
  const UInt8 *v40;
  CFDataRef v41;
  CFDataRef v42;
  int *v43;
  uint64_t CertificatesFromBuffer;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  UInt8 *v49;
  int v50;
  CFTypeRef cf;
  size_t outputStructCnt;
  unsigned int v53;
  CFRange v54;
  CFRange v55;
  CFRange v56;
  CFRange v57;
  CFRange v58;
  CFRange v59;

  v53 = a3;
  cf = 0;
  outputStructCnt = 0;
  if (a1 != 8 && !a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_58;
  }
  if (!a4)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_58;
  }
  if (!a5)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_58;
  }
  if (!a6)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_58;
  }
  if (!a7)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_58;
  }
  if (!a8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_58;
  }
  if (!a10)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_58;
  }
  if (!a11)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_58;
  }
  if (!a12)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
LABEL_58:
    v22 = 0;
    v26 = 0;
LABEL_59:
    CertificatesFromBuffer = 4294967292;
    goto LABEL_110;
  }
  v21 = (unsigned int *)malloc_type_calloc(0x4000uLL, 1uLL, 0x6BB45F19uLL);
  if (!v21)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    v22 = 0;
    goto LABEL_65;
  }
  v22 = v21;
  v49 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xDD1224E4uLL);
  if (!v49)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
LABEL_65:
    v26 = 0;
LABEL_88:
    CertificatesFromBuffer = 4294967291;
    goto LABEL_110;
  }
  v23 = init();
  if ((_DWORD)v23)
  {
    CertificatesFromBuffer = v23;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_109;
  }
  if (a9 - 2 <= 2)
  {
    v24 = SSEIsFeatureSupported((a9 - 2) + 38);
    if ((_DWORD)v24)
    {
      CertificatesFromBuffer = v24;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEAuthorizeAndSignAPDU();
      goto LABEL_109;
    }
    v25 = baaPrepare();
    if ((_DWORD)v25)
    {
      CertificatesFromBuffer = v25;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEAuthorizeAndSignAPDU();
      goto LABEL_109;
    }
  }
  strcpy((char *)v22, "cESS ");
  v22[2] = a1;
  if (a1 != 8)
  {
    if ((unint64_t)CFDataGetLength(a2) >= 0x41)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEAuthorizeAndSignAPDU();
      goto LABEL_108;
    }
    v54.length = CFDataGetLength(a2);
    v54.location = 0;
    CFDataGetBytes(a2, v54, (UInt8 *)v22 + 16);
    v22[3] = CFDataGetLength(a2);
  }
  v22[20] = a3;
  if ((unint64_t)CFDataGetLength(a4) >= 0x19)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
LABEL_108:
    CertificatesFromBuffer = 4294967292;
LABEL_109:
    v26 = v49;
    goto LABEL_110;
  }
  v55.length = CFDataGetLength(a4);
  v55.location = 0;
  CFDataGetBytes(a4, v55, (UInt8 *)v22 + 84);
  if (CFDataGetLength(a5) != 8)
  {
    v26 = v49;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_59;
  }
  v56.length = CFDataGetLength(a5);
  v56.location = 0;
  CFDataGetBytes(a5, v56, (UInt8 *)v22 + 108);
  v26 = v49;
  if (CFDataGetLength(a6) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_59;
  }
  v57.length = CFDataGetLength(a6);
  v57.location = 0;
  CFDataGetBytes(a6, v57, (UInt8 *)v22 + 116);
  if (CFDataGetLength(a7) != 8)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_59;
  }
  v58.length = CFDataGetLength(a7);
  v58.location = 0;
  CFDataGetBytes(a7, v58, (UInt8 *)v22 + 124);
  if ((unint64_t)CFDataGetLength(a8) >> 3 >= 0x7EF)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_59;
  }
  v22[33] = CFDataGetLength(a8);
  v59.length = CFDataGetLength(a8);
  v59.location = 0;
  CFDataGetBytes(a8, v59, (UInt8 *)v22 + 137);
  *((_BYTE *)v22 + 136) = a9;
  v27 = v22[33] + 137;
  outputStructCnt = 0x4000;
  v28 = IOConnectCallStructMethod(_connect, 0, v22, v27, v49, &outputStructCnt);
  if ((_DWORD)v28)
  {
    CertificatesFromBuffer = v28;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_110;
  }
  v29 = outputStructCnt;
  if (outputStructCnt <= 0xB)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_92;
  }
  if (outputStructCnt > 0x4000)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_92;
  }
  v31 = (unsigned int *)(v49 + 12);
  v30 = *(unsigned int *)v49;
  if (outputStructCnt - 12 < v30)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_92;
  }
  v32 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v33 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], v49 + 12, v30);
  if (!v33)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    goto LABEL_88;
  }
  v34 = v33;
  v35 = (unint64_t)&v49[v29];
  v36 = *((unsigned int *)v49 + 1);
  v37 = (char *)v31 + *(unsigned int *)v49;
  if ((uint64_t)(v35 - (_QWORD)v37) < v36)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    CFRelease(v34);
LABEL_92:
    CertificatesFromBuffer = 4294967290;
    goto LABEL_110;
  }
  v38 = CFDataCreate(v32, (const UInt8 *)v31 + *(unsigned int *)v49, v36);
  v39 = *((unsigned int *)v49 + 2);
  v40 = (const UInt8 *)&v37[*((unsigned int *)v49 + 1)];
  if ((uint64_t)(v35 - (_QWORD)v40) < v39)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
    v42 = 0;
    CertificatesFromBuffer = 4294967290;
  }
  else
  {
    v41 = CFDataCreate(v32, v40, v39);
    v42 = v41;
    if (!a13)
    {
      CertificatesFromBuffer = 0;
      *a10 = v34;
      *a11 = v38;
      *a12 = v41;
      goto LABEL_36;
    }
    v43 = (int *)&v40[*((unsigned int *)v49 + 2)];
    v50 = 0;
    CertificatesFromBuffer = getCertificatesFromBuffer(v43, v35, &cf, &v50);
    if (!(_DWORD)CertificatesFromBuffer)
    {
      *a10 = v34;
      *a11 = v38;
      *a12 = v42;
      *a13 = cf;
LABEL_36:
      free(v22);
      goto LABEL_37;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEAuthorizeAndSignAPDU();
  }
  CFRelease(v34);
  if (v38)
    CFRelease(v38);
  if (v42)
    CFRelease(v42);
LABEL_110:
  if (cf)
    CFRelease(cf);
  if (v22)
    goto LABEL_36;
LABEL_37:
  if (v26)
    free(v26);
  logCmdCall((uint64_t)"SSEAuthorizeAndSignAPDU", CertificatesFromBuffer, 0, (uint64_t)&v53, 0, v45, v46, v47);
  return CertificatesFromBuffer;
}

uint64_t SSEUseEntangledAuthorizationRandom(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v10 = 0;
  v9 = 0;
  v2 = init();
  if ((_DWORD)v2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEUseEntangledAuthorizationRandom_cold_2();
  }
  else
  {
    strcpy((char *)&v9, "cESS!");
    v10 = a1;
    v3 = IOConnectCallStructMethod(_connect, 0, &v9, 9uLL, 0, 0);
    if ((_DWORD)v3)
    {
      v8 = v3;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEUseEntangledAuthorizationRandom_cold_1();
      v2 = v8;
    }
  }
  logCmdCall((uint64_t)"SSEUseEntangledAuthorizationRandom", v2, 0, 0, 0, v4, v5, v6);
  return v2;
}

uint64_t SSEGetAuthorizationRandom(int a1, const __CFData *a2, const __CFData **a3, const __CFData **a4)
{
  uint64_t v8;
  uint64_t v9;
  const __CFAllocator *v10;
  CFDataRef v11;
  const __CFData *v12;
  const __CFData *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t outputStructCnt;
  int v20;
  _QWORD outputStruct[2];
  uint64_t v22;
  _OWORD inputStruct[3];
  uint64_t v24;
  CFRange v25;

  v24 = *MEMORY[0x1E0C80C00];
  v20 = a1;
  memset(inputStruct, 0, 44);
  outputStruct[0] = 0;
  outputStruct[1] = 0;
  v22 = 0;
  outputStructCnt = 0;
  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetAuthorizationRandom();
    goto LABEL_22;
  }
  if (!a3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetAuthorizationRandom();
    goto LABEL_22;
  }
  if (!a4)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetAuthorizationRandom();
    goto LABEL_22;
  }
  v8 = init();
  if ((_DWORD)v8)
  {
    v17 = v8;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetAuthorizationRandom();
    goto LABEL_11;
  }
  LODWORD(inputStruct[0]) = 1397966179;
  WORD2(inputStruct[0]) = 5;
  DWORD2(inputStruct[0]) = a1;
  if ((unint64_t)CFDataGetLength(a2) >= 0x19)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetAuthorizationRandom();
LABEL_22:
    v17 = 4294967292;
    goto LABEL_11;
  }
  v25.length = CFDataGetLength(a2);
  v25.location = 0;
  CFDataGetBytes(a2, v25, (UInt8 *)((unint64_t)inputStruct | 0xC));
  *(_QWORD *)((char *)&inputStruct[2] + 4) = 0;
  outputStructCnt = 24;
  v9 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x2CuLL, outputStruct, &outputStructCnt);
  if ((_DWORD)v9)
  {
    v17 = v9;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetAuthorizationRandom();
  }
  else
  {
    if (outputStructCnt == 24)
    {
      v10 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
      v11 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], (const UInt8 *)outputStruct, 16);
      if (v11)
      {
        v12 = v11;
        v13 = CFDataCreate(v10, (const UInt8 *)&v22, 8);
        if (v13)
        {
          v17 = 0;
          *a3 = v12;
          *a4 = v13;
          goto LABEL_11;
        }
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          SSEGetAuthorizationRandom();
        CFRelease(v12);
      }
      else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      {
        SSEGetAuthorizationRandom();
      }
      v17 = 4294967291;
      goto LABEL_11;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetAuthorizationRandom();
    v17 = 4294967290;
  }
LABEL_11:
  logCmdCall((uint64_t)"SSEGetAuthorizationRandom", v17, 1, (uint64_t)&v20, (unint64_t)inputStruct | 0xC, v14, v15, v16);
  return v17;
}

uint64_t SSEGetEntangledAuthorizationRandom(int a1, const __CFData *a2, char a3, CFDataRef *a4, CFDataRef *a5)
{
  UInt8 *v10;
  UInt8 *v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  unint64_t v15;
  const __CFAllocator *v16;
  CFDataRef v17;
  CFDataRef v18;
  CFIndex v19;
  CFDataRef v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v26;
  int v27;
  _BYTE inputStruct[37];
  uint64_t v29;
  CFRange v30;

  v29 = *MEMORY[0x1E0C80C00];
  v27 = a1;
  memset(inputStruct, 0, sizeof(inputStruct));
  v26 = 0;
  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetEntangledAuthorizationRandom_cold_1();
    goto LABEL_23;
  }
  if (!a4)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetEntangledAuthorizationRandom_cold_2();
    goto LABEL_23;
  }
  if (!a5)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetEntangledAuthorizationRandom_cold_3();
LABEL_23:
    v21 = 4294967292;
    goto LABEL_16;
  }
  v10 = (UInt8 *)malloc_type_calloc(0x108uLL, 1uLL, 0x2AD6A872uLL);
  if (v10)
  {
    v11 = v10;
    v12 = init();
    if ((_DWORD)v12)
    {
      v21 = v12;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetEntangledAuthorizationRandom_cold_13();
      goto LABEL_15;
    }
    strcpy(inputStruct, "cESS\"");
    *(_DWORD *)&inputStruct[8] = a1;
    if ((unint64_t)CFDataGetLength(a2) >= 0x19)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetEntangledAuthorizationRandom_cold_5();
      v21 = 4294967292;
      goto LABEL_15;
    }
    v30.length = CFDataGetLength(a2);
    v30.location = 0;
    CFDataGetBytes(a2, v30, (UInt8 *)((unint64_t)inputStruct | 0xC));
    inputStruct[36] = a3;
    v26 = 264;
    v13 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x25uLL, v11, &v26);
    if ((_DWORD)v13)
    {
      v21 = v13;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetEntangledAuthorizationRandom_cold_12();
      goto LABEL_15;
    }
    v14 = v26;
    if (v26 <= 7)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetEntangledAuthorizationRandom_cold_6();
    }
    else if (v26 >= 0x109)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetEntangledAuthorizationRandom_cold_7();
    }
    else
    {
      v15 = *(unsigned int *)v11;
      if (v26 - 8 >= v15)
      {
        v16 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
        v17 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], v11 + 8, v15);
        if (!v17)
        {
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSEGetEntangledAuthorizationRandom_cold_9();
          v21 = 4294967291;
          goto LABEL_15;
        }
        v18 = v17;
        v19 = *((unsigned int *)v11 + 1);
        if ((uint64_t)(v14 - (*(unsigned int *)v11 + 8)) < v19)
        {
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSEGetEntangledAuthorizationRandom_cold_10();
          v21 = 4294967290;
        }
        else
        {
          v20 = CFDataCreate(v16, &v11[*(unsigned int *)v11 + 8], v19);
          if (v20)
          {
            v21 = 0;
            *a4 = v18;
            *a5 = v20;
LABEL_15:
            free(v11);
            goto LABEL_16;
          }
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSEGetEntangledAuthorizationRandom_cold_11();
          v21 = 4294967291;
        }
        CFRelease(v18);
        goto LABEL_15;
      }
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetEntangledAuthorizationRandom_cold_8();
    }
    v21 = 4294967290;
    goto LABEL_15;
  }
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    SSEGetEntangledAuthorizationRandom_cold_4();
  v21 = 4294967291;
LABEL_16:
  logCmdCall((uint64_t)"SSEGetEntangledAuthorizationRandom", v21, 1, (uint64_t)&v27, (unint64_t)inputStruct | 0xC, v22, v23, v24);
  return v21;
}

uint64_t SSEEffaceAuthorizationRandom()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t inputStruct;

  inputStruct = 0;
  v0 = init();
  if ((_DWORD)v0)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEEffaceAuthorizationRandom_cold_2();
  }
  else
  {
    LODWORD(inputStruct) = 1397966179;
    WORD2(inputStruct) = 6;
    v1 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 8uLL, 0, 0);
    if ((_DWORD)v1)
    {
      v6 = v1;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEEffaceAuthorizationRandom_cold_1();
      v0 = v6;
    }
  }
  logCmdCall((uint64_t)"SSEEffaceAuthorizationRandom", v0, 1, 0, 0, v2, v3, v4);
  return v0;
}

uint64_t SSEEnableOffWristAuthorization(char a1, const __CFData *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _OWORD v12[5];
  uint64_t v13;
  CFRange v14;

  v13 = *MEMORY[0x1E0C80C00];
  memset(v12, 0, 77);
  v4 = init();
  if ((_DWORD)v4)
  {
    v9 = v4;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEEnableOffWristAuthorization_cold_3();
  }
  else
  {
    strcpy((char *)v12, "cESS\n");
    BYTE8(v12[0]) = a1;
    if (!a2)
      goto LABEL_5;
    if ((unint64_t)CFDataGetLength(a2) < 0x41)
    {
      v14.length = CFDataGetLength(a2);
      v14.location = 0;
      CFDataGetBytes(a2, v14, (UInt8 *)((unint64_t)v12 | 0xD));
      *(_DWORD *)((char *)v12 + 9) = CFDataGetLength(a2);
LABEL_5:
      v5 = IOConnectCallStructMethod(_connect, 0, v12, 0x4DuLL, 0, 0);
      v9 = 0;
      if ((_DWORD)v5)
      {
        v11 = v5;
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          SSEEnableOffWristAuthorization_cold_1();
        v9 = v11;
      }
      goto LABEL_6;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEEnableOffWristAuthorization_cold_2();
    v9 = 4294967292;
  }
LABEL_6:
  logCmdCall((uint64_t)"SSEEnableOffWristAuthorization", v9, 0, 0, 0, v6, v7, v8);
  return v9;
}

uint64_t SSEIsOffWristAuthorizationEnabled(BOOL *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t outputStructCnt;
  char outputStruct;
  uint64_t inputStruct;

  inputStruct = 0;
  outputStruct = 0;
  outputStructCnt = 0;
  if (a1)
  {
    v2 = init();
    if ((_DWORD)v2)
    {
      v7 = v2;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEIsOffWristAuthorizationEnabled_cold_4();
    }
    else
    {
      strcpy((char *)&inputStruct, "cESS\v");
      outputStructCnt = 1;
      v3 = IOConnectCallStructMethod(_connect, 0, &inputStruct, 8uLL, &outputStruct, &outputStructCnt);
      if ((_DWORD)v3)
      {
        v7 = v3;
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          SSEIsOffWristAuthorizationEnabled_cold_3();
      }
      else if (outputStructCnt == 1)
      {
        v7 = 0;
        *a1 = outputStruct != 0;
      }
      else
      {
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          SSEIsOffWristAuthorizationEnabled_cold_2();
        v7 = 4294967290;
      }
    }
  }
  else
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEIsOffWristAuthorizationEnabled_cold_1();
    v7 = 4294967292;
  }
  logCmdCall((uint64_t)"SSEIsOffWristAuthorizationEnabled", v7, 0, 0, 0, v4, v5, v6);
  return v7;
}

uint64_t SSESetBlessedUser(uint64_t a1, const unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD inputStruct[5];

  inputStruct[4] = *MEMORY[0x1E0C80C00];
  memset(inputStruct, 0, 28);
  if (a2)
  {
    v4 = init();
    if ((_DWORD)v4)
    {
      v9 = v4;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSESetBlessedUser();
    }
    else
    {
      LODWORD(inputStruct[0]) = 1397966179;
      WORD2(inputStruct[0]) = 14;
      LODWORD(inputStruct[1]) = a1;
      *(_OWORD *)((char *)&inputStruct[1] + 4) = *(_OWORD *)a2;
      v5 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x1CuLL, 0, 0);
      if ((_DWORD)v5)
      {
        v9 = v5;
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          SSESetBlessedUser();
      }
      else
      {
        if (baaInit_onceToken != -1)
          dispatch_once(&baaInit_onceToken, &__block_literal_global_197);
        if (_baaSupportClass)
          objc_msgSend((id)_baaSupportClass, "setBlessedUser:keybagUUID:", a1, a2);
        v9 = 0;
      }
    }
  }
  else
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSESetBlessedUser();
    v9 = 4294967292;
  }
  logCmdCall((uint64_t)"SSESetBlessedUser", v9, 0, 0, 0, v6, v7, v8);
  return v9;
}

uint64_t SSESetEffacementNotificationHandler(void *a1, void *a2)
{
  id v4;
  id v5;
  int v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = a2;
  v6 = init();
  v7 = v6;
  if (v6)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSESetEffacementNotificationHandler();
  }
  else
  {
    objc_storeStrong((id *)&_effacemenNtfQueue, a1);
    v8 = _Block_copy(v5);
    v9 = (void *)_effacemenNtfHandler;
    _effacemenNtfHandler = (uint64_t)v8;

  }
  logCmdCall((uint64_t)"SSESetEffacementNotificationHandler", v7, 0, 0, 0, v10, v11, v12);

  return v7;
}

uint64_t SSEGetSignedDeviceData(const __CFData *a1, CFDataRef *a2)
{
  uint64_t v4;
  uint64_t v5;
  CFDataRef v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t outputStructCnt;
  _OWORD outputStruct[16];
  int v14;
  _DWORD inputStruct[8];
  uint64_t v16;
  uint64_t v17;
  CFRange v18;

  v17 = *MEMORY[0x1E0C80C00];
  v16 = 0;
  memset(inputStruct, 0, sizeof(inputStruct));
  v14 = 0;
  memset(outputStruct, 0, sizeof(outputStruct));
  outputStructCnt = 0;
  if (!a1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetSignedDeviceData_cold_1();
    goto LABEL_19;
  }
  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetSignedDeviceData_cold_2();
    goto LABEL_19;
  }
  v4 = init();
  if ((_DWORD)v4)
  {
    v10 = v4;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetSignedDeviceData_cold_8();
    goto LABEL_10;
  }
  inputStruct[0] = 1397966179;
  LOWORD(inputStruct[1]) = 16;
  if ((unint64_t)CFDataGetLength(a1) >= 0x19)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetSignedDeviceData_cold_3();
LABEL_19:
    v10 = 4294967292;
    goto LABEL_10;
  }
  v18.length = CFDataGetLength(a1);
  v18.location = 0;
  CFDataGetBytes(a1, v18, (UInt8 *)&inputStruct[2]);
  v16 = 0;
  outputStructCnt = 260;
  v5 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x28uLL, outputStruct, &outputStructCnt);
  if (!(_DWORD)v5)
  {
    if (outputStructCnt <= 3)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetSignedDeviceData_cold_4();
    }
    else
    {
      if (outputStructCnt == LODWORD(outputStruct[0]) + 4)
      {
        v6 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], (const UInt8 *)outputStruct + 4, LODWORD(outputStruct[0]));
        if (v6)
        {
          v10 = 0;
          *a2 = v6;
        }
        else
        {
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSEGetSignedDeviceData_cold_5();
          v10 = 4294967291;
        }
        goto LABEL_10;
      }
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetSignedDeviceData_cold_6();
    }
    v10 = 4294967290;
    goto LABEL_10;
  }
  v10 = v5;
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    SSEGetSignedDeviceData_cold_7();
LABEL_10:
  logCmdCall((uint64_t)"SSEGetSignedDeviceData", v10, 0, 0, (uint64_t)&inputStruct[2], v7, v8, v9);
  return v10;
}

uint64_t SSEGetCertificateExpirationDate(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v7 = 0;
  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetCertificateExpirationDate_cold_1();
    return 4294967292;
  }
  if (a1 != 1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetCertificateExpirationDate_cold_4();
    return 4294967292;
  }
  v3 = SSEIsFeatureSupported(26);
  if ((_DWORD)v3)
  {
    v5 = v3;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetCertificateExpirationDate_cold_3();
  }
  else
  {
    if (baaInit_onceToken != -1)
      dispatch_once(&baaInit_onceToken, &__block_literal_global_197);
    if (_baaSupportClass)
    {
      v4 = objc_msgSend((id)_baaSupportClass, "getCertificateExpirationDate:", &v7);
      if (!(_DWORD)v4)
      {
        v5 = 0;
        *a2 = v7;
        return v5;
      }
      v5 = v4;
    }
    else
    {
      v5 = 4294967290;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetCertificateExpirationDate_cold_2();
  }
  return v5;
}

uint64_t SSEGetCertificate(int a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v9;

  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetCertificate_cold_1();
    return 4294967292;
  }
  if (a1 != 1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetCertificate_cold_4();
    return 4294967292;
  }
  v3 = SSEIsFeatureSupported(27);
  if ((_DWORD)v3)
  {
    v5 = v3;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetCertificate_cold_3();
  }
  else
  {
    v9 = 0;
    if (baaInit_onceToken != -1)
      dispatch_once(&baaInit_onceToken, &__block_literal_global_197);
    v4 = (void *)_baaSupportClass;
    if (_baaSupportClass)
    {
      v5 = objc_msgSend((id)_baaSupportClass, "getCertificates:", &v9);
      v4 = v9;
    }
    else
    {
      v5 = 4294967290;
    }
    v6 = v4;
    v7 = v6;
    if ((_DWORD)v5)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetCertificate_cold_2();

    }
    else
    {
      *a2 = v6;
    }
  }
  return v5;
}

uint64_t SSEIssueNewCertificate(int a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 1)
  {
    v1 = SSEIsFeatureSupported(28);
    if ((_DWORD)v1)
    {
      v2 = v1;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEIssueNewCertificate_cold_2();
    }
    else
    {
      v2 = baaIssueNewCertificate();
      if ((_DWORD)v2 && os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEIssueNewCertificate_cold_1();
    }
  }
  else
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEIssueNewCertificate_cold_3();
    return 4294967292;
  }
  return v2;
}

uint64_t baaIssueNewCertificate()
{
  if (baaInit_onceToken != -1)
    dispatch_once(&baaInit_onceToken, &__block_literal_global_197);
  if (_baaSupportClass)
    return objc_msgSend((id)_baaSupportClass, "issueNewCertificate");
  else
    return 4294967290;
}

uint64_t SSECreateSecureElementACLRequest(int a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFData **a5, const __CFData **a6)
{
  UInt8 *v12;
  UInt8 *v13;
  UInt8 *v14;
  UInt8 *v15;
  uint64_t v16;
  unint64_t Length;
  unint64_t v18;
  unint64_t v19;
  UInt8 *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  size_t v24;
  unint64_t v25;
  const __CFAllocator *v26;
  CFDataRef v27;
  CFDataRef v28;
  CFIndex v29;
  const __CFData *v30;
  uint64_t v31;
  size_t outputStructCnt;
  CFRange v34;
  CFRange v35;
  CFRange v36;

  outputStructCnt = 0;
  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    return 4294967292;
  }
  if (!a3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    return 4294967292;
  }
  if (!a4)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    return 4294967292;
  }
  if (!a5)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    return 4294967292;
  }
  if (!a6)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    return 4294967292;
  }
  v12 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xDB9775F9uLL);
  if (!v12)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    return 4294967291;
  }
  v13 = v12;
  v14 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x877EE47CuLL);
  if (!v14)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    free(v13);
    return 4294967291;
  }
  v15 = v14;
  v16 = init();
  if ((_DWORD)v16)
  {
    v31 = v16;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    goto LABEL_20;
  }
  *(_DWORD *)v13 = 1397966179;
  *((_WORD *)v13 + 2) = 26;
  *((_DWORD *)v13 + 2) = a1;
  Length = CFDataGetLength(a2);
  if (Length >= 0x19)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    goto LABEL_47;
  }
  v34.length = Length;
  v34.location = 0;
  CFDataGetBytes(a2, v34, v13 + 12);
  v18 = CFDataGetLength(a3);
  if (v18 >= 0x3FD5)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    goto LABEL_47;
  }
  v19 = v18;
  *((_DWORD *)v13 + 9) = v18;
  v35.location = 0;
  v35.length = v18;
  CFDataGetBytes(a3, v35, v13 + 44);
  v20 = &v13[v19 + 44];
  v21 = CFDataGetLength(a4);
  if (v13 - v20 + 0x4000 < v21)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
LABEL_47:
    v31 = 4294967292;
    goto LABEL_20;
  }
  v22 = v21;
  *((_DWORD *)v13 + 10) = v21;
  v36.location = 0;
  v36.length = v21;
  CFDataGetBytes(a4, v36, v20);
  outputStructCnt = 0x4000;
  v23 = IOConnectCallStructMethod(_connect, 0, v13, &v20[v22] - v13, v15, &outputStructCnt);
  if ((_DWORD)v23)
  {
    v31 = v23;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    goto LABEL_20;
  }
  v24 = outputStructCnt;
  if (outputStructCnt <= 7)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    goto LABEL_56;
  }
  if (outputStructCnt > 0x4000)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    goto LABEL_56;
  }
  v25 = *(unsigned int *)v15;
  if (outputStructCnt - 8 < v25)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
LABEL_56:
    v31 = 4294967290;
    goto LABEL_20;
  }
  v26 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v27 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], v15 + 8, v25);
  if (!v27)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    v31 = 4294967291;
    goto LABEL_20;
  }
  v28 = v27;
  v29 = *((unsigned int *)v15 + 1);
  if ((uint64_t)(v24 - (*(unsigned int *)v15 + 8)) < v29)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    v31 = 4294967290;
    goto LABEL_66;
  }
  v30 = CFDataCreate(v26, &v15[*(unsigned int *)v15 + 8], v29);
  if (!v30)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSECreateSecureElementACLRequest();
    v31 = 4294967291;
LABEL_66:
    CFRelease(v28);
    goto LABEL_20;
  }
  v31 = 0;
  *a5 = v28;
  *a6 = v30;
LABEL_20:
  free(v13);
  free(v15);
  return v31;
}

uint64_t SSEEvaluateSecureElementACL(const __CFData *a1, int a2, const __CFData *a3, const __CFData *a4, const __CFData *a5, const __CFString *a6, const __CFData *a7, unsigned int a8, const __CFData **a9, const __CFData **a10)
{
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unint64_t Length;
  int v23;
  unint64_t v24;
  char *v25;
  UInt8 *v26;
  unint64_t v27;
  unint64_t v28;
  UInt8 *v29;
  unint64_t v30;
  unint64_t v31;
  UInt8 *v32;
  unint64_t v33;
  unint64_t v34;
  UInt8 *v35;
  unint64_t v36;
  unint64_t v37;
  UInt8 *v38;
  uint64_t v39;
  size_t v40;
  unint64_t v41;
  const __CFAllocator *v42;
  CFDataRef v43;
  const __CFData *v44;
  CFIndex v45;
  const __CFData *v46;
  uint64_t v47;
  UInt8 *outputStruct;
  size_t outputStructCnt;
  CFRange v51;
  CFRange v52;
  CFRange v53;
  CFRange v54;
  CFRange v55;
  CFRange v56;

  outputStructCnt = 0;
  if (!a1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEEvaluateSecureElementACL();
    return 4294967292;
  }
  if (!a3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEEvaluateSecureElementACL();
    return 4294967292;
  }
  if (!a4)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEEvaluateSecureElementACL();
    return 4294967292;
  }
  if (!a5)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEEvaluateSecureElementACL();
    return 4294967292;
  }
  if (!a6)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEEvaluateSecureElementACL();
    return 4294967292;
  }
  if (!a7)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEEvaluateSecureElementACL();
    return 4294967292;
  }
  if (a8 - 4 <= 0xFFFFFFFC)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEEvaluateSecureElementACL();
    return 4294967292;
  }
  if (!a9)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEEvaluateSecureElementACL();
    return 4294967292;
  }
  if (!a10)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEEvaluateSecureElementACL();
    return 4294967292;
  }
  if (a8 < 2 || (v18 = SSEIsFeatureSupported(32), !(_DWORD)v18))
  {
    v19 = (char *)malloc_type_calloc(0x4000uLL, 1uLL, 0x29CD736uLL);
    if (v19)
    {
      v20 = v19;
      outputStruct = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xAE84491FuLL);
      if (outputStruct)
      {
        v21 = init();
        if ((_DWORD)v21)
        {
          v47 = v21;
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSEEvaluateSecureElementACL();
          goto LABEL_73;
        }
        *(_DWORD *)v20 = 1397966179;
        v20[4] = 27;
        v20[5] = a8 > 1;
        Length = CFDataGetLength(a1);
        if (Length >= 0x41)
        {
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSEEvaluateSecureElementACL();
        }
        else
        {
          v23 = Length;
          v51.location = 0;
          v51.length = Length;
          CFDataGetBytes(a1, v51, (UInt8 *)v20 + 12);
          *((_DWORD *)v20 + 2) = v23;
          *((_DWORD *)v20 + 19) = a2;
          v24 = CFDataGetLength(a3);
          if (v24 >= 0x19)
          {
            if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
              SSEEvaluateSecureElementACL();
          }
          else
          {
            v52.length = v24;
            v52.location = 0;
            CFDataGetBytes(a3, v52, (UInt8 *)v20 + 80);
            v25 = v20 + 0x4000;
            if (a8 < 2)
            {
              v26 = (UInt8 *)(v20 + 120);
            }
            else
            {
              v20[120] = a8;
              v26 = (UInt8 *)(v20 + 121);
            }
            v27 = CFDataGetLength(a4);
            if (v25 - (char *)v26 < v27)
            {
              if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                SSEEvaluateSecureElementACL();
            }
            else
            {
              v28 = v27;
              *((_DWORD *)v20 + 26) = v27;
              v53.location = 0;
              v53.length = v27;
              CFDataGetBytes(a4, v53, v26);
              v29 = &v26[v28];
              v30 = CFDataGetLength(a5);
              if (v25 - (char *)v29 < v30)
              {
                if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                  SSEEvaluateSecureElementACL();
              }
              else
              {
                v31 = v30;
                *((_DWORD *)v20 + 27) = v30;
                v54.location = 0;
                v54.length = v30;
                CFDataGetBytes(a5, v54, v29);
                v32 = &v29[v31];
                v33 = CFStringGetLength(a6);
                if (v25 - (char *)v32 >= v33)
                {
                  v34 = v33;
                  v55.location = 0;
                  v55.length = v33;
                  if (CFStringGetBytes(a6, v55, 0x8000100u, 0, 0, v32, v25 - (char *)v32, 0) == v33)
                  {
                    *((_DWORD *)v20 + 28) = v34;
                    v35 = &v32[v34];
                    v36 = CFDataGetLength(a7);
                    if (v25 - (char *)v35 < v36)
                    {
                      v38 = outputStruct;
                      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                        SSEEvaluateSecureElementACL();
                      v47 = 4294967292;
                      goto LABEL_33;
                    }
                    v37 = v36;
                    *((_DWORD *)v20 + 29) = v36;
                    v56.location = 0;
                    v56.length = v36;
                    CFDataGetBytes(a7, v56, v35);
                    outputStructCnt = 0x4000;
                    v38 = outputStruct;
                    v39 = IOConnectCallStructMethod(_connect, 0, v20, &v35[v37] - (UInt8 *)v20, outputStruct, &outputStructCnt);
                    if ((_DWORD)v39)
                    {
                      v47 = v39;
                      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                        SSEEvaluateSecureElementACL();
                      goto LABEL_33;
                    }
                    v40 = outputStructCnt;
                    if (outputStructCnt <= 7)
                    {
                      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                        SSEEvaluateSecureElementACL();
                    }
                    else if (outputStructCnt > 0x4000)
                    {
                      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                        SSEEvaluateSecureElementACL();
                    }
                    else
                    {
                      v41 = *(unsigned int *)outputStruct;
                      if (outputStructCnt - 8 >= v41)
                      {
                        v42 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
                        v43 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], outputStruct + 8, v41);
                        if (!v43)
                        {
                          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                            SSEEvaluateSecureElementACL();
                          v47 = 4294967291;
                          goto LABEL_33;
                        }
                        v44 = v43;
                        v45 = *((unsigned int *)outputStruct + 1);
                        if ((uint64_t)(v40 - (*(unsigned int *)outputStruct + 8)) < v45)
                        {
                          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                            SSEEvaluateSecureElementACL();
                          v47 = 4294967290;
                        }
                        else
                        {
                          v46 = CFDataCreate(v42, &outputStruct[*(unsigned int *)outputStruct + 8], v45);
                          if (v46)
                          {
                            v47 = 0;
                            *a9 = v44;
                            *a10 = v46;
LABEL_33:
                            free(v20);
                            free(v38);
                            return v47;
                          }
                          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                            SSEEvaluateSecureElementACL();
                          v47 = 4294967291;
                        }
                        CFRelease(v44);
                        goto LABEL_33;
                      }
                      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                        SSEEvaluateSecureElementACL();
                    }
                    v47 = 4294967290;
                    goto LABEL_33;
                  }
                  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                    SSEEvaluateSecureElementACL();
                  v47 = 4294967290;
LABEL_73:
                  v38 = outputStruct;
                  goto LABEL_33;
                }
                if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                  SSEEvaluateSecureElementACL();
              }
            }
          }
        }
        v47 = 4294967292;
        goto LABEL_73;
      }
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEEvaluateSecureElementACL();
      free(v20);
    }
    else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    {
      SSEEvaluateSecureElementACL();
    }
    return 4294967291;
  }
  v47 = v18;
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    SSEEvaluateSecureElementACL();
  return v47;
}

uint64_t SSEGetRosePairingInfo(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData **a4)
{
  uint64_t RosePairingInfo;

  if (!a1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetRosePairingInfo();
    return 4294967292;
  }
  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetRosePairingInfo();
    return 4294967292;
  }
  if (!a3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetRosePairingInfo();
    return 4294967292;
  }
  if (!a4)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetRosePairingInfo();
    return 4294967292;
  }
  RosePairingInfo = getRosePairingInfo(a1, a2, 0, 0, a3, a4);
  if ((_DWORD)RosePairingInfo && os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    SSEGetRosePairingInfo();
  return RosePairingInfo;
}

uint64_t getRosePairingInfo(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFData *a5, CFDataRef *a6)
{
  _DWORD *v12;
  _DWORD *v13;
  UInt8 *v14;
  UInt8 *v15;
  uint64_t v16;
  unint64_t Length;
  id v18;
  void *v19;
  unint64_t v20;
  unsigned int v21;
  id v22;
  uint64_t v23;
  CFIndex v24;
  CFDataRef v25;
  uint64_t v26;
  CFDataRef *v28;
  size_t outputStructCnt;
  UInt8 buffer[16];
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  CFRange v34;

  v33 = *MEMORY[0x1E0C80C00];
  outputStructCnt = 0;
  v32 = 0;
  *(_OWORD *)buffer = 0u;
  v31 = 0u;
  if (!a1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      getRosePairingInfo_cold_1();
    goto LABEL_54;
  }
  if (!a6)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      getRosePairingInfo_cold_2();
LABEL_54:
    v19 = 0;
    v26 = 4294967292;
    goto LABEL_42;
  }
  v12 = malloc_type_calloc(0x4000uLL, 1uLL, 0xAA037781uLL);
  if (!v12)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      getRosePairingInfo_cold_3();
    goto LABEL_60;
  }
  v13 = v12;
  v14 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xE079FC04uLL);
  if (!v14)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      getRosePairingInfo_cold_4();
    free(v13);
LABEL_60:
    v19 = 0;
    v26 = 4294967291;
    goto LABEL_42;
  }
  v15 = v14;
  v16 = init();
  if ((_DWORD)v16)
  {
    v26 = v16;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      getRosePairingInfo_cold_17();
    v19 = 0;
    goto LABEL_41;
  }
  Length = CFDataGetLength(a1);
  if (Length >= 0x19)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      getRosePairingInfo_cold_5();
    goto LABEL_83;
  }
  v34.length = Length;
  v34.location = 0;
  CFDataGetBytes(a1, v34, buffer);
  if (a2)
  {
    if (CFDataGetLength(a2) >= 0x100000000)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        getRosePairingInfo_cold_16();
      goto LABEL_83;
    }
    DWORD2(v31) = CFDataGetLength(a2);
  }
  if (a3)
  {
    if (CFDataGetLength(a3) >= 0x100000000)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        getRosePairingInfo_cold_15();
      goto LABEL_83;
    }
    HIDWORD(v31) = CFDataGetLength(a3);
  }
  if (a4)
  {
    if (CFDataGetLength(a4) >= 0x100000000)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        getRosePairingInfo_cold_14();
      goto LABEL_83;
    }
    LODWORD(v32) = CFDataGetLength(a4);
  }
  if (!a5)
  {
LABEL_19:
    v18 = (id)objc_msgSend(MEMORY[0x1E0C99DF0], "dataWithBytes:length:", buffer, 40);
    v19 = v18;
    if (a2)
      objc_msgSend(v18, "appendData:", a2);
    if (a3)
      objc_msgSend(v19, "appendData:", a3);
    if (a4)
      objc_msgSend(v19, "appendData:", a4);
    if (a5)
      objc_msgSend(v19, "appendData:", a5);
    if (!((unint64_t)objc_msgSend(v19, "length") >> 32))
    {
      v28 = a6;
      LODWORD(v20) = 0;
      while (1)
      {
        *v13 = 1397966179;
        *((_WORD *)v13 + 2) = 29;
        v21 = (objc_msgSend(v19, "length", v28, outputStructCnt, *(_QWORD *)buffer, *(_QWORD *)&buffer[8], v31, v32, v33)- (unint64_t)v20) >> 2 > 0xFFA? 16364: objc_msgSend(v19, "length") - v20;
        v13[2] = objc_msgSend(v19, "length");
        v13[3] = v20;
        v13[4] = v21;
        v22 = objc_retainAutorelease(v19);
        objc_msgSend(v22, "bytes");
        __memcpy_chk();
        outputStructCnt = 0x4000;
        v23 = IOConnectCallStructMethod(_connect, 0, v13, v21 + 20, v15, &outputStructCnt);
        if ((_DWORD)v23)
          break;
        if (outputStructCnt <= 3)
        {
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            getRosePairingInfo_cold_7();
          goto LABEL_49;
        }
        if (outputStructCnt > 0x4000)
        {
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            getRosePairingInfo_cold_8();
          goto LABEL_49;
        }
        v20 = v20 + v21;
        if (objc_msgSend(v22, "length") <= v20)
        {
          if (outputStructCnt <= 3)
          {
            if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
              getRosePairingInfo_cold_9();
          }
          else
          {
            v24 = *(unsigned int *)v15;
            if (outputStructCnt - 4 == v24)
            {
              v25 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], v15 + 4, v24);
              if (v25)
              {
                v26 = 0;
                *v28 = v25;
              }
              else
              {
                if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                  getRosePairingInfo_cold_10();
                v26 = 4294967291;
              }
              goto LABEL_40;
            }
            if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
              getRosePairingInfo_cold_11();
          }
LABEL_49:
          v26 = 4294967290;
          goto LABEL_40;
        }
      }
      v26 = v23;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        getRosePairingInfo_cold_12();
LABEL_40:
      v19 = v22;
      goto LABEL_41;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      getRosePairingInfo_cold_6();
    goto LABEL_84;
  }
  if (CFDataGetLength(a5) < 0x100000000)
  {
    HIDWORD(v32) = CFDataGetLength(a5);
    goto LABEL_19;
  }
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    getRosePairingInfo_cold_13();
LABEL_83:
  v19 = 0;
LABEL_84:
  v26 = 4294967292;
LABEL_41:
  free(v13);
  free(v15);
LABEL_42:

  return v26;
}

uint64_t SSEGetRosePairingInfo(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFData *a5, const __CFData **a6)
{
  uint64_t RosePairingInfo;

  if (!a1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetRosePairingInfo();
    return 4294967292;
  }
  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetRosePairingInfo();
    return 4294967292;
  }
  if (!a5)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetRosePairingInfo();
    return 4294967292;
  }
  if (!a6)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetRosePairingInfo();
    return 4294967292;
  }
  RosePairingInfo = getRosePairingInfo(a1, a2, a3, a4, a5, a6);
  if ((_DWORD)RosePairingInfo && os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    SSEGetRosePairingInfo();
  return RosePairingInfo;
}

uint64_t SSEGetAttV2AuthKey(const __CFData *a1, const __CFData *a2, CFDataRef *a3)
{
  UInt8 *v6;
  UInt8 *v7;
  uint64_t v8;
  uint64_t v9;
  CFIndex v10;
  CFDataRef v11;
  uint64_t v12;
  size_t outputStructCnt;
  _BYTE inputStruct[20];
  __int128 v16;
  int v17;
  uint64_t v18;
  CFRange v19;
  CFRange v20;

  v18 = *MEMORY[0x1E0C80C00];
  v17 = 0;
  v16 = 0u;
  *(_OWORD *)&inputStruct[4] = 0u;
  outputStructCnt = 0;
  if (!a1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetAttV2AuthKey_cold_1();
    return 4294967292;
  }
  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetAttV2AuthKey_cold_2();
    return 4294967292;
  }
  if (!a3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetAttV2AuthKey_cold_3();
    return 4294967292;
  }
  v6 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x7290607BuLL);
  if (v6)
  {
    v7 = v6;
    v8 = init();
    if ((_DWORD)v8)
    {
      v12 = v8;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetAttV2AuthKey_cold_11();
      goto LABEL_13;
    }
    strcpy(inputStruct, "cESS#");
    if ((unint64_t)CFDataGetLength(a1) >= 0x19)
    {
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetAttV2AuthKey_cold_5();
    }
    else
    {
      v19.length = CFDataGetLength(a1);
      v19.location = 0;
      CFDataGetBytes(a1, v19, &inputStruct[8]);
      if ((unint64_t)CFDataGetLength(a2) < 9)
      {
        v20.length = CFDataGetLength(a2);
        v20.location = 0;
        CFDataGetBytes(a2, v20, (UInt8 *)&v16 + 12);
        outputStructCnt = 0x4000;
        v9 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x28uLL, v7, &outputStructCnt);
        if ((_DWORD)v9)
        {
          v12 = v9;
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSEGetAttV2AuthKey_cold_10();
          goto LABEL_13;
        }
        if (outputStructCnt <= 3)
        {
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSEGetAttV2AuthKey_cold_7();
        }
        else
        {
          v10 = *(unsigned int *)v7;
          if (outputStructCnt - 4 == v10)
          {
            v11 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], v7 + 4, v10);
            if (v11)
            {
              v12 = 0;
              *a3 = v11;
            }
            else
            {
              if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
                SSEGetAttV2AuthKey_cold_8();
              v12 = 4294967291;
            }
            goto LABEL_13;
          }
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSEGetAttV2AuthKey_cold_9();
        }
        v12 = 4294967290;
LABEL_13:
        free(v7);
        return v12;
      }
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSEGetAttV2AuthKey_cold_6();
    }
    v12 = 4294967292;
    goto LABEL_13;
  }
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    SSEGetAttV2AuthKey_cold_4();
  return 4294967291;
}

uint64_t SSESetSEPubKey(const __CFData *a1, const __CFData *a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  unint64_t Length;
  id v8;
  unint64_t v9;
  unsigned int v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  UInt8 buffer[8];
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  CFRange v20;

  v19 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)buffer = 0;
  v16 = 0;
  v18 = 0;
  v17 = 0;
  if (!a1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSESetSEPubKey_cold_1();
    return 4294967292;
  }
  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSESetSEPubKey_cold_2();
    return 4294967292;
  }
  v4 = (char *)malloc_type_calloc(0x4000uLL, 1uLL, 0xB0967022uLL);
  if (v4)
  {
    v5 = v4;
    v6 = init();
    if ((_DWORD)v6)
    {
      v13 = v6;
      if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        SSESetSEPubKey_cold_8();
    }
    else
    {
      Length = CFDataGetLength(a1);
      if (Length >= 0x19)
      {
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          SSESetSEPubKey_cold_4();
      }
      else
      {
        v20.length = Length;
        v20.location = 0;
        CFDataGetBytes(a1, v20, buffer);
        if (CFDataGetLength(a2) >= 0x100000000)
        {
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSESetSEPubKey_cold_5();
        }
        else
        {
          v18 = CFDataGetLength(a2);
          v8 = (id)objc_msgSend(MEMORY[0x1E0C99DF0], "dataWithBytes:length:", buffer, 28);
          objc_msgSend(v8, "appendData:", a2);
          if (!((unint64_t)objc_msgSend(v8, "length") >> 32))
          {
            LODWORD(v9) = 0;
            while (1)
            {
              strcpy(v5, "cESS%");
              v10 = (objc_msgSend(v8, "length") - (unint64_t)v9) >> 2 > 0xFFA
                  ? 16364
                  : objc_msgSend(v8, "length") - v9;
              *((_DWORD *)v5 + 2) = objc_msgSend(v8, "length");
              *((_DWORD *)v5 + 3) = v9;
              *((_DWORD *)v5 + 4) = v10;
              v11 = objc_retainAutorelease(v8);
              objc_msgSend(v11, "bytes");
              __memcpy_chk();
              v12 = IOConnectCallStructMethod(_connect, 0, v5, v10 + 20, 0, 0);
              if ((_DWORD)v12)
                break;
              v9 = v9 + v10;
              if (objc_msgSend(v11, "length") <= v9)
              {

                v13 = 0;
                goto LABEL_15;
              }
            }
            v13 = v12;
            if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
              SSESetSEPubKey_cold_7();

            goto LABEL_15;
          }
          if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
            SSESetSEPubKey_cold_6();

        }
      }
      v13 = 4294967292;
    }
LABEL_15:
    free(v5);
    return v13;
  }
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    SSESetSEPubKey_cold_3();
  return 4294967291;
}

uint64_t SSEGetAuthKeySharingState(const __CFData *a1, _DWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t outputStructCnt;
  int outputStruct;
  _BYTE inputStruct[12];
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  CFRange v15;

  v14 = *MEMORY[0x1E0C80C00];
  v11 = 0;
  *(_QWORD *)&inputStruct[4] = 0;
  v13 = 0;
  v12 = 0;
  outputStruct = 0;
  if (!a1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetAuthKeySharingState_cold_1();
    return 4294967292;
  }
  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetAuthKeySharingState_cold_2();
    return 4294967292;
  }
  v4 = init();
  if (!(_DWORD)v4)
  {
    strcpy(inputStruct, "cESS&");
    if ((unint64_t)CFDataGetLength(a1) < 0x19)
    {
      v15.length = CFDataGetLength(a1);
      v15.location = 0;
      CFDataGetBytes(a1, v15, &inputStruct[8]);
      outputStructCnt = 4;
      v5 = IOConnectCallStructMethod(_connect, 0, inputStruct, 0x20uLL, &outputStruct, &outputStructCnt);
      if ((_DWORD)v5)
      {
        v6 = v5;
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          SSEGetAuthKeySharingState_cold_5();
      }
      else if (outputStructCnt == 4)
      {
        v6 = 0;
        *a2 = outputStruct;
      }
      else
      {
        if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
          SSEGetAuthKeySharingState_cold_4();
        return 4294967290;
      }
      return v6;
    }
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEGetAuthKeySharingState_cold_3();
    return 4294967292;
  }
  v6 = v4;
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    SSEGetAuthKeySharingState_cold_6();
  return v6;
}

uint64_t SSEPerformAuthKeySharing(const __CFData *a1, const __CFData *a2, const __CFData *a3, CFDataRef *a4, CFDataRef *a5)
{
  UInt8 *v10;
  UInt8 *v11;
  UInt8 *v12;
  UInt8 *v13;
  uint64_t v14;
  unint64_t Length;
  unint64_t v16;
  UInt8 *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  size_t v21;
  unint64_t v22;
  const __CFAllocator *v23;
  CFDataRef v24;
  CFDataRef v25;
  CFIndex v26;
  CFDataRef v27;
  uint64_t v28;
  size_t outputStructCnt;
  CFRange v31;
  CFRange v32;
  CFRange v33;

  outputStructCnt = 0;
  if (!a1)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_1();
    return 4294967292;
  }
  if (!a2)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_2();
    return 4294967292;
  }
  if (!a3)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_3();
    return 4294967292;
  }
  if (!a4)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_4();
    return 4294967292;
  }
  if (!a5)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_5();
    return 4294967292;
  }
  v10 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0xD2063E45uLL);
  if (!v10)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_6();
    return 4294967291;
  }
  v11 = v10;
  v12 = (UInt8 *)malloc_type_calloc(0x4000uLL, 1uLL, 0x43BFE140uLL);
  if (!v12)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_7();
    free(v11);
    return 4294967291;
  }
  v13 = v12;
  v14 = init();
  if ((_DWORD)v14)
  {
    v28 = v14;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_18();
    goto LABEL_20;
  }
  strcpy((char *)v11, "cESS$");
  if ((unint64_t)CFDataGetLength(a1) >= 0x19)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_8();
    goto LABEL_47;
  }
  v31.length = CFDataGetLength(a1);
  v31.location = 0;
  CFDataGetBytes(a1, v31, v11 + 8);
  Length = CFDataGetLength(a2);
  if (Length >= 0x3FD9)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_9();
    goto LABEL_47;
  }
  v16 = Length;
  *((_DWORD *)v11 + 8) = Length;
  v32.location = 0;
  v32.length = Length;
  CFDataGetBytes(a2, v32, v11 + 40);
  v17 = &v11[v16 + 40];
  v18 = CFDataGetLength(a3);
  if (v11 - v17 + 0x4000 < v18)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_10();
LABEL_47:
    v28 = 4294967292;
    goto LABEL_20;
  }
  v19 = v18;
  *((_DWORD *)v11 + 9) = v18;
  v33.location = 0;
  v33.length = v18;
  CFDataGetBytes(a3, v33, v17);
  outputStructCnt = 0x4000;
  v20 = IOConnectCallStructMethod(_connect, 0, v11, &v17[v19] - v11, v13, &outputStructCnt);
  if ((_DWORD)v20)
  {
    v28 = v20;
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_17();
    goto LABEL_20;
  }
  v21 = outputStructCnt;
  if (outputStructCnt <= 7)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_11();
    goto LABEL_56;
  }
  if (outputStructCnt > 0x4000)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_12();
    goto LABEL_56;
  }
  v22 = *(unsigned int *)v13;
  if (outputStructCnt - 8 < v22)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_13();
LABEL_56:
    v28 = 4294967290;
    goto LABEL_20;
  }
  v23 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v24 = CFDataCreate((CFAllocatorRef)*MEMORY[0x1E0C9AE00], v13 + 8, v22);
  if (!v24)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_14();
    v28 = 4294967291;
    goto LABEL_20;
  }
  v25 = v24;
  v26 = *((unsigned int *)v13 + 1);
  if ((uint64_t)(v21 - (*(unsigned int *)v13 + 8)) < v26)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_15();
    v28 = 4294967290;
    goto LABEL_66;
  }
  v27 = CFDataCreate(v23, &v13[*(unsigned int *)v13 + 8], v26);
  if (!v27)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSEPerformAuthKeySharing_cold_16();
    v28 = 4294967291;
LABEL_66:
    CFRelease(v25);
    goto LABEL_20;
  }
  v28 = 0;
  *a4 = v25;
  *a5 = v27;
LABEL_20:
  free(v11);
  free(v13);
  return v28;
}

uint64_t SSESetAuthKeyRevocationNotificationHandler(void *a1, void *a2)
{
  id v4;
  id v5;
  int v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v4 = a1;
  v5 = a2;
  v6 = init();
  v7 = v6;
  if (v6)
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
      SSESetAuthKeyRevocationNotificationHandler();
  }
  else
  {
    objc_storeStrong((id *)&_authKeyRevocationNtfQueue, a1);
    v8 = _Block_copy(v5);
    v9 = (void *)_authKeyRevocationNtfHandler;
    _authKeyRevocationNtfHandler = (uint64_t)v8;

  }
  return v7;
}

uint64_t SSEAuthorize(int a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, _DWORD *a7, CFDataRef *a8)
{
  return authorize(0, a1, a2, -1, a3, a4, a5, a6, 0, a7, a8, 0, 0, 0);
}

uint64_t SSEAuthorize(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, _DWORD *a8, CFDataRef *a9, CFDataRef *a10, CFDataRef *a11)
{
  return authorize(1, a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, a10, a11, 0);
}

uint64_t SSEAuthorize(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, char a8, _DWORD *a9, CFDataRef *a10, CFDataRef *a11, CFDataRef *a12)
{
  return authorize(1, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, 0);
}

uint64_t SSEAuthorizeWithPIN(int a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, _DWORD *a7, CFDataRef *a8, CFDataRef *a9)
{
  return authorizeWithPIN(0, a1, a2, -1, a3, a4, a5, a6, 0, a7, a8, a9, 0, 0, 0);
}

uint64_t SSEAuthorizeWithPIN(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, _DWORD *a8, CFDataRef *a9, CFDataRef *a10, CFDataRef *a11, CFDataRef *a12)
{
  return authorizeWithPIN(1, a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, a10, a11, a12, 0);
}

uint64_t SSEAuthorizeWithPIN(int a1, const __CFData *a2, int a3, const __CFData *a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, char a8, _DWORD *a9, CFDataRef *a10, CFDataRef *a11, CFDataRef *a12, CFDataRef *a13)
{
  return authorizeWithPIN(1, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, 0);
}

uint64_t SSEAuthorizeAndSignECommerceBlob(const __CFData *a1, int a2, const __CFData *a3, char a4, const __CFData *a5, const __CFData *a6, const __CFData *a7, const __CFData *a8, char a9, const __CFData **a10, const __CFData **a11, const __CFData **a12)
{
  return SSEAuthorizeAndSignECommerceBlob(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, 0);
}

uint64_t SSEGetActivationTimeout(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, unsigned __int16 *a5, const __CFData **a6)
{
  return SSEGetActivationTimeout(-1, a1, a2, a3, a4, a5, a6);
}

uint64_t SSEGetAuthorizationRandom(const __CFData *a1, const __CFData **a2, const __CFData **a3)
{
  return SSEGetAuthorizationRandom(-1, a1, a2, a3);
}

uint64_t SSESetBlessedUser(uint64_t a1)
{
  unsigned __int8 v2[8];
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)v2 = 0;
  v3 = 0;
  return SSESetBlessedUser(a1, v2);
}

uint64_t SSECreateSecureElementACLRequest(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData **a4, const __CFData **a5)
{
  return SSECreateSecureElementACLRequest(-1, a1, a2, a3, a4, a5);
}

uint64_t SSEEvaluateSecureElementACL(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFString *a5, const __CFData *a6, const __CFData **a7, const __CFData **a8)
{
  return SSEEvaluateSecureElementACL(a1, -1, a2, a3, a4, a5, a6, 1u, a7, a8);
}

uint64_t SSEEvaluateSecureElementACL(const __CFData *a1, const __CFData *a2, const __CFData *a3, const __CFData *a4, const __CFString *a5, const __CFData *a6, unsigned int a7, const __CFData **a8, const __CFData **a9)
{
  return SSEEvaluateSecureElementACL(a1, -1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t SSESetEffacementNotificationHandler(void *a1)
{
  return SSESetEffacementNotificationHandler(0, a1);
}

uint64_t SSESetAuthKeyRevocationNotificationHandler(void *a1)
{
  return SSESetAuthKeyRevocationNotificationHandler(0, a1);
}

void serviceNotificationHandler(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  NSObject *v5;
  NSObject *v6;
  _QWORD *v7;
  NSObject *v8;
  _QWORD v9[5];
  _QWORD v10[5];

  if (a3 == -469794813)
  {
    v5 = (id)_authKeyRevocationNtfQueue;
    v6 = v5;
    if (!v5)
      v6 = dispatch_get_global_queue(21, 0);
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = __serviceNotificationHandler_block_invoke_3;
    v9[3] = &__block_descriptor_40_e5_v8__0l;
    v9[4] = a4;
    v7 = v9;
    goto LABEL_10;
  }
  if (a3 == -469794814)
  {
    if (!_doNotIssueNewBAACertificate)
    {
      v8 = dispatch_get_global_queue(21, 0);
      dispatch_async(v8, &__block_literal_global_171);

    }
    goto LABEL_14;
  }
  if (a3 != -469794815)
  {
LABEL_14:
    v5 = 0;
    goto LABEL_15;
  }
  v5 = (id)_effacemenNtfQueue;
  v6 = v5;
  if (!v5)
    v6 = dispatch_get_global_queue(21, 0);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __serviceNotificationHandler_block_invoke;
  v10[3] = &__block_descriptor_40_e5_v8__0l;
  v10[4] = a4;
  v7 = v10;
LABEL_10:
  dispatch_async(v6, v7);
  if (!v5)

LABEL_15:
}

const char *__isRestoreMode_block_invoke()
{
  const char *result;
  char *__lasts;
  size_t v2;
  char __str[1024];
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 1024;
  result = (const char *)sysctlbyname("kern.bootargs", __str, &v2, 0, 0);
  if (!(_DWORD)result)
  {
    __lasts = 0;
    result = strtok_r(__str, " \t", &__lasts);
    if (result)
    {
      while (1)
      {
        result = (const char *)strcmp(result, "rd=md0");
        if (!(_DWORD)result)
          break;
        result = strtok_r(0, " \t", &__lasts);
        if (!result)
          return result;
      }
      isRestoreMode_restoreMode = 1;
    }
  }
  return result;
}

void *__getMGAnswers_block_invoke()
{
  void *result;
  void *v1;
  uint64_t (*v2)(const __CFString *);
  uint64_t (*v3)(const __CFString *);

  result = dlopen("/usr/lib/libMobileGestalt.dylib", 1);
  if (result)
  {
    v1 = result;
    v2 = (uint64_t (*)(const __CFString *))dlsym(result, "MGGetBoolAnswer");
    if (v2)
    {
      v3 = v2;
      getMGAnswers_cachedHasSE = v2(CFSTR("0dnM19zBqLw5ZPhIo4GEkg"));
      getMGAnswers_cachedIsInternal = v3(CFSTR("InternalBuild"));
    }
    return (void *)dlclose(v1);
  }
  return result;
}

uint64_t __serviceNotificationHandler_block_invoke()
{
  uint64_t result;

  result = _effacemenNtfHandler;
  if (_effacemenNtfHandler)
    return (*(uint64_t (**)(void))(_effacemenNtfHandler + 16))();
  return result;
}

uint64_t __serviceNotificationHandler_block_invoke_3()
{
  uint64_t result;

  result = _authKeyRevocationNtfHandler;
  if (_authKeyRevocationNtfHandler)
    return (*(uint64_t (**)(void))(_authKeyRevocationNtfHandler + 16))();
  return result;
}

const char *logLine(const char *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  const char *v9;
  tm *v10;
  FILE *v11;
  const char *v12;
  time_t v13;
  char v14[16];
  __int128 v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  if (_logFile)
  {
    v9 = result;
    *(_OWORD *)v14 = 0u;
    v15 = 0u;
    v13 = time(0);
    v10 = localtime(&v13);
    strftime(v14, 0x20uLL, "%F %T (%z)", v10);
    v11 = (FILE *)_logFile;
    v12 = getprogname();
    fprintf(v11, "%s [%s]: ", v14, v12);
    vfprintf((FILE *)_logFile, v9, &a9);
    fputs("\n", (FILE *)_logFile);
    return (const char *)fflush((FILE *)_logFile);
  }
  return result;
}

uint64_t logState(uint64_t result, uint64_t a2)
{
  _DWORD *v3;
  uint64_t i;
  size_t outputStructCnt;
  __int128 outputStruct;
  __int128 v7;
  __int128 v8;
  uint64_t inputStruct;

  if (_logFile)
  {
    v3 = (_DWORD *)result;
    inputStruct = 0x953534563;
    v7 = 0u;
    v8 = 0u;
    outputStruct = 0u;
    outputStructCnt = 48;
    result = IOConnectCallStructMethod(_connect, 0, &inputStruct, 8uLL, &outputStruct, &outputStructCnt);
    if (!(_DWORD)result)
    {
      if (v3)
        fprintf((FILE *)_logFile, "\tuserID        = %u\n", *v3);
      if (a2)
      {
        fwrite("\tseid          = ", 0x11uLL, 1uLL, (FILE *)_logFile);
        for (i = 0; i != 24; ++i)
          fprintf((FILE *)_logFile, "%02x", *(unsigned __int8 *)(a2 + i));
        fputs("\n", (FILE *)_logFile);
      }
      fprintf((FILE *)_logFile, "\tsseKey hash   = %016llx\n", (_QWORD)outputStruct);
      fprintf((FILE *)_logFile, "\tauthRand hash = %016llx\n", *((_QWORD *)&outputStruct + 1));
      fprintf((FILE *)_logFile, "\tsubcounter    = %llu\n", (_QWORD)v7);
      fprintf((FILE *)_logFile, "\tentropy hash  = %016llx\n", *((_QWORD *)&v7 + 1));
      fprintf((FILE *)_logFile, "\tkeybag hash   = %016llx\n", (_QWORD)v8);
      fprintf((FILE *)_logFile, "\tnoPasscodeCnt = %u\n", DWORD2(v8));
      return fflush((FILE *)_logFile);
    }
  }
  return result;
}

void __baaInit_block_invoke()
{
  Class Class;

  if (isRestoreMode_onceToken != -1)
    dispatch_once(&isRestoreMode_onceToken, &__block_literal_global_160);
  if ((isRestoreMode_restoreMode & 1) == 0)
  {
    init();
    if (_hasSSE)
    {
      if (isEntitledForBAA_onceToken != -1)
        dispatch_once(&isEntitledForBAA_onceToken, &__block_literal_global_203);
      if (isEntitledForBAA_entitled == 1)
      {
        if (dlopen("/usr/lib/libAppleSSEExt.dylib", 1))
        {
          Class = objc_getClass("BAASupport");
          _baaSupportClass = (uint64_t)Class;
          if (!Class)
          {
            if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
              __baaInit_block_invoke_cold_2();
            Class = (Class)_baaSupportClass;
          }
          -[objc_class setDelegate:](Class, "setDelegate:", objc_opt_class());
        }
        else if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
        {
          __baaInit_block_invoke_cold_1();
        }
      }
    }
  }
}

void __isEntitledForBAA_block_invoke()
{
  id v0;
  id v1;
  int v2;
  void *v3;
  void *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  const void *v7;
  uint64_t (*v8)(const void *, const __CFString *, _QWORD);
  uint64_t (*v9)(const void *, const __CFString *, _QWORD);
  void *v10;
  void *v11;
  _DWORD v12[2];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v0 = (id)objc_msgSend(MEMORY[0x1E0CB3898], "processInfo");
  v1 = (id)objc_msgSend(v0, "processName");
  v2 = objc_msgSend(v1, "isEqualToString:", CFSTR("nfcd"));

  if (v2)
  {
    isEntitledForBAA_entitled = 1;
  }
  else
  {
    v3 = dlopen("/System/Library/Frameworks/Security.framework/Security", 1);
    if (v3)
    {
      v4 = v3;
      v5 = (uint64_t (*)(_QWORD))dlsym(v3, "SecTaskCreateFromSelf");
      if (v5)
      {
        v6 = v5(*MEMORY[0x1E0C9AE00]);
        if (v6)
        {
          v7 = (const void *)v6;
          v8 = (uint64_t (*)(const void *, const __CFString *, _QWORD))dlsym(v4, "SecTaskCopyValueForEntitlement");
          if (v8)
          {
            v9 = v8;
            v10 = (void *)v8(v7, CFSTR("com.apple.private.applesse.allow"), 0);
            v11 = (void *)v9(v7, CFSTR("com.apple.private.applesse.baa"), 0);
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
            {
              if (objc_msgSend(v10, "BOOLValue"))
              {
                objc_opt_class();
                if ((objc_opt_isKindOfClass() & 1) != 0)
                {
                  if (objc_msgSend(v11, "BOOLValue"))
                    isEntitledForBAA_entitled = 1;
                }
              }
            }

          }
          CFRelease(v7);
        }
      }
      dlclose(v4);
    }
  }
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_DEFAULT))
  {
    v12[0] = 67109120;
    v12[1] = isEntitledForBAA_entitled;
    _os_log_impl(&dword_18FC92000, MEMORY[0x1E0C81028], OS_LOG_TYPE_DEFAULT, "isEntitledForBAA(): entitled = %u", (uint8_t *)v12, 8u);
  }
}

void OUTLINED_FUNCTION_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x30u);
}

void SSEIsFeatureSupported_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEIsFeatureSupported_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEIsFeatureSupported_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEIsFeatureSupported_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetVersion_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetVersion_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetVersion_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetVersion_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getDeviceFeatures_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getDeviceFeatures_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getDeviceFeatures_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getDeviceFeatures_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getDeviceFeatures_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void init_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void init_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void init_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void init_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void init_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetHostChallenge_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetHostChallenge_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetHostChallenge_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetHostChallenge_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetHostChallenge_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_19()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorize_cold_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_19()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_25()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void authorizeWithPIN_cold_26()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEAuthorizeAndSignECommerceBlob()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getCertificatesFromBuffer_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getCertificatesFromBuffer_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getCertificatesFromBuffer_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getCertificatesFromBuffer_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getCertificatesFromBuffer_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getCertificatesFromBuffer_cold_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getCertificatesFromBuffer_cold_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getCertificatesFromBuffer_cold_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEAuthorizeAndSignAPDU()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetActivationTimeout()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEUseEntangledAuthorizationRandom_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEUseEntangledAuthorizationRandom_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAuthorizationRandom()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetEntangledAuthorizationRandom_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetEntangledAuthorizationRandom_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetEntangledAuthorizationRandom_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetEntangledAuthorizationRandom_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetEntangledAuthorizationRandom_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetEntangledAuthorizationRandom_cold_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetEntangledAuthorizationRandom_cold_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetEntangledAuthorizationRandom_cold_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetEntangledAuthorizationRandom_cold_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetEntangledAuthorizationRandom_cold_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetEntangledAuthorizationRandom_cold_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetEntangledAuthorizationRandom_cold_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetEntangledAuthorizationRandom_cold_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEEffaceAuthorizationRandom_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEEffaceAuthorizationRandom_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEEnableOffWristAuthorization_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEEnableOffWristAuthorization_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEEnableOffWristAuthorization_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEIsOffWristAuthorizationEnabled_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEIsOffWristAuthorizationEnabled_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEIsOffWristAuthorizationEnabled_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEIsOffWristAuthorizationEnabled_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSESetBlessedUser()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSESetEffacementNotificationHandler()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetSignedDeviceData_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetSignedDeviceData_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetSignedDeviceData_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetSignedDeviceData_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetSignedDeviceData_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetSignedDeviceData_cold_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetSignedDeviceData_cold_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetSignedDeviceData_cold_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetCertificateExpirationDate_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetCertificateExpirationDate_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetCertificateExpirationDate_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetCertificateExpirationDate_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetCertificate_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetCertificate_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetCertificate_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetCertificate_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEIssueNewCertificate_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEIssueNewCertificate_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEIssueNewCertificate_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSECreateSecureElementACLRequest()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEEvaluateSecureElementACL()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetRosePairingInfo()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, 2u);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void getRosePairingInfo_cold_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAttV2AuthKey_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAttV2AuthKey_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAttV2AuthKey_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAttV2AuthKey_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAttV2AuthKey_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAttV2AuthKey_cold_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAttV2AuthKey_cold_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAttV2AuthKey_cold_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAttV2AuthKey_cold_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAttV2AuthKey_cold_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAttV2AuthKey_cold_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSESetSEPubKey_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSESetSEPubKey_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSESetSEPubKey_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSESetSEPubKey_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSESetSEPubKey_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSESetSEPubKey_cold_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSESetSEPubKey_cold_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, 2u);
  OUTLINED_FUNCTION_4();
}

void SSESetSEPubKey_cold_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAuthKeySharingState_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAuthKeySharingState_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAuthKeySharingState_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAuthKeySharingState_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAuthKeySharingState_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEGetAuthKeySharingState_cold_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSEPerformAuthKeySharing_cold_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void SSESetAuthKeyRevocationNotificationHandler()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void __baaInit_block_invoke_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

void __baaInit_block_invoke_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1(&dword_18FC92000, MEMORY[0x1E0C81028], v0, "AssertMacros: %s (value = 0x%lx), %s file: %s, line: %d\n", v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_4();
}

uint64_t sub_18FE5795C(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, _QWORD *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v17;
  mach_port_t reply_port;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  mach_msg_header_t msg;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v30 = 1;
  v31 = a4;
  v32 = 16777472;
  v33 = a5;
  v34 = *MEMORY[0x1E0C804E8];
  v17 = *a3;
  v35 = a2;
  v36 = v17;
  v37 = a5;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v19)
    {
      if (msg.msgh_id == 71)
      {
        v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            v21 = v33;
            if (v33 == v47)
            {
              v20 = 0;
              v22 = v34;
              *a3 = v38;
              v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port)
              v20 = 4294966996;
            else
              v20 = HIDWORD(v31);
          }
        }
        else
        {
          v20 = 4294966996;
        }
      }
      else
      {
        v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_18FE57BB4(mach_port_t a1, unsigned int a2, __int128 *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  mach_msg_header_t msg;
  uint64_t v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v4 = a3[5];
  v19 = a3[4];
  v20 = v4;
  v5 = a3[7];
  v21 = a3[6];
  v22 = v5;
  v6 = a3[1];
  v15 = *a3;
  v16 = v6;
  v7 = a3[3];
  v17 = a3[2];
  v13 = *MEMORY[0x1E0C804E8];
  v14 = a2;
  v18 = v7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    v10 = 4294966995;
    goto LABEL_17;
  }
  v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0)
    goto LABEL_17;
  if (msg.msgh_size != 36)
    goto LABEL_17;
  if (msg.msgh_remote_port)
    goto LABEL_17;
  v10 = v14;
  if (v14)
    goto LABEL_17;
  return v10;
}

uint64_t sub_18FE57D40(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, _QWORD *a9, _DWORD *a10)
{
  mach_port_t reply_port;
  uint64_t v13;
  uint64_t v14;
  int v15;
  mach_msg_header_t msg;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  _BYTE v23[28];
  int v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v18 = 1;
  v19 = a6;
  v20 = 16777472;
  v21 = a7;
  v22 = *MEMORY[0x1E0C804E8];
  *(_DWORD *)v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  v24 = a7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port)
              v14 = 4294966996;
            else
              v14 = HIDWORD(v19);
          }
        }
        else
        {
          v14 = 4294966996;
        }
      }
      else
      {
        v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_18FE57F2C(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v15;
  int v16;
  mach_msg_header_t msg;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if ((_DWORD)v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            v12 = v18;
            if (!v18)
            {
              v15 = v20;
              *a2 = v19;
              *a3 = v15;
              v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port)
            v13 = 1;
          else
            v13 = v18 == 0;
          if (v13)
            v12 = 4294966996;
          else
            v12 = v18;
          goto LABEL_23;
        }
      }
      v12 = 4294966996;
    }
    else
    {
      v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

void sub_18FE580A4(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 + 3804331 * (a1 ^ 0xFA9EF356);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xFB9CCB0B87C5698);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = (535753261 * (&v3 ^ 0xAF40E2F)) ^ (v1 + 325);
  sub_18FE866CC((uint64_t)&v3);
  __asm { BR              X9 }
}

uint64_t sub_18FE581AC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(a1 + 8 * (((((v1 - 1110) | 0x222) ^ 0x38A) * (((v3 ^ v2) & 0x1F) != 6)) ^ v1)))();
}

uint64_t sub_18FE58214@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((1413
                                * ((v3 ^ 0xEF7E7EE) - 4203808 + (v1 & 0x1DEFCFDC) - 246923983 > (int)((v2 + 1766309656) & 0x96B840FF ^ 0xFFFFFF48))) ^ v2)))();
}

uint64_t sub_18FE582B4@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W4>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  int v6;
  char v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  unsigned int v12;

  v10 = a1 - 24;
  v11 = a3 - 1;
  v12 = *(_DWORD *)(*(_QWORD *)(v9 - 0xFB9CCB0B87C5694) + 4 * (a3 + v8)) ^ v6;
  *(_DWORD *)(*(_QWORD *)(v9 - 0xFB9CCB0B87C5694) + 4 * (v4 + v5)) = ((v12 >> (32 - v7)) | (v6
                                                                                              + ((v10 + 541) | 0x141)
                                                                                              - 1021) ^ a2)
                                                                       + v6
                                                                       - ((2
                                                                         * ((v12 >> (32 - v7)) | (v6
                                                                                                + ((v10 + 541) | 0x141)
                                                                                                - 1021) ^ a2)) & 0xBDE1C9E6);
  return (*(uint64_t (**)(void))(a4 + 8 * (((8 * (v11 + v8 >= 0)) | (32 * (v11 + v8 >= 0))) ^ v10)))();
}

void sub_18FE58360()
{
  JUMPOUT(0x18FE582E4);
}

uint64_t sub_18FE58368@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;

  v5 = (((v3 - 925) | 0x482) ^ 0xCD3FE478) + (v1 & 0x65A4FFF2) + (v4 ^ v2 ^ 0xB2D27F66) + 2146279175 < 0x7FFFFFFF;
  return (*(uint64_t (**)(void))(a1 + 8 * ((4 * v5) | (8 * v5) | v3)))();
}

uint64_t sub_18FE583E0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  int v7;

  v7 = (v5 - 517) | 0x120;
  *(_DWORD *)(*(_QWORD *)(v6 - 0xFB9CCB0B87C5694) + 4 * (v1 + v7 + v2 + 1314203054)) = *(_DWORD *)(*(_QWORD *)(v6 - 0xFB9CCB0B87C5694) + 4 * (v3 + v2 + (v7 ^ 0x23Bu)));
  return (*(uint64_t (**)(uint64_t))(a1 + 8 * ((1829 * (v3 + v2 + 408 < v4)) ^ v7)))(1314203054);
}

void sub_18FE58450()
{
  JUMPOUT(0x18FE58410);
}

uint64_t sub_18FE58458@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 - 0xFB9CCB0B87C5694) + 4 * (v4 + v2)) = a1;
  return (*(uint64_t (**)(void))(a2 + 8 * (((v4 + v2 > 0) * (((v3 - 816) | 0x302) + 1053)) ^ v3)))();
}

uint64_t sub_18FE584A0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _QWORD *v5;

  *(_DWORD *)(*v5 + 4 * (v1 + v4 + ((v3 - 181) | 0x87) - 976)) = v2;
  return (*(uint64_t (**)(void))(a1 + 8 * ((2028 * (v1 + v4 - 2 >= 0)) ^ v3)))();
}

void sub_18FE584E4()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  _QWORD *v5;
  _DWORD *v6;
  _BOOL4 v7;

  v7 = *(_DWORD *)(*v5 + 4 * (v0 + v2)) == (v4 ^ (v3 + 108) ^ 0x263);
  *v6 = v1 + v1 * (v2 + v0 - v7) - 1516337960 * (v0 - v7) + 686286172;
}

uint64_t sub_18FE58674(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)a1 - 3804331 * ((-1818215500 - (a1 | 0x93A03BB4) + (a1 | 0x6C5FC44B)) ^ 0x96C1371D);
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E2ABD050 + v1 - 425)
                              + ((1497 * (*(_QWORD *)(a1 + 8) != 0x4F927BF50B0C4CFBLL)) ^ v1)
                              - 1)
                            - 8))();
}

uint64_t sub_18FE5870C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((1448 * (*(_DWORD *)(v2 - 0x4F927BF50B0C4CE3) == 446849184)) ^ v0))
                            - 8))();
}

uint64_t sub_18FE5874C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v2 - 0x4F927BF50B0C4CEBLL) - 341260477;
  v4 = *(_DWORD *)(v2 - 0x4F927BF50B0C4CEFLL) - 300158528;
  v5 = v4 < 0x5DAC02EF;
  v6 = v3 < v4;
  if (v3 < 0x5DAC02EF != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((991 * v6) ^ v0)) - 8))();
}

uint64_t sub_18FE587D8@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2;

  *v2 = a2;
  *(_DWORD *)(result + 4) = -446874731;
  return result;
}

void sub_18FE587EC(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  _BOOL4 v5;

  v1 = 1755732067 * ((650609490 - (a1 | 0x26C78352) + (a1 | 0xD9387CAD)) ^ 0x7FEC176);
  v2 = *a1 + v1;
  v3 = a1[1] ^ v1;
  v5 = (v3 & 0x30000000) == 0x20000000 || (v3 & 0x3F000000) == 117440512;
  __asm { BR              X12 }
}

uint64_t sub_18FE588D0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, char a7, unint64_t *a8, int a9, unint64_t *a10, uint64_t a11, int a12, unsigned int a13)
{
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;

  v18 = *(_QWORD *)(v15 + 16);
  v19 = ((~&a6 & 0x2DB4A035 | &a6 & 0xD24B5FCA) ^ 0xF3721DEE) * a1;
  a8 = &STACK[0x3A51940F6F7F0D28];
  a13 = (v14 ^ 0xB8733635) + v19 - 872546305 + ((2 * v14) & 0xFDBFD65E ^ 0x8D199214);
  a10 = &STACK[0x2887D5897980B3D];
  a11 = v18;
  a7 = v19 ^ 0x99;
  a9 = v17 - v19 + 35;
  a6 = &STACK[0x287B5FB39018A0FE];
  v20 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(v13 + 8 * (v17 - 872)) - 4))(&a6);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * ((1369 * (a12 == v17 + 446848182)) ^ v17)) - 12))(v20);
}

uint64_t sub_18FE589F8()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v2 ^ (1619 * (v1 == 117440512))))
                            - ((v2 + 283) ^ 0xFFFFFFFFFFFFFC6DLL)
                            - 281 * (v2 ^ 0xA2u)))();
}

uint64_t sub_18FE58A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  int v11;
  uint64_t v12;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v12 + 8 * ((94 * (a11 + 4 < a11)) ^ v11)) - 12))(a1, a2);
}

uint64_t sub_18FE58AC0()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1739
                                          * (((((v0 - 1983305957) & 0x7636D9FF) - 1347949045) & (2 * v1) ^ 0x84020706)
                                           + (v1 ^ 0x1DDAF464)
                                           + ((v0 + 508) ^ 0x292D2D83) != 16852738)) ^ v0))
                            - 8))();
}

uint64_t sub_18FE58B40()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * ((126 * (v1 + v2 + 673974301 >= ((2 * (v0 ^ 0x369)) ^ 0x3E6))) ^ v0))
                            - (v0
                             - 377)
                            + 279))();
}

uint64_t sub_18FE58B9C(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((102
                                          * (((v2 - (((a1 - 1533793576) & 0x5B6BD7EE ^ 0x3E9) & v1)) & 0xFFFFFFFC) > v2 + 3)) ^ a1))
                            - 4))();
}

uint64_t sub_18FE58BF4@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(a2 - 3 + (v4 + v3)) = *(_DWORD *)(v2 - 3 + (v4 + v3));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((54 * (v5 != 4)) ^ (a1 - 721))) - (a1 - 877) + 121))();
}

uint64_t sub_18FE58C44()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v0 + v1) | 1) - 96) * (v2 == 0xCA090387)) ^ ((v0 + v1) | 1)))
                            - 8))();
}

uint64_t sub_18FE58C90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  _BOOL4 v8;

  v8 = v4 > 0xE5F90B04;
  *(_BYTE *)(a1 + (v6 - 1145667605)) = *(_BYTE *)(v1 + (v6 - 1145667605));
  if (v8 == v6 - 709004057 < v3)
    v8 = v6 - 709004057 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (int)((49 * !v8) ^ v2)) - (v2 ^ 0x99)))();
}

uint64_t sub_18FE58D0C@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint8x8_t a3@<D0>)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;

  v8 = a1 - 290;
  a3.i32[0] = *(_DWORD *)(a2 + (v8 & 0xFFFFFEE7) + (unint64_t)v6);
  *(_DWORD *)(a2 - 3 + v3 + v4 + ((v8 | 0x118) ^ 0x164u) - 125) = vmovn_s16((int16x8_t)vmovl_u8(a3)).u32[0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1853 * (v5 != 4)) ^ (v8 | 0x118))) - 4))();
}

uint64_t sub_18FE58D80(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((((((a1 + 425227117) & 0xE6A78FFF) - 559) ^ 0x166) * (v1 == v2)) ^ a1))
                            - 8))();
}

uint64_t sub_18FE58DC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + (v4 + v3)) = *(_BYTE *)(v1 + (v4 + v3));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((225 * (v4 - 1 != v2)) ^ (v5 - 113)))
                            - ((v5 - 736) | 0xB1u)
                            + 431))();
}

uint64_t sub_18FE58E04()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1149
                                          * ((((v0 + 559) ^ (*(_QWORD *)(v1 + 8) == 0x589C7105EC0C7F2ALL)) & 1) == 0)) ^ v0))
                            - 8))();
}

uint64_t sub_18FE58E48@<X0>(int a1@<W8>, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v4 - 0x589C7105EC0C7F2ALL) = a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1417 * (*(_QWORD *)(v5 + 24) != 0x499E23D0EA4735A8)) ^ a1))
                            - 12))();
}

void sub_18FE58E9C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 - 0x499E23D0EA4735A8) = v3;
  *(_DWORD *)(v2 + 32) = v1;
}

uint64_t sub_18FE58F28(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xFB9CCB0B87C5698);
  v4 = v2 - 1903378044;
  v3 = v2 - 1903378044 < 0;
  v5 = 1903378044 - v2;
  if (!v3)
    v5 = v4;
  v1 = (*(_DWORD *)(a1 + 16) ^ (535753261 * (((a1 | 0x79825E86) - a1 + (a1 & 0x867DA179)) ^ 0x737650A9))) - 781;
  return (*((uint64_t (**)(void))*(&off_1E2ABD050 + v1 - 233)
          + ((38
            * ((v5 ^ 0x7E7C7FD7) - 2122088408 + ((v5 << (v1 ^ 0x10)) & 0xFCF8FFAE) >= ((v1 + 781) ^ 0x529u) + 2147483336)) | v1)
          - 1))();
}

uint64_t sub_18FE5903C()
{
  _QWORD *v0;
  unsigned int v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8 * (((*(_DWORD *)(*v0 + 4 * v1) == ((v3 - 38) ^ 0x50F) + 1592844501) * v2) ^ v3)))();
}

uint64_t sub_18FE5907C()
{
  int v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 8 * (v2 - 233))
                              - 8
                              + 8 * ((38 * (v0 - 1 >= ((v2 + 781) ^ 0x529u) + 2147483336)) | v2)))();
}

_DWORD *sub_18FE590C4(_DWORD *result)
{
  int v1;

  *result = v1;
  return result;
}

uint64_t sub_18FE590CC(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 1755732067 * ((a1 & 0x2162CAC3 | ~(a1 | 0x2162CAC3)) ^ 0x5B88E7);
  v2 = *(_DWORD *)a1 ^ v1;
  v3 = *(_DWORD *)(a1 + 20) + v1;
  if (v3 < 0)
    v3 = -v3;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xFB9CCB0B87C5698);
  v6 = v4 - 1903378044;
  v5 = v4 - 1903378044 < 0;
  v7 = 1903378044 - v4;
  if (!v5)
    v7 = v6;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E2ABD050 + v2 - 296) + ((1439 * (v3 >> 5 < v7)) ^ v2)
                                                                       - 1)
                            - 8))();
}

uint64_t sub_18FE59188@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  char v2;
  uint64_t v3;
  unsigned int v4;

  *(_DWORD *)(result + 16) = ((*(_DWORD *)(*(_QWORD *)(v3 - 0xFB9CCB0B87C5694) + 4 * v4) ^ 0x5EF0E4F3u) >> v2) & 1 | a2;
  return result;
}

uint64_t sub_18FE591C0@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 16) = a2;
  return result;
}

uint64_t sub_18FE591C8(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;

  v2 = *(_DWORD *)(*(_QWORD *)a1 - 0xFB9CCB0B87C5698) + 64250136;
  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xFB9CCB0B87C5698) + 64250136;
  v4 = (v2 < -179855468) ^ (v3 < -179855468);
  v5 = v2 > v3;
  if (v4)
    v5 = v2 < -179855468;
  v1 = *(_DWORD *)(a1 + 24) ^ (1374699841 * ((2106847513 - (a1 | 0x7D93F119) + (a1 | 0x826C0EE6)) ^ 0xEF9816EF));
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E2ABD050 + (v1 ^ 0x4B4)) + ((!v5 * (v1 ^ 0x4D2)) ^ v1) - 1) - 4))();
}

uint64_t sub_18FE592B0()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;
  BOOL v6;

  v4 = v1 - 865957372;
  v5 = v4 < -1110062976;
  v6 = v3 - 865957372 < v4;
  if (v5 != v3 - 865957372 < (int)((7 * (v2 ^ 0x4C4)) ^ 0xBDD5CAE8))
    v6 = v5;
  return (*(uint64_t (**)(void))(v0 + 8 * ((321 * ((v2 ^ 0xC5 ^ v6) & 1)) ^ v2 ^ 0x4C5)))();
}

uint64_t sub_18FE59330()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;

  v3 = (v1 - 1462122863) & 0x5726375F;
  if (v2 + 244105604 < 0)
    v4 = v2;
  else
    v4 = (v3 ^ 0xE2E67CA1) - v2;
  return (*(uint64_t (**)(void))(v0 + 8 * ((1147 * ((int)(((v3 + 1091) ^ 0x8E8CC51F) + v4) >= 0)) ^ v3)))();
}

uint64_t sub_18FE593CC()
{
  uint64_t v0;
  unsigned int v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  unsigned int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((((*(_DWORD *)(*v3 + 4 * v5) ^ v1) <= (*(_DWORD *)(*v2 + 4 * v5) ^ v1))
                                          * (((v4 - 668) | 0x43) ^ 0x22)) | v4))
                            - 4))();
}

uint64_t sub_18FE5941C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v3;
  unsigned int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((a2 - 490) ^ 0x72) * (v4 >= a3)) ^ a2)) - 4))();
}

uint64_t sub_18FE59444()
{
  uint64_t v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(v0 + 8 * ((1147 * ((int)(((v2 + 1091) ^ 0x8E8CC51F) + v1) >= 0)) ^ v2)))();
}

uint64_t sub_18FE5947C(uint64_t result)
{
  int v1;
  int v2;

  *(_DWORD *)(result + 8) = v2 - v1 + 621439215;
  return result;
}

uint64_t sub_18FE59494(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(qword_1E2AB8EB8[((506 * (*(_DWORD *)(a2 + 4) == 1066855062)) ^ 0x2F5u) - 1] - 12))();
}

uint64_t sub_18FE594D4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0xE7FFDEED)
                       + 1533228380
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0x1DA);
  return 0;
}

uint64_t sub_18FE5950C()
{
  return 4294925278;
}

void sub_18FE59514(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 ^ (535753261 * ((a1 + 317168069 - 2 * (a1 & 0x12E799C5)) ^ 0x181397EA));
  if (*(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xFB9CCB0B87C5698) - 1903378044 >= 0)
    v3 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xFB9CCB0B87C5698) - 1903378044;
  else
    v3 = 1903378044 - *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xFB9CCB0B87C5698);
  v2 = *(_QWORD *)(a1 + 24);
  if (*(_DWORD *)(v2 - 0xFB9CCB0B87C5698) - 1903378044 >= 0)
    v4 = *(_DWORD *)(v2 - 0xFB9CCB0B87C5698) - 1903378044;
  else
    v4 = 1903378044 - *(_DWORD *)(v2 - 0xFB9CCB0B87C5698);
  v7 = *(_QWORD *)(a1 + 16);
  v6 = (535753261 * ((1240518443 - (&v6 | 0x49F0CF2B) + (&v6 | 0xB60F30D4)) ^ 0xBCFB3EFB)) ^ (v1 - 374);
  sub_18FE866CC((uint64_t)&v6);
  if (v3 >= v4)
    v5 = v4;
  else
    v5 = v3;
  __asm { BR              X15 }
}

uint64_t sub_18FE596C0()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v3 - 1247907248 <= (((v1 - 180) | 0x42) ^ 0x70C4FB21) && v3 - 1247907248 >= v2 - 255525016;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((115 * v5) ^ v1)) - 12))();
}

uint64_t sub_18FE59718()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v2 - 1745113616 > 1394752263 || v2 - 1745113616 < v3 - 752731384;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((v5 * (((v1 + 2) | 4) ^ 0x694)) ^ v1)) - 4))();
}

uint64_t sub_18FE5976C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  int v17;
  _BOOL4 v19;

  v14 = (v8 + 1944078331) & 0x8C1FB7FE;
  v15 = 4 * (int)(v9 + v12 + v14 + 233 - 1127);
  v16 = v4 + v11 + (*(_DWORD *)(*(_QWORD *)(a3 - 0xFB9CCB0B87C5694) + v15) ^ v13);
  *(_DWORD *)(*(_QWORD *)(a1 - 0xFB9CCB0B87C5694) + v15) = v16 + v13 - (v10 & (2 * v16));
  v17 = v12 + 1 + v5;
  v19 = v17 > v6 || v17 < v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((250 * v19) ^ v14)) - 4))();
}

uint64_t sub_18FE59844()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((v1 != 0x433AC75D4B4ECD1ALL) * ((v2 + 56727679) & 0xFC9E675F ^ 0x457)) ^ v2)))();
}

void sub_18FE5988C(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  *(_DWORD *)(*(_QWORD *)(a1 - 0xFB9CCB0B87C5694) + 4 * (v6 + v4)) = v2
                                                                       - ((((v3 - 33) ^ 0x6962618A) + 2 * v2) & v5)
                                                                       + 329390041;
  *(_DWORD *)(a1 - 0xFB9CCB0B87C5698) = (((v6 + 1 + v4) * (v1 - 1516337960)) ^ 0x71FFFEFF)
                                        - 9224323
                                        + ((2 * (v6 + 1 + v4) * (v1 - 1516337960)) & 0xE3FFFDFE);
}

void sub_18FE59B38(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v1 = 1374699841 * (a1 ^ 0x6DF41809);
  v2 = *(_DWORD *)a1 + v1;
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_DWORD *)(a1 + 4) - v1;
  v7 = 1225351577 * ((((2 * &v8) | 0xF0503E52) - &v8 + 131588311) ^ 0xDBB2C73F);
  v12 = (*(_DWORD *)(a1 + 56) - v1 - ((2 * (*(_DWORD *)(a1 + 56) - v1) + 868470968) & 0x2B78C952) - 274838267) ^ v7;
  v15 = v5;
  v13 = v5;
  v11 = v4;
  v8 = v3;
  v9 = v7 ^ (v2 + 368399949);
  v10 = -1895158271 * v6 - v7 + 765964110;
  sub_18FE973F8((uint64_t)&v8);
  __asm { BR              X8 }
}

uint64_t sub_18FE59CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, char a13, unsigned int a14, uint64_t a15, int a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char v21;
  int v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v23 = *(_BYTE *)(v16 + 24) + v21;
  v24 = 1759421093 * ((-2 - ((~&a11 | 0xACA6FB0B) + (&a11 | 0x535904F4))) ^ 0x1FDB4B5F);
  a12 = &STACK[0x3F786DCCE8121A21];
  a14 = v24
      + ((((v19 - 2090741694) & 0x7C9E2FFF ^ 0x424ABF6D) * v22 - 1351057269) ^ 0xEFBF917F)
      + ((2 * (((v19 - 2090741694) & 0x7C9E2FFF ^ 0x424ABF6D) * v22 - 1351057269)) & 0xDF7F22FE)
      + 2144370608;
  a13 = ((v23 ^ 0xE7) + ((2 * v23) & 0xDA ^ 0x10) - 8) ^ (-91
                                                        * ((-2
                                                          - ((~&a11 | 0xB)
                                                           + (&a11 | 0xF4))) ^ 0x5F));
  a16 = v19 - v24 - 9;
  a15 = v20;
  sub_18FE7933C((uint64_t)&a11);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * ((699 * (a11 == v17)) ^ v19))
                                                                                       - 8))(v25, v26, v27, v28, v29, v30);
}

uint64_t sub_18FE59DC0()
{
  uint64_t v0;
  int v1;
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((((v2 - 610270001) & 0x245FFAEE ^ 0xE8)
                                          * ((v1 - 639506342) < 0xFFFFFFFE)) ^ v2))
                            - 7 * (v2 ^ 0x17F)
                            + 619))();
}

uint64_t sub_18FE59E20@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  a4 = (v10 - 126) ^ (1374699841 * ((&a4 & 0x20E602A9 | ~(&a4 | 0x20E602A9)) ^ 0xB2EDE55F));
  a6 = a1;
  a7 = a3;
  v11 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(v8 + 8 * (int)(v10 & 0xB167DCB9)) - 4))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((249 * (a5 != v7 + 38 * (((v10 - 623) | 0xE4) ^ 0xE2) - 228)) ^ v10)))(v11);
}

uint64_t sub_18FE59ECC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  _DWORD v6[2];
  uint64_t v7;

  v6[1] = v4 + 535753261 * ((v6 & 0xF52E7273 | ~(v6 | 0xF52E7273)) ^ 0x2583A3) + 265;
  v7 = a1;
  result = ((uint64_t (*)(_DWORD *))(*(_QWORD *)(v3 + 8 * (v4 ^ 0x3D)) - 12))(v6);
  *(_DWORD *)(v1 + 8) = v2;
  return result;
}

void sub_18FE59FA8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X8 }
}

uint64_t sub_18FE5A034(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((945 * (**(_BYTE **)(a2 + 8) == 0)) ^ 0x82u)) - 8))();
}

uint64_t sub_18FE5A060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  *(_QWORD *)(*(_QWORD *)(a17 + 96) + 504) = v19 + 1;
  *(_DWORD *)(*(_QWORD *)(a17 + 96) + 496) = a19 - 1;
  v22 = 3804331 * ((2 * ((v21 - 152) & 0x2B610000) - (v21 - 152) - 727777283) ^ 0x2E000CAB);
  *(_DWORD *)(v21 - 136) = v22 + 432186149;
  *(_DWORD *)(v21 - 152) = v22 ^ 0x45E0925B;
  *(_QWORD *)(v21 - 144) = v21 + 0x1A8FA111108FB226;
  v23 = sub_18FE7EAE0(v21 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8
                                                      * ((598
                                                        * (a19
                                                         + 1083655531
                                                         + ((2 * (*(_DWORD *)(v21 - 184) & 0x3F)) ^ 2)
                                                         + (*(_DWORD *)(v21 - 184) & 0x3F ^ 0x7FD1CFBEu) < 0xFFFFFFC0)) ^ 0x4A1u))
                                          - 8))(v23);
}

uint64_t sub_18FE5A258(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;

  v12 = v8 - 2144456638;
  if (v12 <= 0x40)
    v12 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((((((a4 - 1099) | 0x429) - 913) ^ 0x41) * (a8 - v9 - v10 + v12 > 0xE)) ^ a4))
                            - 8))();
}

uint64_t sub_18FE5A2D8(int a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  unsigned int v15;

  v14 = v9 + v8;
  v15 = v14 + v10 + (a1 ^ 0x4B1);
  if (v15 <= 0x40)
    v15 = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8 * ((777 * (a8 - v14 >= v12 + v11 + ((a1 - 3) ^ (a8 - 147)) + v15)) ^ a1))
                            - 12))();
}

uint64_t sub_18FE5A330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  return ((uint64_t (*)(void))(*(_QWORD *)(v22
                                        + 8
                                        * ((13
                                          * ((v20 + v19 + 1064)
                                           + v23
                                           - 252
                                           + (a19 ^ (v21 + 1224) ^ (v21 + 408355800) & 0xE7A8FFBB ^ 0xFFFFFFFFFFFFFE8BLL) < 0x10)) ^ v21))
                            - 12))();
}

uint64_t sub_18FE5A394@<X0>(int8x16_t *a1@<X2>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int8x16_t v7;
  int8x16_t v8;

  v7.i64[0] = 0xEEEEEEEEEEEEEEEELL;
  v7.i64[1] = 0xEEEEEEEEEEEEEEEELL;
  v8.i64[0] = 0xF7F7F7F7F7F7F7F7;
  v8.i64[1] = 0xF7F7F7F7F7F7F7F7;
  *(int8x16_t *)(v4 + (v2 + a2)) = vaddq_s8(vsubq_s8(*a1, vandq_s8(vaddq_s8(*a1, *a1), v7)), v8);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((((v5 - 24) + 0x1FFFFFAABLL) & (v3 + 1)) != 16) * ((v5 - 1221) ^ 0x80)) | (v5 - 24))))();
}

void sub_18FE5A404()
{
  JUMPOUT(0x18FE5A3CCLL);
}

uint64_t sub_18FE5A40C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v0 + 913) ^ 0x5D9) * (v1 == v2)) ^ v0))
                            - (v0 - 103)
                            + 37))();
}

uint64_t sub_18FE5A440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int32x4_t a35,int32x4_t a36,int32x4_t a37,int32x4_t a38)
{
  int v38;
  unsigned int v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(__n128, __n128, __n128, __n128, __n128, __n128);
  int v47;
  const char *v48;
  __n128 v49;
  __n128 v50;
  __n128 v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  uint8x16_t v61;
  uint16x8_t v62;
  int8x16_t v63;
  int8x16_t v64;
  uint16x8_t v65;
  int8x16_t v66;
  int8x16_t v67;
  uint8x16_t v68;
  uint16x8_t v69;
  uint16x8_t v70;
  uint8x16_t v71;
  int8x16_t v74;
  int8x16_t v79;
  int32x4_t v80;
  int32x4_t v81;
  int32x4_t v82;
  int32x4_t v83;
  char *v84;
  uint64_t v85;
  int v86;
  char *v87;
  uint8x16_t v89;
  uint16x8_t v90;
  uint16x8_t v91;
  uint8x16_t v92;
  uint8x16_t v97;
  uint16x8_t v98;
  uint16x8_t v99;
  int32x4_t v100;
  int32x4_t v101;
  int32x4_t v102;
  int32x4_t v103;
  uint64_t v104;
  _DWORD *v105;
  int v106;
  uint64_t v107;
  int v108;
  int v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int8x16x4_t v114;
  int8x16x4_t v115;

  v46 = (uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v43 + 8 * v38) - 12);
  LODWORD(v113) = HIDWORD(a18) + 781359426;
  v47 = a6 ^ (a6 - 110);
  v48 = (const char *)(v45 - 252);
  v49.n128_u64[0] = 0xF7F7F7F7F7F7F7F7;
  v49.n128_u64[1] = 0xF7F7F7F7F7F7F7F7;
  v50 = (__n128)vdupq_n_s32(0x1AA260B3u);
  v51 = (__n128)vdupq_n_s32(0x1AA260A0u);
  a29 = v44 - 16;
  HIDWORD(v112) = -51844933;
  v52 = (__n128)vdupq_n_s32(0x1AA260A9u);
  HIDWORD(a21) = -1876909943;
  v53.n128_u64[0] = 0xEEEEEEEEEEEEEEEELL;
  v53.n128_u64[1] = 0xEEEEEEEEEEEEEEEELL;
  v54.n128_u64[0] = 0xF8F8F8F8F8F8F8F8;
  v54.n128_u64[1] = 0xF8F8F8F8F8F8F8F8;
  v55 = *(unsigned int *)(v45 - 180);
  v56 = *(_DWORD *)(v45 - 176);
  v57 = *(_DWORD *)(v45 - 172);
  v58 = *(_DWORD *)(v45 - 168);
  HIDWORD(a27) = *(_DWORD *)(v45 - 180);
  LODWORD(a28) = v57;
  LODWORD(v112) = *(unsigned __int8 *)(v45 - 156) ^ 0x63;
  v59 = *(_BYTE *)(v45 - 156) ^ 0x63;
  if (v59 == 2)
  {
    HIDWORD(v113) = v56;
    LODWORD(a26) = v58;
    v115 = vld4q_s8(v48);
    LODWORD(a23) = *(_DWORD *)(v45 - 164);
    v89 = (uint8x16_t)veorq_s8(v115.val[0], (int8x16_t)v49);
    v90 = vmovl_u8(*(uint8x8_t *)v89.i8);
    v91 = vmovl_high_u8(v89);
    v92 = (uint8x16_t)veorq_s8(v115.val[1], (int8x16_t)v49);
    _Q23 = vmovl_u8(*(uint8x8_t *)v92.i8);
    _Q22 = vmovl_high_u8(v92);
    __asm
    {
      SHLL2           V24.4S, V22.8H, #0x10
      SHLL2           V25.4S, V23.8H, #0x10
    }
    v97 = (uint8x16_t)veorq_s8(v115.val[2], (int8x16_t)v49);
    v98 = vmovl_high_u8(v97);
    v99 = vmovl_u8(*(uint8x8_t *)v97.i8);
    v115.val[0] = veorq_s8(v115.val[3], (int8x16_t)v49);
    v115.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v115.val[0]);
    v115.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v115.val[1]);
    v115.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v115.val[1].i8);
    v115.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v115.val[0].i8);
    v115.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v115.val[0]);
    v115.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v115.val[0].i8);
    v100 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q23.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v99.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v90.i8), 0x18uLL)), v115.val[0]);
    v101 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q25, (int8x16_t)vshll_high_n_u16(v99, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v90), 0x18uLL)), v115.val[3]);
    v102 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v98.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v91.i8), 0x18uLL)), v115.val[1]);
    v103 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v98, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v91), 0x18uLL)), v115.val[2]);
    v115.val[0] = veorq_s8(vandq_s8((int8x16_t)v100, (int8x16_t)v50), (int8x16_t)(*(_OWORD *)v115.val & __PAIR128__(0xFFFFFF13FFFFFF13, 0xFFFFFF13FFFFFF13)));
    v115.val[3] = veorq_s8(vandq_s8((int8x16_t)v101, (int8x16_t)v50), (int8x16_t)(*(_OWORD *)&v115.val[3] & __PAIR128__(0xFFFFFF13FFFFFF13, 0xFFFFFF13FFFFFF13)));
    v115.val[1] = veorq_s8(vandq_s8((int8x16_t)v102, (int8x16_t)v50), (int8x16_t)(*(_OWORD *)&v115.val[1] & __PAIR128__(0xFFFFFF13FFFFFF13, 0xFFFFFF13FFFFFF13)));
    v115.val[2] = veorq_s8(vandq_s8((int8x16_t)v103, (int8x16_t)v50), (int8x16_t)(*(_OWORD *)&v115.val[2] & __PAIR128__(0xFFFFFF13FFFFFF13, 0xFFFFFF13FFFFFF13)));
    a37 = vaddq_s32(vsubq_s32(v102, vaddq_s32((int32x4_t)v115.val[1], (int32x4_t)v115.val[1])), (int32x4_t)v51);
    a38 = vaddq_s32(vsubq_s32(v103, vaddq_s32((int32x4_t)v115.val[2], (int32x4_t)v115.val[2])), (int32x4_t)v51);
    a35 = vaddq_s32(vsubq_s32(v100, vaddq_s32((int32x4_t)v115.val[0], (int32x4_t)v115.val[0])), (int32x4_t)v51);
    a36 = vaddq_s32(vsubq_s32(v101, vaddq_s32((int32x4_t)v115.val[3], (int32x4_t)v115.val[3])), (int32x4_t)v51);
    v104 = v47 ^ 0x41Du;
    v105 = (_DWORD *)&a35 + v41 + 11081929;
    v106 = *(v105 - 8) ^ *((_DWORD *)&a35 + v41 + v104 + 11080763);
    v107 = *(v105 - 16);
    v108 = v107 ^ *(v105 - 14) ^ (v106 + v40 - ((2 * v106) & 0x3544C140));
    HIDWORD(v110) = v108 ^ v40;
    LODWORD(v110) = v108;
    v109 = v110 >> 31;
    v111 = (2 * v109) & 0x3544C140;
    *v105 = v109 + v40 - v111;
    return ((uint64_t (*)(uint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * ((1053 * (v44 == 11081866)) ^ v47)) - 8))(v55, v46, a3, 1848214488, 0xFFFFFFFFLL, v111, v104, v107, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a5,
             a21,
             a22,
             a23,
             v112,
             v113,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34);
  }
  else if (v59 == 1)
  {
    HIDWORD(v113) = v56;
    LODWORD(a26) = v58;
    v114 = vld4q_s8(v48);
    v60 = a7 + a6 + 77;
    v61 = (uint8x16_t)veorq_s8(v114.val[0], (int8x16_t)v49);
    v62 = vmovl_u8(*(uint8x8_t *)v61.i8);
    v63 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v62.i8);
    v64 = (int8x16_t)vmovl_high_u16(v62);
    v65 = vmovl_high_u8(v61);
    v66 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v65.i8);
    v67 = (int8x16_t)vmovl_high_u16(v65);
    v68 = (uint8x16_t)veorq_s8(v114.val[1], (int8x16_t)v49);
    v69 = vmovl_high_u8(v68);
    v70 = vmovl_u8(*(uint8x8_t *)v68.i8);
    v71 = (uint8x16_t)veorq_s8(v114.val[2], (int8x16_t)v49);
    _Q27 = (int8x16_t)vmovl_high_u8(v71);
    _Q26 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v71.i8);
    v74 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    v79 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q27.i8, 0x10uLL);
    __asm { SHLL2           V27.4S, V27.8H, #0x10 }
    v114.val[0] = veorq_s8(v114.val[3], (int8x16_t)v49);
    v114.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v114.val[0]);
    v114.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v114.val[1]);
    v114.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v114.val[0].i8);
    v114.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v114.val[0]);
    v114.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v114.val[0].i8), 0x18uLL), v74), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v70.i8, 8uLL), v63));
    v114.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v114.val[3], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v70, 8uLL), v64));
    v114.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v114.val[1].i8), 0x18uLL), v79), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v69.i8, 8uLL), v66));
    v114.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v114.val[2], 0x18uLL), _Q27), vorrq_s8((int8x16_t)vshll_high_n_u16(v69, 8uLL), v67));
    v80 = (int32x4_t)veorq_s8(vandq_s8(v114.val[0], (int8x16_t)v52), (int8x16_t)(*(_OWORD *)&v63 & __PAIR128__(0xFFFFFF09FFFFFF09, 0xFFFFFF09FFFFFF09)));
    v81 = (int32x4_t)veorq_s8(vandq_s8(v114.val[3], (int8x16_t)v52), (int8x16_t)(*(_OWORD *)&v64 & __PAIR128__(0xFFFFFF09FFFFFF09, 0xFFFFFF09FFFFFF09)));
    v82 = (int32x4_t)veorq_s8(vandq_s8(v114.val[1], (int8x16_t)v52), (int8x16_t)(*(_OWORD *)&v66 & __PAIR128__(0xFFFFFF09FFFFFF09, 0xFFFFFF09FFFFFF09)));
    v83 = (int32x4_t)veorq_s8(vandq_s8(v114.val[2], (int8x16_t)v52), (int8x16_t)(*(_OWORD *)&v67 & __PAIR128__(0xFFFFFF09FFFFFF09, 0xFFFFFF09FFFFFF09)));
    a37 = vaddq_s32(vsubq_s32((int32x4_t)v114.val[1], vaddq_s32(v82, v82)), (int32x4_t)v51);
    a38 = vaddq_s32(vsubq_s32((int32x4_t)v114.val[2], vaddq_s32(v83, v83)), (int32x4_t)v51);
    a35 = vaddq_s32(vsubq_s32((int32x4_t)v114.val[0], vaddq_s32(v80, v80)), (int32x4_t)v51);
    a36 = vaddq_s32(vsubq_s32((int32x4_t)v114.val[3], vaddq_s32(v81, v81)), (int32x4_t)v51);
    v84 = (char *)*(&off_1E2ABD050 + a7 + a6 - 4) - 8;
    v85 = (uint64_t)*(&off_1E2ABD050 + v60 - 59);
    v86 = (v55 ^ v39)
        - 1894502684
        + (((v60 + 862) ^ (v39 - 1059) ^ v58) & (v56 ^ 0xDC31BB17) | (v56 ^ v39) & (v57 ^ v39))
        + *(_DWORD *)(v85 + 4 * (a29 + v41))
        + (a35.i32[(v84[a29 + v41] - 107)] ^ v40);
    v87 = (char *)*(&off_1E2ABD050 + v60 - 131) - 4;
    return ((uint64_t (*)(_QWORD, uint64_t (**)(int, int, int, int, int, int, int, int, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * ((1229 * (a29 + 1 == v44)) ^ v60)) - 12))(((v86 + v39 - (v42 & (2 * v86))) ^ v39) << (v87[a29 + v41] - 87), &off_1E2ABD050, 56563703, 2400464612, 0xFFFFFFFFLL, v84, v85, v87, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a5,
             a21,
             a22,
             v46,
             v112,
             v113,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34);
  }
  else
  {
    *(_DWORD *)(v45 - 180) = (v55 ^ v39)
                           + (HIDWORD(a27) ^ v39)
                           + v39
                           - (v42 & (2 * ((v55 ^ v39) + (HIDWORD(a27) ^ v39))));
    *(_DWORD *)(v45 - 176) = 2 * (v56 ^ v39) + v39 - (v42 & (4 * (v56 ^ v39)));
    *(_DWORD *)(v45 - 172) = (v57 ^ v39) + (a28 ^ v39) + v39 - (v42 & (2 * ((v57 ^ v39) + (a28 ^ v39))));
    *(_DWORD *)(v45 - 168) = 2 * (v58 ^ v39) + v39 - (v42 & (4 * (v58 ^ v39)));
    a30 = 0;
    return v46(v49, v50, v51, v52, v53, v54);
  }
}

uint64_t sub_18FE5B084(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25)
{
  uint64_t v25;
  _BOOL4 v26;

  if (a25 < a4 != a20 + 737600998 < a4)
    v26 = a20 + 737600998 < a4;
  else
    v26 = a20 + 737600998 > a25;
  return ((uint64_t (*)(void))(*(_QWORD *)(v25 + 8 * ((57 * v26) ^ (a7 + a6 + 1046))) - 8))();
}

uint64_t sub_18FE5B0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v25;
  int v26;
  uint64_t v27;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v27
                                                     + 8
                                                     * ((47 * ((a25 & 0xFCA0EFCF ^ 0x416D8A86) + v25 >= v25 + v26)) ^ a8)))(1629233775, 89);
}

uint64_t sub_18FE5B150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  return (*(uint64_t (**)(void))(v24
                              + 8
                              * (((~a19 + v22 - v23 >= ((a6 + a8 - 1546) ^ 0xFCA0E89BuLL))
                                * ((a22 | 0x6C804802) ^ (a6 + 10))) ^ a8)))();
}

uint64_t sub_18FE5B1AC(double a1, double a2, double a3, double a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v13;
  int8x16_t *v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;

  *v14 = vaddq_s8(vaddq_s8(*(int8x16_t *)(a9 + (v13 + v17)), a6), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(a9 + (v13 + v17)), *(int8x16_t *)(a9 + (v13 + v17))), a5)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * (((((a13 + v15 - 114) | v19) != 136) * v16) ^ (a13 + v15 + 774)))
                            - 12))();
}

uint64_t sub_18FE5B210@<X0>(uint64_t a1@<X2>, char a2@<W4>, int a3@<W6>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(v6 + a4) = *(_BYTE *)(a1 + (v5 + v7))
                      + (a2 ^ (2 * *(_BYTE *)(a1 + (v5 + v7))) | 0x11)
                      - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((254 * (a4 == 63)) ^ (a3 + v4 + 756))) - 12))();
}

uint64_t sub_18FE5B26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  _BOOL4 v24;

  v22 = v20 - 457 + v19 + 435949741;
  v23 = ((a19 + 479708294) < 0x5C2EAF1C) ^ (v22 < 0x5C2EAF1C);
  v24 = v22 < a19 + 479708294;
  if (v23)
    v24 = (a19 + 479708294) < 0x5C2EAF1C;
  return ((uint64_t (*)(void))(*(_QWORD *)(v21 + 8 * ((14 * v24) ^ v20)) - 12))();
}

uint64_t sub_18FE5B2DC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  unsigned int v24;

  v21 = a1 - a7 + 69;
  v22 = 1759421093 * ((2 * ((v20 - 152) & 0x41EE7A20) - (v20 - 152) + 1041335771) ^ 0x8D6C358F);
  *(_DWORD *)(v20 - 144) = v22 + a1 + 1464;
  *(_DWORD *)(v20 - 140) = v22 + a19 - 904288262;
  *(_QWORD *)(v20 - 152) = a16;
  v23 = sub_18FE7DA0C(v20 - 152);
  v24 = *(_DWORD *)(v20 - 184) & (v21 ^ 0xFCA0E8B4) ^ (a1 - 60);
  *(_BYTE *)(v20 - 252 + v24) = 119;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * ((1689 * (v24 > 0x37)) ^ a1)) - 12))(v23);
}

uint64_t sub_18FE5B3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((1660
                                          * (((v6 == 63) ^ ((a6 + v7 - 124 + 63) ^ (a6 + 107))) & 1)) ^ (v7 + 132)))
                            - 12))();
}

uint64_t sub_18FE5B414@<X0>(int a1@<W8>)
{
  char v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((1149
                                          * (((v2 ^ v1) ^ ((a1 ^ 0x6B6 ^ (v2 + 213379931) & 0xF34817AF) < 8)) & 1)) ^ v2))
                            - 12))();
}

uint64_t sub_18FE5B468()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 252 + v0 - 662607290) = 0xF7F7F7F7F7F7F7F7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((14
                                               * (((((v2 + 78) & 0xAF) + 59) ^ (((((v2 + 574853198) & 0xDDBC6FAF)
                                                                                                 - 1614) & v1) == 8)) & 1)) ^ (v2 + 574853198) & 0xDDBC6FAF))
                            - 12))();
}

uint64_t sub_18FE5B4E0(double a1)
{
  unsigned __int8 v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(double *)(v3 + v5) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((14 * ((v1 ^ (v4 == v5)) & 1)) ^ v2)) - 12))();
}

uint64_t sub_18FE5B510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * (int)(((((v9 == v8) ^ (v7 ^ (a6 - 65))) & 1)
                                               * (a7 + ((v7 + 874555199) | 0xC880408B) + 826)) ^ v7))
                            - 12))();
}

void sub_18FE5B55C()
{
  JUMPOUT(0x18FE5A4CCLL);
}

uint64_t sub_18FE5B56C@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  unsigned int v12;
  int v13;
  _BOOL4 v14;

  v11 = a2 < v5;
  *(_BYTE *)(v10 - 252 + (v2 + v4)) = *(_BYTE *)(a1 + (v3 + v7))
                                                  - ((2 * *(_BYTE *)(a1 + (v3 + v7))) & 0xEF)
                                                  - 9;
  v12 = v3 + 1 + v6 + (v8 ^ 0x23B);
  v13 = v11 ^ (v12 < v5);
  v14 = v12 < a2;
  if (!v13)
    v11 = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((14 * v11) ^ v8)) - 12))();
}

uint64_t sub_18FE5B5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((v7 - 662607290) < 0x38) * (((a7 + v8 + 384) | 0x34) - 523)) ^ (a7 + v8 + 257))))();
}

uint64_t sub_18FE5B620@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v5 = v3;
  v6 = ((a3 - a2 - 436) ^ (a1 + 335) ^ 0xFFFFFFFFD8816B16) + v3;
  if (v6 <= 0x38)
    v6 = 56;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1601 * (v6 - v5 + 662607290 > 7)) ^ a3)))();
}

uint64_t sub_18FE5B684()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 252 + v2 - 662607290) = 0xF7F7F7F7F7F7F7F7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v0 & 0xFFFFFFFFFFFFFFF8) == 8) * ((v1 + 50) ^ 0x122)) ^ v1))
                            - 12))();
}

uint64_t sub_18FE5B6D4(double a1)
{
  int v1;
  double *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *v2 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 == 0) * v3) ^ v1)) - 12))();
}

uint64_t sub_18FE5B6F8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((949 * (((v0 == v1) ^ (v2 + 76)) & 1)) ^ v2)))();
}

void sub_18FE5B734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  unsigned int v12;
  char v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unint64_t v17;

  v8 = *(unsigned __int8 *)(v7 - 156) ^ 0x63;
  if (v8 == 1)
  {
    v15 = *(_DWORD *)(v7 - 188);
    v14 = *(_DWORD *)(v7 - 184);
    *(_BYTE *)(v7 - 196) = ((8 * v14) ^ 8) - ((16 * v14) & 0xE0) - 9;
    v16 = (v14 >> ((a7 + a6 + 52) ^ 0xB3)) ^ 0xFFFFFF8E;
    *(_BYTE *)(v7 - 195) = v16 - ((2 * v16) & 0xEF) - 9;
    *(_BYTE *)(v7 - 194) = ((v14 >> 13) ^ 0x6A) - ((2 * ((v14 >> 13) ^ 0x6A)) & 0xEF) - 9;
    *(_BYTE *)(v7 - 193) = ((v14 >> 21) ^ 0x69) + (~(2 * ((v14 >> 21) ^ 0x69)) | 0x11) - 8;
    HIDWORD(v17) = v15 ^ 0x1E;
    LODWORD(v17) = v14 ^ 0x60000000;
    *(_BYTE *)(v7 - 192) = (v17 >> 29) - ((2 * (v17 >> 29)) & 0xEF) - 9;
    *(_BYTE *)(v7 - 191) = ((v15 >> 5) ^ 0x9E) - ((2 * ((v15 >> 5) ^ 0x9E)) & 0xEF) - 9;
    *(_BYTE *)(v7 - 190) = ((v15 >> 13) ^ 0xC4) + ((v15 >> 12) & 0xEE ^ 0x77) - 8;
    v12 = (v15 >> 21) ^ 0xFFFFFFCD;
    v13 = ~(2 * v12) | 0x11;
  }
  else
  {
    if (v8 != 2)
      goto LABEL_6;
    v9 = *(_DWORD *)(v7 - 188);
    v10 = *(_DWORD *)(v7 - 184);
    *(_BYTE *)(v7 - 196) = ((v9 >> 21) ^ 0xCD) - ((2 * ((v9 >> 21) ^ 0xCD)) & 0xEF) - 9;
    *(_BYTE *)(v7 - 195) = ((((a6 + 51) & 0xF7) + 14) ^ (v9 >> 13))
                         + (~(2 * ((((a6 + 51) & 0xF7) + 14) ^ (v9 >> 13))) | 0x11)
                         - 8;
    *(_BYTE *)(v7 - 194) = ((v9 >> 5) ^ 0x9E) - ((2 * ((v9 >> 5) ^ 0x9E)) & 0xEF) - 9;
    HIDWORD(v11) = v9 ^ 0x1E;
    LODWORD(v11) = v10 ^ 0x60000000;
    *(_BYTE *)(v7 - 193) = (v11 >> 29) - ((2 * (v11 >> 29)) & 0xEF) - 9;
    *(_BYTE *)(v7 - 192) = ((v10 >> 21) ^ 0x69) + (~(2 * ((v10 >> 21) ^ 0x69)) | 0x11) - 8;
    *(_BYTE *)(v7 - 191) = ((v10 >> 13) ^ 0x6A) + (~(2 * ((v10 >> 13) ^ 0x6A)) | 0x11) - 8;
    *(_BYTE *)(v7 - 190) = ((v10 >> 5) ^ 0x8E) - ((2 * ((v10 >> 5) ^ 0x8E)) & 0xEF) - 9;
    LOBYTE(v12) = (8 * v10) ^ 8;
    v13 = ~(16 * v10) | 0x1F;
  }
  *(_BYTE *)(v7 - 189) = v12 + v13 - 8;
LABEL_6:
  JUMPOUT(0x18FE5A4CCLL);
}

uint64_t sub_18FE5BBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  _BOOL4 v16;

  v13 = *(_DWORD *)(v12 - 252 + ((v10 + v7) & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a5 + (v10 + v7 + 2)) = (BYTE1(v13) ^ 0x44) + ((v13 >> 7) & 0xEE ^ 0x77) - 8;
  v14 = (v13 >> (a7 + ((v9 + 118) | 0x89) - 114)) ^ 0xFFFFFFCE;
  *(_BYTE *)(a5 + (v10 + v7)) = (HIBYTE(v13) ^ 0x23) - ((2 * (HIBYTE(v13) ^ 0x23)) & 0xEF) - 9;
  *(_BYTE *)(a5 + (v10 + v7 + 3)) = v13 ^ 0x1F;
  *(_BYTE *)(a5 + (v10 + v7 + 1)) = v14 + (~(2 * v14) | 0x11) - 8;
  v15 = *(_DWORD *)(v12 - 160) + 1133478404;
  if (v10 + 2096871769 < v8 != v15 < v8)
    v16 = v15 < v8;
  else
    v16 = v10 + 2096871769 < v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((100 * !v16) ^ v9)) - 12))();
}

void sub_18FE5BD9C()
{
  JUMPOUT(0x18FE5BD6CLL);
}

uint64_t sub_18FE5BDA4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X5>, uint64_t a3@<X6>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  *(_DWORD *)(&a31 + a26) = 479088153;
  return ((uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(v31 + 8 * (int)(((5 * (a4 ^ 0x73D) - 1197449344) | 0x44008889) ^ (a2 + 257) ^ (5 * (a4 ^ 0x73D)))) - (((5 * (a4 ^ 0x73D) + 3) | 0x420u) ^ 0x4ADLL)))(479088153, &a31 + a26, a1, 3097517952, 1140885641, a2, a3, 1056, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           &a31 + a26 + 392);
}

uint64_t sub_18FE5BE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  int v25;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * (v21 ^ (108 * (v25 == v22)))) - (v21 ^ 0x268u) - (((v21 - 1532992674) | 0x58008088u) ^ v23)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_18FE5BEC0@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * ((26
                                          * (((a1 - 1066855058) & 0xFFFFFFFC) - a13 != 28 * (a2 ^ 0x6F8) - 1066856546)) ^ a2))
                            - 4))();
}

uint64_t sub_18FE5BF10@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W5>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  int v31;
  uint64_t v32;
  int v33;
  BOOL v35;

  v33 = a4 ^ 0x301;
  v35 = v31 == a1 || a31 - a2 != 673427830;
  return ((uint64_t (*)(void))(4238403715
                            - (v33 ^ (a3 + 1212))
                            + *(_QWORD *)(v32 + 8 * ((29 * (((v33 - 1) ^ v35) & 1)) ^ v33))
                            - 4))();
}

uint64_t sub_18FE5BF7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  int v35;
  uint64_t v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  _BOOL4 v42;

  v37 = a7 + v35;
  v38 = (a7 + v35 - 2) | 2;
  v39 = (a7 + v35 + 1498) | 0x22;
  v40 = v37 + 1283;
  v41 = v38 + a3 + 2077782135;
  v42 = a35 + 1404354435 < v41;
  if ((a35 + 1404354435) < 0xBB6F5B8E != v41 < 0xBB6F5B8E)
    v42 = v41 < 0xBB6F5B8E;
  return ((uint64_t (*)(void))(*(_QWORD *)(v36 + 8 * ((v42 * (v39 - 1650)) ^ v40)) - 12))();
}

uint64_t sub_18FE5C15C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;

  v26 = (v22 ^ 0x351u) - a7 - 849;
  v27 = 628203409 * ((v25 + 240732113 - 2 * ((v25 - 152) & 0xE594869)) ^ 0x8CD1445A);
  *(_DWORD *)(v25 - 136) = v22 - v27 + 772;
  *(_DWORD *)(v25 - 132) = a3 - v27 - 433883541;
  *(_QWORD *)(v25 - 152) = a13;
  *(_QWORD *)(v25 - 144) = a11;
  *(_QWORD *)(v25 - 112) = a22;
  *(_QWORD *)(v25 - 104) = a12;
  *(_QWORD *)(v25 - 128) = a14;
  ((void (*)(uint64_t))*(&off_1E2ABD050 + v22 - 85))(v25 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24 + 8 * ((1402 * (*(_DWORD *)(v25 - 120) == v23)) ^ v22))
                                          - (v26 ^ 0xFCA0E883)))(479088153);
}

uint64_t sub_18FE5C278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  _BOOL4 v36;

  v36 = *(_DWORD *)(a29 + 48 * (v34 + v29)) != 196551272;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * ((v36 | (4 * v36)) ^ v35))
                                                            - (v31 ^ (a6 - 130) ^ 0x86)))(a1, v30, v32);
}

uint64_t sub_18FE5C2D8@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (int)(((a1 + ((v2 - 55841975) & 0xFFF4FCBF) + 463)
                                               * ((a2 ^ 0x3B667C62) == v3 - 213328488)) | v2))
                            - (v2 ^ v4 ^ 0xFCA0E883)))();
}

uint64_t sub_18FE5C344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  uint64_t v29;

  return ((uint64_t (*)(void))(*(_QWORD *)(v29
                                        + 8
                                        * ((583 * ((((v28 + a7) ^ 0xFFFFFFFFFFFFF7DLL) & a28) != 0)) ^ (v28 + a7 + 178)))
                            - ((v28 + a7) ^ 0x8ALL)))();
}

uint64_t sub_18FE5C388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  int v30;
  uint64_t v31;
  int v32;

  return ((uint64_t (*)(void))(*(_QWORD *)(v31
                                        + 8
                                        * (((*(_DWORD *)(a29 + 48 * (v32 + v30) + 36) == v32) * (v29 ^ 0x68E)) ^ v29))
                            - (v29 - 1532)
                            + 126))();
}

uint64_t sub_18FE5C3D0@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>)
{
  int v4;

  if ((a3 - 996572270) <= 0x10 && ((1 << (a3 - 110)) & 0x14109) != 0)
    __asm { BR              X10 }
  return v4 ^ 0xE55D3B7E;
}

uint64_t sub_18FE5C75C(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(qword_1E2AB8EB8[((108 * (*(_DWORD *)(a2 + 4) == 1066855062)) ^ 0x1B4u) - 1] - 8))();
}

uint64_t sub_18FE5C79C(uint64_t a1, uint64_t a2)
{
  char v2;

  if (**(_BYTE **)(a2 + 8))
    v2 = 7;
  else
    v2 = 6;
  *(_BYTE *)(a1 + 88) = v2;
  return 0;
}

uint64_t sub_18FE5C7C0()
{
  return 4294925278;
}

void sub_18FE5C7C8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  __asm { BR              X10 }
}

uint64_t sub_18FE5C858@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1858 * (*(_DWORD *)(v2 - 0x4F927BF50B0C4CE3) == v1 + 446848572)) ^ v1))
                            - 8))();
}

uint64_t sub_18FE5C8A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v1 - 0x4F927BF50B0C4CEBLL) + 689928616;
  v4 = *(_DWORD *)(v1 - 0x4F927BF50B0C4CEFLL) + 731030557;
  v5 = v3 < 0x9B22B54C;
  v6 = v3 > v4;
  if (v5 != v4 < 0x9B22B54C)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v6 * ((v2 - 254) ^ (v2 - 355) ^ 0x391)) ^ v2)) - 8))();
}

uint64_t sub_18FE5C93C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;

  v7 = *(_QWORD *)(v4 - 0x4F927BF50B0C4CFBLL);
  v8 = *(unsigned __int8 *)(v7 + (v3 - 1912814505)) ^ 0xF7;
  v9 = ((*(unsigned __int8 *)(v7 + (v3 - 1912814508)) ^ 0xFFFFFFF7) << 24) | ((*(unsigned __int8 *)(v7 + (v3 - 1912814507)) ^ 0xF7) << 16) | (((-126 * (((v6 + 5) | 0x60) ^ 0x69) + 93) ^ *(unsigned __int8 *)(v7 + (v3 - 1912814506))) << 8) | v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((1020
                                          * (((v9 + v2 - 2 * (v9 & (v2 + 19) ^ v8 & 0x13)) & 0xFFFFFF ^ 0xA260A0)
                                           - (*(_DWORD *)(a1 + 32) ^ v5) == -583743006)) ^ v6))
                            - 12))();
}

uint64_t sub_18FE5CA20@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8 * ((467 * ((a2 & 0x40000000) != ((2 * a1) ^ 0xCD6 ^ (a1 - 1208)))) ^ a1))
                            - 8))();
}

uint64_t sub_18FE5CAD0@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((((a1 ^ 0x386) + 349) * (v3 == v2)) ^ a1)) - 4))();
}

uint64_t sub_18FE5CAF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;
  int v4;

  *(_QWORD *)(*a1 - 0x7C4B0A84482CA58FLL) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((1168 * (*v2 == v3)) | v4)) - 8))();
}

void sub_18FE5CB38()
{
  _DWORD *v0;

  *v0 = -446874731;
}

uint64_t sub_18FE5CBF0@<X0>(_QWORD *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  _DWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(*a1 - 0x7C4B0A84482CA58FLL) = v6 + v5 + 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((1168 * (*v3 == v4)) | (a2 - 137))) - 8))();
}

void sub_18FE5CC4C(uint64_t a1)
{
  _DWORD *v1;
  int v2;
  int v3;

  *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x42847B27D287AD67) = v3;
  *v1 = v2;
  JUMPOUT(0x18FE5CBE8);
}

void sub_18FE5CC6C()
{
  unint64_t v0;
  uint64_t v1;
  _BYTE v2[1208];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = (unint64_t)&v2[qword_1EE1C2010 - qword_1EE1C2060];
  qword_1EE1C2060 = (1209664481 * v0) ^ 0x2DEB88543200F8ELL;
  qword_1EE1C2010 = 1209664481 * (v0 ^ 0x2DEB88543200F8ELL);
  *(_DWORD *)*(&off_1E2ABD050
             + ((-31 * ((qword_1EE1C2010 + qword_1EE1C2060) ^ 0x8E)) ^ byte_19044ED70[byte_19044B770[(-31 * ((qword_1EE1C2010 + qword_1EE1C2060) ^ 0x8E))] ^ 0x52])
             - 144) = 446849184;
  v1 = ((uint64_t (*)(uint64_t, uint64_t))*(&off_1E2ABD050
                                                  + ((-31
                                                                                   * (qword_1EE1C2060 ^ 0x8E ^ qword_1EE1C2010)) ^ byte_19044B570[byte_190447600[(-31 * (qword_1EE1C2060 ^ 0x8E ^ qword_1EE1C2010))] ^ 0x18])
                                                  + 14))(512, 1509315540);
  *(_QWORD *)((char *)*(&off_1E2ABD050
                      + ((-31 * ((qword_1EE1C2010 - qword_1EE1C2060) ^ 0x8E)) ^ byte_19044ED70[byte_19044B770[(-31 * ((qword_1EE1C2010 - qword_1EE1C2060) ^ 0x8E))] ^ 0xB6])
                      - 163)
            - 4) = v1;
  __asm { BR              X8 }
}

void sub_18FE5CE08()
{
  _DWORD *v0;
  int v1;

  *v0 = v1 + 85;
}

uint64_t sub_18FE643E0(uint64_t a1)
{
  unsigned int v1;

  v1 = *(_DWORD *)(a1 + 16) + 1759421093 * ((-746607788 - (a1 | 0xD37FAB54) + (a1 | 0x2C8054AB)) ^ 0x9FFDE4FF);
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E2ABD050 + (int)(v1 - 1229))
                              + (int)((499 * (*(_QWORD *)(a1 + 8) == *(_QWORD *)a1)) ^ v1)
                              - 1)
                            - (v1 ^ 0x4F1)))();
}

uint64_t sub_18FE6446C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  v4 = *(_DWORD *)(v2 - 0xFB9CCB0B87C5698);
  v5 = v4 - 1903378044;
  if (v4 - 1903378044 < 0)
    v5 = 1903378044 - v4;
  *(_DWORD *)(v1 - 0xFB9CCB0B87C5698) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((1250
                                * ((v3 ^ ((v5 ^ 0x3D5EB5FD)
                                                         - 68166089
                                                         + (((v3 ^ 7) + 2059234062) & (2 * v5)) == 961451060)) & 1)) ^ v3)))();
}

uint64_t sub_18FE644FC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  *(_DWORD *)(*(_QWORD *)(v2 - 0xFB9CCB0B87C5694) + 4 * (v5 - 961451061)) = *(_DWORD *)(*(_QWORD *)(v3 - 0xFB9CCB0B87C5694)
                                                                                          + 4 * (v5 - 961451061));
  return (*(uint64_t (**)(void))(a1 + 8 * ((7 * (((v4 - 1) ^ (v5 - 1 == v1)) & 1)) ^ (v4 - 1))))();
}

uint64_t sub_18FE64560@<X0>(uint64_t a1@<X8>)
{
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  int v5;
  int v6;

  *(_DWORD *)(*v2 + 4 * (v6 + v5)) = *(_DWORD *)(*v3 + 4 * (v6 + v5));
  return (*(uint64_t (**)(void))(a1 + 8 * ((7 * ((v4 ^ (v6 - 1 == v1)) & 1)) ^ v4)))();
}

void sub_18FE645A4(uint64_t a1)
{
  int v1;
  unsigned int v2;
  int v4;
  unint64_t *v5;
  unsigned int v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 40)
     - 1224239923 * ((2 * ((a1 ^ 0x6CFE4100) & 0x6997F88A) - (a1 ^ 0x6CFE4100) - 1771567243) ^ 0x825BBA2);
  v2 = 3804331 * ((((&v4 | 0x4AE20B2) ^ 0xFFFFFFFE) - (~&v4 | 0xFB51DF4D)) ^ 0x1CF2C1B);
  v4 = v2 ^ (v1 + 1172345356);
  v6 = v2 + 432186149;
  v5 = &STACK[0x1A8FA111108FB43E];
  sub_18FE7EAE0((uint64_t)&v4);
  __asm { BR              X15 }
}

uint64_t sub_18FE64A18@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, int a3@<W8>)
{
  int v3;
  char v4;
  int v5;
  uint64_t v6;
  int v7;

  v7 = (v3 - 1468) | 0x120;
  *(_BYTE *)(a1 + (v5 + v7 - 426)) = v4;
  *(_BYTE *)(a1 + (a3 - 276236117)) = *(_BYTE *)(a2 + 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8 * ((1712 * ((((v7 - 346) ^ 0xFFFFFFB3) & 0x2878F9AA) == 679016872)) ^ v7))
                            - 4))();
}

uint64_t sub_18FE65D0C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  *(_BYTE *)(a1 + (v7 + a3 + v5 - 78)) = *(_BYTE *)(a2 + (v6 - 679016872));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v4 ^ (1788 * ((v9 + v3 + 337) < 4)))) - 4))();
}

uint64_t sub_18FE65D58@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t (*a24)(uint64_t))
{
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;

  v28 = (v24 - 354) | 8;
  *(_BYTE *)(a1 + (a3 + 2)) = *(_BYTE *)(a2 + (v28 ^ 0xD7870616) + v25);
  v29 = 1759421093 * ((((2 * (v27 - 168)) | 0x41EE18AE) - (v27 - 168) + 1594422185) ^ 0x138ABC03);
  *(_DWORD *)(v27 - 160) = v29 + v28 + 1446;
  *(_DWORD *)(v27 - 156) = v29 + 162566804;
  *(_QWORD *)(v26 + 456) = a23;
  v30 = sub_18FE7DA0C(v27 - 168);
  return a24(v30);
}

uint64_t sub_18FE65DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned int a30)
{
  int v30;
  int v31;
  uint64_t v32;
  _BOOL4 v33;

  v33 = a30 < 0x139DD4E1;
  if (v33 == v30 - 669925800 < ((v31 + 1136180161) & 0xBC4741DB ^ 0x139DD4BA))
    v33 = v30 - 669925800 < a30;
  return ((uint64_t (*)(void))(*(_QWORD *)(v32 + 8 * ((122 * !v33) ^ v31)) - 8))();
}

uint64_t sub_18FE65E68@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned int a28)
{
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  _BOOL4 v35;
  unsigned int v36;
  int v37;
  _BOOL4 v38;

  v35 = v30 < v33;
  *(_BYTE *)(a3 + (a6 + a1)) = (v29 ^ a4)
                                           + *(_BYTE *)(a5 + (v28 + v32))
                                           - ((2 * *(_BYTE *)(a5 + (v28 + v32))) & 0xEF)
                                           - 100;
  v36 = v28 + 1 + v31;
  v37 = v35 ^ (v36 < v33);
  v38 = v36 < a28;
  if (!v37)
    v35 = v38;
  return ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * ((!v35 * a2) ^ v29)) - 8))();
}

uint64_t sub_18FE65EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;

  v59 = 1759421093 * ((((2 * (v58 - 168)) | 0xB70B01D2) - (v58 - 168) + 612007703) ^ 0x68F830BD);
  *(_DWORD *)(v58 - 160) = v59 + v57 + 1434;
  *(_DWORD *)(v58 - 156) = a12 + v59;
  *(_QWORD *)(v55 + 456) = a29;
  v60 = sub_18FE7DA0C(v58 - 168);
  v61 = a55 & 0x3F;
  *(&a46 + (v61 ^ 1)) = 119;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v56
                                                      + 8
                                                      * ((((v61 ^ 1) > ((124 * (v57 ^ 0x59)) ^ 0xCFu))
                                                        * (v57 ^ 0x648)) ^ v57))
                                          - 4))(v60);
}

uint64_t sub_18FE65FDC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((1093 * (((v0 == 63) ^ ((v1 ^ 0xC3) + 32)) & 1)) ^ v1))
                            - 8))();
}

uint64_t sub_18FE6601C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  v3 = (v0 ^ 0x71 ^ (v1 - 1260)) > 7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((8 * v3) | (v3 << 6)) ^ v1)) - 8))();
}

uint64_t sub_18FE6604C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3)
{
  char v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a3 + v4) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((v3 & 0x38) == 8) * ((2 * a1) ^ 0x51F)) ^ (a1 + 734))) - 8))();
}

uint64_t sub_18FE66098@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *v1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v3 == 0) * v2) ^ a1)) - 8))();
}

uint64_t sub_18FE660BC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1475 * (((v2 == v0) ^ v1 ^ 0xB7) & 1)) ^ v1))
                            - ((v1 - 157) ^ 0x53)))();
}

uint64_t sub_18FE66100@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;

  *(_BYTE *)(a1 + v2 + v4) = v3;
  v6 = ((a2 + 12) ^ (unint64_t)(v4 + 44)) + v2 < 0x40;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v6 | (2 * v6) | (a2 + 169))) - 8))();
}

void sub_18FE6613C()
{
  JUMPOUT(0x18FE64F30);
}

uint64_t sub_18FE66158()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * ((241 * (v0 - 1380206569 >= (v2 - 23))) ^ (v2 + 304)))
                                          - 8))(113);
}

uint64_t sub_18FE661A0()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v0;
  v5 = v1 + v0;
  if ((unint64_t)(v5 + 1) > 0x38)
    v6 = v5 + 1;
  else
    v6 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((v3 + 652) | (32
                                                       * (v6 - v4 + 1380206569 < ((v3 + 101) ^ 0xBCuLL)))))
                            - 12))();
}

uint64_t sub_18FE661FC(int a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(a3 + v5 + ((v3 + 218) ^ (unint64_t)(v6 + 386))) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((v4 & 0xFFFFFFFFFFFFFFF8) == 8) * a1) ^ v3)) - 4))();
}

uint64_t sub_18FE6623C(int a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 + (v3 ^ v2)) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v4 == 0) * a1) ^ v1)) - 4))();
}

uint64_t sub_18FE66268()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * (((((v2 ^ (v0 == v1)) & 1) == 0) * (((v2 - 383) | 0x40) ^ 0x6B)) ^ v2))
                            - 8))();
}

uint64_t sub_18FE662A8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  int v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(a1 + a2 + v5) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((unint64_t)(a2 + 1 + v5) < 0x38) * v4) ^ (v2 + 319)))
                            - 8))();
}

void sub_18FE662D8()
{
  JUMPOUT(0x18FE64F30);
}

void sub_18FE66B2C(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (1374699841 * ((-2 - ((a1 | 0xA88133EE) + (~(_DWORD)a1 | 0x577ECC11))) ^ 0x3A8AD418));
  __asm { BR              X8 }
}

uint64_t sub_18FE66BC8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 90)))(200, 2354554103) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((668 * v3) ^ v0)))();
}

uint64_t sub_18FE66C04(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 8 * (v2 - 11)))(a1, 0);
  if ((_DWORD)result == 16)
  {
    v3 = -1031669662;
    goto LABEL_7;
  }
  if ((_DWORD)result == 12)
  {
LABEL_7:
    result = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v2 ^ 0x92)))(a1);
    goto LABEL_8;
  }
  if ((_DWORD)result)
  {
    v3 = 1402658633;
    goto LABEL_7;
  }
  *v5 = a1;
  v3 = 1295345095;
LABEL_8:
  *(_DWORD *)(v1 + 4) = -1853541591 * v3 + 1741229601;
  return result;
}

void sub_18FE66C94(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)a1 - 628203409 * ((a1 & 0x7EE22050 | ~(a1 | 0x7EE22050)) ^ 0x395D39C);
  v2 = *(_QWORD *)(a1 + 8);
  ((void (*)(char *, void (*)()))*(&off_1E2ABD050 + (v1 ^ 0x67E)))((char *)*(&off_1E2ABD050 + v1 - 1644) - 12, sub_18FE97F80);
  __asm { BR              X10 }
}

uint64_t sub_18FE66D44@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((596 * (**(_QWORD **)(v2 + 8 * (a1 ^ 0x49A)) != 0)) ^ a1))
                            - ((a1 + 468) ^ 0x69ALL)))();
}

uint64_t sub_18FE66D80@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 1079)))(v1);
}

void sub_18FE66DAC(uint64_t a1)
{
  int v1;

  v1 = 1178560073 * ((a1 - 2 * (a1 & 0x8314ACD2) - 2095797038) ^ 0xB102AC92);
  __asm { BR              X11 }
}

uint64_t sub_18FE66E68()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((196 * (*v1 != 0)) ^ (v0 | 0x420)))
                            - (((v0 | 0x420u) - 235) ^ 0x37DLL)))();
}

uint64_t sub_18FE66EB8()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  unsigned int *v4;
  int v5;
  uint64_t v6;

  v5 = v0 ^ 0x715;
  v6 = v3(*v4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8 * ((209 * (*v1 == ((233 * (v5 ^ 0x371)) ^ (v5 + 47)))) ^ v5))
                                          - 8))(v6);
}

uint64_t sub_18FE66F04()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t (*v2)(_QWORD);
  unsigned int *v3;
  uint64_t result;

  result = v2(*v3);
  *v1 = 0;
  *(_DWORD *)v0 = 0;
  *(_QWORD *)(v0 + 344) = 0;
  *(_QWORD *)(v0 + 352) = 0;
  *(_DWORD *)(v0 + 360) = 1395792844;
  *(_DWORD *)(v0 + 56) = 946918715;
  return result;
}

uint64_t sub_18FE66F44()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((209 * (*v1 == ((233 * (v0 ^ 0x371)) ^ (v0 + 47)))) ^ v0)) - 8))();
}

void sub_18FE66F80(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BR              X17 }
}

uint64_t sub_18FE670C8(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v2 ^ (425 * (a2 == 0x8E2B3D32)))) - 4))(425, 1590290645);
}

uint64_t sub_18FE67124@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v12 = v9 > 0x2FB40318;
  *(_BYTE *)(a3 + (a2 - 1590290645)) = *(_BYTE *)(v3 + (a2 - 1590290645)) ^ *(_BYTE *)(v6 + ((a2 - 1590290645) & 0xFLL)) ^ *(_BYTE *)(v4 + ((a2 - 1590290645) & 0xFLL)) ^ *(_BYTE *)(v5 + ((a2 - 1590290645) & 0xFLL)) ^ (97 * ((a2 + 43) & 0xF)) ^ 0xF7;
  v13 = ((v7 - 4) ^ 0x718210F7) + a2;
  v14 = v12 ^ (v13 < v8 + 1252);
  v15 = v13 < v10;
  if (!v14)
    v12 = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((!v12 * a1) ^ v7)) - 4))();
}

uint64_t sub_18FE671C4(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((832
                                          * (((((2 * a2) & 0xFFDFB79E ^ 0x1C563204) + (a2 ^ 0x71C4E6FD) + 1946150903 == 1945093062) ^ (v2 - 93) ^ 0xE7) & 1)) ^ v2))
                            - 4))();
}

uint64_t sub_18FE67234(int a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1459
                                          * (a2 + a1 + ((a4 + 115015420) & 0xF925072D) + 1057840 - 1836 >= ((a4 + 1726177980) & 0x991C9CCF ^ 0x87))) ^ a4))
                            - 12))();
}

uint64_t sub_18FE672A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((83 * ((v8 & 0xFFFFFFF0) != ((a8 + 49) | 8) - 1058040)) ^ a8))
                            - 4))();
}

uint64_t sub_18FE672EC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BOOL4 v20;

  v10 = (a2 + a1 + a3);
  v11 = v10 + v5;
  v12 = v10 + a5;
  v13 = (a2 + a1) & 0xF;
  v14 = v13 + v8 - v12;
  v15 = (v13 | v6) - v12;
  v16 = (v13 | v7) - v12;
  v20 = (unint64_t)(v11 - v12) < 0x10 || v14 < 0x10 || v15 < 0x10 || v16 < 0x10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (int)((((a4 + 1201456805) & 0xB8633FBF ^ 0x6E6) * v20) ^ a4)) - 12))();
}

uint64_t sub_18FE67368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                + 8
                                                                                * ((11
                                                                                  * (v5 >= ((19 * ((a5 + 314) ^ 0x233)) ^ 0x3B3u))) ^ (a5 + 314)))
                                                                    - 4))(a1, a2, a3, 0);
}

uint64_t sub_18FE673A8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W5>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  int v44;
  unsigned int v45;
  int8x16_t v46;
  int8x16_t v47;
  uint64_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16x4_t v53;
  int8x16x4_t v54;

  v53.val[1].i64[0] = (v43 + 7) & 0xF;
  v53.val[1].i64[1] = (v43 + 6) & 0xF;
  v53.val[2].i64[0] = (v43 + 5) & 0xF;
  v53.val[2].i64[1] = (v43 + 4) & 0xF;
  v53.val[3].i64[0] = (v43 + 3) & 0xF;
  v53.val[3].i64[1] = (v43 + 2) & 0xF;
  v54.val[0].i64[0] = (v43 + 1) & 0xF;
  v54.val[0].i64[1] = v43 & 0xF;
  v54.val[1].i64[0] = (v43 - 1) & 0xF;
  v54.val[1].i64[1] = (v43 + 14) & 0xF;
  v45 = a2 + a1 + a3;
  v54.val[2].i64[0] = (v43 + 13) & 0xF;
  v54.val[2].i64[1] = (v43 + 12) & 0xF;
  v54.val[3].i64[0] = (v43 + 11) & 0xF;
  v54.val[3].i64[1] = (v43 + 10) & 0xF;
  v46.i64[0] = 0x6161616161616161;
  v46.i64[1] = 0x6161616161616161;
  v47.i64[0] = 0xF7F7F7F7F7F7F7F7;
  v47.i64[1] = 0xF7F7F7F7F7F7F7F7;
  v48 = ((((a4 ^ 0x14F) - 313) | 0x80) ^ 0x29B) & v45;
  v53.val[0].i64[0] = v48;
  v53.val[0].i64[1] = (v43 + 8) & 0xF;
  v49.i64[0] = vqtbl4q_s8(v53, (int8x16_t)xmmword_190443D40).u64[0];
  v49.i64[1] = vqtbl4q_s8(v54, (int8x16_t)xmmword_190443D40).u64[0];
  v50 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v39 - 15 + v45), *(int8x16_t *)(v42 + v48 - 15)), veorq_s8(*(int8x16_t *)(v40 + v48 - 15), *(int8x16_t *)(v41 + v48 - 15))));
  v51 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v50, v50, 8uLL), v47), vmulq_s8(v49, v46)));
  *(int8x16_t *)(a5 - 15 + v45) = vextq_s8(v51, v51, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(a39 + 8 * ((1424 * ((v44 & 0xFFFFFFF0) == 16)) ^ a4 ^ 0x14F)) - 12))();
}

void sub_18FE67520()
{
  JUMPOUT(0x18FE67494);
}

uint64_t sub_18FE6752C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (((v5 ^ 0x2D2) * (v4 == a4)) ^ v5))
                                                            - ((v5 - 440) ^ 0xD0)))(a1, a2, a3);
}

uint64_t sub_18FE67568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((734 * (((((a8 - 215) | 0x728) - 1829) & v8) != ((19 * (a8 ^ 0xED)) ^ 0x3A3))) ^ a8))
                            - 4))();
}

uint64_t sub_18FE675BC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  int v45;
  char v46;
  int v47;
  uint64_t v48;
  int v49;
  char v50;
  uint64_t v51;
  int8x16x4_t v53;

  *(_DWORD *)(v48 - 160) = v39;
  *(_DWORD *)(v48 - 144) = v47;
  *(_QWORD *)(v48 - 128) = a5 - 7;
  *(_QWORD *)(v48 - 120) = v40 - 7;
  *(_DWORD *)(v48 - 152) = v47 & 0xFFFFFFF8;
  *(_DWORD *)(v48 - 136) = 8 - (v47 & 0xFFFFFFF8);
  v49 = -a4;
  v50 = v46 + a2 + a1;
  v51 = (a2 + a1 + a3 + v49);
  v53.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3 + (_BYTE)v49) & 0xF;
  v53.val[0].i64[1] = (v50 + 8 + (_BYTE)v49) & 0xF;
  v53.val[1].i64[0] = (v50 + 7 + (_BYTE)v49) & 0xF;
  v53.val[1].i64[1] = (v44 + (_BYTE)v49 + (((_BYTE)v45 + 90) & 0xDE ^ 0xAA)) & 0xF;
  v53.val[2].i64[0] = (v50 + 5 + (_BYTE)v49) & 0xF;
  v53.val[2].i64[1] = (v50 + 4 + (_BYTE)v49) & 0xF;
  v53.val[3].i64[0] = (v50 + 3 + (_BYTE)v49) & 0xF;
  v53.val[3].i64[1] = (v50 + 2 + (_BYTE)v49) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v48 - 128) + v51) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(*(_QWORD *)(v48 - 120) + v51), *(int8x8_t *)(v43 + (v51 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v41 + (v51 & 0xF) - 7), *(int8x8_t *)(v42 + (v51 & 0xF) - 7)))), (int8x8_t)0xF7F7F7F7F7F7F7F7), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v53, (int8x16_t)xmmword_190443D50), (int8x8_t)0x6161616161616161)));
  return (*(uint64_t (**)(__n128))(a39 + 8 * ((109 * (*(_DWORD *)(v48 - 136) == v49)) ^ v45)))((__n128)xmmword_190443D50);
}

void sub_18FE67728()
{
  JUMPOUT(0x18FE6763CLL);
}

uint64_t sub_18FE67734()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((v0 + 1032 + v0 + 1617 - 1652)
                                          * (*(_DWORD *)(v2 - 144) == *(_DWORD *)(v2 - 152))) ^ v0))
                            - 4))();
}

uint64_t sub_18FE67770@<X0>(int a1@<W5>, int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = (a1 - 1945093063);
  *(_BYTE *)(a3 + v9) = *(_BYTE *)(v3 + v9) ^ (2 * a2) ^ 0xBE ^ *(_BYTE *)(v6 + (v9 & 0xF)) ^ *(_BYTE *)(v4 + (v9 & 0xF)) ^ *(_BYTE *)(v5 + (v9 & 0xF)) ^ (97 * (v9 & 0xF)) ^ 0x13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((1470 * (a1 - 1 == v7)) ^ (a2 - 1582))) - 4))();
}

uint64_t sub_18FE677E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  int v40;

  v38 = *(_QWORD *)(v35 + 24);
  *(int8x16_t *)(v37 - 112) = veorq_s8(*(int8x16_t *)(*(_QWORD *)(v35 + 40) - 0x48EDB6D0567D362CLL), (int8x16_t)xmmword_190443D60);
  if (a9)
    v39 = v38 == 0x2703C5D33AA4CED5;
  else
    v39 = 1;
  v40 = !v39;
  LODWORD(a12) = 2 * v34;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (int)((v40 * (((a5 - 228) | 0x1B0) - 1074)) ^ a5)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_18FE6786C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  int v34;
  uint64_t v35;
  int v36;
  int v37;
  _BOOL4 v39;

  v36 = (a11 & 0xF9E7ED74) + (v33 ^ 0x7CF3F6BA);
  v37 = ((a11 & 0x74) + (v33 ^ 0xBA) + 6) & 0xF;
  v39 = v36 != ((11 * (v34 ^ 0x5CB)) ^ 0x7CF3F3F3) && v37 == 313 * (v34 ^ 0x5B3) - 939;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 + 8 * ((111 * v39) ^ v34)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_18FE678F0@<X0>(unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v35;
  int v36;
  unsigned __int8 *v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  int v46;
  int v47;
  char *v48;
  int v49;
  char *v50;
  char v51;
  unint64_t v52;
  int v53;
  unsigned __int8 v54;
  uint64_t v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  unsigned int v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  unsigned int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  char *v103;
  char *v104;
  char *v105;
  int v106;
  char *v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  char *v128;
  char *v129;
  int v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  unsigned int v160;
  int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  char *v188;
  char *v189;
  int v190;
  int v191;
  char *v192;
  uint64_t v193;
  int v194;
  int v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  unsigned int v199;
  char *v200;
  unsigned int v201;
  char *v202;
  char *v203;
  uint64_t v204;
  char *v205;
  unsigned int v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  uint64_t v230;
  int v231;
  unsigned int v232;
  int v233;
  int v234;
  unsigned int v235;
  int v236;
  int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  unsigned int v242;
  unsigned int v243;

  v40 = 11 * (v38 ^ 0x30C);
  *(_DWORD *)(v39 - 120) = v40;
  v41 = *(unsigned __int8 *)(v35 - 0x2703C5D33AA4CED4);
  *(_DWORD *)(v39 - 128) = v36;
  v42 = v38;
  v43 = (uint64_t)*(&off_1E2ABD050 + v38 - 769);
  LODWORD(v41) = *(unsigned __int8 *)(v43 + (v41 ^ 0x85));
  HIDWORD(v44) = (v40 - 9) ^ v41;
  LODWORD(v44) = (v41 ^ 0x40) << 24;
  v45 = (char *)*(&off_1E2ABD050 + (v42 ^ 0x3A8)) - 4;
  v46 = ((v44 >> 30) ^ 0x9F) << 16;
  HIDWORD(v44) = v45[*(unsigned __int8 *)(v35 - 0x2703C5D33AA4CECALL) ^ 0xBFLL];
  LODWORD(v44) = (HIDWORD(v44) ^ 0xAAAAAAAA) << 24;
  LOBYTE(v41) = v44 >> 28;
  v47 = *(unsigned __int8 *)(v43 + (*(unsigned __int8 *)(v35 - 0x2703C5D33AA4CED0) ^ 0x6FLL));
  HIDWORD(v44) = v47 ^ 0x24;
  LODWORD(v44) = (v47 ^ 0x40) << 24;
  v48 = (char *)*(&off_1E2ABD050 + (v42 ^ 0x310)) - 4;
  v49 = v41 | ((v48[*(unsigned __int8 *)(v35 - 0x2703C5D33AA4CECBLL) ^ 0xB7] ^ 0x5F) << 8);
  v50 = (char *)*(&off_1E2ABD050 + v42 - 730) - 8;
  v51 = v50[*(unsigned __int8 *)(v35 - 0x2703C5D33AA4CEC9) ^ 0xD8];
  v52 = ((v48[*(unsigned __int8 *)(v35 - 0x2703C5D33AA4CEC7) ^ 0xC7] ^ 0xBFLL) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v51 ^ 0x95u) << 24);
  v53 = (((v44 >> 30) ^ 0x68) << 16) | ((v48[*(unsigned __int8 *)(v35
                                                                                                  - 0x2703C5D33AA4CECFLL) ^ 0xDFLL] ^ 0x7E) << 8);
  HIDWORD(v44) = v45[*(unsigned __int8 *)(v35 - 0x2703C5D33AA4CEC6) ^ 0xBCLL];
  LODWORD(v44) = (HIDWORD(v44) ^ 0xAAAAAAAA) << 24;
  v54 = v44 >> 28;
  v55 = v54 ^ 0x68;
  HIDWORD(v44) = v45[*(unsigned __int8 *)(v35 - 0x2703C5D33AA4CECELL) ^ 0x98];
  LODWORD(v44) = (HIDWORD(v44) ^ 0xAAAAAAAA) << 24;
  v56 = v53 & 0xFFFFFF00 | ((v50[*(unsigned __int8 *)(v35 - 0x2703C5D33AA4CED1) ^ 0xAFLL] ^ 0x45) << 24) | (v44 >> 28);
  HIDWORD(v44) = v45[*(unsigned __int8 *)(v35 - 0x2703C5D33AA4CED2) ^ 0xD0];
  LODWORD(v44) = (HIDWORD(v44) ^ 0xAAAAAAAA) << 24;
  LOBYTE(v45) = v44 >> 28;
  v57 = *(unsigned __int8 *)(v43 + (*(unsigned __int8 *)(v35 - 0x2703C5D33AA4CEC8) ^ 0xB6));
  HIDWORD(v44) = v57 ^ 0x24;
  LODWORD(v44) = (v57 ^ 0x40) << 24;
  v58 = v46 & 0xFFFFFF00 | ((v48[*(unsigned __int8 *)(v35 - 0x2703C5D33AA4CED3) ^ 0x49] ^ 0xF4) << 8) | ((v50[*v37 ^ 0xFELL] ^ 0x9C) << 24) | v45 ^ 0x3C;
  v59 = (v44 >> 30) ^ 0x21;
  LODWORD(v43) = *(unsigned __int8 *)(v43 + (*(unsigned __int8 *)(v35 - 0x2703C5D33AA4CECCLL) ^ 0xC8));
  HIDWORD(v44) = v43 ^ 0x24;
  LODWORD(v44) = (v43 ^ 0x40) << 24;
  v60 = (v52 | (v59 << 16) | v55) ^ 0x75F49EF4;
  v61 = (char *)*(&off_1E2ABD050 + (int)(v42 & 0x8FD630D5)) - 8;
  v62 = v49 & 0xFF00FFFF | (((v44 >> 30) ^ 0x37) << 16) | ((v50[*(unsigned __int8 *)(v35 - 0x2703C5D33AA4CECDLL) ^ 0x18] ^ 0xDA) << 24);
  LODWORD(v50) = (((unsigned __int16)((v52 | v55) ^ 0x9EF4) >> 8)
                - ((2 * (v60 >> 8)) & 0x140)
                + 502593440) ^ *(_DWORD *)&v61[4
                                             * (((unsigned __int16)((v52 | v55) ^ 0x9EF4) >> 8) ^ 0xF5)];
  v63 = (char *)*(&off_1E2ABD050 + (v42 ^ 0x3E8)) - 4;
  HIDWORD(v44) = *(_DWORD *)&v63[4 * (v51 ^ 0x8A)];
  LODWORD(v44) = HIDWORD(v44) ^ 0x616F5B8;
  v64 = (uint64_t)*(&off_1E2ABD050 + (v42 ^ 0x312));
  LODWORD(v50) = (v44 >> 2) ^ *(_DWORD *)(v64 + 4 * (v59 ^ 0xDD)) ^ ((_DWORD)v50
                                                                                   - ((2 * (_DWORD)v50) & 0xB8191690)
                                                                                   - 603157688);
  v65 = v54 ^ 0xD9u;
  v66 = (char *)*(&off_1E2ABD050 + v42 - 740) - 8;
  v242 = v58;
  v243 = v56;
  v67 = *(_DWORD *)&v66[4 * v65] ^ v58 ^ ((_DWORD)v50 - ((2 * (_DWORD)v50) & 0xD5345958) + 1788488876);
  v240 = v62;
  v238 = v67 ^ v56 ^ 0x2789BBD4;
  v68 = v62 ^ 0xE6 ^ v238;
  HIDWORD(v44) = *(_DWORD *)&v63[4 * (((v68 ^ v60) >> 24) ^ 0x21)];
  LODWORD(v44) = HIDWORD(v44) ^ 0x616F5B8;
  v69 = ((v44 >> 2) - ((2 * (v44 >> 2)) & 0xD5345958) + 1788488876) ^ *(_DWORD *)&v66[4
                                                                                    * ((v68 ^ (v52 | v55) ^ 0xF4) ^ 0xDE)];
  v236 = v68 ^ v60;
  v239 = v67;
  v235 = *(_DWORD *)&v61[4 * (((unsigned __int16)(v68 ^ (v52 | v55) ^ 0x9EF4) >> 8) ^ 0x1E)] ^ *(_DWORD *)(v64 + 4 * (((v68 ^ v60) >> 16) ^ 0x8Fu)) ^ v67 ^ ((((unsigned __int16)(v68 ^ (v52 | v55) ^ 0x9EF4) >> 8) ^ 0xEB) - ((2 * (((v68 ^ (v52 | ((_DWORD)v59 << 16) | v55) ^ 0x75F49EF4) >> 8) ^ 0x4BA6EB)) & 0x140) + 502593440) ^ (v69 - ((2 * v69) & 0xB8191690) - 603157688);
  v70 = v235 ^ 0x76E748E2 ^ v67 ^ v56;
  v241 = (v52 | ((_DWORD)v59 << 16) | v55) ^ 0x75F49EF4;
  LODWORD(v60) = v70 ^ v60;
  HIDWORD(v44) = *(_DWORD *)&v63[4 * (BYTE3(v60) ^ 0xA2)];
  LODWORD(v44) = HIDWORD(v44) ^ 0x616F5B8;
  v71 = *(_DWORD *)&v61[4 * (((unsigned __int16)(v60 ^ 0x90C6) >> 8) ^ 0xF5)] ^ *(_DWORD *)(v64 + 4 * (BYTE2(v60) ^ 0x6Cu)) ^ (((unsigned __int16)(v60 ^ 0x90C6) >> 8) - (((v60 ^ 0xC84590C6) >> 7) & 0x140) + 502593440) ^ ((v44 >> 2) - ((2 * (v44 >> 2)) & 0xB8191690) - 603157688);
  v233 = v60;
  v234 = v70;
  v232 = v235 ^ 0x76E748E2 ^ *(_DWORD *)&v66[4 * (v60 ^ 0x83)] ^ (v71
                                                                                 - ((2 * v71) & 0xD5345958)
                                                                                 + 1788488876);
  v72 = v232 ^ 0x2789BBD4 ^ v70 ^ 0x8EDEEA78;
  v237 = v68;
  HIDWORD(v230) = v70 ^ v68;
  v231 = v232 ^ 0x2789BBD4 ^ v70;
  v73 = v72 ^ v70 ^ v68;
  LODWORD(v60) = v73 ^ v60 ^ 0xC84590C6;
  HIDWORD(v44) = *(_DWORD *)&v63[4 * (BYTE3(v60) ^ 0x67)];
  LODWORD(v44) = HIDWORD(v44) ^ 0x616F5B8;
  v74 = (v44 >> 2) ^ *(_DWORD *)&v61[4 * (BYTE1(v60) ^ 0x97)] ^ ((BYTE1(v60) ^ 0x62)
                                                               - ((2 * ((v60 >> 8) ^ 0xD8B62)) & 0x140)
                                                               + 502593440);
  v75 = (v74 - ((2 * v74) & 0xD5345958) + 1788488876) ^ *(_DWORD *)&v66[4 * (v60 ^ 0xE1)];
  v76 = v232 ^ 0x2789BBD4 ^ *(_DWORD *)(v64 + 4 * (((v60 ^ 0x2142BA5) >> 16) ^ 0xB6u)) ^ (v75 - ((2 * v75) & 0xB8191690) - 603157688);
  v77 = v76 ^ v72;
  LODWORD(v230) = v73;
  v78 = v73 ^ 0x5EF1BA37;
  HIDWORD(v228) = v77;
  v77 ^= 0x307C325Cu;
  LODWORD(v228) = v77 ^ v73 ^ 0x5EF1BA37;
  HIDWORD(v44) = *(_DWORD *)&v63[4 * (((v228 ^ v60) >> 24) ^ 0xA4)];
  LODWORD(v44) = HIDWORD(v44) ^ 0x616F5B8;
  LODWORD(v50) = ((v44 >> 2) - ((2 * (v44 >> 2)) & 0xD5345958) + 1788488876) ^ *(_DWORD *)&v66[4
                                                                                             * ((v228 ^ v60) ^ 0x18)];
  v79 = v228 ^ v60 ^ 0xCEE37B5D;
  HIDWORD(v227) = v228 ^ v60;
  v229 = __PAIR64__(v60, v76);
  v80 = *(_DWORD *)(v64 + 4 * (((v228 ^ v60) >> 16) ^ 0xCAu)) ^ *(_DWORD *)&v61[4 * (BYTE1(v79) ^ 0xF5)] ^ v76 ^ (BYTE1(v79) + 502593440 + (~(v79 >> 7) | 0xFFFFFEBF) + 1) ^ 0x8C4DDB4E ^ ((_DWORD)v50 - ((2 * (_DWORD)v50) & 0xB8191690) - 603157688);
  v81 = v80 ^ (v78 - ((2 * v78) & 0x189BB69C) - 1941054642);
  HIDWORD(v44) = *(_DWORD *)&v63[4 * (((v81 ^ v79) >> 24) ^ 0x70)];
  LODWORD(v44) = HIDWORD(v44) ^ 0x616F5B8;
  v82 = ((v44 >> 2) - ((2 * (v44 >> 2)) & 0xB8191690) - 603157688) ^ *(_DWORD *)(v64
                                                                               + 4
                                                                               * (((v81 ^ v79 ^ 0xF3443494) >> 16) ^ 0xE4u));
  v83 = (v82 - ((2 * v82) & 0xD5345958) + 1788488876) ^ *(_DWORD *)&v66[4 * ((v81 ^ v79) ^ 0x91)];
  LODWORD(v226) = v81 ^ v79;
  v84 = v81 ^ v79 ^ 0x1A89BBD4;
  v85 = (v83 - ((2 * v83) & 0x3BE9EF40) + 502593440) ^ *(_DWORD *)&v61[4 * (BYTE1(v84) ^ 0xF5)];
  LODWORD(v60) = v80 ^ BYTE1(v84) ^ (v85 - ((2 * v85) & 0x189BB69C) - 1941054642);
  HIDWORD(v226) = v81;
  LODWORD(v227) = v80;
  LODWORD(v225) = v80 ^ (v77 - ((2 * v77) & 0x189BB69C) - 1941054642);
  HIDWORD(v224) = v60 ^ v225;
  v86 = v60 ^ v225 ^ 0xE6F58988;
  v87 = v86 ^ v81;
  v88 = v86 ^ v81 ^ v84;
  HIDWORD(v44) = *(_DWORD *)&v63[4 * (HIBYTE(v88) ^ 0x43)];
  LODWORD(v44) = HIDWORD(v44) ^ 0x616F5B8;
  HIDWORD(v223) = v88;
  v89 = v88 ^ 0x299B7ABE;
  v90 = *(_DWORD *)&v61[4 * (((unsigned __int16)(v88 ^ 0x7ABE) >> 8) ^ 0xF5)] ^ *(_DWORD *)(v64 + 4 * (((v88 ^ 0x4D501F31) >> 16) ^ 0xE2u)) ^ (((unsigned __int16)(v88 ^ 0x7ABE) >> 8) - (((v88 ^ 0x299B7ABE) >> 7) & 0x140) + 502593440) ^ ((v44 >> 2) - ((2 * (v44 >> 2)) & 0xB8191690) - 603157688);
  HIDWORD(v225) = v60;
  v91 = v60 ^ *(_DWORD *)&v66[4 * (v88 ^ 0xFB)] ^ (v90 - ((2 * v90) & 0xD5345958) + 1788488876);
  HIDWORD(v222) = v91 ^ v86;
  v92 = v91 ^ v86 ^ 0x5BF36347;
  LODWORD(v224) = v87;
  LODWORD(v222) = v92 ^ v87;
  LODWORD(v50) = v92 ^ v87 ^ 0x2745D0FF;
  v93 = v50 ^ v89;
  v94 = v50 ^ v89 ^ 0x516EF336;
  v95 = v50 ^ v89 ^ 0x3DCC6B2B;
  v96 = (((unsigned __int16)(v93 ^ 0x6B2B) >> 8) - (((v93 ^ 0x3DCC6B2B) >> 7) & 0x140) + 502593440) ^ *(_DWORD *)&v61[4 * (((unsigned __int16)(v93 ^ 0x6B2B) >> 8) ^ 0xF5)];
  v97 = (v96 - ((2 * v96) & 0xD5345958) + 1788488876) ^ *(_DWORD *)&v66[4
                                                                      * ((v50 ^ v89) ^ 0x6E)];
  HIDWORD(v221) = v93;
  HIDWORD(v44) = *(_DWORD *)&v63[4 * (HIBYTE(v93) ^ 0x57)];
  LODWORD(v44) = HIDWORD(v44) ^ 0x616F5B8;
  LODWORD(v223) = v91;
  LODWORD(v221) = (v44 >> 2) ^ *(_DWORD *)(v64 + 4 * (BYTE2(v94) ^ 0x8Bu)) ^ v91 ^ (v97
                                                                                    - ((2 * v97) & 0xB8191690)
                                                                                    - 603157688);
  HIDWORD(v220) = v221 ^ 0x930000ED ^ v92;
  LODWORD(v220) = HIDWORD(v220) ^ 0x8D06EA22 ^ v50;
  HIDWORD(v44) = *(_DWORD *)&v63[4 * (((v220 ^ v95) >> 24) ^ 0x39)];
  LODWORD(v44) = HIDWORD(v44) ^ 0x616F5B8;
  HIDWORD(v219) = v220 ^ v95;
  v98 = v220 ^ v95 ^ 0x53DEAA41;
  v99 = *(_DWORD *)&v66[4 * ((v220 ^ v95) ^ 4)] ^ *(_DWORD *)&v61[4 * (BYTE1(v98) ^ 0xF5)] ^ 0x776EDB0C ^ (v44 >> 2);
  v100 = *(_DWORD *)(v64 + 4 * (((v220 ^ v95 ^ 0x9289BB39) >> 16) ^ 0x7Eu)) ^ v221 ^ 0x930000ED ^ BYTE1(v98) ^ 0x80C9593A ^ (v99 - ((2 * v99) & 0xB8191690) - 603157688);
  LODWORD(v50) = v100 ^ ((_DWORD)v50 - ((2 * (_DWORD)v50) & 0x192B274) - 2134288070);
  HIDWORD(v44) = *(_DWORD *)&v63[4 * (((v50 ^ v98) >> 24) ^ 0x44)];
  LODWORD(v44) = HIDWORD(v44) ^ 0x616F5B8;
  v101 = *(_DWORD *)&v61[4
                       * (((unsigned __int16)((unsigned __int16)v50 ^ WORD2(v219) ^ 0xAA41) >> 8) ^ 0xFD)] ^ *(_DWORD *)&v66[4 * (v50 ^ BYTE4(v219) ^ 0x41 ^ 0xC4)] ^ ((((unsigned __int16)((unsigned __int16)v50 ^ WORD2(v219) ^ 0xAA41) >> 8) ^ 8) - (((v50 ^ v98) >> 7) & 0x140) + 502593440) ^ ((v44 >> 2) - ((2 * (v44 >> 2)) & 0xD5345958) + 1788488876);
  HIDWORD(v218) = v50 ^ v98 ^ 0xA3BF96BF;
  v102 = (v101 - ((2 * v101) & 0xB8191690) - 603157688) ^ *(_DWORD *)(v64
                                                                    + 4
                                                                    * (((v50 ^ v98) >> 16) ^ 0x16u));
  LODWORD(v43) = v102 - ((2 * v102) & 0x192B274);
  v103 = (char *)*(&off_1E2ABD050 + (v42 ^ 0x37F)) - 12;
  v104 = (char *)*(&off_1E2ABD050 + v42 - 869) - 4;
  v105 = (char *)*(&off_1E2ABD050 + v42 - 857) - 8;
  v106 = v105[*(unsigned __int8 *)(v39 - 109) ^ 0xA5];
  HIDWORD(v44) = v106 ^ 0x2B;
  LODWORD(v44) = (v106 ^ 0x80) << 24;
  v107 = (char *)*(&off_1E2ABD050 + v42 - 856) - 4;
  v215 = v105;
  v217 = v103;
  v108 = (v105[*(unsigned __int8 *)(v39 - 101) ^ 0x60] ^ 0x60) & 0xFFFF00FF | ((v104[*(unsigned __int8 *)(v39 - 103) ^ 5] ^ 0xBF) << 16) | (((v103[*(unsigned __int8 *)(v39 - 102) ^ 4] + (*(_BYTE *)(v39 - 102) ^ 0xB) + 89) ^ 0x33) << 8) | ((v107[*(unsigned __int8 *)(v39 - 104) ^ 0x1CLL] ^ 0x5E) << 24);
  LODWORD(v61) = (v105[*(unsigned __int8 *)(v39 - 105) ^ 0x28] ^ 0xA1) & 0xFFFF00FF | ((((*(_BYTE *)(v39 - 106) ^ 0xAC) + v103[*(unsigned __int8 *)(v39 - 106) ^ 0xA3] + 89) ^ 0xF6) << 8) | ((v107[*(unsigned __int8 *)(v39 - 108) ^ 0xB2] ^ 0xA9) << 24);
  v214 = v107;
  v109 = (v105[*(unsigned __int8 *)(v39 - 97) ^ 0x7BLL] ^ 0xD4) & 0xFFFF00FF | ((((*(_BYTE *)(v39 - 98) ^ 0xD0) + v103[*(unsigned __int8 *)(v39 - 98) ^ 0xDFLL] + 89) ^ 0xE4) << 8) | ((v104[*(unsigned __int8 *)(v39 - 99) ^ 0xAALL] ^ 0x8D) << 16) | ((v107[*(unsigned __int8 *)(v39 - 100) ^ 0x45] ^ 0x91) << 24);
  v216 = v104;
  LODWORD(v103) = (((((v44 >> 30) ^ 0xDB) >> 2) | (((v44 >> 30) ^ 0xDB) << 6)) | ((v104[*(unsigned __int8 *)(v39 - 111) ^ 0x7ALL] ^ 0xEE) << 16) | ((v107[*(unsigned __int8 *)(v39 - 112) ^ 0x78] ^ 0xAB) << 24) | (((v103[*(unsigned __int8 *)(v39 - 110) ^ 0x5DLL] + (*(_BYTE *)(v39 - 110) ^ 0x52) + 89) ^ 0x5D) << 8)) ^ 0xB65CE60B;
  v110 = (v61 | ((v104[*(unsigned __int8 *)(v39 - 107) ^ 0x27] ^ 0xDB) << 16)) ^ 0xE3259C5B;
  LODWORD(v104) = v109 ^ 0x61D3378D;
  HIDWORD(v213) = *(_DWORD *)(v39 - 128) - 2096363194;
  v111 = (HIDWORD(v220) ^ 0x8D06EA22) - ((2 * (HIDWORD(v220) ^ 0x8D06EA22)) & 0x192B274) - 2134288070;
  v112 = *(_DWORD *)(v39 - 120);
  HIDWORD(v212) = v112 - 939241956;
  LODWORD(v213) = v111 ^ 0x3DC8BA5D ^ (v43 - 2134288070);
  LODWORD(v212) = v100 ^ v111;
  HIDWORD(v211) = v112 ^ 0x749;
  LODWORD(v219) = v100;
  LODWORD(v211) = (v43 - 2134288070) ^ v100;
  HIDWORD(v210) = v112 ^ 0x79C;
  LODWORD(v210) = v112 ^ 0x710;
  LODWORD(v218) = v50 ^ 0x626A2240;
  HIDWORD(a4) = v213 ^ v50 ^ 0x626A2240;
  v113 = (v112 - 939241956) & 0x37FBAFFF ^ 0x54Eu;
  *(_QWORD *)(v39 - 200) = v113;
  v114 = a1[v113];
  *(_QWORD *)(v39 - 168) = 12;
  v115 = v105[v114 ^ 0x41];
  v116 = a1[12] ^ 0x60;
  *(_QWORD *)(v39 - 160) = 8;
  *(_QWORD *)(v39 - 128) = 1;
  LODWORD(v52) = v107[v116] ^ 0x2A;
  v117 = v107[a1[8] ^ 0xC1] ^ 0x9E;
  LODWORD(v116) = v216[a1[1] ^ 0x66] ^ 2;
  *(_QWORD *)(v39 - 136) = 15;
  LODWORD(v66) = (_DWORD)v116 << 16;
  v118 = a1[15] ^ 0xE9;
  *(_QWORD *)(v39 - 152) = 11;
  LODWORD(v118) = v105[v118] ^ 0x76;
  v119 = v105[a1[11] ^ 0xC3];
  *(_QWORD *)(v39 - 176) = 0;
  v120 = v118 | ((_DWORD)v52 << 24);
  LODWORD(v66) = v66 | ((v107[*a1 ^ 0x30] ^ 0x1A) << 24);
  LOBYTE(v52) = v119 ^ 0xBC;
  v121 = v119 ^ 0xBC | (v117 << 24);
  *(_QWORD *)(v39 - 144) = 2;
  LODWORD(v66) = v66 & 0xFFFF00FF | (((v217[a1[2] ^ 0xC0] + (a1[2] ^ 0xCF) + 89) ^ 0xF9) << 8);
  *(_QWORD *)(v39 - 208) = 9;
  v122 = v216[a1[9] ^ 0x5DLL];
  *(_QWORD *)(v39 - 232) = 5;
  *(_QWORD *)(v39 - 224) = 4;
  *(_QWORD *)(v39 - 192) = 10;
  v123 = ((v122 ^ 0xD1) << 16) | (((v217[a1[10] ^ 0xD5] + (a1[10] ^ 0xDA) + 89) ^ 0xCF) << 8) | v121;
  *(_QWORD *)(v39 - 184) = 14;
  LODWORD(v55) = (v217[a1[14] ^ 0xE4] + (a1[14] ^ 0xEB) - 39);
  *(_QWORD *)(v39 - 216) = 3;
  *(_QWORD *)(v39 - 240) = 13;
  LODWORD(v61) = ((_DWORD)v55 << 8) | ((v216[a1[13] ^ 0x92] ^ 0xEC) << 16);
  v115 ^= 0xA6u;
  LODWORD(v55) = v115 | ((v107[a1[4] ^ 0xFCLL] ^ 0xA4) << 24);
  v124 = v105[a1[3] ^ 0xDCLL] ^ 0x62;
  *(_QWORD *)(v39 - 248) = 6;
  v125 = ((v216[a1[5] ^ 0xA9] ^ 0x3F) << 16) | (((v217[a1[6] ^ 0x4FLL]
                                                                                    + (a1[6] ^ 0x40)
                                                                                    + 89) ^ 0xB7) << 8) | v55;
  LODWORD(v105) = v103 ^ v242 ^ ((v124 | v66)
                                             + 266690355
                                             + ~(2 * ((v124 | v66) & 0xFE55F3E ^ v124 & 0xC)));
  v126 = v110 ^ v243 ^ (v125 + 1520182754 - 2 * (v125 & 0x5A9C25EA ^ v115 & 8));
  LODWORD(v66) = v104 ^ v241 ^ ((v61 | v120)
                                            - 2 * ((v61 | v120) & 0x586A8E37 ^ v118 & 3)
                                            - 664105420);
  v127 = v108 ^ 0x1A7CB4C5 ^ v240 ^ (v123 - 2 * (v123 & 0x23C50D7F ^ v52 & 3) - 1547367044);
  v128 = (char *)*(&off_1E2ABD050 + *(_DWORD *)(v39 - 120) - 1751) - 4;
  v129 = (char *)*(&off_1E2ABD050 + *(_DWORD *)(v39 - 120) - 1622) - 12;
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v127) ^ 0x3F)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v130 = (v44 >> 1) ^ *(_DWORD *)&v128[4 * (BYTE2(v66) ^ 0x34)] ^ ((BYTE2(v66) ^ 0x68)
                                                                 + 1340684673
                                                                 - ((v66 >> 15) & 0x102));
  v131 = (uint64_t)*(&off_1E2ABD050 + *(_DWORD *)(v39 - 120) - 1619);
  LODWORD(v103) = *(_DWORD *)(v131 + 4 * (v127 ^ 0xC6u)) ^ ((BYTE2(v105) ^ 0xD5)
                                                                             + 1340684673
                                                                             - 2
                                                                             * (((v105 >> 16) ^ 0x6CD5) & 0xA1 ^ (v105 >> 16) & 0x20)) ^ ((v127 ^ 0xAB) + 963255588 + ((2 * (v127 ^ 0xAB) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ *(_DWORD *)&v128[4 * (BYTE2(v105) ^ 0x89)];
  LODWORD(v61) = *(_DWORD *)&v128[4 * (BYTE2(v126) ^ 0x8C)] ^ *(_DWORD *)(v131 + 4 * (v66 ^ 0xB6u)) ^ ((v66 ^ 0xDB) + 963255588 + ((2 * (v66 ^ 0xDB) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ ((BYTE2(v126) ^ 0xD0) + 1340684673 - 2 * ((HIWORD(v126) ^ 0xC8D0) & 0x89 ^ HIWORD(v126) & 8));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v126) ^ 0xC8)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v52) = (_DWORD)v103 + 1928830796 - ((2 * (_DWORD)v103) & 0xE5EF3E98);
  LODWORD(v118) = ((BYTE2(v127) ^ 0xAD) + 1340684673 - ((2 * (HIWORD(v127) ^ 0x3FAD)) & 0x102)) ^ *(_DWORD *)(v131 + 4 * (v105 ^ 0x1Cu)) ^ ((v105 ^ 0x71) + 963255588 + ((2 * (v105 ^ 0x71) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ (v44 >> 1) ^ *(_DWORD *)&v128[4 * (BYTE2(v127) ^ 0xF1)];
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v105 >> 24) ^ 0x6C)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v132 = v44 >> 1;
  LODWORD(v55) = v118 + 1928830796 - ((2 * v118) & 0xE5EF3E98);
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v66 >> 24) ^ 0xB7)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v133 = (uint64_t)*(&off_1E2ABD050 + *(_DWORD *)(v39 - 120) - 1818);
  *(_DWORD *)(v39 - 252) = 963255587;
  LODWORD(v107) = (v126 ^ 0x10)
                + 963255587
                - ((2 * (v126 ^ 0x10) + 1934590) & 0x148548);
  v133 -= 8;
  v134 = *(_DWORD *)(v133 + 4 * (BYTE1(v105) ^ 0xDEu)) ^ v237 ^ *(_DWORD *)(v131
                                                                            + 4 * (v126 ^ 0x7Du)) ^ (v130 + 1928830796 - ((2 * v130) & 0xE5EF3E98));
  LODWORD(v118) = v52 ^ *(_DWORD *)(v133 + 4 * (BYTE1(v126) ^ 0x2Fu)) ^ (v44 >> 1);
  LODWORD(v105) = v118 - ((2 * v118) & 0x979D1E90);
  LOWORD(v118) = v134 ^ ((v126 ^ 0x10) + 7459 - ((2 * (v126 ^ 0x10) - 31490) & 0x8548));
  v135 = *(_DWORD *)(v133 + 4 * (BYTE1(v127) ^ 0x29u)) ^ v239 ^ v132 ^ ((_DWORD)v61
                                                                        + 1928830796
                                                                        - ((2 * (_DWORD)v61) & 0xE5EF3E98));
  v136 = *(_DWORD *)(v133 + 4 * (BYTE1(v66) ^ 0x66u)) ^ v238 ^ v55;
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v134 ^ ~(_DWORD)v107) >> 24)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v52) = v44 >> 1;
  LODWORD(v66) = (*(_BYTE *)(v133 + 4 * (BYTE1(v66) ^ 0x66u)) ^ v238 ^ v55);
  LODWORD(v61) = (v134 ^ v107) >> 16;
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v135) ^ 0x91)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v107) = v44 >> 1;
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v136) ^ 0xA3)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v107) = v107 ^ *(_DWORD *)&v128[4 * (BYTE2(v136) ^ 0xF0)] ^ ((BYTE2(v136) ^ 0xAC)
                                                                                   + 1340684673
                                                                                   - ((2 * (HIWORD(v136) ^ 0xA3AC)) & 0x102));
  LODWORD(v61) = (v44 >> 1) ^ *(_DWORD *)&v128[4 * (v61 ^ 0x15)] ^ *(_DWORD *)(v131
                                                                                              + 4
                                                                                              * (v135 ^ 0x7Bu)) ^ ((v61 ^ 0x49) + 1340684673 - 2 * ((v61 ^ 0xFF49) & 0x85 ^ v61 & 4)) ^ ((v135 ^ 0x16) + 963255588 + ((2 * (v135 ^ 0x16) + 254) & 0x148 ^ 0xFFEB7BFF));
  v137 = ((_DWORD)v105 + 1271828296) ^ v236;
  LODWORD(v107) = ((_DWORD)v107 + 1928830796 - ((2 * (_DWORD)v107) & 0xE5EF3E98)) ^ *(_DWORD *)(v133
                                                                                              + 4
                                                                                              * (BYTE1(v118) ^ 0x2Cu));
  v138 = v52 ^ *(_DWORD *)(v131 + 4 * (v66 ^ 3)) ^ ((v66 ^ 0x6E)
                                                                  + 963255588
                                                                  + ((2 * (v66 ^ 0x6E) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ ((BYTE2(v137) ^ 0xF7) + 1340684673 - ((2 * (HIWORD(v137) ^ 0x25F7)) & 0x102)) ^ *(_DWORD *)&v128[4 * (BYTE2(v137) ^ 0xAB)];
  LODWORD(v105) = *(_DWORD *)&v128[4 * (BYTE2(v135) ^ 0x2E)] ^ ((BYTE2(v135) ^ 0x72)
                                                              + 1340684673
                                                              - ((v135 >> 15) & 0x102));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v137) ^ 0x25)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v118) = ((v118 ^ 0xFC)
                 + 963255588
                 + ((2 * (v118 ^ 0xFC) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ *(_DWORD *)(v133
                                                                                                  + 4 * (BYTE1(v136) ^ 0xBDu)) ^ *(_DWORD *)(v131 + 4 * (v118 ^ 0x91u));
  v139 = *(_DWORD *)(v133 + 4 * (BYTE1(v137) ^ 0x14u));
  LODWORD(v52) = *(_DWORD *)(v133 + 4 * (BYTE1(v135) ^ 0x57u));
  v140 = v137;
  v141 = v118 ^ ((_DWORD)v105 + 1928830796 - ((2 * (_DWORD)v105) & 0xE5EF3E98)) ^ (v44 >> 1);
  v142 = ((v140 ^ 5) - 1726037377) ^ v235 ^ *(_DWORD *)(v131 + 4 * (v140 ^ 0x68u)) ^ ((_DWORD)v107
                                                                                      - 1605674332
                                                                                      - ((2 * (_DWORD)v107) & 0x4096B548));
  LODWORD(v118) = v52 ^ HIDWORD(v230) ^ (v138 + 1928830796 - ((2 * v138) & 0xE5EF3E98));
  LODWORD(v105) = (v141 - ((2 * v141) & 0x7BA535CC) - 1110271258) ^ v233;
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v105 >> 24) ^ 0x50)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v61) = v139 ^ v234 ^ ((_DWORD)v61 + 1928830796 - ((2 * (_DWORD)v61) & 0xE5EF3E98));
  v143 = ((v61 ^ 0xA1) + 963255588 + ((2 * (v61 ^ 0xA1) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ *(_DWORD *)(v131 + 4 * (v61 ^ 0xCCu));
  LODWORD(v107) = *(_DWORD *)&v128[4 * (BYTE2(v142) ^ 0xDB)] ^ ((BYTE2(v142) ^ 0x87)
                                                              + 1340684673
                                                              - ((2 * (HIWORD(v142) ^ 0x3A87)) & 0x102)) ^ (v44 >> 1);
  v144 = (v143 + 1928830796 - ((2 * v143) & 0xE5EF3E98)) ^ *(_DWORD *)(v133 + 4 * (BYTE1(v142) ^ 0xDEu));
  v145 = ((v142 ^ 0x9E) + 963255588 + ((2 * (v142 ^ 0x9E) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ *(_DWORD *)(v131 + 4 * (v142 ^ 0xF3u));
  LODWORD(v52) = v145 + 1928830796 - ((2 * v145) & 0xE5EF3E98);
  LODWORD(v107) = ((_DWORD)v107 + 1928830796 - ((2 * (_DWORD)v107) & 0xE5EF3E98)) ^ *(_DWORD *)(v133
                                                                                              + 4
                                                                                              * (BYTE1(v61) ^ 0x57u));
  LODWORD(v66) = ((v118 ^ 0x740CBC3A) >> 16);
  LODWORD(v55) = (_DWORD)v66 + 1340684673 - ((v118 >> 15) & 0x102);
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (BYTE3(v118) ^ 0x37)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v146 = v44 >> 1;
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v142) ^ 0x3A)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v147 = *(_DWORD *)(v133 + 4 * ((unsigned __int16)(v118 ^ 0xBC3A) >> 8)) ^ BYTE2(v61) ^ *(_DWORD *)&v128[4 * (BYTE2(v61) ^ 0xF6)] ^ (v44 >> 1);
  v148 = ((v105 ^ 0xF6) - 1726037377) ^ v232 ^ *(_DWORD *)(v131 + 4 * (v105 ^ 0x9Bu)) ^ ((v147 ^ 0x3D1EA667) - 1605674332 + ((2 * ((v147 ^ 0x3D1EA667) & 0x204B5AB6 ^ v147 & 0x12)) ^ 0xFFFFFFFB) + 1);
  v149 = ((v118 ^ 0x3A) - 1726037377) ^ HIDWORD(v229) ^ *(_DWORD *)(v131
                                                                                   + 4
                                                                                   * (v118 ^ 0x57u)) ^ ((_DWORD)v107 - 1605674332 - ((2 * (_DWORD)v107) & 0x4096B548));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v61 >> 24) ^ 0x7C)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v118) = *(_DWORD *)&v128[4 * (BYTE2(v105) ^ 0x54)] ^ v230 ^ BYTE2(v105) ^ v146 ^ (v144
                                                                                          + 1340684673
                                                                                          - ((2 * v144) & 0x9FD27302));
  v150 = *(_DWORD *)(v133 + 4 * (BYTE1(v105) ^ 0x7Au)) ^ v231 ^ v55 ^ *(_DWORD *)&v128[4 * (v66 ^ 0x5C)] ^ (v44 >> 1) ^ v52;
  LODWORD(v61) = ((v118 ^ 0xCB) + 963255588 + ((2 * (v118 ^ 0xFA64A5CB) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ *(_DWORD *)(v131 + 4 * (v118 ^ 0xA6u));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v148) ^ 0x5B)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v151 = v44 >> 1;
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v149) ^ 0x28)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v52) = v44 >> 1;
  v152 = v151 ^ *(_DWORD *)(v131 + 4 * (v149 ^ 0x1Fu)) ^ ((v149 ^ 0x72)
                                                                           + 963255587
                                                                           - ((2 * (v149 ^ 0x72)
                                                                             + 1934590) & 0x148548));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (BYTE3(v118) ^ 0xB9)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v107) = v44 >> 1;
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v150) ^ 0xB4)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v107) = v107 ^ *(_DWORD *)(v131 + 4 * (v150 ^ 0x8Bu)) ^ ((v150 ^ 0xE6)
                                                                                                  + 963255588
                                                                                                  + ((2 * (v150 ^ 0xE6) + 254) & 0x148 ^ 0xFFEB7BFF));
  LODWORD(v66) = ((BYTE2(v149) ^ 0x14) + 1340684673 - ((v149 >> 15) & 0x102)) ^ v228 ^ *(_DWORD *)(v133
                                                                                                 + 4
                                                                                                 * (BYTE1(v148) ^ 0x1Fu)) ^ *(_DWORD *)&v128[4 * (BYTE2(v149) ^ 0x48)] ^ ((_DWORD)v107 + 1928830796 - ((2 * (_DWORD)v107) & 0xE5EF3E98));
  LODWORD(v105) = *(_DWORD *)(v133 + 4 * ((unsigned __int16)(v118 ^ 0xA5CB) >> 8)) ^ v229 ^ ((BYTE2(v150) ^ 0x59) + 1340684673 - ((2 * (HIWORD(v150) ^ 0xB459)) & 0x102)) ^ *(_DWORD *)&v128[4 * (BYTE2(v150) ^ 5)] ^ (v152 + 1928830796 - ((2 * v152) & 0xE5EF3E98));
  v153 = (((v118 ^ 0xFA64A5CB) >> 16) + 1340684673 - ((v118 >> 15) & 0x102)) ^ HIDWORD(v228) ^ ((v44 >> 1) + 1928830796 - ((2 * (v44 >> 1)) & 0xE5EF3E98)) ^ *(_DWORD *)(v131 + 4 * (v148 ^ 0x99u)) ^ *(_DWORD *)(v133 + 4 * (BYTE1(v149) ^ 0x12u)) ^ *(_DWORD *)&v128[4 * (((v118 ^ 0xFA64A5CB) >> 16) ^ 0x5C)] ^ ((v148 ^ 0xF4) + 963255588 + ((2 * (v148 ^ 0xF4) + 254) & 0x148 ^ 0xFFEB7BFF));
  v154 = *(_DWORD *)(v133 + 4 * (BYTE1(v150) ^ 0x34u)) ^ HIDWORD(v227) ^ *(_DWORD *)&v128[4 * (BYTE2(v148) ^ 0xC9)] ^ ((BYTE2(v148) ^ 0x95) + 1340684673 - ((2 * (HIWORD(v148) ^ 0x5B95)) & 0x102)) ^ v52 ^ ((_DWORD)v61 + 1928830796 - ((2 * (_DWORD)v61) & 0xE5EF3E98));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v154) ^ 0xEB)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v118) = (v44 >> 1) + 1928830796 - ((2 * (v44 >> 1)) & 0xE5EF3E98);
  v155 = ((BYTE2(v153) ^ 0x81) + 1340684673 - 2 * ((HIWORD(v153) ^ 0x1481) & 0x83 ^ HIWORD(v153) & 2)) ^ *(_DWORD *)&v128[4 * (BYTE2(v153) ^ 0xDD)];
  LODWORD(v107) = ((v153 ^ 0x51)
                 + 963255588
                 + ((2 * (v153 ^ 0x51) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ *(_DWORD *)(v131
                                                                                                  + 4 * (v153 ^ 0x3Cu));
  LODWORD(v43) = *(_DWORD *)&v128[4 * (BYTE2(v66) ^ 0xDB)] ^ ((BYTE2(v66) ^ 0x87)
                                                            + 1340684673
                                                            - ((2 * ((v66 >> 16) ^ 0x7787)) & 0x102));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v153) ^ 0x14)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v156 = v44 >> 1;
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v105 >> 24) ^ 0x9A)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v157 = *(_DWORD *)&v128[4 * (((v154 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v154 ^ 0xA87CE98B) >> 16) ^ ((_DWORD)v107 + 1340684673 - ((2 * (_DWORD)v107) & 0x9FD27302));
  v158 = *(_DWORD *)(v131 + 4 * (v154 ^ 0xE6u)) ^ *(_DWORD *)(v133 + 4 * (BYTE1(v66) ^ 0xDEu)) ^ ((v154 ^ 0x8B) + 963255588 + ((2 * (v154 ^ 0xA87CE98B) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ (v155 + 1928830796 - ((2 * v155) & 0xE5EF3E98)) ^ (v44 >> 1);
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v66 >> 24) ^ 0x77)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v159 = *(_DWORD *)(v133 + 4 * (BYTE1(v153) ^ 0x34u)) ^ v226 ^ ((BYTE2(v105) ^ 0xE9)
                                                                 + 1340684673
                                                                 - ((2 * ((v105 >> 16) ^ 0x9AE9)) & 0x102)) ^ *(_DWORD *)&v128[4 * (BYTE2(v105) ^ 0xB5)] ^ ((v66 ^ 0x9E) + 963255588 + ((2 * (v66 ^ 0x9E) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ v118 ^ *(_DWORD *)(v131 + 4 * (v66 ^ 0xF3u));
  v160 = *(_DWORD *)(v133 + 4 * (BYTE1(v154) ^ 0xBu)) ^ v225 ^ ((v105 ^ 0xA8)
                                                                + 963255588
                                                                + ((2 * (v105 ^ 0xA8) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ *(_DWORD *)(v131 + 4 * (v105 ^ 0xC5u)) ^ (v43 + 1928830796 - ((2 * v43) & 0xE5EF3E98)) ^ v156;
  LODWORD(v105) = *(_DWORD *)(v133 + 4 * (BYTE1(v105) ^ 0x2Du)) ^ HIDWORD(v226) ^ (v44 >> 1) ^ (v157
                                                                                                + 1928830796
                                                                                                - ((2 * v157) & 0xE5EF3E98));
  v161 = ((v160 ^ 0x2E0E654A) >> 16);
  LODWORD(v107) = v161 + 1340684673 - ((v160 >> 15) & 0x102);
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v160) ^ 0x6D)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v43) = v44 >> 1;
  LODWORD(v61) = (v158 - 1941054642 - ((2 * v158) & 0x189BB69C)) ^ v227;
  v162 = *(_DWORD *)&v128[4 * (v161 ^ 0x5C)];
  v163 = *(_DWORD *)&v129[4 * ((v61 >> 24) ^ 0xFD)];
  v164 = v162 ^ (v163 << 31) ^ (v163 >> 1) ^ v107 ^ 0x673E3FBF;
  v165 = ((v160 ^ 0x4A) + 963255588 + ((2 * (v160 ^ 0x2E0E654A) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ *(_DWORD *)(v131 + 4 * (v160 ^ 0x27u));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v105 >> 24) ^ 0xAE)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v52) = v164 + 1928830796 - ((2 * v164) & 0xE5EF3E98);
  v166 = (v44 >> 1) ^ *(_DWORD *)(v133 + 4 * (BYTE1(v61) ^ 0xA4u)) ^ (v165 + 1928830796 - ((2 * v165) & 0xE5EF3E98));
  v167 = v166 + 1340684673 - ((2 * v166) & 0x9FD27302);
  v168 = *(_DWORD *)&v128[4 * (BYTE2(v105) ^ 0x3A)] ^ v43 ^ ((BYTE2(v105) ^ 0x66)
                                                           + 1340684673
                                                           - ((v105 >> 15) & 0x102)) ^ *(_DWORD *)(v131 + 4 * (v61 ^ 0x4Du)) ^ ((v61 ^ 0x20) + 963255588 + ((2 * (v61 ^ 0x20) + 254) & 0x148 ^ 0xFFEB7BFF));
  v169 = v168 + 1928830796 - ((2 * v168) & 0xE5EF3E98);
  LODWORD(v118) = ((v105 ^ 0xB3)
                 + 202793420
                 + ((2 * (v105 ^ 0xB3) + 254) & 0x298 ^ 0xDFD2FBFF)) ^ *(_DWORD *)(v133
                                                                                                  + 4 * (BYTE1(v160) ^ 0x65u));
  LODWORD(v118) = (v118 - 1605674332 - ((2 * v118) & 0x4096B548)) ^ *(_DWORD *)(v131
                                                                              + 4 * (v105 ^ 0xDEu));
  LODWORD(v61) = *(_DWORD *)&v128[4 * (BYTE2(v61) ^ 0x40)] ^ ((BYTE2(v61) ^ 0x1C)
                                                            + 1340684673
                                                            - ((v61 >> 15) & 0x102));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v159 ^ 0x3F162902u) >> 24)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v43) = *(_DWORD *)(v133 + 4 * (BYTE1(v105) ^ 0x7Cu));
  v170 = ((v159 ^ 0x3F162902u) >> 16) ^ v224 ^ *(_DWORD *)&v128[4
                                                                                             * (((v159 ^ 0x3F162902u) >> 16) ^ 0x5C)] ^ v167;
  v171 = (v44 >> 1) ^ HIDWORD(v223) ^ ((v61 ^ 0xD9E215AF ^ -(v61 ^ 0xD9E215AF) ^ ((v61 ^ 0x431D28D3 ^ v118) + (v118 ^ 0x6500C283) + 1))
                                     + (v118 ^ 0x6500C283));
  LODWORD(v105) = *(_DWORD *)(v133 + 4 * (BYTE1(v159) ^ 0xCBu)) ^ v60 ^ v225 ^ v169;
  LODWORD(v66) = v43 ^ v60 ^ (*(_DWORD *)(v39 - 252)
                            + (v159 ^ 2)
                            - ((2 * (v159 ^ 2) + 1934590) & 0x148548)) ^ *(_DWORD *)(v131 + 4 * (v159 ^ 0x6Fu)) ^ v52;
  LODWORD(v118) = ((BYTE2(v66) ^ 0xE9) + 1340684673 - ((2 * ((v66 >> 16) ^ 0xB8E9)) & 0x102)) ^ *(_DWORD *)&v128[4 * (BYTE2(v66) ^ 0xB5)];
  v172 = (v43 ^ v60 ^ (*(_BYTE *)(v39 - 252) + (v159 ^ 2) - ((2 * (v159 ^ 2) - 2) & 0x48)) ^ *(_BYTE *)(v131 + 4 * (v159 ^ 0x6Fu)) ^ v52) ^ 0xA8;
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v170) ^ 0x9D)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v173 = v44 >> 1;
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v105 >> 24) ^ 0x61)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v174 = *(_DWORD *)(v131 + 4 * (v66 ^ 0xC5u)) ^ *(_DWORD *)&v128[4 * (BYTE2(v170) ^ 0x28)] ^ (v172 + 963255588 + ((2 * v172 + 254) & 0x148 ^ 0xFFEB7BFF)) ^ ((BYTE2(v170) ^ 0x74) + 1340684673 - ((v170 >> 15) & 0x102)) ^ (v44 >> 1);
  LODWORD(v107) = v173 ^ ((BYTE2(v171) ^ 0xE6) + 1340684673 - ((2 * (HIWORD(v171) ^ 0xB0E6)) & 0x102)) ^ *(_DWORD *)&v128[4 * (BYTE2(v171) ^ 0xBA)];
  LODWORD(v52) = v105;
  LODWORD(v55) = (v105 ^ 0x85)
               + 963255588
               + ((2 * (v105 ^ 0x85) + 254) & 0x148 ^ 0xFFEB7BFF);
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v66 >> 24) ^ 0xB8)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v61) = ((BYTE2(v105) ^ 8) + 1340684673 - ((v105 >> 15) & 0x102)) ^ *(_DWORD *)&v128[4 * (BYTE2(v105) ^ 0x54)] ^ *(_DWORD *)(v131 + 4 * (v171 ^ 0x29u)) ^ ((v171 ^ 0x44) + 963255588 + ((2 * (v171 ^ 0x44) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ (v44 >> 1);
  v175 = *(_DWORD *)(v133 + 4 * (BYTE1(v171) ^ 0xDDu)) ^ HIDWORD(v222) ^ (v174 + 1928830796 - ((2 * v174) & 0xE5EF3E98));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v171) ^ 0xB0)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v176 = *(_DWORD *)(v133 + 4 * (BYTE1(v105) ^ 0x8Fu));
  LODWORD(v105) = *(_DWORD *)(v133 + 4 * (BYTE1(v170) ^ 0xBDu)) ^ v223 ^ ((_DWORD)v61
                                                                          + 1928830796
                                                                          - ((2 * (_DWORD)v61) & 0xE5EF3E98));
  v177 = v176 ^ HIDWORD(v221) ^ *(_DWORD *)(v131 + 4 * (v170 ^ 0xB4u)) ^ ((v170 ^ 0xD9)
                                                                                           + 963255588
                                                                                           + ((2
                                                                                             * (v170 ^ 0xD9)
                                                                                             + 254) & 0x148 ^ 0xFFEB7BFF)) ^ (v44 >> 1) ^ (v118 + 1928830796 - ((2 * v118) & 0xE5EF3E98));
  LODWORD(v118) = v55 ^ v222 ^ *(_DWORD *)(v131 + 4 * (v52 ^ 0xE8)) ^ *(_DWORD *)(v133
                                                                                                + 4
                                                                                                * (BYTE1(v66) ^ 0x2Du)) ^ ((_DWORD)v107 + 1928830796 - ((2 * (_DWORD)v107) & 0xE5EF3E98));
  LODWORD(v61) = ((BYTE2(v118) ^ 0x66) + 1340684673 - ((v118 >> 15) & 0x102)) ^ *(_DWORD *)&v128[4 * (BYTE2(v118) ^ 0x3A)];
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v177) ^ 0x18)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v178 = ((v44 >> 1) + 1340684673 - ((2 * (v44 >> 1)) & 0x9FD27302)) ^ *(_DWORD *)&v128[4 * (BYTE2(v105) ^ 0x40)];
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v105 >> 24) ^ 0xEF)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v179 = (v44 >> 1) ^ *(_DWORD *)(v131 + 4 * (v177 ^ 0x90u)) ^ ((v177 ^ 0xFD)
                                                                                 + 963255588
                                                                                 + ((2 * (v177 ^ 0xFD)
                                                                                   + 254) & 0x148 ^ 0xFFEB7BFF));
  LODWORD(v43) = *(_DWORD *)(v131 + 4 * (v175 ^ 0x27u)) ^ ((v175 ^ 0x4A)
                                                                            + 963255588
                                                                            + ((2 * (v175 ^ 0x4A) + 254) & 0x148 ^ 0xFFEB7BFF));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (BYTE3(v118) ^ 0xAE)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v43) = (v44 >> 1) ^ *(_DWORD *)&v128[4 * (BYTE2(v177) ^ 0xF)] ^ (v43 + 1340684673 - ((2 * v43) & 0x9FD27302));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (HIBYTE(v175) ^ 0xDC)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v55) = v178 + 1928830796 - ((2 * v178) & 0xE5EF3E98);
  v180 = ((BYTE2(v175) ^ 0xE) + 1340684673 - ((v175 >> 15) & 0x102)) ^ v221 ^ *(_DWORD *)(v133
                                                                                        + 4 * (BYTE1(v118) ^ 0x7Cu)) ^ *(_DWORD *)&v128[4 * (BYTE2(v175) ^ 0x52)] ^ (v179 + 1928830796 - ((2 * v179) & 0xE5EF3E98));
  LODWORD(v66) = *(_DWORD *)(v133 + 4 * (BYTE1(v177) ^ 0x1Bu)) ^ HIDWORD(v220) ^ *(_DWORD *)(v131
                                                                                             + 4
                                                                                             * (v105 ^ 0x4Du)) ^ ((v105 ^ 0x20) + 963255588 + ((2 * (v105 ^ 0x20) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ ((_DWORD)v61 + 1928830796 - ((2 * (_DWORD)v61) & 0xE5EF3E98)) ^ (v44 >> 1);
  v181 = ((v118 ^ 0xB3) + 963255588 + ((2 * (v118 ^ 0xB3) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ HIDWORD(v219) ^ *(_DWORD *)(v133 + 4 * (BYTE1(v175) ^ 0x65u)) ^ *(_DWORD *)(v131 + 4 * (v118 ^ 0xDEu)) ^ v55;
  LODWORD(v61) = v181 ^ BYTE2(v105);
  LODWORD(v118) = *(_DWORD *)(v133 + 4 * (BYTE1(v105) ^ 0xA4u)) ^ v220 ^ (v43 + 1928830796 - ((2 * v43) & 0xE5EF3E98));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v61 ^ 0x7641388B) >> 24)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v107) = v44 >> 1;
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v180 ^ 0xF7E9CFA8) >> 24)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  v182 = v44 >> 1;
  v183 = (((v61 ^ 0x7641388B) >> 16)
        + 1340684673
        - (((v61 ^ 0x7641388B) >> 15) & 0x102)) ^ *(_DWORD *)&v128[4
                                                                               * (((v61 ^ 0x7641388B) >> 16) ^ 0x5C)];
  HIDWORD(v44) = *(_DWORD *)&v129[4 * (BYTE3(v118) ^ 0xE7)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v105) = v44 >> 1;
  v184 = v107 ^ *(_DWORD *)(v131 + 4 * ((v118 ^ BYTE2(v177)) ^ 0x18u)) ^ (((v180 ^ 0xF7E9CFA8) >> 16) + 1340684673 - (((v180 ^ 0xF7E9CFA8) >> 15) & 0x102)) ^ *(_DWORD *)&v128[4 * (((v180 ^ 0xF7E9CFA8) >> 16) ^ 0x5C)] ^ (((v118 ^ BYTE2(v177)) ^ 0x75) + 963255588 + ((2 * ((v118 ^ BYTE2(v177)) ^ 0x75) + 254) & 0x148 ^ 0xFFEB7BFF));
  v185 = (v184 + 1928830796 - ((2 * v184) & 0xE5EF3E98)) ^ *(_DWORD *)(v133 + 4 * (BYTE1(v66) ^ 0xECu));
  LODWORD(v61) = v182 ^ *(_DWORD *)&v128[4 * (BYTE2(v66) ^ 0xA7)] ^ ((BYTE2(v66) ^ 0xFB)
                                                                   + 1340684673
                                                                   - ((2 * ((v66 >> 16) ^ 0x57FB)) & 0x102)) ^ ((v61 ^ 0x8B) + 963255588 + ((2 * (v61 ^ 0x7641388B) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ *(_DWORD *)(v131 + 4 * (v61 ^ 0xE6u));
  HIDWORD(v44) = *(_DWORD *)&v129[4 * ((v66 >> 24) ^ 0x57)];
  LODWORD(v44) = HIDWORD(v44) ^ 0xCE7C7F7E;
  LODWORD(v61) = ((_DWORD)v61 + 1928830796 - ((2 * (_DWORD)v61) & 0xE5EF3E98)) ^ *(_DWORD *)(v133
                                                                                           + 4 * (BYTE1(v118) ^ 0x6Du));
  LODWORD(v118) = WORD1(v118);
  v186 = *(_DWORD *)&v128[4 * (v118 ^ 0x6D)];
  LODWORD(v118) = ((v180 ^ 0xA8) + 963255588 + ((2 * (v180 ^ 0xF7E9CFA8) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ ((v118 ^ 0x31) + 1340684673 - 2 * ((v118 ^ 0xE731) & 0x87 ^ v118 & 6)) ^ *(_DWORD *)(v131 + 4 * (v180 ^ 0xC5u));
  LODWORD(v118) = v212 ^ *(_DWORD *)(v133 + 4 * (BYTE1(v181) ^ 0xDAu)) ^ ((v118 ^ (v44 >> 1) ^ v186)
                                                                          + 1928830796
                                                                          - ((2 * (v118 ^ (v44 >> 1) ^ v186)) & 0xE5EF3E98));
  v187 = ((_DWORD)v61 - 2134288070 - ((2 * (_DWORD)v61) & 0x192B274)) ^ v100;
  LODWORD(v61) = (v185 - 1920950722 - ((2 * v185) & 0x1B013C7C)) ^ HIDWORD(v218);
  LODWORD(v133) = *(_DWORD *)(v133 + 4 * (BYTE1(v180) ^ 0x2Du)) ^ v218 ^ ((v66 ^ 0x2F)
                                                                          + 963255588
                                                                          + ((2 * (v66 ^ 0x2F) + 254) & 0x148 ^ 0xFFEB7BFF)) ^ v105 ^ *(_DWORD *)(v131 + 4 * (v66 ^ 0x42u)) ^ (v183 + 1928830796 - ((2 * v183) & 0xE5EF3E98));
  BYTE2(v180) = BYTE2(v118) ^ 0x8C;
  LODWORD(v60) = *(_DWORD *)(v39 - 120);
  v188 = (char *)*(&off_1E2ABD050 + (int)v60 - 1759) - 8;
  v189 = (char *)*(&off_1E2ABD050 + (int)v60 - 1771) - 8;
  v190 = (*(_DWORD *)&v189[4 * (BYTE2(v187) ^ 0x9E)] - 1695368064) ^ (*(_DWORD *)&v188[4
                                                                                     * (v133 ^ 0xC9)]
                                                                    - 1651039938);
  v191 = *(_DWORD *)&v188[4 * (v118 ^ 0xC8)];
  v192 = (char *)*(&off_1E2ABD050 + (int)v60 - 1775) - 4;
  v193 = v61 ^ 0x351D74B9;
  v194 = (*(_DWORD *)&v189[4 * (BYTE2(v133) ^ 0x38)] - 1695368064) ^ (*(_DWORD *)&v192[4
                                                                                     * ((v118 ^ 0x898C5DC8) >> 24)]
                                                                    - 219643730) ^ (*(_DWORD *)&v188[4 * (v187 ^ 0xA2)]
                                                                                  - 1651039938);
  v195 = *(_DWORD *)&v188[4 * (v61 ^ 0xB9)];
  v196 = *(unsigned int *)&v192[4 * (HIBYTE(v187) ^ 0xE7)];
  LODWORD(v188) = *(_DWORD *)&v192[4 * (BYTE3(v133) ^ 0xB8)];
  v197 = (char *)*(&off_1E2ABD050 + SHIDWORD(v211)) - 8;
  LODWORD(v118) = *(_DWORD *)&v197[4 * (BYTE1(v118) ^ 0x61)] ^ (*(_DWORD *)&v192[4 * ((v61 >> 24) ^ 0x65)]
                                                              - 219643730);
  LODWORD(v61) = BYTE1(v133) ^ 0xE9;
  LODWORD(v133) = *(_DWORD *)&v197[4 * (BYTE1(v187) ^ 0xA0)];
  LODWORD(v192) = *(_DWORD *)&v197[4 * v61];
  LODWORD(v118) = (v190 + 936930962 - ((2 * v190) & 0x6FB0DD24)) ^ v118;
  v198 = *(unsigned int *)&v189[4 * BYTE2(v180)];
  LODWORD(v129) = *(_DWORD *)&v197[4 * BYTE1(v193)] ^ v213 ^ (v194 + 936930962 - ((2 * v194) & 0x6FB0DD24));
  v199 = HIDWORD(a4) ^ HIDWORD(v218) ^ (v118 - 1920950722 - ((2 * v118) & 0x1B013C7C));
  v200 = (char *)*(&off_1E2ABD050 + (int)(v60 ^ 0x7F0)) - 8;
  v201 = v133 ^ HIDWORD(a4) ^ (v191 - ((2 * v191 + 992887420) & 0x6FB0DD24) - 714108976) ^ ((_DWORD)v188 - 219643730) ^ (*(_DWORD *)&v189[4 * BYTE2(v193)] - 1695368064);
  a1[*(_QWORD *)(v39 - 248)] = v200[BYTE1(v129) ^ 0x99] ^ 0xF0;
  v202 = (char *)*(&off_1E2ABD050 + (int)v60 - 1670) - 8;
  a1[*(_QWORD *)(v39 - 240)] = (v202[BYTE2(v199) ^ 0xADLL] + 13) ^ 0xC5;
  v203 = (char *)*(&off_1E2ABD050 + SHIDWORD(v210)) - 4;
  v204 = *(_QWORD *)(v39 - 208);
  a1[*(_QWORD *)(v39 - 200)] = v203[v129 ^ 0xFCLL] ^ 0xD2;
  a1[v204] = (v202[BYTE2(v201) ^ 0x8CLL] + 13) ^ 0x47;
  v205 = (char *)*(&off_1E2ABD050 + (int)v210) - 4;
  a1[*(_QWORD *)(v39 - 224)] = (v205[(v129 >> 24) ^ 0xDELL] - 53) ^ 0x1B;
  a1[*(_QWORD *)(v39 - 232)] = ((v202[BYTE2(v129) ^ 0x15] + ((v202[BYTE2(v129) ^ 0x15] + 13) ^ 0xDA) + 14) ^ 0xFE)
                             + v202[BYTE2(v129) ^ 0x15]
                             + 13;
  v206 = v211 ^ v192 ^ (v198 - 1695368064) ^ (v195 - 1651039938) ^ (v196
                                                                                - ((2 * v196 + 1708196188) & 0x6FB0DD24)
                                                                                + 717287232);
  a1[*(_QWORD *)(v39 - 216)] = v203[v206 ^ 5] ^ 0x20;
  a1[*(_QWORD *)(v39 - 168)] = (v205[HIBYTE(v199) ^ 0x4ELL] - 53) ^ 0xE6;
  a1[*(_QWORD *)(v39 - 160)] = (v205[HIBYTE(v201) ^ 0x9CLL] - 53) ^ 0xB8;
  v207 = *(_QWORD *)(v39 - 176);
  a1[v207] = (v205[HIBYTE(v206) ^ 0x67] - 53) ^ 0x91;
  a1[*(_QWORD *)(v39 - 152)] = v203[v201 ^ 0xF2] ^ 0x2A;
  a1[*(_QWORD *)(v39 - 192)] = v200[BYTE1(v201) ^ 0x1ELL] ^ 0x53;
  a1[*(_QWORD *)(v39 - 144)] = v200[BYTE1(v206) ^ 0x33] ^ 0x4A;
  a1[*(_QWORD *)(v39 - 184)] = v200[BYTE1(v199) ^ 0xBCLL] ^ 0x84;
  a1[*(_QWORD *)(v39 - 136)] = v203[v199 ^ 0x9FLL] ^ 0xD2;
  a1[*(_QWORD *)(v39 - 128)] = (v202[BYTE2(v206) ^ 0xDLL] + 13) ^ 0x8E;
  v208 = (_DWORD)v207 + 1797235913 + (~(2 * (_DWORD)v207 + 32) | 0x29C0B66Du) + 17;
  return (*(uint64_t (**)(uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(a35 + 8 * ((496 * ((v208 ^ 0x6B1FA4C9) < HIDWORD(v213))) ^ ((int)v60 - 585))))(210, v189, v203, v196, v208, v198, 218, v193, a2, a3, a4, a1, v210, v211, v212, v213, v214, v215, v216,
           v217,
           v218,
           v219,
           v220,
           v221,
           v222,
           v223,
           v224,
           v225,
           v226,
           v227,
           v228,
           v229,
           v230);
}

void sub_18FE6A85C()
{
  JUMPOUT(0x18FE686FCLL);
}

uint64_t sub_18FE6A890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43)
{
  uint64_t v43;

  return (*(uint64_t (**)(void))(v43
                              + 8
                              * (a43 ^ (194
                                      * (((2 * (a10 - (a12 & 0xF15E3BC) - 1507971040)) & 0x8F9B6FCA ^ 0xF116388)
                                       + ((a10 - (a12 & 0xF15E3BC) - 1507971040) ^ 0x4047463B)
                                       - 533137 == 1204131156)))))();
}

uint64_t sub_18FE6A958(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((v4 + v3 - 1204664293) < 8) ^ (a3 + 1)) & 1)
                                * ((a3 + 1385) ^ 0x73F)) ^ a3)))();
}

uint64_t sub_18FE6A9D0(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((116 * (a1 + a6 - 16 < (a3 ^ 0x6E9u) - 1853)) ^ a3 ^ 0x4FE)) - 8))();
}

uint64_t sub_18FE6AA10@<X0>(int a1@<W0>, int a2@<W3>, unint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v20;

  v9 = (v7 + v6 + a1);
  v10 = v9 + a3 + 1;
  v11 = ((_BYTE)v7 + (_BYTE)v6 + (_BYTE)a1) & 0xF;
  v12 = v11 - v9;
  v13 = v5 + v11 - v9;
  v14 = v11 + v5 + 11 * ((a2 - 1385) ^ 0x163u) - 1836;
  v15 = v11 + v4 - v9 + 2;
  v16 = v11 + v4 + 3;
  v17 = v12 + v3 + 4;
  v18 = v3 + v11 + ((86 * ((a2 - 1385) ^ 0x1C2u)) ^ 0x201);
  v20 = v16 > a3 && v15 < v10;
  if (v13 < v10 && v14 > a3)
    v20 = 1;
  if (v17 < v10 && v18 > a3)
    v20 = 1;
  return (*(uint64_t (**)(void))(v8 + 8 * ((1928 * !v20) ^ (a2 - 1385))))();
}

uint64_t sub_18FE6AAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                       + 8
                                                                       * ((432
                                                                         * (((v7 < 0x10) ^ (a7 - 45)) & 1)) | a7))
                                                           - ((a7 + 1424287187) & 0xAB1B19E9 ^ 0x1C5)))(a1, a2, 0);
}

uint64_t sub_18FE6AB14@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  int8x16_t v12;
  uint64_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16x4_t v17;
  int8x16x4_t v18;

  v17.val[1].i64[0] = ((_BYTE)a2 + 9) & 0xF;
  v17.val[1].i64[1] = ((_BYTE)a2 + 8) & 0xF;
  v17.val[2].i64[0] = ((_BYTE)a2 + 7) & 0xF;
  v17.val[2].i64[1] = ((_BYTE)a2 + 6) & 0xF;
  v17.val[3].i64[0] = ((_BYTE)a2 + 5) & 0xF;
  v17.val[3].i64[1] = ((_BYTE)a2 + 4) & 0xF;
  v11 = v9 + v8 + a1;
  v12.i64[0] = 0x7777777777777777;
  v12.i64[1] = 0x7777777777777777;
  v13 = (((a3 - 368) | 2) ^ 0x5C) & v11;
  v17.val[0].i64[0] = v13;
  v17.val[0].i64[1] = ((_BYTE)a2 + 10) & 0xF;
  v14.i64[0] = vqtbl4q_s8(v17, (int8x16_t)xmmword_190443D40).u64[0];
  v18.val[0].i64[1] = ((_BYTE)a2 + 2) & 0xF;
  v18.val[1].i64[1] = a2 & 0xF;
  v18.val[2].i64[1] = (a2 + 14) & 0xF;
  v18.val[3].i64[1] = ((_BYTE)a2 + 12) & 0xF;
  v18.val[0].i64[0] = ((_BYTE)a2 + 3) & 0xF;
  v18.val[1].i64[0] = ((_BYTE)a2 + 1) & 0xF;
  v18.val[2].i64[0] = ((_BYTE)a2 - 1) & 0xF;
  v18.val[3].i64[0] = (a2 + 13) & 0xF;
  v14.i64[1] = vqtbl4q_s8(v18, (int8x16_t)xmmword_190443D40).u64[0];
  v15 = vrev64q_s8(vmulq_s8(v14, v12));
  *(int8x16_t *)(a4 - 15 + v11) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v6 + v13 - 15), *(int8x16_t *)(a4 - 15 + v11)), veorq_s8(*(int8x16_t *)(v13 + v5 - 13), *(int8x16_t *)(v13 + v4 - 11))), vextq_s8(v15, v15, 8uLL));
  return (*(uint64_t (**)(void))(v10 + 8 * ((2046 * ((v7 & 0xFFFFFFF0) == 16)) ^ a3)))();
}

void sub_18FE6AC64()
{
  JUMPOUT(0x18FE6ABE4);
}

uint64_t sub_18FE6AC70(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 + 433 + ((v4 + 433) ^ 0x529) - 1986) * (v3 != a3)) ^ v4))
                            - 8))();
}

uint64_t sub_18FE6ACA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  char v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((((a7 - 259) | 0x62C) - 1807) * ((v7 & 8) == 0)) ^ a7)) - 4))();
}

uint64_t sub_18FE6ACD4@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W5>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  int v47;
  char v48;
  uint64_t v49;
  int8x16x4_t v51;

  *(_DWORD *)(v45 - 120) = v46;
  *(_DWORD *)(v45 - 128) = v41;
  *(_DWORD *)(v45 - 136) = v41 & 0xFFFFFFF8;
  v47 = -a2;
  v48 = v44 + v43 + v42;
  v49 = (v44 + v43 + a1 + v47);
  v51.val[0].i64[0] = ((_BYTE)v44 + (_BYTE)v43 + (_BYTE)a1 + (_BYTE)v47) & 0xF;
  v51.val[0].i64[1] = (v48 + (_BYTE)v47 + ((a3 + 43) | 0x18)) & 0xF;
  v51.val[1].i64[0] = (v48 + 25 + (_BYTE)v47) & 0xF;
  v51.val[1].i64[1] = (v48 + 24 + (_BYTE)v47) & 0xF;
  v51.val[2].i64[0] = (v48 + 23 + (_BYTE)v47) & 0xF;
  v51.val[2].i64[1] = (v48 + 22 + (_BYTE)v47) & 0xF;
  v51.val[3].i64[0] = (v48 + 21 + (_BYTE)v47) & 0xF;
  v51.val[3].i64[1] = (v48 + 20 + (_BYTE)v47) & 0xF;
  *(int8x8_t *)(a4 - 7 + v49) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v40 + (v49 & 0xF) - 7), *(int8x8_t *)(a4 - 7 + v49)), veor_s8(*(int8x8_t *)((v49 & 0xF) + v39 - 5), *(int8x8_t *)((v49 & 0xF) + v38 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v51, (int8x16_t)xmmword_190443D50), (int8x8_t)0x7777777777777777)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a38 + 8 * ((11 * (8 - (v41 & 0xFFFFFFF8) == v47)) ^ a3)) - 8))((__n128)xmmword_190443D50);
}

void sub_18FE6AE04()
{
  JUMPOUT(0x18FE6AD34);
}

uint64_t sub_18FE6AE0C(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ (111 * (*(_DWORD *)(v2 - 128) == *(_DWORD *)(v2 - 136)))))
                            - ((a1 + 1299) ^ 0xFFFFFFFFFFFFFFFALL)
                            - ((a1 - 1951011549) & 0x744A17EF)))();
}

uint64_t sub_18FE6AE60@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (a2 - 1204131685);
  *(_BYTE *)(a3 + v8) ^= *(_BYTE *)(v6 + (v8 & 0xF)) ^ *(_BYTE *)((v8 & 0xF) + v5 + 2) ^ *(_BYTE *)((v8 & 0xF) + v4 + 4) ^ (119 * (v8 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((41 * (a2 - 1 != v3)) ^ (a1 - 1754))) - 8))();
}

void sub_18FE6AECC()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1034285194)
    v1 = 446849184;
  else
    v1 = -446874760;
  *(_DWORD *)(v2 + 32) = v1;
}

void sub_18FE6AF30(uint64_t a1)
{
  int v1;

  v1 = (*(_DWORD *)(a1 + 16)
      + 1374699841 * ((2 * ((a1 ^ 0x8BDA9FA5) & 0x337A87DF) - (a1 ^ 0x8BDA9FA5) + 1283815456) ^ 0x2AABFF8C)
      - 574992589) & 0x2245B39A;
  __asm { BR              X15 }
}

uint64_t sub_18FE6B128(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  int v9;

  v7 = a2 == 31;
  v8 = (a2 + 1);
  v9 = v7;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(v6 + 8 * (((((a3 - 178) | 0x380) - 407) * v9) ^ a3))
                                                  - 8))(a5 ^ v5, v8);
}

uint64_t sub_18FE6B15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  *(_DWORD *)(a10 - 0x21738119BF0B616CLL) = -2050626683 - v16;
  v22 = 535753261 * ((v21 - 1808163310 - 2 * ((v21 - 136) & 0x94399E9A)) ^ 0x9ECD90B5);
  *(_QWORD *)(v21 - 128) = a15;
  *(_DWORD *)(v21 - 120) = v22 ^ 0x48EA2F0F;
  *(_DWORD *)(v21 - 136) = v22 + v20 + 408;
  sub_18FE77254((_DWORD *)(v21 - 136));
  v23 = 1374699841 * (((v21 - 136) & 0x93827A1D | ~((v21 - 136) | 0x93827A1D)) ^ 0x1899DEB);
  *(_QWORD *)(v21 - 128) = a15;
  *(_DWORD *)(v21 - 136) = v23 + v20 + 1477;
  *(_DWORD *)(v21 - 132) = v23
                         + ((32 * v17) ^ 0xFEDDCFB7)
                         + ((((v20 - 1034384463) & 0x3DA773A6) - 38035814) & (v17 << 6))
                         + 1567358973;
  sub_18FE80928((_DWORD *)(v21 - 136));
  *(_DWORD *)(v21 - 120) = v20
                         - 1759421093
                         * (((((v21 - 136) | 0xC4C87612) ^ 0xFFFFFFFE) - (~(v21 - 136) | 0x3B3789ED)) ^ 0x884A39B9)
                         + 935;
  *(_QWORD *)(v21 - 136) = &STACK[0xFB9CCB0B87C56DC];
  *(_QWORD *)(v21 - 128) = a16;
  sub_18FE643E0(v21 - 136);
  *(_DWORD *)(v21 - 112) = (v20 + 846) ^ (1374699841 * ((v21 - 1302056869 - 2 * ((v21 - 136) & 0xB26430E3)) ^ 0xDF9028EA));
  *(_QWORD *)(v21 - 136) = a15;
  *(_QWORD *)(v21 - 120) = a16;
  v24 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v20 - 202)))(v21 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * ((223
                                                        * (*(_DWORD *)(v21 - 128) <= ((v20 - 675742032) & 0x284705F5 ^ 0x12853157u))) ^ v20))
                                          - 4))(v24);
}

uint64_t sub_18FE6B3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_DWORD *)(v18 - 120) = v16 - 1759421093 * ((v18 - 136) ^ 0xB37DB054) + 1103;
  *(_QWORD *)(v18 - 136) = a15;
  *(_QWORD *)(v18 - 128) = v17;
  v19 = sub_18FE643E0(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((1970 * (a10 < ((v16 - 36) | 0x40) - 193)) ^ v16)))(v19);
}

uint64_t sub_18FE6B42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  *(_QWORD *)(v19 - 136) = a12;
  *(_QWORD *)(v19 - 128) = a16;
  *(_DWORD *)(v19 - 120) = v16 - 1759421093 * ((v19 - 136) ^ 0xB37DB054) + 1075;
  sub_18FE643E0(v19 - 136);
  v20 = 1374699841 * ((v19 - 136) ^ 0x6DF41809);
  *(_QWORD *)(v19 - 128) = a14;
  *(_DWORD *)(v19 - 136) = v20 + v16 + 1617;
  *(_DWORD *)(v19 - 132) = v20 + 1548341173;
  sub_18FE80928((_DWORD *)(v19 - 136));
  *(_DWORD *)(v19 - 112) = (v16 + 986) ^ (1374699841
                                        * ((-804557690 - ((v19 - 136) | 0xD00B6C86) + ((v19 - 136) | 0x2FF49379)) ^ 0x42008B70));
  *(_QWORD *)(v19 - 120) = a16;
  *(_QWORD *)(v19 - 136) = a14;
  v21 = v17(v19 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * (((2
                                                         * (((v16 + 65) ^ (*(_DWORD *)(v19 - 128) > 0x128534A3u)) & 1)) & 0xFB | (4 * (((v16 + 65) ^ (*(_DWORD *)(v19 - 128) > 0x128534A3u)) & 1))) ^ (v16 + 1208)))
                                          - (((v16 + 326) | 0x96u) ^ 0x29ALL)))(v21);
}

uint64_t sub_18FE6B5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  int v12;
  uint64_t v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * ((92
                                          * ((a12 ^ 0x5FA9DD3E)
                                           - 1132986386
                                           + ((2 * a12) & 0xBF53BA7C)
                                           + ((v12 - 605) | 0x40E)
                                           - 471982461 >= ((v12 - 476) ^ 0x7FFFFF3Cu))) ^ v12))
                            - 8))();
}

uint64_t sub_18FE6C220(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(qword_1E2AB8EB0[(1739 * (*(_DWORD *)(a2 + 4) == 1066855074)) ^ 0x3FFu] - 4))();
}

uint64_t sub_18FE6C274(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(*(_QWORD *)(a1 + 96) + 468) = *(_BYTE *)(*(_QWORD *)(a2 + 8) + 12);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 2304) - (v3 ^ 0xF58EF98FLL)))();
}

void sub_18FE6C2D8()
{
  JUMPOUT(0x18FE6C2A8);
}

uint64_t sub_18FE6C2E0@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

void sub_18FE6C2E8(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x17D22776E6706D73) - 1233132193;
  v3 = *(_DWORD *)(a1 + 20) + v1 - 125820823;
  v4 = v2 < 0x1E3A8169;
  v5 = v2 > v3;
  if (v3 < 0x1E3A8169 != v4)
    v5 = v4;
  __asm { BR              X10 }
}

uint64_t sub_18FE6C3CC(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1897
                                          * (((*(unsigned __int8 *)(*(_QWORD *)(a1 + 40)
                                                                  + (v2 - 1740282891))
                                             - ((2
                                               * *(unsigned __int8 *)(*(_QWORD *)(a1 + 40)
                                                                    + (v2 - 1740282891))) & 0xC4)
                                             + 996572258) & 0x1F) != 29)) ^ v3))
                            - 12))();
}

uint64_t sub_18FE6C41C()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  _BOOL4 v4;

  v4 = v2 + 860287219 > (v0 + 1967598588);
  if ((v0 + 1967598588) < 0x9B018CFC != (v2 + 860287219) < 0x9B018CFC)
    v4 = (v2 + 860287219) < 0x9B018CFC;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v3 + 695) * !v4) ^ v3)) - 12))();
}

uint64_t sub_18FE6C47C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((204 * (*(unsigned __int8 *)(v0 + (v3 + 1)) >> 7)) ^ (v2 + 667)))
                            - 4))();
}

uint64_t sub_18FE6C4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  char v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((1794
                                          * (((((v7 + 97) & 0x7F ^ 0xDFCFDDFF) + 2 * ((v7 + 97) & 0x7F)) & 0xDFCFDFFC) == ((463 * (a6 ^ 0x384)) ^ 0xDFCFDD9E))) ^ a6))
                            - 12))();
}

uint64_t sub_18FE6C558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v9 = a5 + v7 + ((32 * v8) ^ 0x62BFE5E3);
  v10 = v9 < 0xAA4A102B;
  v11 = v9 > v5 - 2070958293;
  if ((v5 - 2070958293) < 0xAA4A102B != v10)
    v11 = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((4 * !v11) | (32 * !v11)) ^ v8)) - 8))();
}

uint64_t sub_18FE6C5CC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a2 ^ 0x75C0 ^ ((a5 == -540025344) | (32 * (a5 == -540025344)))))
                            - 4))();
}

uint64_t sub_18FE6C644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  int v9;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v7 + 8 * ((19 * (v8 + v9 != -540025343)) ^ (a7 - 13))))(a1, (a7 - 786) | 0x104u);
}

void sub_18FE6C6C4()
{
  JUMPOUT(0x18FE6C68CLL);
}

uint64_t sub_18FE6C6D0(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  v8 = v7 + v4 + v5 + v6 + 49057148 + 746638741;
  v9 = v2 - 1865130322;
  v10 = (v9 < 0xB68EBFAE) ^ (v8 < 0xB68EBFAE);
  v11 = v8 > v9;
  if (v10)
    v11 = v8 < 0xB68EBFAE;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((94 * !v11) ^ (a2 + 24))) - 8))();
}

uint64_t *sub_18FE6C754@<X0>(uint64_t *result@<X0>, int a2@<W3>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = result[6];
  v9 = *result;
  v8 = result[1];
  *a3 = v5 - 575886862;
  *(_DWORD *)(v9 - 0x38DF4D133EEC7284) = v4;
  *(_DWORD *)(v7 - 0x335F4D7B17DD4E17) = v6;
  *(_QWORD *)(v8 - 0x4908E0DB1B326768) = v3 + (a2 - 1249314692);
  *((_DWORD *)result + 8) = 446849184;
  return result;
}

void sub_18FE6C7CC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 + 1224239923 * ((a1 & 0x6C08674A | ~(a1 | 0x6C08674A)) ^ 0x61446562);
  v2 = *(_QWORD *)(a1 + 8);
  v5 = (535753261 * (((&v3 | 0xD1164399) - (&v3 & 0xD1164399)) ^ 0xDBE24DB6)) ^ (v1 - 127);
  v4 = v2;
  sub_18FE58F28((uint64_t)&v3);
  __asm { BR              X9 }
}

uint64_t sub_18FE6C908@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v7;

  v5 = v1
     + (((v4 - v3) >> 4) & 0xFFDFEFA ^ 0xEB140A0)
     + (((v4 - v3) >> 5) ^ 0x38A75FAF)
     - 440090991;
  v7 = v5 > 0x25C3BF4D && v5 < (v1 ^ 0x25C3BE0Eu) + v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1134 * v7) ^ v1)) - 12))();
}

uint64_t sub_18FE6C984@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v2 - 1764) * ((v1 & 0x1F) == 0xC)) ^ v2))
                            - (v2 - 1074)
                            + 689))();
}

uint64_t sub_18FE6C9B8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  _DWORD *v4;
  uint64_t v5;
  int v6;

  v6 = v1 - 101077508;
  if (*v4 + 244105604 < 0)
    v6 = 2046274806 - v1;
  *v4 = *v4 - 972598649 + v6;
  **(_DWORD **)(v5 - 0xFB9CCB0B87C5694) = *(_DWORD *)(*(_QWORD *)(v5 - 0xFB9CCB0B87C5694) + 4 * (v1 - 1073676157));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v2 - 796129099 <= -1869805255) * (((v3 + 335) | 0x95) + 391)) ^ v3)))();
}

void sub_18FE6CA8C()
{
  JUMPOUT(0x18FE6CA4CLL);
}

void sub_18FE6CA94()
{
  _DWORD *v0;

  *v0 = 1903378044;
}

void sub_18FE6CCA8(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 628203409 * ((-2 - ((~(_DWORD)a1 | 0x96C77CC6) + (a1 | 0x69388339))) ^ 0x144F70F5);
  __asm { BR              X11 }
}

uint64_t sub_18FE6CDA0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((11 * (v0 ^ 0x3D6)) ^ 0x640) * (v1 != 0)) ^ v0)) - 12))();
}

uint64_t sub_18FE6CDE0()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  _BOOL4 v7;

  v5 = ((v1 - 437) ^ 0x408) + *(_DWORD *)(v2 + 16) - v0 - 779008369;
  v7 = (*(_DWORD *)(v3 - 0x4F927BF50B0C4CE7) & 1) != (((v1 - 437) | 0x178) ^ 0x17B) && v5 < 0xFFFFFFBF;
  return (*(uint64_t (**)(void))(v4 + 8 * ((108 * v7) ^ v1)))();
}

uint64_t sub_18FE6CE68@<X0>(uint64_t (*a1)(uint64_t *)@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, unsigned int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;

  v11 = 1178560073 * (((&a3 | 0x1C926599) + (~&a3 | 0xE36D9A66)) ^ 0x2E8465D8);
  a7 = 1920119778 - v11;
  a5 = v11 ^ 0x5E0CEC64;
  a6 = v11 + v10 - 233;
  a3 = v8;
  a4 = v7;
  v12 = a1(&a3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (((*(_DWORD *)(v8 - 0x4F927BF50B0C4CE3) == ((v10 + 656) ^ 0x1AA264AB))
                                                        * (((v10 - 1541733128) & 0x5BE4FDDF) + 355)) ^ v10))
                                          - 4))(v12);
}

void sub_18FE6CF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  unsigned int v5;
  unint64_t v6;
  _BYTE *v7;

  v5 = v3 - ((2 * v3 + 52598198) & 0x5D7AE98) - 729996761;
  *v7 = (v4 ^ HIBYTE(v5) ^ 9) - ((2 * (v4 ^ HIBYTE(v5) ^ 9)) & 0xEF) - 9;
  v7[1] = (BYTE2(v5) ^ 0xEB) + (~(2 * (BYTE2(v5) ^ 0xEB)) | 0x11) - 8;
  v7[2] = (((unsigned __int16)(v3 - ((2 * v3 - 27210) & 0xAE98) + 8743) >> 8) ^ 0xD7) + ((v5 >> 7) & 0xEE ^ 0x51) - 8;
  v7[3] = (v3 - ((2 * v3 - 74) & 0x98) + 39) ^ 0xBB;
  v6 = v2 - ((2 * v2) & 0xA16F7D06F4221006) - 0x2F48417C85EEF7FDLL;
  v7[4] = (HIBYTE(v6) ^ 0xD0) + ((2 * HIBYTE(v6)) & 0xEF ^ 0x5F) - 8;
  v7[5] = (BYTE6(v6) ^ 0xB7) + (~(2 * (BYTE6(v6) ^ 0xB7)) | 0x11) - 8;
  v7[6] = (BYTE5(v6) ^ 0xBE) - ((2 * (BYTE5(v6) ^ 0xBE)) & 0xEF) - 9;
  v7[7] = (BYTE4(v6) ^ 0x83) + (~(2 * (BYTE4(v6) ^ 0x83)) | 0x11) - 8;
  v7[8] = (((v2 - ((2 * (_DWORD)v2) & 0xF4221006) + 2047936515) >> 24) ^ 0x7A)
        - ((2 * (((v2 - ((2 * (_DWORD)v2) & 0xF4221006) + 2047936515) >> 24) ^ 0x7A)) & 0xEF)
        - 9;
  v7[9] = (BYTE2(v6) ^ 0x11) - ((2 * (BYTE2(v6) ^ 0x11)) & 0xEF) - 9;
  v7[10] = (BYTE1(v6) ^ 8) + 2 * ((BYTE1(v6) ^ 8 | 0xF7) ^ BYTE1(v6)) - 7;
  v7[11] = (v2 - ((2 * v2) & 6) + 3) ^ 0xF4;
  *(_DWORD *)(v0 + 4) = *(_DWORD *)(v1 - 0x4F927BF50B0C4CE3);
}

uint64_t sub_18FE6D658(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  BOOL v3;

  v1 = 3804331 * ((((2 * (_DWORD)a1) | 0x5B2BA828) - (_DWORD)a1 - 764793876) ^ 0xD70B2742);
  v2 = a1[1] + v1;
  v3 = (*a1 ^ v1 ^ 0x1AA260A0) - 1 < 0x63;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E2ABD050 + (int)(v2 ^ 0x6FA))
                              + (int)((4 * ((v3 ^ (43 * (v2 ^ 0xC8) + 1)) & 1)) & 0xDF | (32 * ((v3 ^ (43 * (v2 ^ 0xC8) + 1)) & 1)) | v2)
                              - 1)
                            - ((26 * (v2 ^ 0x6F9)) ^ 0x45ALL)))();
}

uint64_t sub_18FE6D714()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (463 * ((v0 - 100) > 0x9B))))
                            - 2 * (v1 ^ 0x737u)
                            + 1738))();
}

uint64_t sub_18FE6D750@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;

  if (v2 + 49998 < (((v4 + 50) | 0x242) ^ 0x19ECu))
    v3 = a2;
  *(_DWORD *)(*(_QWORD *)(result + 8) - 0x54D1C1F94D326FD2) = v3;
  return result;
}

void sub_18FE6D7E0(uint64_t a1)
{
  int v1;

  v1 = 1734042137 * ((-2 - ((a1 | 0xC7BA4821) + (~(_DWORD)a1 | 0x3845B7DE))) ^ 0x648B7493);
  __asm { BR              X8 }
}

uint64_t sub_18FE6D898(uint64_t result)
{
  *(_DWORD *)(result + 8) = 535377943;
  return result;
}

void V0YaM92nP0Xx19HNvczPJ(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;
  int v7;

  if (a3)
    v6 = a6 == 0;
  else
    v6 = 1;
  v7 = !v6;
  __asm { BR              X9 }
}

uint64_t sub_18FE6DCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16)
{
  unsigned int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  a15 = (1178560073 * (((&a15 | 0x4705D23) + (~&a15 | 0xFB8FA2DC)) ^ 0x36665D62)) ^ 0x650810FC;
  v19 = sub_18FE97A00(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * ((1808 * (a16 == v17)) ^ v16)) - 12))(v19);
}

uint64_t sub_18FE6DD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  a17 = 801 - 460628867 * ((((2 * &a15) | 0xE4B01758) - &a15 + 229110868) ^ 0xBECE89D1);
  a15 = &STACK[0x1706FB9DE6F6FC6C];
  sub_18FE785A4((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((47 * (a16 == 446849184)) ^ 0x15Fu)) - 12))(v18, v19, v20, v21, v22, v23, v24, v25);
}

uint64_t sub_18FE6DDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16, uint64_t a17, unsigned int a18, uint64_t a19)
{
  unsigned int v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v24 = 628203409 * ((1286330454 - (&a15 | 0x4CABD856) + (&a15 | 0xB35427A9)) ^ 0x31DC2B9A);
  a17 = v20;
  a19 = a11;
  a18 = (v21 ^ 0x3E7FFDEF) + ((2 * v21) & 0x7CFFFBDE) - 269568202 + v24;
  a15 = 1107 - v24;
  sub_18FE6CCA8(&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * ((686 * (a16 == v22)) ^ v19)) - 12))(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10);
}

uint64_t sub_18FE6DEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, unsigned int a18, uint64_t a19)
{
  int v19;
  uint64_t v20;
  int v21;
  uint64_t (*v22)(int *);
  int v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;

  v26 = ((-420577316 - (&a15 | 0xE6EE7FDC) + (&a15 | 0x19118023)) ^ 0x9B998C10) * v19;
  a17 = v20;
  a15 = v23 - v26;
  a18 = v26 + (v21 ^ 0xEFEEFDAF) + ((2 * v21) & 0xDFDDFB5E) + 1048557430;
  a19 = a11;
  v27 = v22(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * ((1632 * (a16 == v24)) ^ 0x15Fu)) - 12))(v27);
}

uint64_t sub_18FE6DF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16, int a17, uint64_t a18, unint64_t *a19, int a20)
{
  int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 3804331
      * (((&a15 | 0xC3382044) - &a15 + (&a15 & 0x3CC7DFB8)) ^ 0x39A6D312);
  a16 = -657993852 - v22;
  a17 = v22 ^ 0x7EED036C;
  a20 = v22 ^ 0x7F7DFDA0;
  a18 = a11;
  a19 = &STACK[0x2185BF99DEDD7464];
  v23 = sub_18FE97E30((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21 + 8 * ((28 * (a15 == v20)) ^ 0x62Cu)) - 8))(v23);
}

uint64_t sub_18FE6E070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16, unint64_t *a17, unint64_t *a18, unint64_t *a19, unsigned int a20)
{
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  a15 = (v22 - 249) ^ (1374699841
                     * ((((&a15 | 0x8777058A) ^ 0xFFFFFFFE) - (~&a15 | 0x7888FA75)) ^ 0x157CE27C));
  a17 = &STACK[0x6D40EE9100C9998D];
  a18 = a12;
  v24 = v20;
  ((void (*)(unsigned int *))(*(_QWORD *)(v20 + 8 * (v22 ^ 0x2C3)) - 4))(&a15);
  a20 = (v22 - 79) ^ (1225351577
                    * ((((2 * &a15) | 0x46EC86E2) - &a15 + 1552530575) ^ 0x80EC9B67));
  a18 = &STACK[0x52155BFDA386721D];
  a19 = &STACK[0x4BBB3C48FF632B58];
  a17 = a12;
  (*(void (**)(unsigned int *))(v24 + 8 * (v22 - 623)))(&a15);
  a15 = v22 + ((&a15 & 0xD3F4565C | ~(&a15 | 0xD3F4565C)) ^ 0xD6955AF5) * v21 - 281;
  a17 = a12;
  v25 = sub_18FE58674((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (((a16 == 446849184) * ((v22 ^ 0x4C6) + 104)) ^ v22)))(v25);
}

uint64_t sub_18FE6E1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  int v15;
  uint64_t v16;

  return (*(uint64_t (**)(void))(v16 + 8 * ((a14 == ((v14 + 834) ^ (v15 + 1516))) | v14)))();
}

uint64_t sub_18FE6E21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v13;
  unsigned int v14;
  uint64_t v15;
  _BOOL4 v16;

  v16 = ((uint64_t (*)(_QWORD, uint64_t))*(&off_1E2ABD050 + v13 - 520))(a13 ^ v14, 1975817575) == 0;
  return (*(uint64_t (**)(void))(v15 + 8 * ((((((v13 - 552) ^ v16) & 1) == 0) * (((v13 - 226) | 0x424) + 314)) ^ v13)))();
}

uint64_t sub_18FE6E280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;

  v16 = (a13 ^ v14) - ((((v13 | 0x20) + 253) ^ 0xE1711B53) & (2 * (a13 ^ v14))) + 1891142982;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15
                                        + 8
                                        * ((((2 * v16) & 0xFFDFBD5E ^ 0xE151180C)
                                          + ((v13 | 0x20) ^ 0xF57530B ^ v16)
                                          - 1770066432 == 376360111) | v13 | 0x20))
                            - 8))();
}

uint64_t sub_18FE6E310(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  _QWORD *v4;
  int v5;
  void (*v7)(_BYTE *);
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[4];
  unsigned int v12;
  uint64_t v13;

  *v4 = a1;
  *v8 = v2;
  v5 = 9 * ((v1 + 834) ^ 0x60B);
  v13 = v10;
  v12 = v1
      + 834
      + 535753261 * ((v11 - 1008275811 - 2 * ((unint64_t)v11 & 0xC3E6EE9D)) ^ 0xC912E0B2)
      - 1087;
  v7(v11);
  v12 = v5
      + 535753261 * ((990738596 - (v11 | 0x3B0D78A4) + (v11 | 0xC4F2875B)) ^ 0xCE068974)
      + 142;
  v13 = v9;
  v7(v11);
  return v3 ^ 0x1AA260A0u;
}

void sub_18FE6E720(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 1178560073 * ((((2 * (_DWORD)a1) | 0xC6F7E34E) - (_DWORD)a1 - 1669067175) ^ 0x516DF1E7);
  __asm { BR              X10 }
}

uint64_t sub_18FE6E7D4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_DWORD *)(*(_QWORD *)(a1 + 8) + v3) == v1)
                                * ((v4 - 934) ^ 0x368 ^ ((v4 - 1534) | 0x111))) | v4)))();
}

uint64_t sub_18FE6E810@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  _QWORD v4[2];
  unsigned int v5;

  v4[0] = v1;
  v4[1] = a1;
  v5 = v2 - 1759421093 * (v4 ^ 0xB37DB054) + 537;
  return sub_18FE643E0((uint64_t)v4);
}

void sub_18FE6E968(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  char *v12;
  unsigned int v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  unint64_t *v21;
  int32x4_t v22;
  int32x4_t v23;
  int32x4_t v24;
  int v25;
  int v26;
  uint64_t *v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  int v39;
  int v40;
  unint64_t *v41;
  unsigned int v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v2 = 1734042137 * (a1 ^ 0x5CCEC34D);
  v3 = *(_DWORD *)(a1 + 24) ^ v2;
  v4 = *(_DWORD *)(a1 + 20) ^ v2;
  v5 = *(_DWORD *)(a1 + 8);
  v17 = 1734042137 * (a1 ^ 0x1A7FA49B5CCEC34DLL);
  v6 = v5 + v2;
  v7 = 3804331
     * (((&v40 ^ 0x832C11E5 | 0xC105866F) - ((&v40 ^ 0x832C11E5) & 0xC105866F)) ^ 0xB8B764DC);
  v42 = v7 + 432186149;
  v40 = v7 ^ (v3 + 1172345383);
  v21 = &STACK[0x1A8FA111108FB5E6];
  v41 = &STACK[0x1A8FA111108FB5E6];
  sub_18FE7EAE0((uint64_t)&v40);
  v8 = v4;
  v9 = v3;
  v30 = v6 + 2092702020;
  v29 = -672621470;
  v16 = v6 + 627744047;
  v19 = v6 - 1436467997;
  v20 = v6 - 1367077006;
  v27 = &v38;
  v15 = &v15 - 34903151;
  v23 = vdupq_n_s32(0x1AA260B3u);
  v24 = vdupq_n_s32(0x1AA260A0u);
  v22 = vdupq_n_s32(0x1AA260A9u);
  v25 = v3 ^ 0x49B;
  v26 = (2 * v3) ^ 0x328;
  v32 = v3 ^ 0x49Bu;
  v33 = v32;
  v28 = v3;
  v18 = a1;
  v10 = *(_QWORD *)a1;
  v11 = v3 + 1167;
  v12 = (char *)*(&off_1E2ABD050 + (v3 ^ 0x1C)) - 8;
  v13 = v8 - ((((v9 + 996) | 0x104) + 2 * v8 + 66686678) & 0x5D7AE98) - 1662475963;
  v34 = (HIBYTE(v13) ^ 2) - ((2 * (HIBYTE(v13) ^ 2)) & 0xEF) - 9;
  v35 = (BYTE2(v13) ^ 0xEB) + (~(2 * (BYTE2(v13) ^ 0xEB)) | 0x11) - 8;
  v36 = (BYTE1(v13) ^ 0xD7) + ((v13 >> 7) & 0xEE ^ 0x51) - 8;
  v37 = (v8 - ((((v9 - 28) | 4) + 2 * v8 - 42) & 0x98) + 69) ^ 0xBB;
  v14 = *(_QWORD *)&v12[8
                      * ((63 * (((2 * (v39 & 0x3F)) ^ 2) + (v39 & 0x3F ^ 0x7AFFBF7Eu) - 2063581115 > 0xFFFFFFBF)) ^ v11)]
      - 8;
  v31 = v10;
  __asm { BR              X14 }
}

uint64_t sub_18FE6ECF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,char a34)
{
  int v34;
  int v35;
  uint64_t v36;
  int v37;

  v37 = v34 ^ 0x71B;
  *(_BYTE *)(a5 + (v35 + v37 - 520)) = a34;
  *(_BYTE *)(a5 + (a7 - 1790876782)) = *(&a34 + (v37 ^ 0x233u) - 51);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (v37 ^ 0x7A6)))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_18FE6ED88@<X0>(uint64_t a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,char a29)
{
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;

  *(_BYTE *)(a1 + (v32 + a2 + 1)) = *(&a29 + (v31 - 743270223));
  return (*(uint64_t (**)(void))(v33 + 8 * ((1189 * (v30 + 23 < (v29 - 515))) ^ v29)))();
}

uint64_t sub_18FE6EDD4@<X0>(uint64_t a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,char a29)
{
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;

  *(_BYTE *)(a1 + (a2 + 2)) = *(&a29 + (v30 - 743270276 + v29 + 2));
  v32 = 1759421093 * ((((2 * (v31 - 168)) | 0x7437BFB4) - (v31 - 168) + 1172578342) ^ 0x9666F8E);
  *(_DWORD *)(v31 - 160) = v32 + v29 + 1473;
  *(_DWORD *)(v31 - 156) = v32 + 162566804;
  *(_QWORD *)(v31 - 168) = a10;
  v33 = sub_18FE7DA0C(v31 - 168);
  return a8(v33);
}

uint64_t sub_18FE6EE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  uint64_t v28;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v28
                                                               + 8
                                                               * ((7
                                                                 * (a11
                                                                  + (((a28 + 1009) ^ 0x442) & (2 * LODWORD(STACK[0x308])) ^ 2)
                                                                  + (STACK[0x308] & 0x3F ^ 0x7F68DF72u) > 0xFFFFFFBF)) ^ (a28 + 1270)))
                                                   - 8))(a1, 4196299875);
}

uint64_t sub_18FE6EEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13)
{
  int v13;
  int v14;
  uint64_t v15;
  _BOOL4 v16;
  unsigned int v17;
  int v18;
  _BOOL4 v19;

  v16 = a13 < 0x58DC001;
  v17 = v13 + (((v14 - 885) | 0x340) ^ 0xFFAC3794);
  v18 = v16 ^ (v17 < 0x58DC001);
  v19 = v17 < a13;
  if (!v18)
    v16 = v19;
  return (*(uint64_t (**)(void))(v15 + 8 * ((19 * !v16) ^ v14)))();
}

uint64_t sub_18FE6EF6C@<X0>(unsigned int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;

  v12 = a3 < a1;
  *(_BYTE *)(a5 + (a6 + v9)) = *(_BYTE *)(v11 + (v6 + a2))
                                           - ((2 * *(_BYTE *)(v11 + (v6 + a2))) & 0xEF)
                                           - 9;
  if (v12 == v6 + v8 < a1)
    v12 = v6 + v8 < a3;
  return (*(uint64_t (**)(void))(v10 + 8 * ((!v12 * a4) ^ v7)))();
}

uint64_t sub_18FE6EFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int v22;

  v20 = 1759421093 * ((v19 + 413925142 - 2 * ((v19 - 168) & 0x18ABFFBE)) ^ 0xABD64FEA);
  *(_QWORD *)(v19 - 168) = a17;
  *(_DWORD *)(v19 - 160) = v20 + v17 + 517;
  *(_DWORD *)(v19 - 156) = a14 + v20;
  v21 = sub_18FE7DA0C(v19 - 168);
  v22 = STACK[0x308] & 0x3F ^ ((v17 ^ 0x2AD) - 348);
  *((_BYTE *)&STACK[0x2C4] + v22) = 119;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v18
                                                               + 8
                                                               * ((2033 * ((((v17 - 247995644) ^ (v22 > 0x37)) & 1) == 0)) ^ v17))
                                                   - 8))(v21, 4196299875);
}

uint64_t sub_18FE6F0EC()
{
  int v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1 + 8 * ((1813 * (v0 - 279225916 < (v2 ^ 0x4B1u) - 1101)) ^ (v2 + 894))))();
}

uint64_t sub_18FE6F134()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = v0;
  v5 = v0 + v2;
  if (v5 <= 0x38)
    v5 = 56;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v1 + 98161530) ^ 0xFA2629C4) + ((v1 + 98161530) & 0xFA262BC7))
                                     * (v5 - v4 + 279225916 > 7)) ^ v1)))();
}

uint64_t sub_18FE6F198@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + a2 + a1 - 1) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1907 * (473 * (v3 ^ 0x3C5u) - 938 == (v2 & 0xFFFFFFFFFFFFFFF8))) ^ v3))
                            - 12))();
}

uint64_t sub_18FE6F1F0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * ((2038
                                                        * (((v0 == 63) ^ (11 * (v1 ^ 0x5F)) ^ 0xF1) & 1)) ^ v1))
                                          - 12))(59);
}

uint64_t sub_18FE6F250@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((13 * (v1 ^ 0x1E3) + 988) * ((a1 ^ 0x3Eu) > 7)) ^ v1)) - 12))();
}

uint64_t sub_18FE6F284@<X0>(char a1@<W8>, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a2 + v2) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((478 * ((a1 & 0x38) == 8)) ^ v3 ^ 0x5B3))
                            - (((v3 ^ 0x5B3) - 898292343) & 0x358AD77F ^ 0x159)))();
}

void sub_18FE6F2E4()
{
  JUMPOUT(0x18FE6F2A0);
}

uint64_t sub_18FE6F2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  unsigned int v28;

  v28 = v23 + a1;
  if (v28 <= 0x40)
    v28 = 64;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * (int)((((a4 + 1329) ^ 0x4B1) * (v26 - v24 - v25 + v28 < 0xF)) ^ (a4 + 1225))) - (a4 + 1269) + 1309))(a1, 4196299875, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a3, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_18FE6F374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  int v30;

  v28 = v24 + v23 + a1;
  if (v28 <= 0x40)
    v29 = 64;
  else
    v29 = v28;
  v30 = !__CFADD__(v28 + ((v25 - 1352511410) & 0x509DAFED) - 918 - 464, v26 + v29);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * (((16 * v30) | (v30 << 7)) ^ v25)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_18FE6F3DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,arg34_18FE6F3DC a34)
{
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;

  *(_OWORD *)(a4 + (a8 + v36)) = *(_OWORD *)&a34.arr[4];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * ((28 * (((v35 + 1) & 0x1FFFFFFF0) == 16)) ^ v34)) - ((v34 + 858) ^ 0x521)))(1313, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

void sub_18FE6F438()
{
  JUMPOUT(0x18FE6F408);
}

uint64_t sub_18FE6F444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  int v30;

  v29 = v27 - 2137579378;
  if (v29 <= 0x40)
    v30 = 64;
  else
    v30 = v29;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * (v24 ^ 0x733 ^ (92 * ((2137579378 - v25 - v26 + v30) > 0xE)))) - ((((v24 ^ 0x733) - 662) | 0x21u) ^ 0xADLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_18FE6F4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  unsigned int v30;
  BOOL v31;

  v29 = v25 + v24 - 2137580215;
  v30 = v29 + 31 * (v26 ^ 0xBA);
  if (v30 <= 0x40)
    v30 = 64;
  v31 = __CFADD__(v29 + 836, v27 + v30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * ((109 * ((((v26 ^ 0xBA) + 102) ^ v31) & 1)) ^ v26)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_18FE6F54C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  int8x16_t *v28;
  int8x16_t v29;
  int8x16_t v30;

  *(int8x16_t *)(a4 + a8 + (v24 ^ 0x297 ^ v26)) = vaddq_s8(vsubq_s8(*v28, vandq_s8(vaddq_s8(*v28, *v28), v29)), v30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((1674 * (((v25 + 1) & 0x1FFFFFFF0) == 16)) ^ v24)))(1674, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

void sub_18FE6F5B4()
{
  JUMPOUT(0x18FE6F570);
}

uint64_t sub_18FE6F5C0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((1847 * ((((v2 - 894) ^ (v0 == v1)) & 1) == 0)) ^ v2)))();
}

uint64_t sub_18FE6F5F4@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(a2 + v4 + a1 - 1) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(a2 + v4) > 0x37) * v3) ^ (v2 + 853))))();
}

uint64_t sub_18FE6F620(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,unsigned __int8 a25,int a26,unint64_t a27)
{
  int v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  unint64_t v35;
  unsigned int v36;
  char v37;
  unsigned int v38;
  unsigned int v39;
  unint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, unint64_t *);
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  BOOL v50;
  uint64_t v52;
  uint64_t v53;
  int v54;
  _BOOL4 v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, _QWORD, unint64_t *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v31 = LOBYTE(STACK[0x324]) ^ 0x63;
  if (v31 == 1)
  {
    v34 = a4 ^ 0x62C;
    v38 = STACK[0x308];
    v39 = STACK[0x304];
    LOBYTE(STACK[0x2FC]) = (((a4 ^ 0x2C) - 16) ^ (8 * LOBYTE(STACK[0x308]))) - ((16 * LOBYTE(STACK[0x308])) & 0xE0) - 9;
    LOBYTE(STACK[0x2FD]) = ((v38 >> 5) ^ 0x8E) - ((2 * ((v38 >> 5) ^ 0x8E)) & 0xEF) - 9;
    LOBYTE(STACK[0x2FE]) = ((v38 >> 13) ^ 0x6A) - ((2 * ((v38 >> 13) ^ 0x6A)) & 0xEF) - 9;
    LOBYTE(STACK[0x2FF]) = ((v38 >> 21) ^ 0x69) - ((2 * ((v38 >> 21) ^ 0x69)) & 0xEF) - 9;
    HIDWORD(v40) = v39 ^ 0x1E;
    LODWORD(v40) = v38 ^ 0x60000000;
    LOBYTE(STACK[0x300]) = (v40 >> 29) - ((2 * (v40 >> 29)) & 0xEF) - 9;
    LOBYTE(STACK[0x301]) = ((v39 >> 5) ^ 0x9E) + (~(2 * ((v39 >> 5) ^ 0x9E)) | 0x11) - 8;
    LOBYTE(STACK[0x302]) = ((v39 >> 13) ^ 0xC4) + (~(2 * ((v39 >> 13) ^ 0xC4)) | 0x11) - 8;
    v36 = (v39 >> 21) ^ 0xFFFFFFCD;
    v37 = (2 * v36) & 0xEF;
  }
  else
  {
    v32 = a4;
    if (v31 != 2)
      goto LABEL_6;
    v36 = STACK[0x304];
    v33 = STACK[0x308];
    v34 = a4 ^ 0x62C;
    LOBYTE(STACK[0x2FC]) = (a4 ^ 0x2C)
                         + ((LODWORD(STACK[0x304]) >> 21) ^ 0xCD)
                         - ((2 * ((LODWORD(STACK[0x304]) >> 21) ^ 0xCD)) & 0xEF)
                         - 33;
    LOBYTE(STACK[0x2FD]) = ((v36 >> 13) ^ 0xC4) - ((2 * ((v36 >> 13) ^ 0xC4)) & 0xEF) - 9;
    HIDWORD(v35) = v36 ^ 0x1E;
    LODWORD(v35) = v33 ^ 0x60000000;
    LOBYTE(STACK[0x2FE]) = ((v36 >> 5) ^ 0x9E) + (~(2 * ((v36 >> 5) ^ 0x9E)) | 0x11) - 8;
    LOBYTE(STACK[0x2FF]) = (v35 >> 29) - ((2 * (v35 >> 29)) & 0xEF) - 9;
    LOBYTE(STACK[0x300]) = ((v33 >> 21) ^ 0x69) + (~(2 * ((v33 >> 21) ^ 0x69)) | 0x11) - 8;
    LOBYTE(STACK[0x301]) = ((v33 >> 13) ^ 0x6A) + ((2 * (((v33 >> 13) ^ 0x6A | 0xF7) ^ (v33 >> 13))) ^ 0xC5) - 8;
    LOBYTE(STACK[0x302]) = ((v33 >> 5) ^ 0x8E) - ((2 * ((v33 >> 5) ^ 0x8E)) & 0xEF) - 9;
    LOBYTE(v36) = (8 * v33) ^ 8;
    v37 = (16 * v33) & 0xE0;
  }
  v32 = v34 - 1508;
  LOBYTE(STACK[0x303]) = v36 + (v32 ^ 0xCC) + ~v37;
LABEL_6:
  v41 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t *))(v28 + 8 * (v32 + 4));
  v42 = STACK[0x310];
  v43 = STACK[0x310];
  v44 = STACK[0x314];
  v45 = STACK[0x318];
  v46 = STACK[0x314];
  v47 = STACK[0x318];
  v48 = LOBYTE(STACK[0x324]) ^ 0x63u;
  if ((_DWORD)v48 == 2)
  {
    v52 = a4 ^ 0xFu;
    v53 = (11 * v52);
    v54 = a4 + 595;
    v56 = (unint64_t)&STACK[0x2C4] < a27 && v30 < (unint64_t)&STACK[0x304];
    v57 = (a26 + v53 - 1467);
    v58 = *(uint64_t (**)(uint64_t, _QWORD, unint64_t *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (int)((v57 * v56) ^ v54));
    return v58(v52, LODWORD(STACK[0x31C]), &STACK[0x2C4], v58, v53, 40394603, v57, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22);
  }
  else if ((_DWORD)v48 == 1)
  {
    v50 = (unint64_t)&STACK[0x2C4] < a27 && v30 < (unint64_t)&STACK[0x304];
    return (*(uint64_t (**)(_QWORD, uint64_t, unint64_t *))(v28
                                                                          + 8
                                                                          * ((((v50 ^ a25) & 1) * (a4 + 60)) ^ (a4 + 130))))((a4 + 130), 40394603, &STACK[0x2C4]);
  }
  else
  {
    LODWORD(STACK[0x30C]) = 2 * (LODWORD(STACK[0x30C]) ^ v29) + v29 - (v27 & (4 * (LODWORD(STACK[0x30C]) ^ v29)));
    LODWORD(STACK[0x310]) = (v43 ^ v29) + (v42 ^ v29) + v29 - (v27 & (2 * ((v43 ^ v29) + (v42 ^ v29))));
    LODWORD(STACK[0x314]) = (v46 ^ v29) + (v44 ^ v29) + v29 - (v27 & (2 * ((v46 ^ v29) + (v44 ^ v29))));
    LODWORD(STACK[0x318]) = (v47 ^ v29) + (v45 ^ v29) + v29 - (v27 & (2 * ((v47 ^ v29) + (v45 ^ v29))));
    return v41(v48, a2, &STACK[0x2C4]);
  }
}

uint64_t sub_18FE70698(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,unsigned int a28,unsigned int a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  uint64_t v33;
  BOOL v34;

  if (a29 < a28 != a33 - 771288827 < ((a4 - 15) | 0x400u) - 672622531)
    v34 = a33 - 771288827 < ((a4 - 15) | 0x400u) - 672622531;
  else
    v34 = a33 - 771288827 > a29;
  return ((uint64_t (*)(void))(*(_QWORD *)(v33
                                        + 8
                                        * ((890 * (((-105 * (a4 ^ 0x3F)) ^ v34) & 1)) ^ (a4 + 1273)))
                            - 8))();
}

uint64_t sub_18FE7072C(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)(((((v3 - 1609) ^ 0xFFFFFCBF) + ((v3 - 1547) | 0x384))
                                               * (v2 + a2 + 63 < (v2 + a2))) ^ v3))
                            - 12))();
}

uint64_t sub_18FE70770(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(a5 + v7) = *(_BYTE *)(v10 + (v6 + a2))
                      - ((2 * *(_BYTE *)(v10 + (v6 + a2))) & 0xEF)
                      - 9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((((v8 - 983) ^ 0x1ELL) + v7 != 64) * a6) ^ v8))
                            - 8))();
}

uint64_t sub_18FE707BC@<X0>(int a1@<W1>, int8x16_t *a2@<X4>, int a3@<W6>, int a4@<W7>, int a5@<W8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int8x16_t v8;
  int8x16_t v9;

  *a2 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v7 + (v5 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(v7 + (v5 + a1)), *(int8x16_t *)(v7 + (v5 + a1))), v8)), v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((a5 ^ a3) != -17) * a4) ^ (a5 + 962))) - 8))();
}

uint64_t sub_18FE70814(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  uint64_t v31;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v31
                                                      + 8
                                                      * ((((a31 - 743270166) < 0xFFFFFFFB)
                                                        * ((a4 + 16) ^ 0x5B)) ^ (a4 + 721)))
                                          - ((a4 + 463) | 4u)
                                          + 511))(a1);
}

void sub_18FE70878()
{
  JUMPOUT(0x18FE6FA04);
}

uint64_t sub_18FE7089C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;

  *(_BYTE *)(a5 + (v35 + a9 + 246)) = *(_BYTE *)(a33 + v37 + v34)
                                                  - ((2 * *(_BYTE *)(a33 + v37 + v34)) & 0xEF)
                                                  - 9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (((2 * ((a9 - 1012930864) < 0x40)) | (((a9 - 1012930864) < 0x40) << 6)) ^ (25 * (v33 ^ 0x35A)))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

void sub_18FE7090C()
{
  JUMPOUT(0x18FE708ACLL);
}

uint64_t sub_18FE70918()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((11 * (((v0 - 209434698) & 0xC7BB676 ^ 0xD3B2989B) + v1 < 4)) ^ v0)))();
}

uint64_t sub_18FE7095C@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28)
{
  int v28;
  int v29;
  uint64_t v30;

  LOBYTE(STACK[0x2C4]) = *(&a28 + a1);
  return (*(uint64_t (**)(void))(v30 + 8 * (((v28 + 1300) * ((v29 & 0xFFFFFFFC) == 743270224)) ^ v28)))();
}

void sub_18FE70994()
{
  JUMPOUT(0x18FE6ED28);
}

uint64_t sub_18FE709B0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;
  unsigned int v36;
  unint64_t v37;
  uint64_t v38;

  if (a29 == 2)
    return ((uint64_t (*)(uint64_t, unint64_t *))(*(_QWORD *)(v34
                                                                            + 8
                                                                            * ((945
                                                                              * (((LODWORD(STACK[0x320]) == 1531185819) ^ (a4 - 113)) & 1)) ^ (a4 + 399)))
                                                                - 12))(a15, &STACK[0x2B4]);
  if (a29 == 1)
    return ((uint64_t (*)(uint64_t, unint64_t *, uint64_t))(*(_QWORD *)(v34
                                                                                     + 8
                                                                                     * ((242
                                                                                       * (LODWORD(STACK[0x320]) == ((a4 - 19) | 0x110) + 1531185514)) ^ (a4 + 253)))
                                                                         - 12))(a1, &STACK[0x2B4], a15);
  v36 = (a4 + 175673254) & 0xF58772FD;
  v37 = ((unint64_t)&a34 ^ 0x7D9F7FDF3DFEFFEFLL)
      - 0x7580598110402FEFLL
      + (((_QWORD)&a34 << (((a4 - 90) & 0xFDu) + 41)) & 0xFB3EFFBE7BFDFFD0);
  v38 = (v36 - 692) | 0x10;
  *((_BYTE *)&STACK[0x2C4] + v38 + 39) = (v37 ^ 0xBA) * (v37 + 17);
  return ((uint64_t (*)(uint64_t, unint64_t *, uint64_t))(*(_QWORD *)(v34
                                                                                   + 8
                                                                                   * (int)((1500 * (v38 == -39)) ^ v36))
                                                                       - 4))(a1, &STACK[0x2B4], a15);
}

void sub_18FE70D0C()
{
  JUMPOUT(0x18FE70CDCLL);
}

uint64_t sub_18FE70D14@<X0>(_QWORD *a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v7 + 32);
  v4 = *(_QWORD *)(v7 + 40);
  *a1 = 0xF7F7F7F7F7F7F7F7;
  a1[1] = 0xF7F7F7F7F7F7F7F7;
  v5 = 235795823 * (((v2 - 168) & 0xD7662BE2 | ~((v2 - 168) | 0xD7662BE2)) ^ 0xBC349D44);
  *(_QWORD *)(v2 - 128) = &STACK[0x48EDB6D0567D3500];
  *(_QWORD *)(v2 - 168) = v3;
  *(_QWORD *)(v2 - 152) = &v8;
  *(_QWORD *)(v2 - 144) = v4;
  *(_DWORD *)(v2 - 132) = (a2 + 1785) ^ v5;
  *(_DWORD *)(v2 - 160) = v5 + 1634517454;
  result = ((uint64_t (*)(uint64_t))((char *)*(&off_1E2ABD050 + (a2 ^ 0x6B)) - 4))(v2 - 168);
  *(_DWORD *)(v7 + 16) = *(_DWORD *)(v2 - 136);
  return result;
}

void F21B5Tc5GK6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v7;
  int v8;

  if (a4)
    v7 = a7 == 0;
  else
    v7 = 1;
  v8 = !v7;
  __asm { BR              X9 }
}

uint64_t sub_18FE70E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16)
{
  int v16;
  uint64_t v17;
  uint64_t v18;

  a15 = (1178560073 * (((&a15 | 0x5D0CF361) - (&a15 & 0x5D0CF361)) ^ 0x6F1AF321)) ^ 0x650810FC;
  v18 = sub_18FE97A00(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17 + 8 * ((26 * (a16 != v16)) ^ 0x2CBu)) - 8))(v18);
}

uint64_t sub_18FE70F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  a15 = &STACK[0x1706FB9DE6F6FC6C];
  a17 = 801 - 460628867 * ((2 * (&a15 & 0x3C3A8538) - &a15 + 1137015495) ^ 0xF53F8BA);
  sub_18FE785A4((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((1937 * (a16 == 446849184)) ^ 0x2D1u)) - 8))(v18, v19, v20, v21, v22, v23, v24, v25);
}

uint64_t sub_18FE70FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, unsigned int a18)
{
  int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1734042137 * (&a15 ^ 0x5CCEC34D);
  a15 = a11;
  a18 = (((v20 - 1780263697) ^ 0xA7F59483) + 743969813 * v19) ^ v22;
  a16 = v20 - v22 + 430;
  v23 = ((uint64_t (*)(uint64_t *))((char *)*(&off_1E2ABD050 + (int)(v20 - 593)) - 12))(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21 + 8 * ((1520 * (a17 == v18)) ^ v20)) - 8))(v23);
}

uint64_t sub_18FE71084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, unsigned int a18, uint64_t a19)
{
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  unsigned int v25;
  uint64_t v26;

  v25 = 628203409
      * ((((&a15 | 0xD7753CA4) ^ 0xFFFFFFFE) - (~&a15 | 0x288AC35B)) ^ 0xAA02CF68);
  a17 = v20;
  a15 = v22 - v25 + 386;
  a18 = (v21 ^ 0xEFFFBFED) + ((2 * v21) & 0xDFFF7FDA) + 1047459128 + v25;
  a19 = a11;
  v26 = ((uint64_t (*)(int *))((char *)*(&off_1E2ABD050 + (v22 ^ 0x299u)) - 8))(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * (int)(((a16 == v19) * (v24 ^ 0x95E350A7)) ^ v22))
                                          - 8))(v26);
}

uint64_t sub_18FE71154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, unsigned int a18, uint64_t a19)
{
  int v19;
  uint64_t v20;
  int v21;
  uint64_t (*v22)(int *);
  int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;

  v27 = (((&a15 | 0x76F58F42) - &a15 + (&a15 & 0x890A70B8)) ^ 0xF47D8371)
      * v23;
  a15 = v24 - v27 + 386;
  a19 = a11;
  a17 = v20;
  a18 = (v21 ^ 0xFFEEB7F5) + ((2 * v21) & 0xFFDD6FEA) + 780139824 + v27;
  v28 = v22(&a15);
  return ((uint64_t (*)(uint64_t))(2514704312
                                          - v26
                                          + *(_QWORD *)(v25
                                                      + 8
                                                      * (((a16 == v19) * ((v24 - 1148793574) & 0x16BE ^ 0x1E4)) ^ v24))))(v28);
}

uint64_t sub_18FE71220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16, int a17, uint64_t a18, unint64_t *a19, int a20)
{
  int v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;

  v23 = 3804331 * (&a15 ^ 0xFA9EF356);
  a20 = (v21 + 2138961654) ^ v23;
  a16 = -352265805 - v23;
  a17 = v23 ^ 0x7EED036C;
  a18 = a11;
  a19 = &STACK[0x2185BF99DEDD7464];
  v24 = sub_18FE97E30((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22 + 8 * ((403 * (a15 == v20)) ^ v21))
                                          - ((103 * (v21 ^ 0x6AD)) ^ 0x2D5)))(v24);
}

uint64_t sub_18FE712F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16, unint64_t *a17, unint64_t *a18, unint64_t *a19, unsigned int a20)
{
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  a15 = ((v21 ^ 0xB9) - 1058) ^ (1374699841
                               * ((&a15 & 0x817CA2AD | ~(&a15 | 0x817CA2AD)) ^ 0x1377455B));
  a17 = &STACK[0x6D40EE9100C9998D];
  a18 = a12;
  v24 = v20;
  ((void (*)(unsigned int *))(*(_QWORD *)(v20 + 8 * (v21 ^ 0x683u)) - 4))(&a15);
  a20 = ((v21 ^ 0xB9) - 888) ^ (1225351577
                              * ((&a15 + 320826856 - 2 * (&a15 & 0x131F6DE8)) ^ 0x3085B5FE));
  a17 = a12;
  a18 = &STACK[0x52155BFDA386721D];
  a19 = &STACK[0x4BBB3C48FF632B58];
  (*(void (**)(unsigned int *))(v24 + 8 * (v21 ^ 0x6D1u)))(&a15);
  a17 = a12;
  a15 = (v21 ^ 0xB9)
      + ((&a15 - 897534709 - 2 * (&a15 & 0xCA80B50B)) ^ 0x301E465D) * v22
      - 1090;
  v25 = sub_18FE58674((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23
                                                      + 8
                                                      * ((15 * (a16 == (((v21 ^ 0xB9) + 151) ^ 0x1AA2660A))) ^ v21 ^ 0xB9u))
                                          - 12))(v25);
}

uint64_t sub_18FE7148C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((146 * (a7 == a1)) ^ v7)) - 12))();
}

uint64_t sub_18FE714B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  _BOOL4 v16;

  v16 = ((uint64_t (*)(_QWORD, uint64_t))*(&off_1E2ABD050 + (v14 ^ 0x6F1)))(a13 ^ v13, 3176913402) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((v16 * ((v14 - 237916768) & 0x4D4E ^ 0x1F0)) ^ v14))
                            - ((v14 + 151) ^ 0x6A6)))();
}

uint64_t sub_18FE71520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;

  v16 = (a13 ^ v13) - (((v14 + 1297) ^ 0xE1711C9F) & (2 * (a13 ^ v13))) + 1891142982;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15
                                        + 8
                                        * ((936
                                          * (((2 * v16) & 0xFFDFBD5E ^ (v14 - 514779382))
                                           + (v16 ^ 0xF5753E9)
                                           - 1770066432 != 376360111)) ^ v14))
                            - 4))();
}

uint64_t sub_18FE715AC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((v2 + 1536) | (32
                                                        * (v1 + v0 + (((v2 + 16) | 0x22D) ^ 0x8010226E) > 7))))
                            - 4))();
}

uint64_t sub_18FE71610(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 + 299896193) | 0x84034700) + 1780264919)
                                     * ((unint64_t)(v1 - a1) > 0x1F)) ^ v2)))();
}

uint64_t sub_18FE71658(uint64_t a1, int a2)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((((a2 - 1269236798) & 0x4BA6FDEF ^ 0xD5) * (v2 > 0x1F)) | (a2 - 121)))
                            - (((a2 - 2067591769) | 0x11204300u) ^ 0x95E357C8)))();
}

uint64_t sub_18FE716C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v12 = (v10 + v8);
  v13 = *(_OWORD *)(v7 + v12 - 15);
  v14 = *(_OWORD *)(v7 + v12 - 31);
  v15 = a1 + v12;
  *(_OWORD *)(v15 - 15) = v13;
  *(_OWORD *)(v15 - 31) = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((25 * ((((a7 + a3 + 415) | 0x280) ^ 0x6D0) != (v9 & 0xFFFFFFE0))) ^ (a7 + a3 + 24)))
                            - 4))();
}

uint64_t sub_18FE71730()
{
  unsigned int v0;
  int v1;
  int v2;
  void (*v3)(_DWORD *);
  int v4;
  uint64_t v6;
  _DWORD v7[2];
  uint64_t v8;

  v8 = v6;
  v7[1] = v4 + ((v7 + 1962175599 - 2 * ((unint64_t)v7 & 0x74F46C6F)) ^ 0x7E006240) * v2 - 228;
  v3(v7);
  return v1 ^ v0;
}

void sub_18FE71A28(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_18FE71A78@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return (*(uint64_t (**)(void))(a1 + 8 * ((479 * (v1 == 1066855061)) ^ 0xC4u)))();
}

uint64_t sub_18FE71AAC(_DWORD *a1)
{
  int v1;
  int v2;
  int v3;

  *((_BYTE *)a1 + (v3 + v2 + v1) + 4) = 121;
  *a1 = v1;
  return 0;
}

uint64_t sub_18FE71ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  *(_BYTE *)(a1 + (v4 + v3 + 962) + 4) = ((2 * **(_BYTE **)(a2 + 8)) & 0xF2)
                                                     + (**(_BYTE **)(a2 + 8) ^ 0x79);
  v5 = *(_DWORD *)(a2 + 4) + 1246801732;
  v6 = v5 < 0x89E799D9;
  v7 = v5 > 0x89E799DA;
  if (v6)
    v7 = v6;
  return (*(uint64_t (**)(void))(a3 + 8 * ((1531 * v7) ^ 0x11Bu)))();
}

void sub_18FE71B9C()
{
  JUMPOUT(0x18FE71B28);
}

void sub_18FE71BA4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_18FE71BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((119 * (**(_BYTE **)(a2 + 8) != 0)) ^ 0x1BEu)) - 4))();
}

uint64_t sub_18FE71C1C()
{
  uint64_t v0;
  int v1;
  unsigned int v2;

  v2 = v1 - ((2 * v1 - 2133710124) & 0xCBA15F08) + 641320174;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((771
                                          * (((2 * v2) & 0xEF49FFEE ^ 0xCB015F08) + (v2 ^ 0x92745073) + 2136947134 != 1996765621)) ^ 0x177u))
                            - 8))();
}

uint64_t sub_18FE71CBC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v4;

  v4 = v3 + v2 + 140181513 < ((2 * (v1 ^ 0x130)) ^ ((v1 ^ 0x388u) - 633));
  return (*(uint64_t (**)(void))(v0 + 8 * ((2 * v4) | (4 * v4) | v1 ^ 0x546u)))();
}

uint64_t sub_18FE71D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((21
                                          * (a3 - a8 + (unint64_t)((a6 + 1259385387) & 0x4F7F) - 1736 >= ((59 * (a6 ^ 0x83)) ^ 0x2DFuLL))) ^ a6))
                            - 8))();
}

uint64_t sub_18FE71D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  unsigned int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                       + 8
                                                                       * (a7 | (2 * (v8 < 0x20)) | (4
                                                                                                  * (v8 < 0x20))))
                                                           - ((unsigned __int16)(a7 + 8518) & 0xDF97)
                                                           - (((a7 + 136314696) | 0x40415054u) ^ 0xFFFFFFFFB79EAD24)))(a1, a2, 0);
}

uint64_t sub_18FE71DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v11 = (v10 + v7);
  v12 = *(_OWORD *)(v6 + v11 - 15);
  v13 = *(_OWORD *)(v6 + v11 - 31);
  v14 = v8 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((193 * (((a5 - 1214336538) ^ 0x39B) == (v9 & 0xFFFFFFE0))) ^ (a5 - 1214336655)))
                            - 12))();
}

uint64_t sub_18FE71E48(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 1424) = (((v3 + 1078017915) | 0x8201091) ^ 0x9C6F9995) + v2;
  *(_QWORD *)(*(_QWORD *)(a1 + 96) + 520) = *(_QWORD *)(a2 + 8) + 1;
  return 0;
}

void sub_18FE71FE4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8)
     + 1734042137 * (((a1 ^ 0xE6425DAD | 0xA65DFB69) - ((a1 ^ 0xE6425DAD) & 0xA65DFB69)) ^ 0x1CD16589);
  __asm { BR              X10 }
}

uint64_t sub_18FE720C8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, int a5, int a6, unsigned int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v10 = 1178560073 * ((2 * (&a3 & 0x394BA1C8) - &a3 - 961257930) ^ 0xF4A25E76);
  a5 = v10 ^ 0x5E0CEC5C;
  a6 = v10 + v7 - 1015;
  a3 = v8;
  a4 = &STACK[0x74676349722739E8];
  a7 = 1389783602 - v10;
  v11 = ((uint64_t (*)(uint64_t *))(*(_QWORD *)(a1 + 8 * (v7 - 1007)) - 8))(&a3);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v8 - 0x4F927BF50B0C4CE3) == 446849184)
                                              * ((v7 - 10) ^ 0x58E)) ^ v7)))(v11);
}

void sub_18FE721A0(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  _BYTE *v5;

  v4 = -242148547 * (*(_DWORD *)(v1 + 16) ^ v2)
     - ((((v3 - 1400145290) & 0x374857F ^ 0x3223205) * (*(_DWORD *)(v1 + 16) ^ v2) + 68210706) & 0x5D7AE98)
     + 16006997;
  *v5 = (HIBYTE(v4) ^ 2) - ((2 * (HIBYTE(v4) ^ 2)) & 0xEF) - 9;
  v5[1] = (BYTE2(v4) ^ 0xEB) + (~(2 * (BYTE2(v4) ^ 0xEB)) | 0x11) - 8;
  v5[2] = (BYTE1(v4) ^ 0xD7) + ((v4 >> 7) & 0xEE ^ 0x51) - 8;
  v5[3] = v4 ^ 0xBB;
  *(_DWORD *)(v1 + 12) = *a1;
}

void sub_18FE722A4(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_18FE722E8(uint64_t a1)
{
  uint64_t v1;
  int v3;
  unsigned int v4;
  uint64_t v5;

  v3 = (*(uint64_t (**)(void))(v1 + 1352))();
  if (v3 == 16)
    v4 = -42029;
  else
    v4 = -42030;
  if (v3)
    v5 = v4;
  else
    v5 = 0;
  (*(void (**)(uint64_t))(v1 + 208))(a1);
  return v5;
}

void sub_18FE72344(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_18FE723B4@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((92
                                * (((a1 - 1066855061) ^ 0x21FDFFFDEEBB7BD9)
                                 - 0x21FDFFFDA66156B9
                                 + ((2 * (a1 - 1066855061)) & 0x1DD76F7B2) != 1213867296)) ^ 0x43Au)))();
}

uint64_t sub_18FE7244C()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v6 = *(unsigned __int8 *)(v3 + v4 - 0x5F7B82C337ED3B94) - *(unsigned __int8 *)(v1 + v4 - 0x5F7B82C337ED3B94);
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * (((((2 * v6) & 0xDFBFECFA) + (v6 ^ (v0 + 1078)) == (v2 ^ 0x496 ^ v0))
                                              * (v2 ^ 0x60E)) ^ v2)))(4294925278);
}

uint64_t sub_18FE724B4()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = v1 < v0;
  if (v6 == v2 - 0x5F7B82C2EF931673 < (v3 ^ v4 ^ (v0 + 108)))
    v6 = v2 - 0x5F7B82C2EF931673 < v1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v6 * ((v3 - 910) ^ 0xF0)) ^ v3)))();
}

uint64_t sub_18FE72514@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((1477
                                              * (a1 == ((((v1 - 1092649341) & 0x7FA9CEFA) - 1049185480) ^ 0x3F96EBFC))) ^ v1)))(4294925278);
}

uint64_t sub_18FE72570()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((580
                                * (((2 * (*v0 + ((v1 - 19) ^ 0xFFFFFE99))) & 0xFD75ADF6)
                                 + ((*v0 + ((v1 - 19) ^ 0xFFFFFE99)) ^ 0x7EBAD6FB) == 2126173947)) ^ v1)))();
}

uint64_t sub_18FE725CC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = v4 + *(unsigned __int8 *)(v2 + 1) - 469;
  return (*(uint64_t (**)(void))(v5 + 8 * ((837 * ((v1 & (2 * v6)) + (v6 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_18FE72608()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;

  v5 = ((67 * (v3 ^ 0x167)) ^ 0xFFFFFEF7) + *(unsigned __int8 *)(v2 + 2);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1384 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_18FE72654()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v0) == v0)
                                * (v2 + 938)) ^ v4)))();
}

uint64_t sub_18FE72688()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = v4 + *(unsigned __int8 *)(v2 + 4) - 582;
  return (*(uint64_t (**)(void))(v5 + 8 * ((798 * ((v1 & (2 * v6)) + (v6 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_18FE726C4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1367
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                 + (v4 ^ (v0 + 185) ^ (*(unsigned __int8 *)(v2 + 5) - 13)) == v0)) ^ v3)))();
}

uint64_t sub_18FE72704()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;

  v5 = ((v3 - 65) ^ 0xFFFFFEDE) + *(unsigned __int8 *)(v2 + 6);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1061 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_18FE7274C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((67
                                * ((((v3 ^ 0x43) + v3 + 40) ^ ((v1 & (2
                                                                                     * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                                                              + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v0) == v0)) & 1)) ^ v3)))();
}

uint64_t sub_18FE72798()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1066
                                * (((v1 + ((v3 - 19) ^ 0x1CF) - 128) & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                 + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_18FE727E0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 + 96) + 1428) = 1604787375;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((482 * (*(_DWORD *)(a2 + 4) == ((v3 + 942163679) & 0xC7D7B9EF ^ (v2 + 482)))) ^ v3)))();
}

uint64_t sub_18FE72840(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v3 & (2 * v6)) + (v6 ^ v2) == v2) * ((v4 - 268) ^ 0x5A)) ^ v4)))();
}

uint64_t sub_18FE72880()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1138
                                * ((((v2 + 1921444516) & 0x8D79144F ^ (v1 - 65)) & (2
                                                                                  * (*(unsigned __int8 *)(v3 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_18FE728D0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1609
                                * (((v1 + v4 - 67) & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_18FE7290C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2038
                                * ((((*(unsigned __int8 *)(v3 + 3) - 134) << (v4 ^ 0x42)) & v1)
                                 + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_18FE7294C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((246
                                * (((v3 ^ v4) & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == v0)) ^ v1)))();
}

uint64_t sub_18FE72984()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1136
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ (v0 + v4 - 67)) == v0)) ^ v2)))();
}

uint64_t sub_18FE729C0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1470
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v0) == v4)) ^ v2)))();
}

uint64_t sub_18FE729F4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v5 = (((v2 - 270) | 2) ^ 0xFFFFFFBC) + *(unsigned __int8 *)(v3 + 7);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1061 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_18FE72A34()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v1 + ((v2 - 8526429) & 0x82198D) - 128) & (2 * (*(unsigned __int8 *)(v3 + 8) - 5)))
                                 + ((*(unsigned __int8 *)(v3 + 8) - 5) ^ v0) == v0)
                                * (((v2 - 333) | 0x41) + 1823)) ^ v2)))();
}

uint64_t sub_18FE72A8C(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 + 96) + 1428) = 1604787379;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((463
                                * (*(_DWORD *)(a2 + 4) == ((v3 - 1619094193) & 0x20816A73 ^ v2 ^ (v3 + 103134011) & 0x1DA4F76))) ^ v3)))();
}

uint64_t sub_18FE72B04(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((246 * (((v6 << ((v4 + 116) & 0xFD ^ (v4 + 113))) & v3) + (v6 ^ v2) != v2)) ^ v4))
                            - 12))();
}

uint64_t sub_18FE72B64()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1102
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 1) - 134)))
                                           + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ (v0 + 32 * (v2 ^ 0xB1) - 128)) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_18FE72BAC()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((509
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                           + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v0) == v0)) ^ v2))
                            - (v2
                             - 53)
                            + 116))();
}

uint64_t sub_18FE72BEC()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((14
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                           + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v0) == v0 + (v2 ^ 0x35) - 128)) ^ v2))
                            - 12))();
}

uint64_t sub_18FE72C30()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = v4 + *(unsigned __int8 *)(v3 + 4) - 375;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1062 * ((v1 & (2 * v6)) + (v6 ^ v0) == v0)) ^ v2)) - 12))();
}

uint64_t sub_18FE72C68()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                           + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v0) == v0)
                                          * (v2 + 1446)) ^ v2))
                            - 12))();
}

uint64_t sub_18FE72CA0()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1469
                                          * ((((*(unsigned __int8 *)(v3 + 6) - 1) << (((v2 ^ 0xB7) << 6) ^ 0x81)) & v1)
                                           + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_18FE72CEC()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1610
                                          * (((v1 + (v2 ^ 0x35) - 128) & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                           + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v0) == v0)) | v2))
                            - 12))();
}

uint64_t sub_18FE72D30()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((686
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 8) - 11)))
                                           + ((*(unsigned __int8 *)(v3 + 8) - 11) ^ v0) == ((16 * (v2 ^ 0xBD)) ^ (v0 - 128)))) ^ v2))
                            - 12))();
}

void sub_18FE72D78()
{
  int v0;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  _BOOL4 v6;

  v4 = 2 * (v0 ^ 0x119);
  *(_DWORD *)(*(_QWORD *)(v2 + 96) + 1428) = 1604787391;
  v5 = 3804331 * ((-1324508252 - ((v3 - 120) | 0xB10D9BA4) + ((v3 - 120) | 0x4EF2645B)) ^ 0xB46C970D);
  *(_DWORD *)(v3 - 104) = v5 + 432186148;
  *(_QWORD *)(v3 - 112) = v3 + 0x1A8FA111108FB246;
  *(_DWORD *)(v3 - 120) = (v4 + 1172344617) ^ v5;
  sub_18FE7EAE0(v3 - 120);
  v6 = *(_DWORD *)v2
     + 1251971567
     + (*(_DWORD *)(v3 - 152) & ((125 * (v4 ^ 0x330)) ^ 0xC5) ^ 0x74AFE39B)
     + ((2 * *(_DWORD *)(v3 - 152)) & 0x34u) < 0xFFFFFFC0;
  __asm { BR              X8 }
}

uint64_t sub_18FE72FB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;

  v10 = v7 + a6 + ((a3 - 20) | 8) - 238 + 1288097341;
  if (v10 <= 0x40)
    v10 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((1600 * (a5 - v8 - v6 + v10 > 0xE)) ^ a3)) - 4))();
}

uint64_t sub_18FE73034(int a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;

  v10 = v6 + v7;
  if ((v10 - 1957684121) > 0x40)
    a1 = v10 - 1957684121;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (int)((((a6 + ((v8 - 1080467951) ^ 0xBF9958D4) - 1559) ^ (v8 - 1080467951) & 0x7EEFEF2A)
                                               * (a5 - v10 < (a2 + a1))) ^ v8))
                            - 4))();
}

uint64_t sub_18FE730A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(v17
                                        + 8
                                        * ((25
                                          * (a14
                                           + v18
                                           - 220
                                           + (unint64_t)(v14
                                                              + ((v15 - v19 - 817) ^ v16 ^ ((v15 + 881411549) | 0xA000222u))) > 0xF)) ^ v15))
                            - 8))();
}

uint64_t sub_18FE73104@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int8x16_t *v7;
  int v8;
  int8x16_t v9;
  int8x16_t v10;

  v9.i64[0] = 0xEEEEEEEEEEEEEEEELL;
  v9.i64[1] = 0xEEEEEEEEEEEEEEEELL;
  v10.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v10.i64[1] = 0xF8F8F8F8F8F8F8F8;
  *(int8x16_t *)(v5 + (v3 + a2)) = vaddq_s8(vaddq_s8(*v7, v10), vmvnq_s8(vandq_s8(vaddq_s8(*v7, *v7), v9)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((((v4 + 1) & 0x1FFFFFFF0) != 16) * ((v2 ^ (a1 + 166)) - 5)) ^ (v8 + v2 - 137)))
                            - 4))();
}

void sub_18FE73174()
{
  JUMPOUT(0x18FE73128);
}

uint64_t sub_18FE73180(int a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a1 ^ (1635 * (v2 == v3))))
                            - (((a1 - 220) + 1049185808) ^ a1 ^ a2)))();
}

uint64_t sub_18FE731C8@<X0>(int a1@<W2>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  *(_BYTE *)(v7 - 220 + (v4 + a2)) = *(_BYTE *)(v2 + v6 - 374084733)
                                                 + (~(2 * *(_BYTE *)(v2 + v6 - 374084733)) | 0x11)
                                                 - 8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((448 * ((a1 + v4 + 1) > 0x3F)) ^ (v8 + v3 + 508))))();
}

uint64_t sub_18FE73240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t a19, uint64_t (*a20)(__n128, __n128, __n128, __n128, __n128),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int32x4_t a25,int32x4_t a26,int32x4_t a27,int32x4_t a28)
{
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unsigned int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(__n128, __n128, __n128, __n128, __n128);
  const char *v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  int v49;
  uint8x16_t v50;
  uint16x8_t v51;
  int8x16_t v52;
  int8x16_t v53;
  uint16x8_t v54;
  int8x16_t v55;
  int8x16_t v56;
  uint8x16_t v57;
  uint16x8_t v58;
  uint16x8_t v59;
  uint8x16_t v60;
  int8x16_t v63;
  int8x16_t v68;
  int32x4_t v69;
  int32x4_t v70;
  int32x4_t v71;
  int32x4_t v72;
  uint64_t v73;
  char *v74;
  uint8x16_t v76;
  uint16x8_t v77;
  uint16x8_t v78;
  uint8x16_t v79;
  uint8x16_t v84;
  uint16x8_t v85;
  uint16x8_t v86;
  int32x4_t v87;
  int32x4_t v88;
  int32x4_t v89;
  int32x4_t v90;
  _DWORD *v91;
  int v92;
  uint64_t v93;
  int v94;
  unint64_t v95;
  int v96;
  uint64_t v97;
  int8x16x4_t v98;
  int8x16x4_t v99;

  v97 = v29;
  v37 = *(uint64_t (**)(__n128, __n128, __n128, __n128, __n128))(v30 + 8 * v28);
  HIDWORD(a18) = HIDWORD(a13) - 686028052;
  LODWORD(a18) = ((78 * (v28 ^ 0x19) + 1040188416) | 0x894808) - 649902343;
  v38 = (const char *)(v36 - 220);
  v39.n128_u64[0] = 0xF7F7F7F7F7F7F7F7;
  v39.n128_u64[1] = 0xF7F7F7F7F7F7F7F7;
  v40 = (__n128)vdupq_n_s32(0x1AA260B3u);
  v41 = (__n128)vdupq_n_s32(0x1AA260A0u);
  a23 = v32 - 16;
  HIDWORD(a17) = a6 - 681904939;
  v42 = (__n128)vdupq_n_s32(0x1AA260A9u);
  v43.n128_u64[0] = 0xEEEEEEEEEEEEEEEELL;
  v43.n128_u64[1] = 0xEEEEEEEEEEEEEEEELL;
  v45 = *(_DWORD *)(v36 - 148);
  v44 = *(_DWORD *)(v36 - 144);
  HIDWORD(a21) = v45;
  a22 = v44 | 0x100000000;
  v47 = *(_DWORD *)(v36 - 140);
  v46 = *(_DWORD *)(v36 - 136);
  v48 = *(_BYTE *)(v36 - 124) ^ 0x63;
  LODWORD(a17) = *(unsigned __int8 *)(v36 - 124) ^ 0x63;
  if (v48 == 2)
  {
    a19 = __PAIR64__(v46, v47);
    a20 = v37;
    v99 = vld4q_s8(v38);
    HIDWORD(a16) = *(_DWORD *)(v36 - 132);
    v76 = (uint8x16_t)veorq_s8(v99.val[0], (int8x16_t)v39);
    v77 = vmovl_u8(*(uint8x8_t *)v76.i8);
    v78 = vmovl_high_u8(v76);
    v79 = (uint8x16_t)veorq_s8(v99.val[1], (int8x16_t)v39);
    _Q22 = vmovl_u8(*(uint8x8_t *)v79.i8);
    _Q21 = vmovl_high_u8(v79);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v84 = (uint8x16_t)veorq_s8(v99.val[2], (int8x16_t)v39);
    v85 = vmovl_high_u8(v84);
    v86 = vmovl_u8(*(uint8x8_t *)v84.i8);
    v99.val[0] = veorq_s8(v99.val[3], (int8x16_t)v39);
    v99.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v99.val[0]);
    v99.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v99.val[1]);
    v99.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v99.val[1].i8);
    v99.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v99.val[0].i8);
    v99.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v99.val[0]);
    v99.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v99.val[0].i8);
    v87 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v86.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v77.i8), 0x18uLL)), v99.val[0]);
    v88 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v86, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v77), 0x18uLL)), v99.val[3]);
    v89 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v85.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v78.i8), 0x18uLL)), v99.val[1]);
    v90 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v85, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v78), 0x18uLL)), v99.val[2]);
    v99.val[0] = veorq_s8(vandq_s8((int8x16_t)v87, (int8x16_t)v40), (int8x16_t)(*(_OWORD *)v99.val & __PAIR128__(0xFFFFFF13FFFFFF13, 0xFFFFFF13FFFFFF13)));
    v99.val[3] = veorq_s8(vandq_s8((int8x16_t)v88, (int8x16_t)v40), (int8x16_t)(*(_OWORD *)&v99.val[3] & __PAIR128__(0xFFFFFF13FFFFFF13, 0xFFFFFF13FFFFFF13)));
    v99.val[1] = veorq_s8(vandq_s8((int8x16_t)v89, (int8x16_t)v40), (int8x16_t)(*(_OWORD *)&v99.val[1] & __PAIR128__(0xFFFFFF13FFFFFF13, 0xFFFFFF13FFFFFF13)));
    v99.val[2] = veorq_s8(vandq_s8((int8x16_t)v90, (int8x16_t)v40), (int8x16_t)(*(_OWORD *)&v99.val[2] & __PAIR128__(0xFFFFFF13FFFFFF13, 0xFFFFFF13FFFFFF13)));
    a27 = vaddq_s32(vsubq_s32(v89, vaddq_s32((int32x4_t)v99.val[1], (int32x4_t)v99.val[1])), (int32x4_t)v41);
    a28 = vaddq_s32(vsubq_s32(v90, vaddq_s32((int32x4_t)v99.val[2], (int32x4_t)v99.val[2])), (int32x4_t)v41);
    a25 = vaddq_s32(vsubq_s32(v87, vaddq_s32((int32x4_t)v99.val[0], (int32x4_t)v99.val[0])), (int32x4_t)v41);
    a26 = vaddq_s32(vsubq_s32(v88, vaddq_s32((int32x4_t)v99.val[3], (int32x4_t)v99.val[3])), (int32x4_t)v41);
    v91 = (_DWORD *)&a25 + v35 + 817741656;
    v92 = *(v91 - 8) ^ *(v91 - 3);
    v93 = *(v91 - 16);
    v94 = v93 ^ *(v91 - 14) ^ (v92 + v33 - ((v92 << SBYTE4(a22)) & 0x3544C140));
    HIDWORD(v95) = v94 ^ v33;
    LODWORD(v95) = v94;
    *v91 = (v95 >> 31) + v33 - ((2 * (v95 >> 31)) & 0x3544C140);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * ((931 * (v32 != 817741593)) ^ 0xBFu)) - 4))(191, 933932799, 2311848663, a23, v93, a6, 3675265214, a8, a9, a10, a11, a12, a13, a14, v97, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24);
  }
  else if (v48 == 1)
  {
    a19 = __PAIR64__(v46, v47);
    a20 = v37;
    v98 = vld4q_s8(v38);
    v49 = a6 ^ (a6 - 288);
    v50 = (uint8x16_t)veorq_s8(v98.val[0], (int8x16_t)v39);
    v51 = vmovl_u8(*(uint8x8_t *)v50.i8);
    v52 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v51.i8);
    v53 = (int8x16_t)vmovl_high_u16(v51);
    v54 = vmovl_high_u8(v50);
    v55 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v54.i8);
    v56 = (int8x16_t)vmovl_high_u16(v54);
    v57 = (uint8x16_t)veorq_s8(v98.val[1], (int8x16_t)v39);
    v58 = vmovl_high_u8(v57);
    v59 = vmovl_u8(*(uint8x8_t *)v57.i8);
    v60 = (uint8x16_t)veorq_s8(v98.val[2], (int8x16_t)v39);
    _Q26 = (int8x16_t)vmovl_high_u8(v60);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v60.i8);
    v63 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    v68 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    v98.val[0] = veorq_s8(v98.val[3], (int8x16_t)v39);
    v98.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v98.val[0]);
    v98.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v98.val[1]);
    v98.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v98.val[0].i8);
    v98.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v98.val[0]);
    v98.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v98.val[0].i8), 0x18uLL), v63), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v59.i8, 8uLL), v52));
    v98.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v98.val[3], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v59, 8uLL), v53));
    v98.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v98.val[1].i8), 0x18uLL), v68), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v58.i8, 8uLL), v55));
    v98.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v98.val[2], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v58, 8uLL), v56));
    v69 = (int32x4_t)veorq_s8(vandq_s8(v98.val[0], (int8x16_t)v42), (int8x16_t)(*(_OWORD *)&v52 & __PAIR128__(0xFFFFFF09FFFFFF09, 0xFFFFFF09FFFFFF09)));
    v70 = (int32x4_t)veorq_s8(vandq_s8(v98.val[3], (int8x16_t)v42), (int8x16_t)(*(_OWORD *)&v53 & __PAIR128__(0xFFFFFF09FFFFFF09, 0xFFFFFF09FFFFFF09)));
    v71 = (int32x4_t)veorq_s8(vandq_s8(v98.val[1], (int8x16_t)v42), (int8x16_t)(*(_OWORD *)&v55 & __PAIR128__(0xFFFFFF09FFFFFF09, 0xFFFFFF09FFFFFF09)));
    v72 = (int32x4_t)veorq_s8(vandq_s8(v98.val[2], (int8x16_t)v42), (int8x16_t)(*(_OWORD *)&v56 & __PAIR128__(0xFFFFFF09FFFFFF09, 0xFFFFFF09FFFFFF09)));
    a27 = vaddq_s32(vsubq_s32((int32x4_t)v98.val[1], vaddq_s32(v71, v71)), (int32x4_t)v41);
    a28 = vaddq_s32(vsubq_s32((int32x4_t)v98.val[2], vaddq_s32(v72, v72)), (int32x4_t)v41);
    a25 = vaddq_s32(vsubq_s32((int32x4_t)v98.val[0], vaddq_s32(v69, v69)), (int32x4_t)v41);
    a26 = vaddq_s32(vsubq_s32((int32x4_t)v98.val[3], vaddq_s32(v70, v70)), (int32x4_t)v41);
    v73 = (v49 + 568163549) & 0xDE2283CF;
    v74 = (char *)*(&off_1E2ABD050 + v49 - 674) - 8;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, char *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * ((248 * (a23 + 1 == v32)) ^ v49)) - 4))(a23 + 1, 933932799, 2311848663, -(*((_BYTE *)*(&off_1E2ABD050 + (v49 ^ 0x36C))+ (v73 ^ (v35 + 701))+ a23- 4)- 87), a25.i32[(v74[(v73 ^ (v35 + 701)) + a23] - 107)] ^ v33, v73, v74, *(&off_1E2ABD050 + (v49 ^ 0x3B4)), a9, a10, a11, a12, a13, a14, v97,
             a16,
             a17,
             a18,
             __PAIR64__(v46, v47),
             v37,
             a21,
             a22,
             a23,
             a24);
  }
  else
  {
    v96 = (v44 ^ v34) + (a22 ^ v34) + v34 - (v31 & (2 * ((v44 ^ v34) + (a22 ^ v34))));
    *(_DWORD *)(v36 - 148) = (v45 ^ v34)
                           + (HIDWORD(a21) ^ v34)
                           + v34
                           - (v31 & (2 * ((v45 ^ v34) + (HIDWORD(a21) ^ v34))));
    *(_DWORD *)(v36 - 144) = v96;
    *(_DWORD *)(v36 - 140) = 2 * (v47 ^ v34) + v34 - (v31 & (4 * (v47 ^ v34)));
    *(_DWORD *)(v36 - 136) = 2 * (v46 ^ v34) + v34 - (v31 & (4 * (v46 ^ v34)));
    return v37(v39, v40, v41, v42, v43);
  }
}

void sub_18FE73330()
{
  JUMPOUT(0x18FE73364);
}

void sub_18FE735E4()
{
  JUMPOUT(0x18FE734CCLL);
}

uint64_t sub_18FE735F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((21 * (v6 + 1 != v8 + 16)) ^ a6)) - 4))();
}

uint64_t sub_18FE736D8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((446 * (a1 + 1 == v3 + 32)) ^ v1)) - 12))();
}

uint64_t sub_18FE737A8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((974 * (v1 + 1 == v3 + 48)) ^ v0)) - 12))();
}

void sub_18FE73898()
{
  JUMPOUT(0x18FE73DE0);
}

uint64_t sub_18FE73A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((35 * (a4 + 1 != v6 + 4)) ^ v4)) - 4))();
}

uint64_t sub_18FE73B40@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((976 * (v2 + 1 == v4 + 24)) ^ v1)) - 4))(a1);
}

uint64_t sub_18FE73C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                          + 8
                                                                                          * ((634 * (v3 + 1 != v7 + 44)) ^ v4))
                                                                              - 4))(v8, a2, a3, v8, v5);
}

uint64_t sub_18FE73CC4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v0 ^ ((v1 + 1 == v3 + 64) << 6)))
                                          - 4))(v4);
}

void sub_18FE73D74(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  int v18;
  uint64_t v19;
  unsigned int v20;

  v20 = (a4 ^ 0x1D470AC2 ^ ((a5 | 7) + 2129620308) & 0xBF99DE3E) + (a17 ^ v18);
  *(_DWORD *)(v19 - 132) = v20 + v18 - (v17 & (2 * v20));
  JUMPOUT(0x18FE73DDCLL);
}

uint64_t sub_18FE73E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, unsigned int a19, unsigned int a20)
{
  uint64_t v20;
  int v21;
  _BOOL4 v22;

  if (a20 < a19 != (int)a15 + 25198822 < ((a18 - 367280862) | 0x400u) + 399282434)
    v22 = (int)a15 + 25198822 < ((a18 - 367280862) | 0x400u) + 399282434;
  else
    v22 = (int)a15 + 25198822 > a20;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20
                                                                                 + 8
                                                                                 * (int)((v22
                                                                                        * (a18 & 0xEA1BBFFA ^ 0x2C8)) ^ (v21 + a6 + 6)))
                                                                     - 4))(3920882563, a2, a3, a15);
}

uint64_t sub_18FE73F08(int a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8 * ((499 * (a4 - 1423270504 + v4 - v6 >= (a4 + a1))) ^ v4))
                            - 12))();
}

uint64_t sub_18FE73F60@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * (((a8 + v9 - (unint64_t)((a2 ^ 0xD73AA5A9) + a1) > 0xF)
                                          * (v12 + v10 + v8 - 762 + 709)) ^ v8))
                            - 12))();
}

uint64_t sub_18FE73FAC@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W4>, unsigned int a4@<W6>, unint64_t a5@<X7>, int a6@<W8>, int8x16_t a7@<Q0>, int8x16_t a8@<Q4>)
{
  int8x16_t *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;

  *v8 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v11 + (a2 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(v11 + (a2 + a1)), *(int8x16_t *)(v11 + (a2 + a1))), a8)), a7);
  return (*(uint64_t (**)(void))(v9 + 8 * (((((a6 + a3) & a4 ^ a5) != 64) * v10) ^ (v12 + a6 - 485))))();
}

uint64_t sub_18FE74008(int a1, uint64_t a2, char a3, int a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  *(_BYTE *)(v6 + v4) = *(_BYTE *)(v8 + (a4 + a1))
                      - ((*(_BYTE *)(v8 + (a4 + a1)) << (v5 + a3)) & 0xEE)
                      - 9;
  return (*(uint64_t (**)(void))(v7 + 8 * (((2 * (v4 == 63)) | (16 * (v4 == 63))) ^ (v9 + v5 - 499))))();
}

uint64_t sub_18FE74060(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  uint64_t v15;
  _BOOL4 v16;

  v16 = a4 - 798105306 < (a14 - 1509332116);
  if ((a14 - 1509332116) < 0xE6B9F5A3 != (a4 - 798105306) < 0xE6B9F5A3)
    v16 = (a14 - 1509332116) < 0xE6B9F5A3;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v16 * (((v14 - 177814570) & 0xA993BB9) - 872)) ^ v14)))();
}

uint64_t sub_18FE740DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v22;

  v22 = v17 + (v15 ^ (a6 + 113)) + 37;
  v18 = 1759421093 * ((2 * ((v16 - 120) & 0x56218DE8) - (v16 - 120) - 1445039600) ^ 0x1AA3C244);
  *(_QWORD *)(v16 - 120) = a11;
  *(_DWORD *)(v16 - 112) = v18 + v15 + 580;
  *(_DWORD *)(v16 - 108) = v18 + a14 - 922744743;
  v19 = sub_18FE7DA0C(v16 - 120);
  v20 = *(_DWORD *)(v16 - 152) & 0x3F;
  *(_BYTE *)(v16 - 220 + (v20 ^ 1)) = 119;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14
                                                      + 8
                                                      * ((14 * ((v22 ^ ((v20 ^ 1) > 0x37)) & 1)) ^ v15))
                                          - 12))(v19);
}

uint64_t sub_18FE741D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8
                                             * ((242 * ((v6 - 2126718133) < 0x38)) ^ (v9 + v7 + 781)))
                            - ((125 * (v7 ^ (a6 - 8))) ^ 0x3E4)))();
}

uint64_t sub_18FE74224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BOOL4 v11;

  v9 = v7;
  v10 = v7 - 2126718132;
  if (v10 <= 0x38)
    v10 = 56;
  v11 = v10 - v9 + (v6 ^ (a6 - 104) ^ 0x404A6A9FLL) < 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((2 * ((((v6 + 8978968) ^ v11) & 1) == 0)) & 0xEF | (16
                                                                                              * (((v6 + 24) ^ ~v11) & 1))) ^ v6))
                            - 12))();
}

uint64_t sub_18FE742A4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  *(_QWORD *)(v2 - 2126718132 + v4 - 220 - 1) = 0xF7F7F7F7F7F7F7F7;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((v5 + v1 + 593) ^ (4
                                                  * ((v0 & 0xFFFFFFFFFFFFFFF8) - (v5 + v1 + 238) != -992)))))();
}

uint64_t sub_18FE742FC(double a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(double *)(v2 + v4) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (v3 ^ (4 * (v1 != v4)))))();
}

uint64_t sub_18FE74318@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v5 + (v2 ^ a1) + 757) * (v1 == v3)) ^ v2)) - 12))();
}

void sub_18FE74348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  char v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unint64_t v15;

  v8 = *(unsigned __int8 *)(v6 - 124) ^ 0x63;
  if (v8 == 1)
  {
    v14 = *(_DWORD *)(v6 - 156);
    v13 = *(_DWORD *)(v6 - 152);
    *(_BYTE *)(v6 - 164) = ((8 * v13) ^ 8) - ((16 * v13) & 0xE0) - 9;
    *(_BYTE *)(v6 - 163) = ((v13 >> (v7 + a6 + 11)) ^ 0x8E) - ((2 * ((v13 >> (v7 + a6 + 11)) ^ 0x8E)) & 0xEF) - 9;
    *(_BYTE *)(v6 - 162) = ((v13 >> 13) ^ 0x6A) + (~(2 * ((v13 >> 13) ^ 0x6A)) | 0x11) - 8;
    *(_BYTE *)(v6 - 161) = ((v13 >> 21) ^ 0x69) - ((2 * ((v13 >> 21) ^ 0x69)) & 0xEF) - 9;
    HIDWORD(v15) = v14 ^ 0x1E;
    LODWORD(v15) = v13 ^ 0x60000000;
    *(_BYTE *)(v6 - 160) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0xEF) - 9;
    *(_BYTE *)(v6 - 159) = ((v14 >> 5) ^ 0x9E) + (~(2 * ((v14 >> 5) ^ 0x9E)) | 0x11) - 8;
    *(_BYTE *)(v6 - 158) = ((v14 >> 13) ^ 0xC4) - ((2 * ((v14 >> 13) ^ 0xC4)) & 0xEF) - 9;
    v12 = ((v14 >> 21) ^ 0xFFFFFFCD) + (~(2 * ((v14 >> 21) ^ 0xFFFFFFCD)) | 0x11) - 8;
  }
  else
  {
    if (v8 != 2)
      goto LABEL_6;
    v9 = *(_DWORD *)(v6 - 156);
    v10 = *(_DWORD *)(v6 - 152);
    *(_BYTE *)(v6 - 164) = ((v9 >> 21) ^ 0xCD) + (~(2 * ((v9 >> 21) ^ 0xCD)) | 0x11) - 8;
    *(_BYTE *)(v6 - 163) = ((v9 >> 13) ^ 0xC4) + (~(2 * ((v9 >> 13) ^ 0xC4)) | 0x11) - 8;
    HIDWORD(v11) = v9 ^ 0x1E;
    LODWORD(v11) = v10 ^ 0x60000000;
    *(_BYTE *)(v6 - 162) = ((v9 >> 5) ^ 0x9E) - ((2 * ((v9 >> 5) ^ 0x9E)) & 0xEF) - 9;
    *(_BYTE *)(v6 - 161) = (v11 >> 29) - ((2 * (v11 >> 29)) & 0xEF) - 9;
    *(_BYTE *)(v6 - 160) = ((v10 >> 21) ^ 0x69) - ((2 * ((v10 >> 21) ^ 0x69)) & 0xEF) - 9;
    *(_BYTE *)(v6 - 159) = ((v10 >> 13) ^ 0x6A) - ((2 * ((v10 >> 13) ^ 0x6A)) & 0xEF) - 9;
    *(_BYTE *)(v6 - 158) = ((v10 >> 5) ^ 0x8E) + ((2 * (((v10 >> 5) ^ 0x8E | 0xF7) ^ (v10 >> 5))) ^ 0xD) - 8;
    v12 = ((8 * v10) ^ 8) - 32 * (v10 >> 1) - 9;
  }
  *(_BYTE *)(v6 - 157) = v12;
LABEL_6:
  JUMPOUT(0x18FE73364);
}

uint64_t sub_18FE748D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (v8 ^ (1624 * (v7 == v6))))
                            + 1049185808
                            - (a6
                             + (v8 ^ 0x33Du)
                             - 65)
                            + 22))();
}

void sub_18FE74918()
{
  JUMPOUT(0x18FE73364);
}

uint64_t sub_18FE74928@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  *(_BYTE *)(v2 - 2126718132 + v4 - 220 + 13 * (a2 ^ (a1 + 5)) - 66) = -9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((1023 * ((unint64_t)(v2 - 2126718132) < 0x40)) ^ (v5 + a2 + 554)))
                            - 4))();
}

uint64_t sub_18FE749F4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v8 = *(_DWORD *)(v7 - 220 + ((v5 + a2) & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a1 + (v5 + a2 + 2)) = (BYTE1(v8) ^ 0x44) + ((v8 >> 7) & 0xEE ^ 0x77) - 8;
  *(_BYTE *)(a1 + (v5 + a2)) = ((((v3 - 109) & 0xFB) - 7) ^ HIBYTE(v8))
                                           - ((2 * ((((v3 - 109) & 0xFB) - 7) ^ HIBYTE(v8))) & 0xEF)
                                           - 9;
  *(_BYTE *)(a1 + (v5 + a2 + 1)) = (BYTE2(v8) ^ 0xCE) + (~(2 * (BYTE2(v8) ^ 0xCE)) | 0x11) - 8;
  *(_BYTE *)(a1 + (v5 + a2 + 3)) = v8 ^ 0x1F;
  v9 = *(_DWORD *)(v7 - 128) - 1375073974;
  v10 = v9 < v2;
  v11 = v5 - 1951162916 < v9;
  if (v5 - 1951162916 < v2 != v10)
    v11 = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((v11 * v4) ^ v3)) - 8))();
}

void sub_18FE74B90()
{
  JUMPOUT(0x18FE74B5CLL);
}

void sub_18FE74B98(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 20) - 1178560073 * ((2 * (a1 & 0xF0D1717) - a1 - 252516120) ^ 0xC2E4E8A8);
  __asm { BR              X9 }
}

uint64_t sub_18FE74C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  _DWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;

  v14 = (*(_DWORD *)(a1 + 16) ^ v12) + *(_DWORD *)(v8 - 0x4F927BF50B0C4CEBLL) - 1577905232;
  v15 = 3804331
      * (((&a5 | 0x9E97F70E) - &a5 + (&a5 & 0x616808F0)) ^ 0x64090458);
  a8 = v15 + v13 + 1234;
  a5 = v15 + 583524719;
  a6 = v15 - 896705862 + v14;
  a7 = v8;
  v16 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(a2 + 8 * (v13 ^ 0x9B)) - 12))(&a5);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11 + 8 * (((*v10 == v9) * ((v13 ^ 0x40B) + 132)) ^ v13)) - 4))(v16);
}

uint64_t sub_18FE74D64()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((94 * (*(_QWORD *)(v0 + 8) == 0x74676349722739E8)) ^ v1))
                            - (((73 * (v1 ^ 0x49B) + 1018) | 0x203u) ^ 0x683)))();
}

uint64_t sub_18FE74DC4()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 == ((v0 - 1533) ^ 0x5E0CECCA)) * (v0 - 1653)) ^ v0)))();
}

void sub_18FE74DF0(int a1@<W8>)
{
  char v1;
  _DWORD *v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;

  v5 = (a1 & 0xBFFFFFFF ^ 0x522D736A)
     + 1378710378
     + ((((a1 & 0xBFFFFFFF ^ 0x522D736A) & 0x122D736E ^ (a1 | 0x7FFFFFFB)) << ((v1 + 3) ^ 0x93)) ^ 0x80000009)
     + 1;
  v6 = *(_QWORD *)(v3 - 0x4F927BF50B0C4CFBLL);
  v7 = *v2 - 1912814508;
  *(_BYTE *)(v6 + v7) = (HIBYTE(v5) ^ 0x52) - ((2 * (HIBYTE(v5) ^ 0x52)) & 0xEF) - 9;
  *(_BYTE *)(v6 + v7 + 1) = (BYTE2(v5) ^ 0x2D) + (~(2 * (BYTE2(v5) ^ 0x2D)) | 0x11) - 8;
  *(_BYTE *)(v6 + v7 + 2) = (BYTE1(v5) ^ 0x73) + ((v5 >> 7) & 0xEE ^ 0x19) - 8;
  *(_BYTE *)(v6 + v7 + 3) = v5 ^ 0x9D;
  v8 = *(_QWORD *)(v3 - 0x4F927BF50B0C4CFBLL);
  LODWORD(v6) = v4 - 2 * ((v4 + 32707496) & 0x2EBD74F ^ v4 & 3) - 1528894732;
  v9 = ((2 * (*v2 - 1912814504)) & 0xBCF9BBDA) + ((*v2 - 1912814504) ^ 0x5E7CDDED) - 1585241581;
  *(_BYTE *)(v8 + v9) = (BYTE3(v6) ^ 2) - ((2 * (BYTE3(v6) ^ 2)) & 0xEF) - 9;
  *(_BYTE *)(v8 + v9 + 1) = (BYTE2(v6) ^ 0xEB) + (~(2 * (BYTE2(v6) ^ 0xEB)) | 0x11) - 8;
  *(_BYTE *)(v8 + v9 + 2) = (BYTE1(v6) ^ 0xD7) + ((v6 >> 7) & 0xEE ^ 0x51) - 8;
  *(_BYTE *)(v8 + v9 + 3) = (v4 - 2 * ((v4 - 88) & 0x4F ^ v4 & 3) - 12) ^ 0xBB;
  *v2 = v10;
}

void sub_18FE75074(uint64_t a1)
{
  __asm { BR              X8 }
}

void sub_18FE7519C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  _BOOL4 v16;

  v11 = (((61 * ((v8 - 10) ^ 0xFD1F9E6C) - 182) | 0x140) + 854911885) & 0xCD0B15F3;
  v12 = v11 - 86;
  v13 = v8 + v11 - 1377;
  v14 = (unsigned __int8 *)(*(_QWORD *)(a6 + 8 * (v8 ^ (v8 + 135))) - 4246707822 + v13);
  v16 = ((*(unsigned __int8 *)(*(_QWORD *)(a8 + 80) + v13 - 4246707820) - (*v14 ^ 0xF7)) ^ 0x7EBAD6FB)
      + ((2 * (*(unsigned __int8 *)(*(_QWORD *)(a8 + 80) + v13 - 4246707820) - (*v14 ^ 0xF7))) & 0xFD75ADF6)
      - 847396896 == v10
     && a7 - 0x72635B168D96A0D9 + (v12 ^ 0x72635B1600B47F18) != 0;
  __asm { BR              X14 }
}

uint64_t sub_18FE762B8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(v2 + (v4 - 376360112)) = *(_BYTE *)(a2 + (v4 - 376360112));
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((98 * (v4 - 1 == ((a1 - 609) ^ (v3 + 448)))) ^ a1)) - 4))();
}

void sub_18FE76300(uint64_t a1)
{
  int v1;

  v1 = 460628867 * ((((2 * a1) | 0x80334E9A) - a1 + 1072060595) ^ 0x8C8F2530);
  __asm { BR              X10 }
}

uint64_t sub_18FE76394@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((((((v2 | 0x104) - 219) | 0x51) - 298) * (a1 == 188985317)) ^ (v2 | 0x104)))
                            - 12))();
}

uint64_t sub_18FE763F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 + 8 * ((v2 + 164) | 0x420)) - 4))(a1, 3185689413, 19);
}

uint64_t sub_18FE764DC@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W6>, uint64_t a4@<X8>)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((a2 == ((a3 + 1472) ^ v4)) * ((a3 + 275) ^ a1)) ^ a3)) - 4))();
}

uint64_t sub_18FE76508@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((1517 * (v2 != 113 * (a1 ^ 0x1F7) - 339)) ^ a1)) - 12))();
}

uint64_t sub_18FE7653C@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  _BOOL4 v11;

  v6 = (a1 - 372350073) & 0x16319BD7;
  v7 = v2 + v3;
  v8 = v3 + 1;
  *(_DWORD *)(*(_QWORD *)(v4 - 0xFB9CCB0B87C5694) + 4 * (v7 + v6 - 339)) = v5;
  v9 = (v6 + 177) | 0x451;
  *(_DWORD *)(v4 - 0xFB9CCB0B87C5698) = v8;
  v10 = v8 + v2;
  if (v8 + v2 < 0)
    v10 = -v10;
  v11 = (int)((v10 ^ 0xFF77BFFD) + ((2 * v10) & 0xFEEF7FFA) + v9 + 8927661) > ((3 * (v9 ^ 0x624)) ^ ((v9 ^ 0x38C) - 1837));
  return (*(uint64_t (**)(void))(a2 + 8 * ((v11 | (8 * v11)) ^ v9)))();
}

uint64_t sub_18FE76630@<X0>(uint64_t a1@<X8>)
{
  int v1;
  _QWORD *v2;
  unsigned int v3;
  int v4;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((1798
                                * (*(_DWORD *)(*v2 + 4 * v3) != ((v1 + ((v4 + 237) | 0x415) - 2590) ^ (v4 + 1158)))) ^ v4)))();
}

uint64_t sub_18FE76670@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;
  _BOOL4 v3;

  v3 = v2 - 1 > ((3 * (a1 ^ 0x624)) ^ ((a1 ^ 0x38C) - 1837));
  return (*(uint64_t (**)(void))(a2 + 8 * ((v3 | (8 * v3)) ^ a1)))();
}

uint64_t sub_18FE766B0(uint64_t result)
{
  int v1;
  int v2;
  int v3;
  int *v4;
  int v5;
  int v6;

  if ((v1 + v2 - 1) >= 0x7FFFFFFF)
    v6 = -v3;
  else
    v6 = v5;
  *v4 = v6;
  *(_DWORD *)(result + 28) = 903386454;
  return result;
}

void sub_18FE766E8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) + 1755732067 * (((a1 | 0x8AD08517) - (a1 & 0x8AD08517)) ^ 0x541638CC);
  __asm { BR              X14 }
}

uint64_t sub_18FE767D0()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v0 + 305249156 > 61143551 || v0 + 305249156 < v3 + v2 - 696 - 2086340202;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * (((32 * ((((v2 - 696) ^ v2 ^ v5) & 1) == 0)) & 0x7F | (((((v2 + 72) ^ v2) ^ ~v5) & 1) << 7)) ^ (v2 - 696)))
                                          - 4))(0x4848DFD7821CCB1);
}

uint64_t sub_18FE768E4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, _QWORD *a5@<X6>, unsigned int a6@<W7>, int a7@<W8>)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  _BOOL4 v21;

  v18 = a1 - 0x4848DFD7821CCB1 + (v10 ^ 0x5EF0E4F3) + a6 * (unint64_t)(*(_DWORD *)(*a5 + 4 * a2) ^ v10);
  *(_DWORD *)(v9 + 4 * v12) = v10 + ((v7 - 802) | v14) + v18 - (((_DWORD)v18 << (v7 ^ v15)) & 0xBDE1C9E6) - 106;
  v19 = a2 + 1 + a3;
  v21 = v19 < a7 && v19 >= a4;
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v8 + 8 * (v7 ^ (v21 * v11))) - 12))((v16 ^ HIDWORD(v18)) + (v17 & (v18 >> 31)) + v13);
}

uint64_t sub_18FE769A0(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((a1 == ((((v1 ^ 0x55E) - 1562) | 5u) ^ 0x4848DFD7821CCD6))
                                          * ((((v1 ^ 0x55E) - 942755999) & 0x38314FF7) - 1241)) ^ v1 ^ 0x55E))
                            - 12))();
}

uint64_t sub_18FE76A1C()
{
  int v0;
  uint64_t v1;
  int v2;
  _DWORD *v3;
  int v4;
  int v5;
  _BOOL4 v6;

  v4 = *v3 - 1647376576;
  v5 = (v0 - 1647376576 < -1891482180) ^ (v4 < -1891482180);
  v6 = v0 - 1647376576 > v4;
  if (v5)
    v6 = v0 - 1647376576 < -1891482180;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1654 * v6) ^ v2)) - ((19 * (v2 ^ 0x52u)) ^ ((v2 ^ 0x388u) - 8))))();
}

void sub_18FE76A94()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

uint64_t sub_18FE76AB8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v1 - 458232398 < (int)(v3 + a1 - 1163 + 1445145316);
  if (v3 > 0x29DCD3D1 != v1 - 458232398 < (int)(((a1 - 1361) | 0x36B) ^ 0xD6232FC1))
    v4 = v3 > 0x29DCD3D1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((673 * v4) | (a1 - 1163))) - 4))();
}

uint64_t sub_18FE76B90@<X0>(uint64_t a1@<X0>, char a2@<W7>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  char v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  unint64_t v13;

  v13 = a1 - 0x4848DFD7821CCB1 + (*(_DWORD *)(v4 + 4 * v5) ^ v6);
  *(_DWORD *)(v4 + 4 * v5) = v13 + v6 - (((v8 - 227) ^ 0xBDE1C981) & (2 * v13));
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((v13 >> (((v8 - 91 + a2) & v7) - 42)) ^ v9)
                                           + a3
                                           + ((2 * (v13 >> (((v8 - 91 + a2) & v7) - 42))) & v10) != v12)
                                          * v11) ^ (v8 + 677)))
                            - 8))();
}

void sub_18FE76C28(uint64_t a1)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v2 = 1755732067 * ((~(_DWORD)a1 & 0x435CECC | a1 & 0xFBCA3133) ^ 0xDAF37317);
  v3 = *(_DWORD *)(a1 + 24) + v2;
  v4 = v3
     - 1374699841 * (((&v4 | 0x76EEEF45) - (&v4 & 0x76EEEF45)) ^ 0x1B1AF74C)
     - 231789827;
  nullsub_1(&v4);
  __asm { BR              X1 }
}

uint64_t sub_18FE76DA0(int a1)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((v1 + (a1 + 59) - 1036) & 0x7FFFFFFC) == ((a1 + v2) & v3) + v6)
                                          * v4) ^ a1))
                            - 4))();
}

void sub_18FE76DD8()
{
  JUMPOUT(0x18FE76D44);
}

uint64_t sub_18FE76DE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;

  v5 = (*(uint64_t (**)(_QWORD, uint64_t))(a1 + 8 * (v4 - 1519)))(v4 + (v4 ^ 0x36Cu) - 1066858275 + *(_DWORD *)(v3 + 24 * v2 + 16), 3511634213) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (v4 | (2 * v5))))();
}

uint64_t sub_18FE76E38()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;

  v3 = v1 - ((2 * v1 - 2133710122) & 0x88C6DDD8) + 80512087;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (v2 | (2
                                               * (((((8 * v2) ^ 0x2928) - 184567268) & (2 * v3) ^ (v2 - 2134468837))
                                                + (v3 ^ 0xBE1CB182)
                                                + 1609870014 == 1517586988))))
                            - 8))();
}

uint64_t sub_18FE76EC8(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5
                                                               + 8
                                                               * (((v2 + v1 + ((v4 - 468) ^ 0x580227Eu) < 8)
                                                                 * ((v4 ^ 0x13) - 1231)) ^ v4))
                                                   - 12))(a1, v3);
}

uint64_t sub_18FE76F1C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (13 * ((unint64_t)(v1 - a1) < 0x20)))) - 4))();
}

uint64_t sub_18FE76F48()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((30 * (((v0 < 0x20) ^ ((v1 ^ 0x85) - 96)) & 1)) ^ v1 ^ 0x485))
                            - (((v1 ^ 0x485) - 1483) | 0x41u)
                            + 211))();
}

uint64_t sub_18FE76F90(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  int8x16_t v10;
  uint64_t v11;
  uint64_t v12;
  int8x16_t v13;

  v8 = v6 | 0x404;
  v9 = v5 + v4 + v3 + 1246;
  v10.i64[0] = 0xACACACACACACACACLL;
  v10.i64[1] = 0xACACACACACACACACLL;
  v11 = v1 + v9;
  v12 = a1 + v9;
  v13 = vaddq_s8(*(int8x16_t *)(v11 - 31), v10);
  *(int8x16_t *)(v12 - 15) = vaddq_s8(*(int8x16_t *)(v11 - 15), v10);
  *(int8x16_t *)(v12 - 31) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((187 * ((v2 & 0xFFFFFFE0) == 32)) ^ (v8 - 405)))
                            - (((v8 + 126) | 0x134u) ^ 0x5BBLL)))();
}

void sub_18FE7700C()
{
  JUMPOUT(0x18FE76FC0);
}

uint64_t sub_18FE77018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((((((a7 - 1463) | 0xF4) + 1289) ^ ((a7 - 318) | 0x76)) * (v7 != v8)) ^ a7))
                            - 8))();
}

uint64_t sub_18FE77054(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v6
                                                              + 8
                                                              * (((44 * (((a3 - 1142) | 0x5E) ^ 0xCE) - 248)
                                                                * ((v3 & 0x18) == 0)) ^ a3))
                                                  - 8))(a1, (v4 - v5));
}

uint64_t sub_18FE77094(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  *(int8x8_t *)(a1 - 7 + v4 + v3 + v5 - v6 + (((v7 ^ 2) - 75) | 0x44Cu)) = vadd_s8(*(int8x8_t *)(v1- 7+ v4+ v3+ v5- v6+ (((v7 ^ 2) - 75) | 0x44Cu)), (int8x8_t)0xACACACACACACACACLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v7 ^ 2 ^ (2 * (((v7 ^ 0xFFFFFF27) & v2) - v6 != 8)))) - 8))();
}

void sub_18FE770FC()
{
  JUMPOUT(0x18FE770CCLL);
}

uint64_t sub_18FE77104(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v4 ^ (437 * (v3 == a3))))
                            - 36 * (((v4 - 594) | 0x60) ^ 0x2EBu)
                            + 248))();
}

uint64_t sub_18FE77140@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(a1 + (a2 - 1517586989)) = *(_BYTE *)(v3 + (a2 - 1517586989)) - 84;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((a2 - 1 == a3) * (v4 + 728)) ^ v4)) - 12))();
}

uint64_t sub_18FE77180()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_QWORD *)(v1 + 32) != 0x2887D5897980B1ELL) * (3 * (v0 ^ 0x1BA) - 565)) ^ v0))
                            - 4))();
}

uint64_t sub_18FE771C0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(_BYTE *)(a2 - 0x2887D5897980B1ELL) = 1;
  v4 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(*(_QWORD *)v2 - 0x287B5FB39018A0EELL) = result;
  *(_DWORD *)(v4 - 0x3A51940F6F7F0D1CLL) = v3;
  *(_DWORD *)(v2 + 48) = 446849184;
  return result;
}

uint64_t sub_18FE77254(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  BOOL v4;
  unsigned int v5;
  uint64_t v6;

  v1 = 535753261 * ((2 * (a1 & 0x629F6417) - (_DWORD)a1 - 1654613016) ^ 0x979495C7);
  v2 = *a1 - v1;
  v3 = a1[4] ^ v1;
  v5 = v3 - 1223307022;
  v4 = v3 - 1223307022 < 0;
  LODWORD(v6) = 1223307022 - v3;
  if (v4)
    v6 = v6;
  else
    v6 = v5;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E2ABD050 + (int)(v2 ^ 0x2CE))
                              + (int)((488 * (v6 == ((2 * (_DWORD)v6) & 0x33FCE704))) ^ v2)
                              - 1)
                            - (v2
                             + 40)
                            + 770))();
}

void sub_18FE77314(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 - 0xFB9CCB0B87C5698) = a1;
}

uint64_t sub_18FE77370(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))(qword_1E2AB8EB0[(175 * (*(_DWORD *)(a2 + 4) == 1066855074)) ^ 0x343u] - 8))(4294925278);
}

uint64_t sub_18FE773B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 + 96) + 448) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 12);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2 + 6808) - 8))(0);
}

uint64_t sub_18FE7740C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;

  *(_BYTE *)(a1 + (v5 + v6)) = *(_BYTE *)(v4 + (v5 + v6));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * (v3 ^ (16 * (v6 - 1 != v2)))) - 8))(0);
}

uint64_t sub_18FE7743C(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;

  v1 = 1225351577 * (((a1 | 0xA3D2D055) - (a1 & 0xA3D2D055)) ^ 0x80480843);
  v2 = *(_DWORD *)(a1 + 24) - v1;
  v3 = *(_DWORD *)(a1 + 8) - v1;
  v4 = *(_DWORD *)(*(_QWORD *)a1 - 0xFB9CCB0B87C5698);
  v6 = v4 - 1903378044;
  v5 = v4 - 1903378044 < 0;
  v7 = 1903378044 - v4;
  if (v5)
    v8 = v7;
  else
    v8 = v6;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E2ABD050 + v2 - 1580)
                              + ((((v3 - 1071499190) < 4 * (unint64_t)v8)
                                * (((v2 - 596) | 0x1A0) ^ 0x57F)) ^ v2)
                              - 1)
                            - 12))();
}

uint64_t sub_18FE77510(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * ((100 * (v1 != (v3 ^ 0x3FDDC700) + (v3 ^ 0xB6))) ^ v3)))(a1, 590880257);
}

uint64_t sub_18FE7754C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2
                                                                                + 8
                                                                                * ((929 * ((v3 ^ 0x536) == 32)) ^ (v3 - 1038)))
                                                                    - 8))(a1, (v3 - 1038), 1592845555, v1);
}

uint64_t sub_18FE775C0@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  char v7;
  int v8;

  *(_BYTE *)(*(_QWORD *)(a1 + 16) + (a3 + a4)) = (a2 ^ v6) >> v7;
  return (*(uint64_t (**)(void))(v4 + 8 * (v8 ^ (182 * (a3 - 1 == v5 + 182)))))();
}

uint64_t sub_18FE77600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                                + 8
                                                                                * ((929
                                                                                  * (v6 + v5 + v6 - 1038 - 1558 == (v6 ^ 0x536))) ^ (v6 - 1038)))
                                                                    - 8))(a1, (v6 - 1038), a3, v3);
}

uint64_t sub_18FE77640(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  _BOOL4 v7;

  v7 = v5 + 2057793488 > (int)a2 + 2051457580 || v5 + 2057793488 < v4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (int)(v7 ^ a2)) - 8))(a1, a2, 1592845555, v2);
}

uint64_t sub_18FE77688@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  int v4;

  return sub_18FE775C0(a1, *(_DWORD *)(*v3 + 4 * (v4 - 2141148005)), v2, a2);
}

uint64_t sub_18FE776BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

uint64_t sub_18FE776C4(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 460628867 * ((((2 * a1) | 0xD350F8B8) - a1 - 1772649564) ^ 0x253EFE21);
  v2 = *(_DWORD *)(a1 + 4) + v1;
  v3 = *(_DWORD *)(a1 + 8) ^ v1;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xFB9CCB0B87C5698);
  v6 = v4 - 1903378044;
  v5 = v4 - 1903378044 < 0;
  v7 = 1903378044 - v4;
  if (!v5)
    v7 = v6;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E2ABD050 + v2 - 1714)
                              + ((508
                                * ((v2 ^ 0x6B ^ ((v3 - 600629138) < 4
                                                                                                 * (unint64_t)v7)) & 1)) ^ v2)
                              - 1)
                            - 12))();
}

uint64_t sub_18FE77794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  unsigned int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                                 + 8
                                                                                 * (int)((1343
                                                                                        * (((v4 == 600629138) ^ v5) & 1)) ^ v5))
                                                                     - (v5 ^ 0x1B9)))(a1, a2, a3, 1779522747);
}

uint64_t sub_18FE777D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1
                                                                                                 + 8
                                                                                                 * ((((v3 - 459) | 0x61C) - 1514) ^ ((v3 - 459) | 0x61C)))
                                                                                     - 4))(a1, 1472149272, (v3 - 459) | 0x61Cu, ((v3 - 459) | 0x61Cu) - 1133, 1592845555, v2);
}

uint64_t sub_18FE77854@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  char v8;

  *(_BYTE *)(*(_QWORD *)(a1 + 24) + (a4 + a5)) = ((a3 ^ v7) >> v8)
                                                             + (~((a3 ^ v7) >> v8 << ((((a2 + 73) & 0xDF) + 69) ^ a2 ^ 0xAF)) | 0x11)
                                                             - 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a2 ^ (124 * (a4 - 1 != v6)))) - 8))();
}

uint64_t sub_18FE778C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                                  + 8 * (int)(((v7 == 24) * (a3 - 1514)) ^ a3))
                                                                                      - 4))(a1, a2, a3, (a3 - 1133), a5, v6);
}

uint64_t sub_18FE778EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  _BOOL4 v8;

  v8 = v3 > v7;
  if (v8 == (int)a2 - 1065754610 < -1741088986)
    v8 = (int)a2 - 1065754610 < v6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                                                  + 8 * (int)(((((a3 - 1438) | 0x131) ^ 0x126) * v8) ^ a3))
                                                                                      - 4))(a1, a2, a3, ((_DWORD)a3 - 1438) | 0x131u, 1592845555, v5);
}

uint64_t sub_18FE7795C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  int v4;
  _QWORD *v5;

  return sub_18FE77854(a1, a3 - 1133, *(_DWORD *)(*v5 + 4 * (int)(((a3 - 1133) ^ 0xA840C959) + a2)), v4, a4);
}

_DWORD *sub_18FE77988(_DWORD *result, uint64_t a2, uint64_t a3, int a4)
{
  *result = a4;
  return result;
}

void sub_18FE77990(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 48) + 3804331 * (((a1 | 0x6BF12641) - (a1 | 0x940ED9BE) - 1810966082) ^ 0x916FD517);
  __asm { BR              X10 }
}

uint64_t sub_18FE77ADC()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = *(_DWORD *)(v2 + 40) - v0 == ((v1 + 1501736708) & 0xA67D4BFF ^ 0x56A37D6B)
    || (*(_QWORD *)(v2 + 56) | *(_QWORD *)(v2 + 32)) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((910 * v5) ^ v1)) - (v1 - 1276) + 225))();
}

uint64_t sub_18FE77B48()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  _BOOL4 v4;

  v4 = v1[1] != 0x79A1A67E3F586002 && (*v1 | v1[2]) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v4 * (((v0 - 300716530) & 0x11EC975C) - 460)) ^ v0)) - 8))();
}

uint64_t sub_18FE77BA8(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (((2 * (v1 == 0)) | (4 * (v1 == 0))) ^ v2))
                                                   - 4))(a1, 460628867);
}

uint64_t sub_18FE77CAC@<X0>(int a1@<W1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v46)(uint64_t);
  uint64_t v47;
  void (*v48)(uint64_t);
  void (*v49)(uint64_t);
  uint64_t v50;

  v34 = v27 ^ 0x56A;
  v35 = ((v33 - 144) ^ 0x4C96827D) * a1;
  *(_DWORD *)(v33 - 136) = v35 + v27 + 1075;
  *(_QWORD *)(v33 - 144) = v25;
  *(_DWORD *)(v33 - 120) = v35 + v28 - 1264570989 + (v27 ^ 0x56A);
  *(_QWORD *)(v33 - 128) = v30;
  v50 = a2 + v26;
  ((void (*)(uint64_t))(*(_QWORD *)(v32 + 8 * (v27 - 301)) - 12))(v33 - 144);
  HIDWORD(a13) = v34 ^ 0x421;
  *(_QWORD *)(v33 - 144) = a24;
  *(_QWORD *)(v33 - 136) = a23;
  *(_DWORD *)(v33 - 128) = v34
                         - 1034
                         - 1374699841 * ((((v33 - 144) | 0x80082CCD) - ((v33 - 144) & 0x80082CCD)) ^ 0xEDFC34C4);
  v49 = (void (*)(uint64_t))(*(_QWORD *)(v32 + 8 * (v34 - 1046)) - 8);
  v49(v33 - 144);
  HIDWORD(a10) = v34 - 264;
  HIDWORD(a5) = 2 * (v33 - 144);
  *(_QWORD *)(v33 - 144) = v30;
  *(_QWORD *)(v33 - 136) = a24;
  *(_QWORD *)(v33 - 128) = a25;
  *(_QWORD *)(v33 - 112) = a23;
  *(_DWORD *)(v33 - 120) = v34 - 264 - 235795823 * (((HIDWORD(a5) | 0x648751B2) - (v33 - 144) - 843294937) ^ 0xA6EEE180);
  v48 = (void (*)(uint64_t))(*(_QWORD *)(v32 + 8 * (v34 - 1056)) - 8);
  v48(v33 - 144);
  HIDWORD(v47) = v34 - 512;
  *(_DWORD *)(v33 - 144) = v34
                         - 512
                         + 1759421093
                         * ((919625807 - ((v33 - 144) | 0x36D0604F) + ((v33 - 144) | 0xC92F9FB0)) ^ 0x7A522FE4);
  *(_QWORD *)(v33 - 112) = a25;
  *(_QWORD *)(v33 - 104) = a24;
  *(_QWORD *)(v33 - 128) = v31;
  *(_QWORD *)(v33 - 120) = a23;
  *(_QWORD *)(v33 - 136) = a25;
  v36 = *(void (**)(uint64_t))(v32 + 8 * (v34 - 1050));
  v36(v33 - 144);
  LODWORD(v47) = v34 + 496;
  *(_DWORD *)(v33 - 136) = (v34 + 496) ^ (235795823
                                        * (((HIDWORD(a5) | 0x940699B6) - (v33 - 144) - 1241730267) ^ 0xDEAE0582));
  *(_QWORD *)(v33 - 112) = a23;
  *(_QWORD *)(v33 - 104) = a16;
  *(_QWORD *)(v33 - 144) = a25;
  *(_QWORD *)(v33 - 128) = a24;
  *(_QWORD *)(v33 - 120) = a25;
  v46 = (void (*)(uint64_t))*(&off_1E2ABD050 + v34 - 1070);
  v46(v33 - 144);
  *(_DWORD *)(v33 - 128) = v34
                         - 1034
                         - 1374699841 * (((v33 - 144) & 0x346B7329 | ~((v33 - 144) | 0x346B7329)) ^ 0xA66094DF);
  *(_QWORD *)(v33 - 144) = a24;
  *(_QWORD *)(v33 - 136) = a19;
  v49(v33 - 144);
  *(_QWORD *)(v33 - 136) = a24;
  *(_QWORD *)(v33 - 128) = a15;
  *(_QWORD *)(v33 - 112) = a19;
  *(_DWORD *)(v33 - 120) = v34 - 264 - 235795823 * ((v33 + 813688664 - 2 * ((v33 - 144) & 0x307FE7E8)) ^ 0xA4D2AEB1);
  *(_QWORD *)(v33 - 144) = v30;
  v48(v33 - 144);
  *(_QWORD *)(v33 - 112) = a15;
  *(_QWORD *)(v33 - 104) = a24;
  *(_QWORD *)(v33 - 136) = a15;
  *(_QWORD *)(v33 - 128) = v31;
  *(_DWORD *)(v33 - 144) = v34
                         - 512
                         + 1759421093 * (((HIDWORD(a5) | 0xEB35632E) - (v33 - 144) + 174411369) ^ 0x46E701C3);
  *(_QWORD *)(v33 - 120) = a19;
  v36(v33 - 144);
  *(_DWORD *)(v33 - 136) = (v34 + 496) ^ (235795823
                                        * (((HIDWORD(a5) | 0xE7D5EF06) - (v33 - 144) + 202705021) ^ 0x6747BEDA));
  *(_QWORD *)(v33 - 144) = a15;
  *(_QWORD *)(v33 - 128) = a24;
  *(_QWORD *)(v33 - 120) = a15;
  *(_QWORD *)(v33 - 112) = a19;
  *(_QWORD *)(v33 - 104) = a17;
  v46(v33 - 144);
  *(_DWORD *)(v33 - 136) = (v34 - 1081) ^ (460628867
                                         * (((v33 - 144) & 0xAB3A3A2F | ~((v33 - 144) | 0xAB3A3A2F)) ^ 0x185347AD));
  *(_QWORD *)(v33 - 128) = a15;
  *(_QWORD *)(v33 - 144) = a25;
  ((void (*)(uint64_t))((char *)*(&off_1E2ABD050 + v34 - 1163) - 12))(v33 - 144);
  *(_QWORD *)(v33 - 136) = a15;
  *(_DWORD *)(v33 - 144) = (v34 - 508) ^ (535753261
                                        * ((-715925592 - ((v33 - 144) | 0xD553D7A8) + ((v33 - 144) | 0x2AAC2857)) ^ 0x20582678));
  sub_18FE866CC(v33 - 144);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), uint64_t, void (*)(uint64_t), uint64_t, uint64_t, void (*)(uint64_t), char *, uint64_t, _QWORD, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 + 8 * (((*(_DWORD *)(v33 - 128) < 0x5A617B28u) * ((v34 ^ 0x421) + 178)) ^ v34)) - (v34 - 991) + 225))(v37, v38, v39, v40, v41, v42, v43, v44, a3, a4, a5, v46, v47, v48, v30, a10, v49, (char *)*(&off_1E2ABD050 + (v34 ^ 0x4AF)) - 12, a13,
           (v34 - 991),
           a15,
           v36,
           a17,
           v50,
           a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_18FE781BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void (*a18)(uint64_t), uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  void (*v37)(uint64_t);
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  *(_DWORD *)(v42 - 144) = v39
                         - 1178560073 * ((2 * ((v42 - 144) & 0x4313E280) - (v42 - 144) + 1022107006) ^ 0xEFA1D3E)
                         + 495;
  *(_QWORD *)(v42 - 136) = v41;
  *(_QWORD *)(v42 - 128) = v38;
  v37(v42 - 144);
  *(_QWORD *)(v42 - 136) = v41;
  *(_QWORD *)(v42 - 128) = a37;
  *(_QWORD *)(v42 - 112) = v41;
  *(_QWORD *)(v42 - 104) = a30;
  *(_DWORD *)(v42 - 144) = v39
                         + 479
                         + 1759421093
                         * ((((v42 - 144) | 0x374670FE) - (v42 - 144) + ((v42 - 144) & 0xC8B98F00)) ^ 0x843BC0AA);
  *(_QWORD *)(v42 - 120) = v38;
  a22(v42 - 144);
  *(_QWORD *)(v42 - 136) = v41;
  *(_QWORD *)(v42 - 128) = v41;
  *(_DWORD *)(v42 - 144) = v39
                         + 479
                         + 1759421093 * ((((v42 - 144) | 0xDD3829F) + (~(v42 - 144) | 0xF22C7D60)) ^ 0xBEAE32CA);
  *(_QWORD *)(v42 - 120) = v38;
  *(_QWORD *)(v42 - 112) = a24;
  *(_QWORD *)(v42 - 104) = a30;
  a22(v42 - 144);
  *(_QWORD *)(v42 - 144) = v41;
  *(_QWORD *)(v42 - 128) = a29;
  *(_DWORD *)(v42 - 136) = v39
                         + 235795823
                         * ((1375372993 - ((v42 - 144) | 0x51FA86C1) + ((v42 - 144) | 0xAE05793E)) ^ 0x3AA83067)
                         - 1882357701;
  sub_18FE97C74(v42 - 144);
  *(_QWORD *)(v42 - 136) = v41;
  *(_QWORD *)(v42 - 128) = a31;
  *(_DWORD *)(v42 - 144) = v39
                         - 1178560073 * ((((v42 - 144) | 0x5A018B79) + (~(v42 - 144) | 0xA5FE7486)) ^ 0x68178B38)
                         + 495;
  a18(v42 - 144);
  *(_DWORD *)(v42 - 128) = v39
                         - 1759421093 * (((v42 - 144) & 0x7804B9DA | ~((v42 - 144) | 0x7804B9DA)) ^ 0x3486F671)
                         + 1032;
  *(_QWORD *)(v42 - 144) = a31;
  *(_QWORD *)(v42 - 136) = v41;
  v43 = sub_18FE643E0(v42 - 144);
  return (*(uint64_t (**)(uint64_t))(v40
                                            + 8
                                            * (((((a28 == 0) ^ (v39 + 86)) & 1)
                                              * (((v39 - 172) | 0x102) ^ 0x11C)) ^ (v39 + 462))))(v43);
}

uint64_t sub_18FE78420()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v4 = 460628867 * ((2 * (((v3 - 144) ^ 0x16D8BC94) & 0x7EE300A8) - ((v3 - 144) ^ 0x16D8BC94) + 18677589) ^ 0x5B52C1BC);
  *(_QWORD *)(v3 - 128) = v1;
  *(_QWORD *)(v3 - 120) = v8;
  *(_DWORD *)(v3 - 140) = v2 - v4 + 1431;
  *(_DWORD *)(v3 - 136) = (((v2 - 86) ^ 0xCD2962E1) + v7) ^ v4;
  result = ((uint64_t (*)(uint64_t))*(&off_1E2ABD050 + (v2 ^ 0x175)))(v3 - 144);
  *(_DWORD *)(v6 - 0x79A1A67E3F586002) = v7;
  *(_DWORD *)(v0 + 44) = 446849184;
  return result;
}

void sub_18FE785A4(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  v2 = *((_QWORD *)*(&off_1E2ABD050 + v1 - 761)
       + ((13
         * (((uint64_t (*)(uint64_t, uint64_t))*(&off_1E2ABD050 + (v1 ^ 0x3C3)))(32, 0x101004023FF3BD5) != 0)) ^ v1)
       - 1);
  __asm { BR              X8 }
}

uint64_t sub_18FE78644(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)result = 0;
  *(_QWORD *)(result + 8) = 0x6F90112F6F90112FLL;
  *(_QWORD *)(result + 16) = 0x84BF87B572033BACLL;
  *(_DWORD *)(result + 24) = 446849184;
  *(_QWORD *)(v2 - 0x1706FB9DE6F6FC5CLL) = result + 0x4F927BF50B0C4CFBLL;
  *((_DWORD *)v1 + 2) = 446849184;
  return result;
}

void sub_18FE786C4(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_18FE7874C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a66;
  uint64_t v66;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v66 + 6912) - 4))(a1, a2, a3, a4, a5, a6, a7, 1172840352, &a66, a10);
}

uint64_t sub_18FE7886C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  v4 = v1 != ((v3 + ((v0 + 1147148272) | 0x1880580) + 1121) ^ 0x6891756B);
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 | (4 * v4)) ^ v0)))();
}

uint64_t sub_18FE788C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  _BOOL4 v23;

  v22 = v18 + v21;
  v23 = a18 + 651707386 < (v19 + 1325135216);
  if ((a18 + 651707386) < 0x8E92E005 != v19 + 1325135216 < ((v18 + v21 - 1372695266) & 0x51D1ADF7 ^ 0x8E92E452))
    v23 = v19 + 1325135216 < ((v22 - 1372695266) & 0x51D1ADF7 ^ 0x8E92E452);
  return (*(uint64_t (**)(void))(v20 + 8 * ((!v23 | (2 * !v23)) ^ (v22 + 512))))();
}

uint64_t sub_18FE78B00()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(_DWORD *)(v2
                                             + 48 * (int)(v1 - 1754362058 + ((v0 - 974316641) ^ 0xC5ED1EB7) - 321)
                                             + 36) != v1)
                                * (v4 + ((v0 - 974316641) & 0x7FFAFFA9) - 139)) ^ v0)))();
}

uint64_t sub_18FE78B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;

  v19 = 628203409 * ((-1477861380 - ((v18 - 152) | 0xA7E99FFC) + ((v18 - 152) | 0x58166003)) ^ 0xDA9E6C30);
  *(_QWORD *)(v18 - 128) = a14;
  *(_QWORD *)(v18 - 152) = a13;
  *(_QWORD *)(v18 - 144) = a11;
  *(_QWORD *)(v18 - 112) = v16;
  *(_QWORD *)(v18 - 104) = a12;
  *(_DWORD *)(v18 - 136) = v15 - v19 + 581;
  *(_DWORD *)(v18 - 132) = v14 - v19 - 433883541;
  v20 = (*(uint64_t (**)(uint64_t))(a6 + 8 * (v15 - 276)))(v18 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17
                                                      + 8 * ((1191 * (*(_DWORD *)(v18 - 120) == 446849184)) ^ v15))
                                          - ((v15 - 1776091522) & 0x69DD05DC ^ 0x598)))(v20);
}

uint64_t sub_18FE78C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int v12;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((54 * (*(_DWORD *)(v8 + 48 * (v7 - 1754362058)) != 1021828519)) ^ v11))
                                                                                       - (((v11 ^ 0x4DD) - v12) ^ (unint64_t)(a7 + 4))))(a1, a2, a3, a4, a5, v10);
}

uint64_t sub_18FE78CBC@<X0>(unint64_t a1@<X6>, unsigned int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((220 * ((v2 ^ 0x3B667C62) == v3 + ((a2 + 31984959) | 0x44001120) + 2083521209)) ^ a2))
                            - ((a2 + 2147286650) & 0xC5EB1FE4 ^ a1)))();
}

uint64_t sub_18FE78D34()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v3 + v0 + 522) | (32 * ((v1 & 0xFFFFFFFFFFFFFFFuLL) - 1 > 1))))
                            - ((v3 + v0 - 285) | 0x98u)
                            + 180))();
}

uint64_t sub_18FE78D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  uint64_t v20;
  uint64_t v21;

  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((105
                                * (((a19 - 1066855061) ^ 0x6FFFF2FFDDBFF9F8)
                                 - 0x6FFFF2FF50DDD33ALL
                                 + ((2 * (a19 - 1066855061)) & 0x1BB7FF3F0) == v21)) ^ v19)))();
}

uint64_t sub_18FE78E04()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;

  v6 = *(unsigned __int8 *)(v0 + v3 - 0x72635B168D96A0D2)
     - (*(unsigned __int8 *)(v1 + v3 - 0x72635B168D96A0D2) ^ 0xF7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((((2 * v6) & 0xFD75ADF6) + (v6 ^ (((4 * v2) ^ 0x5B8) + 2126173759)) == 2126173947)
                                          * (v5 + ((v2 + 1091050207) | 0x4E00380) + 1076)) ^ v2))
                            - 4))();
}

uint64_t sub_18FE78E9C()
{
  unint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _BOOL4 v5;

  v5 = v0 < v4;
  if (v5 == v1 - 0x72635B1600B47A13 < v4)
    v5 = v1 - 0x72635B1600B47A13 < v0;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 - 83) * !v5) ^ v2)))();
}

uint64_t sub_18FE78EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * (((((v11 ^ (a8 - 191)) - a8 + 981) ^ 0x1F3)
                                          * (v9 - v10 + (v8 ^ 0xBC667FEB) == -208331756)) ^ v11))
                            - 4))();
}

uint64_t sub_18FE78F4C@<X0>(unint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ ((2 * (a2 != 0)) | (8 * (a2 != 0)))))
                            - ((v2 - v4 - 660) ^ a1)))();
}

uint64_t sub_18FE78F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  int v19;
  uint64_t v20;
  int v21;

  return ((uint64_t (*)(void))(*(_QWORD *)(v20
                                        + 8
                                        * (int)((((a19 - 1166549779) < 0x10)
                                               * ((v19 + 757058635) & 0x8CF81555 ^ 0x1A3)) ^ (v19 + v21)))
                            - 4))();
}

uint64_t sub_18FE78FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;

  if ((v8 - 996572270) <= 0x10 && ((1 << (v8 - 110)) & 0x14109) != 0)
    __asm { BR              X10 }
  return a5 ^ 0xE55D3B7E;
}

void sub_18FE7933C(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(_QWORD *)(a1 + 24))
    v2 = *(_DWORD *)(a1 + 20) - v1 == 1871712559;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_18FE793E0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0x39)))(32, 0x101004023FF3BD5) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((669 * v3) ^ v0)))();
}

uint64_t sub_18FE79424()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((254 * (v0 == v1 + ((((v2 - 600201580) & 0x23C65DFE) - 1299) | 0x80) - 219)) ^ (v2 - 600201580) & 0x23C65DFEu))
                            - ((((v2 - 600201580) & 0x23C65DFE) - 1260) | 0x59u)
                            + 207))();
}

uint64_t sub_18FE79494@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  int v6;
  int v8;
  uint64_t v9;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;

  v11 = v2 - 1871712560;
  v12 = v2 - 1;
  v13 = *(unsigned __int8 *)(v5 + v11);
  if (v13 == 247)
    __asm { BR              X11 }
  if (v13 == 119)
  {
    v14 = 446849184;
    v15 = *(_QWORD *)(v3 + 8);
    v16 = *(unsigned __int8 *)(v3 + 16) ^ v4;
    *(_QWORD *)result = v5;
    *(_DWORD *)(result + 8) = v6;
    *(_DWORD *)(result + 12) = v12;
    if (v16 == 101)
      v17 = -2067822666;
    else
      v17 = -2067822665;
    *(_DWORD *)(result + 16) = 1912814508;
    *(_DWORD *)(result + 20) = v17;
    *(_DWORD *)(result + 24) = 446849184;
    *(_QWORD *)(v15 - 0x3F786DCCE8121A19) = a2;
  }
  else
  {
    result = (*(uint64_t (**)(void))(v9 + 8 * (v8 ^ 0xC1)))();
    v14 = -446874759;
  }
  *(_DWORD *)v3 = v14;
  return result;
}

void sub_18FE79578(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t *v8;
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 32) ^ (1755732067 * ((-1951871487 - (a1 | 0x8BA8CE01) + (a1 | 0x745731FE)) ^ 0xAA918C25));
  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(unint64_t **)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(v3 - 0x21738119BF0B6174);
  v9 = &STACK[0xFB9CCB0B87C56CC];
  v10 = v6;
  v11 = v5;
  v12 = v2;
  LODWORD(v8) = v1
              + 1759421093 * ((((2 * &v8) | 0x3B12CA3E) - &v8 - 495543583) ^ 0xAEF4D54B)
              - 442;
  v13 = v3;
  ((void (*)(unint64_t **))*(&off_1E2ABD050 + v1 - 980))(&v8);
  v7 = *(unint64_t **)(v3 - 0x21738119BF0B617CLL);
  LODWORD(v10) = v1
               - 1759421093 * ((&v8 - 365201210 - 2 * (&v8 & 0xEA3B78C6)) ^ 0x5946C892)
               + 111;
  v8 = &STACK[0xFB9CCB0B87C56BC];
  v9 = v7;
  sub_18FE643E0((uint64_t)&v8);
  HIDWORD(v9) = (1734042137
               * (((&v8 | 0x3498A0FC) - &v8 + (&v8 & 0xCB675F00)) ^ 0x685663B1)) ^ (v1 - 243);
  v8 = v4;
  sub_18FE93964((uint64_t)&v8);
  __asm { BR              X8 }
}

uint64_t sub_18FE797B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t), uint64_t a11)
{
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;

  *(_DWORD *)(v18 - 144) = v12
                         + 1759421093 * ((((v18 - 144) | 0xA0303F85) + (~(v18 - 144) | 0x5FCFC07A)) ^ 0x134D8FD0)
                         - 375;
  *(_QWORD *)(v18 - 120) = v14;
  *(_QWORD *)(v18 - 112) = a11;
  *(_QWORD *)(v18 - 136) = v13;
  *(_QWORD *)(v18 - 128) = v13;
  *(_QWORD *)(v18 - 104) = v15;
  v19 = a10(v18 - 144);
  v20 = ((v12 + 67) ^ v11 ^ 0xC022B37C) + v17 < 0x7FFFFFFF;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * (((2 * v20) | (16 * v20)) ^ (v12 + 67))) - 4))(v19);
}

uint64_t sub_18FE79854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;

  *(_DWORD *)(v18 - 128) = v14
                         + 1225351577 * ((((v18 - 144) | 0xFB69CC53) - ((v18 - 144) & 0xFB69CC53)) ^ 0xD8F31445)
                         + 738;
  *(_QWORD *)(v18 - 120) = v12;
  *(_QWORD *)(v18 - 112) = v13;
  *(_QWORD *)(v18 - 144) = v15;
  *(_QWORD *)(v18 - 136) = v12;
  ((void (*)(uint64_t))((char *)*(&off_1E2ABD050 + v14 - 1055) - 8))(v18 - 144);
  v19 = 1755732067 * ((v18 - 206052177 - 2 * ((v18 - 144) & 0xF3B7E53F)) ^ 0x2D7158E4);
  *(_QWORD *)(v18 - 136) = a12;
  *(_DWORD *)(v18 - 144) = (v14 - 750) ^ v19;
  *(_DWORD *)(v18 - 124) = -1071466685 - v19 + v17;
  v20 = sub_18FE590CC(v18 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16
                                                      + 8
                                                      * (((*(_DWORD *)(v18 - 128) == -1589596968)
                                                        * ((v14 + 72) ^ 0xB8 ^ ((v14 + 4) | 1))) ^ v14))
                                          - 8))(v20);
}

uint64_t sub_18FE79960@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((2 * ((a1 ^ 0xC022B37C) + v3 < 0x7FFFFFFF)) | (16
                                                                                         * ((a1 ^ 0xC022B37C) + v3 < 0x7FFFFFFF))) ^ v1))
                            - 4))();
}

uint64_t sub_18FE799A0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t *v8;
  void (*v9)(uint64_t);
  uint64_t v10;

  v5 = *v8;
  v6 = 535753261 * ((v4 - 144) ^ 0xAF40E2F);
  *(_QWORD *)(v4 - 136) = v10;
  *(_DWORD *)(v4 - 144) = v6 + v2 - 416;
  *(_DWORD *)(v4 - 128) = v6 ^ 0x48EA2F0F;
  sub_18FE77254((_DWORD *)(v4 - 144));
  *(_QWORD *)(v4 - 136) = v0;
  *(_QWORD *)(v4 - 128) = v0;
  *(_QWORD *)(v4 - 112) = v10;
  *(_QWORD *)(v4 - 104) = v3;
  *(_DWORD *)(v4 - 144) = v2 + 1759421093 * ((v4 - 144) ^ 0xB37DB054) - 442;
  *(_QWORD *)(v4 - 120) = v1;
  v9(v4 - 144);
  *(_DWORD *)(v4 - 128) = v2 - 1759421093 * (((v4 - 144) & 0xE38F931A | ~((v4 - 144) | 0xE38F931A)) ^ 0xAF0DDCB1) + 111;
  *(_QWORD *)(v4 - 144) = v5;
  *(_QWORD *)(v4 - 136) = v0;
  return sub_18FE643E0(v4 - 144);
}

void sub_18FE79AA4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1225351577 * (a1 ^ 0x239AD816);
  __asm { BR              X14 }
}

void sub_18FE79B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  *(_DWORD *)(a3 + v4) = v3;
}

void sub_18FE7A964()
{
  uint64_t v0;
  int v1;
  _BOOL4 v2;

  v0 = MEMORY[0x1E0C80A78]();
  v1 = *(_DWORD *)(v0 + 8) ^ (235795823 * ((v0 - 1923327579 - 2 * (v0 & 0x8D5C59A5)) ^ 0x19F110FC));
  v2 = *(_DWORD *)(*(_QWORD *)(v0 + 24) - 0xFB9CCB0B87C5698) == 1903378044;
  __asm { BR              X13 }
}

uint64_t sub_18FE7AAD4()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(v3 + v1) = v0;
  *(_DWORD *)(v6 - 128) = v2 + 688 - ((v6 - 144) ^ 0xB37DB054) * v5 - 455;
  *(_QWORD *)(v6 - 144) = v3;
  *(_QWORD *)(v6 - 136) = v4;
  return sub_18FE643E0(v6 - 144);
}

void sub_18FE7BE78(uint64_t a1)
{
  int v1;
  BOOL v3;

  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xFB9CCB0B87C5698) == 1903378044
    || *(_DWORD *)(*(_QWORD *)a1 - 0xFB9CCB0B87C5698) == 1903378044;
  v1 = *(_DWORD *)(a1 + 16) + 460628867 * ((a1 + 1711807950 - 2 * (a1 & 0x66081DCE)) ^ 0x2A9E9FB3);
  __asm { BR              X16 }
}

uint64_t sub_18FE7BF7C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((677
                                * (v3 & ~(((((v4 | 0x84) - 974) | 0x272) - 474) ^ ((v2 + a1 - 133) < 0x7FFFFF7D)))) ^ (v4 | 0x84))))();
}

uint64_t sub_18FE7BFCC(int a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * (int)(((((v2 + 497054687) & 0xE25F8BEB) + 897) * (a1 > 0)) ^ v2))
                                          - 8))(1666313860);
}

uint64_t sub_18FE7C044(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  _BOOL4 v21;

  *(_DWORD *)(a14 + 4 * (v16 - 249 + a1 - 1666314250)) = v15;
  v18 = a1 - 1305549272;
  v19 = (a1 + 1);
  v21 = v18 < -1786719061 || v18 >= v17;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14 + 8 * ((245 * v21) ^ v16)) - 4))(v19);
}

uint64_t sub_18FE7C09C()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((38 * (((v1 == 0) ^ (v2 - 1)) & 1)) ^ v2)) - 8))();
}

uint64_t sub_18FE7C0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  int v12;
  int v13;

  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((**(_DWORD **)(a11 - 0xFB9CCB0B87C5694) != v12) * (11 * (v13 ^ 0x14A) + 1288)) ^ v13 ^ 0x3AA)))();
}

uint64_t sub_18FE7C1BC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * ((((((v3 ^ 0x235) - 116) | 0x241) ^ 0x1E2) * (v1 != v2)) ^ v3 ^ 0x235))
                            - (((v3 ^ 0x235) - 113) | 0x210u)
                            + 655))();
}

uint64_t sub_18FE7C204(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, _DWORD **a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  _BOOL4 v28;

  v25 = 4 * v19;
  v26 = (v17 ^ 0x864603E2) + (v22 ^ v16) * (**a8 ^ v16) + (v23 ^ v24 ^ (v16 - 236) ^ *(_DWORD *)(a14 + v25));
  *(_DWORD *)(a14 + v25) = (v26 + v20 - (v18 & (2 * v26))) ^ v15;
  v28 = a1 + 1 < v21 && a1 + 1 >= a6;
  return (*(uint64_t (**)(void))(v14 + 8 * ((62 * v28) ^ v23)))();
}

uint64_t sub_18FE7C29C@<X0>(int a1@<W3>, int a2@<W6>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  _BOOL4 v7;

  v5 = ((a3 + 342) ^ a2) + v4;
  v7 = v5 < 1012312816 && v5 >= a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v7 * (a3 - 126)) ^ a3)) - 8))();
}

void sub_18FE7C370()
{
  JUMPOUT(0x18FE7C18CLL);
}

void sub_18FE7C380(uint64_t a1, int a2)
{
  _DWORD *v2;

  *v2 = a2;
}

void sub_18FE7C5F4(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 - 1759421093 * (((_DWORD)a1 + 1083783468 - 2 * (a1 & 0x4099392C)) ^ 0xF3E48978);
  __asm { BR              X12 }
}

uint64_t sub_18FE7C700()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  unsigned int v4;

  if (v2 < 0)
    v2 = -v2;
  if (v1 >= 0)
    v4 = v1;
  else
    v4 = -v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v0 - 598) * (v2 > v4)) | v0)) - 4))();
}

uint64_t sub_18FE7C734()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 > 0x82) * ((v0 ^ 0x1AD) - 841)) ^ (v0 - 355))) - 4))();
}

void sub_18FE7C760(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + a1) = 1903378044;
}

void sub_18FE7D614(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_18FE7D668@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  unsigned int v4;

  *(_DWORD *)(*(_QWORD *)(a2 + 96) + 24) = v3;
  v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) - 2133710122) & 0xE1711A8C) + 824287921;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8
                                                     * ((442
                                                       * (((2 * v4) & 0xFFDFBD5E ^ 0xE151180C)
                                                        + (v4 ^ 0xF5753E9)
                                                        - 1770066432 != 376360111)) ^ 0x696u))
                                         - 4))(0);
}

uint64_t sub_18FE7D700(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((115 * ((a3 + v4 - 2146426543) > 7)) ^ 0x5B2u)) - 4))();
}

uint64_t sub_18FE7D76C(unsigned int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((849 * ((((a1 + 292) ^ ((unint64_t)(v2 - v3 - 4) < 0x20)) & 1) == 0)) ^ a1))
                            - 4))();
}

uint64_t sub_18FE7D7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((((a8 - 720) | 0x150) - 1327) * (v10 < 0x20)) ^ a8))
                            + v9
                            - ((a8 + 135368118) | 0x82224842)))();
}

uint64_t sub_18FE7D7FC@<X0>(int a1@<W2>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v8 = v7 + a1 + a3;
  v9 = v5 + v8;
  v10 = *(_OWORD *)(v9 - 31);
  v11 = a4 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((413 * ((v6 & 0xFFFFFFE0) == 32)) ^ (a2 + 1976313239)))
                            - ((a2 + 1976313760) ^ 0x466)))();
}

void sub_18FE7D860()
{
  JUMPOUT(0x18FE7D820);
}

uint64_t sub_18FE7D86C(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8
                                                     * (((((v4 - 1126770367) & 0x432927FE) - 1424) * (v3 != a2)) ^ v4))
                                         - 12))(0);
}

uint64_t sub_18FE7D8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  char v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((955 * ((v8 & 0x18) == ((((a7 + 466410889) & 0xE4331EEC) + 818) ^ 0x556))) ^ a7))
                            - 12))();
}

uint64_t sub_18FE7D8F4@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;

  *(_QWORD *)(a4 - 7 + v9 + a3 + v7 - a2 + ((162 * (a1 ^ 0x55F)) ^ (v6 + 914))) = *(_QWORD *)(v5 - 7 + v9 + a3 + v7 - a2 + ((162 * (a1 ^ 0x55F)) ^ (v6 + 914)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((816 * (a2 - (v8 & 0xFFFFFFF8) == -8)) ^ a1)) - 8))();
}

void sub_18FE7D95C()
{
  JUMPOUT(0x18FE7D92CLL);
}

uint64_t sub_18FE7D968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  int v10;
  int v11;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v7 + 8 * (((v10 ^ 0x696) * (v11 == a7)) ^ v10))
                                         - (v10 ^ v8 ^ v9)))(0);
}

uint64_t sub_18FE7D9AC@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  *(_BYTE *)(a3 + (a1 + v8)) = *(_BYTE *)(v6 + (a1 + v8));
  return ((uint64_t (*)(_QWORD))(v7
                                         - ((a2 - 937138789) & 0x37DB99FF ^ (v5 + 1013))
                                         + *(_QWORD *)(v3
                                                     + 8 * ((923 * (a1 - 1 != v4)) ^ (a2 - 937138789) & 0x37DB99FFu))
                                         - 4))(0);
}

uint64_t sub_18FE7DA0C(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v1 = 1759421093 * ((2 * (a1 & 0x6BD6573D) - a1 - 1809209150) ^ 0x27541896);
  v2 = *(_DWORD *)(a1 + 8) - v1;
  v3 = *(_DWORD *)(a1 + 12) - v1 - 162566800;
  v4 = v3 + (*(_DWORD *)(*(_QWORD *)a1 - 0x1A8FA111108FB2DELL) ^ 0x6D2D51C1);
  v5 = v4 - ((2 * v4) & 0xDA5AA382) + 1831686593;
  *(_DWORD *)(*(_QWORD *)a1 - 0x1A8FA111108FB2DELL) = v5;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E2ABD050 + (v2 ^ 0x5DD)) + ((983 * ((v5 ^ 0x6D2D51C1) < v3)) ^ v2) - 1)
                            - 12))();
}

void sub_18FE7DAD8(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x1A8FA111108FB2E2) = (*(_DWORD *)(a1 - 0x1A8FA111108FB2E2) ^ 0x59B893DE)
                                         + 1505268702
                                         - ((2 * (*(_DWORD *)(a1 - 0x1A8FA111108FB2E2) ^ 0x59B893DE) + 2) & 0xB37127BC)
                                         + 1;
}

void sub_18FE7DB20(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8) + 1374699841 * (((a1 | 0x3B067EF8) - (a1 & 0x3B067EF8)) ^ 0x56F266F1);
  v2 = *(_QWORD *)a1;
  ((void (*)(char *, void (*)()))*(&off_1E2ABD050 + v1 - 1063))((char *)*(&off_1E2ABD050 + v1 - 1237) - 12, sub_18FE97F80);
  __asm { BR              X10 }
}

uint64_t sub_18FE7DBCC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((**(_QWORD **)(v1 + 8 * (v2 - 1207)) == 0) * (((v2 - 775) | 0x410) - 761)) ^ v2))
                            - 12))();
}

uint64_t sub_18FE7DC14@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x69D)))(v1);
}

void sub_18FE7DC34(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_18FE7DC9C()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1973 * (v1 != 1066855061)) ^ 0x3D9u)) - 8))();
}

uint64_t sub_18FE7DCD0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;

  v4 = v1 - (**(_BYTE **)(v3 + 8) == 0);
  *(_DWORD *)(*(_QWORD *)(v2 + 96) + 528) = 294122765;
  *(_DWORD *)(*(_QWORD *)(v2 + 96) + 532) = 1903378044;
  *(_QWORD *)(*(_QWORD *)(v2 + 96) + 536) = *(_QWORD *)(v2 + 96) + 544;
  v5 = *(_QWORD *)(v2 + 96) + 0xFB9CCB0B87C58ACLL;
  v6 = *(_QWORD *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  v12 = 460628867 * (((~&v9 & 0x34F71EA) - (~&v9 | 0x34F71EB)) ^ 0x4FD9F396)
      + 597
      + v4
      - 877870341;
  v10 = 460628867 * (((~&v9 & 0x34F71EA) - (~&v9 | 0x34F71EB)) ^ 0x4FD9F396) + 1497;
  v11 = v5;
  v9 = v6;
  ((void (*)(uint64_t *))(*(_QWORD *)(a1 + 968) - 12))(&v9);
  v7 = v13;
  *(_QWORD *)(*(_QWORD *)(v2 + 96) + 512) = *(_QWORD *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  return v7 ^ 0x35D89556u;
}

void sub_18FE7DE18(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 24) + 235795823 * (a1 ^ 0x94AD4959);
  __asm { BR              X14 }
}

uint64_t sub_18FE7DF28@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;

  v16 = v13 > 0x55603D1D;
  *(_DWORD *)(a11 + 4 * (v11 + a1)) = *(_DWORD *)(*(_QWORD *)(v14 - 0xFB9CCB0B87C5694) + 4 * (v11 + a1));
  if (v16 == v11 + 497412445 < -1432370462)
    v16 = v11 + 497412445 < (int)(v13 + 715113186);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * (v16 | v12))
                                                            - ((v12 + 1336865825) & 0xB05109FF)
                                                            + 477))(2958100991, 497412445, 2862596834);
}

uint64_t sub_18FE7DFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = v8 + 659021682 < (int)(a8 + 876722424);
  if (a8 > ((v9 + 716) ^ 0x4BBE43B6u) != v8 + 659021682 < -1270761224)
    v11 = a8 > ((v9 + 716) ^ 0x4BBE43B6u);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((996 * v11) ^ v9)) - 8))();
}

uint64_t sub_18FE7E05C@<X0>(int a1@<W3>, unsigned int a2@<W7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  _BOOL4 v20;
  int v21;
  int v22;
  _BOOL4 v23;

  v20 = a2 > v18;
  *(_DWORD *)(a13 + 4 * (v13 + a3)) = a1;
  v21 = v13 + 1 + v16;
  v22 = v20 ^ (v21 < v15);
  v23 = v21 < v17;
  if (!v22)
    v20 = v23;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((v20 * ((v14 ^ 0x554) - 205)) ^ v14)) - 8))();
}

uint64_t sub_18FE7E0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * (int)(((((v6 - 688) | 0x84)
                                                                                                  + ((v6 + 131448862) & 0xF82A3FF2)
                                                                                                  - 1500)
                                                                                                 * (v5 != 0)) ^ v6))
                                                                              - 4))(a1, a2, a3, a4, a5);
}

uint64_t sub_18FE7E108@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;

  v14 = a1 ^ 0x73;
  v15 = a1 ^ 0x4E7;
  v16 = (*(_DWORD *)(*(_QWORD *)(a6 + 8) - 0x21738119BF0B616CLL) - 665975502)
      * (*(_DWORD *)(a12 + 4 * (int)((a1 ^ 0xBF47D764) + 1085811802)) ^ 0x5EF0E4F3);
  v17 = 1755732067 * ((((2 * (v13 - 128)) | 0x5A1DD69A) - (v13 - 128) + 1391531187) ^ 0x73C85696);
  *(_QWORD *)(v13 - 112) = a7;
  *(_DWORD *)(v13 - 104) = (v16 ^ 0x699BBFA5) - v17 + ((2 * v16) & 0xD3377F4A) - 546868352;
  *(_QWORD *)(v13 - 128) = a8;
  *(_DWORD *)(v13 - 120) = v14 - v17 - 194;
  *(_DWORD *)(v13 - 116) = v17 ^ 0x71733E7C;
  v18 = ((uint64_t (*)(uint64_t))*(&off_1E2ABD050 + v15))(v13 - 128);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12 + 8 * ((115 * (a5 - 1540057857 > -1540057856)) ^ v14))
                                          - 4))(v18);
}

void sub_18FE7E26C()
{
  JUMPOUT(0x18FE7E164);
}

uint64_t sub_18FE7E274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, int a11, int a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;

  v17 = 535753261 * ((((v16 - 128) | 0xCAD74967) + (~(v16 - 128) | 0x3528B698)) ^ 0xC0234749);
  *(_QWORD *)(v16 - 128) = a14;
  *(_DWORD *)(v16 - 120) = v15 - v17 + 860;
  *(_DWORD *)(v16 - 116) = v17
                         + ((a12 << 6) & 0xFD77BF80)
                         + ((a12 << ((((v15 + 63) | 0x1A) - 68) ^ 0x9F)) ^ 0xFEBBDFCC)
                         + 1877801984;
  sub_18FE80D20(v16 - 128);
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((31 * ((*a10 - 1903378045) > 0x7FFFFFFE)) ^ v15))
                            - 4))();
}

uint64_t sub_18FE7E350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v17 - 128) = &STACK[0xFB9CCB0B87C56CC];
  *(_QWORD *)(v17 - 120) = a14;
  *(_DWORD *)(v17 - 112) = v15
                         - 1759421093
                         * ((((v17 - 128) ^ 0xC19341CD) - 470279805 - 2 * (((v17 - 128) ^ 0xC19341CD) & 0xE3F81983)) ^ 0x9116E81A)
                         + 603;
  sub_18FE643E0(v17 - 128);
  *(_QWORD *)(v17 - 128) = v16;
  *(_QWORD *)(v17 - 112) = a14;
  *(_DWORD *)(v17 - 104) = (v15 + 514) ^ (1374699841
                                        * ((((v17 - 128) | 0x76922E07) - ((v17 - 128) & 0x76922E07)) ^ 0x1B66360E));
  v18 = ((uint64_t (*)(uint64_t))*(&off_1E2ABD050 + (v15 ^ 0x21E)))(v17 - 128);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14
                                                      + 8
                                                      * ((1990 * (*(_DWORD *)(v17 - 120) > ((v15 - 188) ^ 0x1285357Du))) ^ v15))
                                          - ((2 * v15) ^ 0x658u)
                                          + 872))(v18);
}

uint64_t sub_18FE7E478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  uint64_t v18;
  int v19;
  int v20;

  v20 = a18 - 1903378044;
  if (a18 - 1903378044 < 0)
    v20 = 1903378044 - a18;
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((61
                                * ((int)((v20 ^ (v19 - 295391)) + ((2 * v20) & 0xFFF6FFFE) + 294912) > (int)(((v19 - 410) | 0x380) ^ (v19 + 972360736) & 0xC60AF3DF ^ 0xFFFFFDE5))) ^ (v19 + 236))))();
}

uint64_t sub_18FE7E504()
{
  uint64_t v0;
  int v1;
  unsigned int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v1 + 518092044) & 0xE11E8BDF ^ 0x1DE) * (*(_DWORD *)(v0 + 4 * v2) != v3)) ^ v1)))();
}

uint64_t sub_18FE7E544()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((61
                                * (v0 + 294911 > (int)(((v1 - 646) | 0x380) ^ (v1 + 972360500) & 0xC60AF3DF ^ 0xFFFFFDE5))) ^ v1)))();
}

uint64_t sub_18FE7E594()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(v5 + 16);
  *(_DWORD *)(v2 - 112) = v0 - 1759421093 * ((v2 + 1112093847 - 2 * ((v2 - 128) & 0x42493517)) ^ 0xF1348543) + 305;
  *(_QWORD *)(v2 - 128) = v3;
  *(_QWORD *)(v2 - 120) = v1;
  return sub_18FE643E0(v2 - 128);
}

void sub_18FE7E96C(uint64_t a1)
{
  unint64_t v2;
  void (*v3)(char *, void (*)());
  char v4;

  v2 = (unint64_t)&v4 ^ qword_1EE1C1E18 ^ qword_1EE1C2010;
  qword_1EE1C1E18 = 1209664481 * v2 + 0x5A53928AE3C855CELL;
  qword_1EE1C2010 = 1209664481 * (v2 ^ 0x2DEB88543200F8ELL);
  v3 = (void (*)(char *, void (*)()))*(&off_1E2ABD050
                                                + ((-31
                                                                                 * ((-31 * v2 - 50) ^ 0x8E ^ qword_1EE1C2010)) ^ byte_190447800[byte_190452FA0[(-31 * ((-31 * v2 - 50) ^ 0x8E ^ qword_1EE1C2010))] ^ 0xC0])
                                                + 10);
  LOBYTE(v2) = -31 * ((qword_1EE1C2010 - (-31 * v2 - 50)) ^ 0x8E);
  v3((char *)*(&off_1E2ABD050 + (v2 ^ byte_19044B570[byte_190447600[v2] ^ 0xAA]) - 43)- 12, sub_18FE97F80);
  __asm { BR              X10 }
}

uint64_t sub_18FE7EA8C@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1 + 8 * ((535 * (**(_QWORD **)(v2 + 640) != 0)) ^ a1)))();
}

uint64_t sub_18FE7EAB0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x11Fu)))(v1);
}

uint64_t sub_18FE7EAE0(uint64_t result)
{
  uint64_t v1;
  __int16 v2;
  unsigned int v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 8);
  v2 = *(_DWORD *)(result + 16) - 3243 * (((result ^ 0xC815 | 0xC663) - ((result ^ 0xC815) & 0xC663)) ^ 0xFD20);
  v3 = (((2 * (v2 & 0x1FF ^ 0xD3)) | 0xA08DEA5E) - (v2 & 0x1FF ^ 0xD3) - 1346827567) ^ 0xF042361F;
  *(_DWORD *)(v1 - 0x1A8FA111108FB2C2) = (v3 - ((2 * v3) & 0xC0427A22) - 534692591) ^ 0x7B9710B6;
  *(_QWORD *)(v1 - 0x1A8FA111108FB2E2) = 0x6D2D51C159B893DELL;
  *(_DWORD *)(v1 - 0x1A8FA111108FB2C6) = 1531185819;
  v4 = v2 ^ 0x27;
  if (v4 == 1)
  {
    v5 = 1531185835;
    goto LABEL_5;
  }
  if (v4 == 2)
  {
    *(_DWORD *)(v1 - 0x1A8FA111108FB2CALL) = -534993640;
    v5 = 1531185839;
LABEL_5:
    *(_QWORD *)(v1 - 0x1A8FA111108FB2DALL) = 0xCC03EF61448B67E9;
    *(_QWORD *)(v1 - 0x1A8FA111108FB2D2) = 0x33FC109EBB749816;
    *(_DWORD *)(v1 - 0x1A8FA111108FB2C6) = v5;
  }
  *(_DWORD *)(result + 4) = 860795972;
  return result;
}

void sub_18FE7EC7C(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  int v5;
  unint64_t *v6;
  unsigned int v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  v3 = 3804331 * (&v5 ^ 0xFA9EF356);
  v5 = v3 ^ 0x45E0925B;
  v6 = &STACK[0x1A8FA111108FB556];
  v7 = v3 + 432186149;
  sub_18FE7EAE0((uint64_t)&v5);
  __asm { BR              X9 }
}

uint64_t sub_18FE7EDF8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;

  v5 = v1 + 269566235;
  if (v5 <= 0x40)
    v5 = 64;
  v6 = v4 - v2 - v0 + v5 < 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((4 * v6) | (16 * v6)) ^ 0x42Cu)) - 4))();
}

uint64_t sub_18FE7EE68(int a1)
{
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;

  v7 = v1 + v2;
  v8 = v3 + v7 + 282;
  if (v8 <= 0x40)
    v8 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((753 * (v6 - v7 >= a1 + v8)) ^ 0x438)) - 4))();
}

uint64_t sub_18FE7EEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (((a14 + v17 - 220 + (unint64_t)(v14 + 281) < ((v15 - 2088072645) & 0x151E ^ 0x10AuLL))
                                * ((v15 - 156) ^ 0x117)) | v15)))();
}

uint64_t sub_18FE7EF18@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int8x16_t *v6;
  uint64_t v7;
  int8x16_t v8;
  int8x16_t v9;

  v8.i64[0] = 0xEEEEEEEEEEEEEEEELL;
  v8.i64[1] = 0xEEEEEEEEEEEEEEEELL;
  v9.i64[0] = 0xF7F7F7F7F7F7F7F7;
  v9.i64[1] = 0xF7F7F7F7F7F7F7F7;
  *(int8x16_t *)(v4 + (a1 + v5 + v1)) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v8)), v9);
  return ((uint64_t (*)(int8x16_t *))(*(_QWORD *)(v7 + 8
                                                               * ((1050 * (((v3 + 1) & 0x1FFFFFFF0) == 16)) | v2))
                                              - 8))(&v6[1]);
}

void sub_18FE7EF78()
{
  JUMPOUT(0x18FE7EF44);
}

uint64_t sub_18FE7EF84()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v0 + 788) ^ (413 * (v1 == v2))))
                            - 2 * ((v0 - 1340331946) & 0x4FE3D79F ^ 0x11Fu)
                            + 6))();
}

uint64_t sub_18FE7EFD8@<X0>(int a1@<W2>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v7 - 220 + (v2 + a2 + 448)) = *(_BYTE *)((v4 - 272) + v3 + v5 - 1263233878)
                                                       - ((2
                                                         * *(_BYTE *)((v4 - 272) + v3 + v5 - 1263233878)) & 0xEF)
                                                       - 9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((7 * ((a1 + a2 + 1) > 0x3F)) ^ v4)))();
}

uint64_t sub_18FE7F040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int32x4_t a29,int32x4_t a30,int32x4_t a31,int32x4_t a32)
{
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(__n128, __n128, __n128, __n128, __n128);
  const char *v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  uint64_t v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  int v53;
  uint8x16_t v54;
  uint16x8_t v55;
  int8x16_t v56;
  int8x16_t v57;
  uint16x8_t v58;
  int8x16_t v59;
  int8x16_t v60;
  uint8x16_t v61;
  uint16x8_t v62;
  uint16x8_t v63;
  uint8x16_t v64;
  int8x16_t v67;
  int8x16_t v72;
  int32x4_t v73;
  int32x4_t v74;
  int32x4_t v75;
  int32x4_t v76;
  uint64_t v78;
  uint8x16_t v79;
  uint16x8_t v80;
  uint16x8_t v81;
  uint8x16_t v82;
  uint8x16_t v87;
  uint16x8_t v88;
  uint16x8_t v89;
  int32x4_t v90;
  int32x4_t v91;
  int32x4_t v92;
  int32x4_t v93;
  _DWORD *v94;
  int v95;
  uint64_t v96;
  int v97;
  int v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  int8x16x4_t v105;
  int8x16x4_t v106;

  v41 = (uint64_t (*)(__n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v34 + 8 * v32) - 4);
  v42 = (const char *)(v40 - 220);
  v43 = (__n128)vdupq_n_s32(0x1AA260B3u);
  v44.n128_u64[0] = 0xF7F7F7F7F7F7F7F7;
  v44.n128_u64[1] = 0xF7F7F7F7F7F7F7F7;
  v45 = (__n128)vdupq_n_s32(0x1AA260A0u);
  HIDWORD(v102) = -38338838;
  v46.n128_u64[0] = 0xEEEEEEEEEEEEEEEELL;
  v46.n128_u64[1] = 0xEEEEEEEEEEEEEEEELL;
  v47 = (__n128)vdupq_n_s32(0x1AA260A9u);
  v48 = *(unsigned int *)(v40 - 148);
  v49 = *(_DWORD *)(v40 - 144);
  HIDWORD(a21) = *(_DWORD *)(v40 - 148);
  v51 = *(_DWORD *)(v40 - 140);
  v50 = *(_DWORD *)(v40 - 136);
  v52 = v50;
  v53 = *(_BYTE *)(v40 - 124) ^ 0x63;
  LODWORD(v102) = *(unsigned __int8 *)(v40 - 124) ^ 0x63;
  if (v53 == 2)
  {
    HIDWORD(v103) = v49;
    v104 = __PAIR64__(v50, v51);
    v106 = vld4q_s8(v42);
    v78 = a8 ^ ((_DWORD)a8 + 526);
    HIDWORD(a16) = *(_DWORD *)(v40 - 132);
    v79 = (uint8x16_t)veorq_s8(v106.val[0], (int8x16_t)v44);
    v80 = vmovl_u8(*(uint8x8_t *)v79.i8);
    v81 = vmovl_high_u8(v79);
    v82 = (uint8x16_t)veorq_s8(v106.val[1], (int8x16_t)v44);
    _Q22 = vmovl_u8(*(uint8x8_t *)v82.i8);
    _Q21 = vmovl_high_u8(v82);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v87 = (uint8x16_t)veorq_s8(v106.val[2], (int8x16_t)v44);
    v88 = vmovl_high_u8(v87);
    v89 = vmovl_u8(*(uint8x8_t *)v87.i8);
    v106.val[0] = veorq_s8(v106.val[3], (int8x16_t)v44);
    v106.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v106.val[0]);
    v106.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v106.val[1]);
    v106.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v106.val[1].i8);
    v106.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v106.val[0].i8);
    v106.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v106.val[0]);
    v106.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v106.val[0].i8);
    v90 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v89.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v80.i8), 0x18uLL)), v106.val[0]);
    v91 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v89, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v80), 0x18uLL)), v106.val[3]);
    v92 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v88.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v81.i8), 0x18uLL)), v106.val[1]);
    v93 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v88, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v81), 0x18uLL)), v106.val[2]);
    v106.val[0] = veorq_s8(vandq_s8((int8x16_t)v90, (int8x16_t)v43), (int8x16_t)(*(_OWORD *)v106.val & __PAIR128__(0xFFFFFF13FFFFFF13, 0xFFFFFF13FFFFFF13)));
    v106.val[3] = veorq_s8(vandq_s8((int8x16_t)v91, (int8x16_t)v43), (int8x16_t)(*(_OWORD *)&v106.val[3] & __PAIR128__(0xFFFFFF13FFFFFF13, 0xFFFFFF13FFFFFF13)));
    v106.val[1] = veorq_s8(vandq_s8((int8x16_t)v92, (int8x16_t)v43), (int8x16_t)(*(_OWORD *)&v106.val[1] & __PAIR128__(0xFFFFFF13FFFFFF13, 0xFFFFFF13FFFFFF13)));
    v106.val[2] = veorq_s8(vandq_s8((int8x16_t)v93, (int8x16_t)v43), (int8x16_t)(*(_OWORD *)&v106.val[2] & __PAIR128__(0xFFFFFF13FFFFFF13, 0xFFFFFF13FFFFFF13)));
    a31 = vaddq_s32(vsubq_s32(v92, vaddq_s32((int32x4_t)v106.val[1], (int32x4_t)v106.val[1])), (int32x4_t)v45);
    a32 = vaddq_s32(vsubq_s32(v93, vaddq_s32((int32x4_t)v106.val[2], (int32x4_t)v106.val[2])), (int32x4_t)v45);
    a29 = vaddq_s32(vsubq_s32(v90, vaddq_s32((int32x4_t)v106.val[0], (int32x4_t)v106.val[0])), (int32x4_t)v45);
    a30 = vaddq_s32(vsubq_s32(v91, vaddq_s32((int32x4_t)v106.val[3], (int32x4_t)v106.val[3])), (int32x4_t)v45);
    v94 = (_DWORD *)&a29 + v37 + 1021916706;
    v95 = *(v94 - 8) ^ *(v94 - 3);
    v96 = *(v94 - 16);
    v97 = v96 ^ *(v94 - 14) ^ (v36 + v95 - ((v78 ^ 0x3544C352) & (2 * v95)));
    HIDWORD(v99) = v97 ^ v36;
    LODWORD(v99) = v97;
    v98 = v99 >> 31;
    v100 = (2 * v98) & 0x3544C140;
    *v94 = v98 + v36 - v100;
    v101 = *(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * (int)((60 * (v39 == 1021916643)) ^ v78));
    LODWORD(v103) = HIDWORD(a13) - 607927384;
    return v101(v78, v101, v78 ^ 0x3C, v100, v96, v48, v52, a8, a9, a10, a11, a12, a13, a14, v33, a16, v102, v103, v104,
             v41,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
  else if (v53 == 1)
  {
    v105 = vld4q_s8(v42);
    v54 = (uint8x16_t)veorq_s8(v105.val[0], (int8x16_t)v44);
    v55 = vmovl_u8(*(uint8x8_t *)v54.i8);
    v56 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v55.i8);
    v57 = (int8x16_t)vmovl_high_u16(v55);
    v58 = vmovl_high_u8(v54);
    v59 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v58.i8);
    v60 = (int8x16_t)vmovl_high_u16(v58);
    v61 = (uint8x16_t)veorq_s8(v105.val[1], (int8x16_t)v44);
    v62 = vmovl_high_u8(v61);
    v63 = vmovl_u8(*(uint8x8_t *)v61.i8);
    v64 = (uint8x16_t)veorq_s8(v105.val[2], (int8x16_t)v44);
    _Q26 = (int8x16_t)vmovl_high_u8(v64);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v64.i8);
    v67 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    v72 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    v105.val[0] = veorq_s8(v105.val[3], (int8x16_t)v44);
    v105.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v105.val[0]);
    v105.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v105.val[1]);
    v105.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v105.val[0].i8);
    v105.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v105.val[0]);
    v105.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v105.val[0].i8), 0x18uLL), v67), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v63.i8, 8uLL), v56));
    v105.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v105.val[3], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v63, 8uLL), v57));
    v105.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v105.val[1].i8), 0x18uLL), v72), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v62.i8, 8uLL), v59));
    v105.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v105.val[2], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v62, 8uLL), v60));
    v73 = (int32x4_t)veorq_s8(vandq_s8(v105.val[0], (int8x16_t)v47), (int8x16_t)(*(_OWORD *)&v56 & __PAIR128__(0xFFFFFF09FFFFFF09, 0xFFFFFF09FFFFFF09)));
    v74 = (int32x4_t)veorq_s8(vandq_s8(v105.val[3], (int8x16_t)v47), (int8x16_t)(*(_OWORD *)&v57 & __PAIR128__(0xFFFFFF09FFFFFF09, 0xFFFFFF09FFFFFF09)));
    v75 = (int32x4_t)veorq_s8(vandq_s8(v105.val[1], (int8x16_t)v47), (int8x16_t)(*(_OWORD *)&v59 & __PAIR128__(0xFFFFFF09FFFFFF09, 0xFFFFFF09FFFFFF09)));
    v76 = (int32x4_t)veorq_s8(vandq_s8(v105.val[2], (int8x16_t)v47), (int8x16_t)(*(_OWORD *)&v60 & __PAIR128__(0xFFFFFF09FFFFFF09, 0xFFFFFF09FFFFFF09)));
    a31 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[1], vaddq_s32(v75, v75)), (int32x4_t)v45);
    a32 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[2], vaddq_s32(v76, v76)), (int32x4_t)v45);
    a29 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[0], vaddq_s32(v73, v73)), (int32x4_t)v45);
    a30 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[3], vaddq_s32(v74, v74)), (int32x4_t)v45);
    return (*(uint64_t (**)(__n128))(v34 + 8 * (int)(a8 ^ (a8 + 523))))(v43);
  }
  else
  {
    *(_DWORD *)(v40 - 148) = (v48 ^ v35)
                           + (HIDWORD(a21) ^ v35)
                           + v35
                           - (v38 & (2 * ((v48 ^ v35) + (HIDWORD(a21) ^ v35))));
    *(_DWORD *)(v40 - 144) = 2 * (v49 ^ v35) + v35 - (v38 & (4 * (v49 ^ v35)));
    *(_DWORD *)(v40 - 140) = 2 * (v51 ^ v35) + v35 - (v38 & (4 * (v51 ^ v35)));
    *(_DWORD *)(v40 - 136) = 2 * (v50 ^ v35) + v35 - (v38 & (4 * (v50 ^ v35)));
    return v41(v43, v44, v45, v46, v47);
  }
}

uint64_t sub_18FE7FBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, unsigned int a18)
{
  uint64_t v18;
  int v19;
  _BOOL4 v20;

  if (a18 < 0x1C744DDF != (a15 - 785849645) < 0x1C744DDF)
    v20 = (a15 - 785849645) < 0x1C744DDF;
  else
    v20 = a15 - 785849645 > a18;
  return (*(uint64_t (**)(void))(v18 + 8 * ((231 * !v20) ^ (v19 + a8 - 988))))();
}

uint64_t sub_18FE7FC60(uint64_t a1, int a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v18;
  uint64_t v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(v19
                                        + 8 * ((565 * (a2 + v18 + 63 >= (a18 & 0x6521DDDF ^ 0xD194487E) + v18)) ^ a3))
                            - 4))();
}

uint64_t sub_18FE7FCAC(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v16
                                        + 8
                                        * (((((a14 + v15 - (unint64_t)(v14 + a2) < 0x10) ^ (a3 - v17 - 1)) & 1)
                                          * ((a3 - v17 - 196) ^ (a8 + 44))) ^ a3))
                            - 4))();
}

uint64_t sub_18FE7FCF8@<X0>(int a1@<W1>, unint64_t a2@<X3>, int a3@<W4>, int a4@<W7>, int a5@<W8>, int8x16_t a6@<Q1>, int8x16_t a7@<Q3>)
{
  int v7;
  int8x16_t *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  *v8 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v9 + (v7 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(v9 + (v7 + a1)), *(int8x16_t *)(v9 + (v7 + a1))), a7)), a6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8 * (((((a5 - a4 + 57) ^ a2) != 64) * a3) ^ (v11 + a5 - 338)))
                            - 8))();
}

uint64_t sub_18FE7FD58@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  *(_BYTE *)(v3 + v5) = *(_BYTE *)(v6 + (v2 + a1))
                      - ((v8 + a2 - 108) & (2 * *(_BYTE *)(v6 + (v2 + a1))))
                      - 9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v5 == 63) * v4) ^ (v8 + a2 - 350))) - 8))();
}

uint64_t sub_18FE7FDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  _BOOL4 v18;

  v17 = a14 + v15 + 1935651505;
  v18 = v14 + 1757730452 < v17;
  if (v17 < 0xB41041E0 != (v14 + 1757730452) < 0xB41041E0)
    v18 = v17 < 0xB41041E0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((485 * !v18) ^ v15)) - 8))();
}

uint64_t sub_18FE7FE14(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v20;

  v20 = (a3 - 818737714) & 0x30CCF65B;
  v16 = 1759421093 * ((v15 - 120) ^ 0xB37DB054);
  *(_DWORD *)(v15 - 112) = v16 + a3 + 1477;
  *(_DWORD *)(v15 - 108) = v16 + a14 - 922744743;
  *(_QWORD *)(v15 - 120) = a11;
  v17 = sub_18FE7DA0C(v15 - 120);
  v18 = *(_DWORD *)(v15 - 152) & 0x3F;
  *(_BYTE *)(v15 - 220 + (v18 ^ 1)) = 119;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14
                                                      + 8 * ((1841 * ((v18 ^ 1) > v20 - 1059)) ^ a3))
                                          - 12))(v17);
}

uint64_t sub_18FE7FEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v8 == (v11 ^ (a8 + 43))) * (v9 - 912)) ^ v9)) - 12))();
}

uint64_t sub_18FE7FF28()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  v3 = v1 - 813;
  v4 = ((v3 - 239) ^ v0) < (v3 ^ 0xAu) - 287;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((4 * v4) | (16 * v4)) ^ v3)) - 12))();
}

uint64_t sub_18FE7FF68()
{
  char v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)((v2 + 18) + (unint64_t)v1 + v4 - 220 - 312) = 0xF7F7F7F7F7F7F7F7;
  return (*(uint64_t (**)(void))(v3 + 8 * (((4 * ((v0 & 0x38) == 8)) | (8 * ((v0 & 0x38) == 8))) ^ v2)))();
}

uint64_t sub_18FE7FFAC(double a1)
{
  double *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *v1 = a1;
  return (*(uint64_t (**)(void))(v4 + 8 * (((4 * (v3 == 0)) | (8 * (v3 == 0))) ^ v2)))();
}

uint64_t sub_18FE7FFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * (int)((((v9 + 2008538805) & 0xED68FCDB ^ (a8 - 871)) * (v10 == v8)) ^ v9))
                            - ((v9 - v12 + 801) ^ 0x6520DCC6)))();
}

void sub_18FE80020()
{
  JUMPOUT(0x18FE7F048);
}

uint64_t sub_18FE80030@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  unsigned int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  unsigned int v12;
  int v13;
  _BOOL4 v14;

  v11 = v3 < v7;
  *(_BYTE *)(v10 - 220 + (a3 - 1649320678)) = *(_BYTE *)(v8 + (v4 + a2))
                                                          - ((2 * *(_BYTE *)(v8 + (v4 + a2))) & 0xEF)
                                                          - 9;
  v12 = v4 + 1 + a1;
  v13 = v11 ^ (v12 < v7);
  v14 = v12 < v3;
  if (!v13)
    v11 = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((!v11 * v5) ^ v6)) - 8))();
}

uint64_t sub_18FE800B4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * ((((a1 - 1772733382) < 0x38) | (16 * ((a1 - 1772733382) < 0x38))) ^ (v3 + v2 - 307)))
                                          - ((v3 + v2 - 70) ^ 0x418)))(-1772733382);
}

uint64_t sub_18FE80100@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = a2;
  v5 = (((v2 - 396) | 0x114u) ^ (unint64_t)(a1 + 877)) + a2;
  if (v5 <= 0x38)
    v5 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((158 * (v5 - v4 + (v2 - 607) + 1772732945 < 8)) ^ v2))
                            - 12))();
}

uint64_t sub_18FE80164(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 220 + v3 + a1) = 0xF7F7F7F7F7F7F7F7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1289 * ((v2 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ v1))
                            - (v1 + 370)
                            + 795))();
}

uint64_t sub_18FE801AC(double a1)
{
  int v1;
  uint64_t v2;
  double *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *v3 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 == 0) * v4) ^ v1)) - v2 + 795))();
}

uint64_t sub_18FE801D4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1965 * (((v0 == v1) ^ (v2 + 118)) & 1)) ^ v2))
                            - (((v2 + 1629493531) | 0x400C088u) ^ v3)))();
}

uint64_t sub_18FE80220@<X0>(uint64_t a1@<X0>, int a2@<W7>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v6 - 220 + a3 + a1) = -9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((187
                                          * (a3 + 1 + a1 < (((v3 - 630) | 0x201) ^ (a2 + 803) ^ (unint64_t)(v4 + 44)))) ^ ((v3 - 630) | 0x201)))
                            - 12))();
}

void sub_18FE80274()
{
  JUMPOUT(0x18FE80238);
}

void sub_18FE8027C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unint64_t v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unint64_t v17;

  v9 = *(unsigned __int8 *)(v8 - 124) ^ 0x63;
  if (v9 == 1)
  {
    v15 = *(_DWORD *)(v8 - 156);
    v14 = *(_DWORD *)(v8 - 152);
    *(_BYTE *)(v8 - 164) = ((8 * v14) ^ 8) + 2 * (((8 * v14) ^ 8 | 0xF7) ^ (8 * v14)) - 7;
    v16 = (v14 >> ((a8 - 76) & 0xAF ^ 0x2B)) ^ 0xFFFFFF8E;
    *(_BYTE *)(v8 - 163) = v16 + (~(2 * v16) | 0x11) - 8;
    *(_BYTE *)(v8 - 162) = ((v14 >> 13) ^ 0x6A) - ((2 * ((v14 >> 13) ^ 0x6A)) & 0xEF) - 9;
    *(_BYTE *)(v8 - 161) = ((v14 >> 21) ^ 0x69) - ((2 * ((v14 >> 21) ^ 0x69)) & 0xEF) - 9;
    HIDWORD(v17) = v15 ^ 0x1E;
    LODWORD(v17) = v14 ^ 0x60000000;
    *(_BYTE *)(v8 - 160) = (v17 >> 29) - ((2 * (v17 >> 29)) & 0xEF) - 9;
    *(_BYTE *)(v8 - 159) = ((v15 >> 5) ^ 0x9E) + ((2 * (((v15 >> 5) ^ 0x9E | 0xF7) ^ (v15 >> 5))) ^ 0x2D) - 8;
    *(_BYTE *)(v8 - 158) = ((v15 >> 13) ^ 0xC4) - ((2 * ((v15 >> 13) ^ 0xC4)) & 0xEF) - 9;
    v13 = ((v15 >> 21) ^ 0xFFFFFFCD) + (~(2 * ((v15 >> 21) ^ 0xFFFFFFCD)) | 0x11) - 8;
  }
  else
  {
    if (v9 != 2)
      goto LABEL_6;
    v10 = *(_DWORD *)(v8 - 156);
    v11 = *(_DWORD *)(v8 - 152);
    *(_BYTE *)(v8 - 164) = ((v10 >> 21) ^ 0xCD)
                         + (a8 ^ (a8 + 26) ^ (2 * (((v10 >> 21) ^ 0xCD | 0x77) ^ (v10 >> 21))) ^ 0xA5)
                         - 8;
    *(_BYTE *)(v8 - 163) = ((v10 >> 13) ^ 0xC4) + ((v10 >> 12) & 0xEE ^ 0x77) - 8;
    *(_BYTE *)(v8 - 162) = ((v10 >> 5) ^ 0x9E) + ((2 * (((v10 >> 5) ^ 0x9E | 0xF7) ^ (v10 >> 5))) ^ 0x2D) - 8;
    HIDWORD(v12) = v10 ^ 0x1E;
    LODWORD(v12) = v11 ^ 0x60000000;
    *(_BYTE *)(v8 - 161) = (v12 >> 29) - ((2 * (v12 >> 29)) & 0xEF) - 9;
    *(_BYTE *)(v8 - 160) = ((v11 >> 21) ^ 0x69) - ((2 * ((v11 >> 21) ^ 0x69)) & 0xEF) - 9;
    *(_BYTE *)(v8 - 159) = ((v11 >> 13) ^ 0x6A) - ((2 * ((v11 >> 13) ^ 0x6A)) & 0xEF) - 9;
    *(_BYTE *)(v8 - 158) = ((v11 >> 5) ^ 0x8E) + ((2 * (((v11 >> 5) ^ 0x8E | 0xF7) ^ (v11 >> 5))) ^ 0xD) - 8;
    v13 = ((8 * v11) ^ 8) - 32 * (v11 >> 1) - 9;
  }
  *(_BYTE *)(v8 - 157) = v13;
LABEL_6:
  JUMPOUT(0x18FE7F048);
}

uint64_t sub_18FE80724@<X0>(uint64_t a1@<X5>, char a2@<W7>, int a3@<W8>)
{
  unsigned int v3;
  unsigned int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  _BOOL4 v12;
  _BOOL4 v13;

  v10 = *(_DWORD *)(v8 - 220 + 4 * ((v6 + a3) >> (v9 + (v4 ^ (a2 - 3)) - 88)) + 72);
  *(_BYTE *)(a1 + (v6 + a3 + 2)) = (BYTE1(v10) ^ 0x44) + ((v10 >> 7) & 0xEE ^ 0x77) - 8;
  *(_BYTE *)(a1 + (v6 + a3)) = (HIBYTE(v10) ^ 0x23) - ((2 * (HIBYTE(v10) ^ 0x23)) & 0xEF) - 9;
  *(_BYTE *)(a1 + (v6 + a3 + 1)) = (BYTE2(v10) ^ 0xCE) + (~(2 * (BYTE2(v10) ^ 0xCE)) | 0x11) - 8;
  *(_BYTE *)(a1 + (v6 + a3 + 3)) = v10 ^ 0x1F;
  v11 = *(_DWORD *)(v8 - 128) - 1619441895;
  v12 = v11 < v3;
  v13 = v6 - 104023847 < v11;
  if (v6 - 104023847 < v3 != v12)
    v13 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((!v13 * v5) ^ v4)) - 8))();
}

void sub_18FE808D4()
{
  JUMPOUT(0x18FE808A4);
}

uint64_t sub_18FE808E8()
{
  return 0;
}

void sub_18FE80928(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;

  v1 = 1374699841 * (((a1 | 0xB24FA6E) - (a1 & 0xB24FA6E)) ^ 0x66D0E267);
  v2 = *a1 - v1;
  __asm { BR              X14 }
}

uint64_t sub_18FE809EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v7;
  uint64_t v8;
  unsigned int v9;

  v5 = 3804331 * ((2 * (&v7 & 0x4AB2D828) - &v7 - 1253234729) ^ 0x4FD3D481);
  v8 = v1;
  v9 = (v2 - ((((v3 - 644770857) & 0x266E6F9B ^ 0x476C678B) + v4) & 0x98A999CC) + 1879768370) ^ v5;
  v7 = v3 - v5 - 533;
  return (*(uint64_t (**)(int *))(a1 + 8 * (v3 - 917)))(&v7);
}

void sub_18FE80B4C(uint64_t a1)
{
  unint64_t v2;
  void (*v3)(char *, void (*)());
  _BYTE v4[8];

  v2 = (unint64_t)&v4[qword_1EE1C2010 ^ qword_1EE1C2018];
  qword_1EE1C2018 = 1209664481 * v2 - 0x2DEB88543200F8ELL;
  qword_1EE1C2010 = 1209664481 * (v2 ^ 0x2DEB88543200F8ELL);
  v3 = (void (*)(char *, void (*)()))*(&off_1E2ABD050
                                                + ((-31
                                                                                 * ((-31 * v2 + 114) ^ 0x8E ^ qword_1EE1C2010)) ^ byte_19044B670[byte_190447700[(-31 * ((-31 * v2 + 114) ^ 0x8E ^ qword_1EE1C2010))] ^ 0xF7])
                                                + 139);
  LOBYTE(v2) = -31 * ((qword_1EE1C2010 + -31 * v2 + 114) ^ 0x8E);
  v3((char *)*(&off_1E2ABD050 + (v2 ^ byte_190447900[byte_1904531A0[v2] ^ 0x54]) - 172)- 12, sub_18FE97F80);
  __asm { BR              X9 }
}

uint64_t sub_18FE80C70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((31 * (**(_QWORD **)(v1 + 640) != 0)) ^ 0x2C5u)) - 12))();
}

uint64_t sub_18FE80C9C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + 1608))(v0);
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_18FE80D00@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(void))(a1 + 208))();
  return 0;
}

uint64_t sub_18FE80D14()
{
  return 4294925273;
}

void sub_18FE80D20(uint64_t a1)
{
  int v1;

  v1 = 535753261 * (((a1 | 0x81A8D923) - (a1 & 0x81A8D923)) ^ 0x8B5CD70C);
  __asm { BR              X12 }
}

uint64_t sub_18FE80DC8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v6;
  uint64_t v7;
  int v8;

  v4 = 1224239923 * (((&v6 | 0x6E0F63C0) - (&v6 & 0x6E0F63C0)) ^ 0x9CBC9E17);
  v8 = v3 + v4 + 2089500289 + ~(2 * (((v1 - 263101827) & 0xFAE9DED ^ 0x5E2) & v3 ^ (v3 + 290923572) & 0x6B341A4F));
  v7 = v2;
  v6 = v1 - v4 - 217;
  return (*(uint64_t (**)(int *))(a1 + 8 * (v1 ^ 0x53D)))(&v6);
}

void sub_18FE80F40(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BR              X13 }
}

uint64_t sub_18FE81044()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((255
                                * (((v0 - 1) ^ ((v1 ^ (v0 - 1161) ^ 0x4B017FBE)
                                                               - 1091308132
                                                               + ((2 * v1) & 0xDADEDFBE ^ 0x48DC0310) == 744711547)) & 1)) ^ v0)))();
}

uint64_t sub_18FE810B4@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((1296 * (v2 + a1 + (((v1 - 832) | 0x40) ^ 0x92909353) > 7)) ^ ((v1 - 832) | 0x40)))
                            - 8))();
}

uint64_t sub_18FE8112C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8 * ((1954 * ((a8 & 0xFFFFFFF0) == ((a5 - 858) | 0x404) + 1836018628)) ^ a5))
                            - ((a5 - 858) ^ 0x356u)
                            + 838))();
}

uint64_t sub_18FE81178@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BOOL4 v20;

  v10 = (v7 + a3 + a1);
  v11 = v10 + v3;
  v12 = v10 + v9;
  v13 = (v7 + a3) & 0xF;
  v14 = v13 - v12;
  v15 = (v4 | v13) - v12;
  v16 = (v6 | v13) - v12;
  v20 = (unint64_t)(v11 - v12) < 0x10
     || v14 + v5 < (unint64_t)((2 * a2) ^ 0x280u) - 1036
     || (unint64_t)(v15 + 3) < 0x10
     || v16 < 0x10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v20 * (((a2 - 773) | 0x602) - 1551)) ^ a2)) - 8))();
}

uint64_t sub_18FE811F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((35 * (v8 >= ((a8 - 1323) | 0x85u) - 405)) ^ a8)) - 8))();
}

uint64_t sub_18FE81228(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int8x16_t v63;
  uint64_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int8x16x4_t v68;
  int8x16x4_t v69;

  *(_DWORD *)(v62 - 120) = a3 + 8;
  v68.val[1].i64[0] = ((_BYTE)a3 + 7) & 0xF;
  v68.val[1].i64[1] = ((_BYTE)a3 + 6) & 0xF;
  v68.val[2].i64[0] = ((_BYTE)a3 + 5) & 0xF;
  v68.val[2].i64[1] = ((_BYTE)a3 + 4) & 0xF;
  v68.val[3].i64[0] = ((_BYTE)a3 + 3) & 0xF;
  v68.val[3].i64[1] = ((_BYTE)a3 + 2) & 0xF;
  v63.i64[0] = 0x7373737373737373;
  v63.i64[1] = 0x7373737373737373;
  v64 = (a3 + v57);
  v68.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)v57) & 0xF;
  v68.val[0].i64[1] = *(_DWORD *)(v62 - 120) & 0xF;
  v65.i64[0] = vqtbl4q_s8(v68, (int8x16_t)xmmword_190443D40).u64[0];
  v69.val[0].i64[1] = a3 & 0xF;
  v69.val[1].i64[1] = ((_BYTE)a3 + 14) & 0xF;
  v69.val[2].i64[1] = ((_BYTE)a3 + 12) & 0xF;
  v69.val[3].i64[1] = ((_BYTE)a3 + 10) & 0xF;
  v69.val[0].i64[0] = ((_BYTE)a3 + 1) & 0xF;
  v69.val[1].i64[0] = ((_BYTE)a3 - 1) & 0xF;
  v69.val[2].i64[0] = ((_BYTE)a3 + 13) & 0xF;
  v69.val[3].i64[0] = ((_BYTE)a3 + 11) & 0xF;
  v65.i64[1] = vqtbl4q_s8(v69, (int8x16_t)xmmword_190443D40).u64[0];
  v66 = vrev64q_s8(vmulq_s8(v65, v63));
  *(int8x16_t *)(a54 - 15 + v64) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v59 + (v64 & 0xF) - 15), *(int8x16_t *)(v56 - 15 + v64)), veorq_s8(*(int8x16_t *)((v64 & 0xF) + v58 - 12), *(int8x16_t *)(v60 + (v64 & 0xF) - 15))), vextq_s8(v66, v66, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a56 + 8
                                              * ((23 * (((a8 - 1197) ^ 0x18E) == (v61 & 0xFFFFFFF0))) ^ (a8 - 713)))
                            - 12))();
}

uint64_t sub_18FE81394()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((707 * ((v1 ^ ((v0 - 117) | 0xC0) ^ 0x266E1061) != 0)) ^ v0))
                            - 12))();
}

uint64_t sub_18FE813E0()
{
  uint64_t v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;

  v10 = (v6 - 1747324538);
  v11 = ((v1 + 1296764509) & 0xB2B4F1ED ^ 0x1E6) & v10;
  *(_BYTE *)(v9 + v10) = *(_BYTE *)(*(_QWORD *)(v7 + 8 * (v1 - 401)) + v11) ^ *(_BYTE *)(v0 + v10) ^ *(_BYTE *)(*(_QWORD *)(v7 + 8 * (v1 - 278)) + v11 - 12) ^ (23 * v11) ^ *(_BYTE *)(*(_QWORD *)(v7 + 8 * (v1 ^ 0x1F2)) + v11 - 11);
  v12 = v6 - 1063720171 < v4;
  if (v3 > 0xD7410671 != v6 - 1063720171 < v2)
    v12 = v3 > 0xD7410671;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v12 * v5) ^ v1)) - 12))();
}

uint64_t sub_18FE814B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((((v7 == a5) ^ (-93 * (a7 ^ 0x9D))) & 1) * (a7 - 356)) ^ a7))
                            - 12))();
}

uint64_t sub_18FE814F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  char v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8 * ((((((a7 + 1097) ^ 0x442) + 631) ^ 0x7F4) * ((v7 & 8) == 0)) ^ (a7 + 1097))))();
}

uint64_t sub_18FE81524@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W4>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  char v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  int v62;
  int v63;
  char v64;
  uint64_t v65;
  int8x16x4_t v67;

  *(_DWORD *)(v59 - 136) = v56;
  v61 = v56 & 0xFFFFFFF8;
  *(_QWORD *)(v59 - 128) = v60 - 7;
  *(_QWORD *)(v59 - 120) = v52 - 7;
  *(_DWORD *)(v59 - 140) = v61;
  *(_DWORD *)(v59 - 132) = -v61;
  v62 = -8 - a3;
  v63 = v58 + a4;
  v64 = v58 + a4 + v57;
  v65 = (v63 + a1 + v62 + 8);
  v67.val[0].i64[0] = ((_BYTE)v63 + (_BYTE)a1 + (_BYTE)v62 + 8) & 0xF;
  v67.val[0].i64[1] = (v64 + 19 + (_BYTE)v62 + 8) & 0xF;
  v67.val[1].i64[0] = (v64 + 18 + (_BYTE)v62 + 8) & 0xF;
  v67.val[1].i64[1] = (v64 + 17 + (_BYTE)v62 + 8) & 0xF;
  v67.val[2].i64[0] = (v64 + 16 + (_BYTE)v62 + 8) & 0xF;
  v67.val[2].i64[1] = (v64 + (_BYTE)v62 + (a2 ^ 0xAA) + 8) & 0xF;
  v67.val[3].i64[0] = (v64 + 14 + (_BYTE)v62 + 8) & 0xF;
  v67.val[3].i64[1] = (v64 + 13 + (_BYTE)v62 + 8) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v59 - 128) + v65) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v54 + (v65 & 0xF) - 7), *(int8x8_t *)(*(_QWORD *)(v59 - 120) + v65)), veor_s8(*(int8x8_t *)((v65 & 0xF) + v53 - 4), *(int8x8_t *)(v55 + (v65 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v67, (int8x16_t)xmmword_190443D50), (int8x8_t)0x7373737373737373)));
  return (*(uint64_t (**)(__n128))(a52 + 8 * ((1516 * (*(_DWORD *)(v59 - 132) == v62)) ^ a2)))((__n128)xmmword_190443D50);
}

void sub_18FE81684()
{
  JUMPOUT(0x18FE81590);
}

uint64_t sub_18FE8168C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;

  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (int)((((v23 + 772728654) & 0xD1F116BE ^ ((v23 ^ 0x7E6) + 632))
                                                   * (*(_DWORD *)(v25 - 136) == *(_DWORD *)(v25 - 140))) ^ v23)))(a23);
}

uint64_t sub_18FE816E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)(v14 + (a6 + v9)) = *(_BYTE *)(v11 + ((a6 + v9) & 0xFLL)) ^ *(_BYTE *)(v7
                                                                                               + (a6 + v9)) ^ *(_BYTE *)((((_BYTE)a6 + (_BYTE)v9) & 0xF) + v10 + 3) ^ *(_BYTE *)(v12 + (((_BYTE)a6 + (_BYTE)v9) & 0xF)) ^ (((a6 + v9) & 0xF) * (a7 + 87));
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((1965 * (a6 - 1 != v8)) ^ (a7 - 638))) - 12))();
}

uint64_t sub_18FE81744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  int v54;

  v52 = *(_QWORD *)(a1 + 24);
  *(int8x16_t *)(v50 - 112) = veorq_s8(*(int8x16_t *)(*(_QWORD *)(a1 + 16) - 0x6E9FC7186F6532B7), (int8x16_t)xmmword_190443D70);
  if (v51)
    v53 = v52 == 0x2703C5D33AA4CED5;
  else
    v53 = 1;
  v54 = !v53;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * (int)((1237 * v54) ^ a4)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_18FE817B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  uint64_t v58;
  int v59;
  unsigned int v60;
  _BOOL4 v62;

  v59 = HIDWORD(a24) - ((2 * HIDWORD(a24) + 259784904) & 0x17023A54) - 1824580210;
  v60 = v59 ^ a58 ^ 0xE30FAF93;
  v62 = (((_BYTE)v60
        + ((2 * (BYTE4(a24) - ((2 * BYTE4(a24) - 56) & 0x54) - 114)) & 0xE6 ^ 0x44)
        + ((2 * a4) ^ 0x98)
        - 61) & 0xF) == 0
     && v60 + ((2 * v59) & 0xD11D6FE6 ^ 0x11002A44) != -393299981;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * (int)(((2 * v62) | (16 * v62)) ^ a4)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_18FE81858@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,unsigned __int8 *a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  unsigned __int8 *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  unint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  char v70;
  unsigned int v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  unsigned int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  int v117;
  char *v118;
  char *v119;
  int v120;
  char *v121;
  uint64_t v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  unsigned int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  unsigned int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  int v175;
  char v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  int v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  int v185;
  int v186;
  int v187;
  uint64_t v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  int v193;
  uint64_t v194;
  unsigned int v195;
  int v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  char *v201;
  unint64_t v202;
  char *v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  int v216;
  int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unsigned int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  unsigned int v240;
  int v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  unsigned int v252;
  unsigned int v253;
  int v254;
  int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  int v269;
  int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  int v276;
  int v277;
  unsigned int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  int v286;
  int v287;
  unsigned int v288;
  unsigned int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  char *v316;
  uint64_t v317;
  int v318;
  int v319;
  char *v320;
  int v321;
  char *v322;
  uint64_t v323;
  unsigned int v324;
  int v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  char *v329;
  int v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  int v341;
  uint64_t v342;
  unsigned int v343;
  uint64_t v344;
  unsigned int v345;
  int v346;
  uint64_t v347;
  unsigned int v348;
  unsigned int v349;
  uint64_t v350;
  unsigned int v351;
  int v352;
  uint64_t v353;
  int v354;
  int v355;
  uint64_t v356;
  unsigned int v357;
  unsigned int v358;
  uint64_t v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  int v363;
  uint64_t v364;
  int v365;
  unsigned int v366;
  unsigned int v367;
  int v368;
  uint64_t v369;
  unsigned int v370;
  int v371;
  unsigned __int8 v372;
  int v373;
  int v374;
  uint64_t v375;
  int v376;
  int v377;
  int v378;
  unsigned int v379;
  int v380;
  uint64_t v381;
  int v382;
  int v383;
  unsigned __int8 v384;
  __int16 v385;
  int v386;
  int v387;
  uint64_t v388;
  int v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  uint64_t v393;
  int v394;
  int v395;
  int v396;
  int v397;
  uint64_t v398;
  int v399;
  unsigned int v400;
  int v401;
  uint64_t v402;
  int v403;
  int v404;
  int v405;
  unsigned int v406;
  uint64_t v407;
  unsigned int v408;
  int v409;
  unsigned int v410;
  int v411;
  int v412;
  uint64_t v413;
  int v414;
  int v415;
  int v416;
  int v417;
  unsigned int v418;
  uint64_t v419;
  int v420;
  int v421;
  uint64_t v422;
  int v423;
  int v424;
  unsigned int v425;
  unsigned int v426;
  int v427;
  uint64_t v428;
  unsigned int v429;
  int v430;
  int v431;
  int v432;
  uint64_t v433;
  int v434;
  int v435;
  unsigned int v436;
  unsigned int v437;
  uint64_t v438;
  int v439;
  int v440;
  int v441;
  uint64_t v442;
  int v443;
  int v444;
  int v445;
  unsigned int v446;
  int v447;
  uint64_t v448;
  int v449;
  int v450;
  int v451;
  uint64_t v452;
  int v453;
  int v454;
  int v455;
  uint64_t v456;
  unsigned int v457;
  int v458;
  int v459;
  uint64_t v460;
  int v461;
  int v462;
  unsigned int v463;
  uint64_t v464;
  int v465;
  char *v466;
  int v467;
  char *v468;
  int v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  unsigned int v475;
  uint64_t v476;
  unsigned int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  unsigned int v482;
  int v483;
  int v484;
  int v485;
  unsigned int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  unsigned int v494;

  v54 = ((a1 ^ 0x12E) + 596850230) & 0xDC6CCD1E;
  *(_DWORD *)(v53 - 120) = v54;
  v55 = *(_QWORD *)(v52 + 8 * (a1 ^ 0x19B)) - 12;
  v56 = (*(unsigned __int8 *)(v55 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CED3) ^ 0xD7)) ^ 0xD) << 8;
  v57 = *(_QWORD *)(v52 + 8 * ((a1 ^ 0x12E) - 142)) - 8;
  v58 = *(unsigned __int8 *)(v57 + (*v51 ^ 0xB1));
  *(_DWORD *)(v53 - 208) = a2;
  v59 = (*(_BYTE *)(v50 - 0x2703C5D33AA4CEC8) ^ (v54 + 45));
  v60 = *(_QWORD *)(v52 + 8 * ((a1 ^ 0x12E) - 93)) - 8;
  LODWORD(v59) = *(unsigned __int8 *)(v60 + v59);
  v61 = v56 | ((v58 ^ 0x5B) << 24);
  HIDWORD(v62) = ~(_DWORD)v59;
  LODWORD(v62) = (v59 ^ 0x14) << 24;
  LOBYTE(v58) = v62 >> 26;
  v63 = *(_QWORD *)(v52 + 8 * (a1 ^ 0x1EC));
  v64 = *(unsigned __int8 *)(v57 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CEC9) ^ 0xB8));
  v65 = *(unsigned __int8 *)(v60 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CECCLL) ^ 0x6BLL));
  HIDWORD(v62) = ~v65;
  LODWORD(v62) = (v65 ^ 0x14) << 24;
  v66 = ((v62 >> 26) ^ 0x53) << 16;
  LOBYTE(v59) = *(_BYTE *)(v55 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CEC7) ^ 0x2ELL));
  v67 = *(unsigned __int8 *)(v60 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CED4) ^ 0x47));
  HIDWORD(v62) = ~v67;
  LODWORD(v62) = (v67 ^ 0x14) << 24;
  v68 = v61 & 0xFF00FF00 | (*(_BYTE *)(v63 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CED2) ^ 0xECLL))
                                           + 95) ^ 9 | (((v62 >> 26) ^ 0x1E) << 16);
  v69 = v66 | ((*(unsigned __int8 *)(v55 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CECBLL) ^ 0x77)) ^ 0xC2) << 8);
  LODWORD(v60) = *(unsigned __int8 *)(v60 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CED0) ^ 0xCBLL));
  HIDWORD(v62) = ~(_DWORD)v60;
  LODWORD(v62) = (v60 ^ 0x14) << 24;
  v70 = *(_BYTE *)(v63 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CEC6) ^ 0x36));
  LOBYTE(v60) = *(_BYTE *)(v63 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CECALL) ^ 0xB5));
  v71 = ((v58 ^ 0xFB) << 16) | ((v64 ^ 0xFFFFFFE3) << 24) | ((v59 ^ 0xC8) << 8);
  LODWORD(v55) = ((*(_BYTE *)(v63 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CECELL) ^ 0xA9)) + 95) | ((*(unsigned __int8 *)(v55 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CECFLL) ^ 0x30)) ^ 0x38) << 8)) & 0xFF00FFFF | (((v62 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v57 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CED1) ^ 0x35)) ^ 0x94) << 24);
  v72 = *(_QWORD *)(v52 + 8 * (a1 ^ 0x1C6)) - 8;
  v73 = v69 | ((*(unsigned __int8 *)(v57 + (*(unsigned __int8 *)(v50 - 0x2703C5D33AA4CECDLL) ^ 0xBFLL)) ^ 0x8D) << 24);
  v74 = v58 ^ 0x61u;
  v75 = *(_QWORD *)(v52 + 8 * ((a1 ^ 0x12E) - 178)) - 4;
  LODWORD(v74) = *(_DWORD *)(v72 + 4 * ((v70 + 95) ^ 0xFDu)) ^ 0xE96BD683 ^ *(_DWORD *)(v75 + 4 * v74);
  *(_DWORD *)(v53 - 152) = a1 ^ 0x12E;
  v76 = *(_QWORD *)(v52 + 8 * (a1 ^ 0x151)) - 12;
  LODWORD(v74) = (v74 - ((2 * v74) & 0x2DFBBBBA) - 1761747491) ^ *(_DWORD *)(v76 + 4 * (v64 ^ 0x76u));
  v77 = v74 - ((2 * v74) & 0xC392E110);
  v78 = *(_QWORD *)(v52 + 8 * (a1 ^ 0x15A));
  HIDWORD(v474) = v68;
  LODWORD(v63) = *(_DWORD *)(v78 + 4 * (v59 ^ 0xF0u)) ^ v68 ^ (v77 - 506892152);
  LODWORD(v474) = v71 & 0xFFFFFF00 | (v70 + 95) ^ 0x2A;
  LOBYTE(v65) = (v60 + 95) ^ 0xA8;
  v79 = v73 & 0xFFFFFF00 | v65;
  HIDWORD(v473) = v55;
  v80 = v63 ^ v55;
  LODWORD(v60) = v63;
  v389 = v63;
  LODWORD(v55) = v63 ^ v55 ^ 0x4D;
  LODWORD(v63) = v80;
  *(_DWORD *)(v53 - 176) = v80;
  *(_DWORD *)(v53 - 128) = v55 ^ v79;
  v372 = v55;
  LODWORD(v59) = v55 ^ v79 ^ (v474 - 2 * (v474 & 0x58F62DBD ^ ((v70 + 95) ^ 0x2A) & 8) - 654955083);
  v405 = ((unsigned __int16)(v55 ^ v79 ^ (v474
                                                         - 2
                                                         * (v474 & 0x2DBD ^ ((v70 + 95) ^ 0x2A) & 8)
                                                         + 11701)) >> 8);
  v396 = BYTE2(v59);
  v81 = *(_DWORD *)(v78 + 4 * (v405 ^ 0xD7u)) ^ *(_DWORD *)(v75 + 4 * (BYTE2(v59) ^ 0x48u)) ^ 0xD5113B10;
  v82 = (v81 - ((2 * v81) & 0xBB673A36) - 575431397) ^ *(_DWORD *)(v72 + 4 * (v59 ^ 0x9Cu));
  v400 = (v59 ^ 0x6201001C) >> 24;
  v403 = v59;
  v83 = v60 ^ *(_DWORD *)(v76 + 4 * (v400 ^ 0x65)) ^ (v82 - ((2 * v82) & 0x2DFBBBBA) - 1761747491);
  LODWORD(v473) = v79;
  *(_DWORD *)(v53 - 168) = v83;
  v84 = v83 ^ 0x98F94B13 ^ (v79 - 2 * (v79 & 0x18F94B1F ^ v65 & 0xC) - 1728492781);
  v85 = v84 ^ v59 ^ 0x6201001C;
  *(_DWORD *)(v53 - 160) = v84;
  v420 = BYTE2(v85);
  v416 = BYTE1(v85);
  v86 = *(_DWORD *)(v78 + 4 * (BYTE1(v85) ^ 0x9Bu)) ^ *(_DWORD *)(v75 + 4 * (BYTE2(v85) ^ 0x2Eu));
  v492 = (v84 ^ v59 ^ 0x1C);
  v87 = ((v86 ^ 0xD5113B10) - 2 * ((v86 ^ 0xD5113B10) & 0x5DB39D1F ^ v86 & 4) - 575431397) ^ *(_DWORD *)(v72 + 4 * (v492 ^ 0xD2u));
  v88 = v85 ^ 0xDA3EB887;
  *(_DWORD *)(v53 - 216) = HIBYTE(v85);
  v89 = (v87 - ((2 * v87) & 0x2DFBBBBA) - 1761747491) ^ *(_DWORD *)(v76 + 4 * (HIBYTE(v85) ^ 0x69));
  v90 = v89 ^ v55 ^ 0xF4301839;
  v440 = v89 ^ v55;
  v443 = v90 ^ v84;
  v91 = ((v443 ^ 0x6EB615D3) - ((2 * (v443 ^ 0x6EB615D3)) & 0x5D32339C) - 1365698098) ^ v85 ^ 0xDA3EB887;
  v453 = ((v91 ^ 0x9547167F) >> 16);
  v462 = ((unsigned __int16)(v91 ^ 0x167F) >> 8);
  LODWORD(v55) = *(_DWORD *)(v78 + 4 * (v462 ^ 0x3Au)) ^ *(_DWORD *)(v75 + 4 * (v453 ^ 0x89u));
  LODWORD(v55) = ((v55 ^ 0xD5113B10) - 2 * ((v55 ^ 0xD5113B10) & 0x5DB39D1F ^ v55 & 4) - 575431397) ^ *(_DWORD *)(v72 + 4 * (v91 ^ 0xE4u));
  v475 = (v91 ^ 0x9547167F) >> 24;
  LODWORD(v55) = (v55 - ((2 * v55) & 0x2DFBBBBA) - 1761747491) ^ *(_DWORD *)(v76 + 4 * (v475 ^ 0x1D));
  v425 = v89 ^ v83;
  v488 = (v55 - 627668298 + (~(2 * v55) | 0x4AD2EA93) + 1) ^ v89 ^ v83;
  *(_DWORD *)(v53 - 248) = v488 ^ 0xDA968AB6;
  v486 = v488 ^ 0xDA968AB6 ^ v440;
  v92 = ((v486 ^ 0xFE25CD6D) - ((2 * (v486 ^ 0xFE25CD6D)) & 0x5D32339C) - 1365698098) ^ v88;
  LODWORD(v60) = ((unsigned __int16)(((v486 ^ 0xCD6D) - ((2 * (v486 ^ 0xCD6D)) & 0x339C) + 6606) ^ v88) >> 8);
  *(_DWORD *)(v53 - 224) = v60;
  v93 = *(_DWORD *)(v78 + 4 * (v60 ^ 0x6F));
  *(_DWORD *)(v53 - 232) = BYTE2(v92);
  v94 = (v63 ^ 0xBAF72DE4) - ((2 * (v63 ^ 0xBAF72DE4)) & 0x31F29626);
  LODWORD(v55) = *(_DWORD *)(v75 + 4 * (BYTE2(v92) ^ 0xA8u)) ^ v93;
  v482 = HIBYTE(v92);
  LODWORD(v55) = ((v55 ^ 0xD5113B10) - 2 * ((v55 ^ 0xD5113B10) & 0x16FDDDDF ^ v55 & 2) - 1761747491) ^ *(_DWORD *)(v76 + 4 * (HIBYTE(v92) ^ 0x85));
  LODWORD(v55) = (v55 - ((2 * v55) & 0xBB673A36) - 575431397) ^ *(_DWORD *)(v72
                                                                          + 4
                                                                          * ((((v486 ^ 0x6D)
                                                                                              - ((2 * (v486 ^ 0x6D)) & 0x9C)
                                                                                              - 50) ^ v88) ^ 0x25u));
  LODWORD(v63) = (v55 - ((2 * v55) & 0x9D8E6B20) + 1321678224) ^ v90;
  v480 = v486 ^ v90 ^ v84;
  v361 = v63 ^ v480;
  *(_DWORD *)(v53 - 184) = v63;
  v95 = v92 ^ v63 ^ v480 ^ 0xE6BCFEC;
  v391 = (v95 ^ 0x77A96D3Cu) >> 24;
  v378 = ((v95 ^ 0x77A96D3Cu) >> 16);
  v96 = *(_DWORD *)(v75 + 4 * (v378 ^ 0x89u)) ^ *(_DWORD *)(v76 + 4 * (v391 ^ 0x1D));
  LODWORD(v60) = ((unsigned __int16)(v95 ^ 0x6D3C) >> 8);
  *(_DWORD *)(v53 - 256) = v60;
  v97 = ((v96 ^ 0xA2259645) - 2 * ((v96 ^ 0xA2259645) & 0x61C97098 ^ v96 & 0x10) - 506892152) ^ *(_DWORD *)(v78 + 4 * (v60 ^ 0x3A));
  v469 = (v92 ^ v63 ^ v480 ^ 0xEC);
  v98 = *(_DWORD *)(v72 + 4 * (v469 ^ 0xA7u));
  *(_DWORD *)(v53 - 192) = v488 ^ 0xDA968AB6 ^ v55;
  v384 = BYTE2(v63) ^ 0x16;
  v99 = v488 ^ 0xDA968AB6 ^ v55 ^ v98 ^ (v97 - ((2 * v97) & 0xBB673A36) - 575431397) ^ v63 ^ 0x7C166C11;
  v100 = v488 ^ 0xDA968AB6 ^ v55 ^ v98 ^ (v97 - ((2 * v97) & 0xBB673A36) - 575431397);
  v449 = v100;
  LODWORD(v60) = (v99 ^ v92) >> 24;
  *(_DWORD *)(v53 - 240) = v60;
  v101 = *(_DWORD *)(v76 + 4 * (v60 ^ 0x9B));
  v458 = v488 ^ 0xB6 ^ v55 ^ v98 ^ (v97 - ((2 * v97) & 0x36) + 27) ^ v63 ^ 0x11 ^ v92;
  v102 = *(_DWORD *)(v72 + 4 * (v458 ^ 0x31u));
  v410 = v83 ^ 0x98F94B13 ^ (v94 - 1728492781);
  v436 = ((v99 ^ v92) >> 8) ^ 0x86839A;
  v103 = ((v101 ^ v102 ^ 0x4B4E40C6) - ((2 * (v101 ^ v102 ^ 0x4B4E40C6)) & 0xC392E110) - 506892152) ^ *(_DWORD *)(v78 + 4 * (((unsigned __int16)(v99 ^ ((v486 ^ 0xCD6D) - ((2 * (v486 ^ 0xCD6D)) & 0x339C) + 6606) ^ v88) >> 8) ^ 0xA0u));
  v104 = v103 - ((2 * v103) & 0x69B09730);
  v105 = v99 ^ v92 ^ 0xAD2F3EA2;
  v431 = ((v99 ^ v92) >> 16);
  LODWORD(v55) = (v104 + 886590360) ^ *(_DWORD *)(v75 + 4 * (v431 ^ 0xAu));
  LODWORD(v60) = (v55 - ((2 * v55) & 0xF32D5132) - 107566951) ^ v100;
  *(_DWORD *)(v53 - 132) = v60;
  v106 = v60 ^ 0x4153233 ^ v99;
  v107 = v60 ^ 0x4153233;
  v385 = v60 ^ 0x3233;
  v446 = v99 ^ v63 ^ v480 ^ 0xE6BCFEC;
  *(_DWORD *)(v53 - 140) = v446 ^ 0x6DB6A2F2;
  LODWORD(v60) = ((v106 ^ 0x5A137D54) - ((2 * (v106 ^ 0x5A137D54)) & 0x44FFD93E) + 578808991) ^ v446 ^ 0x6DB6A2F2;
  *(_DWORD *)(v53 - 136) = v60;
  v108 = v60 ^ 0xFC31204B;
  v109 = ((v60 ^ 0x7BAEF84B) - 2 * ((v60 ^ 0xFC31204B) & 7 ^ (v60 ^ 0x7BAEF84B) & 0x2BACA40F) + 732734472) ^ v105 ^ 0x479AB031;
  v467 = (((v60 ^ 0x4B) - 2 * ((v60 ^ 0x4B) & 7 ^ (v60 ^ 0x4B) & 0xF) + 8) ^ v105);
  v490 = ((unsigned __int16)(((v60 ^ 0xF84B)
                                             - 2 * ((v60 ^ 0x204B) & 7 ^ (v60 ^ 0xF84B) & 0xA40F)
                                             - 23544) ^ v105 ^ 0xB031) >> 8);
  LODWORD(v55) = *(_DWORD *)(v78 + 4 * (v490 ^ 0x3Au)) ^ *(_DWORD *)(v72 + 4 * (v467 ^ 0xAAu)) ^ 0x3C7AED93;
  LODWORD(v55) = (v55 - ((2 * v55) & 0x69B09730) + 886590360) ^ *(_DWORD *)(v75 + 4 * (BYTE2(v109) ^ 0x89u));
  LODWORD(v55) = (v55 - ((2 * v55) & 0x2DFBBBBA) - 1761747491) ^ *(_DWORD *)(v76 + 4 * (HIBYTE(v109) ^ 0x1D));
  v110 = v55 ^ v99;
  v111 = ((v55 ^ v99 ^ 0xA6C48CD5) - ((2 * (v55 ^ v99 ^ 0xA6C48CD5)) & 0x57594810) + 732734472) ^ v105;
  v112 = HIBYTE(v111);
  v113 = BYTE1(v111);
  LODWORD(v60) = *(_DWORD *)(v76 + 4 * (HIBYTE(v111) ^ 5)) ^ *(_DWORD *)(v78 + 4 * (BYTE1(v111) ^ 0x6Fu)) ^ 0x7734AD55;
  v450 = v111;
  LODWORD(v60) = (v60 - ((2 * v60) & 0xBB673A36) - 575431397) ^ *(_DWORD *)(v72 + 4 * (v111 ^ 0x25u));
  v114 = v107 ^ v55;
  v115 = v107 ^ v55 ^ *(_DWORD *)(v75 + 4 * (BYTE2(v111) ^ 0xA8u)) ^ (v60 - ((2 * v60) & 0x69B09730) + 886590360);
  LODWORD(v55) = v108 ^ v115 ^ v111;
  *(_DWORD *)(v53 - 200) = v108 ^ v115;
  v478 = BYTE1(v55);
  v357 = BYTE3(v55);
  LODWORD(v76) = *(_DWORD *)(v78 + 4 * (BYTE1(v55) ^ 0x44u)) ^ *(_DWORD *)(v76 + 4 * (BYTE3(v55) ^ 0x47));
  v365 = (v108 ^ v115 ^ v111);
  v116 = ((v76 ^ 0x7734AD55) - ((2 * (v76 ^ 0x7734AD55)) & 0xBB673A36) - 575431397) ^ *(_DWORD *)(v72
                                                                                                + 4 * (v365 ^ 0xD5u));
  v354 = BYTE2(v55);
  v117 = (v116 - ((2 * v116) & 0x69B09730) + 886590360) ^ *(_DWORD *)(v75 + 4 * (BYTE2(v55) ^ 0xCBu));
  HIDWORD(v472) = v115 ^ 0x95D59D40 ^ (v117 - ((2 * v117) & 0x2A4561D2) + 354595049);
  LODWORD(v472) = v115 ^ v110 ^ 0x53AD75AE ^ (HIDWORD(v472) - ((2 * HIDWORD(v472)) & 0xEE1F7574) + 1997519546);
  HIDWORD(v471) = v108 ^ v115 ^ 0x4018996 ^ v472;
  LODWORD(v471) = (HIDWORD(v471) - ((2 * HIDWORD(v471)) & 0x5E9F76FE) + 793754495) ^ v55;
  LODWORD(v78) = *(_DWORD *)(v53 - 152);
  v118 = (char *)*(&off_1E2ABD050 + (int)v78 - 24) - 8;
  LODWORD(v55) = (((v114 ^ 0x1B9155BDu) >> 16)
                - 1760114544
                + ((2 * ((v114 ^ 0x1B9155BDu) >> 16) + 88) & 0xC6 ^ 0xFF7F6BFF)) ^ *(_DWORD *)&v118[4 * (((v114 ^ 0x1B9155BDu) >> 16) ^ 0x2D)];
  LODWORD(v76) = ((BYTE2(v111) ^ 0x89) - 1760114544 + ((2 * (BYTE2(v111) ^ 0x89) + 88) & 0xC6 ^ 0xFF7F6BFF)) ^ *(_DWORD *)&v118[4 * (BYTE2(v111) ^ 0xA4)];
  v119 = (char *)*(&off_1E2ABD050 + (int)(v78 ^ 0xE1)) - 4;
  v120 = (v55 - ((2 * v55) & 0x4404AF56) - 1576904789) ^ *(_DWORD *)&v119[4 * (BYTE1(v114) ^ 0x47)];
  LODWORD(v55) = v76 - ((2 * v76) & 0xA7400726);
  v121 = (char *)*(&off_1E2ABD050 + (int)v78 - 34) - 12;
  LODWORD(v63) = (v55 - 744488045) ^ *(_DWORD *)&v121[4 * (v112 ^ 0xCC)];
  v122 = (uint64_t)*(&off_1E2ABD050 + (int)v78 + 9);
  v123 = *(_DWORD *)(v122 + 4 * ((v108 ^ v110) ^ 0x53u));
  LODWORD(v55) = *(_DWORD *)&v118[4 * (((v108 ^ v110) >> 16) ^ 0xAA)] ^ *(_DWORD *)&v121[4 * (((v108 ^ v110) >> 24) ^ 0x3E)] ^ ((((v108 ^ v110) >> 16) ^ 0x87) - 1760114544 + ((2 * (((v108 ^ v110) >> 16) ^ 0x87) + 88) & 0xC6 ^ 0xFF7F6BFF)) ^ (181304767 * v123 - ((362609534 * v123 + 1023997812) & 0xA7400726) + 1914994509);
  v457 = v110;
  v124 = *(_DWORD *)(v122 + 4 * (v110 ^ 0x74u));
  LODWORD(v59) = (181304767 * v124 - ((362609534 * v124 + 1023997812) & 0x4404AF56) + 1082577765) ^ *(_DWORD *)&v119[4 * (BYTE1(v110) ^ 0x5A)];
  v465 = v59 - ((2 * v59) & 0xA7400726);
  v423 = BYTE2(v110);
  v477 = (BYTE2(v110) ^ 0x4C) - 1760114544 + ((2 * (BYTE2(v110) ^ 0x4C) + 88) & 0xC6 ^ 0xFF7F6BFF);
  v429 = v113 ^ 0xB0;
  v455 = v63 - 1576904788 + (~(2 * v63) | 0xBBFB50A9);
  v434 = v55 - ((2 * v55) & 0x4404AF56);
  HIDWORD(v476) = (v120 - ((2 * v120) & 0xA7400726) - 744488045) ^ *(_DWORD *)&v121[4 * ((v114 ^ 0x1B9155BDu) >> 24)] ^ (181304767 * *(_DWORD *)(v122 + 4 * (v114 ^ 0x7Du)) - 1635484742);
  LODWORD(v63) = *(_DWORD *)&v118[4 * (((v410 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v410 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                              - 1760114544
                                                                                              + ((2
                                                                                                * (((v410 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                                + 88) & 0xC6 ^ 0xFF7F6BFF));
  LODWORD(v60) = *(_DWORD *)(v53 - 160) ^ 0x31676F78;
  LODWORD(v55) = *(_DWORD *)&v118[4 * (BYTE2(v60) ^ 0x7B)] ^ ((BYTE2(v60) ^ 0x56)
                                                            - 1760114545
                                                            - ((2 * (BYTE2(v60) ^ 0x56) + 9213016) & 0x8094C6));
  LODWORD(v55) = (v55 - ((2 * v55) & 0xA7400726) - 744488045) ^ *(_DWORD *)&v121[4 * BYTE3(v60)];
  LODWORD(v60) = *(_DWORD *)&v118[4 * (v420 ^ 0x34)] ^ ((v420 ^ 0x19)
                                                      - 1760114544
                                                      + ((2 * (v420 ^ 0x19) + 88) & 0xC6 ^ 0xFF7F6BFF));
  LODWORD(v59) = (v60 - 1576904788 + (~(2 * v60) | 0xBBFB50A9)) ^ *(_DWORD *)&v119[4 * (v416 ^ 5)];
  v417 = v55 - ((2 * v55) & 0x4404AF56);
  v421 = v59 - ((2 * v59) & 0xA7400726);
  LODWORD(v55) = *(_DWORD *)(v122 + 4 * (*(_DWORD *)(v53 - 168) ^ 0xDFu));
  LODWORD(v59) = *(_DWORD *)(v53 - 168) ^ 0x5A18571F;
  LODWORD(v55) = *(_DWORD *)&v121[4 * BYTE3(v59)] ^ ((BYTE2(v59) ^ 0xC1)
                                                   - 1760114544
                                                   + ((2 * (BYTE2(v59) ^ 0xC1) + 88) & 0xC6 ^ 0xFF7F6BFF)) ^ *(_DWORD *)&v118[4 * (BYTE2(v59) ^ 0xEC)] ^ (181304767 * v55 - ((362609534 * v55 + 1023997812) & 0xA7400726) + 1914994509);
  v414 = v55 - ((2 * v55) & 0x4404AF56);
  LODWORD(v55) = *(_DWORD *)&v121[4 * ((v410 ^ 0xE9B45E6C) >> 24)] ^ (v63 - ((2 * v63) & 0xA7400726) - 744488045);
  v360 = v410 ^ 0xAC;
  v408 = BYTE1(v410) ^ 0xB4;
  v411 = v55 - ((2 * v55) & 0x4404AF56);
  LODWORD(v55) = *(_DWORD *)&v118[4 * (BYTE2(v109) ^ 0xDE)] ^ ((BYTE2(v109) ^ 0xF3)
                                                             - 1760114544
                                                             + ((2 * (BYTE2(v109) ^ 0xF3) + 88) & 0xC6 ^ 0xFF7F6BFF));
  LODWORD(v59) = *(_DWORD *)&v118[4 * (((v106 ^ 0x35C48CD5u) >> 16) ^ 0xFE)] ^ ((((v106 ^ 0x35C48CD5u) >> 16) ^ 0xD3)
                                                                                               - 1760114544
                                                                                               + ((2
                                                                                                 * (((v106 ^ 0x35C48CD5u) >> 16) ^ 0xD3)
                                                                                                 + 88) & 0xC6 ^ 0xFF7F6BFF));
  LODWORD(v60) = *(_DWORD *)(v122 + 4 * (v108 ^ 0xC5u));
  v125 = v59 - ((2 * v59) & 0xA7400726);
  LODWORD(v55) = (v55 - ((2 * v55) & 0xA7400726) - 744488045) ^ *(_DWORD *)&v121[4 * (HIBYTE(v109) ^ 0x36)];
  LODWORD(v59) = BYTE2(*(_DWORD *)(v53 - 132));
  LODWORD(v59) = *(_DWORD *)&v118[4 * (v59 ^ 0x39)] ^ ((v59 ^ 0x14)
                                                                   - 1760114545
                                                                   - ((2 * (v59 ^ 0x14) + 9213016) & 0x8094C6));
  v126 = (v59 - ((2 * v59) & 0x4404AF56) - 1576904789) ^ *(_DWORD *)&v119[4 * (HIBYTE(v385) ^ 0x8B)];
  v394 = v55 - ((2 * v55) & 0x4404AF56);
  v399 = v126 - ((2 * v126) & 0xA7400726);
  LODWORD(v55) = *(_DWORD *)(v53 - 136) ^ 0x9EAEF84B;
  LODWORD(v55) = *(_DWORD *)&v119[4 * (BYTE1(v55) ^ 0x20)] ^ ((BYTE2(v55) ^ 0xD7)
                                                            - 1760114544
                                                            + ((2 * (BYTE2(v55) ^ 0xD7) + 88) & 0xC6 ^ 0xFF7F6BFF)) ^ *(_DWORD *)&v118[4 * (BYTE2(v55) ^ 0xFA)] ^ (181304767 * v60 - ((362609534 * v60 + 1023997812) & 0x4404AF56) + 1082577765);
  LODWORD(v60) = (v125 - 744488045) ^ *(_DWORD *)&v121[4 * ((v106 ^ 0x35C48CD5u) >> 24)] ^ (181304767
                                                                                          * *(_DWORD *)(v122 + 4 * (v106 ^ 0x3Du))
                                                                                          - 1635484742);
  v367 = ((unsigned __int16)(v106 ^ 0x8EA4) >> 8) ^ 0x14;
  v348 = v385 ^ 0xA3;
  v376 = v60 - ((2 * v60) & 0x4404AF56);
  v386 = v55 - ((2 * v55) & 0xA7400726);
  LODWORD(v78) = *(_DWORD *)(v53 - 128);
  v362 = BYTE1(v78) ^ 0xF5;
  v370 = v389 ^ 0x2BEAE26B;
  LODWORD(v55) = *(_DWORD *)&v118[4 * (((v389 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v389 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                               - 1760114544
                                                                                               + ((2
                                                                                                 * (((v389 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                                 + 88) & 0xC6 ^ 0xFF7F6BFF)) ^ (181304767 * *(_DWORD *)(v122 + 4 * (v389 ^ 0x1Eu)) - 1635484742);
  LODWORD(v55) = (v55 - ((2 * v55) & 0x4404AF56) - 1576904789) ^ *(_DWORD *)&v119[4 * (BYTE1(v389) ^ 8)];
  LODWORD(v60) = *(_DWORD *)&v118[4 * (v396 ^ 0xD6)] ^ ((v396 ^ 0xFB)
                                                      - 1760114544
                                                      + ((2 * (v396 ^ 0xFB) + 88) & 0xC6 ^ 0xFF7F6BFF));
  LODWORD(v63) = *(_DWORD *)(v122 + 4 * (v372 ^ 0x55u));
  v397 = v55 - ((2 * v55) & 0xA7400726);
  v373 = BYTE2(v78);
  v390 = (BYTE2(v78) ^ 0xA7) - 1760114544 + ((2 * (BYTE2(v78) ^ 0xA7) + 88) & 0xC6 ^ 0xFF7F6BFF);
  LODWORD(v55) = (v60 - ((2 * v60) & 0x4404AF56) - 1576904789) ^ *(_DWORD *)&v119[4 * (v405 ^ 0xBD)] ^ (181304767 * *(_DWORD *)(v122 + 4 * (v403 ^ 0xEFu)) - 1635484742);
  v127 = *(_DWORD *)(v53 - 176);
  v404 = v55 - ((2 * v55) & 0xA7400726);
  LODWORD(v55) = (181304767 * v63 - ((362609534 * v63 + 1023997812) & 0xA7400726) + 1914994509) ^ ((BYTE2(v127) ^ 0xBA)
                                                                                                 - 1760114544
                                                                                                 + ((2 * (BYTE2(v127) ^ 0xBA) + 88) & 0xC6 ^ 0xFF7F6BFF)) ^ *(_DWORD *)&v121[4 * (HIBYTE(v127) ^ 0x2F)] ^ *(_DWORD *)&v118[4 * (BYTE2(v127) ^ 0x97)];
  v352 = v55 - ((2 * v55) & 0x4404AF56);
  LODWORD(v55) = *(_DWORD *)&v118[4 * (BYTE2(v361) ^ 0x35)] ^ ((BYTE2(v361) ^ 0x18)
                                                             - 1760114544
                                                             + ((2 * (BYTE2(v361) ^ 0x18) + 88) & 0xC6 ^ 0xFF7F6BFF));
  LODWORD(v63) = *(_DWORD *)&v118[4 * (BYTE2(*(_DWORD *)(v53 - 192)) ^ 0x56)] ^ ((BYTE2(*(_DWORD *)(v53 - 192)) ^ 0x7B)
                                                                                                - 1760114545
                                                                                                - ((2 * (BYTE2(*(_DWORD *)(v53 - 192)) ^ 0x7B)
                                                                                                  + 9213016) & 0x8094C6));
  LODWORD(v55) = (v55 - ((2 * v55) & 0x4404AF56) - 1576904789) ^ *(_DWORD *)&v119[4
                                                                                * (((unsigned __int16)(v361 ^ 0xCFEC) >> 8) ^ 0x2D)] ^ (181304767 * *(_DWORD *)(v122 + 4 * (v361 ^ 0xA3u)) - 1635484742);
  v128 = *(_DWORD *)(v122 + 4 * (*(_DWORD *)(v53 - 184) ^ 0xFBu));
  v129 = (181304767 * v128 - ((362609534 * v128 + 1023997812) & 0x4404AF56) + 1082577765) ^ *(_DWORD *)&v119[4 * (BYTE1(*(_DWORD *)(v53 - 184)) ^ 0xEF)];
  v351 = HIBYTE(v361) ^ 0x36;
  LODWORD(a16) = v55 - ((2 * v55) & 0xA7400726);
  LODWORD(v356) = v129 - ((2 * v129) & 0xA7400726);
  LODWORD(v63) = (v63 - ((2 * v63) & 0xA7400726) - 744488045) ^ *(_DWORD *)&v121[4
                                                                               * (HIBYTE(*(_DWORD *)(v53 - 192)) ^ 0xD9)] ^ (181304767 * *(_DWORD *)(v122 + 4 * (*(_DWORD *)(v53 - 192) ^ 0x79u)) - 1635484742);
  v130 = *(_DWORD *)&v118[4 * (v378 ^ 0x86)] ^ ((v378 ^ 0xAB)
                                              - 1760114544
                                              + ((2 * (v378 ^ 0xAB) + 88) & 0xC6 ^ 0xFF7F6BFF));
  v131 = (v130 - ((2 * v130) & 0xA7400726) - 744488045) ^ *(_DWORD *)&v121[4 * v391];
  v379 = v131 - ((2 * v131) & 0x4404AF56);
  v346 = v63 - ((2 * v63) & 0x4404AF56);
  v382 = v384;
  v406 = (v382 ^ 0x65) - 1760114544 + ((2 * (v382 ^ 0x65) + 88) & 0xC6 ^ 0xFF7F6BFF);
  LODWORD(v59) = *(_DWORD *)&v118[4 * (v354 ^ 0x8B)] ^ ((v354 ^ 0xA6)
                                                      - 1760114544
                                                      + ((2 * (v354 ^ 0xA6) + 88) & 0xC6 ^ 0xFF7F6BFF));
  v355 = BYTE2(*(_DWORD *)(v53 - 200));
  v392 = (v355 ^ 0x8F) - 1760114544 + ((2 * (v355 ^ 0x8F) + 88) & 0xC6 ^ 0xFF7F6BFF);
  LODWORD(v63) = v357 ^ 0x22;
  v132 = *(_DWORD *)&v118[4 * (BYTE2(v115) ^ 0xE8)] ^ ((BYTE2(v115) ^ 0xC5)
                                                     - 1760114544
                                                     + ((2 * (BYTE2(v115) ^ 0xC5) + 88) & 0xC6 ^ 0xFF7F6BFF));
  v349 = ((unsigned __int16)(v108 ^ v110) >> 8) ^ 0x8E;
  v133 = (181304767 * *(_DWORD *)(v122 + 4 * (v115 ^ 0xCAu)) - 1635484742) ^ *(_DWORD *)&v121[4 * (HIBYTE(v115) ^ 0x8E)] ^ (v132 - ((2 * v132) & 0xA7400726) - 744488045);
  v358 = v115 ^ v110 ^ 0x44039AAA;
  v134 = (181304767 * *(_DWORD *)(v122 + 4 * ((v115 ^ v110) ^ 0xDBu)) - 1635484742) ^ (BYTE2(v358) - 1760114544 + ((2 * HIWORD(v358) + 88) & 0xC6 ^ 0xFF7F6BFF)) ^ *(_DWORD *)&v118[4 * (BYTE2(v358) ^ 0x2D)];
  v343 = BYTE1(v115) ^ 0x16;
  v345 = v133 - ((2 * v133) & 0x4404AF56);
  v135 = (v134 - ((2 * v134) & 0x4404AF56) - 1576904789) ^ *(_DWORD *)&v119[4
                                                                          * (((unsigned __int16)(v115 ^ v110) >> 8) ^ 0xC0)];
  LODWORD(v59) = *(_DWORD *)&v121[4 * v63] ^ (181304767 * *(_DWORD *)(v122 + 4 * (v365 ^ 0xFEu))
                                                          - 1635484742) ^ (v59 - ((2 * v59) & 0xA7400726) - 744488045);
  v366 = v135 - ((2 * v135) & 0xA7400726);
  HIDWORD(v356) = v59 - ((2 * v59) & 0x4404AF56);
  LODWORD(v59) = *(_DWORD *)(v122 + 4 * (v425 ^ 0xECu));
  v136 = *(_DWORD *)(v122 + 4 * (v440 ^ 0xE6u));
  LODWORD(v63) = *(_DWORD *)&v118[4 * (v453 ^ 0x32)] ^ ((v453 ^ 0x1F)
                                                      - 1760114544
                                                      + ((2 * (v453 ^ 0x1F) + 88) & 0xC6 ^ 0xFF7F6BFF));
  LODWORD(v59) = *(_DWORD *)&v121[4 * (HIBYTE(v425) ^ 0xCA)] ^ ((BYTE2(v425) ^ 0x2F)
                                                              - 1760114544
                                                              + ((2 * (BYTE2(v425) ^ 0x2F) + 88) & 0xC6 ^ 0xFF7F6BFF)) ^ *(_DWORD *)&v118[4 * (BYTE2(v425) ^ 2)] ^ (181304767 * v59 - ((362609534 * v59 + 1023997812) & 0xA7400726) + 1914994509);
  LODWORD(v55) = (v63 - ((2 * v63) & 0x4404AF56) - 1576904789) ^ *(_DWORD *)&v119[4 * (v462 ^ 0x8C)] ^ (181304767 * *(_DWORD *)(v122 + 4 * (v91 ^ 0xD9u)) - 1635484742);
  LODWORD(v60) = *(_DWORD *)&v121[4 * ((v440 ^ 0x49A657C7u) >> 24)] ^ ((((v440 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                     - 1760114544
                                                                     + ((2
                                                                       * (((v440 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                       + 88) & 0xC6 ^ 0xFF7F6BFF)) ^ *(_DWORD *)&v118[4 * (((v440 ^ 0x49A657C7u) >> 16) ^ 0x18)] ^ (181304767 * v136 - ((362609534 * v136 + 1023997812) & 0xA7400726) + 1914994509);
  v137 = *(_DWORD *)&v118[4 * (((v443 ^ 0x504B03ACu) >> 16) ^ 0x2D)] ^ (((v443 ^ 0x504B03ACu) >> 16)
                                                                                       - 1760114544
                                                                                       + ((2
                                                                                         * ((v443 ^ 0x504B03ACu) >> 16)
                                                                                         + 88) & 0xC6 ^ 0xFF7F6BFF));
  v463 = v475 ^ 0xAA;
  LODWORD(v476) = (v59 - ((2 * v59) & 0x4404AF56) - 1576904789) ^ *(_DWORD *)&v119[4 * (BYTE1(v425) ^ 0x2E)];
  v461 = v55 - ((2 * v55) & 0xA7400726);
  LODWORD(v55) = (v137 - ((2 * v137) & 0xA7400726) - 744488045) ^ *(_DWORD *)&v121[4 * ((v443 ^ 0x504B03ACu) >> 24)] ^ (181304767 * *(_DWORD *)(v122 + 4 * (v443 ^ 0x3Cu)) - 1635484742);
  v426 = BYTE1(v443) ^ 0x83;
  v454 = v60 - ((2 * v60) & 0x4404AF56);
  v444 = v55 - ((2 * v55) & 0x4404AF56);
  LODWORD(v59) = *(_DWORD *)&v118[4 * (v431 ^ 0xC1)] ^ ((v431 ^ 0xEC)
                                                      - 1760114544
                                                      + ((2 * (v431 ^ 0xEC) + 88) & 0xC6 ^ 0xFF7F6BFF));
  LODWORD(v55) = (v59 - ((2 * v59) & 0x4404AF56) - 1576904789) ^ *(_DWORD *)&v119[4
                                                                                * (((((unsigned __int16)(v99 ^ ((v486 ^ 0xCD6D) - ((2 * (v486 ^ 0xCD6D)) & 0x339C) + 6606) ^ v88) >> 8) ^ 0x9A)
                                                                                  - ((2 * v436) & 0x166)
                                                                                  + 179) ^ 0x54)] ^ (181304767 * *(_DWORD *)(v122 + 4 * (v458 ^ 0xE2u)) - 1635484742);
  LODWORD(v59) = *(_DWORD *)(v122 + 4 * (*(_DWORD *)(v53 - 140) ^ 0x80u));
  LODWORD(v59) = (181304767 * v59 - ((362609534 * v59 + 1023997812) & 0xA7400726) + 1914994509) ^ *(_DWORD *)&v121[4 * (HIBYTE(v446) ^ 0x24)];
  v459 = v55 - ((2 * v55) & 0xA7400726);
  v341 = v59 - ((2 * v59) & 0x4404AF56);
  HIDWORD(v342) = v99 ^ 0xEEA2BFA8;
  LODWORD(v55) = *(_DWORD *)&v118[4 * (BYTE6(v342) ^ 0x86)] ^ ((BYTE6(v342) ^ 0xAB)
                                                             - 1760114544
                                                             + ((2 * (BYTE6(v342) ^ 0xAB) + 88) & 0xC6 ^ 0xFF7F6BFF));
  LODWORD(v55) = (181304767 * *(_DWORD *)(v122 + 4 * (v99 ^ 0x68u)) - 1635484742) ^ *(_DWORD *)&v119[4 * (BYTE1(v99) ^ 0x55)] ^ (v55 - ((2 * v55) & 0x4404AF56) - 1576904789);
  LODWORD(v59) = ((v449 ^ 0x231B9DB5u) >> 16);
  v432 = v55 - 744488045 + (~(2 * v55) | 0x58BFF8D9);
  v138 = BYTE2(v446);
  v437 = (BYTE2(v446) ^ 0xED) - 1760114544 + ((2 * (BYTE2(v446) ^ 0xED) + 88) & 0xC6 ^ 0xFF7F6BFF);
  v439 = (v59 ^ 0xC1) - 1760114544 + ((2 * (v59 ^ 0xC1) + 88) & 0xC6 ^ 0xFF7F6BFF);
  v139 = *(_DWORD *)(v122 + 4 * (v450 ^ 0x60u));
  LODWORD(v72) = v488 ^ 0x4B3445A2;
  v140 = *(_DWORD *)(v122 + 4 * (v492 ^ 0xFBu));
  v141 = *(_DWORD *)(v53 - 160);
  v142 = *(_DWORD *)(v122 + 4 * (v141 ^ 0xB8u));
  v143 = *(_DWORD *)(v122 + 4 * v360);
  v144 = *(_DWORD *)(v122 + 4 * v348);
  v145 = v482 ^ 0x7B;
  v146 = *(_DWORD *)(v122 + 4 * (v467 ^ 0xF0u));
  v147 = *(_DWORD *)(v122 + 4 * (v78 ^ 0x57u));
  LODWORD(v78) = *(_DWORD *)(v122 + 4 * (v469 ^ 1u));
  v148 = *(_DWORD *)(v122 + 4 * (*(_DWORD *)(v53 - 200) ^ 0x78u));
  LODWORD(v63) = *(_DWORD *)(v122 + 4 * (v449 ^ 0x75u));
  v149 = *(_DWORD *)(v122 + 4 * ((((v486 ^ 0x6D) - ((2 * (v486 ^ 0x6D)) & 0x9C) - 50) ^ v88) ^ 0x74u));
  LODWORD(v60) = *(_DWORD *)(v122 + 4 * (v480 ^ 0x91u));
  LODWORD(v55) = *(_DWORD *)(v122 + 4 * (v488 ^ 0xB6 ^ v440 ^ 0x2Au));
  LODWORD(v122) = *(_DWORD *)(v122 + 4 * (v488 ^ 0x9Bu));
  v451 = 181304767 * v139 - 1635484742;
  v489 = 181304767 * v140 - 1635484742;
  v483 = 181304767 * v142 - 1635484742;
  v485 = 181304767 * v143 - 1635484742;
  v447 = 181304767 * v146 - 1635484742;
  v493 = 181304767 * v147 - 1635484742;
  HIDWORD(v359) = 181304767 * v78 - 1635484742;
  HIDWORD(v339) = 181304767 * v144 - 1635484742;
  LODWORD(v340) = 181304767 * v63 - 1635484742;
  HIDWORD(v347) = 181304767 * v122 - 1635484742;
  LODWORD(v122) = (181304767 * v149 - ((362609534 * v149 + 1023997812) & 0xA7400726) + 1914994509) ^ *(_DWORD *)&v121[4 * v145];
  v150 = v480;
  LODWORD(v78) = *(_DWORD *)&v118[4 * (BYTE2(v480) ^ 0x6B)] ^ ((BYTE2(v480) ^ 0x46)
                                                             - 1760114544
                                                             + ((2 * (BYTE2(v480) ^ 0x46) + 88) & 0xC6 ^ 0xFF7F6BFF)) ^ (181304767 * v60 - 1635484742);
  LODWORD(v78) = (v78 - ((2 * v78) & 0x4404AF56) - 1576904789) ^ *(_DWORD *)&v119[4 * (BYTE1(v480) ^ 0xB1)];
  LODWORD(v60) = *(_DWORD *)&v118[4 * (BYTE2(v72) ^ 0x3C)] ^ ((BYTE2(v72) ^ 0x11)
                                                            - 1760114544
                                                            + ((2 * (BYTE2(v72) ^ 0x11) + 88) & 0xC6 ^ 0xFF7F6BFF));
  LODWORD(v55) = (181304767 * v55 - 1635484742) ^ ((BYTE2(v486) ^ 0x37)
                                                 - 1760114544
                                                 + ((2 * (BYTE2(v486) ^ 0x37) + 88) & 0xC6 ^ 0xFF7F6BFF)) ^ *(_DWORD *)&v118[4 * (BYTE2(v486) ^ 0x1A)];
  v151 = v122 - ((2 * v122) & 0x4404AF56);
  LODWORD(v339) = *(_DWORD *)&v118[4 * (v423 ^ 0x61)];
  BYTE1(v139) = BYTE1(v486);
  LODWORD(v55) = (v55 - ((2 * v55) & 0xA7400726) - 744488045) ^ *(_DWORD *)&v121[4 * (HIBYTE(v486) ^ 0xF9)];
  v374 = *(_DWORD *)&v118[4 * (v373 ^ 0x8A)];
  v424 = *(_DWORD *)&v118[4 * (v382 ^ 0x48)];
  LODWORD(v338) = *(_DWORD *)&v118[4 * (v355 ^ 0xA2)];
  HIDWORD(v353) = *(_DWORD *)&v118[4 * (v59 ^ 0xEC)];
  v383 = *(_DWORD *)&v118[4 * (v138 ^ 0xC0)];
  LODWORD(v122) = *(_DWORD *)(v53 - 232);
  *(_DWORD *)(v53 - 232) = *(_DWORD *)&v118[4 * (v122 ^ 0x1A)];
  LODWORD(v118) = (((((v486 ^ 0xFE25CD6D) - ((2 * (v486 ^ 0xFE25CD6D)) & 0x5D32339C) - 1365698098) ^ v88) >> 15) & 0x58 ^ 0x48)
                + (v122 ^ 0x4C64A1B);
  v494 = (_DWORD)v118 - 1840218524 + ((2 * (_DWORD)v118) & 0xC6 ^ 0xFF7F6BFF);
  HIDWORD(v338) = *(_DWORD *)&v119[4 * v429];
  v430 = *(_DWORD *)&v119[4 * v349];
  *(_DWORD *)(v53 - 160) = *(_DWORD *)&v119[4 * (BYTE1(v141) ^ 0x85)];
  v481 = *(_DWORD *)&v119[4 * (BYTE1(*(_DWORD *)(v53 - 168)) ^ 0xBD)];
  v487 = *(_DWORD *)&v119[4 * v408];
  LODWORD(v350) = *(_DWORD *)&v119[4 * (v490 ^ 0x1A)];
  HIDWORD(v337) = *(_DWORD *)&v119[4 * v367];
  *(_DWORD *)(v53 - 168) = *(_DWORD *)&v119[4 * v362];
  *(_DWORD *)(v53 - 176) = *(_DWORD *)&v119[4 * (BYTE1(*(_DWORD *)(v53 - 176)) ^ 0xD6)];
  *(_DWORD *)(v53 - 256) = *(_DWORD *)&v119[4 * (*(_DWORD *)(v53 - 256) ^ 0xEE)];
  v409 = *(_DWORD *)&v119[4 * (BYTE1(*(_DWORD *)(v53 - 192)) ^ 0xD7)];
  LODWORD(v59) = *(_DWORD *)(v53 - 200);
  LODWORD(v337) = *(_DWORD *)&v119[4 * (BYTE1(v59) ^ 0x76)];
  LODWORD(v118) = *(_DWORD *)&v119[4 * v343];
  HIDWORD(v336) = *(_DWORD *)&v119[4 * (v478 ^ 0xBE)];
  *(_DWORD *)(v53 - 192) = *(_DWORD *)&v119[4 * (BYTE1(v440) ^ 0xB9)];
  v491 = *(_DWORD *)&v119[4 * v426];
  LODWORD(v342) = *(_DWORD *)&v119[4 * (BYTE1(v449) ^ 0x77)];
  v427 = *(_DWORD *)&v119[4 * (BYTE1(*(_DWORD *)(v53 - 140)) ^ 0x18)];
  v368 = *(_DWORD *)&v119[4 * (*(_DWORD *)(v53 - 224) ^ 0x84)];
  LODWORD(v344) = *(_DWORD *)&v119[4 * (BYTE1(v139) ^ 0x2E)];
  LODWORD(v119) = *(_DWORD *)&v119[4 * (BYTE1(*(_DWORD *)(v53 - 248)) ^ 0xC8)];
  LODWORD(v336) = v434 - 1576904789;
  *(_DWORD *)(v53 - 224) = v417 - 1576904789;
  v363 = v414 - 1576904789;
  *(_DWORD *)(v53 - 248) = v411 - 1576904789;
  v441 = v394 - 1576904789;
  HIDWORD(v335) = v376 - 1576904789;
  v479 = v352 - 1576904789;
  v418 = v379 - 1576904789;
  LODWORD(v353) = v346 - 1576904789;
  LODWORD(v122) = v345 - 1576904789;
  LODWORD(v335) = HIDWORD(v356) - 1576904789;
  v395 = v454 - 1576904789;
  v380 = v444 - 1576904789;
  v435 = v341 - 1576904789;
  v412 = v151 - 1576904789;
  v415 = v55 - ((2 * v55) & 0x4404AF56) - 1576904789;
  HIDWORD(v340) = *(_DWORD *)&v121[4 * (HIBYTE(v457) ^ 0xB2)];
  *(_DWORD *)(v53 - 216) = *(_DWORD *)&v121[4 * (*(_DWORD *)(v53 - 216) ^ 7)];
  v445 = *(_DWORD *)&v121[4 * (HIBYTE(*(_DWORD *)(v53 - 132)) ^ 0xE8)];
  LODWORD(v347) = *(_DWORD *)&v121[4 * (HIBYTE(*(_DWORD *)(v53 - 136)) ^ 0xE9)];
  HIDWORD(v356) = *(_DWORD *)&v121[4 * (HIBYTE(*(_DWORD *)(v53 - 128)) ^ 0xB8)];
  v377 = *(_DWORD *)&v121[4 * HIBYTE(v370)];
  v371 = *(_DWORD *)&v121[4 * (v400 ^ 0x4B)];
  v401 = *(_DWORD *)&v121[4 * v351];
  HIDWORD(v350) = *(_DWORD *)&v121[4 * (HIBYTE(*(_DWORD *)(v53 - 184)) ^ 0xE8)];
  v152 = *(_DWORD *)&v121[4 * (BYTE3(v59) ^ 0xA6)];
  v153 = *(_DWORD *)&v121[4 * HIBYTE(v358)];
  *(_DWORD *)(v53 - 200) = *(_DWORD *)&v121[4 * v463];
  LODWORD(v55) = v119 ^ (v60 - ((2 * v60) & 0x4404AF56) - 1576904789);
  v154 = *(_DWORD *)&v121[4 * ((v449 ^ 0x231B9DB5u) >> 24)];
  v155 = *(_DWORD *)&v121[4 * (*(_DWORD *)(v53 - 240) ^ 0x38)];
  v156 = *(_DWORD *)&v121[4 * ((v99 ^ 0xEEA2BFA8) >> 24)];
  HIDWORD(v344) = *(_DWORD *)&v121[4 * (HIBYTE(v150) ^ 0xC4)];
  *(_DWORD *)(v53 - 184) = *(_DWORD *)&v121[4 * BYTE3(v72)];
  v157 = v465 - 744488045;
  LODWORD(v359) = v421 - 744488045;
  v158 = v386 - 744488045;
  *(_DWORD *)(v53 - 240) = v397 - 744488045;
  v387 = v404 - 744488045;
  v159 = v461 - 744488045;
  v160 = v459 - 744488045;
  v161 = v78 - ((2 * v78) & 0xA7400726) - 744488045;
  v162 = v55 - ((2 * v55) & 0xA7400726) - 744488045;
  v163 = HIDWORD(v476) ^ v476 ^ 0x6285F181;
  v164 = v122 ^ v118 ^ v163;
  v165 = *(_DWORD *)(v53 - 152);
  v166 = (uint64_t)*(&off_1E2ABD050 + (v165 ^ 0x55));
  v167 = (char *)*(&off_1E2ABD050 + v165 - 72) - 4;
  v168 = (char *)*(&off_1E2ABD050 + v165 - 31) - 4;
  v169 = (uint64_t)*(&off_1E2ABD050 + (v165 ^ 0x48));
  v170 = (*(unsigned __int8 *)(v169 + (*(unsigned __int8 *)(v53 - 109) ^ 0x41)) ^ 0xE3) & 0xFF00FFFF | (((v167[*(unsigned __int8 *)(v53 - 111) ^ 0x40] - 124) ^ 0x5A) << 16) | ((v168[*(unsigned __int8 *)(v53 - 110) ^ 0xBBLL] ^ 0xFB) << 8) | ((*(unsigned __int8 *)(v166 + (*(unsigned __int8 *)(v53 - 112) ^ 0x1ELL)) ^ (*(unsigned __int8 *)(v53 - 112) - 2 * (*(_BYTE *)(v53 - 112) & 0x1F) - 97) ^ 0x84) << 24);
  v470 = v166;
  v171 = *(unsigned __int8 *)(v169 + (*(unsigned __int8 *)(v53 - 97) ^ 0x74)) ^ 0x44 | (((v167[*(unsigned __int8 *)(v53 - 99) ^ 0xF3] ^ 2) - 124) << 16) | ((v168[*(unsigned __int8 *)(v53 - 98) ^ 0x20] ^ 0x11) << 8) | ((*(unsigned __int8 *)(v166 + (*(unsigned __int8 *)(v53 - 100) ^ 0xF3)) ^ (*(unsigned __int8 *)(v53 - 100) - 2 * (*(_BYTE *)(v53 - 100) & 0x1F) - 97) ^ 0x85) << 24);
  v464 = v169;
  v466 = v168;
  v468 = v167;
  v172 = (*(unsigned __int8 *)(v169 + (*(unsigned __int8 *)(v53 - 105) ^ 0xE4)) ^ 0xD5) & 0xFF00FFFF | ((*(unsigned __int8 *)(v166 + (*(unsigned __int8 *)(v53 - 108) ^ 0x3ELL)) ^ (*(unsigned __int8 *)(v53 - 108) - 2 * (*(_BYTE *)(v53 - 108) & 0x1F) - 97) ^ 0xFFFFFFE1) << 24) | (((v167[*(unsigned __int8 *)(v53 - 107) ^ 0x27] - 124) ^ 0x96) << 16) | ((v168[*(unsigned __int8 *)(v53 - 106) ^ 9] ^ 0xFE) << 8);
  v173 = (*(unsigned __int8 *)(v169 + (*(unsigned __int8 *)(v53 - 101) ^ 0xF2)) ^ 0x6C) & 0xFF00FFFF | ((*(unsigned __int8 *)(v166 + (*(unsigned __int8 *)(v53 - 104) ^ 0xD3)) ^ (*(unsigned __int8 *)(v53 - 104) - 2 * (*(_BYTE *)(v53 - 104) & 0x1F) - 97) ^ 0xE0) << 24) | ((v168[*(unsigned __int8 *)(v53 - 102) ^ 0xBELL] ^ 0x59) << 8) & 0xFF00FFFF | (((v167[*(unsigned __int8 *)(v53 - 103) ^ 0xE9] - 124) ^ 0x8A) << 16);
  if ((v164 & 0x80) != 0)
    v174 = -128;
  else
    v174 = 128;
  *(_DWORD *)(v53 - 128) = v171 ^ 0x56C814A0;
  *(_DWORD *)(v53 - 132) = v170 ^ 0xA0B2061B;
  *(_DWORD *)(v53 - 136) = v172 ^ 0xDD3DE8AE;
  *(_DWORD *)(v53 - 140) = v173 ^ 0xB03B4A66;
  HIDWORD(v460) = v335 ^ HIDWORD(v336);
  LODWORD(v460) = v152 ^ v392 ^ v337 ^ v338 ^ (181304767 * v148 - 1635484742);
  HIDWORD(v456) = (v366 - 744488045) ^ v153;
  LODWORD(v456) = v451 ^ HIDWORD(v338) ^ v455;
  HIDWORD(v452) = v336 ^ v430;
  LODWORD(v452) = HIDWORD(v340) ^ v477 ^ v339 ^ v157;
  HIDWORD(v448) = HIDWORD(v335) ^ HIDWORD(v337);
  LODWORD(v448) = v441 ^ v350 ^ v447;
  HIDWORD(v442) = (v399 - 744488045) ^ v445 ^ HIDWORD(v339);
  LODWORD(v442) = v158 ^ v347;
  HIDWORD(v438) = v342 ^ v154 ^ v439 ^ HIDWORD(v353) ^ v340;
  LODWORD(v438) = v427 ^ v437 ^ v383 ^ v435;
  HIDWORD(v433) = (v432 + 1) ^ v156;
  LODWORD(v433) = v160 ^ v155;
  HIDWORD(v428) = v353 ^ v409;
  LODWORD(v428) = HIDWORD(v350) ^ v406 ^ v424 ^ (v356 - 744488045);
  HIDWORD(v422) = (a16 - 744488045) ^ v401;
  LODWORD(v422) = HIDWORD(v359) ^ *(_DWORD *)(v53 - 256) ^ v418;
  HIDWORD(v419) = HIDWORD(v347) ^ *(_DWORD *)(v53 - 184) ^ v162;
  LODWORD(v419) = v415 ^ v344;
  HIDWORD(v413) = v161 ^ HIDWORD(v344);
  LODWORD(v413) = v368 ^ v494 ^ *(_DWORD *)(v53 - 232) ^ v412;
  HIDWORD(v407) = v159 ^ *(_DWORD *)(v53 - 200);
  LODWORD(v407) = *(_DWORD *)(v53 - 192) ^ v395;
  HIDWORD(v402) = v380 ^ v491;
  LODWORD(v402) = v363 ^ v481;
  HIDWORD(v398) = *(_DWORD *)(v53 - 224) ^ *(_DWORD *)(v53 - 160) ^ v483;
  LODWORD(v398) = v485 ^ v487 ^ *(_DWORD *)(v53 - 248);
  HIDWORD(v393) = v489 ^ *(_DWORD *)(v53 - 216) ^ v359;
  LODWORD(v393) = v479 ^ *(_DWORD *)(v53 - 176);
  HIDWORD(v388) = *(_DWORD *)(v53 - 168) ^ v390 ^ HIDWORD(v356) ^ v374 ^ v493;
  LODWORD(v388) = v387 ^ v371;
  HIDWORD(v381) = *(_DWORD *)(v53 - 240) ^ v377;
  LODWORD(v381) = *(_DWORD *)(v53 - 208) + 393299981;
  HIDWORD(v375) = (v174 + (v164 ^ 0x2497E332)) ^ v163;
  v175 = *(_DWORD *)(v53 - 120);
  LODWORD(v375) = v175 ^ 0x420;
  HIDWORD(v369) = v175 ^ 0x4C0;
  LODWORD(v369) = v175 ^ 0x448;
  HIDWORD(v364) = v175 ^ 0x404;
  LODWORD(v364) = v175 ^ 0x4B8;
  *(_QWORD *)(v53 - 176) = 13;
  v176 = v167[a48[13] ^ 0xF3];
  *(_QWORD *)(v53 - 152) = 1;
  v177 = (((2 * v175) ^ 0x72) + (v176 ^ 2) + 58) << 16;
  v178 = a48[1] ^ 0x57;
  *(_QWORD *)(v53 - 160) = 10;
  v179 = a48[10] ^ 0xB6;
  v180 = ((v468[v178] - 124) ^ 0xF6) << 16;
  *(_QWORD *)(v53 - 184) = 4;
  v181 = (v466[v179] ^ 0x74) << 8;
  v182 = a48[4];
  v183 = *(unsigned __int8 *)(v166 + (v182 ^ 0x9A));
  *(_QWORD *)(v53 - 224) = 7;
  LODWORD(v182) = v183 ^ (v182 - 2 * (v182 & 0x1F) - 97) ^ 0xFFFFFFCF;
  v184 = a48[7] ^ 0xD6;
  *(_QWORD *)(v53 - 216) = 2;
  LODWORD(v182) = *(unsigned __int8 *)(v169 + v184) ^ 0x86 | ((_DWORD)v182 << 24);
  LODWORD(v184) = v466[a48[2]] ^ 0x66;
  *(_QWORD *)(v53 - 192) = 3;
  v185 = *(unsigned __int8 *)(v169 + (a48[3] ^ 0x74));
  *(_QWORD *)(v53 - 168) = 12;
  v186 = v180 | ((_DWORD)v184 << 8) | v185 ^ 0x44;
  v187 = *(unsigned __int8 *)(v166 + (a48[12] ^ 0x6ELL)) ^ (a48[12] - 2 * (a48[12] & 0x1F) - 97) ^ 0x51;
  *(_QWORD *)(v53 - 208) = 0;
  v188 = *a48;
  v189 = *(unsigned __int8 *)(v166 + (v188 ^ 0x15));
  *(_QWORD *)(v53 - 256) = 8;
  v190 = v186 | ((v189 ^ ((_DWORD)v188 - 2 * (v188 & 0x1F) - 97) ^ 0xAE) << 24);
  v191 = v181 | ((*(unsigned __int8 *)(v166 + (a48[8] ^ 0x46)) ^ (a48[8] + (~(2 * a48[8]) | 0xC1) - 96) ^ 0xFFFFFFE7) << 24);
  *(_QWORD *)(v53 - 200) = 14;
  v192 = v466[a48[14] ^ 0xD5] ^ 0xEE;
  *(_QWORD *)(v53 - 232) = 5;
  *(_QWORD *)(v53 - 248) = 11;
  LODWORD(v182) = v182 & 0xFF00FFFF | (((v468[a48[5] ^ 0x9DLL] - 124) ^ 0xF7) << 16);
  v193 = *(unsigned __int8 *)(v169 + (a48[11] ^ 0xC2)) ^ 0x61 | v191;
  v194 = a48[6] ^ 0xA4;
  v195 = v193 & 0xFF00FFFF | (((v468[a48[9] ^ 0x3ELL] - 124) ^ 0xDF) << 16);
  *(_QWORD *)(v53 - 240) = 15;
  v196 = *(unsigned __int8 *)(v169 + (a48[15] ^ 0x47)) ^ 0x44 | v177 | (v187 << 24) | (v192 << 8);
  v484 = v182 | ((v466[v194] ^ 0xBE) << 8);
  v197 = *(_DWORD *)(v53 - 120);
  v198 = (uint64_t)*(&off_1E2ABD050 + v197 - 1036);
  LODWORD(v182) = ((((unsigned __int16)(v484 ^ v472) >> 8) ^ 0x4C)
                 - 529863986
                 - 2
                 * ((((v484 ^ v472) >> 8) ^ 0xB71C4C) & 0xDE ^ ((v484 ^ v472) >> 8) & 0x10)) ^ *(_DWORD *)(v198 + 4 * (((unsigned __int16)(v484 ^ v472) >> 8) ^ 0x21u));
  v199 = (uint64_t)*(&off_1E2ABD050 + (v175 ^ 0x420));
  LODWORD(v194) = v190 ^ HIDWORD(v472) ^ 0x730032AA;
  v200 = (v182 + 1233387280 - ((2 * v182) & 0x9307FE20)) ^ *(_DWORD *)(v199
                                                                     + 4
                                                                     * ((v190 ^ BYTE4(v472)) ^ 0xAAu));
  LODWORD(v182) = *(_DWORD *)(v198 + 4 * (((unsigned __int16)(v471 ^ v196) >> 8) ^ 0xB7u)) ^ ((((unsigned __int16)(v471 ^ v196) >> 8) ^ 0xDA) - 529863986 - ((2 * (((v471 ^ v196) >> 8) ^ 0x79BFDA)) & 0x19C));
  v201 = (char *)*(&off_1E2ABD050 + v197 - 954) - 4;
  LODWORD(v188) = *(_DWORD *)&v201[4 * (((v195 ^ HIDWORD(v471)) >> 16) ^ 0x68)];
  HIDWORD(v202) = v188 ^ 0x2A8;
  LODWORD(v202) = v188 ^ 0x4C8C4000;
  LODWORD(v188) = v202 >> 12;
  LODWORD(v179) = *(_DWORD *)&v201[4 * ((v190 ^ HIDWORD(v472)) >> 16)];
  HIDWORD(v202) = v179 ^ 0x2A8;
  LODWORD(v202) = v179 ^ 0x4C8C4000;
  v203 = (char *)*(&off_1E2ABD050 + v197 - 961) - 8;
  v204 = *(_DWORD *)&v203[4 * (((v484 ^ v472) >> 24) ^ 0xB7)] ^ (v202 >> 12);
  v205 = *(_DWORD *)&v201[4 * (((v471 ^ v196) >> 16) ^ 0xBF)];
  HIDWORD(v202) = v205 ^ 0x2A8;
  LODWORD(v202) = v205 ^ 0x4C8C4000;
  v206 = (v182 + 781336807 - ((2 * v182) & 0x5D2481CE)) ^ v204;
  v207 = *(_DWORD *)(v199 + 4 * ((v484 ^ v472) ^ 0xFBu)) ^ (BYTE1(v195) ^ BYTE5(v471)) ^ *(_DWORD *)(v198 + 4 * ((BYTE1(v195) ^ BYTE5(v471)) ^ 0x23u)) ^ 0xA9E91590 ^ (v202 >> 12);
  v208 = *(_DWORD *)&v201[4 * (((v484 ^ v472) >> 16) ^ 0x1C)];
  HIDWORD(v202) = v208 ^ 0x2A8;
  LODWORD(v202) = v208 ^ 0x4C8C4000;
  v209 = *(_DWORD *)&v203[4 * (((v195 ^ HIDWORD(v471)) >> 24) ^ 0xF6)] ^ (BYTE1(v194)
                                                                        - 529863986
                                                                        - ((v194 >> 7) & 0x19C)) ^ *(_DWORD *)(v198 + 4 * (BYTE1(v194) ^ 0x6Du)) ^ ((v202 >> 12) + 781336807 - ((2 * (v202 >> 12)) & 0x5D2481CE));
  v210 = *(_DWORD *)&v203[4 * BYTE3(v194)];
  v211 = v335 ^ HIDWORD(v336) ^ v188 ^ *(_DWORD *)&v203[4 * (((v471 ^ v196) >> 24) ^ 0x79)] ^ (v200 + 781336807 - ((2 * v200) & 0x5D2481CE));
  LODWORD(v194) = v460 ^ *(_DWORD *)(v199 + 4 * ((v471 ^ v196) ^ 0x30u)) ^ (v209
                                                                                             + 1233387280
                                                                                             - ((2 * v209) & 0x9307FE20));
  v212 = HIDWORD(v456) ^ *(_DWORD *)(v199 + 4 * ((v195 ^ BYTE4(v471)) ^ 0x5Fu)) ^ (v206 + 1233387280 - ((2 * v206) & 0x9307FE20));
  v213 = HIDWORD(v375) ^ v210 ^ (v207 + 781336807 - ((2 * v207) & 0x5D2481CE));
  v214 = v211 ^ 0xF9388C2F;
  LODWORD(v182) = *(_DWORD *)&v201[4 * ((v211 ^ 0xF9388C2F) >> 16)];
  HIDWORD(v202) = v182 ^ 0x2A8;
  LODWORD(v202) = v182 ^ 0x4C8C4000;
  v215 = v202 >> 12;
  LODWORD(v182) = *(_DWORD *)&v201[4 * (BYTE2(v194) ^ 0xDA)];
  HIDWORD(v202) = v182 ^ 0x2A8;
  LODWORD(v202) = v182 ^ 0x4C8C4000;
  LODWORD(v182) = v202 >> 12;
  v216 = *(_DWORD *)&v201[4 * (BYTE2(v212) ^ 0x66)];
  HIDWORD(v202) = v216 ^ 0x2A8;
  LODWORD(v202) = v216 ^ 0x4C8C4000;
  v217 = (v202 >> 12) ^ *(_DWORD *)(v198 + 4 * (BYTE1(v213) ^ 5u)) ^ ((BYTE1(v213) ^ 0x68)
                                                                      - 529863986
                                                                      - ((2 * ((v213 >> 8) ^ 0x42BD68)) & 0x19C));
  v218 = (v215 + 1233387280 - ((2 * v215) & 0x9307FE20)) ^ *(_DWORD *)(v199 + 4 * (v212 ^ 0xB6u));
  v219 = (v217 + 1233387280 - ((2 * v217) & 0x9307FE20)) ^ *(_DWORD *)(v199 + 4 * (v211 ^ 0x61u));
  v220 = (BYTE1(v214) - 529863986 - ((v214 >> 7) & 0x19C)) ^ 0xD678EAEF ^ *(_DWORD *)(v198 + 4 * (BYTE1(v214) ^ 0x6Du));
  v221 = *(_DWORD *)&v203[4 * (HIBYTE(v212) ^ 0x43)] ^ 0x8C881B59;
  v222 = v220 + v221 - 2 * (v220 & v221);
  v223 = *(_DWORD *)&v201[4 * (BYTE2(v213) ^ 0xBD)];
  HIDWORD(v202) = v223 ^ 0x2A8;
  LODWORD(v202) = v223 ^ 0x4C8C4000;
  LODWORD(v182) = *(_DWORD *)&v203[4 * HIBYTE(v214)] ^ (v182 + 781336807 - ((2 * v182) & 0x5D2481CE));
  LODWORD(v182) = (v182 + 1233387280 - ((2 * v182) & 0x9307FE20)) ^ *(_DWORD *)(v199
                                                                              + 4 * (v213 ^ 0xABu));
  v224 = *(_DWORD *)&v203[4 * (HIBYTE(v213) ^ 0x42)] ^ HIDWORD(v476) ^ *(_DWORD *)(v198 + 4 * (BYTE1(v194) ^ 0xA2u)) ^ ((BYTE1(v194) ^ 0xCF) - 529863986 - 2 * (((v194 >> 8) ^ 0xA4DACF) & 0xDE ^ (v194 >> 8) & 0x10)) ^ (v218 + 781336808 + ~((2 * v218) & 0x5D2481CE));
  v225 = v456 ^ *(_DWORD *)(v198 + 4 * (BYTE1(v212) ^ 0x39u)) ^ (v182 - 529863986 - ((2 * v182) & 0xC0D5D59C));
  v226 = v452 ^ *(_DWORD *)(v199 + 4 * (v194 ^ 0x50u)) ^ ((v222 ^ (v202 >> 12))
                                                                           + 1233387280
                                                                           - ((2 * (v222 ^ (v202 >> 12))) & 0x9307FE20));
  LODWORD(v182) = *(_DWORD *)&v201[4 * (BYTE2(v226) ^ 0x79)];
  HIDWORD(v202) = v182 ^ 0x2A8;
  LODWORD(v202) = v182 ^ 0x4C8C4000;
  v227 = HIDWORD(v452) ^ *(_DWORD *)&v203[4 * (BYTE3(v194) ^ 0xA4)] ^ (v219 + 781336807 - ((2 * v219) & 0x5D2481CE));
  BYTE1(v194) = BYTE1(v227) ^ 0x68;
  LODWORD(v182) = ((v202 >> 12) + 781336807 - ((2 * (v202 >> 12)) & 0x5D2481CE)) ^ *(_DWORD *)&v203[4 * ((v227 ^ 0x2261685Eu) >> 24)];
  v228 = ((BYTE1(v226) ^ 0xD0) - 529863986 - ((2 * ((v226 >> 8) ^ 0x679D0)) & 0x19C)) ^ *(_DWORD *)(v198
                                                                                                  + 4 * (BYTE1(v226) ^ 0xBDu));
  v229 = (v228 + 1233387280 - ((2 * v228) & 0x9307FE20)) ^ *(_DWORD *)(v199 + 4 * (v224 ^ 0x76u));
  v230 = ((BYTE1(v225) ^ 0xEC) - 529863986 - 2 * (((v225 >> 8) ^ 0xE5FEC) & 0xCF ^ (v225 >> 8) & 1)) ^ *(_DWORD *)(v198 + 4 * (BYTE1(v225) ^ 0x81u));
  v231 = *(_DWORD *)&v201[4 * (BYTE2(v225) ^ 0x5F)];
  HIDWORD(v202) = v231 ^ 0x2A8;
  LODWORD(v202) = v231 ^ 0x4C8C4000;
  v232 = v202 >> 12;
  HIDWORD(v202) = *(_DWORD *)(v199 + 4 * (v227 ^ 0x5Eu)) ^ 0xA094D898;
  LODWORD(v202) = HIDWORD(v202);
  v233 = (v202 >> 28) ^ __ROR4__(*(_DWORD *)&v203[4 * (HIBYTE(v226) ^ 6)] ^ 0x7462B151 ^ (v230+ 781336807- ((2 * v230) & 0x5D2481CE)), 28);
  v234 = (v232 + 781336807 - ((2 * v232) & 0x5D2481CE)) ^ *(_DWORD *)&v203[4 * (HIBYTE(v224) ^ 0xD2)];
  v235 = (v234 + 1233387280 - ((2 * v234) & 0x9307FE20)) ^ *(_DWORD *)(v199 + 4 * (v226 ^ 0x4Cu));
  v236 = *(_DWORD *)&v201[4 * (BYTE2(v227) ^ 0x1B)];
  HIDWORD(v202) = v236 ^ 0x2A8;
  LODWORD(v202) = v236 ^ 0x4C8C4000;
  v237 = v202 >> 12;
  v238 = ((v224 >> 8) ^ 0xD2CCC0) & 0xDF ^ (v224 >> 8) & 0x11;
  v239 = BYTE1(v224) ^ 0xC0;
  v240 = v235 - 529863986 - ((2 * v235) & 0xC0D5D59C);
  v241 = *(_DWORD *)&v201[4 * (BYTE2(v224) ^ 0xCC)];
  HIDWORD(v202) = v241 ^ 0x2A8;
  LODWORD(v202) = v241 ^ 0x4C8C4000;
  v242 = HIDWORD(v335) ^ HIDWORD(v337) ^ (v202 >> 12) ^ __ROR4__(v233 ^ 0x78071371, 4);
  LOBYTE(v241) = v225 ^ BYTE1(v212) ^ 0x54;
  v243 = v448 ^ *(_DWORD *)&v203[4 * (HIBYTE(v225) ^ 0xE)] ^ v237 ^ (v229 + 781336807 - ((2 * v229) & 0x5D2481CE));
  LODWORD(v194) = BYTE1(v194);
  v244 = HIDWORD(v442) ^ *(_DWORD *)(v198 + 4 * (v194 ^ 0x6D)) ^ v240;
  v245 = v442 ^ (v239 - 529863986 - 2 * v238) ^ *(_DWORD *)(v199 + 4 * (v241 ^ 0xCAu)) ^ *(_DWORD *)(v198 + 4 * (v239 ^ 0x6Du)) ^ (v182 + 1233387280 - ((2 * v182) & 0x9307FE20));
  v246 = v194 ^ 0x4552953C ^ v244;
  LODWORD(v182) = *(_DWORD *)&v201[4 * BYTE2(v246)];
  HIDWORD(v202) = v182 ^ 0x2A8;
  LODWORD(v202) = v182 ^ 0x4C8C4000;
  LODWORD(v182) = v202 >> 12;
  LODWORD(v194) = *(_DWORD *)&v201[4 * ((v242 ^ 0x99FEE750) >> 16)];
  HIDWORD(v202) = v194 ^ 0x2A8;
  LODWORD(v202) = v194 ^ 0x4C8C4000;
  v247 = BYTE1(v243) ^ 0x29;
  LODWORD(v188) = v247 - 529863986 - ((2 * ((v243 >> 8) ^ 0xA73B29)) & 0x19C);
  LODWORD(v194) = *(_DWORD *)&v201[4 * (BYTE2(v245) ^ 2)];
  v248 = (BYTE1(v246) - 529863985 + (~(v246 >> 7) | 0xFFFFFE63)) ^ *(_DWORD *)(v199
                                                                             + 4 * (v243 ^ 0x72u)) ^ *(_DWORD *)(v198 + 4 * (BYTE1(v246) ^ 0x6Du)) ^ ((v202 >> 12) + 1233387280 - ((2 * (v202 >> 12)) & 0x9307FE20));
  HIDWORD(v202) = v194 ^ 0x2A8;
  LODWORD(v202) = v194 ^ 0x4C8C4000;
  LODWORD(v194) = *(_DWORD *)(v199 + 4 * v246) ^ *(_DWORD *)&v203[4 * (HIBYTE(v243) ^ 0xA7)] ^ (v202 >> 12) ^ 0x6711BFF7;
  v249 = *(_DWORD *)&v201[4 * (BYTE2(v243) ^ 0x3B)];
  HIDWORD(v202) = v249 ^ 0x2A8;
  LODWORD(v202) = v249 ^ 0x4C8C4000;
  v250 = HIDWORD(v438) ^ ((BYTE1(v245) ^ 0xD9) - 529863986 - ((2 * ((v245 >> 8) ^ 0x9802D9)) & 0x19C)) ^ *(_DWORD *)(v199 + 4 * (v242 ^ 0x1Eu)) ^ *(_DWORD *)(v198 + 4 * (BYTE1(v245) ^ 0xB4u)) ^ (v202 >> 12) ^ *(_DWORD *)&v203[4 * (HIBYTE(v244) ^ 0x61)];
  v251 = *(_DWORD *)(v199 + 4 * (v245 ^ 0x3Du));
  v252 = v438 ^ *(_DWORD *)&v203[4 * (HIBYTE(v245) ^ 0x98)] ^ (v248 + 781336807 - ((2 * v248) & 0x5D2481CE));
  v253 = HIDWORD(v433) ^ v188 ^ v251 ^ *(_DWORD *)&v203[4 * ((v242 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)(v198 + 4 * (v247 ^ 0x6Du)) ^ v182;
  v254 = *(_DWORD *)&v201[4 * (BYTE2(v250) ^ 0x55)];
  HIDWORD(v202) = v254 ^ 0x2A8;
  LODWORD(v202) = v254 ^ 0x4C8C4000;
  v255 = v202 >> 12;
  LODWORD(v182) = *(_DWORD *)&v201[4 * (BYTE2(v253) ^ 0xF9)];
  HIDWORD(v202) = v182 ^ 0x2A8;
  LODWORD(v202) = v182 ^ 0x4C8C4000;
  v256 = v433 ^ *(_DWORD *)(v198 + 4 * (((unsigned __int16)(v242 ^ 0xE750) >> 8) ^ 0x6Du)) ^ (v194 - 529863986 - ((2 * v194) & 0xC0D5D59C));
  LOBYTE(v182) = v250 ^ 0x6F;
  v257 = *(_DWORD *)(v199 + 4 * ((v256 ^ BYTE1(v242) ^ 0xE7) ^ 0x41u)) ^ (((unsigned __int16)(v250 ^ 0x736F) >> 8)
                                                                                           - 529863986
                                                                                           - (((v250 ^ 0x802F736F) >> 7) & 0x19C)) ^ *(_DWORD *)(v198 + 4 * (((unsigned __int16)(v250 ^ 0x736F) >> 8) ^ 0x6Du)) ^ ((v202 >> 12) + 1233387280 - ((2 * (v202 >> 12)) & 0x9307FE20));
  LODWORD(v194) = v257 + 781336807 - ((2 * v257) & 0x5D2481CE);
  v258 = *(_DWORD *)&v201[4 * (BYTE2(v256) ^ 0x81)];
  HIDWORD(v202) = v258 ^ 0x2A8;
  LODWORD(v202) = v258 ^ 0x4C8C4000;
  v259 = ((v202 >> 12) + 781336807 - ((2 * (v202 >> 12)) & 0x5D2481CE)) ^ *(_DWORD *)&v203[4
                                                                                         * ((v250 ^ 0x802F736F) >> 24)];
  v260 = (v259 + 1233387280 - ((2 * v259) & 0x9307FE20)) ^ *(_DWORD *)(v199 + 4 * (v253 ^ 0xF2u));
  v261 = ((BYTE1(v256) ^ 0xA0) - 529863986 - 2 * (((v256 >> 8) ^ 0x6881A0) & 0xDE ^ (v256 >> 8) & 0x10)) ^ (v255 + 1233387280 - ((2 * v255) & 0x9307FE20)) ^ *(_DWORD *)(v199 + 4 * (v252 ^ 0xFCu)) ^ *(_DWORD *)(v198 + 4 * (BYTE1(v256) ^ 0xCDu));
  v262 = *(_DWORD *)&v201[4 * (BYTE2(v252) ^ 0xC6)];
  LODWORD(v202) = __ROR4__((v262 >> 12) ^ 0x26915E6, 17) ^ 0xEE910136;
  HIDWORD(v202) = v202;
  v263 = HIDWORD(v428) ^ *(_DWORD *)(v198 + 4 * (BYTE1(v252) ^ 0x75u)) ^ (v260 - 529863986 - ((2 * v260) & 0xC0D5D59C));
  v264 = v428 ^ *(_DWORD *)&v203[4 * (HIBYTE(v253) ^ 0xB2)] ^ (v261 + 781336807 - ((2 * v261) & 0x5D2481CE));
  v265 = HIDWORD(v422) ^ *(_DWORD *)&v203[4 * (HIBYTE(v252) ^ 0x5A)] ^ v194;
  v266 = v422 ^ ((BYTE1(v253) ^ 0x40) - 529863986 - 2 * (((v253 >> 8) ^ 0xB2F940) & 0xDE ^ (v253 >> 8) & 0x10)) ^ *(_DWORD *)(v199 + 4 * v182) ^ *(_DWORD *)&v203[4 * (HIBYTE(v256) ^ 0x68)] ^ *(_DWORD *)(v198 + 4 * (BYTE1(v253) ^ 0x2Du)) ^ ((v202 >> 15) + (v262 << 20));
  v267 = ((BYTE1(v263) ^ 0x9D) - 529863986 - ((2 * ((v263 >> 8) ^ 0xC2489D)) & 0x19C)) ^ *(_DWORD *)(v198 + 4 * (BYTE1(v263) ^ 0xF0u));
  LODWORD(v194) = *(_DWORD *)&v201[4 * (BYTE2(v264) ^ 0x8F)];
  v268 = *(_DWORD *)(v199 + 4 * (v266 ^ 0x7Du)) ^ ((_DWORD)v194 << 20) ^ (v194 >> 12) ^ (v267 + 1233387280 - ((2 * v267) & 0x9307FE20));
  LODWORD(v182) = *(_DWORD *)&v201[4 * ((v265 ^ 0xCFB8D782) >> 16)];
  HIDWORD(v202) = v182 ^ 0x2A8;
  LODWORD(v202) = v182 ^ 0x4C8C4000;
  LODWORD(v182) = ((v202 >> 12) + 1233387280 - ((2 * (v202 >> 12)) & 0x9307FE20)) ^ *(_DWORD *)(v199
                                                                                              + 4
                                                                                              * ((v263 ^ BYTE1(v252)) ^ 0x3Fu));
  v269 = BYTE1(v264) ^ 0xD9;
  v270 = *(_DWORD *)&v201[4 * (BYTE2(v263) ^ 0x48)];
  LODWORD(v194) = v269 - 529863986 - ((2 * ((v264 >> 8) ^ 0xC78FD9)) & 0x19C);
  HIDWORD(v202) = v270 ^ 0x2A8;
  LODWORD(v202) = v270 ^ 0x4C8C4000;
  LODWORD(v188) = ((BYTE1(v266) ^ 0xDF) - 529863986 - ((2 * ((v266 >> 8) ^ 0x6B1ADF)) & 0x19C)) ^ *(_DWORD *)(v199 + 4 * (v265 ^ 0xCCu)) ^ *(_DWORD *)(v198 + 4 * (BYTE1(v266) ^ 0xB2u)) ^ ((v202 >> 12) + 1233387280 - ((2 * (v202 >> 12)) & 0x9307FE20));
  v271 = *(_DWORD *)&v201[4 * (BYTE2(v266) ^ 0x1A)];
  HIDWORD(v202) = v271 ^ 0x2A8;
  LODWORD(v202) = v271 ^ 0x4C8C4000;
  v272 = HIDWORD(v419) ^ (((unsigned __int16)(v265 ^ 0xD782) >> 8)
                        - 529863986
                        - (((v265 ^ 0xCFB8D782) >> 7) & 0x19C)) ^ *(_DWORD *)(v199
                                                                            + 4 * (v264 ^ 0x50u)) ^ *(_DWORD *)(v198 + 4 * (((unsigned __int16)(v265 ^ 0xD782) >> 8) ^ 0x6Du)) ^ *(_DWORD *)&v203[4 * (HIBYTE(v263) ^ 0xC2)] ^ (v202 >> 12);
  v273 = v419 ^ *(_DWORD *)&v203[4 * (HIBYTE(v264) ^ 0xC7)] ^ (v188 + 781336807 - ((2 * v188) & 0x5D2481CE));
  v274 = HIDWORD(v413) ^ *(_DWORD *)&v203[4 * ((v265 ^ 0xCFB8D782) >> 24)] ^ ((v268 ^ 0x2A84C8C4)
                                                                            + 781336807
                                                                            - 2
                                                                            * ((v268 ^ 0x2A84C8C4) & 0x2E9240FF ^ v268 & 0x18));
  v275 = v413 ^ v194 ^ *(_DWORD *)(v198 + 4 * (v269 ^ 0x6Du)) ^ *(_DWORD *)&v203[4 * (HIBYTE(v266) ^ 0x6B)] ^ (v182 + 781336807 - ((2 * v182) & 0x5D2481CE));
  LODWORD(v182) = *(_DWORD *)&v201[4 * (BYTE2(v273) ^ 0xE6)];
  HIDWORD(v202) = v182 ^ 0x2A8;
  LODWORD(v202) = v182 ^ 0x4C8C4000;
  v276 = v202 >> 12;
  v277 = *(_DWORD *)&v201[4 * (BYTE2(v274) ^ 0x1C)];
  HIDWORD(v202) = v277 ^ 0x2A8;
  LODWORD(v202) = v277 ^ 0x4C8C4000;
  v278 = (((unsigned __int16)(v275 ^ 0xCCA2) >> 8) - 529863986 - (((v275 ^ 0x33C8CCA2) >> 7) & 0x19C)) ^ *(_DWORD *)(v198 + 4 * (((unsigned __int16)(v275 ^ 0xCCA2) >> 8) ^ 0x6Du));
  v279 = (v202 >> 12) ^ *(_DWORD *)(v198 + 4 * (BYTE1(v273) ^ 0xD9u)) ^ ((BYTE1(v273) ^ 0xB4)
                                                                         - 529863986
                                                                         - ((2 * ((v273 >> 8) ^ 0x4FE6B4)) & 0x19C));
  v280 = (v279 + 1233387280 - ((2 * v279) & 0x9307FE20)) ^ *(_DWORD *)(v199 + 4 * (v272 ^ 0x1Du));
  v281 = (v278 + 1233387280 - ((2 * v278) & 0x9307FE20)) ^ *(_DWORD *)(v199 + 4 * (v274 ^ 0x3Au));
  v282 = *(_DWORD *)(v199 + 4 * (v273 ^ 0x96u));
  HIDWORD(v202) = v282 ^ 0x983FF10;
  LODWORD(v202) = v282 ^ 0x40000000;
  HIDWORD(v202) = (v202 >> 29) ^ 0x6615DA09;
  LODWORD(v202) = HIDWORD(v202);
  v283 = *(_DWORD *)(v199 + 4 * (v275 ^ 0xA2u)) ^ (((unsigned __int16)(v272 ^ 0xAB1D) >> 8)
                                                                    - 529863986
                                                                    - (((v272 ^ 0x7E22AB1D) >> 7) & 0x19C)) ^ *(_DWORD *)(v198 + 4 * (((unsigned __int16)(v272 ^ 0xAB1D) >> 8) ^ 0x6Du)) ^ (v276 + 1233387280 - ((2 * v276) & 0x9307FE20));
  LODWORD(v188) = (v202 >> 3) - 529863986 - ((2 * (v202 >> 3)) & 0xC0D5D59C);
  LODWORD(v194) = *(_DWORD *)&v201[4 * ((v272 ^ 0x7E22AB1D) >> 16)];
  v284 = v283 + 781336807 - ((2 * v283) & 0x5D2481CE);
  HIDWORD(v202) = v194 ^ 0x2A8;
  LODWORD(v202) = v194 ^ 0x4C8C4000;
  LODWORD(v194) = v202 >> 12;
  LODWORD(v182) = *(_DWORD *)&v201[4 * ((v275 ^ 0x33C8CCA2) >> 16)];
  HIDWORD(v202) = v182 ^ 0x2A8;
  LODWORD(v202) = v182 ^ 0x4C8C4000;
  v285 = HIDWORD(v407) ^ *(_DWORD *)&v203[4 * (HIBYTE(v275) ^ 0x17)] ^ (v280 + 781336807 - ((2 * v280) & 0x5D2481CE));
  v286 = BYTE1(v274);
  v287 = v188 ^ *(_DWORD *)(v198 + 4 * (BYTE1(v274) ^ 0xD1u)) ^ (v202 >> 12);
  v288 = v407 ^ *(_DWORD *)&v203[4 * (HIBYTE(v273) ^ 0x4F)] ^ v194 ^ (v281 + 781336807 - ((2 * v281) & 0x5D2481CE));
  v289 = HIDWORD(v402) ^ *(_DWORD *)&v203[4 * (HIBYTE(v274) ^ 0x1B)] ^ v284;
  LODWORD(v182) = *(_DWORD *)&v201[4 * (BYTE2(v289) ^ 0x7E)];
  HIDWORD(v202) = v182 ^ 0x2A8;
  LODWORD(v202) = v182 ^ 0x4C8C4000;
  v290 = v202 >> 12;
  LODWORD(v182) = *(_DWORD *)&v201[4 * (BYTE2(v288) ^ 1)];
  HIDWORD(v202) = v182 ^ 0x2A8;
  LODWORD(v202) = v182 ^ 0x4C8C4000;
  LODWORD(v182) = *(_DWORD *)&v203[4 * (HIBYTE(v272) ^ 0x5A)] ^ v476 ^ (v287 + 781336807 - ((2 * v287) & 0x5D2481CE));
  v291 = ((v202 >> 12) + 1233387280 - ((2 * (v202 >> 12)) & 0x9307FE20)) ^ *(_DWORD *)(v199
                                                                                     + 4
                                                                                     * (v285 ^ 0xC6u));
  LODWORD(v194) = ((BYTE1(v285) ^ 0x71) - 529863986 - ((2 * ((v285 >> 8) ^ 0xF25B71)) & 0x19C)) ^ *(_DWORD *)(v198 + 4 * (BYTE1(v285) ^ 0x1Cu));
  LODWORD(v194) = (v194 + 781336807 - ((2 * v194) & 0x5D2481CE)) ^ *(_DWORD *)&v203[4 * (HIBYTE(v288) ^ 0x1F)];
  v292 = *(_DWORD *)&v201[4 * (BYTE2(v285) ^ 0x5B)];
  HIDWORD(v202) = v292 ^ 0x2A8;
  LODWORD(v202) = v292 ^ 0x4C8C4000;
  v293 = v202 >> 12;
  v294 = v194 + 1233387280 - ((2 * v194) & 0x9307FE20);
  v295 = v286 ^ 0x73F4E0AF ^ v182;
  LODWORD(v194) = *(_DWORD *)&v201[4 * BYTE2(v295)];
  HIDWORD(v202) = v194 ^ 0x2A8;
  LODWORD(v202) = v194 ^ 0x4C8C4000;
  LODWORD(v188) = v202 >> 12;
  HIDWORD(v202) = v290 ^ ((BYTE1(v288) ^ 0x81) - 529863986 - 2 * (((v288 >> 8) ^ 0x1F0181) & 0xDE ^ (v288 >> 8) & 0x10)) ^ 0xD678EAEF ^ *(_DWORD *)(v198 + 4 * (BYTE1(v288) ^ 0xECu));
  LODWORD(v202) = HIDWORD(v202);
  LODWORD(v202) = (v202 >> 11) ^ __ROR4__(*(_DWORD *)&v203[4 * (HIBYTE(v285) ^ 0xF2)] ^ 0x8C881B59, 11) ^ 0xD490839A;
  HIDWORD(v202) = v202;
  LODWORD(v194) = v402 ^ *(_DWORD *)(v199 + 4 * (v288 ^ 0xB8u)) ^ ((BYTE1(v289) ^ 0xAA)
                                                                                    - 529863985
                                                                                    + ~(2
                                                                                      * (((v289 >> 8) ^ 0x967EAA) & 0xCF ^ (v289 >> 8) & 1))) ^ *(_DWORD *)&v203[4 * (BYTE3(v182) ^ 0x57)] ^ *(_DWORD *)(v198 + 4 * (BYTE1(v289) ^ 0xC7u)) ^ v293;
  LODWORD(v182) = HIDWORD(v398) ^ *(_DWORD *)&v203[4 * (HIBYTE(v289) ^ 0x96)] ^ (BYTE1(v295)
                                                                               - 529863986
                                                                               - ((v295 >> 7) & 0x19C)) ^ *(_DWORD *)(v198 + 4 * (BYTE1(v295) ^ 0x6Du)) ^ (v291 + 781336807 - ((2 * v291) & 0x5D2481CE));
  v296 = v398 ^ *(_DWORD *)(v199 + 4 * (v289 ^ 0x88u)) ^ v188 ^ v294;
  v297 = HIDWORD(v393) ^ *(_DWORD *)(v199 + 4 * v295) ^ ((v202 >> 21)
                                                                          + 1233387280
                                                                          - ((2 * (v202 >> 21)) & 0x9307FE20));
  v298 = *(_DWORD *)&v201[4 * (BYTE2(v194) ^ 0xFA)];
  HIDWORD(v202) = v298 ^ 0x2A8;
  LODWORD(v202) = v298 ^ 0x4C8C4000;
  v299 = v202 >> 12;
  BYTE2(v293) = BYTE2(v296) ^ 0x4A;
  LODWORD(v188) = *(_DWORD *)(v198 + 4 * (BYTE1(v182) ^ 0x96u)) ^ ((BYTE1(v182) ^ 0xFB)
                                                                   - 529863986
                                                                   - ((2 * ((v182 >> 8) ^ 0x3EA2FB)) & 0x19C));
  v300 = *(_DWORD *)&v201[4 * (BYTE2(v182) ^ 0xA2)];
  HIDWORD(v202) = v300 ^ 0x2A8;
  LODWORD(v202) = v300 ^ 0x4C8C4000;
  LODWORD(v188) = (v188 + 1233387280 - ((2 * v188) & 0x9307FE20)) ^ *(_DWORD *)(v199
                                                                              + 4 * (v296 ^ 0x75u));
  v301 = (((unsigned __int16)(v296 ^ 0xF075) >> 8) - 529863986 - (((v296 ^ 0xB54AF075) >> 7) & 0x19C)) ^ (v202 >> 12) ^ *(_DWORD *)(v198 + 4 * (((unsigned __int16)(v296 ^ 0xF075) >> 8) ^ 0x6Du));
  v302 = (v301 + 781336808 + ~((2 * v301) & 0x5D2481CE)) ^ *(_DWORD *)&v203[4 * (HIBYTE(v297) ^ 0xED)];
  v303 = *(_DWORD *)&v203[4 * (HIBYTE(v296) ^ 0x91)];
  v304 = *(_DWORD *)&v203[4 * (BYTE3(v182) ^ 0x3E)];
  LODWORD(v203) = *(_DWORD *)&v203[4 * (BYTE3(v194) ^ 0xA0)];
  v297 ^= 0xC9AF1D8F;
  v305 = *(_DWORD *)(v199 + 4 * v297);
  LODWORD(v182) = *(_DWORD *)(v199 + 4 * (v182 ^ 0x9Au));
  LODWORD(v199) = *(_DWORD *)(v199 + 4 * (v194 ^ 0x98u));
  v306 = BYTE1(v297);
  v307 = BYTE1(v297) - 529863986 - ((v297 >> 7) & 0x19C);
  v308 = *(_DWORD *)&v201[4 * BYTE2(v297)];
  v309 = *(_DWORD *)&v201[4 * BYTE2(v293)];
  HIDWORD(v202) = v309 ^ 0x2A8;
  LODWORD(v202) = v309 ^ 0x4C8C4000;
  v310 = (v194 >> 8) ^ 0xA0FA7F;
  LODWORD(v194) = *(_DWORD *)(v198 + 4 * (v306 ^ 0x6Du));
  LODWORD(v198) = *(_DWORD *)(v198 + 4 * (v310 ^ 0x6Du));
  v311 = v310 - 529863986 - ((2 * v310) & 0x19C);
  v312 = v393 ^ v182 ^ v299 ^ v307 ^ v303 ^ v194;
  LODWORD(v194) = HIDWORD(v388) ^ v311 ^ v304 ^ v198 ^ v305 ^ (v202 >> 12);
  v313 = v388 ^ v199 ^ (v302 + 1233387280 - ((2 * v302) & 0x9307FE20));
  v314 = HIDWORD(v381) ^ v203 ^ (v308 >> 12) ^ (v308 << 20) ^ (v188 + 781336807 - ((2 * v188) & 0x5D2481CE));
  v315 = *(_DWORD *)(v53 - 120);
  v316 = (char *)*(&off_1E2ABD050 + v315 - 919) - 12;
  v317 = (uint64_t)*(&off_1E2ABD050 + v315 - 941);
  LODWORD(v199) = *(_DWORD *)&v316[4 * (v313 ^ 7)] ^ *(_DWORD *)(v317
                                                                                + 4
                                                                                * (((unsigned __int16)(WORD2(v381) ^ (unsigned __int16)v203 ^ (v308 >> 12) ^ (v188 + 16615 - ((2 * v188) & 0x81CE))) >> 8) ^ 0xEBu)) ^ 0x90CB5886;
  v318 = v199 + 1014101643 - ((2 * v199) & 0x78E3ED16);
  LODWORD(v199) = *(_DWORD *)(v317 + 4 * (BYTE1(v312) ^ 0xCEu));
  v319 = *(_DWORD *)(v317 + 4 * ((unsigned __int16)(v313 ^ 0x6F07) >> 8));
  LODWORD(v188) = *(_DWORD *)(v317 + 4 * (BYTE1(v194) ^ 0xAEu));
  v320 = (char *)*(&off_1E2ABD050 + SHIDWORD(v369)) - 4;
  LODWORD(v203) = *(_DWORD *)&v320[4 * (HIBYTE(v313) ^ 0xEF)];
  LODWORD(v198) = *(_DWORD *)&v320[4 * (HIBYTE(v314) ^ 0xB7)];
  v321 = *(_DWORD *)&v320[4 * (BYTE3(v194) ^ 0xE8)] ^ v318;
  LODWORD(v320) = *(_DWORD *)&v320[4 * (HIBYTE(v312) ^ 0x56)];
  v322 = (char *)*(&off_1E2ABD050 + v315 - 965) - 4;
  LODWORD(v201) = *(_DWORD *)&v322[4 * (BYTE2(v314) ^ 0x38)];
  LODWORD(v182) = *(_DWORD *)&v322[4 * (BYTE2(v313) ^ 0x2A)];
  v323 = *(unsigned int *)&v322[4 * (BYTE2(v194) ^ 0x39)];
  v324 = *(_DWORD *)&v322[4 * (BYTE2(v312) ^ 0x9A)] ^ (v321 + 1163693089 - ((2 * v321) & 0x8AB91842));
  v325 = *(_DWORD *)&v316[4 * (v312 ^ 0x2B)];
  LODWORD(v194) = *(_DWORD *)&v316[4 * (v194 ^ 0xE8)];
  LODWORD(v322) = *(_DWORD *)&v316[4 * (v314 ^ 0x1F)];
  v326 = *(_DWORD *)(v53 - 140) ^ v473 ^ (v324 - ((2 * v324) & 0x657391C8) + 851036388);
  v327 = (uint64_t)*(&off_1E2ABD050 + (int)v369);
  a48[*(_QWORD *)(v53 - 256)] = *(_BYTE *)(v327 + (BYTE3(v326) ^ 0xD7)) ^ 0xB6;
  LODWORD(v320) = ((v201 ^ 0x8BC733AF ^ v319)
                 + 1014101643
                 - ((2 * (v201 ^ 0x8BC733AF ^ v319)) & 0x78E3ED16)) ^ v320;
  LODWORD(v320) = ((_DWORD)v320 + 1582360328 - ((2 * (_DWORD)v320) & 0xBCA1CE10)) ^ v194;
  LODWORD(v320) = *(_DWORD *)(v53 - 136) ^ HIDWORD(v473) ^ ((_DWORD)v320 - ((2 * (_DWORD)v320) & 0xBF7ED458) + 1606380076);
  v328 = (char *)*(&off_1E2ABD050 + SHIDWORD(v364)) - 12;
  a48[*(_QWORD *)(v53 - 224)] = (v328[v320 ^ 0xC7] - 77) ^ 0x5F;
  v329 = (char *)*(&off_1E2ABD050 + (int)v364) - 12;
  v330 = v329[BYTE1(v320) ^ 0x13];
  HIDWORD(v202) = v330 ^ 0x39;
  LODWORD(v202) = (v330 ^ 0x80) << 24;
  a48[6] = (v202 >> 30) ^ 0x40;
  LODWORD(v182) = ((v182 ^ v325 ^ 0x1B0C6B29)
                 + 1014101643
                 - 2 * ((v182 ^ v325 ^ 0x1B0C6B29) & 0x3C71F68F ^ (v182 ^ v325) & 4)) ^ v198;
  LODWORD(v182) = (v182 - ((2 * v182) & 0x9D377F1C) - 828653682) ^ v188;
  v331 = *(_DWORD *)(v53 - 132) ^ HIDWORD(v474) ^ (v182 - ((2 * (_DWORD)v182) & 0x44610932) + 573605017);
  LODWORD(v182) = v329[(unsigned __int16)(*(_WORD *)(v53 - 132) ^ WORD2(v474) ^ (v182
                                                                                                - ((2 * v182) & 0x932)
                                                                                                - 31591)) >> 8];
  HIDWORD(v202) = v182 ^ 0x39;
  LODWORD(v202) = (v182 ^ 0x80) << 24;
  a48[*(_QWORD *)(v53 - 216)] = (v202 >> 30) ^ 0x7E;
  v332 = (uint64_t)*(&off_1E2ABD050 + v315 - 902);
  a48[9] = *(_BYTE *)(v332 + (BYTE2(v326) ^ 0xFBLL)) ^ 0xA6;
  LODWORD(v199) = ((v199 ^ 0xF2EA4905 ^ v203)
                 + 1163693089
                 - ((2 * (v199 ^ 0xF2EA4905 ^ v203)) & 0x8AB91842)) ^ v323;
  LODWORD(v199) = v322 ^ (v199 + 1582360328 - ((2 * v199) & 0xBCA1CE10));
  LODWORD(v199) = *(_DWORD *)(v53 - 128) ^ v474 ^ (v199 - ((2 * v199) & 0xA8952D02) - 733309311);
  a48[*(_QWORD *)(v53 - 176)] = *(_BYTE *)(v332 + (BYTE2(v199) ^ 0xB8)) ^ 0x75;
  a48[*(_QWORD *)(v53 - 248)] = (v328[v326 ^ 0x1BLL] - 77) ^ 0x7D;
  a48[*(_QWORD *)(v53 - 232)] = *(_BYTE *)(v332 + (BYTE2(v320) ^ 3)) ^ 0xB;
  a48[*(_QWORD *)(v53 - 184)] = *(_BYTE *)(v327 + ((v320 >> 24) ^ 0x6DLL)) ^ 0x4E;
  LODWORD(v320) = v329[BYTE1(v326) ^ 0x92];
  HIDWORD(v202) = v320 ^ 0x39;
  LODWORD(v202) = (v320 ^ 0x80) << 24;
  a48[*(_QWORD *)(v53 - 160)] = (v202 >> 30) ^ 0xD2;
  v333 = *(_QWORD *)(v53 - 208);
  a48[v333] = *(_BYTE *)(v327 + (BYTE3(v331) ^ 0x53)) ^ 0xA2;
  a48[*(_QWORD *)(v53 - 192)] = (v328[v331 ^ 0x95] - 77) ^ 0xAF;
  a48[*(_QWORD *)(v53 - 240)] = (v328[v199 ^ 0x64] - 77) ^ 0x27;
  a48[*(_QWORD *)(v53 - 168)] = *(_BYTE *)(v327 + (BYTE3(v199) ^ 0x6ELL)) ^ 0x34;
  LODWORD(v320) = v329[BYTE1(v199) ^ 0x1FLL];
  HIDWORD(v202) = v320 ^ 0x39;
  LODWORD(v202) = (v320 ^ 0x80) << 24;
  a48[*(_QWORD *)(v53 - 200)] = (v202 >> 30) ^ 0x58;
  a48[*(_QWORD *)(v53 - 152)] = *(_BYTE *)(v332 + (BYTE2(v331) ^ 0xC8)) ^ 0x24;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *))(*(_QWORD *)(a50 + 8 * ((1246 * ((((_DWORD)v333 - 1111059598 - 2 * (((_DWORD)v333 + 16) & 0x3DC6936A)) ^ 0xBDC69362) < v381)) ^ (v315 - 563))) - 12))(166, 1582360328, v331, v326, v323, v332, v328, 162, v335, v336, v337, v338, v339, v340, v342, v344, v347, v350, v353,
           v356,
           v359,
           a16,
           a17,
           a18,
           v364,
           v369,
           v375,
           v381,
           v388,
           v393,
           v398,
           v402,
           v407,
           v413,
           v419,
           v422,
           v428,
           v433,
           v438,
           v442,
           v448,
           v452,
           v456,
           v460,
           v464,
           v466,
           v468,
           v470,
           v471,
           v472,
           v473,
           v474,
           v476,
           a48);
}

void sub_18FE85FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61)
{
  uint64_t v61;

  *(_DWORD *)(v61 - 128) = a58 ^ 0xF78CDAD;
  *(_DWORD *)(v61 - 140) = a60 ^ 0x89E0A94B;
  *(_DWORD *)(v61 - 132) = a61 ^ 0x56264D61;
  *(_DWORD *)(v61 - 136) = a59 ^ 0xA6E3F530;
  JUMPOUT(0x18FE842FCLL);
}

uint64_t sub_18FE86050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,int a25,int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  uint64_t v60;

  return ((uint64_t (*)(void))(*(_QWORD *)(v60
                                        + 8
                                        * (a60 ^ (221
                                                * (((2 * (a26 - ((2 * a23) & 0x80194CBE) + 1204463299)) & 0x5FBD7D9C ^ 0x194C9C)
                                                 + ((a26 - ((2 * a23) & 0x80194CBE) + 1204463299) ^ 0xEFD21891)
                                                 - 106596067 != 696530923))))
                            - 4))();
}

uint64_t sub_18FE86128(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((v4 + v3 + ((2 * a3) ^ 0x8B8u) - 803126991 - 1051 < 8) * (a3 - 1404)) ^ a3))
                            - 8))();
}

uint64_t sub_18FE8618C(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((a3 - 1396) ^ (739 * ((a1 + a7 - 16) > 0xFFFFFFEF))))
                            - (a3 - 566)
                            + 1040))();
}

uint64_t sub_18FE861C4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  BOOL v23;
  char v26;

  v12 = (v9 + v8 + a1);
  v13 = v12 + v11 + 1;
  v14 = ((_BYTE)v9 + (_BYTE)v8 + (_BYTE)a1) & 0xF;
  v15 = v14 - v12;
  v16 = v7 + v15;
  ++v14;
  v17 = v7 + v14;
  v18 = v6 + v15;
  v19 = v6 + v14;
  v20 = v5 + v15;
  v21 = v5 + v14;
  v23 = v17 > v11 && v16 < v13;
  if (v19 > v11 && v18 < v13)
    v23 = 1;
  v26 = v21 > v11 && v20 < v13 || v23;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8 * ((484 * ((v26 ^ (a5 - 1)) & 1)) ^ a5))
                            - 12))();
}

uint64_t sub_18FE86250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                       + 8
                                                                       * (int)(((((((a5 + 661165337) & 0xD8976EEE) - 258) ^ 0x1A0)
                                                                               - 549)
                                                                              * (v5 < 0x10)) ^ (a5 + 661165337) & 0xD8976EEE))
                                                           - 8))(a1, a2, 0);
}

uint64_t sub_18FE86298(int a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16x4_t v21;
  int8x16x4_t v22;

  v21.val[1].i64[0] = ((_BYTE)a2 + 11) & 0xF;
  v21.val[1].i64[1] = ((_BYTE)a2 + 10) & 0xF;
  v21.val[2].i64[0] = ((_BYTE)a2 + 9) & 0xF;
  v21.val[2].i64[1] = ((_BYTE)a2 + 8) & 0xF;
  v21.val[3].i64[0] = ((_BYTE)a2 + 7) & 0xF;
  v21.val[3].i64[1] = ((_BYTE)a2 + 6) & 0xF;
  v22.val[0].i64[0] = ((_BYTE)a2 + 5) & 0xF;
  v22.val[0].i64[1] = ((_BYTE)a2 + 4) & 0xF;
  v22.val[1].i64[0] = (a2 + 3) & 0xF;
  v22.val[1].i64[1] = (a2 + 2) & 0xF;
  v22.val[2].i64[0] = (a2 + 1) & 0xF;
  v22.val[2].i64[1] = a2 & 0xF;
  v22.val[3].i64[0] = (a2 - 1) & 0xF;
  v22.val[3].i64[1] = ((_BYTE)a2 + 14) & 0xF;
  v14 = a1 + a6 + v11 + v10 - 1254;
  v15.i64[0] = 0x505050505050505;
  v15.i64[1] = 0x505050505050505;
  v16.i64[0] = 0xF7F7F7F7F7F7F7F7;
  v16.i64[1] = 0xF7F7F7F7F7F7F7F7;
  v21.val[0].i64[0] = v14 & 0xF;
  v21.val[0].i64[1] = ((_BYTE)a2 + 12) & 0xF;
  v17.i64[0] = vqtbl4q_s8(v21, (int8x16_t)xmmword_190443D40).u64[0];
  v17.i64[1] = vqtbl4q_s8(v22, (int8x16_t)xmmword_190443D40).u64[0];
  v18 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v13 - 15 + v14), *(int8x16_t *)(v8 + v21.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v7 + v21.val[0].i64[0] - 15), *(int8x16_t *)(v6 + v21.val[0].i64[0] - 15))));
  v19 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v18, v18, 8uLL), v16), vmulq_s8(v17, v15)));
  *(int8x16_t *)(v13 - 15 + v14) = vextq_s8(v19, v19, 8uLL);
  return (*(uint64_t (**)(void))(v12 + 8 * ((1685 * ((v9 & 0xFFFFFFF0) == 16)) ^ a4)))();
}

void sub_18FE863F0()
{
  JUMPOUT(0x18FE86374);
}

uint64_t sub_18FE863FC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((((a4 + 56) ^ 0x4C2) - 207) * (v4 == a3)) ^ (a4 + 289))) - 8))();
}

uint64_t sub_18FE8642C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                                + 8
                                                                                * (int)(a7 ^ (840 * ((v7 >> 3) & 1))))
                                                                    - (((a7 - 218) | 0x240) ^ ((a7 + 814) | 0x10u) ^ 0x654)))(a1, a2, a3, (a2 - a3));
}

uint64_t sub_18FE8646C(int a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  char v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  int v66;
  char v67;
  uint64_t v68;
  int8x16x4_t v70;

  *(_DWORD *)(v63 - 120) = v59;
  v65 = v59 & 0xFFFFFFF8;
  *(_DWORD *)(v63 - 128) = v65;
  v66 = -a3;
  v67 = v62 + v61 + v60;
  v68 = (v62 + v61 + a1 + v66);
  v70.val[0].i64[0] = ((_BYTE)v62 + (_BYTE)v61 + (_BYTE)a1 + (_BYTE)v66) & 0xF;
  v70.val[0].i64[1] = (v67 - 29 + (_BYTE)v66) & 0xF;
  v70.val[1].i64[0] = (v67 - 30 + (_BYTE)v66) & 0xF;
  v70.val[1].i64[1] = (v67 - 31 + (_BYTE)v66) & 0xF;
  v70.val[2].i64[0] = (v67 - 32 + (_BYTE)v66) & 0xF;
  v70.val[2].i64[1] = (v67 - 33 + (_BYTE)v66) & 0xF;
  v70.val[3].i64[0] = (v67 + (_BYTE)v66 + (((_BYTE)a5 - 69) & 0xDE)) & 0xF;
  v70.val[3].i64[1] = (v67 - 35 + (_BYTE)v66) & 0xF;
  *(int8x8_t *)(v64 - 7 + v68) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v64 - 7 + v68), *(int8x8_t *)(v58 + (v68 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v57 + (v68 & 0xF) - 7), *(int8x8_t *)(v56 + (v68 & 0xF) - 7)))), (int8x8_t)0xF7F7F7F7F7F7F7F7), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v70, (int8x16_t)xmmword_190443D50), (int8x8_t)0x505050505050505)));
  return (*(uint64_t (**)(__n128))(a56 + 8 * (((8 - v65 == v66) | (2 * (8 - v65 == v66))) ^ a5)))((__n128)xmmword_190443D50);
}

void sub_18FE865A8()
{
  JUMPOUT(0x18FE864D8);
}

uint64_t sub_18FE865B0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (v0 ^ (755 * (*(_DWORD *)(v2 - 120) == *(_DWORD *)(v2 - 128)))))
                            - ((((v0 + 690949472) & 0xD6D0F5DD) - 12) ^ v0 ^ 0x4C2u)))();
}

uint64_t sub_18FE86604(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = (a4 - 696531139);
  *(_BYTE *)(v11 + v12) ^= *(_BYTE *)(v9 + (v12 & 0xF)) ^ *(_BYTE *)(v8 + (v12 & 0xF)) ^ *(_BYTE *)(v7 + (v12 & 0xF)) ^ (5 * (v12 & 0xF)) ^ 0xF7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((49 * (a4 - 1 == v6)) ^ (a6 - 512))) - 12))();
}

void sub_18FE86668()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 169712951)
    v1 = 446849184;
  else
    v1 = -446874760;
  *(_DWORD *)(v2 + 40) = v1;
}

void sub_18FE866CC(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 ^ (535753261 * ((-1040680992 - (a1 | 0xC1F877E0) + (a1 | 0x3E07881F)) ^ 0x34F38630));
  v3 = *(_QWORD *)(a1 + 8);
  v4 = (535753261 * ((((&v2 | 0xC9664EA2) ^ 0xFFFFFFFE) - (~&v2 | 0x3699B15D)) ^ 0x3C6DBF72)) ^ (v1 + 334);
  sub_18FE58F28((uint64_t)&v2);
  __asm { BR              X8 }
}

void sub_18FE867D4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;

  if ((*(_DWORD *)(v2 - 0xFB9CCB0B87C5698) - 1903378045) >= 0x7FFFFFFF)
    v3 = v1;
  else
    v3 = v1 + 2;
  *(_DWORD *)(v0 + 16) = v3;
}

void sub_18FE86840(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = 1755732067 * (a1 ^ 0xDEC6BDDB);
  v2 = *(_DWORD *)(a1 + 8) + v1;
  v3 = (*(_BYTE *)(a1 + 12) - v1);
  ((void (*)(char *, void (*)()))*(&off_1E2ABD050 + v2 - 979))((char *)*(&off_1E2ABD050 + (int)(v2 & 0xFB8BFB9C)) - 12, sub_18FE97598);
  v4 = *(_QWORD *)((char *)*(&off_1E2ABD050 + (v2 ^ 0x40C)) - 4);
  v6 = v2 - 1374699841 * ((2 * (&v5 & 0x6E252130) - &v5 - 1847927090) ^ 0xFC2EC6C7) + 84;
  v5 = v4;
  sub_18FE7DB20((uint64_t)&v5);
  __asm { BR              X9 }
}

uint64_t sub_18FE86970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, char a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  a17 = 73 * ((~&a16 & 0x78 | &a16 & 0x87) ^ 0x38) + 119;
  a16 = (v17 - 271) ^ (1178560073 * ((~&a16 & 0x5DB0BA78 | &a16 & 0xA24F4587) ^ 0x6FA6BA38));
  sub_18FE66DAC((uint64_t)&a16);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * (((**(_DWORD **)(v19 + 8 * (((v17 - 945) | 0x59) - 251)) == ((((v17 - 945) | 0x59) + 749089700) & 0xD359CFB3 ^ 0x4B3)) * (((((v17 - 945) | 0x59) - 345) | 0x98) ^ 0xB5)) ^ ((v17 - 945) | 0x59)))
                                                                                                - 12))(v20, v21, v22, v23, v24, v25, v26);
}

uint64_t sub_18FE86A58@<X0>(int a1@<W8>)
{
  uint64_t *v1;
  _DWORD *v2;
  _DWORD *v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  _QWORD *v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t (*v13)(uint64_t, _BYTE *, _DWORD *);
  int v14;
  int v15;
  uint64_t v16;
  _BYTE *v17;
  int v18;
  unsigned int v19;
  uint64_t result;
  uint64_t v21;
  _BYTE v22[30];
  _BYTE v23[140];

  v8 = *(unsigned int **)(v6 + 8 * (a1 ^ 0x4A8));
  v9 = *v8;
  v10 = *(_QWORD **)(v6 + 8 * (a1 - 1202));
  v11 = (_BYTE *)*v10;
  v22[0] = *(_BYTE *)*v10 - 103;
  v22[1] = v11[1] - 103;
  v22[2] = v11[2] - 103;
  v22[3] = v11[3] - 103;
  v22[4] = v11[4] - 103;
  v22[5] = v11[5] - 103;
  v22[6] = v11[6] - 103;
  v22[7] = v11[7] - 103;
  v22[8] = v11[8] - 103;
  v22[9] = v11[9] - 103;
  v22[10] = v11[10] - 103;
  v22[11] = v11[11] - 103;
  v22[12] = v11[12] - 103;
  v22[13] = v11[13] - 103;
  v22[14] = v11[14] - 103;
  v22[15] = v11[15] - 103;
  v22[16] = v11[16] - 103;
  v22[17] = v11[17] - 103;
  v22[18] = v11[18] - 103;
  v22[19] = v11[19] - 103;
  v22[20] = v11[20] - 103;
  v22[21] = v11[21] - 103;
  v12 = (_BYTE *)*v10;
  v22[22] = v12[22] - 103;
  v22[23] = v12[23] - 103;
  v22[24] = v12[24] - 103;
  v22[25] = v12[25] - 103;
  v22[26] = v12[26] - 103;
  v22[27] = v12[27] - 103;
  v22[28] = v12[28] - 103;
  v22[29] = v12[29] - 103;
  v13 = *(uint64_t (**)(uint64_t, _BYTE *, _DWORD *))(v6 + 8 * (a1 ^ 0x47F));
  v14 = v13(v9, v22, v2);
  v15 = ((2 * v14) & 0x2DBE6BFC) + (v14 ^ 0x16DF35FE);
  if (v15 != 383727102)
  {
    if (v15 == 383728204)
    {
      v16 = *v8;
      v17 = *(_BYTE **)(*(_QWORD *)(v6 + 8 * (v4 ^ 0x4EB)) - 4);
      v23[0] = *v17 - 59;
      v23[1] = v17[1] - 59;
      v23[2] = v17[2] - 59;
      v23[3] = v17[3] - 59;
      v23[4] = v17[4] - 59;
      v23[5] = v17[5] - 59;
      v23[6] = v17[6] - 59;
      v23[7] = v17[7] - 59;
      v23[8] = v17[8] - 59;
      v23[9] = v17[9] - 59;
      v23[10] = v17[10] - 59;
      v23[11] = v17[11] - 59;
      v23[12] = v17[12] - 59;
      v23[13] = v17[13] - 59;
      v23[14] = v17[14] - 59;
      v23[15] = v17[15] - 59;
      v23[16] = v17[16] - 59;
      v23[17] = v17[17] - 59;
      v23[18] = v17[18] - 59;
      v23[19] = v17[19] - 59;
      v18 = v13(v16, v23, v2);
      v19 = (v18 ^ 0xDF5FF5FF) + 921649023 + ((2 * v18) & 0xBEBFEBFE);
    }
    else
    {
      v19 = v15 - 9437312;
    }
    __asm { BR              X8 }
  }
  *(_DWORD *)(v7 + 348) |= (v4 - 1049) ^ 0x90;
  *(_DWORD *)(v7 + 48) = 946918715;
  result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, _DWORD *))(v6 + 8 * (v4 - 1096)))(*v2, v7 + 336, v7 + 340, v7 + 344, v3);
  v21 = *v1;
  *(_DWORD *)(v1[3] - 0x1363B1D6ED5C3F03) = *v2;
  *(_DWORD *)(v21 - 0x10AB3F3F18D17CD1) = *v3;
  *((_DWORD *)v1 + 4) = 446849184;
  return result;
}

void sub_18FE86E78()
{
  uint64_t v0;
  int v1;
  BOOL v2;
  int v3;

  v0 = MEMORY[0x1E0C80A78]();
  if (*(_QWORD *)v0)
    v2 = *(_QWORD *)(v0 + 8) == 0x2185BF99DEDD744CLL;
  else
    v2 = 1;
  v3 = v2;
  v1 = *(_DWORD *)(v0 + 20) ^ (1755732067 * (((v0 | 0xFD508F6) - v0 + (v0 & 0xF02AF709)) ^ 0xD113B52D));
  __asm { BR              X8 }
}

void sub_18FE86F94()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 28) = v0 | 4;
}

uint64_t sub_18FE86F9C()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  unint64_t v8;
  int v9;

  LODWORD(STACK[0x41C]) = v1;
  STACK[0x260] = (unint64_t)&STACK[0x1363B1D6ED5C4377];
  *(_QWORD *)(v5 - 168) = &STACK[0x1363B1D6ED5C4377];
  STACK[0x258] = (unint64_t)&STACK[0x10AB3F3F18D18175];
  *(_QWORD *)(v5 - 192) = &STACK[0x10AB3F3F18D18175];
  *(_BYTE *)(v5 - 180) = ((~(v5 + 64) & 0xF | (v5 + 64) & 0xF0) ^ 0xD4) * v0 + 4;
  *(_DWORD *)(v5 - 184) = v4 - ((~(v5 - 192) & 0x7DD8840F | (v5 - 192) & 0x82277BF0) ^ 0xA31E39D4) * v0 + 500;
  v6 = *(uint64_t (**)(uint64_t))(v2 + 8 * (int)(v4 & 0xD8D44D8E));
  STACK[0x250] = (unint64_t)v6;
  STACK[0x410] = v3;
  v7 = v6(v5 - 192);
  v8 = STACK[0x410];
  v9 = *(_DWORD *)(v5 - 176);
  LODWORD(STACK[0x55C]) = v9;
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((1919 * (v9 == ((v4 + 30) ^ 0x1AA26297 ^ (v4 - 295337172) & 0x119A7AFE))) ^ v4)))(v7);
}

#error "18FE877A8: call analysis failed (funcsize=307)"

uint64_t sub_18FE877AC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  _BOOL4 v9;

  STACK[0x400] = v1;
  STACK[0x350] = v4;
  STACK[0x4C0] = 0;
  v6 = 1755732067 * ((((v5 - 192) | 0x7173BC5E) - (v5 - 192) + ((v5 - 192) & 0x8E8C43A0)) ^ 0xAFB50185);
  *(_QWORD *)(v5 - 184) = STACK[0x268];
  *(_QWORD *)(v5 - 176) = v2;
  *(_QWORD *)(v5 - 168) = STACK[0x270];
  *(_DWORD *)(v5 - 192) = v3 - v6 - 249;
  *(_DWORD *)(v5 - 188) = v6 ^ 0xC7ACDD1C;
  v7 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v0 + 8 * (v3 - 1199)) - 8);
  STACK[0x278] = (unint64_t)v7;
  v8 = v7(v5 - 192);
  v9 = *(_DWORD *)(v5 - 160) != (v3 ^ 0x1AA2613D ^ (v3 + 155));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x410] + 8 * ((v9 | (16 * v9)) ^ v3)) - 4))(v8);
}

uint64_t sub_18FE8787C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;

  LODWORD(STACK[0x590]) = v10;
  STACK[0x520] = STACK[0x408];
  LODWORD(STACK[0x55C]) = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9
                                                                                 + 8
                                                                                 * (((((v8 ^ 0x83) - 132457073) & 0x7E522EF ^ 0x25E)
                                                                                   * (v10 == a8)) ^ v8 ^ 0x83))
                                                                     - 12))(a1, a2, a3, 3848092537);
}

uint64_t sub_18FE87D84()
{
  uint64_t (*v0)(void);
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  unint64_t v5;

  v4 = v0();
  v5 = STACK[0x410];
  LODWORD(STACK[0x590]) = v2;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * (((((v1 - 93) | 0x143) - 105) * v3) ^ (v1 + 422)))
                                          - 12))(v4);
}

uint64_t sub_18FE87DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  int v38;
  uint64_t v39;

  LODWORD(STACK[0x440]) = 2;
  STACK[0x490] = 0;
  LODWORD(STACK[0x51C]) = 0;
  LODWORD(STACK[0x5FC]) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * ((1294 * (((a8 + 26) ^ (((a8 ^ 0x1C9) & v38) == 0)) & 1)) ^ a8)) - 4))(a1, a2, a3, a4, a5, v37 + 797, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_18FE87E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  uint64_t (*v64)(__n128);
  int v66;
  unint64_t v67;
  int v68;

  *(_DWORD *)(STACK[0x350] + 360) = 1395792846;
  v55 = ((uint64_t (*)(uint64_t, uint64_t, unint64_t *, unint64_t, _QWORD, uint64_t, unint64_t *, unint64_t *))*(&off_1E2ABD050 + (v50 ^ 0xAC)))(v52, 2, &STACK[0x440], STACK[0x5C8], (v53 - 1066855061), a6, &STACK[0x490], &STACK[0x51C]);
  v57 = ((2 * v55) & 0xEADEDFFA) + (v55 ^ 0x756F6FFD);
  if (v57 == -2056294400)
  {
    LODWORD(STACK[0x590]) = -446874728;
    v66 = STACK[0x41C];
    v67 = STACK[0x410];
  }
  else
  {
    if (v57 == 1970237437)
    {
      v58 = LODWORD(STACK[0x41C]) + 1294;
      STACK[0x378] = STACK[0x490];
      LODWORD(STACK[0x370]) = STACK[0x51C];
      v59 = STACK[0x410];
      STACK[0x288] = v51 + 1053;
      v60 = v58 ^ 0x7A0u;
      LODWORD(STACK[0x56C]) = 2107540358;
      v61 = STACK[0x408];
      v62 = (char *)&STACK[0x680] + STACK[0x408];
      v63 = v62 - 0x535FF9B432179B1;
      STACK[0x2A0] = STACK[0x408] + 4144;
      STACK[0x520] = v61 + 4144;
      *(_QWORD *)v63 = 0x6370646600;
      v63[8] = 1;
      STACK[0x208] = (unint64_t)(v62 - 0x535FF9B432179B1);
      STACK[0x400] = STACK[0x5D8];
      STACK[0x3A0] = (unint64_t)&v62[(v60 ^ 0xFACA0064BCDE8EACLL)
                                          + 16
                                          + ((16 * ((_BYTE)v62 + (v60 ^ 0xAC)) + 16) & 0x20)];
      STACK[0x3B8] = (unint64_t)(v62 - 0x535FF9B432179A8);
      v64 = (uint64_t (*)(__n128))(*(_QWORD *)(v59 + 8 * (int)(v60 ^ 0x413))
                                           - (((_DWORD)v60 - 275) | 0x4B3u)
                                           + 1515);
      STACK[0x3B0] = (unint64_t)*(&off_1E2ABD050 + (int)(v60 ^ 0x2B1));
      STACK[0x3E8] = (unint64_t)*(&off_1E2ABD050 + (int)(v60 ^ 0x2F0));
      STACK[0x3E0] = (unint64_t)*(&off_1E2ABD050 + (int)(v60 ^ 0x206));
      return v64((__n128)0);
    }
    v68 = 3804331 * ((((v54 - 192) | 0xC01644DD) - ((v54 - 192) & 0xC01644DD)) ^ 0x3A88B78B);
    v66 = STACK[0x41C];
    *(_DWORD *)(v54 - 192) = (v57 - ((2 * v57 + 354492422) & 0x3544C140) - 1523388253) ^ v68;
    *(_DWORD *)(v54 - 188) = v66 - v68 + 1517;
    *(_QWORD *)(v54 - 184) = a50;
    v55 = sub_18FE6D658((_DWORD *)(v54 - 192));
    v67 = STACK[0x410];
  }
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67
                                                                                          + 8
                                                                                          * ((19 * (STACK[0x490] != 0)) ^ (v66 + 612)))
                                                                              - ((v66 ^ 0x1B4u)
                                                                               + 504)
                                                                              + 837))(v55, STACK[0x490], v56, 3848092537);
}

uint64_t sub_18FE8C350@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;

  v2 = a2 + 507;
  v3 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD))STACK[0x2C0])(*(unsigned int *)STACK[0x2B8], a1, LODWORD(STACK[0x51C]));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x410]
                                                      + 8
                                                      * (int)((877
                                                             * (((LODWORD(STACK[0x590]) == 446849184) ^ (v2 + 111)) & 1)) ^ v2))
                                          - (v2 ^ 0x54CLL)))(v3);
}

uint64_t sub_18FE8C41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v16;
  uint64_t v17;

  LODWORD(STACK[0x640]) = a16;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((STACK[0x448] != 0x48247A308694277ELL) | (2 * (STACK[0x448] != 0x48247A308694277ELL)) | (v16 + 355))) - (((v16 - 196) | 0x48u) + (unint64_t)((v16 - 291476886) & 0x115F96F8)) + 677))(a1, a2, a3, 3848092537, a5, a6, a7, 446849184);
}

void sub_18FE8E648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,int a26,int a27,unsigned __int8 a28,__int16 a29,unsigned __int8 a30,int a31,int a32,int a33,unsigned __int8 a34,int a35,int a36,int a37)
{
  char v37;
  char v38;

  LODWORD(STACK[0x370]) = (a25 | ((a33 ^ 0xC) << 24) | ((a28 ^ 0xEF) << 8) | ((a34 ^ 0x92) << 16)) ^ 0xD4CDC38F;
  LODWORD(STACK[0x284]) = a32 ^ 0xBE5F6197;
  LODWORD(STACK[0x3A0]) = (a31 | (a35 << 8) | (a27 << 24) | ((a36 ^ 0xDC) << (((v37 ^ 0xAF) - 101) ^ 0x75))) ^ 0x6F9B771F;
  LODWORD(STACK[0x3C0]) = ((((a37 ^ 0x47) << 16) + ((a26 ^ 0x1A) << 24)) | a30 | ((LODWORD(STACK[0x3E0]) ^ v38) << 8)) ^ 0x208230BD;
  JUMPOUT(0x18FE8C760);
}

uint64_t sub_18FE8E73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  unint64_t v19;
  char v20;

  v19 = STACK[0x4D8];
  STACK[0x620] -= 32;
  v20 = ((a19 - 89) ^ 0x51) - 56;
  *(_BYTE *)(v19 + ((a19 - 345) ^ 0x9B5E2651) + 1688328904) = *(_BYTE *)(a14 + ((a19 - 345) ^ 0x9B5E2651) + 1688328904) ^ *((_BYTE *)*(&off_1E2ABD050 + (a19 ^ 0x2A9)) + (v20 & 0xF) - 4) ^ *((_BYTE *)*(&off_1E2ABD050 + (a19 ^ 0x2FA)) + (v20 & 0xF) - 2) ^ (99 * (v20 & 0xF)) ^ *((_BYTE *)*(&off_1E2ABD050 + a19 - 349) + (v20 & 0xF) + 3) ^ 0xF7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * a19) - 8))();
}

void sub_18FE8E810()
{
  JUMPOUT(0x18FE8E784);
}

uint64_t sub_18FE8E818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  STACK[0x520] -= 16;
  return (*(uint64_t (**)(void))(a3 + 8 * (int)((v3 + 1027340327) & 0xC2C407E7 ^ v3 ^ 0x12D)))();
}

uint64_t sub_18FE8E858@<X0>(uint64_t a1@<X2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _BYTE *a10)
{
  _BYTE *v10;
  unsigned int v11;

  v10 = (_BYTE *)STACK[0x500];
  v11 = (0x2EBD74Du >> (((a2 - 49) & 0x6B) - 8)) ^ 2;
  a10[12] = v11 - ((2 * v11) & 0xEF) - 9;
  a10[13] = -9;
  a10[14] = -9;
  a10[15] = -10;
  v10[16] ^= *a10 ^ 0xF7;
  v10[17] ^= a10[1] ^ 0xF7;
  v10[18] ^= a10[2] ^ 0xF7;
  v10[19] ^= a10[3] ^ 0xF7;
  v10[20] ^= a10[4] ^ 0xF7;
  v10[21] ^= a10[5] ^ 0xF7;
  v10[22] ^= a10[6] ^ 0xF7;
  v10[23] ^= a10[7] ^ 0xF7;
  v10[24] ^= a10[8] ^ 0xF7;
  v10[25] ^= a10[9] ^ 0xF7;
  v10[26] ^= a10[10] ^ 0xF7;
  v10[27] ^= a10[11] ^ 0xF7;
  v10[28] ^= a10[12] ^ 0xF7;
  v10[29] ^= a10[13] ^ 0xF7;
  v10[30] ^= a10[14] ^ 0xF7;
  v10[31] ^= a10[15] ^ 0xF7;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a1 + 8 * ((a2 + 1142) ^ 0x92)) - 8))(4294967275, 215);
}

void sub_18FE8EA90()
{
  JUMPOUT(0x18FE8E8A4);
}

uint64_t sub_18FE8EA98(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;

  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (((LODWORD(STACK[0x4B4]) == ((v5 - 315) ^ 0x3F96EA70)) * (((v5 + 830 + a4) & a5) - 495)) ^ (v5 + 830))))();
}

uint64_t sub_18FE8EAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;

  v8 = *(unsigned __int8 *)(v6 + v5 + v7 + 13 * (v3 ^ v4) - 209);
  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * (((v8 == 247) ^ (v3 - 1)) & 1 | (8
                                                                                          * (((v8 == 247) ^ (v3 - 1)) & 1)) | v3))
                            - 12))();
}

uint64_t sub_18FE8EB38@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W4>, int a4@<W8>)
{
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(a1 + 8 * (((v5 == ((v4 - 315) ^ a4)) * (((v4 + 830 + a2) & a3) - 495)) ^ (v4 + 830))))();
}

uint64_t sub_18FE8EB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  int v38;
  int v39;
  unint64_t v40;
  unint64_t v41;

  LODWORD(STACK[0x4B4]) = 1066855061;
  v39 = 2 * (v38 ^ 0x88);
  v40 = STACK[0x500];
  v41 = ((v39 + 829) ^ 0xFFFFFFFFFFFFFBE8) + 336;
  STACK[0x478] = v41;
  *(_BYTE *)(v40 + v41) = (a38 ^ 0xBA) * (a38 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((1643 * (STACK[0x478] == 0)) ^ v39)) - 8))();
}

void sub_18FE8F03C()
{
  JUMPOUT(0x18FE8EFFCLL);
}

uint64_t sub_18FE8F044()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;

  v2 = ((uint64_t (*)(void))STACK[0x2B0])();
  v3 = STACK[0x410];
  LODWORD(STACK[0x640]) = v1;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8 * ((42 * (((v1 == 446849184) ^ (v0 - 86)) & 1)) ^ v0)))(v2);
}

uint64_t sub_18FE8F08C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = STACK[0x200];
  v4 = STACK[0x400];
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (v1 - 186)) - 8);
  STACK[0x3E0] = STACK[0x200] + 2353;
  STACK[0x3C8] = v4 + 49;
  STACK[0x3C0] = v3 + 2333;
  STACK[0x3B8] = v4 + 29;
  STACK[0x3B0] = v3 + 2313;
  STACK[0x3A8] = v4 + 9;
  return v5(a1, 907, 1539, 3848092537);
}

void sub_18FE8F0C0()
{
  JUMPOUT(0x18FE876E8);
}

uint64_t sub_18FE8F13C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (v1 + 1994782131) & 0x891A086D;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x2B0])(a1 - 0x48247A308694277ELL);
  v5 = STACK[0x410];
  STACK[0x520] -= 16;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5
                                                      + 8
                                                      * (int)((642
                                                             * (v2 == ((21 * (v3 ^ 0x50) - 732344256) & 0x2BA6ABF7 ^ 0x1AA26045))) ^ (21 * (v3 ^ 0x50))))
                                          - 4))(v4);
}

uint64_t sub_18FE8F1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int v52;

  v48 = 3804331 * ((v47 - 192) ^ 0xFA9EF356);
  *(_QWORD *)(v47 - 136) = a45;
  *(_DWORD *)(v47 - 152) = v48 + 1453555206;
  *(_DWORD *)(v47 - 144) = v45 - v48 - 960;
  v49 = STACK[0x400];
  *(_QWORD *)(v47 - 168) = a17;
  *(_QWORD *)(v47 - 160) = 0;
  *(_QWORD *)(v47 - 192) = 0;
  *(_QWORD *)(v47 - 184) = a43;
  *(_QWORD *)(v47 - 176) = v49;
  v50 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v46 + 8 * (v45 - 1141)) - 4))(v47 - 192);
  v51 = STACK[0x410];
  v52 = *(_DWORD *)(v47 - 148);
  LODWORD(STACK[0x644]) = v52;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v51 + 8 * ((680 * (v52 == 446849184)) ^ v45)) - 4))(v50);
}

void sub_18FE8F298()
{
  JUMPOUT(0x18FE8F2C0);
}

void sub_18FE8F304()
{
  JUMPOUT(0x18FE8F33CLL);
}

void sub_18FE8F3B8()
{
  int v0;

  LODWORD(STACK[0x638]) = v0;
  JUMPOUT(0x18FE8F338);
}

uint64_t sub_18FE8F3EC()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;

  STACK[0x408] = v0;
  v3 = LODWORD(STACK[0x41C]) - 121;
  v4 = STACK[0x54C];
  *(_DWORD *)(STACK[0x668] + 4 * ((v4 - 207723714) >> ((LOBYTE(STACK[0x41C]) - 121) ^ 0x6E))) = v1;
  LODWORD(STACK[0x54C]) = v4 + 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((162 * (v4 - 207723710 + ((v3 - 104) | 2u) - 6 < 0x40)) ^ v3))
                            - 12))();
}

uint64_t sub_18FE90ACC@<X0>(char a1@<W1>, int a2@<W2>, int a3@<W7>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  int v6;
  char v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  unint64_t v12;

  v11 = *(_DWORD *)(a4 + 4 * (v9 + v6 - 8)) ^ *(_DWORD *)(a4 + 4 * (v9 + v6 - 3));
  HIDWORD(v12) = *(_DWORD *)(a4 + 4 * (v9 + v6 - 16)) ^ *(_DWORD *)(a4
                                                                                  + 4 * (v9 + v6 - 14)) ^ (v11 + a3 - ((v11 << (((v4 + 28) | v7) ^ a1)) & v8)) ^ a3;
  LODWORD(v12) = *(_DWORD *)(a4 + 4 * (v9 + v6 - 16)) ^ *(_DWORD *)(a4
                                                                                  + 4 * (v9 + v6 - 14)) ^ (v11 + a3 - ((v11 << (((v4 + 28) | v7) ^ a1)) & v8));
  *(_DWORD *)(a4 + 4 * (v5 + v9)) = (v12 >> 31) + a3 - (v8 & (2 * (v12 >> 31)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((((v5 + 1 + v9) > 0x4F) * a2) ^ v4)) - 12))();
}

uint64_t sub_18FE90B5C()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

void sub_18FE90C60()
{
  JUMPOUT(0x18FE90BA0);
}

uint64_t sub_18FE90C78()
{
  int v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1 + 8 * ((1716 * ((v2 - 207723693) < 0x28)) ^ (v0 - 364))))();
}

void sub_18FE90D48()
{
  JUMPOUT(0x18FE90C88);
}

uint64_t sub_18FE90D60()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;

  return (*(uint64_t (**)(_QWORD))(v2 + 8 * ((50 * ((v1 + 1 + v4) < 0x3C)) ^ v0)))((v3 + 60));
}

uint64_t sub_18FE90E14(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;

  return (*(uint64_t (**)(void))(v8 + 8 * ((((a1 + 1 + v9) > 0x4F) * a7) ^ v7)))();
}

void sub_18FE90EB8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unint64_t v9;
  int v10;

  LODWORD(STACK[0x574]) = v2;
  LODWORD(STACK[0x52C]) = v4;
  LODWORD(STACK[0x594]) = v1;
  LODWORD(STACK[0x4E4]) = v3;
  LODWORD(STACK[0x54C]) = v7 + 80;
  v9 = STACK[0x658];
  v10 = *(_DWORD *)(STACK[0x658] - 0x1A8FA111108FB2CALL);
  LODWORD(STACK[0x430]) = v0;
  *(_DWORD *)(v9 - 0x1A8FA111108FB2CALL) = (v10 ^ v8)
                                         + (v0 ^ v8)
                                         + v8
                                         - (((v5 - 594) ^ (v6 - 155)) & (2 * ((v10 ^ v8) + (v0 ^ v8))));
  JUMPOUT(0x18FE90F50);
}

uint64_t sub_18FE9103C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  uint64_t v59;
  unint64_t v60;
  int v61;
  int v62;

  v60 = STACK[0x580];
  v61 = *(unsigned __int8 *)(STACK[0x580] - 0x1A8FA111108FB2C2) ^ 0x63;
  if (v61 == 2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * (((*(_DWORD *)(v60 - 0x1A8FA111108FB2C6) == 1531185819) * a50) ^ (LODWORD(STACK[0x41C]) + 741))))(a1, a2, 35, a4, 4294967246, 2596157068, 2932085437);
  v62 = STACK[0x41C];
  if (v61 == 1)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59
                                                                          + 8
                                                                          * ((204
                                                                            * (*(_DWORD *)(v60 - 0x1A8FA111108FB2C6) != 1531185819)) ^ (LODWORD(STACK[0x41C]) + 405)))
                                                              - 167 * (LODWORD(STACK[0x41C]) ^ 0xE2u)
                                                              + 1165))(a1, 35, 4294967246);
  STACK[0x560] = 91;
  *(_BYTE *)(v60 - 0x1A8FA111108FB2C7) = ((a59 - 24) ^ 0xBA) * (a59 - 7);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59
                                                                        + 8
                                                                        * ((961 * (STACK[0x560] == 0)) ^ (v62 - 1557888255) & 0x5CDB7DFDu))
                                                            - 12))(2721941759, 907, 1539);
}

void sub_18FE918AC()
{
  JUMPOUT(0x18FE91868);
}

uint64_t sub_18FE918B8()
{
  return ((uint64_t (*)(void))STACK[0x508])();
}

uint64_t sub_18FE918E8@<X0>(char a1@<W2>, char a2@<W4>, int a3@<W5>, int a4@<W6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44)
{
  _DWORD *v44;
  int v45;
  uint64_t v46;
  _BYTE *v47;
  unsigned int v48;
  unsigned int v49;
  _BOOL4 v50;
  _BOOL4 v51;

  v47 = (_BYTE *)STACK[0x608];
  v48 = *(_DWORD *)(a5 - 0x1A8FA111108FB2DALL);
  *v47 = (a1 ^ HIBYTE(v48)) + ((a44 - 126) ^ 0x12) - ((2 * (a1 ^ HIBYTE(v48))) & 0xEF);
  v47[1] = (a2 ^ BYTE2(v48)) + (~(2 * (a2 ^ BYTE2(v48))) | 0x11) - 8;
  v47[2] = (BYTE1(v48) ^ 0x44) + ((v48 >> 7) & 0xEE ^ 0x77) - 8;
  v47[3] = v48 ^ 0x1F;
  v49 = *v44 + a4;
  v50 = v49 < 0xA081D58;
  v51 = a3 + 1867114192 < v49;
  if ((a3 + 1867114192) < 0xA081D58 != v50)
    v51 = v50;
  return (*(uint64_t (**)(void))(v46 + 8 * ((v51 * v45) ^ (a44 + 451))))();
}

void sub_18FE919DC()
{
  JUMPOUT(0x18FE91910);
}

uint64_t sub_18FE919E4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * ((122 * (a1 & 1)) ^ (LODWORD(STACK[0x41C]) + 834))))();
}

uint64_t sub_18FE91A04()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;

  v2 = STACK[0x45C];
  v3 = STACK[0x578];
  STACK[0x5E8] = (LODWORD(STACK[0x45C]) - 1066855061);
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v1
                                                               + 8
                                                               * (((v2 == 1066855061) * (((v0 + 245) | 0x401) - 1492)) ^ (v0 + 1270)))
                                                   - 8))(v3);
}

uint64_t sub_18FE91FD4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  unint64_t v7;

  v7 = v3 - 1;
  STACK[0x5E8] = v7;
  *(_BYTE *)(a1 + v7) = (v2 + a2 + v4 - 84) * ((v2 + 0x80) ^ v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((7 * (STACK[0x5E8] == 0)) ^ a2)) - 8))();
}

uint64_t sub_18FE92024()
{
  int v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(void))STACK[0x2B0])();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x410]
                                                      + 8
                                                      * ((STACK[0x448] != 0x48247A308694277ELL) | (2
                                                                                                 * (STACK[0x448] != 0x48247A308694277ELL)) | (v1 + 355)))
                                          - (((v1 - 196) | 0x48u)
                                           + (unint64_t)((v1 - 291476886) & 0x115F96F8))
                                          + 677))(v2);
}

uint64_t sub_18FE92034()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((19 * (STACK[0x490] != 0)) ^ (v0 + 612)))
                            - ((v0 ^ 0x1B4u)
                             + 504)
                            + 837))();
}

uint64_t sub_18FE920B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  ++*(_DWORD *)(v11 + 52);
  v12 = v9 + (v8 ^ 0x472) - 4161;
  STACK[0x408] = v12;
  STACK[0x520] = v12;
  LODWORD(STACK[0x55C]) = a8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (int)((117 * (STACK[0x5E0] != 0)) ^ v8)) - (v8 ^ 0x2BBLL)))();
}

uint64_t sub_18FE92118()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((501 * (v1 - 1395792845 < ((v0 - 934321731) & 0x37B097E7 ^ 0x64u))) ^ v0))
                            - 8))();
}

uint64_t sub_18FE92174()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;

  v3 = 1178560073 * ((v2 - 192) ^ 0x32160040);
  *(_DWORD *)(v2 - 192) = LODWORD(STACK[0x224]) ^ v3;
  *(_QWORD *)(v2 - 184) = STACK[0x230];
  *(_QWORD *)(v2 - 168) = STACK[0x238];
  *(_QWORD *)(v2 - 152) = STACK[0x228];
  *(_DWORD *)(v2 - 160) = v3 - 1098463668 + v0;
  *(_DWORD *)(v2 - 156) = v3 + v1 + 215;
  v4 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E2ABD050 + v1 + 2) - 12))(v2 - 192);
  v5 = STACK[0x410];
  v6 = *(_DWORD *)(v2 - 176);
  LODWORD(STACK[0x55C]) = v6;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8
                                                           * ((1900 * (v6 == ((v1 - 2) ^ 0x2A2) + 446848474)) ^ v1))
                                          - (((v1 - 2) | 0x81u) ^ 0xE9)))(v4);
}

uint64_t sub_18FE9224C()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x2DC]) = STACK[0x58C];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((501 * (v0 - 1395792845 < (((v1 ^ 0x407) - 934321731) & 0x37B097E7 ^ 0x64u))) ^ v1 ^ 0x407))
                            - 8))();
}

uint64_t sub_18FE922B4@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  int v10;

  v6 = STACK[0x58C];
  v7 = 460628867 * ((((v5 - 192) | 0x6B27A82) - ((v5 - 192) & 0x6B27A82)) ^ 0x4A24F8FF);
  *(_QWORD *)(v5 - 168) = v4 + 0x48EDB6D0567D3640;
  *(_QWORD *)(v5 - 152) = a1;
  *(_DWORD *)(v5 - 172) = (662437331 * v2 - 1613419602) ^ v7;
  *(_DWORD *)(v5 - 160) = (v3 - 2024873185) ^ v7;
  *(_DWORD *)(v5 - 144) = -460628867 * ((((v5 - 192) | 0x6B27A82) - ((v5 - 192) & 0x6B27A82)) ^ 0x4A24F8FF)
                        + 1969347749 * v6
                        + 787873478;
  *(_QWORD *)(v5 - 192) = v1;
  *(_QWORD *)(v5 - 184) = v4 + 0x2703C5D33AA4CED9;
  STACK[0x358] = v1;
  v8 = sub_18FE980AC(v5 - 192);
  v9 = STACK[0x410];
  v10 = *(_DWORD *)(v5 - 176);
  LODWORD(STACK[0x55C]) = v10;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9 + 8 * ((1631 * (v10 == 446849184)) ^ v3)) - (v3 ^ 0x6ALL)))(v8);
}

uint64_t sub_18FE923C8()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  int v9;

  v4 = ((v0 + 2086116991) & 0x83A861FF ^ 0xA87CC5C) + *(_DWORD *)(v2 + 52);
  v5 = 1734042137 * (((((v3 - 192) | 0xC3B6D6E) ^ 0xFFFFFFFE) - (~(v3 - 192) | 0xF3C49291)) ^ 0xAF0A51DC);
  *(_QWORD *)(v3 - 192) = STACK[0x358];
  v6 = LODWORD(STACK[0x2DC]) - v5 - 592965919;
  *(_DWORD *)(v3 - 172) = LODWORD(STACK[0x280]) ^ v5;
  *(_DWORD *)(v3 - 168) = (v0 - 50) ^ v5;
  *(_DWORD *)(v3 - 184) = v6;
  *(_DWORD *)(v3 - 180) = v4 ^ v5;
  *(_QWORD *)(v3 - 160) = &STACK[0x1960];
  *(_QWORD *)(v3 - 152) = v2 + 0x2703C5D33AA4CEF9;
  v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 54)))(v3 - 192);
  v8 = STACK[0x410];
  v9 = *(_DWORD *)(v3 - 176);
  LODWORD(STACK[0x55C]) = v9;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * ((1473 * (v9 == 446849184)) ^ v0)) - (v0 + 13) + 103))(v7);
}

uint64_t sub_18FE924DC()
{
  int v0;
  uint64_t v1;
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((411 * (v0 - 1395792845 + v2 - 116 < 0xFFFFFFFE)) ^ v2)) - 4))();
}

uint64_t sub_18FE92510@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  int v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  int v54;
  unint64_t v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  uint64_t v62;
  int v63;

  v46 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t *, unint64_t, _QWORD, unint64_t *))(v43 + 8 * (v41 - 115)))(*v44, (a1 + 1), LODWORD(STACK[0x220]), v44[13] - 1534814542, &STACK[0x1960], STACK[0x358], (v41 + LODWORD(STACK[0x2DC]) - 2122609954 + 114), &STACK[0x670]);
  v48 = (v46 ^ 0xF67CF7BB) + 798448470 + ((2 * v46) & 0xECF9EF76);
  if (v48 == 907301652)
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x410]
                                                                 + 8
                                                                 * ((60
                                                                   * (((LODWORD(STACK[0x41C]) - 50) ^ (LODWORD(STACK[0x2A8]) - 71891883 + 3 * (LODWORD(STACK[0x41C]) ^ 0xC7u) < 3)) & 1)) ^ (LODWORD(STACK[0x41C]) + 945)))
                                                     - 4))(v46, v47);
  if (v48 == 638866193)
  {
    v54 = LODWORD(STACK[0x41C]) - 55;
    ((void (*)(_QWORD, unint64_t, _QWORD))STACK[0x2C0])(*(unsigned int *)STACK[0x2B8], STACK[0x358], (LODWORD(STACK[0x2DC]) - 2122609725));
    v55 = STACK[0x618];
    v56 = (LODWORD(STACK[0x41C]) + 1077825339) ^ a40 & 0x5A7F7F76;
    v57 = v44[13] - 777791893;
    v58 = LODWORD(STACK[0x568]) ^ 0x7ADCFEDF;
    v59 = (2 * LODWORD(STACK[0x568])) & 0xF5B9FDBE;
    v60 = 1224239923 * ((-1774582020 - ((v45 - 192) | 0x963A06FC) + ((v45 - 192) | 0x69C5F903)) ^ 0x9B7604D4);
    *(_QWORD *)(v45 - 192) = v42;
    v61 = v60 + LODWORD(STACK[0x41C]) - 150;
    *(_DWORD *)(v45 - 180) = (a41 & 0x7FFFFFFF ^ 0x9F60D7EF) - v60 + v56 - 2129922;
    *(_DWORD *)(v45 - 176) = v57 ^ v60;
    *(_DWORD *)(v45 - 152) = v61;
    *(_DWORD *)(v45 - 148) = v60 + v58 + v59 - 1879064580;
    *(_QWORD *)(v45 - 168) = v55;
    *(_QWORD *)(v45 - 160) = &STACK[0x670];
    v62 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v43 + 8 * (LODWORD(STACK[0x41C]) - 113)) - 8))(v45 - 192);
    v63 = *(_DWORD *)(v45 - 184);
    LODWORD(STACK[0x55C]) = v63;
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x410] + 8 * ((1979 * (v63 == 446849184)) ^ v54))
                                            - 12))(v62);
  }
  else
  {
    v49 = STACK[0x41C];
    v50 = 34 * (LODWORD(STACK[0x41C]) ^ 0xE6);
    LODWORD(STACK[0x2AC]) = v48;
    v51 = 3804331 * ((-1339570962 - ((v45 - 192) | 0xB027C4EE) + ((v45 - 192) | 0x4FD83B11)) ^ 0xB546C847);
    *(_QWORD *)(v45 - 184) = STACK[0x218];
    *(_DWORD *)(v45 - 192) = (v48 - ((v50 + 2 * v48 + 869751160) & 0x3544C140) - 192017009) ^ v51;
    *(_DWORD *)(v45 - 188) = v49 - v51 + 1517;
    v52 = sub_18FE6D658((_DWORD *)(v45 - 192));
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x410]
                                                        + 8
                                                        * ((((v50 - 132457073) & 0x7E522EF ^ 0x25E)
                                                          * (LODWORD(STACK[0x55C]) == 446849184)) ^ v50))
                                            - 12))(v52);
  }
}

uint64_t sub_18FE92700()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((84 * (v1 - 1395792845 + ((v0 + 827) | 0x200u) - 1568 >= ((v0 - 161) | 0xA1u) - 227)) ^ (v0 + 1485))))();
}

uint64_t sub_18FE9274C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((175 * (LODWORD(STACK[0x55C]) == 446849184)) ^ (v0 - 127)))
                            - ((v0 + 362) ^ 0x243)))();
}

void sub_18FE92864()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 192) = (v0 + 426522426) ^ (460628867
                                            * ((2 * ((v1 - 192) & 0x78C53228) - (v1 - 192) + 121294293) ^ 0x4BAC4FA8));
  sub_18FE97B84((_DWORD *)(v1 - 192));
  *(_BYTE *)(v1 - 180) = 99 * ((72 - ((v1 + 64) | 0x48) + ((v1 + 64) | 0xB7)) ^ 0x6C) + 5;
  *(_DWORD *)(v1 - 184) = v0
                        - 1755732067
                        * ((412465480 - ((v1 - 192) | 0x1895B948) + ((v1 - 192) | 0xE76A46B7)) ^ 0x39ACFB6C)
                        + 612;
  LODWORD(STACK[0x2A8]) = LODWORD(STACK[0x2A8]) + v0 - 489 - 101;
  *(_QWORD *)(v1 - 192) = STACK[0x258];
  *(_QWORD *)(v1 - 168) = STACK[0x260];
  ((void (*)(uint64_t))STACK[0x250])(v1 - 192);
  LODWORD(STACK[0x55C]) = *(_DWORD *)(v1 - 176);
  LODWORD(STACK[0x2AC]) = 907301652;
  JUMPOUT(0x18FE9296CLL);
}

uint64_t sub_18FE929A8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unint64_t v4;
  int v5;
  uint64_t v6;

  STACK[0x358] = v4;
  LODWORD(STACK[0x55C]) = a4 - 42;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((v5 + 1718023690) & 0x999909FA ^ (v5 - 1785690662) & 0x6A6F7BFF ^ 0x4C1)
                                     * (STACK[0x358] != 0)) ^ (v5 + 474))))();
}

uint64_t sub_18FE92B38()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((v1 - 1395792845 >= (v2 - 227)) * (((v2 - 4) | 4) ^ 0xDB)) ^ (v2 + 372)))
                            - 8))();
}

uint64_t sub_18FE92B78(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  _BOOL4 v5;

  LODWORD(STACK[0x55C]) = v3 - 42;
  v4 = STACK[0x618];
  v5 = LODWORD(STACK[0x568]) != 0;
  STACK[0x540] = LODWORD(STACK[0x568]);
  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(v2
                                                                        + 8
                                                                        * (((2 * (((v1 + 804) | 0xA2) ^ 0x4FC) + 1561)
                                                                          * v5) ^ (v1 + 727)))
                                                            - 12))(a1, v4);
}

uint64_t sub_18FE92D68@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _BOOL4 v6;

  v4 = ((unint64_t)&STACK[0x540] ^ 0xAF7DACEEFBF6785ELL)
     + 0x72BFFF7BD66FC8A2
     + ((2 * (_QWORD)&STACK[0x540]) & 0x5EFB59DDF7ECF0B0);
  v5 = v2 - 1;
  STACK[0x540] = v5;
  *(_BYTE *)(a1 + v5) = (v4 ^ 0xBA) * (v4 + 17);
  v6 = STACK[0x540] == (a2 - 239) - 956;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v6 | (4 * v6)) ^ a2)) - 12))();
}

void sub_18FE92DF0()
{
  JUMPOUT(0x18FE92DB8);
}

void sub_18FE92DF8(uint64_t a1, uint64_t a2)
{
  ((void (*)(_QWORD, uint64_t, _QWORD))STACK[0x2C0])(*(unsigned int *)STACK[0x2B8], a2, 0);
  JUMPOUT(0x18FE92E2CLL);
}

uint64_t sub_18FE92F08()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t (*v4)(void);

  STACK[0x358] = 0;
  v3 = *(_DWORD *)(v2 + 56);
  *(_DWORD *)(v2 + 56) = v3 + 1;
  v4 = (uint64_t (*)(void))(*(_QWORD *)(v0
                                     + 8
                                     * ((((v3 - 946918720) < 0xFFFFFFFA) * ((34 * (v1 ^ 0xE6)) ^ 0x71B)) ^ (v1 - 127)))
                         - 12);
  LODWORD(STACK[0x2DC]) = 2122609725;
  return v4();
}

void sub_18FE92F6C()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 192) = (v0 + 426522915) ^ (460628867
                                            * ((2 * ((v1 - 192) & 0x410D09B0) - (v1 - 192) - 1091373492) ^ 0xF2647431));
  sub_18FE97B84((_DWORD *)(v1 - 192));
  *(_QWORD *)(v1 - 192) = STACK[0x258];
  *(_BYTE *)(v1 - 180) = 99 * ((((2 * (v1 + 64)) | 0x6C) - (v1 + 64) - 54) ^ 0xED) + 5;
  *(_DWORD *)(v1 - 184) = v0
                        - 1755732067 * ((((2 * (v1 - 192)) | 0x334CB66C) - (v1 - 192) + 1717150922) ^ 0x4760E6ED)
                        + 1101;
  *(_QWORD *)(v1 - 168) = STACK[0x260];
  ((void (*)(uint64_t))STACK[0x250])(v1 - 192);
  STACK[0x358] = 0;
  LODWORD(STACK[0x2DC]) = 2122609725;
  JUMPOUT(0x18FE9305CLL);
}

void sub_18FE930BC(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  unsigned int v3;

  v3 = (a2 + 1805728831) & 0x945EC1EB;
  ((void (*)(_QWORD, uint64_t, _QWORD))STACK[0x2C0])(*(unsigned int *)STACK[0x2B8], a1, (v3 ^ 0x817B8B29) + LODWORD(STACK[0x2DC]));
  *(_DWORD *)(v2 - 192) = (v3 + 426522783) ^ (460628867
                                            * ((1359512171 - ((v2 - 192) | 0x5108826B) + ((v2 - 192) | 0xAEF77D94)) ^ 0xE261FFE9));
  sub_18FE97B84((_DWORD *)(v2 - 192));
  JUMPOUT(0x18FE93164);
}

void sub_18FE931AC(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v1 = 3804331 * (((a1 | 0x841A70C4) - (a1 & 0x841A70C4)) ^ 0x7E848392);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x4F927BF50B0C4CEFLL) + 1989457799;
  v3 = *(_DWORD *)(a1 + 4) - v1 - 1449905584;
  v4 = (v3 < 0xE624C8B6) ^ (v2 < 0xE624C8B6);
  v5 = v2 < v3;
  if (v4)
    v5 = v3 < 0xE624C8B6;
  __asm { BR              X10 }
}

uint64_t sub_18FE932C0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((79
                                          * ((*(_DWORD *)(v1 - 0x4F927BF50B0C4CE7) & 1) != (((v0 + 150) | 0x22A) ^ 0x66A))) ^ v0))
                            - ((v0 - 397) ^ 0x215)))();
}

uint64_t sub_18FE93318@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;
  va_list va;

  va_start(va, a2);
  v5 = (*(uint64_t (**)(_QWORD, char *, _QWORD, uint64_t))(v3 + 8 * (v4 ^ 0x6A7)))(**(unsigned int **)(v3 + 8 * (v4 - 1634)), va, ((v4 - 5738) & (a1 - 1016104551) ^ 0x7FBBD3AF) + ((2 * (a1 - 1016104551)) & 0xFF77A000) - 2143015855, 1) != ((v4 - 1130) | 0x104) - 772;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((194 * v5) ^ v4)) - 12))();
}

uint64_t sub_18FE933AC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v2 - 53) ^ (*(_QWORD *)(v0 - 0x4F927BF50B0C4CFBLL) == 0)) & 1)
                                * (v2 + 703)) ^ v2)))();
}

uint64_t sub_18FE933FC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v3 = *(_DWORD *)(v1 - 0x4F927BF50B0C4CEBLL)
     - ((2 * *(_DWORD *)(v1 - 0x4F927BF50B0C4CEBLL) + 66685096) & 0x42C7DF6)
     + 269681487;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((404
                                          * ((((v0 - 1189607131) & 0x46E7F70F ^ 0xC7F8FFFE) & (2 * v3) ^ 0x4287CF2)
                                           + (v3 ^ (v0 - 504742473))
                                           - 35938872 == 1641552965)) ^ v0))
                            - 12))();
}

uint64_t sub_18FE934B4(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  unsigned int *v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v5 + 8 * (v2 - 586)))(*v6, a2, ((v2 - 194036773) & 0xB90C33Du) - 1871713100 + *(_DWORD *)(v3 - 0x4F927BF50B0C4CF3));
  *v9 = v8;
  *(_DWORD *)(v3 - 0x4F927BF50B0C4CF3) = v7;
  *v4 = v7;
  return result;
}

uint64_t sub_18FE93964(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v2 = *(_DWORD *)(*(_QWORD *)a1 - 0xFB9CCB0B87C5698);
  v4 = v2 - 1903378044;
  v3 = v2 - 1903378044 < 0;
  v5 = 1903378044 - v2;
  if (!v3)
    v5 = v4;
  v1 = ((*(_DWORD *)(a1 + 12) ^ (1734042137 * (((a1 | 0xD7F017E0) - (a1 & 0xD7F017E0)) ^ 0x8B3ED4AD))) - 771) | 0x228;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E2ABD050 + (v1 ^ 0x290))
                              + ((((v5 ^ 0x7E259F1F) - 1006929153 + ((v5 << (v1 + 73)) & 0xFC4B3E3E) - 1109465631 < 0x7FFFFFFF)
                                * (v1 ^ 0x2D5)) ^ v1)
                              - 1)
                            - 8))();
}

uint64_t sub_18FE93A80(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5)
{
  int v5;
  uint64_t v6;
  int v7;
  _QWORD *v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((*(_DWORD *)(*v8 + 4 * a5) != v5) * a4) ^ v7 ^ v9)) - 4))();
}

void sub_18FE93AAC()
{
  JUMPOUT(0x18FE93A50);
}

uint64_t sub_18FE93AC0(uint64_t result)
{
  *(_DWORD *)(result + 8) = 1071466684;
  return result;
}

uint64_t sub_18FE93AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)(((8 * ((a5 ^ v5) >> 31)) & 0xFFFFFFDF | (32 * ((a5 ^ v5) >> 31))) ^ v7))
                            - ((v7 - 610296359) & 0x24605EBF)
                            + 684))();
}

uint64_t sub_18FE93B18()
{
  char v0;
  uint64_t v1;
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((8 * ((v2 >> v0) & 1)) & 0xFFFFFFDF | (32 * ((v2 >> v0) & 1))) ^ v3))
                            - v4
                            + 684))();
}

uint64_t sub_18FE93B40@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;
  int v3;

  *(_DWORD *)(result + 8) = (((v3 - 182) | 0x191) ^ 0xFBBA074E) + 32 * a2 + v2 + 1;
  return result;
}

void sub_18FE93B6C(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (1374699841 * ((((2 * (_DWORD)a1) | 0x97E9331C) - (_DWORD)a1 + 873162354) ^ 0xA6008187));
  __asm { BR              X10 }
}

uint64_t sub_18FE93C40@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067
      * (((&a4 | 0xD2524C62) - &a4 + (&a4 & 0x2DADB398)) ^ 0xC94F1B9);
  a6 = (v10 + 115) ^ v12;
  a8 = v12 ^ 0x23C64F76;
  a7 = &STACK[0x42847B27D287AD6B];
  a4 = &STACK[0x7C4B0A84482CA597];
  a5 = v11;
  v13 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v10 - 448)) - 8))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (((*(_DWORD *)(v11 - 0x4F927BF50B0C4CE3) == v8)
                                                        * (((v10 - 496) | 0x162) ^ 0x2FC)) ^ v10))
                                          - 12))(v13);
}

uint64_t sub_18FE93D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  int v10;
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((a10 == v10 + 71 * (v12 ^ 0x164) - 493) * (v12 - 325)) ^ v12))
                            - 8))();
}

void sub_18FE93D64(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned __int8 *v5;

  v3 = v5[3] ^ 0xF7;
  v4 = ((*v5 ^ 0xFFFFFFF7) << 24) | ((v5[1] ^ 0xF7) << 16) | ((v5[2] ^ 0xF7) << 8) | v3;
  *(_DWORD *)(*(_QWORD *)(v1 + 8) - 0x6D40EE9100C99969) = v4 + v2 - 2 * (v4 & (v2 + 19) ^ v3 & 0x13);
  *(_DWORD *)(v1 + 4) = *a1;
}

uint64_t sub_18FE93E20(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  unsigned __int8 v4;
  char *v5;
  int v6;
  _BYTE v8[8];

  v2 = (unint64_t)&v8[qword_1EE1C2020 + qword_1EE1C2010];
  qword_1EE1C2020 = 1209664481 * v2 + 0x5A53928AE3C855CELL;
  qword_1EE1C2010 = 1209664481 * (v2 ^ 0x2DEB88543200F8ELL);
  v3 = *(_DWORD *)(a2 + 4);
  v4 = -31 * ((-31 * v2 - 50) ^ 0x8E ^ qword_1EE1C2010);
  v5 = (char *)*(&off_1E2ABD050 + (v4 ^ byte_19044B670[byte_190447700[v4] ^ 0xE9]) - 180) - 8;
  if (v3 == 1066855064)
    __asm { BR              X17 }
  if (v3 == 1066855071)
  {
    v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BR              X17 }
  }
  return 4294925278;
}

void sub_18FE9453C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BR              X9 }
}

uint64_t sub_18FE945D8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((((a1 - 1323) ^ ((*(_BYTE *)(v2 - 0x4F927BF50B0C4CE7) & 1) == 0)) & 1) == 0)
                                          * (((a1 - 1969161210) & 0x755EFF6E) - 288)) ^ a1))
                            - 8))();
}

uint64_t sub_18FE94634(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v2
                                                              + 8
                                                              * (((*(_DWORD *)(v3 - 0x4F927BF50B0C4CEFLL) - 1871712559 != ((v1 + 1999349419) & 0x88D459FF ^ 0x1ED))
                                                                * (((v1 - 230) | 0x200) ^ 0x76C)) ^ v1))
                                                  - 4))(a1, *(_QWORD *)(v3 - 0x4F927BF50B0C4CFBLL));
}

uint64_t sub_18FE946C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v13 = ((unint64_t)&a10 ^ 0x4748B589FF9F557FLL)
      - 0x7001000B409107CLL
      + ((2 * (_QWORD)&a10) & 0x8E916B13FF3EAAF0);
  a10 = v11 - 1;
  *(_BYTE *)(a2 + a10) = ((v13 - 3) ^ 0xBA) * (v13 + 14);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v12 + 8 * ((a10 == 0) | (32 * (a10 == 0)) | v10))
                                                   - 12))(a1, a2);
}

void sub_18FE94754()
{
  JUMPOUT(0x18FE94718);
}

void sub_18FE94760()
{
  _DWORD *v0;

  *v0 = 1913718733;
}

void sub_18FE948C8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) ^ (460628867 * (((a1 | 0x6C5795E7) - a1 + (a1 & 0x93A86A18)) ^ 0x20C1179A));
  __asm { BR              X11 }
}

uint64_t sub_18FE9498C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((((v3 + 1542211572) & 0xA413B29B) + 1641) ^ ((v3 - 1019) | 0x4D1))
                                               * (*(_DWORD *)(*(_QWORD *)(a1 + 16) + v4) != v1)) ^ v3))
                            - 4))();
}

uint64_t sub_18FE949E0()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((43
                                          * ((((v2 - 1903378044) * (v0 - 1903378044) < 0) ^ (3 * (v3 ^ 0xE8))) & 1)) ^ v3))
                            - 8))();
}

uint64_t sub_18FE94A28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  _QWORD v6[2];
  uint64_t v7;
  unsigned int v8;

  v6[1] = a1;
  v7 = v3;
  v8 = v4 + ((1889871366 - (v6 | 0x70A52606) + (v6 | 0x8F5AD9F9)) ^ 0xC3CC5B84) * v2 + 284;
  v6[0] = v3;
  return ((uint64_t (*)(_QWORD *))(*(_QWORD *)(v1 + 8 * (v4 ^ 0xB0)) - 8))(v6);
}

void sub_18FE94B90(uint64_t a1)
{
  int v1;
  _BOOL4 v4;

  v4 = *(_QWORD *)(a1 + 24) != 0x4F927BF50B0C4CFBLL
    && *(_QWORD *)(a1 + 8) != 0x5BFD90C18C6562B2
    && *(_QWORD *)(a1 + 40) != 0x680B51E8ED3F0423;
  v1 = *(_DWORD *)(a1 + 36) - 1178560073 * ((2 * (a1 & 0x2A268EDC) - a1 - 707170013) ^ 0xE7CF7163);
  __asm { BR              X9 }
}

uint64_t sub_18FE94CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  int v21;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * ((191 * (*(_DWORD *)(a20 - 0x4F927BF50B0C4CE3) == ((v21 + 90) ^ 0x1AA26137))) ^ v21))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_18FE94CFC@<X0>(int a1@<W8>, __n128 a2@<Q0>, __n128 a3@<Q1>, __n128 a4@<Q2>, __n128 a5@<Q3>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  __n128 v23;
  __n128 v24;
  _BOOL4 v25;
  uint64_t (*v26)(__n128, __n128, __n128, __n128, __n128, __n128);
  unsigned int v28;

  v21 = (v17 + 1233986632) & 0xB672DBE8;
  if ((*(_DWORD *)(a13 + 32) - a1 - 297329178) >= 0xFFFFFFFE)
    v22 = 1949484732;
  else
    v22 = 1949484744;
  v28 = v21 + *(_DWORD *)(a17 - 0x4F927BF50B0C4CEBLL) - 2058544383;
  *(_QWORD *)(v20 - 144) = 521 * (v19 ^ 0x13Eu);
  v23.n128_u64[0] = 0xEEEEEEEEEEEEEEEELL;
  v23.n128_u64[1] = 0xEEEEEEEEEEEEEEEELL;
  v24.n128_u64[0] = 0xF7F7F7F7F7F7F7F7;
  v24.n128_u64[1] = 0xF7F7F7F7F7F7F7F7;
  v25 = v28 < 0xF7505875;
  if (v28 >= 0xF7505875)
    v25 = v28 > 0xF7505875;
  v26 = (uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v18
                                                                                           + 8
                                                                                           * (int)((v25
                                                                                                  * (((v21 - 784413641) & 0x2EC1333D ^ 0xFFFFFFE6) + (v21 ^ 0xF5))) ^ v21))
                                                                               - 4);
  *(_DWORD *)(v20 - 152) = v22;
  return v26(a2, a3, a4, a5, v23, v24);
}

uint64_t sub_18FE94FB8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 8 * (v0 - 310)) - 8))(*(_DWORD *)(v2 - 148) & 0x20000000, (((v0 + 148) | 0x2C) - 441302272) & 0x1A4DBFEE ^ 0x4ECu);
}

uint64_t sub_18FE95DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  _BOOL4 v17;

  *(_BYTE *)(*v16 + v13 + a8 + ((v14 - 746) | 0x19u)) = 119;
  v17 = v13 - 482162261 < (a13 + 1880099141);
  if ((a13 + 1880099141) < 0xEE947D82 != (v13 - 482162261) < 0xEE947D82)
    v17 = (a13 + 1880099141) < 0xEE947D82;
  return (*(uint64_t (**)(void))(v15 + 8 * (v14 ^ (30 * !v17))))();
}

uint64_t sub_18FE95E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  _QWORD *v14;
  unsigned int v15;
  int v16;
  _BOOL4 v17;

  *(_BYTE *)(*v14 + (a8 + v9 + 318)) = -9;
  v15 = v10 + v9 + 1;
  v16 = (v12 < v8) ^ (v15 < v8);
  v17 = v15 < v12;
  if (v16)
    v17 = v12 < v8;
  return (*(uint64_t (**)(void))(v13 + 8 * ((30 * !v17) ^ v11)))();
}

void sub_18FE95E98(int a1@<W8>)
{
  _QWORD *v1;
  unsigned int v2;
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 - 0x5BFD90C18C6562B2) = *v1;
  *(_DWORD *)(v5 - 0x680B51E8ED3F0423) = a1;
  *v1 = 0;
  *(_QWORD *)(v8 - 0x4F927BF50B0C4CF3) = 0x6F90112F6F90112FLL;
  *v3 = 1912814508;
  v2 = ((*(_DWORD *)(v8 - 0x4F927BF50B0C4CE7) & 0x41A16FA0 ^ 0x41200D01)
      + (*(_DWORD *)(v8 - 0x4F927BF50B0C4CE7) & 0xBE5E905E ^ 0x9C50004B)
      - 2) ^ 0x59C9EBA4;
  *(_DWORD *)(v8 - 0x4F927BF50B0C4CE7) = (((2 * v2) & 0x30F432F4) - v2 - 410655099) ^ 0x633C006B;
  *(_DWORD *)(v7 + 16) = *v6;
}

void sub_18FE95FDC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 24) - 460628867 * (((a1 | 0x4A5B5FFB) - (a1 & 0x4A5B5FFB)) ^ 0x6CDDD86);
  v3 = *(_QWORD *)a1;
  if (*(_DWORD *)(*(_QWORD *)a1 - 0xFB9CCB0B87C5698) - 1903378044 >= 0)
    v4 = *(_DWORD *)(*(_QWORD *)a1 - 0xFB9CCB0B87C5698) - 1903378044;
  else
    v4 = 1903378044 - *(_DWORD *)(*(_QWORD *)a1 - 0xFB9CCB0B87C5698);
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v2 - 0xFB9CCB0B87C5698) - 1903378044 >= 0)
    v5 = *(_DWORD *)(v2 - 0xFB9CCB0B87C5698) - 1903378044;
  else
    v5 = 1903378044 - *(_DWORD *)(v2 - 0xFB9CCB0B87C5698);
  v7 = (535753261
      * ((2 * ((&v7 ^ 0x48E414FE) & 0x400DFC4C) - (&v7 ^ 0x48E414FE) - 1074658382) ^ 0xFDE21963)) ^ (v1 + 289);
  v8 = v3;
  sub_18FE866CC((uint64_t)&v7);
  if (v4 >= v5)
    v6 = v5;
  else
    v6 = v4;
  __asm { BR              X13 }
}

uint64_t sub_18FE96178(int a1)
{
  uint64_t v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v2 + 1075937057 > 465053410 || v2 + 1075937057 < v3 - 1682430237;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v5 * (((a1 ^ 0x120) - 292) ^ 0x488)) ^ a1)))();
}

uint64_t sub_18FE961C8()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v17;

  v12 = (v5 - 1442) | 0x4C2;
  v13 = 4 * (((2 * v12) ^ 0xD5A ^ (v6 + 1122)) + v8);
  v14 = v1 + 1514605701 + (*(_DWORD *)(*(_QWORD *)(v11 - 0xFB9CCB0B87C5694) + v13) ^ v7) + 1250;
  *(_DWORD *)(*(_QWORD *)(v10 - 0xFB9CCB0B87C5694) + v13) = v14 + v7 - (v9 & (2 * v14));
  v15 = v8 + 1 + v2;
  v17 = v15 > v3 || v15 < v4;
  return (*(uint64_t (**)(void))(v0 + 8 * (((32 * v17) | (v17 << 8)) ^ v12)))();
}

uint64_t sub_18FE962A4()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v2 + 459751983 < (int)(v3 + 1996351985);
  if (v3 > 0x902160E != v2 + 459751983 < -151131663)
    v4 = v3 > 0x902160E;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)((v4 * (((126 * (v1 ^ 0x49A)) ^ 0xFFFFFF4C) + 229 * (v1 ^ 0x49D))) ^ v1))
                            - 4))();
}

uint64_t sub_18FE96330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  _BOOL4 v22;
  uint64_t v23;
  unsigned int v24;
  int v25;
  _BOOL4 v26;

  v22 = v20 > v15;
  v23 = 4 * (v18 + v16);
  v24 = v10 + v13 + 183 + 1514606265 + (*(_DWORD *)(*(_QWORD *)(a9 - 0xFB9CCB0B87C5694) + v23) ^ 0xA10F1B0C);
  *(_DWORD *)(*(_QWORD *)(v21 - 0xFB9CCB0B87C5694) + v23) = v24 + v17 - (v19 & (2 * v24));
  v25 = v18 + 1 + v12;
  LODWORD(v23) = v22 ^ (v25 < v11);
  v26 = v25 < v14;
  if (!(_DWORD)v23)
    v22 = v26;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((1382 * !v22) ^ v13)) - 4))();
}

uint64_t sub_18FE96428(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 == 0x1CDEE47FA5B8EE98) * (((a1 ^ 0x300) + 313) ^ 0x280)) ^ a1)))();
}

uint64_t sub_18FE96464()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v0 + 8 * ((25 * (v2 + v3 + ((v1 - 125) ^ 0x3C4u) - 432 < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_18FE9649C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  _BOOL4 v7;
  unsigned int v8;

  v7 = v4 + 1308588892 < 697705246;
  v8 = (v2 ^ v1 ^ 0xA10F1967 ^ **(_DWORD **)(v6 - 0xFB9CCB0B87C5694)) + 1;
  **(_DWORD **)(v6 - 0xFB9CCB0B87C5694) = v8 + v3 - (v5 & (2 * v8));
  if (v4 + 1308588892 < 697705246)
    v7 = v4 + 1308588892 > -1449778401;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * ((1611 * v7) ^ (v2 + 313))))(1188863161);
}

void sub_18FE96558()
{
  JUMPOUT(0x18FE964ECLL);
}

uint64_t sub_18FE96564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  _BOOL4 v21;

  v18 = v11 ^ 0x17A;
  v19 = 4 * (v14 + v12);
  v20 = v18
      - 574
      + (*(_DWORD *)(*(_QWORD *)(v17 - 0xFB9CCB0B87C5694) + v19) ^ v13)
      - (*(_DWORD *)(*(_QWORD *)(a9 - 0xFB9CCB0B87C5694) + v19) ^ v13);
  *(_DWORD *)(*(_QWORD *)(v16 - 0xFB9CCB0B87C5694) + v19) = v20 + v13 - (v15 & (2 * v20));
  v21 = v14 - 1020638849 < (int)(v10 + 515961152);
  if (v10 > 0x613F0EBF != v14 - 1020638849 < -1631522496)
    v21 = v10 > 0x613F0EBF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((378 * v21) ^ v18)) - 8))();
}

uint64_t sub_18FE96698()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((248
                                          * ((((v2 + v3 - 1) < 0x7FFFFFFF) ^ v1) & 1)) ^ (v1 + 204)))
                            - 12))();
}

uint64_t sub_18FE96704()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((1849
                                          * (*(_DWORD *)(*(_QWORD *)(v5 - 0xFB9CCB0B87C5694)
                                                       + 4 * (v2 + v4 - 1)) == v3)) ^ ((v1 ^ 0x4BE) - 654)))
                            - (((v1 ^ 0x4BEu) - 654) ^ 0x28FLL)))();
}

uint64_t sub_18FE96764()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1938 * (v3 + v2 - 2 < (v1 ^ 0x7FFFFD7Cu))) ^ v1)) - 12))();
}

uint64_t sub_18FE9679C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)((1849 * (*(_DWORD *)(v1 + 4 * (v3 + v5 - 1)) == v4)) ^ v2))
                            - (v2 ^ 0x28FLL)))();
}

void sub_18FE967DC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  *(_DWORD *)(v3 - 0xFB9CCB0B87C5698) = (((v2 + v1) * (v0 - 1516337960)) ^ 0x75F3BEFE)
                                        - 75530370
                                        + ((2 * (v2 + v1) * (v0 - 1516337960)) & 0xEBE77DFC);
}

void sub_18FE96868(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_18FE968C8()
{
  return 4294925278;
}

void sub_18FE96A3C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~(_DWORD)a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BR              X10 }
}

uint64_t sub_18FE96B10@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067 * ((104643172 - (&a4 | 0x63CBA64) + (&a4 | 0xF9C3459B)) ^ 0x2705F840);
  a6 = (v10 - 55) ^ v12;
  a7 = &STACK[0x42847B27D287AD6B];
  a8 = v12 ^ 0x232AF6A6;
  a4 = &STACK[0x7C4B0A84482CA597];
  a5 = v11;
  v13 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v10 - 618)) - 8))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * ((1108 * (*(_DWORD *)(v11 - 0x4F927BF50B0C4CE3) == v8)) ^ v10))
                                          - (v10 ^ 0x7C3u)
                                          + 1356))(v13);
}

uint64_t sub_18FE96C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  int v10;
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((a10 != v10) * (v12 - 1315)) ^ v12)) - 8))();
}

uint64_t sub_18FE96C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v17 = (((v16 - 1232) | 0x213) ^ (v12 + 632)) + v13;
  *(_BYTE *)(v11 + v17) = *(_BYTE *)(a11 + v17) ^ 0xF7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((53 * (v13 + v12 < (a10 ^ v14))) ^ v16)) - 8))();
}

void sub_18FE96C98(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(*(_QWORD *)(v3 + 24) - 0x4BBB3C48FF632B30) = v1;
  *(_DWORD *)(v4 - 0x52155BFDA38671FDLL) = v2;
  *(_DWORD *)v3 = *a1;
}

void sub_18FE96D00(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  int v7;
  char v8;
  int v9;
  int v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  char *v16;
  char v17;
  char v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = 1759421093 * (((a1 | 0x2E78BC3A) - (a1 & 0x2E78BC3A)) ^ 0x9D050C6E);
  v2 = *(_DWORD *)(a1 + 24) + v1;
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)a1;
  v5 = *(_DWORD *)(a1 + 8) ^ v1;
  v9 = 294122765;
  v10 = 1903378044;
  v11 = &v18;
  v14 = 294122702;
  v15 = 1903378044;
  v16 = &v8;
  v12 = 0x71733E7C1187F54FLL;
  v13 = &v17;
  if (v3 | v4)
    v6 = v5 == 1500383668;
  else
    v6 = 1;
  v7 = v6;
  __asm { BR              X10 }
}

uint64_t sub_18FE96E4C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  _BOOL4 v6;

  v3 = a1 + 2;
  v4 = a1 - 106;
  v6 = *(_QWORD *)(v1 + 16) == 0x348906C994F8B44ELL || *(_OWORD *)(v1 + 40) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v4 ^ v6) & 1) == 0) * (((v3 - 1263906561) & 0x4B55AEFE) + 1242)) ^ v3))
                            - 4))();
}

uint64_t sub_18FE96EC0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *(_QWORD *)(v24 + 32);
  *(_DWORD *)(v23 - 0x348906C994F8B44ELL) = 0;
  return (*(uint64_t (**)(char *, char *, char *, uint64_t))(v25
                                                                    + 8
                                                                    * (((v26 == 0xFB9CCB0B87C569CLL)
                                                                      * (40 * (a1 ^ 0x80) + 1176)) ^ a1)))(&a15, &a23, &a13, 242);
}

uint64_t sub_18FE96F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;

  v37 = 535753261 * ((v36 + 1928300896 - 2 * ((v36 - 144) & 0x72EF89F0)) ^ 0x781B87DF);
  *(_DWORD *)(v36 - 144) = v37 + v33 + 502;
  *(_QWORD *)(v36 - 136) = &a32 + v32;
  *(_DWORD *)(v36 - 128) = v37 ^ 0x48EB2F0F;
  sub_18FE77254((_DWORD *)(v36 - 144));
  return ((uint64_t (*)(char *, char *, char *, uint64_t))(*(_QWORD *)(v34
                                                                              + 8
                                                                              * ((((v35 == 0) ^ (v33 - 1)) & 1 | (8 * (((v35 == 0) ^ (v33 - 1)) & 1))) ^ (v33 + 183)))
                                                                  - ((v33 - 240) | 0x94u)
                                                                  + 140))(&a22, &a30, &a20, 242);
}

uint64_t sub_18FE9707C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  _BOOL4 v32;

  v27 = v18 - 92;
  v28 = (v27 - 836436385) & 0x31DB038E;
  v29 = 1734042137 * ((v26 - 144) ^ 0x5CCEC34D);
  *(_DWORD *)(v26 - 120) = v27 - v29 + 649;
  *(_QWORD *)(v26 - 144) = v19;
  *(_DWORD *)(v26 - 132) = v21 - v29 + (v28 ^ 0xB85E0464);
  *(_QWORD *)(v26 - 128) = v25;
  v32 = v20 == 0;
  (*(void (**)(uint64_t))(v23 + 8 * (v27 - 118)))(v26 - 144);
  *(_DWORD *)(v26 - 128) = v28
                         - 1374699841 * ((((v26 - 144) | 0x2F5BE39F) + (~(v26 - 144) | 0xD0A41C60)) ^ 0x42AFFB97)
                         - 448;
  *(_QWORD *)(v26 - 144) = a16;
  *(_QWORD *)(v26 - 136) = v22;
  ((void (*)(uint64_t))(*(_QWORD *)(v23 + 8 * (v28 ^ 0x234)) - 8))(v26 - 144);
  *(_QWORD *)(v26 - 104) = a17;
  *(_QWORD *)(v26 - 136) = v22;
  *(_QWORD *)(v26 - 128) = a16;
  *(_QWORD *)(v26 - 144) = a18;
  *(_QWORD *)(v26 - 120) = a15;
  *(_DWORD *)(v26 - 112) = (v28 + 516) ^ (1755732067
                                        * ((1237618092
                                          - ((v26 - 144) ^ 0x61D055E8 | 0x49C48DAC)
                                          + ((v26 - 144) ^ 0x61D055E8 | 0xB63B7253)) ^ 0x92D9A60));
  v30 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v28 - 489)))(v26 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24
                                                      + 8
                                                      * ((((((v28 + 38) ^ v32) & 1) == 0) * (68 * (v28 ^ 0x288) - 651)) | v28))
                                          - 12))(v30);
}

uint64_t sub_18FE972AC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  int v9;
  _DWORD *v10;

  v6 = 460628867 * ((v5 - 144) ^ 0x4C96827D);
  *(_QWORD *)(v5 - 128) = v2;
  *(_QWORD *)(v5 - 120) = v8;
  *(_DWORD *)(v5 - 140) = v4 - v6 + 1074;
  *(_DWORD *)(v5 - 136) = ((((v4 - 600) | 0xA2) ^ 0xCA5ED52C) + v1) ^ v6;
  result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v4 - 626)))(v5 - 144);
  *v10 = v9;
  *(_DWORD *)(v0 + 12) = 446849184;
  return result;
}

uint64_t sub_18FE973F8(uint64_t a1)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t result;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v2 = 1225351577 * ((a1 & 0x1891AAC5 | ~(a1 | 0x1891AAC5)) ^ 0xC4F48D2C);
  v3 = *(_DWORD *)(a1 + 8) ^ v2;
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = -2078849973 * (*(_DWORD *)(a1 + 12) + v2) - 859476815;
  v8 = 1224239923 * ((-1588356418 - (&v10 | 0xA1539ABE) + (&v10 | 0x5EAC6541)) ^ 0xAC1F9896);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = (v7 ^ 0x7971FFDC) - v8 + ((2 * v7) & 0xF2E3FFB8) - 19923008;
  v12 = v5;
  v13 = v4;
  v16 = v3 + v8 - 368399125;
  v14 = v6;
  result = ((uint64_t (*)(uint64_t *))*(&off_1E2ABD050 + (v3 ^ 0x15F55733)))(&v10);
  *(_DWORD *)(a1 + 40) = v15;
  return result;
}

uint64_t sub_18FE97568(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_18FE97580(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 8);
  return 0;
}

void sub_18FE97598()
{
  unint64_t v0;
  uint64_t v1;
  unsigned int v2;
  char v3;
  char *v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v0 = (qword_1EE1C2010 - qword_1EE1C1E20) ^ (unint64_t)&v1;
  qword_1EE1C1E20 = 1209664481 * (v0 - 0x2DEB88543200F8ELL);
  qword_1EE1C2010 = 1209664481 * (v0 ^ 0x2DEB88543200F8ELL);
  v2 = (1374699841 * (((&v2 | 0xDB166439) + (~&v2 | 0x24E99BC6)) ^ 0xB6E27C31)) ^ 0x88;
  LOBYTE(v0) = -31 * ((-31 * (v0 + 114)) ^ 0x8E ^ qword_1EE1C2010);
  v4 = (char *)*(&off_1E2ABD050
               + (v0 ^ byte_19044B570[byte_190447600[v0] ^ 0x66])
               + 100)
     - 4;
  sub_18FE66B2C(&v2);
  v4 = (char *)*(&off_1E2ABD050
               + ((-31 * ((qword_1EE1C2010 - qword_1EE1C1E20) ^ 0x8E)) ^ byte_190447900[byte_1904531A0[(-31 * ((qword_1EE1C2010 - qword_1EE1C1E20) ^ 0x8E))] ^ 0xF8])
               + 103)
     - 4;
  v2 = (1374699841 * ((((&v2 | 0x453CF4E4) ^ 0xFFFFFFFE) - (~&v2 | 0xBAC30B1B)) ^ 0xD7371312)) ^ 0x88;
  sub_18FE66B2C(&v2);
  v2 = (1178560073 * ((&v2 - 2 * (&v2 & 0x5AC1B4ED) + 1522644205) ^ 0x68D7B4AD)) ^ 0x3A4;
  v3 = 73 * ((&v2 - 2 * (&v2 & 0xED) - 19) ^ 0xAD) + 118;
  sub_18FE66DAC((uint64_t)&v2);
}

uint64_t sub_18FE977C0(uint64_t result)
{
  unint64_t v1;
  int v2;
  int v3;
  unint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;
  int v11;

  v1 = 1759421093
     * ((-2 - ((~result | 0xA799CC8FED74AA68) + (result | 0x58663370128B5597))) ^ 0x89270DDF5E091A3CLL);
  v2 = *(_DWORD *)(result + 32) ^ v1;
  v3 = *(_DWORD *)(result + 36) + v1;
  v4 = *(_QWORD *)(result + 8) + v1;
  v5 = *(_DWORD *)(result + 40) ^ v1;
  v6 = *(_DWORD *)(result + 16) - v1;
  v7 = *(_QWORD *)(result + 24) ^ v1;
  v8 = v4 >= v7;
  v9 = v4 != v7;
  v10 = v8;
  if ((v3 & 1) != 0)
    v9 = v10;
  if (v9)
    v11 = v6;
  else
    v11 = v2;
  *(_DWORD *)(result + 44) = v5 ^ v11;
  return result;
}

uint64_t sub_18FE97868(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 8);
  return 0;
}

_BYTE *sub_18FE97880(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_18FE97910 + 4 * byte_190447A07[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

uint64_t sub_18FE97974(uint64_t result)
{
  unint64_t v1;
  int v2;
  int v3;
  unint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;
  int v11;

  v1 = 1178560073 * ((result - 2 * (result & 0xAE9DDB9EFF8D7B05) - 0x51622461007284FBLL) ^ 0x9324D8DECD9B7B45);
  v2 = *(_DWORD *)(result + 12) ^ v1;
  v3 = *(_DWORD *)(result + 4) ^ v1;
  v4 = *(_QWORD *)(result + 24) ^ v1;
  v5 = *(_DWORD *)(result + 32) - v1;
  v6 = *(_DWORD *)(result + 36) + v1;
  v7 = *(_QWORD *)(result + 16) - v1;
  v8 = (uint64_t)v7 < (uint64_t)v4;
  v9 = v7 < v4;
  v10 = v8;
  if ((v2 & 1) != 0)
    v9 = v10;
  if (v9)
    v11 = v5;
  else
    v11 = v3;
  *(_DWORD *)(result + 8) = v11 ^ v6;
  return result;
}

uint64_t sub_18FE97A00(_DWORD *a1)
{
  unsigned int v2;
  uint64_t result;
  int v4;

  v2 = *a1 ^ (1178560073 * (((a1 | 0x10B6B0E1) - (a1 & 0x10B6B0E1)) ^ 0x22A0B0A1));
  result = ((uint64_t (*)(char *, _QWORD))*(&off_1E2ABD050 + (int)(v2 - 1695027228)))((char *)*(&off_1E2ABD050 + (int)(v2 ^ 0x65081076)) - 8, *(&off_1E2ABD050 + (int)(v2 ^ 0x65081061)));
  v4 = *(_DWORD *)*(&off_1E2ABD050 + (int)(v2 ^ 0x650810B6));
  if ((_DWORD)result)
    v4 = -446875106;
  a1[1] = v4;
  return result;
}

uint64_t sub_18FE97AC0(uint64_t result)
{
  unint64_t v1;
  int v2;
  int v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  int v7;
  _BOOL4 v8;
  _BOOL4 v9;
  _BOOL4 v10;

  v1 = 535753261
     * ((-2 - ((~result | 0xCE9083717906D1D1) + (result | 0x316F7C8E86F92E2ELL))) ^ 0x3B72DE1C73F2DFFELL);
  v2 = *(_DWORD *)(result + 4) + v1;
  v3 = *(_DWORD *)(result + 40) - v1;
  v4 = *(_QWORD *)(result + 32) ^ v1;
  v5 = *(_DWORD *)result ^ v1;
  v6 = *(_QWORD *)(result + 16) + v1;
  v7 = *(_DWORD *)(result + 44) ^ v1;
  v8 = v4 > v6;
  v9 = v4 == v6;
  if ((v5 & 1) != 0)
    v10 = v8;
  else
    v10 = v9;
  if (v10)
    v7 = v3;
  *(_DWORD *)(result + 24) = v7 ^ v2;
  return result;
}

uint64_t sub_18FE97B64(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 88) = 6;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 8);
  return 0;
}

void sub_18FE97B84(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v1 = *a1 ^ (460628867 * ((((2 * (_DWORD)a1) | 0xFE17D808) - (_DWORD)a1 - 2131487748) ^ 0x339D6E79));
  v3 = *(_QWORD *)((char *)*(&off_1E2ABD050 + (int)(v1 ^ 0x196C3936)) - 4);
  v2 = v1 + 628203409 * (((&v2 | 0xA5DEF934) - (&v2 & 0xA5DEF934)) ^ 0x2756F507) - 426521323;
  sub_18FE66C94((uint64_t)&v2);
}

uint64_t sub_18FE97C74(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _QWORD v4[2];
  unsigned int v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 8) - 235795823 * (((a1 | 0xDA219BBE) - (a1 & 0xDA219BBE)) ^ 0x4E8CD2E7);
  v2 = *(_QWORD *)(a1 + 16);
  v4[0] = *(_QWORD *)a1;
  v4[1] = v2;
  v1 += 1882357609;
  v5 = v1 - 460628867 * ((((2 * v4) | 0xE5C26FCC) - v4 + 220121114) ^ 0xBE77B59B) + 745;
  return ((uint64_t (*)(_QWORD *))((char *)*(&off_1E2ABD050 + v1) - 8))(v4);
}

uint64_t sub_18FE97D60(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 24);
  return 0;
}

uint64_t sub_18FE97D78(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;

  v1 = 1374699841
     * (((result ^ 0x1C901A3C001822A1) & 0x1FB61EFE8E9BEAE7 | (result ^ 0xE008E10020040010) & 0xE049E10171641518) ^ 0xF29465304DE83AB8);
  v2 = *(_QWORD *)(result + 40) + v1;
  v3 = *(_DWORD *)result ^ v1;
  v4 = *(_DWORD *)(result + 8) - v1;
  v5 = *(_DWORD *)(result + 32) - v1;
  v6 = *(_QWORD *)(result + 24) - v1;
  v7 = *(_DWORD *)(result + 4) + v1;
  v8 = v2 == v6;
  v9 = v2 > v6;
  v10 = v8;
  if ((v4 & 1) == 0)
    v9 = v10;
  if (!v9)
    v7 = v3;
  *(_DWORD *)(result + 12) = v7 ^ v5;
  return result;
}

uint64_t sub_18FE97E30(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t result;
  _QWORD v9[2];
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v2 = 3804331 * ((-2 - ((a1 | 0x4D8BE6A2) + (~(_DWORD)a1 | 0xB274195D))) ^ 0x48EAEA0B);
  v3 = *(_DWORD *)(a1 + 32) ^ v2;
  v4 = *(_DWORD *)(a1 + 4) + v2;
  v5 = *(_QWORD *)(a1 + 24);
  v6 = 1755732067 * (v9 ^ 0xDEC6BDDB);
  v7 = (*(_DWORD *)(a1 + 8) ^ v2) - v6;
  v3 -= 2138963138;
  v9[0] = *(_QWORD *)(a1 + 16);
  v9[1] = v5;
  v10 = -1003647545 * v4 - v6 - 2 * ((-1003647545 * v4 + 711521668) & 0x325F6856 ^ (-1003647545 * v4) & 2) - 590848552;
  v11 = v6 ^ (v3 + 7);
  v12 = v7 - 1207418305;
  result = ((uint64_t (*)(_QWORD *))((char *)*(&off_1E2ABD050 + v3) - 8))(v9);
  *(_DWORD *)a1 = v13;
  return result;
}

void sub_18FE97F80()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v0 = qword_1EE1C2010 - qword_1EE1C1428 - (_QWORD)&v1;
  qword_1EE1C1428 = 1209664481 * v0 + 0x5A53928AE3C855CELL;
  qword_1EE1C2010 = 1209664481 * (v0 ^ 0x2DEB88543200F8ELL);
  v2 = (1374699841 * ((2 * (&v2 & 0x5D1DC580) - &v2 + 585251455) ^ 0x4F162276)) ^ 0x88;
  v3 = (uint64_t)*(&off_1E2ABD050
                + ((-31 * ((qword_1EE1C2010 - (-31 * v0 - 50)) ^ 0x8E)) ^ byte_1904530A0[byte_19044EC70[(-31 * ((qword_1EE1C2010 - (-31 * v0 - 50)) ^ 0x8E))] ^ 0xEB])
                - 7);
  sub_18FE66B2C(&v2);
}

uint64_t sub_18FE980AC(uint64_t a1)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t result;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v2 = 460628867 * (a1 ^ 0x4C96827D);
  v3 = *(_DWORD *)(a1 + 32) ^ v2;
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v8 = -1281184979 * (*(_DWORD *)(a1 + 48) + v2) + 1136886005;
  v9 = 235795823
     * (((&v11 ^ 0x430A6D56) + 874547561 - 2 * ((&v11 ^ 0x430A6D56) & 0x34208969)) ^ 0xE387AD66);
  v12 = v9 + (v8 ^ 0x71FEE7FE) + ((2 * v8) & 0xE3FDCFFC) - 278013504;
  v11 = v7;
  v16 = v9 ^ (v3 + 2024874920);
  v17 = v4;
  v13 = v5;
  v14 = v6;
  result = ((uint64_t (*)(uint64_t *))((char *)*(&off_1E2ABD050 + (int)(v3 ^ 0x874EE3DA)) - 4))(&v11);
  *(_DWORD *)(a1 + 16) = v15;
  return result;
}

BOOL PKAppleBalanceInStoreTopUpTokenTypeFromString(void *a1)
{
  __CFString *v1;
  __CFString *v2;
  int v3;
  _BOOL8 v4;

  v1 = a1;
  v2 = v1;
  v4 = 0;
  if (v1 != CFSTR("barcode"))
  {
    if (!v1 || (v3 = -[__CFString isEqualToString:](v1, "isEqualToString:", CFSTR("barcode")), v2, !v3))
      v4 = 1;
  }

  return v4;
}

const __CFString *PKAppleBalanceInStoreTopUpTokenTypeToString(uint64_t a1)
{
  if (a1)
    return CFSTR("unknown");
  else
    return CFSTR("barcode");
}

uint64_t PKAppleBalanceInStoreTopUpTokenStateFromString(void *a1)
{
  __CFString *v1;
  __CFString *v2;
  char v3;
  uint64_t v4;
  __CFString *v5;
  __CFString *v6;
  int v7;

  v1 = a1;
  v2 = v1;
  if (v1 == CFSTR("valid"))
    goto LABEL_4;
  if (!v1)
  {
LABEL_8:
    v4 = 2;
    goto LABEL_9;
  }
  v3 = -[__CFString isEqualToString:](v1, "isEqualToString:", CFSTR("valid"));

  if ((v3 & 1) == 0)
  {
    v5 = v2;
    if (v5 == CFSTR("invalid")
      || (v6 = v5, v7 = -[__CFString isEqualToString:](v5, "isEqualToString:", CFSTR("invalid")), v6, v7))
    {
      v4 = 1;
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_4:
  v4 = 0;
LABEL_9:

  return v4;
}

const __CFString *PKAppleBalanceInStoreTopUpTokenStateToString(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("valid");
  if (a1 == 1)
    v1 = CFSTR("invalid");
  if (a1 == 2)
    return CFSTR("unknown");
  else
    return v1;
}

const __CFString *PKDynamicProvisioningPageLayoutToString(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("compact");
  if (a1 != 2)
    v1 = 0;
  if (a1 == 1)
    return CFSTR("default");
  else
    return v1;
}

uint64_t PKPeerPaymentPaymentModeFromString(void *a1)
{
  __CFString *v1;
  __CFString *v2;
  int v3;
  uint64_t v4;

  v1 = a1;
  v2 = v1;
  if (v1 == CFSTR("deviceTap")
    || v1 && (v3 = -[__CFString isEqualToString:](v1, "isEqualToString:", CFSTR("deviceTap")), v2, v3))
  {
    v4 = 2;
  }
  else
  {
    v4 = 1;
  }

  return v4;
}

const __CFString *PKPeerPaymentPaymentModeToString(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("unknown");
  if (a1 == 1)
    v1 = CFSTR("messages");
  if (a1 == 2)
    return CFSTR("deviceTap");
  else
    return v1;
}

BOOL PKPeerPaymentContactAddressTypeFromString(void *a1)
{
  __CFString *v1;
  __CFString *v2;
  int v3;
  _BOOL8 v4;

  v1 = a1;
  v2 = v1;
  v4 = 1;
  if (v1 != CFSTR("displayName"))
  {
    if (!v1
      || (v3 = -[__CFString isEqualToString:](v1, "isEqualToString:", CFSTR("displayName")), v2, !v3))
    {
      v4 = 0;
    }
  }

  return v4;
}

const __CFString *PKPeerPaymentContactAddressTypeToString(uint64_t a1)
{
  if (a1)
    return CFSTR("displayName");
  else
    return CFSTR("default");
}

const __CFString *PKPeerPaymentAccountResolutionStateToString(unint64_t a1)
{
  if (a1 > 5)
    return CFSTR("Unknown");
  else
    return off_1E2ABD968[a1];
}

BOOL PKPeerPaymentAccountShouldContactSupport(void *a1)
{
  id v1;
  unint64_t v2;
  uint64_t v4;
  _BOOL8 v5;

  v1 = a1;
  v2 = objc_msgSend(v1, "state");
  if (v2 > 3 || v2 == 1)
  {
    v5 = 0;
  }
  else
  {
    v4 = objc_msgSend(v1, "stateReason");
    if ((unint64_t)(v4 - 2) >= 6)
      v5 = v4 == 0;
    else
      v5 = objc_msgSend(v1, "role") == 0;
  }

  return v5;
}

uint64_t PKPeerPaymentAccountResolutionForAccountAndPeerPaymentPass(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v8;
  _BOOL4 ShouldContactSupport;
  int v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "state");
  v6 = objc_msgSend(v4, "activationState");

  v8 = v6 == 4 && v5 != 4;
  ShouldContactSupport = PKPeerPaymentAccountShouldContactSupport(v3);
  if (ShouldContactSupport)
    v10 = objc_msgSend(v3, "identityVerificationRequired");
  else
    v10 = 0;
  objc_msgSend(v3, "currentBalance");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "amount");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3598], "zero");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v12, "compare:", v13);

  if (v8)
  {
    v15 = objc_msgSend(v3, "identityVerificationRequired");
    if ((v5 & 0xFFFFFFFFFFFFFFFELL) == 2)
      v16 = v15;
    else
      v16 = 1;
    if (v16)
      v17 = 1;
    else
      v17 = 3;
  }
  else
  {
    v18 = ShouldContactSupport | v10;
    if (v5 == 4)
      v18 = 1;
    v19 = 3;
    if (!ShouldContactSupport)
      v19 = 4;
    if (v10)
      v19 = 2;
    v20 = 5;
    if (v14 != -1)
      v20 = 0;
    if (v18)
      v17 = v19;
    else
      v17 = v20;
  }

  return v17;
}

uint64_t PKPeerPaymentShouldDisplayPaymentHint(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t ShouldDisplayResultForDetectedAmount;

  v5 = a2;
  v6 = a1;
  ShouldDisplayResultForDetectedAmount = PKPeerPaymentShouldDisplayResultForDetectedAmount(v6, v5, (unint64_t)objc_msgSend(a3, "count") > 1);

  return ShouldDisplayResultForDetectedAmount;
}

uint64_t PKPeerPaymentShouldDisplayResultForDetectedAmount(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  const char *v12;
  const char *v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  int v25;
  _BYTE v26[30];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  PKLogFacilityTypeGetObject(0xBuLL);
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v25 = 138412802;
    *(_QWORD *)v26 = v5;
    *(_WORD *)&v26[8] = 2112;
    *(_QWORD *)&v26[10] = v6;
    *(_WORD *)&v26[18] = 1024;
    *(_DWORD *)&v26[20] = a3;
    _os_log_impl(&dword_18FC92000, v7, OS_LOG_TYPE_DEFAULT, "Received call to PKPeerPaymentShouldDisplayResultForDetectedAmount() with amount: %@ currency: %@ hasMultipleRecipients: %d", (uint8_t *)&v25, 0x1Cu);
  }

  if ((PKPeerPaymentIsAvailable() & 1) == 0)
  {
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      goto LABEL_15;
    LOWORD(v25) = 0;
    v13 = "Rejecting result because peer payments are not available";
    goto LABEL_14;
  }
  if ((PKPeerPaymentMessagesExtensionIsVisible() & 1) == 0)
  {
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      goto LABEL_15;
    LOWORD(v25) = 0;
    v13 = "Rejecting result because the peer payment messages extension is not visible";
LABEL_14:
    _os_log_impl(&dword_18FC92000, v7, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&v25, 2u);
LABEL_15:

    v14 = 0;
    v15 = 0;
    if ((PKUseMockSURFServer() & 1) != 0)
      goto LABEL_49;
    goto LABEL_16;
  }
  if ((PKUseMockSURFServer() & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3598], "decimalNumberWithString:", CFSTR("1"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v5, "compare:", v8);

    if (v9 == -1)
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v25) = 0;
        v12 = "Rejecting result because amount is below the mock server's minimum send amount";
        goto LABEL_47;
      }
LABEL_48:

      v15 = 0;
      goto LABEL_49;
    }
    objc_msgSend(MEMORY[0x1E0CB3598], "decimalNumberWithString:", CFSTR("500"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v5, "compare:", v10);

    if (v11 == 1)
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v25) = 0;
        v12 = "Rejecting result because amount is above the mock server's maximum send amount";
LABEL_47:
        _os_log_impl(&dword_18FC92000, v7, OS_LOG_TYPE_DEFAULT, v12, (uint8_t *)&v25, 2u);
        goto LABEL_48;
      }
      goto LABEL_48;
    }
    v15 = 1;
LABEL_44:
    if (!a3)
      goto LABEL_49;
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      goto LABEL_48;
    LOWORD(v25) = 0;
    v12 = "Rejecting result in chat that has multiple recipients";
    goto LABEL_47;
  }
  if ((PKSharedCacheGetBoolForKey(CFSTR("CanSendPeerPayments")) & 1) != 0)
  {
    v14 = 1;
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v25) = 0;
      _os_log_impl(&dword_18FC92000, v7, OS_LOG_TYPE_DEFAULT, "Rejecting result because PKSharedCacheCanSendPeerPaymentsKey is false", (uint8_t *)&v25, 2u);
    }

    v14 = 0;
  }
LABEL_16:
  PKSharedCacheGetStringForKey(CFSTR("MinimumPeerPaymentSendAmount"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  PKSharedCacheGetStringForKey(CFSTR("MaximumPeerPaymentSendAmount"));
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = (void *)v17;
  if (v14)
  {
    if (v5 && v16 && v17)
    {
      objc_msgSend(MEMORY[0x1E0CB3598], "decimalNumberWithString:", v16);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v5, "compare:", v19) == -1)
      {

      }
      else
      {
        objc_msgSend(MEMORY[0x1E0CB3598], "decimalNumberWithString:", v18);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = objc_msgSend(v5, "compare:", v20);

        if (v21 != 1)
        {
          v15 = 1;
          goto LABEL_35;
        }
      }
    }
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v25 = 138412802;
      *(_QWORD *)v26 = v5;
      *(_WORD *)&v26[8] = 2112;
      *(_QWORD *)&v26[10] = v16;
      *(_WORD *)&v26[18] = 2112;
      *(_QWORD *)&v26[20] = v18;
      _os_log_impl(&dword_18FC92000, v7, OS_LOG_TYPE_DEFAULT, "Rejecting result that is not in the supported amount range. Detected Amount: %@, Minimum: %@, Maximum: %@", (uint8_t *)&v25, 0x20u);
    }

  }
  v15 = 0;
LABEL_35:
  PKSharedCacheGetStringForKey(CFSTR("PeerPaymentSendCurrency"));
  v22 = objc_claimAutoreleasedReturnValue();
  v23 = (void *)v22;
  if ((_DWORD)v15)
  {
    if (v6 && v22 && (objc_msgSend(v6, "isEqualToString:", v22) & 1) != 0)
    {
      v15 = 1;
    }
    else
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        v25 = 138412546;
        *(_QWORD *)v26 = v6;
        *(_WORD *)&v26[8] = 2112;
        *(_QWORD *)&v26[10] = v23;
        _os_log_impl(&dword_18FC92000, v7, OS_LOG_TYPE_DEFAULT, "Rejecting result for unsupported currency. Detected Currency: %@, Supported Currency: %@", (uint8_t *)&v25, 0x16u);
      }

      v15 = 0;
    }
  }

  if ((_DWORD)v15)
    goto LABEL_44;
LABEL_49:
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v25 = 67109890;
    *(_DWORD *)v26 = v15;
    *(_WORD *)&v26[4] = 2112;
    *(_QWORD *)&v26[6] = v5;
    *(_WORD *)&v26[14] = 2112;
    *(_QWORD *)&v26[16] = v6;
    *(_WORD *)&v26[24] = 1024;
    *(_DWORD *)&v26[26] = a3;
    _os_log_impl(&dword_18FC92000, v7, OS_LOG_TYPE_DEFAULT, "Returning %d for PKPeerPaymentShouldDisplayResultForDetectedAmount() with amount: %@ currency: %@ hasMultipleRecipients: %d", (uint8_t *)&v25, 0x22u);
  }

  return v15;
}

uint64_t PKPeerPaymentShouldAllowPaymentForRecipientAddress(void *a1)
{
  id v1;
  int IsAvailable;
  int BoolForKey;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  NSObject *v7;
  int v9;
  id v10;
  __int16 v11;
  int v12;
  __int16 v13;
  int v14;
  __int16 v15;
  int v16;
  __int16 v17;
  _BOOL4 v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  IsAvailable = PKPeerPaymentIsAvailable();
  if ((PKUseMockSURFServer() & 1) != 0)
    BoolForKey = 1;
  else
    BoolForKey = PKSharedCacheGetBoolForKey(CFSTR("CanSendPeerPayments"));
  PKIDSNormalizedAddress(v1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "length");

  if (v5 > 3)
    v6 = IsAvailable & BoolForKey;
  else
    v6 = 0;
  PKLogFacilityTypeGetObject(0xBuLL);
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v9 = 138413314;
    v10 = v1;
    v11 = 1024;
    v12 = v6;
    v13 = 1024;
    v14 = IsAvailable;
    v15 = 1024;
    v16 = BoolForKey;
    v17 = 1024;
    v18 = v5 > 3;
    _os_log_impl(&dword_18FC92000, v7, OS_LOG_TYPE_DEFAULT, "PKPeerPaymentShouldAllowPaymentForRecipientAddress() called for address \"%@\", returning %d.\navailable: %d, canSendPayments: %d, hasNormalizedAddress: %d", (uint8_t *)&v9, 0x24u);
  }

  return v6;
}

id PKPeerPaymentGetSendPaymentSensitiveURL(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v23;
  _QWORD v24[2];
  void *v25;
  const __CFString *v26;
  _QWORD v27[2];

  v27[1] = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = objc_alloc_init(MEMORY[0x1E0CB3998]);
  objc_msgSend(v8, "setScheme:", CFSTR("sms-private"));
  objc_msgSend(v8, "setPath:", CFSTR("open"));
  v9 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(MEMORY[0x1E0CB39D8], "queryItemWithName:value:", CFSTR("service"), CFSTR("iMessage"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "addObject:", v10);

  if (objc_msgSend(v5, "length"))
  {
    objc_msgSend(MEMORY[0x1E0CB39D8], "queryItemWithName:value:", CFSTR("recipient"), v5);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "addObject:", v11);

  }
  objc_msgSend(MEMORY[0x1E0CB39D8], "queryItemWithName:value:", CFSTR("appBundleID"), CFSTR("com.apple.PassbookUIService.PeerPaymentMessagesExtension"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "addObject:", v12);

  if (v6 && objc_msgSend(v7, "length"))
  {
    v26 = CFSTR("Currency");
    objc_msgSend(v6, "stringValue", CFSTR("CurrencyType"), CFSTR("CurrencyValue"), v7);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v24[1] = v13;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v24, &v23, 2);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = v14;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v25, 1);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v27[0] = v15;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v27, &v26, 1);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB36D8], "dataWithJSONObject:options:error:", v16, 0, 0);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    if (v17)
    {
      v18 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithData:encoding:", v17, 4);
      if (objc_msgSend(v18, "length"))
      {
        objc_msgSend(MEMORY[0x1E0CB39D8], "queryItemWithName:value:", CFSTR("appPayload"), v18);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "addObject:", v19);

      }
    }

  }
  v20 = (void *)objc_msgSend(v9, "copy");
  objc_msgSend(v8, "setQueryItems:", v20);

  objc_msgSend(v8, "URL");
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  return v21;
}

id PKPeerPaymentGetTopUpSensitiveURL()
{
  __CFString *v0;
  void *v1;
  void *v2;

  if (+[PKWalletVisibility isWalletVisible](PKWalletVisibility, "isWalletVisible"))
    v0 = CFSTR("shoebox://");
  else
    v0 = CFSTR("prefs:root=PASSBOOK&path=");
  -[__CFString stringByAppendingString:](v0, "stringByAppendingString:", CFSTR("peerPaymentTopUp"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id PKPeerPaymentGetTermsAcceptanceSensitiveURL()
{
  __CFString *v0;
  void *v1;
  void *v2;

  if (+[PKWalletVisibility isWalletVisible](PKWalletVisibility, "isWalletVisible"))
    v0 = CFSTR("shoebox://");
  else
    v0 = CFSTR("prefs:root=PASSBOOK&path=");
  -[__CFString stringByAppendingString:](v0, "stringByAppendingString:", CFSTR("peerPaymentTermsAcceptance"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id PKPeerPaymentGetVerifyIdentitySensitiveURL()
{
  __CFString *v0;
  void *v1;
  void *v2;

  if (+[PKWalletVisibility isWalletVisible](PKWalletVisibility, "isWalletVisible"))
    v0 = CFSTR("shoebox://");
  else
    v0 = CFSTR("prefs:root=PASSBOOK&path=");
  -[__CFString stringByAppendingString:](v0, "stringByAppendingString:", CFSTR("peerPaymentVerifyIdentity"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id PKPeerPaymentGetSetupSensitiveURLForPreferencesWithCurrencyAmount(void *a1, unint64_t a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  v5 = a1;
  v6 = a3;
  v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB37A0]), "initWithString:", CFSTR("prefs:root=PASSBOOK&path="));
  objc_msgSend(v7, "appendString:", CFSTR("peerPaymentSetup"));
  objc_msgSend(v7, "appendString:", CFSTR("&"));
  if (v5)
  {
    objc_msgSend(v7, "appendString:", CFSTR("setupAmount"));
    objc_msgSend(v7, "appendString:", CFSTR("="));
    objc_msgSend(v5, "amount");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "stringValue");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3500], "URLQueryAllowedCharacterSet");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringByAddingPercentEncodingWithAllowedCharacters:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "appendString:", v11);

    objc_msgSend(v7, "appendString:", CFSTR("&"));
    objc_msgSend(v7, "appendString:", CFSTR("setupCurreny"));
    objc_msgSend(v7, "appendString:", CFSTR("="));
    objc_msgSend(v5, "currency");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3500], "URLQueryAllowedCharacterSet");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "stringByAddingPercentEncodingWithAllowedCharacters:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "appendString:", v14);

    objc_msgSend(v7, "appendString:", CFSTR("&"));
  }
  objc_msgSend(v7, "appendString:", CFSTR("setupFlowState"));
  objc_msgSend(v7, "appendString:", CFSTR("="));
  PKPeerPaymentRegistrationFlowStateToString(a2);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3500], "URLQueryAllowedCharacterSet");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "stringByAddingPercentEncodingWithAllowedCharacters:", v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "appendString:", v17);

  if (v6)
  {
    objc_msgSend(v7, "appendString:", CFSTR("&"));
    objc_msgSend(v7, "appendString:", CFSTR("setupSenderAddress"));
    objc_msgSend(v7, "appendString:", CFSTR("="));
    objc_msgSend(MEMORY[0x1E0CB3500], "URLQueryAllowedCharacterSet");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "stringByAddingPercentEncodingWithAllowedCharacters:", v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "appendString:", v19);

  }
  v20 = (void *)MEMORY[0x1E0C99E98];
  v21 = (void *)objc_msgSend(v7, "copy");
  objc_msgSend(v20, "URLWithString:", v21);
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  return v22;
}

id PKPeerPaymentGetSetupSensitiveURLWithConfiguration(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  unint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  const __CFString *v19;
  const __CFString *v20;
  void *v21;
  void *v22;

  v1 = a1;
  objc_msgSend(v1, "currencyAmount");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "senderAddress");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v1, "registrationFlowState");
  if (+[PKWalletVisibility isWalletVisible](PKWalletVisibility, "isWalletVisible"))
  {
    v5 = objc_alloc_init(MEMORY[0x1E0CB3998]);
    objc_msgSend(v5, "setScheme:", CFSTR("shoebox"));
    objc_msgSend(v5, "setHost:", CFSTR("peerPaymentSetup"));
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v2)
    {
      v7 = (void *)MEMORY[0x1E0CB39D8];
      objc_msgSend(v2, "amount");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "stringValue");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "queryItemWithName:value:", CFSTR("setupAmount"), v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "addObject:", v10);

      v11 = (void *)MEMORY[0x1E0CB39D8];
      objc_msgSend(v2, "currency");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "queryItemWithName:value:", CFSTR("setupCurreny"), v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "addObject:", v13);

    }
    v14 = (void *)MEMORY[0x1E0CB39D8];
    PKPeerPaymentRegistrationFlowStateToString(v4);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "queryItemWithName:value:", CFSTR("setupFlowState"), v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "addObject:", v16);

    if (v3)
    {
      objc_msgSend(MEMORY[0x1E0CB39D8], "queryItemWithName:value:", CFSTR("setupSenderAddress"), v3);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "addObject:", v17);

    }
    v18 = objc_msgSend(v1, "paymentMode");
    v19 = CFSTR("unknown");
    if (v18 == 1)
      v19 = CFSTR("messages");
    if (v18 == 2)
      v20 = CFSTR("deviceTap");
    else
      v20 = v19;
    objc_msgSend(MEMORY[0x1E0CB39D8], "queryItemWithName:value:", CFSTR("setupPaymentMode"), v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "addObject:", v21);

    objc_msgSend(v5, "setQueryItems:", v6);
    objc_msgSend(v5, "URL");
    v22 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    PKPeerPaymentGetSetupSensitiveURLForPreferencesWithCurrencyAmount(v2, v4, v3);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v22;
}

void PKPeerPaymentSetMessagesExtensionIsVisible(uint64_t a1)
{
  NSObject *v2;
  dispatch_time_t v3;
  _DWORD v4[2];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  PKLogFacilityTypeGetObject(0xBuLL);
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 67109120;
    v4[1] = a1;
    _os_log_impl(&dword_18FC92000, v2, OS_LOG_TYPE_DEFAULT, "PKPeerPaymentSetMessagesExtensionIsVisible() called with value %d", (uint8_t *)v4, 8u);
  }

  PKSharedCacheSetBoolForKey(a1, CFSTR("PeerPaymentMessagesExtensionVisible"));
  v3 = dispatch_time(0, 1000000000);
  dispatch_after(v3, MEMORY[0x1E0C80D38], &__block_literal_global_3);
}

void PKPeerPaymentProcessMessageWithDataURL(void *a1)
{
  PKPeerPaymentProcessMessageWithDataURLAndSessionIdentifier(a1, 0);
}

void PKPeerPaymentProcessMessageWithDataURLAndSessionIdentifier(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  PKProtobufPeerPaymentMessage *v6;
  NSObject *v7;
  _BOOL4 v8;
  void *v9;
  int v10;
  void *v11;
  PKPeerPaymentRecurringPaymentMemo *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  NSDecimalNumber *v21;
  NSString *v22;
  PKPeerPaymentPendingRequest *v23;
  void *v24;
  PKPeerPaymentPendingRequest *v25;
  PKPeerPaymentPendingRequest *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  NSDecimalNumber *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  _QWORD v36[4];
  id v37;
  PKPeerPaymentPendingRequest *v38;
  _BYTE buf[12];
  __int16 v40;
  void *v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (qword_1ECF22118 == -1)
  {
    if (v3)
      goto LABEL_3;
  }
  else
  {
    dispatch_once(&qword_1ECF22118, &__block_literal_global_157);
    if (v3)
    {
LABEL_3:
      PKPeerPaymentMessageDataWithDataURL(v3);
      v5 = objc_claimAutoreleasedReturnValue();
      if (!v5)
      {
        PKLogFacilityTypeGetObject(0xBuLL);
        v6 = (PKProtobufPeerPaymentMessage *)objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(&v6->super.super, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_18FC92000, &v6->super.super, OS_LOG_TYPE_DEFAULT, "PKPeerPaymentProcessMessageWithDataURLAndSessionIdentifier() called with invalid data url.", buf, 2u);
        }
        goto LABEL_22;
      }
      v6 = -[PKProtobufPeerPaymentMessage initWithData:]([PKProtobufPeerPaymentMessage alloc], "initWithData:", v5);
      PKLogFacilityTypeGetObject(0xBuLL);
      v7 = objc_claimAutoreleasedReturnValue();
      v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
      if (!v6)
      {
        if (v8)
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_18FC92000, v7, OS_LOG_TYPE_DEFAULT, "PKPeerPaymentProcessMessageWithDataURLAndSessionIdentifier() called with invalid message.", buf, 2u);
        }

        v6 = 0;
        goto LABEL_22;
      }
      if (v8)
      {
        PKPeerPaymentMessageDictionaryRepresentationFromProtobuf(v6, 2);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        *(_QWORD *)&buf[4] = v4;
        v40 = 2112;
        v41 = v9;
        _os_log_impl(&dword_18FC92000, v7, OS_LOG_TYPE_DEFAULT, "PKPeerPaymentProcessMessageWithDataURLAndSessionIdentifier() called with session identifier %@ and message %@.", buf, 0x16u);

      }
      v10 = -[PKProtobufPeerPaymentMessage type](v6, "type");
      if (v10 == 3)
      {
        -[PKProtobufPeerPaymentMessage recurringPaymentIdentifier](v6, "recurringPaymentIdentifier");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_alloc_init(PKPeerPaymentRecurringPaymentMemo);
        *(_QWORD *)buf = 0;
        -[PKProtobufPeerPaymentMessage recurringPaymentColor](v6, "recurringPaymentColor");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        PKSemanticColorFromString(v13, (uint64_t *)buf);

        -[PKPeerPaymentRecurringPaymentMemo setColor:](v12, "setColor:", *(_QWORD *)buf);
        -[PKProtobufPeerPaymentMessage recurringPaymentEmoji](v6, "recurringPaymentEmoji");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKPeerPaymentRecurringPaymentMemo setEmoji:](v12, "setEmoji:", v14);

        -[PKProtobufPeerPaymentMessage memo](v6, "memo");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKPeerPaymentRecurringPaymentMemo setText:](v12, "setText:", v15);

        v16 = (void *)_MergedGlobals_188;
        v36[0] = MEMORY[0x1E0C809B0];
        v36[1] = 3221225472;
        v36[2] = __PKPeerPaymentProcessMessageWithDataURLAndSessionIdentifier_block_invoke_163;
        v36[3] = &unk_1E2ABD948;
        v37 = v11;
        v17 = v11;
        objc_msgSend(v16, "updateRecurringPaymentMemo:identifier:completion:", v12, v17, v36);

      }
      else
      {
        if (v10 != 2)
        {
          if (v10 == 1)
            objc_msgSend((id)_MergedGlobals_188, "receivedPeerPaymentMessageData:", v5);
          goto LABEL_22;
        }
        -[PKProtobufPeerPaymentMessage requestToken](v6, "requestToken");
        v34 = objc_claimAutoreleasedReturnValue();
        -[PKProtobufPeerPaymentMessage senderAddress](v6, "senderAddress");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        PKBestGuessNormalizedEmailOrPhoneNumber(v18);
        v33 = (void *)objc_claimAutoreleasedReturnValue();

        -[PKProtobufPeerPaymentMessage recipientAddress](v6, "recipientAddress");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        PKBestGuessNormalizedEmailOrPhoneNumber(v19);
        v32 = (void *)objc_claimAutoreleasedReturnValue();

        if (-[PKProtobufPeerPaymentMessage hasDecimalAmount](v6, "hasDecimalAmount"))
        {
          -[PKProtobufPeerPaymentMessage decimalAmount](v6, "decimalAmount");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          PKProtoSupportDecimalNumberFromProtobuf(v20);
          v21 = (NSDecimalNumber *)objc_claimAutoreleasedReturnValue();

        }
        else
        {
          objc_msgSend(MEMORY[0x1E0CB3598], "decimalNumberWithMantissa:exponent:isNegative:", -[PKProtobufPeerPaymentMessage amount](v6, "amount"), 4294967294, 0);
          v21 = (NSDecimalNumber *)objc_claimAutoreleasedReturnValue();
        }
        v31 = v21;
        -[PKProtobufPeerPaymentMessage currency](v6, "currency");
        v22 = (NSString *)objc_claimAutoreleasedReturnValue();
        PKCurrencyAmountCreate(v21, v22, 0);
        v35 = (void *)objc_claimAutoreleasedReturnValue();

        -[PKProtobufPeerPaymentMessage memo](v6, "memo");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "UUIDString");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = [PKPeerPaymentPendingRequest alloc];
        objc_msgSend(MEMORY[0x1E0C99D68], "date");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v25 = v23;
        v12 = (PKPeerPaymentRecurringPaymentMemo *)v34;
        v26 = -[PKPeerPaymentPendingRequest initWithRequestToken:requesterAddress:requesteeAddress:currencyAmount:memo:sessionID:requestDate:expiryDate:lastDismissedDate:actions:status:](v25, "initWithRequestToken:requesterAddress:requesteeAddress:currencyAmount:memo:sessionID:requestDate:expiryDate:lastDismissedDate:actions:status:", v34, v33, v32, v35, v30, v29, v24, 0, 0, 0, CFSTR("unknown"));

        v27 = (void *)_MergedGlobals_188;
        v38 = v26;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v38, 1);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "insertOrUpdatePeerPaymentPendingRequests:shouldScheduleNotifications:", v28, 1);

      }
LABEL_22:

      goto LABEL_26;
    }
  }
  PKLogFacilityTypeGetObject(0xBuLL);
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_18FC92000, v5, OS_LOG_TYPE_DEFAULT, "PKPeerPaymentProcessMessageWithDataURLAndSessionIdentifier() called with nil data url.", buf, 2u);
  }
LABEL_26:

}

id PKPeerPaymentGetAppleCashFamilySettingsSensitiveURLForAltDSID(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;

  v1 = a1;
  v2 = objc_alloc_init(MEMORY[0x1E0CB3998]);
  objc_msgSend(v2, "setScheme:", CFSTR("settings-navigation"));
  objc_msgSend(v2, "setHost:", CFSTR("com.apple.Settings.Family"));
  if (objc_msgSend(v1, "length"))
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("familyPath=/members/%@/appleCash"), v1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setQuery:", v3);

  }
  objc_msgSend(v2, "URL");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

uint64_t PKSupportsManateeForAppleCashForIDS()
{
  uint64_t BoolForKey;
  NSObject *v1;
  const __CFString *v2;
  int v4;
  const __CFString *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  BoolForKey = PKSharedCacheGetBoolForKey(CFSTR("PeerPaymentSupportsManatee"));
  PKLogFacilityTypeGetObject(0xBuLL);
  v1 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    v2 = CFSTR("NO");
    if ((_DWORD)BoolForKey)
      v2 = CFSTR("YES");
    v4 = 138412290;
    v5 = v2;
    _os_log_impl(&dword_18FC92000, v1, OS_LOG_TYPE_DEFAULT, "[PKPeerPaymentUtilities supportsManateeForAppleCash] called with result %@", (uint8_t *)&v4, 0xCu);
  }

  return BoolForKey;
}

uint64_t PKSupportsRegionForAppleCashForIDS()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  const __CFString *v6;
  int v8;
  void *v9;
  __int16 v10;
  const __CFString *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  PKCurrentRegion();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  +[PKPaymentWebService sharedService](PKPaymentWebService, "sharedService");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "context");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "configuration");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = objc_msgSend(v3, "peerPaymentEnabledForRegion:", v0);
  PKLogFacilityTypeGetObject(0xBuLL);
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = CFSTR("NO");
    if ((_DWORD)v4)
      v6 = CFSTR("YES");
    v8 = 138412546;
    v9 = v0;
    v10 = 2112;
    v11 = v6;
    _os_log_impl(&dword_18FC92000, v5, OS_LOG_TYPE_DEFAULT, "[PKPeerPaymentUtilities supportsRegionForAppleCash] called with region %@. Enabled: %@", (uint8_t *)&v8, 0x16u);
  }

  return v4;
}

uint64_t PKPeerPaymentIsSetup()
{
  return PKSharedCacheGetBoolForKey(CFSTR("PeerPaymentIsSetup"));
}

uint64_t PKPeerPaymentHasCashFamilyAccounts()
{
  return PKSharedCacheGetBoolForKey(CFSTR("PeerPaymentHasCashFamily"));
}

uint64_t PKPeerPaymentCanPerformAccountServicePayments(void *a1, void *a2)
{
  id v3;
  id v4;
  _BOOL4 v5;
  void *v6;
  unsigned int v7;
  _BOOL4 v8;
  uint64_t v9;

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "state") == 1 && objc_msgSend(v3, "stage") == 3;
  objc_msgSend(v4, "devicePrimaryPaymentApplication");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v3, "termsAcceptanceRequired") ^ 1;
  if (v6)
    v8 = v5;
  else
    v8 = 0;
  v9 = v8 & v7;

  return v9;
}

uint64_t PKPeerPaymentNeedsResolutionToPerformAccountServicePayments(void *a1, void *a2)
{
  id v3;
  id v4;
  _BOOL4 v5;
  void *v6;
  unsigned int v7;
  _BOOL4 v8;
  uint64_t v9;

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "state") == 1 && objc_msgSend(v3, "stage") == 2;
  objc_msgSend(v4, "devicePrimaryPaymentApplication");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v3, "termsAcceptanceRequired") ^ 1;
  if (v6)
    v8 = v5;
  else
    v8 = 0;
  v9 = v8 & v7;

  return v9;
}

uint64_t PKDeviceSupportsPeerPaymentIdentityVerification()
{
  return 1;
}

id PKPeerPaymentDisplayNameWithNamesAndPreferences(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  int v8;
  id v9;
  void *v10;
  uint64_t v11;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (v5)
  {
    v8 = objc_msgSend(v5, "shareLastName");
    v9 = v6;
    if (v7 && v8)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR(" %@"), v7);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "stringByAppendingString:", v10);
      v11 = objc_claimAutoreleasedReturnValue();

      v9 = (id)v11;
    }
  }
  else
  {
    v9 = v6;
  }

  return v9;
}

id PKPeerPaymentEncryptDataUsingPrivacySchemeWithCert(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  _BOOL4 v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  CFTypeRef cf;
  uint8_t buf[4];
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  cf = 0;
  v5 = v3;
  if (objc_msgSend(v5, "destination") != 1)
  {
    PKLogFacilityTypeGetObject(0xBuLL);
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      PKPeerPaymentEncryptionCertificateDestinationToString(objc_msgSend(v5, "destination"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v19 = v15;
      _os_log_impl(&dword_18FC92000, v14, OS_LOG_TYPE_DEFAULT, "NearbyPeerPayment: could not validate trust for cert with destination: %@", buf, 0xCu);

    }
    v13 = 0;
    v12 = v5;
    goto LABEL_10;
  }
  PKNearbyPeerPaymentEncryptionOIDValue();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "length");

  }
  objc_msgSend(v5, "encryptionCertificates");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = PKCreateAndValidateTrustWithCertsUsingMarkerOIDs(v8, (SecTrustRef *)&cf);

  if (v9)
  {
    objc_msgSend(v5, "encryptionCertificates");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "firstObject");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    PKPublicKeyFromCertificate(v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (v12)
    {
      PKEncryptDataUsingPrivacyScheme(v4, objc_msgSend(v5, "encryptionScheme"), v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v13 = 0;
    }
LABEL_10:

    goto LABEL_12;
  }
  v13 = 0;
LABEL_12:
  if (cf)
    CFRelease(cf);

  return v13;
}

uint64_t PKPeerPaymentIsEligibleForDeviceTapPayment(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  _BOOL4 v11;
  void *v12;
  void *v13;
  _BOOL4 v14;
  void *v15;
  int v16;
  NSObject *v17;
  const __CFString *v18;
  const __CFString *v19;
  const __CFString *v20;
  int v22;
  const __CFString *v23;
  __int16 v24;
  const __CFString *v25;
  __int16 v26;
  const __CFString *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v4
    && (objc_msgSend(v4, "devicePrimaryPaymentApplication"),
        v6 = (void *)objc_claimAutoreleasedReturnValue(),
        v7 = objc_msgSend(v6, "state"),
        v6,
        v7 == 7))
  {
    PKLogFacilityTypeGetObject(0xBuLL);
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v22) = 0;
      _os_log_impl(&dword_18FC92000, v8, OS_LOG_TYPE_DEFAULT, "NearbyPeerPayment: pass is in lost mode", (uint8_t *)&v22, 2u);
    }

    v9 = 0;
  }
  else
  {
    if (objc_msgSend(v3, "supportsDeviceTap") && objc_msgSend(v3, "state") == 1)
    {
      objc_msgSend(v3, "paymentModeIdentifiers");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = v10 != 0;

    }
    else
    {
      v11 = 0;
    }
    objc_msgSend(v5, "secureElementPass");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "devicePrimaryPaymentApplication");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (v13)
      v14 = 0;
    else
      v14 = objc_msgSend(v3, "stage") != 0;

    +[PKPassLibrary sharedInstance](PKPassLibrary, "sharedInstance");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v15, "passbookHasBeenDeleted") & 1) != 0)
      v16 = 0;
    else
      v16 = _os_feature_enabled_impl();

    PKLogFacilityTypeGetObject(0xBuLL);
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      v18 = CFSTR("NO");
      if (v11)
        v19 = CFSTR("YES");
      else
        v19 = CFSTR("NO");
      if (v14)
        v20 = CFSTR("YES");
      else
        v20 = CFSTR("NO");
      v22 = 138412802;
      v23 = v19;
      v24 = 2112;
      v25 = v20;
      if (v16)
        v18 = CFSTR("YES");
      v26 = 2112;
      v27 = v18;
      _os_log_impl(&dword_18FC92000, v17, OS_LOG_TYPE_DEFAULT, "NearbyPeerPayment: accountSupportsNearbyPeerPayment: %@; isGhostPass: %@; clientIsEligible: %@",
        (uint8_t *)&v22,
        0x20u);
    }

    v9 = v16 & (v11 | v14);
  }

  return v9;
}

BOOL PKProtobufInstantFundsOutFeeSummaryItemReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int v7;
  char v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v15;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  v6 = (int *)MEMORY[0x1E0D82BB8];
  while (1)
  {
    v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
      return v7 == 0;
    if (*(_BYTE *)(a2 + *v5))
    {
      v7 = 1;
      return v7 == 0;
    }
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        LOBYTE(v10) = 0;
        v7 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v7 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      LOBYTE(v10) = 0;
LABEL_14:
    if (v7)
      v15 = 1;
    else
      v15 = (v10 & 7) == 4;
    if (v15)
      return v7 == 0;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      return 0;
  }
}

id PKPaymentWebServiceProxyObjectInterface()
{
  if (qword_1ECF22128 != -1)
    dispatch_once(&qword_1ECF22128, &__block_literal_global_4);
  return (id)_MergedGlobals_189;
}

void sub_18FEAA20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEAB1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEAB2B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEAB38C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEABB4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEABC54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEABEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEAC4F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEAC7A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEACE5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEACF38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEAD048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEAD158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEAE368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18FEAE66C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEAE750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEAE91C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEAE9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *PKPaymentSetupMoreInfoItemTypeDescription(unint64_t a1)
{
  if (a1 > 2)
    return 0;
  else
    return off_1E2ABE2A8[a1];
}

uint64_t PKPaymentSetupMoreInfoItemTypeFromDescription(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("ExpressEducation")) & 1) != 0)
  {
    v2 = 1;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("ExpressEducationV2")))
  {
    v2 = 2;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

id PKPaymentSetupMoreInfoItemDictionaryForExpressUpgradeMarket(void *a1, int a2, uint64_t a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  NSBundle *v12;
  int v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  NSString *v18;
  void *v19;
  void *v20;
  NSString *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  NSObject *v28;
  const char *v29;
  uint8_t *v30;
  id v31;
  void *v32;
  id v33;
  int IsAvailable;
  __CFString *v35;
  __CFString *v36;
  id v37;
  void *v38;
  void *v39;
  NSString *v40;
  void *v41;
  void *v42;
  __CFString *v43;
  void *v44;
  void *v45;
  void *v46;
  id v48;
  uint8_t buf[2];
  __int16 v50;

  v9 = a1;
  v10 = a4;
  v11 = a5;
  if (v9)
  {
    v12 = (NSBundle *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB34D0]), "initWithURL:", v9);
    v13 = PKForceDefaultEmbeddedMarketStrings();
    if (v12 && (v13 & 1) == 0)
    {
      v48 = v11;
      v14 = objc_alloc_init(MEMORY[0x1E0C99E08]);
      PKLocalizedStringInMarketBundle(CFSTR("EXPRESS_TRANSIT_EDUCATION_TITLE"), v12, 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "setObject:forKeyedSubscript:", v15, CFSTR("title"));

      PKLocalizedStringInMarketBundle(CFSTR("EXPRESS_TRANSIT_EDUCATION_LINK"), v12, 0);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "setObject:forKeyedSubscript:", v16, CFSTR("linkText"));

      PKLocalizedStringInMarketBundle(CFSTR("EXPRESS_TRANSIT_EDUCATION_LINK_URL"), v12, 0);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "setObject:forKeyedSubscript:", v17, CFSTR("linkURL"));

      objc_msgSend(v14, "setObject:forKeyedSubscript:", CFSTR("ExpressEducationV2"), CFSTR("type"));
      expressTransitUpgradeBodyKey(a2, 1, a3);
      v18 = (NSString *)objc_claimAutoreleasedReturnValue();
      PKLocalizedStringInMarketBundle(v18, v12, 0);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = v19;
      if ((a3 & 1) == 0 && (!v19 || objc_msgSend(v19, "isEqualToString:", v18)))
      {
        expressTransitUpgradeBodyKey(a2, 1, 1);
        v21 = (NSString *)objc_claimAutoreleasedReturnValue();

        PKLocalizedStringInMarketBundle(v21, v12, 0);
        v22 = objc_claimAutoreleasedReturnValue();

        v20 = (void *)v22;
        v18 = v21;
      }
      objc_msgSend(v14, "setObject:forKeyedSubscript:", v20, CFSTR("body"));

      PKLocalizedStringInMarketBundle(CFSTR("EXPRESS_TRANSIT_EDUCATION_NEXT_ACTION"), v12, 0);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v23, "isEqualToString:", CFSTR("EXPRESS_TRANSIT_EDUCATION_NEXT_ACTION")) & 1) == 0)
        objc_msgSend(v14, "setObject:forKeyedSubscript:", v23, CFSTR("nextAction"));
      PKLocalizedStringInMarketBundle(CFSTR("EXPRESS_TRANSIT_EDUCATION_DONE_ACTION"), v12, 0);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v24, "isEqualToString:", CFSTR("EXPRESS_TRANSIT_EDUCATION_DONE_ACTION")) & 1) == 0)
        objc_msgSend(v14, "setObject:forKeyedSubscript:", v24, CFSTR("doneAction"));
      PKLocalizedStringInMarketBundle(CFSTR("EXPRESS_TRANSIT_EDUCATION_ALT_ACTION"), v12, 0);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v25, "isEqualToString:", CFSTR("EXPRESS_TRANSIT_EDUCATION_ALT_ACTION")) & 1) == 0)
        objc_msgSend(v14, "setObject:forKeyedSubscript:", v25, CFSTR("altAction"));
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a3);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "setObject:forKeyedSubscript:", v26, CFSTR("hideAltAction"));

      if (v48)
        objc_msgSend(v14, "setObject:forKeyedSubscript:", v48, CFSTR("reportingMetadata"));
      v27 = (id)objc_msgSend(v14, "copy");

      v11 = v48;
      goto LABEL_41;
    }
    if (!v13)
    {
LABEL_21:
      PKLogFacilityTypeGetObject(0xCuLL);
      v28 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        v29 = "PKPaymentSetupMoreInfoItem: Falling back to embedded Express Education screen.";
        v30 = buf;
        goto LABEL_23;
      }
      goto LABEL_24;
    }
  }
  else
  {
    v12 = 0;
    if ((PKForceDefaultEmbeddedMarketStrings() & 1) == 0)
      goto LABEL_21;
  }
  PKLogFacilityTypeGetObject(0xCuLL);
  v28 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
  {
    v50 = 0;
    v29 = "PKPaymentSetupMoreInfoItem: Internal Setting forcing default embedded strings for the Express Education screen.";
    v30 = (uint8_t *)&v50;
LABEL_23:
    _os_log_impl(&dword_18FC92000, v28, OS_LOG_TYPE_DEFAULT, v29, v30, 2u);
  }
LABEL_24:

  if (v10 && objc_msgSend(v10, "isAccessPass"))
  {
    v31 = v10;
    v27 = objc_alloc_init(MEMORY[0x1E0C99E08]);
    PKLocalizedCredentialString(CFSTR("ACCESS_EXPRESS_ENABLED_TITLE"), 0);
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "setObject:forKeyedSubscript:", v32, CFSTR("title"));

    objc_msgSend(v27, "setObject:forKeyedSubscript:", CFSTR("ExpressEducationV2"), CFSTR("type"));
    v33 = v31;
    if (objc_msgSend(v33, "isCarKeyPass"))
    {
      if ((objc_msgSend(v33, "supportedRadioTechnologies") & 2) != 0)
      {
        v36 = CFSTR("EXPRESS_CAR_KEY_ADDED_FACEID_UWB_PHONE_BODY");
      }
      else
      {
        IsAvailable = PKPearlIsAvailable();
        v35 = CFSTR("EXPRESS_CAR_KEY_ADDED_TOUCHID_PHONE_ONLY_BODY");
        if (IsAvailable)
          v35 = CFSTR("EXPRESS_CAR_KEY_ADDED_FACEID_PHONE_ONLY_BODY");
        v36 = v35;
      }
      PKLocalizedCredentialString(&v36->isa, 0);
      v44 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      if (PKPearlIsAvailable())
        v43 = CFSTR("EXPRESS_ACCESS_FOOTER_FACEID");
      else
        v43 = CFSTR("EXPRESS_ACCESS_FOOTER_TOUCHID");
      PKLocalizedPaymentString(&v43->isa, 0);
      v44 = (void *)objc_claimAutoreleasedReturnValue();
    }

    objc_msgSend(v27, "setObject:forKeyedSubscript:", v44, CFSTR("body"));
    PKLocalizedCredentialString(CFSTR("ACCESS_EXPRESS_TURN_OFF"), 0);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "setObject:forKeyedSubscript:", v45, CFSTR("altAction"));

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a3);
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "setObject:forKeyedSubscript:", v46, CFSTR("hideAltAction"));

  }
  else
  {
    v37 = v11;
    v27 = objc_alloc_init(MEMORY[0x1E0C99E08]);
    PKLocalizedTransitString(CFSTR("EXPRESS_TRANSIT_EDUCATION_TITLE"), 0);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "setObject:forKeyedSubscript:", v38, CFSTR("title"));

    PKLocalizedTransitString(CFSTR("EXPRESS_TRANSIT_EDUCATION_LINK"), 0);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "setObject:forKeyedSubscript:", v39, CFSTR("linkText"));

    objc_msgSend(v27, "setObject:forKeyedSubscript:", CFSTR("https://support.apple.com/HT207958"), CFSTR("linkURL"));
    objc_msgSend(v27, "setObject:forKeyedSubscript:", CFSTR("ExpressEducationV2"), CFSTR("type"));
    expressTransitUpgradeBodyKey(a2, 0, a3);
    v40 = (NSString *)objc_claimAutoreleasedReturnValue();
    PKLocalizedTransitString(v40, 0);
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "setObject:forKeyedSubscript:", v41, CFSTR("body"));

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", a3);
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "setObject:forKeyedSubscript:", v42, CFSTR("hideAltAction"));

    if (v37)
      objc_msgSend(v27, "setObject:forKeyedSubscript:", v37, CFSTR("reportingMetadata"));

  }
LABEL_41:

  return v27;
}

__CFString *expressTransitUpgradeBodyKey(int a1, int a2, int a3)
{
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  int IsAvailable;
  int v10;
  const __CFString *v11;
  const __CFString *v12;
  const __CFString *v13;
  __CFString *v14;
  const __CFString *v15;
  const __CFString *v16;
  __CFString *v17;

  v6 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_DISABLEABLE");
  if (a3)
    v6 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY");
  v7 = v6;
  if (a1)
  {
    v8 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_WATCH_DISABLEABLE");
    if (a3)
      v8 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_WATCH");
LABEL_20:
    v14 = v8;

    v7 = v14;
    goto LABEL_29;
  }
  IsAvailable = PKNearFieldLowPowerSupportIsAvailable();
  v10 = PKPearlIsAvailable();
  if (IsAvailable)
  {
    v8 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_LPEM_TOUCHID_DISABLEABLE");
    if (a3)
      v8 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_LPEM_TOUCHID");
    v11 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_LPEM_D79_DISABLEABLE");
    if (a3)
      v11 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_LPEM_D79");
    v12 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_LPEM_FACEID_DISABLEABLE");
    if (a2)
      v8 = (__CFString *)v11;
    v13 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_D3x_DISABLEABLE");
    if (a3)
    {
      v12 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_LPEM_FACEID");
      v13 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_D3x");
    }
    if (!a2)
      v13 = v12;
    if (v10)
      v8 = (__CFString *)v13;
    goto LABEL_20;
  }
  v15 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_FACEID_DISABLEABLE");
  if (a3)
  {
    v15 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_FACEID");
    v16 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_PEARL");
  }
  else
  {
    v16 = CFSTR("EXPRESS_TRANSIT_EDUCATION_BODY_PEARL_DISABLEABLE");
  }
  if (a2)
    v15 = v16;
  if (v10)
    v14 = (__CFString *)v15;
  else
    v14 = v7;
LABEL_29:
  v17 = v14;

  return v17;
}

id PKPaymentSetupMoreInfoItemDictionaryForHomeExpress(void *a1, char a2)
{
  id v3;
  id v4;
  void *v5;
  __CFString *v6;
  int IsAvailable;
  __CFString *v8;
  void *v9;
  void *v10;

  v3 = a1;
  v4 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  PKLocalizedHomeKeyString(CFSTR("MORE_INFO_TITLE"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v5, CFSTR("title"));

  if ((a2 & 1) != 0)
  {
    v6 = CFSTR("MORE_INFO_BODY_WATCH");
  }
  else
  {
    IsAvailable = PKPearlIsAvailable();
    v8 = CFSTR("MORE_INFO_BODY_IPHONE_TOUCHID");
    if (IsAvailable)
      v8 = CFSTR("MORE_INFO_BODY_IPHONE_FACEID");
    v6 = v8;
  }
  PKLocalizedHomeKeyString(&v6->isa, CFSTR("%@"), v3);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v9, CFSTR("body"));

  objc_msgSend(v4, "setObject:forKeyedSubscript:", CFSTR("ExpressEducationV2"), CFSTR("type"));
  PKLocalizedHomeKeyString(CFSTR("MORE_INFO_DONE"), 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v10, CFSTR("doneAction"));

  return v4;
}

uint64_t PKPaymentDeviceMetadataFieldsFromStrings(void *a1)
{
  const __CFString *v1;
  const __CFString *v2;
  uint64_t v3;
  const __CFString *v4;
  const __CFString *v5;
  __CFString *v6;
  __CFString *v7;
  int v8;
  uint64_t v9;
  __CFString *v10;
  __CFString *v11;
  int v12;
  __CFString *v13;
  __CFString *v14;
  int v15;
  __CFString *v16;
  __CFString *v17;
  int v18;
  __CFString *v19;
  __CFString *v20;
  int v21;
  __CFString *v22;
  __CFString *v23;
  int v24;
  __CFString *v25;
  __CFString *v26;
  int v27;
  __CFString *v28;
  __CFString *v29;
  int v30;
  uint64_t v31;
  id obj;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  obj = a1;
  v35 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
  if (!v35)
  {
    v36 = 0;
    goto LABEL_39;
  }
  v36 = 0;
  v34 = *(_QWORD *)v38;
  v1 = CFSTR("uniqueDeviceIdentifier");
  v2 = CFSTR("uniqueChipIdentifier");
  do
  {
    v3 = 0;
    do
    {
      v4 = v1;
      v5 = v2;
      if (*(_QWORD *)v38 != v34)
        objc_enumerationMutation(obj);
      v6 = (__CFString *)*(id *)(*((_QWORD *)&v37 + 1) + 8 * v3);
      if (v6 == CFSTR("secureElementIdentifier"))
        goto LABEL_9;
      v7 = v6;
      if (!v6)
        goto LABEL_11;
      v8 = -[__CFString isEqualToString:](v6, "isEqualToString:", CFSTR("secureElementIdentifier"));

      if (v8)
      {
LABEL_9:
        v9 = v36 | 1;
        goto LABEL_10;
      }
      v10 = v7;
      v1 = v4;
      if (v10 != v4)
      {
        v11 = v10;
        v12 = -[__CFString isEqualToString:](v10, "isEqualToString:", v4);

        v1 = v4;
        if (!v12)
        {
          v13 = v11;
          v2 = v5;
          if (v13 == v5
            || (v14 = v13,
                v15 = -[__CFString isEqualToString:](v13, "isEqualToString:", v5),
                v14,
                v2 = v5,
                v15))
          {
            v36 |= 4uLL;
            goto LABEL_12;
          }
          v16 = v14;
          if (v16 == CFSTR("serialNumber")
            || (v17 = v16,
                v18 = -[__CFString isEqualToString:](v16, "isEqualToString:", CFSTR("serialNumber")),
                v17,
                v18))
          {
            v9 = v36 | 8;
            goto LABEL_10;
          }
          v19 = v17;
          if (v19 == CFSTR("deviceName")
            || (v20 = v19,
                v21 = -[__CFString isEqualToString:](v19, "isEqualToString:", CFSTR("deviceName")),
                v20,
                v21))
          {
            v9 = v36 | 0x10;
            goto LABEL_10;
          }
          v22 = v20;
          if (v22 == CFSTR("phoneNumber")
            || (v23 = v22,
                v24 = -[__CFString isEqualToString:](v22, "isEqualToString:", CFSTR("phoneNumber")),
                v23,
                v24))
          {
            v9 = v36 | 0x20;
            goto LABEL_10;
          }
          v25 = v23;
          if (v25 == CFSTR("signedPhoneNumber")
            || (v26 = v25,
                v27 = -[__CFString isEqualToString:](v25, "isEqualToString:", CFSTR("signedPhoneNumber")),
                v26,
                v27))
          {
            v9 = v36 | 0x40;
            goto LABEL_10;
          }
          v28 = v26;
          if (v28 == CFSTR("location")
            || (v29 = v28,
                v30 = -[__CFString isEqualToString:](v28, "isEqualToString:", CFSTR("location")),
                v29,
                v30))
          {
            v9 = v36 | 0x80;
LABEL_10:
            v36 = v9;
          }
LABEL_11:
          v2 = v5;
LABEL_12:
          v1 = v4;
          goto LABEL_13;
        }
      }
      v36 |= 2uLL;
      v2 = v5;
LABEL_13:
      ++v3;
    }
    while (v35 != v3);
    v31 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
    v1 = v4;
    v2 = v5;
    v35 = v31;
  }
  while (v31);
LABEL_39:

  return v36;
}

id PKPaymentDeviceMetadataFieldsToString(unint64_t a1)
{
  id v2;
  int v3;
  uint64_t v4;
  const __CFString *v5;
  void *v6;

  v2 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  if (a1)
  {
    v3 = 1;
    v4 = 1;
    do
    {
      if ((v4 & a1) != 0)
      {
        if (v4 <= 15)
        {
          v5 = CFSTR("secureElementIdentifier");
          switch(v4)
          {
            case 1:
              goto LABEL_18;
            case 2:
              v5 = CFSTR("uniqueDeviceIdentifier");
              goto LABEL_18;
            case 4:
              v5 = CFSTR("uniqueChipIdentifier");
              goto LABEL_18;
            case 8:
              v5 = CFSTR("serialNumber");
              goto LABEL_18;
            default:
              goto LABEL_19;
          }
          goto LABEL_19;
        }
        if (v4 > 63)
        {
          if (v4 == 64)
          {
            v5 = CFSTR("signedPhoneNumber");
            goto LABEL_18;
          }
          if (v4 == 128)
          {
            v5 = CFSTR("location");
            goto LABEL_18;
          }
        }
        else
        {
          if (v4 == 16)
          {
            v5 = CFSTR("deviceName");
            goto LABEL_18;
          }
          if (v4 == 32)
          {
            v5 = CFSTR("phoneNumber");
LABEL_18:
            objc_msgSend(v2, "addObject:", v5);
          }
        }
      }
LABEL_19:
      v4 = 1 << v3++;
    }
    while (v4 <= a1);
  }
  objc_msgSend(v2, "description");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

void sub_18FEB8E18(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

BOOL _LocationMeetsAccuracyCriteria(void *a1)
{
  id v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  double v6;
  _BOOL4 v7;

  v1 = a1;
  objc_msgSend(v1, "horizontalAccuracy");
  v3 = v2;
  v4 = *MEMORY[0x1E0C9E4F8];
  objc_msgSend(v1, "timestamp");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "timeIntervalSinceNow");
  v7 = v6 <= 300.0;

  return v3 <= v4 && v7;
}

uint64_t PKPhysicalCardActionTypeFromString(void *a1)
{
  __CFString *v1;
  __CFString *v2;
  char v3;
  uint64_t v4;
  __CFString *v5;
  __CFString *v6;
  char v7;
  __CFString *v8;
  __CFString *v9;
  char v10;
  __CFString *v11;
  __CFString *v12;
  char v13;
  __CFString *v14;
  __CFString *v15;
  int v16;

  objc_msgSend(a1, "lowercaseString");
  v1 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (v1 == CFSTR("disable"))
    goto LABEL_4;
  if (!v1)
  {
LABEL_17:
    v4 = 0;
    goto LABEL_18;
  }
  v3 = objc_msgSend(CFSTR("disable"), "isEqualToString:", v1);

  if ((v3 & 1) == 0)
  {
    v5 = v2;
    if (v5 == CFSTR("enable")
      || (v6 = v5, v7 = objc_msgSend(CFSTR("enable"), "isEqualToString:", v5), v6, (v7 & 1) != 0))
    {
      v4 = 1;
      goto LABEL_18;
    }
    v8 = v6;
    if (v8 == CFSTR("deactivate")
      || (v9 = v8, v10 = objc_msgSend(CFSTR("deactivate"), "isEqualToString:", v8), v9, (v10 & 1) != 0))
    {
      v4 = 3;
      goto LABEL_18;
    }
    v11 = v9;
    if (v11 == CFSTR("activate")
      || (v12 = v11, v13 = objc_msgSend(CFSTR("activate"), "isEqualToString:", v11), v12, (v13 & 1) != 0))
    {
      v4 = 4;
      goto LABEL_18;
    }
    v14 = v12;
    if (v14 == CFSTR("replace")
      || (v15 = v14, v16 = objc_msgSend(CFSTR("replace"), "isEqualToString:", v14), v15, v16))
    {
      v4 = 5;
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_4:
  v4 = 2;
LABEL_18:

  return v4;
}

const __CFString *PKStringFromPhysicalCardActionType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4)
    return CFSTR("unknown");
  else
    return off_1E2ABE478[a1 - 1];
}

id PKBannerServiceInterface()
{
  if (qword_1EE1C55A8 != -1)
    dispatch_once(&qword_1EE1C55A8, &__block_literal_global_6);
  return (id)_MergedGlobals_1;
}

void sub_18FEBF3F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18FEBF52C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_18FEBF74C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18FEBF858(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_18FEC3288(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_18FEC34CC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_18FEC35E4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_18FEC37C4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_18FEC3B74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  id *v24;
  id *v25;
  id *v26;
  uint64_t v27;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  _Block_object_dispose(&a24, 8);
  objc_destroyWeak(v24);
  _Block_object_dispose((const void *)(v27 - 200), 8);
  _Block_object_dispose((const void *)(v27 - 152), 8);
  objc_destroyWeak((id *)(v27 - 104));
  _Unwind_Resume(a1);
}

void sub_18FEC3BE0()
{
  JUMPOUT(0x18FEC3BD0);
}

void sub_18FEC4B78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL PKPaymentSetupAssistantSupportsExtendedRegionCheck(uint64_t a1)
{
  return a1 == 1;
}

id _PKEnumValueValidateString(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9)
{
  id v12;
  id v13;
  id v14;
  id v15;

  v12 = a1;
  v13 = a2;
  v14 = a3;
  v15 = a4;
  _PKEnumValueFromStringVAList(v12, v13, v15, &a9);

  return 0;
}

uint64_t PKPassStyleFromString(void *a1)
{
  id v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  char v5;
  uint64_t v6;
  __CFString *v7;
  __CFString *v8;
  char v9;
  __CFString *v10;
  __CFString *v11;
  char v12;
  __CFString *v13;
  __CFString *v14;
  char v15;
  __CFString *v16;
  __CFString *v17;
  char v18;
  __CFString *v19;
  __CFString *v20;
  char v21;
  __CFString *v23;
  __CFString *v24;
  char v25;
  __CFString *v26;
  __CFString *v27;
  char v28;
  __CFString *v29;
  __CFString *v30;
  char v31;
  __CFString *v32;
  __CFString *v33;
  int v34;

  v1 = a1;
  v2 = v1;
  if (!v1)
    goto LABEL_19;
  v3 = (__CFString *)v1;
  if (v3 != CFSTR("coupon"))
  {
    v4 = v3;
    v5 = -[__CFString isEqualToString:](v3, "isEqualToString:", CFSTR("coupon"));

    if ((v5 & 1) == 0)
    {
      v7 = v4;
      if (v7 == CFSTR("storeCard")
        || (v8 = v7,
            v9 = -[__CFString isEqualToString:](v7, "isEqualToString:", CFSTR("storeCard")),
            v8,
            (v9 & 1) != 0))
      {
        v6 = 1;
        goto LABEL_20;
      }
      v10 = v8;
      if (v10 == CFSTR("eventTicket")
        || (v11 = v10,
            v12 = -[__CFString isEqualToString:](v10, "isEqualToString:", CFSTR("eventTicket")),
            v11,
            (v12 & 1) != 0))
      {
        v6 = 2;
        goto LABEL_20;
      }
      v13 = v11;
      if (v13 == CFSTR("sportingEventTicketDeprecated")
        || (v14 = v13,
            v15 = -[__CFString isEqualToString:](v13, "isEqualToString:", CFSTR("sportingEventTicketDeprecated")),
            v14,
            (v15 & 1) != 0))
      {
        v6 = 3;
        goto LABEL_20;
      }
      v16 = v14;
      if (v16 == CFSTR("boardingPass")
        || (v17 = v16,
            v18 = -[__CFString isEqualToString:](v16, "isEqualToString:", CFSTR("boardingPass")),
            v17,
            (v18 & 1) != 0))
      {
        v6 = 4;
        goto LABEL_20;
      }
      v19 = v17;
      if (v19 != CFSTR("generic"))
      {
        v20 = v19;
        v21 = -[__CFString isEqualToString:](v19, "isEqualToString:", CFSTR("generic"));

        if ((v21 & 1) == 0)
        {
          v23 = v20;
          if (v23 == CFSTR("paymentCard")
            || (v24 = v23,
                v25 = -[__CFString isEqualToString:](v23, "isEqualToString:", CFSTR("paymentCard")),
                v24,
                (v25 & 1) != 0))
          {
            v6 = 6;
            goto LABEL_20;
          }
          v26 = v24;
          if (v26 == CFSTR("accessCard")
            || (v27 = v26,
                v28 = -[__CFString isEqualToString:](v26, "isEqualToString:", CFSTR("accessCard")),
                v27,
                (v28 & 1) != 0))
          {
            v6 = 7;
            goto LABEL_20;
          }
          v29 = v27;
          if (v29 == CFSTR("healthPass")
            || (v30 = v29,
                v31 = -[__CFString isEqualToString:](v29, "isEqualToString:", CFSTR("healthPass")),
                v30,
                (v31 & 1) != 0))
          {
            v6 = 8;
            goto LABEL_20;
          }
          v32 = v30;
          if (v32 == CFSTR("posterEventTicket")
            || (v33 = v32,
                v34 = -[__CFString isEqualToString:](v32, "isEqualToString:", CFSTR("posterEventTicket")),
                v33,
                v34))
          {
            v6 = 9;
            goto LABEL_20;
          }
        }
      }
LABEL_19:
      v6 = 5;
      goto LABEL_20;
    }
  }
  v6 = 0;
LABEL_20:

  return v6;
}

BOOL PKIsPaymentEligibilitySourceValid(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 0xB;
}

const __CFString *PKVirtualCardVPANOriginToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4)
    return CFSTR("UNKNOWN");
  else
    return off_1E2AC0908[a1 - 1];
}

uint64_t PKWebServicesPaymentCardTypeFromString(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    if ((objc_msgSend(v1, "isEqual:", CFSTR("payment")) & 1) != 0
      || (objc_msgSend(v2, "isEqual:", CFSTR("credit")) & 1) != 0
      || (objc_msgSend(v2, "isEqual:", CFSTR("debit")) & 1) != 0)
    {
      v3 = 1;
    }
    else if ((objc_msgSend(v2, "isEqual:", CFSTR("transit")) & 1) != 0)
    {
      v3 = 2;
    }
    else if ((objc_msgSend(v2, "isEqual:", CFSTR("access")) & 1) != 0)
    {
      v3 = 3;
    }
    else if ((objc_msgSend(v2, "isEqual:", CFSTR("unifiedaccess")) & 1) != 0)
    {
      v3 = 4;
    }
    else if ((objc_msgSend(v2, "isEqual:", CFSTR("identity")) & 1) != 0)
    {
      v3 = 5;
    }
    else if (objc_msgSend(v2, "isEqual:", CFSTR("iso18013")))
    {
      v3 = 5;
    }
    else
    {
      v3 = 0;
    }
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

const __CFString *PKWebServicesPaymentCardTypeToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4)
    return CFSTR("unknown");
  else
    return off_1E2AC0930[a1 - 1];
}

id PKPushProvisioningSecurityOptionsToString(char a1)
{
  id v2;
  void *v3;
  void *v4;

  v2 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v3 = v2;
  if ((a1 & 1) != 0)
    objc_msgSend(v2, "addObject:", CFSTR("AllowProvisioningOnLockedDevice"));
  if (objc_msgSend(v3, "count"))
  {
    objc_msgSend(v3, "componentsJoinedByString:", CFSTR(","));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

uint64_t PKPushProvisioningSecurityOptionsFromString(void *a1)
{
  void *v1;
  uint64_t v2;

  if (!a1)
    return 0;
  objc_msgSend(a1, "componentsSeparatedByString:", CFSTR(","));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "containsObject:", CFSTR("AllowProvisioningOnLockedDevice"));

  return v2;
}

BOOL PKPushProvisioningSharingStatusIsTerminal(uint64_t a1)
{
  return (unint64_t)(a1 - 2) < 3;
}

const __CFString *PKPushProvisioningSharingStatusToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return CFSTR("unknown");
  else
    return off_1E2AC0958[a1 - 1];
}

uint64_t PKPushProvisioningSharingStatusFromString(void *a1)
{
  id v1;
  void *v2;
  __CFString *v3;
  __CFString *v4;
  char v5;
  uint64_t v6;
  __CFString *v7;
  __CFString *v8;
  char v9;
  __CFString *v10;
  __CFString *v11;
  char v12;
  __CFString *v13;
  __CFString *v14;
  int v15;

  v1 = a1;
  v2 = v1;
  if (!v1)
    goto LABEL_14;
  v3 = (__CFString *)v1;
  if (v3 != CFSTR("available"))
  {
    v4 = v3;
    v5 = -[__CFString isEqualToString:](v3, "isEqualToString:", CFSTR("available"));

    if ((v5 & 1) == 0)
    {
      v7 = v4;
      if (v7 == CFSTR("consumed")
        || (v8 = v7,
            v9 = -[__CFString isEqualToString:](v7, "isEqualToString:", CFSTR("consumed")),
            v8,
            (v9 & 1) != 0))
      {
        v6 = 2;
        goto LABEL_15;
      }
      v10 = v8;
      if (v10 == CFSTR("revoked")
        || (v11 = v10,
            v12 = -[__CFString isEqualToString:](v10, "isEqualToString:", CFSTR("revoked")),
            v11,
            (v12 & 1) != 0))
      {
        v6 = 3;
        goto LABEL_15;
      }
      v13 = v11;
      if (v13 == CFSTR("expired")
        || (v14 = v13,
            v15 = -[__CFString isEqualToString:](v13, "isEqualToString:", CFSTR("expired")),
            v14,
            v15))
      {
        v6 = 4;
        goto LABEL_15;
      }
LABEL_14:
      v6 = 0;
      goto LABEL_15;
    }
  }
  v6 = 1;
LABEL_15:

  return v6;
}

const __CFString *PKPassLifecycleStateToString(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("active");
  if (a1 == 1)
    v1 = CFSTR("expired");
  if (a1 == 2)
    return CFSTR("removed");
  else
    return v1;
}

uint64_t PKPaymentCardTypeFromWebServicesCardType(uint64_t a1)
{
  uint64_t v1;

  v1 = 4;
  if (a1 != 5)
    v1 = a1;
  if (a1 == 4)
    return 3;
  else
    return v1;
}

id PKExpressTransitModes()
{
  _QWORD v1[3];

  v1[2] = *MEMORY[0x1E0C80C00];
  v1[0] = CFSTR("transit.felica.suica");
  v1[1] = CFSTR("type_a.generic");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v1, 2);
  return (id)objc_claimAutoreleasedReturnValue();
}

uint64_t PKExpressPassTypeForExpressMode(void *a1)
{
  id v1;
  void *v2;
  char v3;
  uint64_t v4;

  v1 = a1;
  PKExpressTransitModes();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "containsObject:", v1);

  if ((v3 & 1) != 0)
  {
    v4 = 1;
  }
  else if (objc_msgSend(v1, "hasPrefix:", CFSTR("access.hid.")))
  {
    v4 = 2;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

uint64_t PKPassAutomaticSelectionTechnologyTypeForExpressEnteredObject(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    if ((objc_msgSend(v1, "isEqual:", CFSTR("express.transit.suica")) & 1) != 0)
    {
      v3 = 1;
    }
    else if ((objc_msgSend(v2, "isEqual:", CFSTR("express.access.hid")) & 1) != 0)
    {
      v3 = 2;
    }
    else if ((objc_msgSend(v2, "isEqual:", CFSTR("express.generic-a")) & 1) != 0)
    {
      v3 = 3;
    }
    else if ((objc_msgSend(v2, "isEqual:", CFSTR("express.single-poll")) & 1) != 0)
    {
      v3 = 7;
    }
    else if ((objc_msgSend(v2, "isEqual:", CFSTR("express.ecp2")) & 1) != 0)
    {
      v3 = 4;
    }
    else if (objc_msgSend(v2, "isEqual:", CFSTR("express.transit.cathay")))
    {
      v3 = 6;
    }
    else
    {
      v3 = 0;
    }
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

uint64_t PKPaymentTransactionStatusFromString(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "lowercaseString");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("pending")) & 1) != 0)
  {
    v2 = 0;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("approved")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("declined")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("refunded")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("failed")) & 1) != 0)
  {
    v2 = 4;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("canceled")) & 1) != 0)
  {
    v2 = 5;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("rejected")) & 1) != 0)
  {
    v2 = 6;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("expired")) & 1) != 0)
  {
    v2 = 7;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("preauth")))
  {
    v2 = 8;
  }
  else
  {
    v2 = -1;
  }

  return v2;
}

const __CFString *PKPaymentTransactionStatusToString(unint64_t a1)
{
  if (a1 > 8)
    return CFSTR("unknown");
  else
    return off_1E2AC0A78[a1];
}

uint64_t PKPaymentTransactionDeclinedReasonFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("insufficientFunds")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("wrongPIN")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("internationalTransactionPreCIP")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("overSpendLimit")) & 1) != 0)
  {
    v2 = 4;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("fraudSuspected")) & 1) != 0)
  {
    v2 = 5;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("fraudConfirmed")) & 1) != 0)
  {
    v2 = 6;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("fraudSuspectedRetry")) & 1) != 0)
  {
    v2 = 7;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("fraudConfirmedSingleCard")) & 1) != 0)
  {
    v2 = 8;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("blocked")) & 1) != 0)
  {
    v2 = 9;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("cardDisabled")) & 1) != 0)
  {
    v2 = 12;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("cardCancelled")) & 1) != 0)
  {
    v2 = 14;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("cardNotActivated")) & 1) != 0)
  {
    v2 = 13;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("cardExpired")) & 1) != 0)
  {
    v2 = 24;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("accountStatus")) & 1) != 0)
  {
    v2 = 10;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("accountStatusContact")) & 1) != 0)
  {
    v2 = 11;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("outOfPolicy")) & 1) != 0)
  {
    v2 = 15;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("restrictedCountry")) & 1) != 0)
  {
    v2 = 16;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("verificationFailed")) & 1) != 0)
  {
    v2 = 17;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("verificationFailedAddress")) & 1) != 0)
  {
    v2 = 18;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("verificationFailedZip")) & 1) != 0)
  {
    v2 = 19;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("verificationFailedSecurityCode")) & 1) != 0)
  {
    v2 = 23;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("other")) & 1) != 0)
  {
    v2 = 20;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("EMVError")) & 1) != 0)
  {
    v2 = 21;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("spendDisabled")))
  {
    v2 = 22;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

const __CFString *PKPaymentTransactionDeclinedReasonToString(unint64_t a1)
{
  if (a1 > 0x18)
    return CFSTR("unknown");
  else
    return off_1E2AC0978[a1];
}

id PKPaymentTransactionDeclinedReasonLocalizedString(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v9;
  __CFString *v10;
  uint64_t vars0;

  v9 = 0;
  switch(a1)
  {
    case 1:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_INSUFFICIENT_FUNDS");
      goto LABEL_22;
    case 2:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_WRONG_PIN");
      goto LABEL_22;
    case 3:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_INTERNATION_PRE_CIP");
      goto LABEL_22;
    case 4:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_OVER_SPEND_LIMIT");
      goto LABEL_22;
    case 5:
    case 7:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_FRAUD_SUSPECTED");
      goto LABEL_22;
    case 6:
    case 8:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_FRAUD_CONFIRMED");
      goto LABEL_22;
    case 9:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_BLOCKED");
      goto LABEL_22;
    case 10:
    case 11:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_ACCOUNT_STATUS");
      goto LABEL_22;
    case 12:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_CARD_DISABLED");
      goto LABEL_22;
    case 13:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_CARD_NOT_ACTIVATED");
      goto LABEL_22;
    case 14:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_CARD_CANCELED");
      goto LABEL_22;
    case 15:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_OUT_OF_POLICY");
      goto LABEL_22;
    case 16:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_RESTRICTED_COUNTRY");
      goto LABEL_22;
    case 17:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_VERIFICATION_FAILED");
      goto LABEL_22;
    case 18:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_VERIFICATION_FAILED_ADDRESS");
      goto LABEL_22;
    case 19:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_VERIFICATION_FAILED_ZIP");
      goto LABEL_22;
    case 21:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_EMV_ERROR");
      goto LABEL_22;
    case 22:
      PKLocalizedMadisonString(CFSTR("TRANSACTION_DECLINED_REASON_ACCOUNT_USER_SPEND_DISABLED"), 0);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      return v9;
    case 23:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_VERIFICATION_FAILED_SECURITY_CODE");
      goto LABEL_22;
    case 24:
      v10 = CFSTR("TRANSACTION_DECLINED_REASON_CARD_EXPIRED");
LABEL_22:
      PKLocalizedFeatureString(v10, 2, 0, a4, a5, a6, a7, a8, vars0);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    default:
      return v9;
  }
  return v9;
}

uint64_t PKPeerPaymentRegistrationFlowStateFromString(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "lowercaseString");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("default")) & 1) != 0)
  {
    v2 = 0;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("incomingsendpayment")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("personalizedincomingsendpayment")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("incomingrequestpayment")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("outgoingsendpayment")) & 1) != 0)
  {
    v2 = 4;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("outgoingrequestpayment")) & 1) != 0)
  {
    v2 = 5;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("dailycashonboarding")))
  {
    v2 = 6;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

const __CFString *PKPeerPaymentRegistrationFlowStateToString(unint64_t a1)
{
  if (a1 > 6)
    return CFSTR("unknown");
  else
    return off_1E2AC0A40[a1];
}

const __CFString *PKPeerPaymentAssociatedAccountSetupTypeToString(uint64_t a1)
{
  if (a1 == 1)
    return CFSTR("dailyCash");
  else
    return CFSTR("default");
}

uint64_t PKPeerPaymentStatusFromString(void *a1)
{
  uint64_t result;

  result = PKPaymentTransactionStatusFromString(a1);
  if ((result & 0xFFFFFFFFFFFFFFFELL) == 2)
    return -1;
  return result;
}

const __CFString *PKPeerPaymentStatusToString(unint64_t a1)
{
  if (a1 > 8)
    return CFSTR("unknown");
  else
    return off_1E2AC0A78[a1];
}

uint64_t PKPeerPaymentMessageTypeFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(CFSTR("Payment"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(CFSTR("Request"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 2;
  }
  else if (objc_msgSend(CFSTR("RecurringPayment"), "isEqualToString:", v1))
  {
    v2 = 3;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

const __CFString *PKPeerPaymentMessageTypeToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Unknown");
  else
    return off_1E2AC0AC0[a1 - 1];
}

uint64_t PKPeerPaymentMessageSourceFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(CFSTR("wallet"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(CFSTR("messages"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 2;
  }
  else if (objc_msgSend(CFSTR("siri"), "isEqualToString:", v1))
  {
    v2 = 3;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

const __CFString *PKPeerPaymentMessageSourceToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("unknown");
  else
    return off_1E2AC0AD8[a1 - 1];
}

uint64_t PKPaymentDocumentTypeFromString(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "lowercaseString");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(CFSTR("driverslicense"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 1;
  }
  else if (objc_msgSend(CFSTR("stateid"), "isEqualToString:", v1))
  {
    v2 = 2;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

const __CFString *PKPeerPaymentDocumentTypeToString(unint64_t a1)
{
  if (a1 > 2)
    return CFSTR("unknown");
  else
    return off_1E2AC0AF0[a1];
}

const __CFString *PKPaymentDocumentTypeToString(unint64_t a1)
{
  if (a1 > 2)
    return CFSTR("unknown");
  else
    return off_1E2AC0AF0[a1];
}

const __CFString *PKPeerPaymentRecurringPaymentFrequencyToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return CFSTR("unknown");
  else
    return off_1E2AC0B08[a1 - 1];
}

uint64_t PKPeerPaymentRecurringPaymentFrequencyFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(CFSTR("weekly"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(CFSTR("biweekly"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(CFSTR("monthly"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 3;
  }
  else if (objc_msgSend(CFSTR("daily"), "isEqualToString:", v1))
  {
    v2 = 4;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

id PKPeerPaymentRecurringPaymentFrequencyToLocalizedString(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if ((unint64_t)(a1 - 1) > 3)
    return 0;
  PKLocalizedPeerPaymentRecurringString(&off_1E2AC0B28[a1 - 1]->isa, 0, v1, v2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id PKPeerPaymentRecurringPaymentFrequencyToLocalizedWeekdayString(uint64_t a1, void *a2)
{
  id v3;
  __CFString *v4;
  void *v5;
  NSString *v6;
  __CFString *v7;

  v3 = a2;
  switch(a1)
  {
    case 1:
      v4 = CFSTR("FREQUENCY_WEEKLY_TITLE");
      goto LABEL_5;
    case 2:
      v4 = CFSTR("FREQUENCY_BIWEEKLY_TITLE");
LABEL_5:
      PKLocalizedWeekdaySpecificStringKeyForKey(v4, v3);
      v6 = (NSString *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPeerPaymentRecurringString(v6, 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();

      break;
    case 3:
      v7 = CFSTR("FREQUENCY_MONTHLY_TITLE");
      goto LABEL_8;
    case 4:
      v7 = CFSTR("FREQUENCY_DAILY_TITLE");
LABEL_8:
      PKLocalizedPeerPaymentRecurringString(&v7->isa, 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    default:
      v5 = 0;
      break;
  }

  return v5;
}

const __CFString *PKPeerPaymentRecurringPaymentStatusToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return CFSTR("unknown");
  else
    return off_1E2AC0B48[a1 - 1];
}

uint64_t PKPeerPaymentRecurringPaymentStatusFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(CFSTR("active"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(CFSTR("paused"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(CFSTR("failed"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 3;
  }
  else if (objc_msgSend(CFSTR("failedStopped"), "isEqualToString:", v1))
  {
    v2 = 4;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

const __CFString *PKPeerPaymentRecurringPaymentTransactionStatusToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("unknown");
  else
    return off_1E2AC0B68[a1 - 1];
}

uint64_t PKPeerPaymentRecurringPaymentTransactionStatusFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(CFSTR("success"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(CFSTR("inProgress"), "isEqualToString:", v1) & 1) != 0)
  {
    v2 = 2;
  }
  else if (objc_msgSend(CFSTR("failed"), "isEqualToString:", v1))
  {
    v2 = 3;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

const __CFString *PKPeerPaymentRecurringPaymentActionToString(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("none");
  if (a1 == 1)
    v1 = CFSTR("pause");
  if (a1 == 2)
    return CFSTR("cancel");
  else
    return v1;
}

id PKDisplayableErrorCustom(void *a1, void *a2, void *a3, void *a4)
{
  return PKDisplayableErrorCustomWithType(-1, a1, a2, a3, a4);
}

id PKDisplayableErrorCustomWithType(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;

  v9 = a2;
  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v14 = v13;
  if (v9)
  {
    objc_msgSend(v13, "setObject:forKeyedSubscript:", v9, *MEMORY[0x1E0CB2D50]);
    objc_msgSend(v14, "setObject:forKeyedSubscript:", v9, *MEMORY[0x1E0CB2D68]);
  }
  if (v10)
    objc_msgSend(v14, "setObject:forKeyedSubscript:", v10, *MEMORY[0x1E0CB2D80]);
  if (v11)
    objc_msgSend(v14, "setObject:forKeyedSubscript:", v11, *MEMORY[0x1E0CB3388]);
  if (v12)
    objc_msgSend(v14, "addEntriesFromDictionary:", v12);
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("PKDisplayableError"), a1, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

id PKDisplayableErrorForCommonType(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD *v19;
  _QWORD *v20;
  void *v21;
  void *v22;
  void *v24;
  _QWORD v25[3];
  _QWORD v26[3];
  void *v27;
  _QWORD v28[3];
  _QWORD v29[3];
  void *v30;
  _QWORD v31[2];
  _QWORD v32[2];
  void *v33;
  _QWORD v34[2];
  _QWORD v35[3];

  v35[2] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  switch(a1)
  {
    case -1:
    case 1:
      PKLocalizedPaymentString(CFSTR("COULD_NOT_ADD_CARD_TITLE"), 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPaymentString(CFSTR("COULD_NOT_ADD_CARD_MESSAGE"), 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = 1;
      goto LABEL_18;
    case 0:
      PKLocalizedPaymentString(CFSTR("COULD_NOT_SET_UP_TITLE"), 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPaymentString(CFSTR("COULD_NOT_SET_UP_MESSAGE"), 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = 0;
      goto LABEL_18;
    case 2:
      PKLocalizedPaymentString(CFSTR("COULD_NOT_CONNECT_TITLE"), 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPaymentString(CFSTR("COULD_NOT_CONNECT_MESSAGE"), 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = 2;
      goto LABEL_18;
    case 3:
      PKLocalizedPaymentString(CFSTR("INELIGIBLE_REGION_TITLE"), 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPaymentString(CFSTR("INELIGIBLE_REGION_MESSAGE"), 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = 3;
      goto LABEL_18;
    case 4:
      PKLocalizedPaymentString(CFSTR("NON_APPLE_PAY_REGION_TITLE"), 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPaymentString(CFSTR("NON_APPLE_PAY_REGION_MESSAGE"), 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v34[0] = *MEMORY[0x1E0CB2D78];
      PKLocalizedPaymentString(CFSTR("NON_APPLE_PAY_REGION_BUTTON_LEARN_MORE"), 0);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v33 = v8;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v33, 1);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v34[1] = CFSTR("PKErrorRecoveryURL");
      v35[0] = v9;
      objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("https://support.apple.com/en-us/HT204003"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v35[1] = v10;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v35, v34, 2);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 4;
      goto LABEL_10;
    case 5:
      PKLocalizedPaymentString(CFSTR("U13_NO_CARDS_TITLE"), 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPaymentString(CFSTR("U13_NO_CARDS_MESSAGE"), 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = 5;
      goto LABEL_18;
    case 6:
      PKLocalizedPaymentString(CFSTR("ACCOUNT_REQUIRED_ALERT_TITLE"), 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPaymentString(CFSTR("ACCOUNT_REQUIRED_ALERT_MESSAGE"), 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v31[0] = *MEMORY[0x1E0CB2D78];
      PKLocalizedPaymentString(CFSTR("ACCOUNT_REQUIRED_ALERT_BUTTON"), 0);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v30 = v8;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v30, 1);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v31[1] = CFSTR("PKErrorRecoveryURL");
      v32[0] = v9;
      objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v32[1] = v10;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v32, v31, 2);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 6;
LABEL_10:
      PKDisplayableErrorCustomWithType(v12, v4, v5, v3, v11);
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      goto LABEL_21;
    case 7:
      PKLocalizedPaymentString(CFSTR("NO_CARD_TO_ADD_TITLE"), 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPaymentString(CFSTR("NO_CARD_TO_ADD_MESSAGE"), 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = 7;
      goto LABEL_18;
    case 8:
      v13 = (void *)MEMORY[0x1E0CB37F0];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", PKMaxPaymentCards());
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "localizedStringFromNumber:numberStyle:", v14, 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();

      if ((PKDisableDynamicSEAllocation() & 1) != 0)
        PKLocalizedPaymentString(CFSTR("DEVICE_PROVISIONING_EXCEEDED_MESSAGE"), CFSTR("%@"), v4);
      else
        PKLocalizedPaymentString(CFSTR("DEVICE_PROVISIONING_EXCEEDED_MESSAGE_DYNAMIC_SE"), 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPaymentString(CFSTR("DEVICE_PROVISIONING_EXCEEDED_TITLE"), 0);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      PKDisplayableErrorCustomWithType(8, v8, v5, v3, 0);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_21:

      goto LABEL_24;
    case 9:
      PKLocalizedPaymentString(CFSTR("PASSCODE_REQUIRED_ALERT_TITLE"), 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      if (PKPearlIsAvailable())
      {
        PKLocalizedPearlString(CFSTR("PASSCODE_REQUIRED_ALERT_MESSAGE_PEARL"), 0);
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        v28[0] = *MEMORY[0x1E0CB2D78];
        PKLocalizedPearlString(CFSTR("PASSCODE_REQUIRED_ALERT_BUTTON_PEARL"), 0);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v27 = v15;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v27, 1);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v29[0] = v16;
        v29[1] = MEMORY[0x1E0C9AAB0];
        v28[1] = CFSTR("PKDisplayableErrorIsPreferredActionKey");
        v28[2] = CFSTR("PKErrorRecoveryURL");
        objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("prefs:root=Pearl"));
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v29[2] = v17;
        v18 = (void *)MEMORY[0x1E0C99D80];
        v19 = v29;
        v20 = v28;
      }
      else
      {
        PKLocalizedPaymentString(CFSTR("PASSCODE_REQUIRED_ALERT_MESSAGE"), 0);
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        v25[0] = *MEMORY[0x1E0CB2D78];
        PKLocalizedPaymentString(CFSTR("PASSCODE_REQUIRED_ALERT_BUTTON"), 0);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = v15;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v24, 1);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v26[0] = v16;
        v26[1] = MEMORY[0x1E0C9AAB0];
        v25[1] = CFSTR("PKDisplayableErrorIsPreferredActionKey");
        v25[2] = CFSTR("PKErrorRecoveryURL");
        objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("prefs:root=TOUCHID_PASSCODE&path=TOUCHID_PASSCODE"));
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v26[2] = v17;
        v18 = (void *)MEMORY[0x1E0C99D80];
        v19 = v26;
        v20 = v25;
      }
      objc_msgSend(v18, "dictionaryWithObjects:forKeys:count:", v19, v20, 3);
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("PKPaymentErrorDomain"), 9, 0);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      PKDisplayableErrorCustomWithType(9, v4, v5, v22, v21);
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      goto LABEL_24;
    case 10:
      PKLocalizedDeletableString(CFSTR("WALLET_UNINSTALLED_ALERT_TITLE"), 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedDeletableString(CFSTR("WALLET_UNINSTALLED_ALERT_MESSAGE"), 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = 10;
      goto LABEL_18;
    case 11:
      PKLocalizedString(CFSTR("PASS_ERROR_MANAGED_APPLE_ID_TITLE"), 0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedString(CFSTR("PASS_ERROR_MANAGED_APPLE_ID_BODY"), 0);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = 11;
LABEL_18:
      PKDisplayableErrorCustomWithType(v6, v4, v5, v3, 0);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_24:

      break;
    default:
      v7 = 0;
      break;
  }

  return v7;
}

id PKTitleForDisplayableError(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = a1;
  objc_msgSend(v1, "userInfo");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", *MEMORY[0x1E0CB2D50]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
  {
    objc_msgSend(v1, "localizedFailureReason");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v4;
    if (v4)
    {
      v6 = v4;
    }
    else
    {
      objc_msgSend(v1, "localizedDescription");
      v6 = (id)objc_claimAutoreleasedReturnValue();
    }
    v3 = v6;

  }
  return v3;
}

uint64_t PKFeatureIdentifierFromPaymentSetupFeatureType(uint64_t a1)
{
  if (a1 == 2)
    return 4;
  else
    return 2 * (a1 == 1);
}

uint64_t PKPaymentSetupFeatureTypeFromPKFeatureIdentifier(uint64_t a1)
{
  uint64_t v1;

  v1 = 2;
  if (a1 != 4)
    v1 = 0x7FFFFFFFFFFFFFFFLL;
  if (a1 == 2)
    return 1;
  else
    return v1;
}

uint64_t PKFeatureIdentifierFromString(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "lowercaseString");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("ccs")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("peerpayment")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("fps")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("asp")) & 1) != 0)
  {
    v2 = 4;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("savings")))
  {
    v2 = 5;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

const __CFString *PKFeatureIdentifierToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4)
    return CFSTR("unknown");
  else
    return off_1E2AC0B80[a1 - 1];
}

const __CFString *PKFeatureProductToString(uint64_t a1)
{
  if (a1 == 1)
    return CFSTR("bnpl");
  else
    return CFSTR("none");
}

uint64_t PKFeatureProductFromString(void *a1)
{
  return objc_msgSend(a1, "isEqualToString:", CFSTR("bnpl"));
}

const __CFString *PKAMPCardEligibilityStatusToString(unint64_t a1)
{
  if (a1 > 8)
    return CFSTR("unknown");
  else
    return off_1E2AC0BA8[a1];
}

uint64_t PKPaymentCryptogramTypeFromString(void *a1)
{
  return objc_msgSend(a1, "isEqualToString:", CFSTR("PSD2"));
}

const __CFString *PKPaymentCryptogramTypeToString(uint64_t a1)
{
  if (a1 == 1)
    return CFSTR("PSD2");
  else
    return CFSTR("legacy");
}

uint64_t PKUserNotificationActionFromUNNotificationActionIdentifier(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  int v12;

  v1 = a1;
  v2 = (void *)*MEMORY[0x1E0CEC818];
  v3 = v1;
  v4 = v2;
  if (v4 == v3)
  {

    goto LABEL_7;
  }
  v5 = v4;
  if (v3 && v4)
  {
    v6 = objc_msgSend(v3, "isEqualToString:", v4);

    if ((v6 & 1) == 0)
      goto LABEL_9;
LABEL_7:
    v7 = 1;
    goto LABEL_18;
  }

LABEL_9:
  v8 = (void *)*MEMORY[0x1E0CEC808];
  v9 = v3;
  v10 = v8;
  if (v10 == v9)
  {

  }
  else
  {
    v11 = v10;
    if (!v3 || !v10)
    {

LABEL_17:
      v7 = 0;
      goto LABEL_18;
    }
    v12 = objc_msgSend(v9, "isEqualToString:", v10);

    if (!v12)
      goto LABEL_17;
  }
  v7 = 2;
LABEL_18:

  return v7;
}

BOOL PKViewVisibilityStateIsVisible(int a1)
{
  return (a1 - 1) < 2;
}

void PKViewVisibilityStateAdvanceState(int a1, uint64_t a2, void *a3)
{
  id v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  id v11;

  v5 = a3;
  if (v5 && a1 != (_DWORD)a2 && (a2 | a1) <= 3)
  {
    v11 = v5;
    if (a1 == 2 && (_DWORD)a2 == 1 || !a1 && (_DWORD)a2 == 3)
    {
      (*((void (**)(id, uint64_t))v5 + 2))(v5, a2);

      return;
    }
    v6 = (a2 - 3) < 0xFEu;
    if (a1 != 1)
      v6 = 0;
    v7 = a1 != 3 && v6;
    v8 = a1 == 3 && (a2 - 1) < 2;
    do
    {
      a1 = ((_BYTE)a1 + 1) & 3;
      if (a1)
        v9 = 0;
      else
        v9 = v8;
      v10 = a1 == 2 && v7;
      if (!v9 && !v10)
      {
        (*((void (**)(id, _QWORD))v5 + 2))(v11, a1);
        v5 = v11;
      }
    }
    while ((_DWORD)a2 != a1);
  }

}

BOOL PKAssertionTypeRequiresForegroundApplicationToAcquire(uint64_t a1)
{
  return !a1 || a1 == 5;
}

__CFString *PKPassHomeKeyLiveRenderTypeToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return 0;
  else
    return off_1E2AC0C18[a1 - 1];
}

const __CFString *PKPaymentAuthorizationFundingModeToString(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("none");
  if (a1 == 1)
    v1 = CFSTR("payLater");
  if (a1 == 2)
    return CFSTR("paymentOffer");
  else
    return v1;
}

BOOL PKPassFeatureTypeFromString(void *a1)
{
  __CFString *v1;
  __CFString *v2;
  int v3;
  _BOOL8 v4;

  v1 = a1;
  v2 = v1;
  v4 = 1;
  if (v1 != CFSTR("access.sharing"))
  {
    if (!v1
      || (v3 = -[__CFString isEqualToString:](v1, "isEqualToString:", CFSTR("access.sharing")), v2, !v3))
    {
      v4 = 0;
    }
  }

  return v4;
}

const __CFString *PKPassFeatureTypeToString(uint64_t a1)
{
  if (a1 == 1)
    return CFSTR("access.sharing");
  else
    return 0;
}

const __CFString *PKPayLaterMerchandisingEntitlementTypeToString(uint64_t a1)
{
  if (a1 == 1)
    return CFSTR("payInFourMerchandising");
  else
    return CFSTR("unknown");
}

uint64_t PKContactlessActivationGroupingTypeFromString(void *a1)
{
  __CFString *v1;
  __CFString *v2;
  char v3;
  uint64_t v4;
  __CFString *v5;
  __CFString *v6;
  int v7;

  v1 = a1;
  v2 = v1;
  if (v1 == CFSTR("primary"))
    goto LABEL_4;
  if (!v1)
  {
LABEL_5:
    v4 = 0;
    goto LABEL_11;
  }
  v3 = objc_msgSend(CFSTR("primary"), "isEqualToString:", v1);

  if ((v3 & 1) == 0)
  {
    if ((objc_msgSend(CFSTR("userChoice"), "isEqual:", v2) & 1) != 0)
    {
      v4 = 2;
      goto LABEL_11;
    }
    v5 = v2;
    if (v5 == CFSTR("all") || (v6 = v5, v7 = objc_msgSend(CFSTR("all"), "isEqualToString:", v5), v6, v7))
    {
      v4 = 3;
      goto LABEL_11;
    }
    goto LABEL_5;
  }
LABEL_4:
  v4 = 1;
LABEL_11:

  return v4;
}

__CFString *PKContactlessActivationGroupingTypeToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return 0;
  else
    return off_1E2AC0C38[a1 - 1];
}

uint64_t PKRadioTechnologyFromStrings(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v3 = v2;
    v4 = 0;
    v5 = *(_QWORD *)v10;
    do
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v10 != v5)
          objc_enumerationMutation(v1);
        v7 = *(void **)(*((_QWORD *)&v9 + 1) + 8 * i);
        if (objc_msgSend(v7, "isEqualToString:", CFSTR("BT")))
          v4 |= 2uLL;
        v4 |= objc_msgSend(v7, "isEqualToString:", CFSTR("NFC"));
      }
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

uint64_t PKRadioTechnologiesFromString(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "componentsSeparatedByString:", CFSTR(","));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = PKRadioTechnologyFromStrings(v1);

  return v2;
}

const __CFString *PKRadioTechnologyToString(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("NFC");
  if (a1 == 2)
    v1 = CFSTR("BT");
  if (a1)
    return v1;
  else
    return CFSTR("NONE");
}

id PKRadioTechnologiesToString(char a1)
{
  id v2;
  void *v3;
  void *v4;

  v2 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v3 = v2;
  if ((a1 & 1) != 0)
    objc_msgSend(v2, "addObject:", CFSTR("NFC"));
  if ((a1 & 2) != 0)
    objc_msgSend(v3, "addObject:", CFSTR("BT"));
  if (!objc_msgSend(v3, "count"))
    objc_msgSend(v3, "addObject:", CFSTR("NONE"));
  objc_msgSend(v3, "componentsJoinedByString:", CFSTR(","));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

uint64_t PKRadioTechnologyFromNumbers(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v3 = v2;
    v4 = 0;
    v5 = *(_QWORD *)v10;
    do
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v10 != v5)
          objc_enumerationMutation(v1);
        v7 = *(void **)(*((_QWORD *)&v9 + 1) + 8 * i);
        v4 |= objc_msgSend(v7, "isEqualToNumber:", &unk_1E2C3E818);
        if (objc_msgSend(v7, "isEqualToNumber:", &unk_1E2C3E830))
          v4 |= 2uLL;
      }
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

unint64_t PKRadioTechnologyForConfigurationTechnology(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  uint8_t v4[16];

  v1 = a1;
  if ((a1 & 2) != 0)
  {
    if (qword_1ECF22168 != -1)
      dispatch_once(&qword_1ECF22168, &__block_literal_global_8);
    if (!_MergedGlobals_192)
    {
      PKLogFacilityTypeGetObject(0x16uLL);
      v2 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v4 = 0;
        _os_log_impl(&dword_18FC92000, v2, OS_LOG_TYPE_DEFAULT, "Removing BT due to device not supporting UWB interactions", v4, 2u);
      }

      return v1 & 0xFFFFFFFFFFFFFFFDLL;
    }
  }
  return v1;
}

Class initNISession()
{
  Class result;

  if (qword_1ECF22178 != -1)
    dispatch_once(&qword_1ECF22178, &__block_literal_global_19);
  result = objc_getClass("NISession");
  qword_1ECF22170 = (uint64_t)result;
  getNISessionClass[0] = (uint64_t (*)())NISessionFunction;
  return result;
}

id NISessionFunction()
{
  return (id)qword_1ECF22170;
}

void sub_18FEC8FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 144), 8);
  _Block_object_dispose((const void *)(v27 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_18FEC9BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  _Block_object_dispose(&a43, 8);
  _Unwind_Resume(a1);
}

void sub_18FEC9D54(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18FECA27C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FECAE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FECB31C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FECB760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FECB860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FECBA4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FECBC90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FECBDCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FECBEAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FECC0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FECC614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FECC724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FECCA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FECF964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t PKPaymentApplicationMatchesSTSEventCredential(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _QWORD v15[4];
  id v16;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "applicationIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "identifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v5;
  v8 = v6;
  v9 = v8;
  if (v7 == v8)
  {
    v10 = 1;
  }
  else
  {
    v10 = 0;
    if (v7 && v8)
      v10 = objc_msgSend(v7, "isEqualToString:", v8);
  }

  objc_msgSend(v4, "subIdentifier");
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = (void *)v11;
  if ((_DWORD)v10 && v11)
  {
    objc_msgSend(v3, "subcredentials");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = __PKPaymentApplicationMatchesSTSEventCredential_block_invoke;
    v15[3] = &unk_1E2AC10E0;
    v16 = v12;
    v10 = objc_msgSend(v13, "pk_hasObjectPassingTest:", v15);

  }
  return v10;
}

Class initSTSCredential()
{
  Class result;

  if (qword_1EE1DB498 != -1)
    dispatch_once(&qword_1EE1DB498, &__block_literal_global_490);
  result = objc_getClass("STSCredential");
  _MergedGlobals_40 = (uint64_t)result;
  getSTSCredentialClass[0] = (uint64_t (*)())STSCredentialFunction;
  return result;
}

id STSCredentialFunction()
{
  return (id)_MergedGlobals_40;
}

id PDDeviceSpecificLocalizedStringKeyForKey(void *a1)
{
  id v1;
  const __CFString *v2;
  id v3;
  void *v4;

  v1 = a1;
  if (PKIsPhone())
  {
    v2 = CFSTR("_IPHONE");
  }
  else
  {
    if (!PKIsPad())
    {
      v3 = v1;
      goto LABEL_7;
    }
    v2 = CFSTR("_IPAD");
  }
  objc_msgSend(v1, "stringByAppendingString:", v2);
  v3 = (id)objc_claimAutoreleasedReturnValue();
LABEL_7:
  v4 = v3;

  return v4;
}

id PKPassLocalizedStringWithFormat(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _PKPassLocalizedStringWithFileAndFormat(a1, a2, a3, (uint64_t)&a9);
  return (id)objc_claimAutoreleasedReturnValue();
}

id _PKPassLocalizedStringWithFileAndFormat(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  void *v9;
  int v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  BOOL v17;
  void *v18;
  id v19;
  uint64_t v21;

  v7 = a1;
  v8 = a3;
  objc_msgSend(a2, "passLocalizedStringForKey:", v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "isEqualToString:", v7);
  if (!v9 || v10)
  {
    PKPassKitBundle();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "localizedStringForKey:value:table:", v7, &stru_1E2ADF4C0, CFSTR("pass_localizable"));
    v12 = objc_claimAutoreleasedReturnValue();

    v9 = (void *)v12;
  }
  if (v8)
  {
    v13 = objc_alloc(MEMORY[0x1E0CB3940]);
    objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = 0;
    v15 = (void *)objc_msgSend(v13, "initWithValidatedFormat:validFormatSpecifiers:locale:arguments:error:", v9, v8, v14, a4, &v21);
    v16 = v21;

    if (v15)
      v17 = v16 == 0;
    else
      v17 = 0;
    if (v17)
      v18 = v15;
    else
      v18 = v7;
    v19 = v18;

    v9 = v19;
  }

  return v9;
}

id PKPassLocalizedHomeKeyStringWithFormat(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _PKPassLocalizedStringWithFileAndFormat(a1, a2, a3, (uint64_t)&a9);
  return (id)objc_claimAutoreleasedReturnValue();
}

id PKPassLocalizedStringForStateWithFormat(NSString *a1, PKSecureElementPass *a2, NSString *a3, ...)
{
  id v3;
  NSString *v6;
  PKSecureElementPass *v7;
  NSString *v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  int v17;
  void *v18;
  va_list va;

  va_start(va, a3);
  v3 = 0;
  if (a1 && a2)
  {
    v6 = a3;
    v7 = a2;
    v8 = a1;
    v9 = -[PKSecureElementPass effectiveContactlessPaymentApplicationState](v7, "effectiveContactlessPaymentApplicationState");
    v10 = objc_alloc(MEMORY[0x1E0CB3940]);
    _PKPaymentApplicationStateLocalizationStringPostfix(v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v10, "initWithFormat:", CFSTR("%@_%@"), v8, v11);

    _PKPassLocalizedStringWithFileAndFormat(v12, v7, v6, (uint64_t)va);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    v14 = v13;
    v15 = v12;
    v16 = v15;
    if (v14 == v15)
    {

    }
    else
    {
      if (!v15 || !v14)
      {

        v18 = v14;
        goto LABEL_11;
      }
      v17 = objc_msgSend(v14, "isEqualToString:", v15);

      v18 = v14;
      if (!v17)
        goto LABEL_11;
    }
    v18 = 0;
LABEL_11:
    v3 = v18;

  }
  return v3;
}

const __CFString *_PKPaymentApplicationStateLocalizationStringPostfix(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xE)
    return CFSTR("UNKNOWN");
  else
    return off_1E2AC11B8[a1 - 1];
}

id PKPassLocalizedStringForStateWithFormat(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v9;
  objc_class *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  int v24;
  void *v25;

  v9 = 0;
  if (a1 && a2)
  {
    v13 = (objc_class *)MEMORY[0x1E0CB3940];
    v14 = a4;
    v15 = a2;
    v16 = a1;
    v17 = [v13 alloc];
    _PKPaymentApplicationStateLocalizationStringPostfix(a3);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = (void *)objc_msgSend(v17, "initWithFormat:", CFSTR("%@_%@"), v16, v18);

    _PKPassLocalizedStringWithFileAndFormat(v19, v15, v14, (uint64_t)&a9);
    v20 = (void *)objc_claimAutoreleasedReturnValue();

    v21 = v20;
    v22 = v19;
    v23 = v22;
    if (v21 == v22)
    {

    }
    else
    {
      if (!v22 || !v21)
      {

        v25 = v21;
        goto LABEL_11;
      }
      v24 = objc_msgSend(v21, "isEqualToString:", v22);

      v25 = v21;
      if (!v24)
        goto LABEL_11;
    }
    v25 = 0;
LABEL_11:
    v9 = v25;

  }
  return v9;
}

id PKCoreLocalizedString(NSString *a1)
{
  return PKCoreLocalizedString(a1, 0);
}

id PKCoreLocalizedString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitCoreBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedTransitString(NSString *a1)
{
  return PKLocalizedTransitString(a1, 0);
}

id PKLocalizedTransitString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("Transit_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedPearlString(NSString *a1)
{
  return PKLocalizedPearlString(a1, 0);
}

id PKLocalizedPearlString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("Pearl_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedPeerPaymentLexingtonString(NSString *a1)
{
  return PKLocalizedPeerPaymentLexingtonString(a1, 0);
}

id PKLocalizedPeerPaymentLexingtonString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("PeerPaymentLexington_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedPeerPaymentRecurringString(NSString *a1)
{
  return PKLocalizedPeerPaymentRecurringString(a1, 0);
}

id PKLocalizedPeerPaymentRecurringString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("PeerPaymentRecurring_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKDynamicLocalizedPeerPaymentString(void *a1)
{
  NSString *v1;
  void *v2;
  NSBundle *v3;
  void *v4;

  v1 = a1;
  +[PKMobileAssetManager sharedInstance](PKMobileAssetManager, "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "cachedStringsBundleWithIdentifier:", CFSTR("Cash"));
  v3 = (NSBundle *)objc_claimAutoreleasedReturnValue();

  PKLocalizedStringInMobileAssetsStringsBundle(v1, v3, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v4)
  {
    PKLocalizedPeerPaymentString(v1, 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v4;
}

NSString *PKLocalizedStringInMobileAssetsStringsBundle(NSString *a1, NSBundle *a2)
{
  return PKLocalizedStringInMobileAssetsStringsBundle(a1, a2, 0);
}

id PKLocalizedPeerPaymentString(NSString *a1)
{
  return PKLocalizedPeerPaymentString(a1, 0);
}

id PKLocalizedPeerPaymentString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("PeerPayment_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedCardNumbersString(NSString *a1)
{
  return PKLocalizedCardNumbersString(a1, 0);
}

id PKLocalizedCardNumbersString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("CardNumbers_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedFeatureString(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return PKLocalizedFeatureString(a1, a2, 0, a4, a5, a6, a7, a8, a9);
}

id PKLocalizedFeatureString(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __CFString *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;

  if ((unint64_t)(a2 - 1) > 4)
    v10 = 0;
  else
    v10 = off_1E2AC1230[a2 - 1];
  v11 = a3;
  v12 = a1;
  PKPassKitBundle();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v12, 0, v10, v13, v11, 0, (uint64_t)&a9);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  return v14;
}

id PKLocalizedApplyFeatureString(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return PKLocalizedApplyFeatureString(a1, a2, a3, 0, a5, a6, a7, a8, a9);
}

id PKLocalizedApplyFeatureString(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __CFString *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;

  if ((unint64_t)(a2 - 1) > 4)
    v11 = 0;
  else
    v11 = off_1E2AC1230[a2 - 1];
  v12 = a4;
  v13 = a3;
  v14 = a1;
  PKPassKitBundle();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v14, v13, v11, v15, v12, 0, (uint64_t)&a9);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  return v16;
}

id PKLocalizedFeatureStringWithDefaultValue(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return PKLocalizedFeatureStringWithDefaultValue(a1, a2, a3, 0, a5, a6, a7, a8, a9);
}

id PKLocalizedFeatureStringWithDefaultValue(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __CFString *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;

  if ((unint64_t)(a2 - 1) > 4)
    v11 = 0;
  else
    v11 = off_1E2AC1230[a2 - 1];
  v12 = a4;
  v13 = a3;
  v14 = a1;
  PKPassKitBundle();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v14, 0, v11, v15, v12, v13, (uint64_t)&a9);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  return v16;
}

id PKLocalizedAMPString(NSString *a1)
{
  return PKLocalizedAMPString(a1, 0);
}

id PKLocalizedAMPString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("Aurum_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedMadisonString(NSString *a1)
{
  return PKLocalizedMadisonString(a1, 0);
}

id PKLocalizedMadisonString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("Madison_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedCocoonString(NSString *a1)
{
  return PKLocalizedCocoonString(a1, 0);
}

id PKLocalizedCocoonString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("PayLater_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedLynxString(NSString *a1)
{
  return PKLocalizedLynxString(a1, 0);
}

id PKLocalizedLynxString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("AppleBalance_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedAquamanString(NSString *a1)
{
  return PKLocalizedAquamanString(a1, 0);
}

id PKLocalizedAquamanString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("Aquaman_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedMerchantTokensString(NSString *a1)
{
  return PKLocalizedMerchantTokensString(a1, 0);
}

id PKLocalizedMerchantTokensString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("MerchantTokens_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedIdentityString(NSString *a1)
{
  return PKLocalizedIdentityString(a1, 0);
}

id PKLocalizedIdentityString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("Identity_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedShareableCredentialString(NSString *a1)
{
  return PKLocalizedShareableCredentialString(a1, 0);
}

id PKLocalizedShareableCredentialString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("ShareableCredential_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedD5xString(NSString *a1)
{
  return PKLocalizedD5xString(a1, 0);
}

id PKLocalizedD5xString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("D5x_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedSettingsString(NSString *a1)
{
  return PKLocalizedSettingsString(a1, 0);
}

id PKLocalizedSettingsString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("WalletSettings_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedVirtualCardString(NSString *a1)
{
  return PKLocalizedVirtualCardString(a1, 0);
}

id PKLocalizedVirtualCardString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("VirtualCard_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedCashVPANString(NSString *a1)
{
  return PKLocalizedCashVPANString(a1, 0);
}

id PKLocalizedCashVPANString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("CashVPAN_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedNearbyPeerPaymentString(NSString *a1)
{
  return PKLocalizedNearbyPeerPaymentString(a1, 0);
}

id PKLocalizedNearbyPeerPaymentString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("NearbyPeerPayment_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedHideMyEmailString(NSString *a1)
{
  return PKLocalizedHideMyEmailString(a1, 0);
}

id PKLocalizedHideMyEmailString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("PaymentSheetHME_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedFundsTransferString(NSString *a1)
{
  return PKLocalizedFundsTransferString(a1, 0);
}

id PKLocalizedFundsTransferString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("FundsTransfer_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedHomeKeyString(NSString *a1)
{
  return PKLocalizedHomeKeyString(a1, 0);
}

id PKLocalizedHomeKeyString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("HomeKey_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedDiscoveryString(NSString *a1)
{
  return PKLocalizedDiscoveryString(a1, 0);
}

id PKLocalizedDiscoveryString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("Discovery_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedCredentialString(NSString *a1)
{
  return PKLocalizedCredentialString(a1, 0);
}

id PKLocalizedCredentialString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("Credential_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedBeekmanString(NSString *a1)
{
  return PKLocalizedBeekmanString(a1, 0);
}

id PKLocalizedBeekmanString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("Beekman_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedBeekmanStringWithLocalization(NSString *a1, NSString *a2)
{
  return PKLocalizedBeekmanStringWithLocalization(a1, a2, 0);
}

id PKLocalizedBeekmanStringWithLocalization(NSString *a1, NSString *a2, NSString *a3, ...)
{
  NSString *v5;
  NSString *v6;
  NSString *v7;
  void *v8;
  void *v9;
  va_list va;

  va_start(va, a3);
  v5 = a3;
  v6 = a2;
  v7 = a1;
  PKPassKitBundle();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v7, v6, CFSTR("Beekman_Localizable"), v8, v5, 0, (uint64_t)va);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

id PKLocalizedBeekmanStringInBundle(NSString *a1, NSBundle *a2)
{
  return PKLocalizedBeekmanStringInBundle(a1, a2, 0);
}

id PKLocalizedBeekmanStringInBundle(NSString *a1, NSBundle *a2, NSString *a3, ...)
{
  va_list va;

  va_start(va, a3);
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(a1, 0, CFSTR("Beekman_Localizable"), a2, a3, 0, (uint64_t)va);
  return (id)objc_claimAutoreleasedReturnValue();
}

id PKLocalizedStringInMarketBundle(NSString *a1, NSBundle *a2)
{
  return PKLocalizedStringInMarketBundle(a1, a2, 0);
}

id PKLocalizedStringInMarketBundle(NSString *a1, NSBundle *a2, NSString *a3, ...)
{
  va_list va;

  va_start(va, a3);
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(a1, 0, CFSTR("Localizable"), a2, a3, 0, (uint64_t)va);
  return (id)objc_claimAutoreleasedReturnValue();
}

NSString *PKLocalizedStringInMobileAssetsStringsBundle(NSString *a1, NSBundle *a2, NSString *a3, ...)
{
  NSString *v5;
  NSString *v6;
  NSString *v7;
  NSString *v8;
  NSString *v9;
  BOOL v10;
  va_list va;

  va_start(va, a3);
  v5 = a1;
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v5, 0, CFSTR("Localizable"), a2, a3, 0, (uint64_t)va);
  v6 = (NSString *)(id)objc_claimAutoreleasedReturnValue();
  v7 = v5;
  v8 = v7;
  if (v6 == v7)
  {

    v9 = 0;
LABEL_7:

    goto LABEL_8;
  }
  v9 = v6;
  if (!v7)
    goto LABEL_7;
  v9 = v6;
  if (!v6)
    goto LABEL_7;
  v10 = -[NSString isEqualToString:](v6, "isEqualToString:", v7);

  if (v10)
  {
    v9 = 0;
LABEL_8:

    v6 = v9;
  }

  return v6;
}

NSString *PKDynamicLocalizedAppleCardString(NSString *a1)
{
  return PKDynamicLocalizedAppleCardString(a1, 0);
}

NSString *PKDynamicLocalizedAppleCardString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  void *v7;
  NSString *v8;
  NSString *v9;
  NSString *v10;
  _BOOL4 v11;
  void *v12;
  uint64_t v13;
  va_list va;

  va_start(va, a2);
  v3 = a1;
  v4 = a2;
  +[PKMobileAssetManager sharedInstance](PKMobileAssetManager, "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "cachedStringsBundleWithIdentifier:", CFSTR("AppleCard"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6
    && (_PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v3, 0, CFSTR("Localizable"), v6, v4, 0, (uint64_t)va), (v7 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
  {
    v8 = v7;
    v9 = v3;
    v10 = v9;
    if (v8 == v9)
    {

      v8 = v10;
    }
    else
    {
      if (!v9)
      {

        goto LABEL_9;
      }
      v11 = -[NSString isEqualToString:](v8, "isEqualToString:", v9);

      if (!v11)
        goto LABEL_9;
    }
  }
  else
  {
    v8 = 0;
  }
  PKPassKitBundle();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v3, 0, CFSTR("CCS_Localizable"), v12, v4, 0, (uint64_t)va);
  v13 = objc_claimAutoreleasedReturnValue();

  v8 = (NSString *)v13;
LABEL_9:

  return v8;
}

id PKLocalizedStringInStationCodeBundle(NSString *a1, NSBundle *a2)
{
  return PKLocalizedStringInStationCodeBundle(a1, a2, 0);
}

id PKLocalizedStringInStationCodeBundle(NSString *a1, NSBundle *a2, NSString *a3, ...)
{
  va_list va;

  va_start(va, a3);
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(a1, 0, CFSTR("Localizable"), a2, a3, 0, (uint64_t)va);
  return (id)objc_claimAutoreleasedReturnValue();
}

id PKLocalizedDeletableString(NSString *a1)
{
  return PKLocalizedDeletableString(a1, 0);
}

id PKLocalizedDeletableString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("Deletable_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedBankConnectString(NSString *a1)
{
  return PKLocalizedBankConnectString(a1, 0);
}

id PKLocalizedBankConnectString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("BankConnect_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedPayWithPointsString(NSString *a1)
{
  return PKLocalizedPayWithPointsString(a1, 0);
}

id PKLocalizedPayWithPointsString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("PayWithRewards_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedPersonalizationStringForPassBundle(void *a1, void *a2)
{
  if (a1)
  {
    objc_msgSend(a2, "localizedStringForKey:value:table:", a1, a1, CFSTR("personalization"));
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

id PKLocalizedReceiptStringForReceiptBundle(void *a1, void *a2)
{
  if (a1)
  {
    objc_msgSend(a2, "localizedStringForKey:value:table:", a1, a1, CFSTR("receipt"));
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

id PKGregorianMonthSpecificLocalizedStringKeyForKey(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  const __CFString *v5;
  id v6;
  void *v7;

  v3 = a1;
  v4 = v3;
  switch(a2)
  {
    case 1:
      v5 = CFSTR("_JANUARY");
      goto LABEL_14;
    case 2:
      v5 = CFSTR("_FEBRUARY");
      goto LABEL_14;
    case 3:
      v5 = CFSTR("_MARCH");
      goto LABEL_14;
    case 4:
      v5 = CFSTR("_APRIL");
      goto LABEL_14;
    case 5:
      v5 = CFSTR("_MAY");
      goto LABEL_14;
    case 6:
      v5 = CFSTR("_JUNE");
      goto LABEL_14;
    case 7:
      v5 = CFSTR("_JULY");
      goto LABEL_14;
    case 8:
      v5 = CFSTR("_AUGUST");
      goto LABEL_14;
    case 9:
      v5 = CFSTR("_SEPTEMBER");
      goto LABEL_14;
    case 10:
      v5 = CFSTR("_OCTOBER");
      goto LABEL_14;
    case 11:
      v5 = CFSTR("_NOVEMBER");
      goto LABEL_14;
    case 12:
      v5 = CFSTR("_DECEMBER");
LABEL_14:
      objc_msgSend(v3, "stringByAppendingString:", v5);
      v6 = (id)objc_claimAutoreleasedReturnValue();
      break;
    default:
      v6 = v3;
      break;
  }
  v7 = v6;

  return v7;
}

id PKLocalizedSEPAuthorizationErrorString(int a1)
{
  __CFString *v2;
  void *v3;
  __CFString *v4;

  if (PKPearlIsAvailable())
  {
    if (a1)
      v2 = CFSTR("PAYMENT_ERROR_PEARL_AUTHENTICATION_ERROR");
    else
      v2 = CFSTR("GENERIC_ERROR_PEARL_AUTHENTICATION_ERROR");
    PKLocalizedPearlString(&v2->isa, 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (a1)
      v4 = CFSTR("PAYMENT_ERROR_AUTHENTICATION_ERROR");
    else
      v4 = CFSTR("GENERIC_ERROR_AUTHENTICATION_ERROR");
    PKLocalizedPaymentString(&v4->isa, 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v3;
}

id PKLocalizationKeyForPassType(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __CFString **v8;
  void *v9;
  unint64_t v10;
  id v11;

  v3 = a1;
  if (v3)
  {
    objc_msgSend(a2, "secureElementPass");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v4;
    if (v4)
    {
      v6 = objc_msgSend(v4, "cardType");
      if (v6 == 4)
      {
        v10 = objc_msgSend(v5, "identityType");
        if (v10 < 4)
        {
          v8 = &off_1E2AC1288[v10];
          goto LABEL_10;
        }
      }
      else if (v6 == 3)
      {
        v7 = objc_msgSend(v5, "accessType");
        if ((unint64_t)(v7 - 1) < 6)
        {
          v8 = &off_1E2AC1258[v7 - 1];
LABEL_10:
          objc_msgSend(v3, "stringByAppendingString:", *v8);
          v11 = (id)objc_claimAutoreleasedReturnValue();
LABEL_12:
          v9 = v11;

          goto LABEL_13;
        }
      }
    }
    v11 = v3;
    goto LABEL_12;
  }
  v9 = 0;
LABEL_13:

  return v9;
}

id PKLocalizedPaymentOffersString(NSString *a1)
{
  return PKLocalizedPaymentOffersString(a1, 0);
}

id PKLocalizedPaymentOffersString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("PaymentOffers_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedRemoteNetworkPaymentString(NSString *a1)
{
  return PKLocalizedRemoteNetworkPaymentString(a1, 0);
}

id PKLocalizedRemoteNetworkPaymentString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("RemoteNetworkPayment_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedTicketingString(NSString *a1)
{
  return PKLocalizedTicketingString(a1, 0);
}

id PKLocalizedTicketingString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("Ticketing_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedHomeKitUWBString(NSString *a1)
{
  return PKLocalizedHomeKitUWBString(a1, 0);
}

id PKLocalizedHomeKitUWBString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("HomeKitUWB_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKLocalizedBroadwayDiscoverabilityString(NSString *a1)
{
  return PKLocalizedBroadwayDiscoverabilityString(a1, 0);
}

id PKLocalizedBroadwayDiscoverabilityString(NSString *a1, NSString *a2, ...)
{
  NSString *v3;
  NSString *v4;
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a2);
  v3 = a2;
  v4 = a1;
  PKPassKitBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  _PKLocalizedStringForLocalizationFromTableInBundleWithValidFormatSpecifiersAndDefaultValue(v4, 0, CFSTR("BroadwayDiscoverability_Localizable"), v5, v3, 0, (uint64_t)va);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

const __CFString *PKPayLaterFinancingPlanCancellationReasonToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xC)
    return CFSTR("unknown");
  else
    return off_1E2AC12A8[a1 - 1];
}

uint64_t PKPayLaterFinancingPlanCancellationReasonFromString(void *a1)
{
  __CFString *v1;
  __CFString *v2;
  char v3;
  uint64_t v4;
  __CFString *v5;
  __CFString *v6;
  char v7;
  __CFString *v8;
  __CFString *v9;
  char v10;
  __CFString *v11;
  __CFString *v12;
  char v13;
  __CFString *v14;
  __CFString *v15;
  char v16;
  __CFString *v17;
  __CFString *v18;
  char v19;
  __CFString *v20;
  __CFString *v21;
  char v22;
  __CFString *v23;
  __CFString *v24;
  char v25;
  __CFString *v26;
  __CFString *v27;
  char v28;
  __CFString *v29;
  __CFString *v30;
  char v31;
  __CFString *v32;
  __CFString *v33;
  char v34;
  __CFString *v35;
  __CFString *v36;
  char v37;
  __CFString *v38;
  __CFString *v39;
  int v40;

  v1 = a1;
  v2 = v1;
  if (v1 == CFSTR("invalidMerchantReference"))
    goto LABEL_4;
  if (!v1)
  {
LABEL_41:
    v4 = 0;
    goto LABEL_42;
  }
  v3 = -[__CFString isEqualToString:](v1, "isEqualToString:", CFSTR("invalidMerchantReference"));

  if ((v3 & 1) == 0)
  {
    v5 = v2;
    if (v5 == CFSTR("userInitiatedCancel")
      || (v6 = v5,
          v7 = -[__CFString isEqualToString:](v5, "isEqualToString:", CFSTR("userInitiatedCancel")),
          v6,
          (v7 & 1) != 0))
    {
      v4 = 2;
      goto LABEL_42;
    }
    v8 = v6;
    if (v8 == CFSTR("paymentFailed")
      || (v9 = v8,
          v10 = -[__CFString isEqualToString:](v8, "isEqualToString:", CFSTR("paymentFailed")),
          v9,
          (v10 & 1) != 0))
    {
      v4 = 3;
      goto LABEL_42;
    }
    v11 = v9;
    if (v11 == CFSTR("highAuthAmount")
      || (v12 = v11,
          v13 = -[__CFString isEqualToString:](v11, "isEqualToString:", CFSTR("highAuthAmount")),
          v12,
          (v13 & 1) != 0))
    {
      v4 = 4;
      goto LABEL_42;
    }
    v14 = v12;
    if (v14 == CFSTR("unsupportedProductType")
      || (v15 = v14,
          v16 = -[__CFString isEqualToString:](v14, "isEqualToString:", CFSTR("unsupportedProductType")),
          v15,
          (v16 & 1) != 0))
    {
      v4 = 5;
      goto LABEL_42;
    }
    v17 = v15;
    if (v17 == CFSTR("ineligibleMerchant")
      || (v18 = v17,
          v19 = -[__CFString isEqualToString:](v17, "isEqualToString:", CFSTR("ineligibleMerchant")),
          v18,
          (v19 & 1) != 0))
    {
      v4 = 6;
      goto LABEL_42;
    }
    v20 = v18;
    if (v20 == CFSTR("invalidAccountState")
      || (v21 = v20,
          v22 = -[__CFString isEqualToString:](v20, "isEqualToString:", CFSTR("invalidAccountState")),
          v21,
          (v22 & 1) != 0))
    {
      v4 = 7;
      goto LABEL_42;
    }
    v23 = v21;
    if (v23 == CFSTR("lockedRestrictedAccountState")
      || (v24 = v23,
          v25 = -[__CFString isEqualToString:](v23, "isEqualToString:", CFSTR("lockedRestrictedAccountState")),
          v24,
          (v25 & 1) != 0))
    {
      v4 = 8;
      goto LABEL_42;
    }
    v26 = v24;
    if (v26 == CFSTR("fraudSuspectedCustomer")
      || (v27 = v26,
          v28 = -[__CFString isEqualToString:](v26, "isEqualToString:", CFSTR("fraudSuspectedCustomer")),
          v27,
          (v28 & 1) != 0))
    {
      v4 = 9;
      goto LABEL_42;
    }
    v29 = v27;
    if (v29 == CFSTR("fraudSuspectedMerchant")
      || (v30 = v29,
          v31 = -[__CFString isEqualToString:](v29, "isEqualToString:", CFSTR("fraudSuspectedMerchant")),
          v30,
          (v31 & 1) != 0))
    {
      v4 = 10;
      goto LABEL_42;
    }
    v32 = v30;
    if (v32 == CFSTR("transactionDetailsInvalid")
      || (v33 = v32,
          v34 = -[__CFString isEqualToString:](v32, "isEqualToString:", CFSTR("transactionDetailsInvalid")),
          v33,
          (v34 & 1) != 0))
    {
      v4 = 11;
      goto LABEL_42;
    }
    v35 = v33;
    if (v35 == CFSTR("passedPlanDeadline")
      || (v36 = v35,
          v37 = -[__CFString isEqualToString:](v35, "isEqualToString:", CFSTR("passedPlanDeadline")),
          v36,
          (v37 & 1) != 0))
    {
      v4 = 12;
      goto LABEL_42;
    }
    v38 = v36;
    if (v38 == CFSTR("merchantReversal")
      || (v39 = v38,
          v40 = -[__CFString isEqualToString:](v38, "isEqualToString:", CFSTR("merchantReversal")),
          v39,
          v40))
    {
      v4 = 13;
      goto LABEL_42;
    }
    goto LABEL_41;
  }
LABEL_4:
  v4 = 1;
LABEL_42:

  return v4;
}

uint64_t PKPaymentSetupFieldTypeFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (v1)
  {
    if ((objc_msgSend(CFSTR("text"), "isEqualToString:", v1) & 1) != 0)
    {
      v2 = 1;
    }
    else if ((objc_msgSend(CFSTR("date"), "isEqualToString:", v1) & 1) != 0)
    {
      v2 = 2;
    }
    else if ((objc_msgSend(CFSTR("label"), "isEqualToString:", v1) & 1) != 0)
    {
      v2 = 3;
    }
    else if ((objc_msgSend(CFSTR("footer"), "isEqualToString:", v1) & 1) != 0)
    {
      v2 = 4;
    }
    else if (objc_msgSend(CFSTR("picker"), "isEqualToString:", v1))
    {
      v2 = 5;
    }
    else
    {
      v2 = 0;
    }
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

const __CFString *PKPaymentSetupFieldTypeToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4)
    return CFSTR("unknown");
  else
    return off_1E2AC1650[a1 - 1];
}

uint64_t PKPaymentSetupFieldSourceFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("cameraCapture")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("autofill")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("autofillEdited")) & 1) != 0)
  {
    v2 = 3;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("manual")))
  {
    v2 = 4;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

const __CFString *PKPaymentSetupFieldSourceToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return CFSTR("unknown");
  else
    return off_1E2AC1630[a1 - 1];
}

uint64_t PKPaymentSetupFieldTextAlignmentFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (v1)
  {
    if ((objc_msgSend(CFSTR("leading"), "isEqualToString:", v1) & 1) != 0)
    {
      v2 = 1;
    }
    else if (objc_msgSend(CFSTR("trailing"), "isEqualToString:", v1))
    {
      v2 = 2;
    }
    else
    {
      v2 = 0;
    }
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

uint64_t PKPaymentSetupFieldLabelAlignmentFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (v1)
  {
    if ((objc_msgSend(CFSTR("left"), "isEqualToString:", v1) & 1) != 0)
    {
      v2 = 1;
    }
    else if (objc_msgSend(CFSTR("center"), "isEqualToString:", v1))
    {
      v2 = 2;
    }
    else
    {
      v2 = 0;
    }
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

uint64_t PKProtobufCloudStoreZoneInvitationRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  PKProtobufCloudStoreZoneInvitation *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_42;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_44;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_42:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_44:
        v33 = 40;
        goto LABEL_49;
      case 2u:
        v24 = objc_alloc_init(PKProtobufCloudStoreZoneInvitation);
        objc_storeStrong((id *)(a1 + 32), v24);
        if (PBReaderPlaceMark()
          && (PKProtobufCloudStoreZoneInvitationReadFrom((uint64_t)v24, a2) & 1) != 0)
        {
          PBReaderRecallMark();

LABEL_50:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 3u:
        v25 = 0;
        v26 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 44) |= 1u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_48;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_48:
        v33 = 8;
LABEL_49:
        *(_DWORD *)(a1 + v33) = v19;
        goto LABEL_50;
      case 4u:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 24;
        goto LABEL_40;
      case 5u:
        PBReaderReadString();
        v30 = objc_claimAutoreleasedReturnValue();
        v31 = 16;
LABEL_40:
        v32 = *(void **)(a1 + v31);
        *(_QWORD *)(a1 + v31) = v30;

        goto LABEL_50;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_50;
    }
  }
}

uint64_t PKPassEntitlementCapabilityRoleValueFrom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PKPassEntitlementCapabilityRoleValueFrom(a1, a2, a3, 1);
}

uint64_t PKPassEntitlementCapabilityRoleValueFrom(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  if (a1 == 999)
    v4 = 7;
  else
    v4 = 0;
  if (a1 == 3)
    v5 = 3;
  else
    v5 = v4;
  if (a1 == 2)
    v6 = 2;
  else
    v6 = 0;
  if (a1 == 1)
    v7 = 1;
  else
    v7 = v6;
  if (a1 <= 2)
    v5 = v7;
  if (a4)
    v5 |= 8u;
  v8 = (a3 == 2) << 7;
  if (a3 == -1)
    v8 = 144;
  return v8 | ((a2 == 2) << 11) | v5;
}

unint64_t FelicaTransitHistoryRecordFromFelicaRecord(void *a1)
{
  id v1;
  void *v2;
  unsigned __int8 v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v1 = a1;
  objc_msgSend(v1, "transactionType");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "unsignedIntegerValue");
  objc_msgSend(v1, "sectorCombination");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "unsignedIntegerValue");
  objc_msgSend(v1, "balance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "unsignedLongLongValue");
  objc_msgSend(v1, "amountType");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "unsignedIntegerValue");
  objc_msgSend(v1, "amount");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "integerValue");
  return ((unint64_t)v5 << 8) | (v7 << 32) | v3;
}

BOOL IsStartStationAvailable(unsigned int a1, unsigned int a2)
{
  _BOOL8 result;

  result = 1;
  if (a1 > 0x33)
    return a1 == 72;
  if (((1 << a1) & 0xC00040000019CLL) != 0)
    return result;
  if (((1 << a1) & 0x380062) == 0)
    return a1 == 72;
  if (a2 >= 0x20)
    return 0;
  return (0xDFFF45FE >> a2) & 1;
}

uint64_t PKPaymentAuthorizationDataTypeIsSelectable(unint64_t a1)
{
  return (a1 > 0xC) | (0xAF9u >> a1) & 1;
}

BOOL PKIsCouponCodeError(void *a1)
{
  id v1;
  void *v2;
  _BOOL8 v3;

  v1 = a1;
  objc_msgSend(v1, "domain");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v2, "isEqualToString:", CFSTR("PKPaymentErrorDomain")))
    v3 = objc_msgSend(v1, "code") == 4 || objc_msgSend(v1, "code") == 5;
  else
    v3 = 0;

  return v3;
}

id PKArchiverZipData(NSURL *a1)
{
  NSURL *v1;
  NSURL *v2;
  NSURL *v3;
  uint64_t disk_new;
  uint64_t v5;
  NSObject *v6;
  const char *v7;
  void *v8;
  NSObject *v9;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;
  int v15;
  int v16;
  NSObject *v17;
  size_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  const char *v24;
  NSObject *v25;
  int *v26;
  char *v27;
  NSObject *v28;
  uint32_t v29;
  NSObject *v30;
  NSObject *v31;
  int *v32;
  char *v33;
  NSObject *v34;
  uint64_t v35;
  NSObject *v36;
  void *v37;
  int next_header;
  uint64_t v39;
  void *v40;
  unint64_t v41;
  NSObject *v42;
  void *v43;
  NSObject *v44;
  int v45;
  NSObject *v46;
  BOOL v47;
  const char *v48;
  ssize_t v49;
  NSObject *v50;
  uint64_t v51;
  NSObject *v52;
  const char *v53;
  uint32_t v54;
  int *v55;
  char *v56;
  NSObject *v57;
  int *v58;
  char *v59;
  int v60;
  NSObject *v61;
  uint64_t v62;
  const char *v63;
  NSObject *v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  uint32_t v68;
  NSObject *v69;
  uint64_t v70;
  NSObject *v71;
  int *v72;
  char *v73;
  const char *v74;
  off_t v75;
  void *v76;
  void *v77;
  id v78;
  int *v79;
  char *v80;
  int *v81;
  char *v82;
  void *v83;
  unint64_t v84;
  int v85;
  char v86;
  NSObject *v87;
  void *context;
  void *v89;
  void *v90;
  int v91;
  uint64_t v92;
  _QWORD v93[6];
  uint8_t v94[8];
  __int16 v95;
  NSObject *v96;
  __int16 v97;
  char *v98;
  stat buf;
  uint64_t v100;

  v100 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (!v1)
  {
    v3 = 0;
LABEL_8:
    v8 = 0;
    goto LABEL_21;
  }
  v2 = v1;
  if (!-[NSURL isFileURL](v1, "isFileURL"))
  {
    PKLogFacilityTypeGetObject(0);
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      buf.st_dev = 138412290;
      *(_QWORD *)&buf.st_mode = v2;
      _os_log_impl(&dword_18FC92000, v9, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to open non-file URL %@.", (uint8_t *)&buf, 0xCu);
    }
    v8 = 0;
    goto LABEL_20;
  }
  -[NSURL URLByStandardizingPath](v2, "URLByStandardizingPath");
  v3 = (NSURL *)objc_claimAutoreleasedReturnValue();

  disk_new = archive_read_disk_new();
  if (!disk_new)
    goto LABEL_8;
  v5 = disk_new;
  if (archive_read_disk_set_standard_lookup())
  {
    PKLogFacilityTypeGetObject(0);
    v6 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      goto LABEL_16;
    buf.st_dev = 136446210;
    *(_QWORD *)&buf.st_mode = archive_error_string();
    v7 = "PKZipArchiver: archive_read_disk unable to set reader lookup functions - %{public}s.";
    goto LABEL_15;
  }
  if (archive_read_disk_set_symlink_physical())
  {
    PKLogFacilityTypeGetObject(0);
    v6 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      goto LABEL_16;
    buf.st_dev = 136446210;
    *(_QWORD *)&buf.st_mode = archive_error_string();
    v7 = "PKZipArchiver: archive_read_disk unable to set reader symlink mode - %{public}s.";
LABEL_15:
    _os_log_impl(&dword_18FC92000, v6, OS_LOG_TYPE_DEFAULT, v7, (uint8_t *)&buf, 0xCu);
LABEL_16:

    if (archive_read_free())
    {
      PKLogFacilityTypeGetObject(0);
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        buf.st_dev = 134217984;
        *(_QWORD *)&buf.st_mode = v5;
        _os_log_impl(&dword_18FC92000, v9, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to free archive_read_disk (leaking) - %p.", (uint8_t *)&buf, 0xCu);
      }
      v8 = 0;
      v2 = v3;
      goto LABEL_20;
    }
    goto LABEL_8;
  }
  v11 = objc_alloc(MEMORY[0x1E0CB3940]);
  v2 = objc_retainAutorelease(v3);
  v9 = objc_retainAutorelease((id)objc_msgSend(v11, "initWithUTF8String:", -[NSURL fileSystemRepresentation](v2, "fileSystemRepresentation")));
  -[NSObject UTF8String](v9, "UTF8String");
  if (archive_read_disk_open())
  {
    PKLogFacilityTypeGetObject(0);
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      buf.st_dev = 136446210;
      *(_QWORD *)&buf.st_mode = archive_error_string();
      _os_log_impl(&dword_18FC92000, v12, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to open read disk archive - %{public}s.", (uint8_t *)&buf, 0xCu);
    }
    v8 = 0;
    goto LABEL_57;
  }
  PKTemporaryItemURLWithExtension(CFSTR("zip"), 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "URLByStandardizingPath");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  PKTemporaryItemPrepareDirectory();
  v12 = objc_retainAutorelease(v14);
  v15 = open((const char *)-[NSObject fileSystemRepresentation](v12, "fileSystemRepresentation"), 2566, 384);
  if (v15 < 0)
  {
    PKLogFacilityTypeGetObject(0);
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      v26 = __error();
      v27 = strerror(*v26);
      buf.st_dev = 138412546;
      *(_QWORD *)&buf.st_mode = v12;
      WORD2(buf.st_ino) = 2082;
      *(__darwin_ino64_t *)((char *)&buf.st_ino + 6) = (__darwin_ino64_t)v27;
      _os_log_impl(&dword_18FC92000, v25, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to create output file %@ - %{public}s.", (uint8_t *)&buf, 0x16u);
    }

    v8 = 0;
    goto LABEL_53;
  }
  v16 = v15;
  v17 = v9;
  if (!v17)
    goto LABEL_46;
  v18 = NSPageSize();
  v19 = malloc_type_malloc(v18, 0xF6C4C8A0uLL);
  if (!v19)
    goto LABEL_46;
  v20 = v19;
  v21 = archive_write_new();
  if (!v21)
  {
LABEL_45:
    free(v20);
    goto LABEL_46;
  }
  v22 = v21;
  if (archive_write_set_format_zip())
  {
    PKLogFacilityTypeGetObject(0);
    v23 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      goto LABEL_41;
    buf.st_dev = 136446210;
    *(_QWORD *)&buf.st_mode = archive_error_string();
    v24 = "PKZipArchiver: unable to set archive_write supported formats - %{public}s.";
LABEL_39:
    v28 = v23;
    v29 = 12;
    goto LABEL_40;
  }
  if (archive_write_set_format_option())
  {
    PKLogFacilityTypeGetObject(0);
    v23 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      goto LABEL_41;
    buf.st_dev = 136446210;
    *(_QWORD *)&buf.st_mode = archive_error_string();
    v24 = "PKZipArchiver: unable to set archive_write supported compression formats - %{public}s.";
    goto LABEL_39;
  }
  if (archive_write_open_fd())
  {
    PKLogFacilityTypeGetObject(0);
    v23 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
LABEL_41:

      if (archive_write_free())
      {
        PKLogFacilityTypeGetObject(0);
        v30 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
        {
          buf.st_dev = 134217984;
          *(_QWORD *)&buf.st_mode = v22;
          _os_log_impl(&dword_18FC92000, v30, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to free archive_write (leaking) - %p.", (uint8_t *)&buf, 0xCu);
        }

      }
      goto LABEL_45;
    }
    buf.st_dev = 67240450;
    *(_DWORD *)&buf.st_mode = v16;
    LOWORD(buf.st_ino) = 2082;
    *(__darwin_ino64_t *)((char *)&buf.st_ino + 2) = archive_error_string();
    v24 = "PKZipArchiver: archive_write unable to open file descriptor %{public}d - %{public}s.";
    v28 = v23;
    v29 = 18;
LABEL_40:
    _os_log_impl(&dword_18FC92000, v28, OS_LOG_TYPE_DEFAULT, v24, (uint8_t *)&buf, v29);
    goto LABEL_41;
  }
  v83 = v20;
  v92 = v22;
  -[NSObject pathComponents](v17, "pathComponents");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v84 = objc_msgSend(v37, "count");

  while (1)
  {
    *(_QWORD *)v94 = 0;
    next_header = archive_read_next_header();
    if (next_header)
    {
      if (next_header == 1)
      {
        v60 = 1;
        goto LABEL_121;
      }
      PKLogFacilityTypeGetObject(0);
      v61 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
      {
        v62 = archive_error_string();
        buf.st_dev = 136446210;
        *(_QWORD *)&buf.st_mode = v62;
        v63 = "PKZipArchiver: archive_read_next_header failed - %{public}s.";
        goto LABEL_117;
      }
      goto LABEL_119;
    }
    archive_read_disk_descend();
    v85 = archive_entry_filetype();
    context = (void *)MEMORY[0x19400CFE8]();
    v39 = archive_entry_pathname_utf8();
    if (!v39)
      break;
    v40 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", v39);
    objc_msgSend(v40, "pathComponents");
    v90 = (void *)objc_claimAutoreleasedReturnValue();
    v41 = objc_msgSend(v90, "count");
    v89 = v40;
    if (!objc_msgSend(v40, "hasPrefix:", v17) || v41 < v84)
    {
      PKLogFacilityTypeGetObject(0);
      v46 = objc_claimAutoreleasedReturnValue();
      v87 = v46;
      if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
      {
        buf.st_dev = 138412546;
        *(_QWORD *)&buf.st_mode = v89;
        WORD2(buf.st_ino) = 2112;
        *(__darwin_ino64_t *)((char *)&buf.st_ino + 6) = (__darwin_ino64_t)v17;
        _os_log_impl(&dword_18FC92000, v46, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: (implementation error) relative paths cannot be computed for %@ - %@.", (uint8_t *)&buf, 0x16u);
      }
      v86 = 0;
      v45 = 2;
      goto LABEL_83;
    }
    objc_msgSend(v90, "subarrayWithRange:", v84, v41 - v84);
    v42 = objc_claimAutoreleasedReturnValue();
    v87 = v42;
    if (-[NSObject count](v42, "count"))
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "pathWithComponents:", v42);
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v43, "length"))
      {
        if (v43)
        {
          v44 = objc_retainAutorelease(v43);
          -[NSObject fileSystemRepresentation](v44, "fileSystemRepresentation");
          archive_entry_update_pathname_utf8();
          v45 = 0;
LABEL_82:

          v86 = 0;
          goto LABEL_83;
        }
      }
      else
      {

      }
    }
    archive_entry_update_pathname_utf8();
    if (v85 != 0x4000)
    {
      PKLogFacilityTypeGetObject(0);
      v44 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
      {
        buf.st_dev = 138412290;
        *(_QWORD *)&buf.st_mode = v17;
        _os_log_impl(&dword_18FC92000, v44, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: non-directory archive target path %@.", (uint8_t *)&buf, 0xCu);
      }
      v45 = 2;
      goto LABEL_82;
    }
    v45 = 0;
    v86 = 1;
LABEL_83:

    objc_autoreleasePoolPop(context);
    if (v45)
      goto LABEL_120;
    if ((v86 & 1) == 0)
    {
      if (archive_write_header())
      {
        PKLogFacilityTypeGetObject(0);
        v61 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
        {
          v65 = archive_error_string();
          buf.st_dev = 136446210;
          *(_QWORD *)&buf.st_mode = v65;
          v63 = "PKZipArchiver: archive_write_header failed - %{public}s.";
          goto LABEL_117;
        }
        goto LABEL_119;
      }
      v47 = 0;
      if (v85 != 0x4000 && v85 != 40960)
      {
        v48 = (const char *)archive_entry_sourcepath();
        v91 = open(v48, 0x200000);
        if (v91 < 0)
        {
          PKLogFacilityTypeGetObject(0);
          v61 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
          {
            v81 = __error();
            v82 = strerror(*v81);
            buf.st_dev = 67240450;
            *(_DWORD *)&buf.st_mode = v85;
            LOWORD(buf.st_ino) = 2082;
            *(__darwin_ino64_t *)((char *)&buf.st_ino + 2) = (__darwin_ino64_t)v82;
            v63 = "PKZipArchiver: failed to open file for header of type %{public}ud - %{public}s.";
            v67 = v61;
            v68 = 18;
            goto LABEL_118;
          }
LABEL_119:

          goto LABEL_120;
        }
        while (1)
        {
          v49 = read(v91, v83, v18);
          v47 = v49 != 0;
          if (!v49)
            break;
          if (v49 < 0)
          {
            PKLogFacilityTypeGetObject(0);
            v50 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
            {
              v55 = __error();
              v56 = strerror(*v55);
              buf.st_dev = 67240450;
              *(_DWORD *)&buf.st_mode = v91;
              LOWORD(buf.st_ino) = 2082;
              *(__darwin_ino64_t *)((char *)&buf.st_ino + 2) = (__darwin_ino64_t)v56;
              v52 = v50;
              v53 = "PKZipArchiver: unable to read file data from descriptor %{public}d for header - %{public}s.";
              v54 = 18;
LABEL_97:
              _os_log_impl(&dword_18FC92000, v52, OS_LOG_TYPE_DEFAULT, v53, (uint8_t *)&buf, v54);
            }
LABEL_98:

            break;
          }
          if (archive_write_data() < 0)
          {
            PKLogFacilityTypeGetObject(0);
            v50 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
            {
              v51 = archive_error_string();
              buf.st_dev = 136446210;
              *(_QWORD *)&buf.st_mode = v51;
              v52 = v50;
              v53 = "PKZipArchiver: archive_write_data failed - %{public}s.";
              v54 = 12;
              goto LABEL_97;
            }
            goto LABEL_98;
          }
        }
        if (close(v91))
        {
          PKLogFacilityTypeGetObject(0);
          v57 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
          {
            v58 = __error();
            v59 = strerror(*v58);
            buf.st_dev = 67240450;
            *(_DWORD *)&buf.st_mode = v91;
            LOWORD(buf.st_ino) = 2082;
            *(__darwin_ino64_t *)((char *)&buf.st_ino + 2) = (__darwin_ino64_t)v59;
            _os_log_impl(&dword_18FC92000, v57, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to close file descriptor %{public}d for header (leaking) - %{public}s.", (uint8_t *)&buf, 0x12u);
          }

        }
      }
      if (archive_write_finish_entry())
      {
        PKLogFacilityTypeGetObject(0);
        v61 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
        {
          v66 = archive_error_string();
          buf.st_dev = 136446210;
          *(_QWORD *)&buf.st_mode = v66;
          v63 = "PKZipArchiver: archive_write_finish_entry failed - %{public}s.";
LABEL_117:
          v67 = v61;
          v68 = 12;
LABEL_118:
          _os_log_impl(&dword_18FC92000, v67, OS_LOG_TYPE_DEFAULT, v63, (uint8_t *)&buf, v68);
        }
        goto LABEL_119;
      }
      if (v47)
        goto LABEL_120;
    }
  }
  PKLogFacilityTypeGetObject(0);
  v64 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v64, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf.st_dev) = 0;
    _os_log_impl(&dword_18FC92000, v64, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: archive_entry with no path encountered.", (uint8_t *)&buf, 2u);
  }

  objc_autoreleasePoolPop(context);
LABEL_120:
  v60 = 0;
LABEL_121:
  free(v83);
  if (archive_write_close())
  {
    PKLogFacilityTypeGetObject(0);
    v69 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v69, OS_LOG_TYPE_DEFAULT))
    {
      v70 = archive_error_string();
      buf.st_dev = 136446210;
      *(_QWORD *)&buf.st_mode = v70;
      _os_log_impl(&dword_18FC92000, v69, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to close archive_write - %{public}s.", (uint8_t *)&buf, 0xCu);
    }

    v60 = 0;
  }
  if (!archive_write_free())
  {

    if (v60)
      goto LABEL_131;
    goto LABEL_47;
  }
  PKLogFacilityTypeGetObject(0);
  v71 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
  {
    buf.st_dev = 134217984;
    *(_QWORD *)&buf.st_mode = v92;
    _os_log_impl(&dword_18FC92000, v71, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to free archive_write (leaking) - %p.", (uint8_t *)&buf, 0xCu);
  }

  if ((v60 & 1) == 0)
  {
LABEL_47:
    v8 = 0;
    goto LABEL_48;
  }
LABEL_131:
  memset(&buf, 0, sizeof(buf));
  if (fstat(v16, &buf))
  {
    PKLogFacilityTypeGetObject(0);
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      v72 = __error();
      v73 = strerror(*v72);
      *(_DWORD *)v94 = 67240706;
      *(_DWORD *)&v94[4] = v16;
      v95 = 2112;
      v96 = v12;
      v97 = 2082;
      v98 = v73;
      v74 = "PKZipArchiver: unable to fstat %{public}d for %@ - %{public}s.";
      goto LABEL_134;
    }
    goto LABEL_46;
  }
  if (buf.st_size < 1)
    goto LABEL_47;
  v75 = buf.st_size & ~(buf.st_size >> 63);
  v76 = mmap(0, v75, 1, 2, v16, 0);
  if (v76 == (void *)-1)
  {
    PKLogFacilityTypeGetObject(0);
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      v79 = __error();
      v80 = strerror(*v79);
      *(_DWORD *)v94 = 67240706;
      *(_DWORD *)&v94[4] = v16;
      v95 = 2112;
      v96 = v12;
      v97 = 2082;
      v98 = v80;
      v74 = "PKZipArchiver: unable to mmap file descriptor %{public}d for %@ - %{public}s.";
LABEL_134:
      _os_log_impl(&dword_18FC92000, v17, OS_LOG_TYPE_DEFAULT, v74, v94, 0x1Cu);
    }
LABEL_46:

    goto LABEL_47;
  }
  v77 = v76;
  v78 = objc_alloc(MEMORY[0x1E0C99D50]);
  v93[0] = MEMORY[0x1E0C809B0];
  v93[1] = 3221225472;
  v93[2] = ___Z17PKArchiverZipDataP5NSURL_block_invoke;
  v93[3] = &__block_descriptor_48_e12_v24__0_v8Q16l;
  v93[4] = v77;
  v93[5] = v75;
  v8 = (void *)objc_msgSend(v78, "initWithBytesNoCopy:length:deallocator:", v77, v75, v93);
LABEL_48:
  if (close(v16))
  {
    PKLogFacilityTypeGetObject(0);
    v31 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      v32 = __error();
      v33 = strerror(*v32);
      buf.st_dev = 67240706;
      *(_DWORD *)&buf.st_mode = v16;
      LOWORD(buf.st_ino) = 2112;
      *(__darwin_ino64_t *)((char *)&buf.st_ino + 2) = (__darwin_ino64_t)v12;
      HIWORD(buf.st_uid) = 2082;
      *(_QWORD *)&buf.st_gid = v33;
      _os_log_impl(&dword_18FC92000, v31, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to close file descriptor %{public}d for %@ (leaking) - %{public}s.", (uint8_t *)&buf, 0x1Cu);
    }

  }
  unlink((const char *)-[NSObject fileSystemRepresentation](objc_retainAutorelease(v12), "fileSystemRepresentation"));
LABEL_53:
  if (archive_read_close())
  {
    PKLogFacilityTypeGetObject(0);
    v34 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      v35 = archive_error_string();
      buf.st_dev = 136446210;
      *(_QWORD *)&buf.st_mode = v35;
      _os_log_impl(&dword_18FC92000, v34, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to close read disk archive - %{public}s.", (uint8_t *)&buf, 0xCu);
    }

  }
LABEL_57:

  if (archive_read_free())
  {
    PKLogFacilityTypeGetObject(0);
    v36 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
    {
      buf.st_dev = 134217984;
      *(_QWORD *)&buf.st_mode = v5;
      _os_log_impl(&dword_18FC92000, v36, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to free read disk archive (leaking) - %p.", (uint8_t *)&buf, 0xCu);
    }

  }
LABEL_20:

  v3 = v2;
LABEL_21:

  return v8;
}

void ___Z17PKArchiverZipDataP5NSURL_block_invoke(uint64_t a1)
{
  NSObject *v1;
  int *v2;
  char *v3;
  int *v4;
  char *v5;
  int v6;
  char *v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  if (munmap(*(void **)(a1 + 32), *(_QWORD *)(a1 + 40)))
  {
    PKLogFacilityTypeGetObject(0);
    v1 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_FAULT))
    {
      v4 = __error();
      v5 = strerror(*v4);
      v6 = 136446210;
      v7 = v5;
      _os_log_fault_impl(&dword_18FC92000, v1, OS_LOG_TYPE_FAULT, "Failed to unmap file - %{public}s! Leaking mapping...", (uint8_t *)&v6, 0xCu);
    }

    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      v2 = __error();
      v3 = strerror(*v2);
      v6 = 136446210;
      v7 = v3;
      _os_log_impl(&dword_18FC92000, v1, OS_LOG_TYPE_DEFAULT, "Failed to unmap file - %{public}s! Leaking mapping...", (uint8_t *)&v6, 0xCu);
    }

  }
}

uint64_t PKUnarchiverZip(NSURL *a1, NSURL *a2)
{
  NSURL *v3;
  NSURL *v4;
  NSURL *v5;
  uint64_t v6;
  NSURL *v7;
  int v8;
  int v9;
  NSObject *v10;
  int *v11;
  char *v12;
  const char *v13;
  NSObject *v14;
  uint32_t v15;
  int *v16;
  char *v17;
  int v19;
  _BYTE v20[24];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  v6 = 0;
  if (!v3 || !v4)
    goto LABEL_15;
  if (!-[NSURL isFileURL](v3, "isFileURL"))
  {
    PKLogFacilityTypeGetObject(0);
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v19 = 138412290;
      *(_QWORD *)v20 = v3;
      v13 = "PKZipArchiver: unable to open non-file URL %@.";
      v14 = v10;
      v15 = 12;
LABEL_12:
      _os_log_impl(&dword_18FC92000, v14, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&v19, v15);
    }
LABEL_13:
    v6 = 0;
LABEL_14:

    goto LABEL_15;
  }
  v7 = objc_retainAutorelease(v3);
  v8 = open(-[NSURL fileSystemRepresentation](v7, "fileSystemRepresentation"), 4);
  if (v8 < 0)
  {
    PKLogFacilityTypeGetObject(0);
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v16 = __error();
      v17 = strerror(*v16);
      v19 = 138412546;
      *(_QWORD *)v20 = v7;
      *(_WORD *)&v20[8] = 2082;
      *(_QWORD *)&v20[10] = v17;
      v13 = "PKZipArchiver: unable to open file %@ - %{public}s.";
      v14 = v10;
      v15 = 22;
      goto LABEL_12;
    }
    goto LABEL_13;
  }
  v9 = v8;
  v6 = PKUnarchiverZip(v8, v5, 0x600000uLL);
  if (close(v9))
  {
    PKLogFacilityTypeGetObject(0);
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = __error();
      v12 = strerror(*v11);
      v19 = 67240706;
      *(_DWORD *)v20 = v9;
      *(_WORD *)&v20[4] = 2112;
      *(_QWORD *)&v20[6] = v7;
      *(_WORD *)&v20[14] = 2082;
      *(_QWORD *)&v20[16] = v12;
      _os_log_impl(&dword_18FC92000, v10, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to close file descriptor %{public}d for %@ (leaking) - %{public}s.", (uint8_t *)&v19, 0x1Cu);
    }
    goto LABEL_14;
  }
LABEL_15:

  return v6;
}

uint64_t PKUnarchiverZip(int a1, NSURL *a2)
{
  return PKUnarchiverZip(a1, a2, 0x600000uLL);
}

uint64_t PKUnarchiverZip(NSData *a1, NSURL *a2)
{
  NSData *v3;
  NSURL *v4;
  NSData *v5;
  const void *v6;
  unint64_t v7;
  uint64_t v8;

  if (!a1 || !a2)
    return 0;
  v3 = objc_retainAutorelease(a1);
  v4 = a2;
  v5 = v3;
  v6 = -[NSData bytes](v5, "bytes");
  v7 = -[NSData length](v5, "length");

  v8 = PKUnarchiverZip(v6, v7, v4, 0x600000uLL);
  return v8;
}

uint64_t PKUnarchiverZip(const void *a1, unint64_t a2, NSURL *a3)
{
  return PKUnarchiverZip(a1, a2, a3, 0x600000uLL);
}

uint64_t PKUnarchiverZip(int a1, NSURL *a2, unint64_t a3)
{
  NSURL *v5;
  NSURL *v6;
  uint64_t v7;
  uint64_t Archive;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = v5;
  v7 = 0;
  if (a1 < 0 || !v5)
    goto LABEL_14;
  Archive = PKCreateReadArchive();
  if (!Archive)
  {
    v7 = 0;
    goto LABEL_14;
  }
  v9 = Archive;
  NSPageSize();
  if (archive_read_open_fd())
  {
    PKLogFacilityTypeGetObject(0);
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v13 = 136446210;
      v14 = archive_error_string();
      _os_log_impl(&dword_18FC92000, v10, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to open archive_read - %{public}s.", (uint8_t *)&v13, 0xCu);
    }
    v7 = 0;
LABEL_8:

    goto LABEL_9;
  }
  v7 = PKZipUnarchive(v9, v6, a3);
  if (archive_read_close())
  {
    PKLogFacilityTypeGetObject(0);
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v13 = 136446210;
      v14 = archive_error_string();
      _os_log_impl(&dword_18FC92000, v10, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to close archive_read - %{public}s.", (uint8_t *)&v13, 0xCu);
    }
    goto LABEL_8;
  }
LABEL_9:
  if (archive_read_free())
  {
    PKLogFacilityTypeGetObject(0);
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v13 = 134217984;
      v14 = v9;
      _os_log_impl(&dword_18FC92000, v11, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to free archive_read (leaking) - %p.", (uint8_t *)&v13, 0xCu);
    }

  }
LABEL_14:

  return v7;
}

uint64_t PKCreateReadArchive()
{
  uint64_t v0;
  NSObject *v1;
  NSObject *v2;
  int support_filter_all;
  NSObject *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v0 = archive_read_new();
  if (v0)
  {
    if (archive_read_support_format_zip())
    {
      PKLogFacilityTypeGetObject(0);
      v1 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
      {
        v6 = 136446210;
        v7 = archive_error_string();
        _os_log_impl(&dword_18FC92000, v1, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: archive_read unable to set supported formats - %{public}s.", (uint8_t *)&v6, 0xCu);
      }

    }
    else
    {
      support_filter_all = archive_read_support_filter_all();
      if (support_filter_all == -20 || !support_filter_all)
        return v0;
      PKLogFacilityTypeGetObject(0);
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        v6 = 136446210;
        v7 = archive_error_string();
        _os_log_impl(&dword_18FC92000, v5, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: archive_read unable to set supported compression formats - %{public}s.", (uint8_t *)&v6, 0xCu);
      }

    }
    if (archive_read_free())
    {
      PKLogFacilityTypeGetObject(0);
      v2 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
      {
        v6 = 134217984;
        v7 = v0;
        _os_log_impl(&dword_18FC92000, v2, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to free archive_read (leaking) - %p.", (uint8_t *)&v6, 0xCu);
      }

    }
    return 0;
  }
  return v0;
}

uint64_t PKZipUnarchive(uint64_t a1, void *a2, unint64_t a3)
{
  id v4;
  void *v5;
  void *v6;
  char v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  const char *v15;
  const char *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  void *v21;
  __int128 v22;
  char *v23;
  char *v24;
  uint64_t v25;
  NSObject *v26;
  int *v27;
  char *v28;
  int next_header;
  int v30;
  void *v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  int v35;
  unint64_t v36;
  NSObject *v37;
  size_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  int data_block;
  NSObject *v45;
  NSObject *v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  const char *v50;
  NSObject *v51;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  NSObject *v56;
  uint64_t v57;
  NSObject *v58;
  uint64_t v59;
  NSObject *v60;
  __int128 v61;
  id v62[4];
  uint8_t buf[4];
  unint64_t v64;
  __int16 v65;
  size_t v66;
  uint64_t v67;
  _QWORD v68[2];

  v68[1] = *MEMORY[0x1E0C80C00];
  v4 = a2;
  if ((objc_msgSend(v4, "isFileURL") & 1) == 0)
  {
    PKLogFacilityTypeGetObject(0);
    v8 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
LABEL_23:
      v19 = 0;
      goto LABEL_24;
    }
    *(_DWORD *)buf = 138412290;
    v64 = (unint64_t)v4;
    v16 = "PKZipArchiver: unable to write to non-file URL %@.";
LABEL_11:
    _os_log_impl(&dword_18FC92000, v8, OS_LOG_TYPE_DEFAULT, v16, buf, 0xCu);
    goto LABEL_23;
  }
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v67 = *MEMORY[0x1E0CB2AA8];
  v68[0] = &unk_1E2C3E950;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v68, &v67, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v62[0] = 0;
  v7 = objc_msgSend(v5, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v4, 0, v6, v62);
  v8 = v62[0];

  if ((v7 & 1) != 0)
    goto LABEL_5;
  -[NSObject domain](v8, "domain");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v9, "isEqualToString:", *MEMORY[0x1E0CB28A8]))
  {

    goto LABEL_13;
  }
  v10 = -[NSObject code](v8, "code");

  if (v10 != 516)
  {
LABEL_13:
    PKLogFacilityTypeGetObject(0);
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v64 = (unint64_t)v4;
      v65 = 2112;
      v66 = (size_t)v8;
      _os_log_impl(&dword_18FC92000, v17, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: failed to create directory at %@ - %@.", buf, 0x16u);
    }

    goto LABEL_23;
  }
LABEL_5:

  v11 = archive_write_disk_new();
  if (!v11)
    goto LABEL_26;
  v12 = v11;
  if (archive_write_disk_set_standard_lookup())
  {
    PKLogFacilityTypeGetObject(0);
    v13 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      goto LABEL_20;
    v14 = archive_error_string();
    *(_DWORD *)buf = 136446210;
    v64 = v14;
    v15 = "PKZipArchiver: archive_write_disk unable to set lookup functions - %{public}s.";
    goto LABEL_19;
  }
  if (archive_write_disk_set_options())
  {
    PKLogFacilityTypeGetObject(0);
    v13 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      goto LABEL_20;
    v18 = archive_error_string();
    *(_DWORD *)buf = 136446210;
    v64 = v18;
    v15 = "PKZipArchiver: archive_write_disk unable to set options - %{public}s.";
LABEL_19:
    _os_log_impl(&dword_18FC92000, v13, OS_LOG_TYPE_DEFAULT, v15, buf, 0xCu);
LABEL_20:

    if (archive_write_free())
    {
      PKLogFacilityTypeGetObject(0);
      v8 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        goto LABEL_23;
      *(_DWORD *)buf = 134217984;
      v64 = v12;
      v16 = "PKZipArchiver: unable to free archive_write_disk (leaking) - %p.";
      goto LABEL_11;
    }
LABEL_26:
    v19 = 0;
    goto LABEL_25;
  }
  objc_msgSend(v4, "path");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  if (v21)
  {
    v8 = objc_retainAutorelease(v21);
    v23 = realpath_DARWIN_EXTSN((const char *)-[NSObject fileSystemRepresentation](v8, "fileSystemRepresentation"), 0);
    if (v23)
    {
      v24 = v23;
      v25 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", v23);

      free(v24);
      v8 = v25;
    }
    else
    {
      PKLogFacilityTypeGetObject(0);
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        v27 = __error();
        v28 = strerror(*v27);
        *(_DWORD *)buf = 138412546;
        v64 = (unint64_t)v8;
        v65 = 2080;
        v66 = (size_t)v28;
        _os_log_impl(&dword_18FC92000, v26, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to resolve physical path for destination path %@ - %s.", buf, 0x16u);
      }

    }
  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)&v22 = 134218240;
  v61 = v22;
  do
  {
    do
    {
      next_header = archive_read_next_header();
      if (next_header)
      {
        if (next_header == 1)
        {
          v19 = 1;
          goto LABEL_85;
        }
        PKLogFacilityTypeGetObject(0);
        v51 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
        {
          v54 = archive_error_string();
          *(_DWORD *)buf = 136446210;
          v64 = v54;
          v50 = "PKZipArchiver: archive_read_next_header failed - %{public}s.";
LABEL_69:
          _os_log_impl(&dword_18FC92000, v51, OS_LOG_TYPE_DEFAULT, v50, buf, 0xCu);
        }
        goto LABEL_70;
      }
      v30 = archive_entry_filetype();
      v31 = (void *)MEMORY[0x19400CFE8]();
      v32 = archive_entry_pathname_utf8();
      if (!v32)
      {
        PKLogFacilityTypeGetObject(0);
        v55 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_18FC92000, v55, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: archive_entry with no path encountered.", buf, 2u);
        }

LABEL_77:
        objc_autoreleasePoolPop(v31);
        goto LABEL_84;
      }
      v33 = (const char *)v32;
      v34 = 0;
      do
        v35 = *(unsigned __int8 *)(v32 + v34++);
      while (v35 == 47);
      v36 = v34 - 1;
      if (v34 != 1)
      {
        PKLogFacilityTypeGetObject(0);
        v37 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
        {
          v38 = strlen(v33);
          *(_DWORD *)buf = v61;
          v64 = v36;
          v65 = 2048;
          v66 = v38;
          _os_log_impl(&dword_18FC92000, v37, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: archive_entry with absolute path encountered...ignoring leading %zu of %zu bytes.", buf, 0x16u);
        }

      }
      v39 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", &v33[v36]);
      v40 = objc_msgSend(v39, "length");
      if (!v40 && v30 != 0x4000)
      {
        PKLogFacilityTypeGetObject(0);
        v56 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_18FC92000, v56, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: archive_entry with no path after sanitization encountered.", buf, 2u);
        }

        goto LABEL_77;
      }
      -[NSObject stringByAppendingPathComponent:](v8, "stringByAppendingPathComponent:", v39, v61);
      v41 = (void *)objc_claimAutoreleasedReturnValue();

      v42 = objc_retainAutorelease(v41);
      objc_msgSend(v42, "fileSystemRepresentation");
      archive_entry_update_pathname_utf8();

      objc_autoreleasePoolPop(v31);
      archive_entry_perm();
      archive_entry_set_perm();
    }
    while (!v40);
    if (archive_write_header())
    {
      PKLogFacilityTypeGetObject(0);
      v46 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
        goto LABEL_83;
      v57 = archive_error_string();
      *(_DWORD *)buf = 136446210;
      v64 = v57;
      v48 = "PKZipArchiver: archive_write_header failed - %{public}s.";
      goto LABEL_82;
    }
    v43 = archive_entry_size();
    if (archive_entry_size_is_set())
    {
      if (v43 >= 1)
      {
        if (!a3 || v43 <= a3)
        {
          do
          {
            memset(&v62[1], 0, 24);
            data_block = archive_read_data_block();
            if (data_block)
            {
              if (data_block == 1)
                goto LABEL_58;
              PKLogFacilityTypeGetObject(0);
              v51 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
              {
                v49 = archive_error_string();
                *(_DWORD *)buf = 136446210;
                v64 = v49;
                v50 = "PKZipArchiver: archive_read_data_block failed - %{public}s.";
                goto LABEL_69;
              }
              goto LABEL_70;
            }
          }
          while ((archive_write_data_block() & 0x8000000000000000) == 0);
          PKLogFacilityTypeGetObject(0);
          v51 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
          {
            v53 = archive_error_string();
            *(_DWORD *)buf = 136446210;
            v64 = v53;
            v50 = "PKZipArchiver: archive_write_data_block failed - %{public}s.";
            goto LABEL_69;
          }
LABEL_70:

          goto LABEL_84;
        }
        PKLogFacilityTypeGetObject(0);
        v46 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
          goto LABEL_83;
        *(_DWORD *)buf = 134349056;
        v64 = a3;
        v48 = "PKZipArchiver: archive_entry greater than allowed size of %{public}zu.";
LABEL_82:
        _os_log_impl(&dword_18FC92000, v46, OS_LOG_TYPE_DEFAULT, v48, buf, 0xCu);
        goto LABEL_83;
      }
    }
    else
    {
      PKLogFacilityTypeGetObject(0);
      v45 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18FC92000, v45, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: not writing archive_entry with unknown size", buf, 2u);
      }

    }
LABEL_58:
    ;
  }
  while (!archive_write_finish_entry());
  PKLogFacilityTypeGetObject(0);
  v46 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
  {
    v47 = archive_error_string();
    *(_DWORD *)buf = 136446210;
    v64 = v47;
    v48 = "PKZipArchiver: archive_write_finish_entry failed - %{public}s.";
    goto LABEL_82;
  }
LABEL_83:

LABEL_84:
  v19 = 0;
LABEL_85:
  if (archive_write_close())
  {
    PKLogFacilityTypeGetObject(0);
    v58 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
    {
      v59 = archive_error_string();
      *(_DWORD *)buf = 136446210;
      v64 = v59;
      _os_log_impl(&dword_18FC92000, v58, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to close archive_write_disk - %{public}s.", buf, 0xCu);
    }

    v19 = 0;
  }
  if (archive_write_free())
  {
    PKLogFacilityTypeGetObject(0);
    v60 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v64 = v12;
      _os_log_impl(&dword_18FC92000, v60, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to free archive_write_disk (leaking) - %p.", buf, 0xCu);
    }

  }
LABEL_24:

LABEL_25:
  return v19;
}

uint64_t PKUnarchiverZip(const void *a1, unint64_t a2, NSURL *a3, unint64_t a4)
{
  NSURL *v6;
  NSURL *v7;
  uint64_t v8;
  uint64_t Archive;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = v6;
  v8 = 0;
  if (!a1 || !v6)
    goto LABEL_14;
  Archive = PKCreateReadArchive();
  if (!Archive)
  {
    v8 = 0;
    goto LABEL_14;
  }
  v10 = Archive;
  if (archive_read_open_memory())
  {
    PKLogFacilityTypeGetObject(0);
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v14 = 136446210;
      v15 = archive_error_string();
      _os_log_impl(&dword_18FC92000, v11, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to open archive_read - %{public}s.", (uint8_t *)&v14, 0xCu);
    }
    v8 = 0;
LABEL_8:

    goto LABEL_9;
  }
  v8 = PKZipUnarchive(v10, v7, a4);
  if (archive_read_close())
  {
    PKLogFacilityTypeGetObject(0);
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v14 = 136446210;
      v15 = archive_error_string();
      _os_log_impl(&dword_18FC92000, v11, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to close archive_read - %{public}s.", (uint8_t *)&v14, 0xCu);
    }
    goto LABEL_8;
  }
LABEL_9:
  if (archive_read_free())
  {
    PKLogFacilityTypeGetObject(0);
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v14 = 134217984;
      v15 = v10;
      _os_log_impl(&dword_18FC92000, v12, OS_LOG_TYPE_DEFAULT, "PKZipArchiver: unable to free archive_read (leaking) - %p.", (uint8_t *)&v14, 0xCu);
    }

  }
LABEL_14:

  return v8;
}

const __CFString *PKPayLaterFinancingEligibilityToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 8)
    return CFSTR("unknown");
  else
    return off_1E2AC17E8[a1 - 1];
}

void sub_18FEF68B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEF6AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEF6CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEF6E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEF72B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEF73CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FEF79FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id PKDataTypeIdentifier(void *a1)
{
  id v2;

  v2 = 0;
  objc_msgSend(a1, "getResourceValue:forKey:error:", &v2, *MEMORY[0x1E0C99AD0], 0);
  return v2;
}

id PKValidationErrorWithReason(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_class *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v17;
  _QWORD v18[2];

  v18[1] = *MEMORY[0x1E0C80C00];
  if (a1)
  {
    v17 = *MEMORY[0x1E0CB2D50];
    v9 = (objc_class *)MEMORY[0x1E0CB3940];
    v10 = a1;
    v11 = (void *)objc_msgSend([v9 alloc], "initWithFormat:arguments:", v10, &a9);

    v18[0] = v11;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v18, &v17, 1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("PKPassKitErrorDomain"), 1, v12, &a9, v17);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  PKLocalizedString(CFSTR("PASS_VALIDATION_ERROR"), 0);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  _PKErrorWithDescriptionAndUnderlyingError(v14, v13);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

id _PKErrorWithDescriptionAndUnderlyingError(void *a1, void *a2)
{
  objc_class *v3;
  id v4;
  id v5;
  id v6;
  void *v7;

  v3 = (objc_class *)MEMORY[0x1E0C99E08];
  v4 = a2;
  v5 = a1;
  v6 = objc_alloc_init(v3);
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v5, *MEMORY[0x1E0CB2D50]);

  objc_msgSend(v6, "setObject:forKeyedSubscript:", v4, *MEMORY[0x1E0CB3388]);
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("PKPassKitErrorDomain"), 1, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

id PKTransactionReceiptDictionaryURLWithTransactionReceiptURL(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  objc_msgSend(CFSTR("receipt"), "stringByAppendingPathExtension:", CFSTR("json"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "URLByAppendingPathComponent:isDirectory:", v2, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

uint64_t PKInteger64Hash(uint64_t a1, uint64_t a2)
{
  return a2 - a1 + 32 * a1;
}

uint64_t PKIntegerHash(uint64_t a1, uint64_t a2)
{
  return a2 - a1 + 32 * a1;
}

unint64_t PKDoubleHash(uint64_t a1, double a2)
{
  return (unint64_t)a2 - a1 + 32 * a1;
}

uint64_t PKPassbookIsSupported()
{
  return MGGetBoolAnswer();
}

uint64_t PKPassbookIsSupported(char a1)
{
  return a1 & 1;
}

BOOL PKPassbookIsCurrentlyAvailable()
{
  return PKCurrentPassbookState() == 1;
}

BOOL PKPassbookIsCurrentlyAvailable(char a1)
{
  return (a1 & 3) == 1;
}

uint64_t PKPassbookIsCurrentlyDeletedByUser()
{
  return PKCurrentPassbookState() >> 1;
}

uint64_t PKPassbookIsCurrentlyDeletedByUser(unsigned int a1)
{
  return (a1 >> 1) & 1;
}

uint64_t PKIsInternalInstall()
{
  return os_variant_has_internal_ui();
}

uint64_t PKDeviceHasSolidStateHomeButton()
{
  return MGGetBoolAnswer();
}

uint64_t PKDeviceHasClamshellPresent()
{
  return 0;
}

uint64_t PKUseWLAN()
{
  return MGGetBoolAnswer();
}

uint64_t PKNetworkConnectivityAvailable()
{
  SCNetworkReachabilityFlags flags;

  flags = 0;
  if (qword_1ECF21CB0 != -1)
    dispatch_once(&qword_1ECF21CB0, &__block_literal_global_72);
  if (SCNetworkReachabilityGetFlags((SCNetworkReachabilityRef)qword_1ECF21CB8, &flags))
    return (flags >> 1) & 1;
  else
    return 0;
}

void PKNetworkConnectivityAvailableCallback()
{
  id v0;

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "postNotificationName:object:", CFSTR("PKNetworkConnectivityChangedNotification"), 0);

}

BOOL PKUseTallPasses()
{
  return PKScreenSize() > 320.0;
}

uint64_t PKIsPad()
{
  if (qword_1ECF21D10 != -1)
    dispatch_once(&qword_1ECF21D10, &__block_literal_global_224);
  return byte_1ECF21C7B;
}

uint64_t PKRearCameraIsAllowed()
{
  uint64_t result;

  result = MGGetBoolAnswer();
  if ((_DWORD)result)
    return PKCameraAccessAllowed();
  return result;
}

uint64_t PKRearCameraIsAvailable()
{
  return MGGetBoolAnswer();
}

BOOL PKCameraAccessAllowed()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x1E0D47230], "sharedConnection");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "effectiveBoolValueForSetting:", *MEMORY[0x1E0D46F88]) != 2;

  return v1;
}

uint64_t PKKillProcess(void *a1)
{
  id v1;
  id v2;
  char *v3;
  pid_t v5;
  posix_spawnattr_t v6;
  char *__argv[5];

  __argv[4] = *(char **)MEMORY[0x1E0C80C00];
  v6 = 0;
  v1 = a1;
  posix_spawnattr_init(&v6);
  posix_spawnattr_setflags(&v6, 0);
  __argv[0] = "/usr/bin/killall";
  __argv[1] = "-9";
  v2 = objc_retainAutorelease(v1);
  v3 = (char *)objc_msgSend(v2, "UTF8String");

  __argv[2] = v3;
  __argv[3] = 0;
  v5 = 0;
  printf("    Killing %s\n", "-9");
  posix_spawn(&v5, "/usr/bin/killall", 0, &v6, __argv, 0);
  posix_spawnattr_destroy(&v6);
  return waitpid(v5, 0, 0);
}

uint64_t PKLTRString(uint64_t a1)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("\u202A%@\u202C"), a1);
}

id PKLocalizedStringForCountryCode(void *a1, void *a2)
{
  id v3;
  void *v4;

  v3 = a2;
  objc_msgSend(a1, "localizedStringForCountryCode:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v4)
  {
    if (qword_1ECF21CC8 != -1)
      dispatch_once(&qword_1ECF21CC8, &__block_literal_global_82);
    objc_msgSend((id)qword_1ECF21CC0, "localizedStringForCountryCode:", v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v4;
}

uint64_t PKNumberingSystemForLocale(void *a1)
{
  __CFString *v1;
  __CFString *v2;
  char v4;
  uint64_t v5;
  __CFString *v7;
  __CFString *v8;
  char v9;
  __CFString *v10;
  __CFString *v11;
  int v12;

  objc_msgSend(a1, "numberingSystem");
  v1 = (__CFString *)(id)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (v1 != CFSTR("latn") && v1 != 0)
  {
    v4 = -[__CFString isEqualToString:](v1, "isEqualToString:", CFSTR("latn"));

    if ((v4 & 1) == 0)
    {
      v7 = v2;
      if (v7 == CFSTR("arab")
        || (v8 = v7,
            v9 = -[__CFString isEqualToString:](v7, "isEqualToString:", CFSTR("arab")),
            v8,
            (v9 & 1) != 0))
      {
        v5 = 1;
        goto LABEL_7;
      }
      v10 = v8;
      if (v10 == CFSTR("deva")
        || (v11 = v10,
            v12 = -[__CFString isEqualToString:](v10, "isEqualToString:", CFSTR("deva")),
            v11,
            v12))
      {
        v5 = 2;
        goto LABEL_7;
      }
    }
  }
  v5 = 0;
LABEL_7:

  return v5;
}

SecCertificateRef PKCreateQARootCACertificate()
{
  const __CFAllocator *v0;
  const __CFData *v1;
  SecCertificateRef v2;

  v0 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytes:length:", &TestAppleRootCAECC, 555);
  v1 = (const __CFData *)objc_claimAutoreleasedReturnValue();
  v2 = SecCertificateCreateWithData(v0, v1);

  return v2;
}

void PKCreateTrustAndValidateAsync(void *a1, const void *a2, const void *a3, void *a4)
{
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  const __CFAllocator *v14;
  uint64_t i;
  SecCertificateRef v16;
  NSObject *v17;
  const void *v18;
  const void *v19;
  id v20;
  NSObject *v21;
  NSObject *v22;
  void *v23;
  OSStatus v24;
  NSObject *v25;
  CFTypeRef policies;
  CFTypeRef cf;
  void *v28;
  _QWORD block[4];
  id v30;
  uint8_t *v31;
  uint8_t v32[16];
  uint8_t buf[8];
  uint8_t *v34;
  uint64_t v35;
  SecTrustRef v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a4;
  v9 = objc_msgSend(v7, "count");
  v28 = v7;
  if (a2 && v9)
  {
    policies = a2;
    CFRetain(a2);
    if (a3)
      CFRetain(a3);
    cf = a3;
    v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v7, "count"));
    v37 = 0u;
    v38 = 0u;
    v39 = 0u;
    v40 = 0u;
    v11 = v7;
    v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
    if (v12)
    {
      v13 = *(_QWORD *)v38;
      v14 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
      do
      {
        for (i = 0; i != v12; ++i)
        {
          if (*(_QWORD *)v38 != v13)
            objc_enumerationMutation(v11);
          v16 = SecCertificateCreateWithData(v14, *(CFDataRef *)(*((_QWORD *)&v37 + 1) + 8 * i));
          if (v16)
          {
            objc_msgSend(v10, "addObject:", v16);
            CFRelease(v16);
          }
          else
          {
            PKLogFacilityTypeGetObject(6uLL);
            v17 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_18FC92000, v17, OS_LOG_TYPE_DEFAULT, "Unable to decode cert.", buf, 2u);
            }

          }
        }
        v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
      }
      while (v12);
    }

    if (!objc_msgSend(v10, "count"))
    {
      v18 = policies;
      if (v8)
      {
        (*((void (**)(id, _QWORD, _QWORD))v8 + 2))(v8, 0, 0);
        v18 = policies;
      }
      goto LABEL_45;
    }
    *(_QWORD *)buf = 0;
    v34 = buf;
    v35 = 0x2020000000;
    v36 = 0;
    v18 = policies;
    if (SecTrustCreateWithCertificates(v10, policies, &v36))
      goto LABEL_19;
    if (cf || PKBypassCertValidation())
    {
      v20 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      if (cf)
      {
        PKLogFacilityTypeGetObject(6uLL);
        v21 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v32 = 0;
          _os_log_impl(&dword_18FC92000, v21, OS_LOG_TYPE_DEFAULT, "Adding QA anchor certificate...", v32, 2u);
        }

        objc_msgSend(v20, "addObjectsFromArray:", cf);
      }
      if (PKBypassCertValidation())
      {
        PKLogFacilityTypeGetObject(6uLL);
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v32 = 0;
          _os_log_impl(&dword_18FC92000, v22, OS_LOG_TYPE_DEFAULT, "Certificate validation disabled. Implicitly trusting leaf…", v32, 2u);
        }

        objc_msgSend(v10, "firstObject");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "addObject:", v23);

      }
      if (objc_msgSend(v20, "count"))
      {
        v24 = SecTrustSetAnchorCertificates(*((SecTrustRef *)v34 + 3), (CFArrayRef)v20);

        v18 = policies;
        if (v24)
        {
LABEL_19:
          if (v8)
            (*((void (**)(id, _QWORD, _QWORD))v8 + 2))(v8, 0, 0);
          v19 = (const void *)*((_QWORD *)v34 + 3);
          if (v19)
          {
            CFRelease(v19);
            *((_QWORD *)v34 + 3) = 0;
          }
LABEL_44:
          _Block_object_dispose(buf, 8);
LABEL_45:
          CFRelease(v18);
          if (cf)
            CFRelease(cf);

          goto LABEL_48;
        }
      }
      else
      {

      }
    }
    if (qword_1ECF21CD8 != -1)
      dispatch_once(&qword_1ECF21CD8, &__block_literal_global_92);
    v25 = qword_1ECF21CD0;
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __PKCreateTrustAndValidateAsync_block_invoke_2;
    block[3] = &unk_1E2AC1AF0;
    v31 = buf;
    v30 = v8;
    dispatch_async(v25, block);

    v18 = policies;
    goto LABEL_44;
  }
  if (v8)
    (*((void (**)(id, _QWORD, _QWORD))v8 + 2))(v8, 0, 0);
LABEL_48:

}

void sub_18FEF8DCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const void *PKSecTrustGetCertificateAtIndex(__SecTrust *a1, CFIndex a2)
{
  const __CFArray *v3;
  CFIndex Count;
  const void *ValueAtIndex;

  v3 = SecTrustCopyCertificateChain(a1);
  Count = CFArrayGetCount(v3);
  ValueAtIndex = 0;
  if ((a2 & 0x8000000000000000) == 0 && Count > a2)
    ValueAtIndex = CFArrayGetValueAtIndex(v3, a2);
  CFRelease(v3);
  return ValueAtIndex;
}

uint64_t PKPaymentCreateAndValidateTrustWithCerts(void *a1, SecTrustRef *a2, int a3)
{
  id v5;
  int v6;
  NSObject *v7;
  uint64_t v8;
  id v9;
  int v10;
  NSObject *v11;
  _BOOL4 v12;
  uint64_t BasicX509;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const __CFAllocator *v18;
  uint64_t i;
  SecCertificateRef v20;
  SecCertificateRef v21;
  const void *v22;
  OSStatus v23;
  SecTrustRef *v24;
  OSStatus v25;
  void *v26;
  SecCertificateRef v27;
  void *v28;
  const void *v29;
  CFStringRef v30;
  int v32;
  CFTypeRef policies;
  SecTrustRef *v34;
  id v35;
  CFErrorRef error;
  SecTrustResultType result;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  SecTrustRef trust;
  uint8_t buf[4];
  const void *v44;
  __int16 v45;
  CFStringRef v46;
  _BYTE v47[128];
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = PKBypassCertValidation();
  if (a2 || !v6)
  {
    trust = 0;
    v9 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v10 = PKBypassCertValidation();
    PKLogFacilityTypeGetObject(6uLL);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    v34 = a2;
    v32 = a3;
    if (v10)
    {
      if (v12)
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18FC92000, v11, OS_LOG_TYPE_DEFAULT, "Evaluating using bypass trust policy.", buf, 2u);
      }

      BasicX509 = (uint64_t)SecPolicyCreateBasicX509();
    }
    else if (a3)
    {
      if (v12)
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18FC92000, v11, OS_LOG_TYPE_DEFAULT, "Evaluating using TEST trust policy.", buf, 2u);
      }

      BasicX509 = SecPolicyCreateTestAppleSMPEncryption();
    }
    else
    {
      if (v12)
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18FC92000, v11, OS_LOG_TYPE_DEFAULT, "Evaluating using PROD trust policy.", buf, 2u);
      }

      BasicX509 = SecPolicyCreateAppleSMPEncryption();
    }
    policies = (CFTypeRef)BasicX509;
    v40 = 0u;
    v41 = 0u;
    v38 = 0u;
    v39 = 0u;
    v35 = v5;
    v14 = v5;
    v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v38, v47, 16);
    if (v15)
    {
      v16 = v15;
      v17 = *(_QWORD *)v39;
      v18 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
      do
      {
        for (i = 0; i != v16; ++i)
        {
          if (*(_QWORD *)v39 != v17)
            objc_enumerationMutation(v14);
          v20 = SecCertificateCreateWithData(v18, *(CFDataRef *)(*((_QWORD *)&v38 + 1) + 8 * i));
          if (v20)
          {
            v21 = v20;
            objc_msgSend(v9, "addObject:", v20);
            CFRelease(v21);
          }
          else
          {
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_18FC92000, v11, OS_LOG_TYPE_DEFAULT, "Unable to decode cert.", buf, 2u);
            }

          }
        }
        v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v38, v47, 16);
      }
      while (v16);
    }

    if (objc_msgSend(v9, "count"))
    {
      v22 = policies;
      v23 = SecTrustCreateWithCertificates(v9, policies, &trust);
      v24 = v34;
      if (v23)
      {
        v25 = v23;
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 134217984;
          v44 = (const void *)v25;
          _os_log_impl(&dword_18FC92000, v11, OS_LOG_TYPE_DEFAULT, "Error creating trust: %ld", buf, 0xCu);
        }

        v8 = 0;
      }
      else
      {
        if ((PKBypassCertValidation() & 1) != 0 || v32)
        {
          v26 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", 2);
          if (v32)
          {
            v27 = PKCreateQARootCACertificate();
            objc_msgSend(v26, "addObject:", v27);
            if (v27)
              CFRelease(v27);
          }
          if (PKBypassCertValidation())
          {
            objc_msgSend(v9, "firstObject");
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v26, "addObject:", v28);

          }
          if (objc_msgSend(v26, "count"))
            SecTrustSetAnchorCertificates(trust, (CFArrayRef)v26);

        }
        result = kSecTrustResultInvalid;
        error = 0;
        if (SecTrustEvaluateWithError(trust, &error)
          && !SecTrustGetTrustResult(trust, &result)
          && (result == kSecTrustResultUnspecified || result == kSecTrustResultProceed))
        {
          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_18FC92000, v11, OS_LOG_TYPE_DEFAULT, "Trust validated.", buf, 2u);
          }

          v8 = 1;
        }
        else
        {
          v29 = (const void *)SecTrustCopyFailureDescription();
          if (error)
            v30 = CFErrorCopyDescription(error);
          else
            v30 = 0;
          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412546;
            v44 = v29;
            v45 = 2112;
            v46 = v30;
            _os_log_impl(&dword_18FC92000, v11, OS_LOG_TYPE_DEFAULT, "Error evaluating trust: %@ - %@.", buf, 0x16u);
          }

          if (v29)
            CFRelease(v29);
          if (v30)
            CFRelease(v30);
          v8 = 0;
        }
        if (error)
          CFRelease(error);
      }
    }
    else
    {
      v8 = 0;
      v22 = policies;
      v24 = v34;
    }
    if (v22)
      CFRelease(v22);
    v5 = v35;
    if (v24)
    {
      *v24 = trust;
    }
    else if (trust)
    {
      CFRelease(trust);
    }

  }
  else
  {
    PKLogFacilityTypeGetObject(6uLL);
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18FC92000, v7, OS_LOG_TYPE_DEFAULT, "Certificate validation disabled. Bypassing trust chain enforcement…", buf, 2u);
    }

    v8 = 1;
  }

  return v8;
}

BOOL PKDeviceHasMockPeerPaymentPass()
{
  void *v0;
  void *v1;
  void *v2;

  PKGeneratePassUniqueID(CFSTR("paymentpass.com.apple.wallet.dev"), CFSTR("nc.prod.pod1_2345678901234567890123456b7d1195"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  +[PKPassLibrary sharedInstance](PKPassLibrary, "sharedInstance");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "passWithUniqueID:", v0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2 != 0;
}

const __CFString *PKMockPeerPaymentPassPassTypeID()
{
  return CFSTR("paymentpass.com.apple.wallet.dev");
}

const __CFString *PKMockPeerPaymentPassSerialNumber()
{
  return CFSTR("nc.prod.pod1_2345678901234567890123456b7d1195");
}

BOOL PKCreateAndValidateTrustWithCertsUsingPolicy(void *a1, SecTrustRef *a2, SecPolicyRef a3, uint64_t a4)
{
  id v7;
  SecPolicyRef SSL;
  NSObject *v9;
  NSObject *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  SecTrustRef *v14;
  id v15;
  uint64_t v16;
  const __CFAllocator *v17;
  uint64_t i;
  SecCertificateRef v19;
  SecCertificateRef v20;
  NSObject *v21;
  OSStatus v22;
  NSObject *v23;
  int v24;
  _BOOL8 v25;
  id v27;
  NSObject *v28;
  void *v29;
  const void *v30;
  CFStringRef v31;
  NSObject *v32;
  NSObject *v33;
  uint64_t v34;
  __SecPolicy *v35;
  SecTrustResultType result;
  CFErrorRef error;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  SecTrustRef trust;
  uint8_t buf[4];
  const void *v44;
  __int16 v45;
  CFStringRef v46;
  _BYTE v47[128];
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  trust = 0;
  SSL = 0;
  if (PKBypassCertValidation())
  {
    PKLogFacilityTypeGetObject(6uLL);
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18FC92000, v9, OS_LOG_TYPE_DEFAULT, "Evaluating using bypass trust policy.", buf, 2u);
    }

    SSL = SecPolicyCreateSSL(1u, 0);
    a3 = SSL;
  }
  if (a3)
  {
    v34 = a4;
    v10 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v38 = 0u;
    v39 = 0u;
    v40 = 0u;
    v41 = 0u;
    v11 = v7;
    v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v38, v47, 16);
    if (v12)
    {
      v13 = v12;
      v35 = SSL;
      v14 = a2;
      v15 = v7;
      v16 = *(_QWORD *)v39;
      v17 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
      while (2)
      {
        for (i = 0; i != v13; ++i)
        {
          if (*(_QWORD *)v39 != v16)
            objc_enumerationMutation(v11);
          v19 = SecCertificateCreateWithData(v17, *(CFDataRef *)(*((_QWORD *)&v38 + 1) + 8 * i));
          if (!v19)
          {
            PKLogFacilityTypeGetObject(6uLL);
            v21 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_18FC92000, v21, OS_LOG_TYPE_DEFAULT, "Unable to decode cert.", buf, 2u);
            }

            v10 = 0;
            goto LABEL_18;
          }
          v20 = v19;
          -[NSObject addObject:](v10, "addObject:", v19);
          CFRelease(v20);
        }
        v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v38, v47, 16);
        if (v13)
          continue;
        break;
      }
LABEL_18:
      v7 = v15;
      a2 = v14;
      SSL = v35;
    }

    if (!-[NSObject count](v10, "count"))
      goto LABEL_24;
    v22 = SecTrustCreateWithCertificates(v10, a3, &trust);
    if (v22)
    {
LABEL_21:
      PKLogFacilityTypeGetObject(0xBuLL);
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134217984;
        v44 = (const void *)v22;
        _os_log_impl(&dword_18FC92000, v23, OS_LOG_TYPE_DEFAULT, "Error creating trust: %ld", buf, 0xCu);
      }

LABEL_24:
      v24 = 0;
LABEL_25:
      if (a2)
        *a2 = trust;
      if (SSL)
        CFRelease(SSL);
      if (!a2 && trust)
        CFRelease(trust);
      v25 = v24 != 0;
      goto LABEL_36;
    }
    if (v34)
    {
      v27 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      objc_msgSend(v27, "addObjectsFromArray:", v34);
    }
    else
    {
      if (!PKBypassCertValidation())
        goto LABEL_49;
      v27 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    }
    if (PKBypassCertValidation())
    {
      PKLogFacilityTypeGetObject(6uLL);
      v28 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18FC92000, v28, OS_LOG_TYPE_DEFAULT, "Certificate validation disabled. Implicitly trusting leaf…", buf, 2u);
      }

      -[NSObject firstObject](v10, "firstObject");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "addObject:", v29);

    }
    if (objc_msgSend(v27, "count", v34))
    {
      v22 = SecTrustSetAnchorCertificates(trust, (CFArrayRef)v27);

      if (v22)
        goto LABEL_21;
    }
    else
    {

    }
LABEL_49:
    error = 0;
    result = kSecTrustResultInvalid;
    if (SecTrustEvaluateWithError(trust, &error)
      && !SecTrustGetTrustResult(trust, &result)
      && (result == kSecTrustResultUnspecified || result == kSecTrustResultProceed))
    {
      PKLogFacilityTypeGetObject(6uLL);
      v33 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18FC92000, v33, OS_LOG_TYPE_DEFAULT, "Trust validated.", buf, 2u);
      }

      v24 = 1;
    }
    else
    {
      v30 = (const void *)SecTrustCopyFailureDescription();
      if (error)
        v31 = CFErrorCopyDescription(error);
      else
        v31 = 0;
      PKLogFacilityTypeGetObject(6uLL);
      v32 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543618;
        v44 = v30;
        v45 = 2114;
        v46 = v31;
        _os_log_impl(&dword_18FC92000, v32, OS_LOG_TYPE_DEFAULT, "Error evaluating trust: %{public}@ - %{public}@.", buf, 0x16u);
      }

      if (v30)
        CFRelease(v30);
      if (v31)
        CFRelease(v31);
      v24 = 0;
    }
    if (error)
      CFRelease(error);
    goto LABEL_25;
  }
  PKLogFacilityTypeGetObject(6uLL);
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_18FC92000, v10, OS_LOG_TYPE_DEFAULT, "Failing evaluation with nil trust policy.", buf, 2u);
  }
  v25 = 0;
LABEL_36:

  return v25;
}

BOOL PKCreateAndValidateTrustWithCertsUsingMarkerOIDs(void *a1, SecTrustRef *a2)
{
  id v3;
  __SecPolicy *ApplePinned;
  __SecPolicy *v5;
  _BOOL8 v6;

  v3 = a1;
  ApplePinned = (__SecPolicy *)SecPolicyCreateApplePinned();
  if (ApplePinned)
  {
    v5 = ApplePinned;
    v6 = PKCreateAndValidateTrustWithCertsUsingPolicy(v3, a2, ApplePinned, 0);
    CFRelease(v5);
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

BOOL PKFeatureCreateAndValidateTrustWithCerts(void *a1, SecTrustRef *a2, uint64_t a3)
{
  id v5;
  void *v6;
  _BOOL8 v7;

  v5 = a1;
  v6 = v5;
  v7 = 0;
  switch(a3)
  {
    case 1:
    case 2:
    case 3:
    case 5:
      v7 = PKCreateAndValidateTrustWithCertsUsingMarkerOIDs(v5, a2);
      break;
    default:
      break;
  }

  return v7;
}

uint64_t PKPaymentServiceConfigurationDataIsTrusted(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  int v7;
  NSObject *v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t TestAppleSMPEncryption;
  const void *v12;
  uint8_t v14[8];
  CFTypeRef cf;
  uint8_t buf[8];

  v5 = a1;
  v6 = a2;
  v7 = PKBypassCertValidation();
  PKLogFacilityTypeGetObject(6uLL);
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (v7)
  {
    if (v9)
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18FC92000, v8, OS_LOG_TYPE_DEFAULT, "Certificate validation disabled. Bypassing payment service configuration trust check...", buf, 2u);
    }

    v10 = 1;
    goto LABEL_21;
  }
  if (a3)
  {
    if (v9)
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18FC92000, v8, OS_LOG_TYPE_DEFAULT, "Evaluating service config data using TEST trust policy.", buf, 2u);
    }

    TestAppleSMPEncryption = SecPolicyCreateTestAppleSMPEncryption();
  }
  else
  {
    if (v9)
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18FC92000, v8, OS_LOG_TYPE_DEFAULT, "Evaluating service config data using PROD trust policy.", buf, 2u);
    }

    TestAppleSMPEncryption = SecPolicyCreateAppleSMPEncryption();
  }
  v12 = (const void *)TestAppleSMPEncryption;
  cf = 0;
  *(_QWORD *)buf = 0;
  if (SecCMSVerifySignedData())
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_18FC92000, v8, OS_LOG_TYPE_DEFAULT, "Service config data signature verification failed.", v14, 2u);
    }

    v10 = 0;
    if (!v12)
      goto LABEL_17;
  }
  else
  {
    v10 = 1;
    if (!v12)
      goto LABEL_17;
  }
  CFRelease(v12);
LABEL_17:
  if (*(_QWORD *)buf)
    CFRelease(*(CFTypeRef *)buf);
  if (cf)
    CFRelease(cf);
LABEL_21:

  return v10;
}

uint64_t PKRandomIntegerInRange(uint64_t a1, int a2)
{
  return a1 + arc4random_uniform(a2 - a1 + 1);
}

id PKCardsDirectoryURL()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = (void *)MEMORY[0x1E0C99E98];
  PKHomeDirectoryPath();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByAppendingPathComponent:", CFSTR("Cards"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "fileURLWithPath:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id PKCardsCatalogFileURL()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = (void *)MEMORY[0x1E0C99E98];
  PKHomeDirectoryPath();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByAppendingPathComponent:", CFSTR("CatalogOfRecord.plist"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "fileURLWithPath:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id PKCardsNonUbiquitousCatalogFileURL()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = (void *)MEMORY[0x1E0C99E98];
  PKHomeDirectoryPath();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByAppendingPathComponent:", CFSTR("NonUbiquitousCatalogOfRecord.plist"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "fileURLWithPath:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id PKReceiptsDirectoryURL()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = (void *)MEMORY[0x1E0C99E98];
  PKHomeDirectoryPath();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByAppendingPathComponent:", CFSTR("Receipts"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "fileURLWithPath:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id PKMapsSnapshotsCacheURL()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = (void *)MEMORY[0x1E0C99E98];
  PKSharedCacheDirectoryPath();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByAppendingPathComponent:", CFSTR("MapsSnapshot"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "fileURLWithPath:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id PKPayLaterFinancingPlanUpdatesDirectory()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = (void *)MEMORY[0x1E0C99E98];
  PKHomeDirectoryPath();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByAppendingPathComponent:", CFSTR("PayLaterPlanUpdates"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "fileURLWithPath:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id PKRequiredPaymentSetupFileURLs()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  id v24;
  NSObject *v25;
  _BOOL4 v26;
  void *v27;
  void *v28;
  void *v29;
  NSObject *v30;
  void *v31;
  void *v32;
  void *v33;
  NSObject *v34;
  void *v35;
  void *v36;
  void *v37;
  NSObject *v38;
  void *v39;
  uint64_t v41;
  void *v42;
  id v43;
  uint8_t buf[4];
  id v45;
  _QWORD v46[3];

  v46[2] = *MEMORY[0x1E0C80C00];
  v0 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v41 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)MEMORY[0x1E0C99E98];
  PKObjectSettingsManagerArchivePath();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "fileURLWithPath:isDirectory:", v2, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = (void *)MEMORY[0x1E0C99E98];
  PKObjectSettingsManagerSafeHavenArchivePath();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "fileURLWithPath:isDirectory:", v5, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v46[0] = v3;
  v46[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v46, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)MEMORY[0x1E0C99E98];
  PKSharedCacheDirectoryPath();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fileURLWithPath:isDirectory:", v9, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  _PKAllFilePathsFromDirectoryURLExcludingURLs(v10, 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObjectsFromArray:", v11);

  v12 = (void *)MEMORY[0x1E0C99E98];
  PKHomeDirectoryPath();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "fileURLWithPath:isDirectory:", v13, 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  _PKAllFilePathsFromDirectoryURLExcludingURLs(v14, v7);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObjectsFromArray:", v15);

  PKLibraryDirectoryPath();
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "stringByAppendingPathComponent:", CFSTR("Preferences"));
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v18 = (void *)MEMORY[0x1E0C99E98];
  PKHomeDirectoryPath();
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "stringByAppendingPathComponent:", CFSTR("com.apple.passd_safehaven.plist"));
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "fileURLWithPath:isDirectory:", v20, 0);
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v21, "checkResourceIsReachableAndReturnError:", 0))
  {
    objc_msgSend(v0, "addObject:", v21);
  }
  else
  {
    PKLogFacilityTypeGetObject(0);
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v45 = v21;
      _os_log_error_impl(&dword_18FC92000, v22, OS_LOG_TYPE_ERROR, "File did not exist at: %@", buf, 0xCu);
    }

  }
  objc_msgSend(v3, "path", v41);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  PKRemoveObjectSettingsManagerSafeHavenArchive();
  if (objc_msgSend(v42, "fileExistsAtPath:", v23))
  {
    v43 = 0;
    objc_msgSend(v42, "copyItemAtURL:toURL:error:", v3, v6, &v43);
    v24 = v43;
    PKLogFacilityTypeGetObject(0);
    v25 = objc_claimAutoreleasedReturnValue();
    v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);
    if (v24)
    {
      if (v26)
      {
        *(_DWORD *)buf = 138412290;
        v45 = v24;
        _os_log_impl(&dword_18FC92000, v25, OS_LOG_TYPE_DEFAULT, "Error creating copy of ObjectSettingsManager.archive for safe haven. %@", buf, 0xCu);
      }

    }
    else
    {
      if (v26)
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18FC92000, v25, OS_LOG_TYPE_DEFAULT, "Created copy of ObjectSettingsManager.archive for safe haven.", buf, 2u);
      }

      PKExcludeFileURLFromBackup(v6);
      objc_msgSend(v0, "addObject:", v6);
    }

  }
  v27 = (void *)MEMORY[0x1E0C99E98];
  objc_msgSend(v17, "stringByAppendingPathComponent:", CFSTR("com.apple.PassKit.passes.plist"));
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "fileURLWithPath:isDirectory:", v28, 0);
  v29 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v29, "checkResourceIsReachableAndReturnError:", 0))
  {
    objc_msgSend(v0, "addObject:", v29);
  }
  else
  {
    PKLogFacilityTypeGetObject(0);
    v30 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v45 = v29;
      _os_log_error_impl(&dword_18FC92000, v30, OS_LOG_TYPE_ERROR, "File did not exist at: %@", buf, 0xCu);
    }

  }
  v31 = (void *)MEMORY[0x1E0C99E98];
  objc_msgSend(v17, "stringByAppendingPathComponent:", CFSTR("com.apple.nanopassbook.plist"));
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "fileURLWithPath:isDirectory:", v32, 0);
  v33 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v33, "checkResourceIsReachableAndReturnError:", 0))
  {
    objc_msgSend(v0, "addObject:", v33);
  }
  else
  {
    PKLogFacilityTypeGetObject(0);
    v34 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v45 = v33;
      _os_log_error_impl(&dword_18FC92000, v34, OS_LOG_TYPE_ERROR, "File did not exist at: %@", buf, 0xCu);
    }

  }
  v35 = (void *)MEMORY[0x1E0C99E98];
  objc_msgSend(v17, "stringByAppendingPathComponent:", CFSTR("com.apple.stockholm.plist"));
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v35, "fileURLWithPath:isDirectory:", v36, 0);
  v37 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v37, "checkResourceIsReachableAndReturnError:", 0))
  {
    objc_msgSend(v0, "addObject:", v37);
  }
  else
  {
    PKLogFacilityTypeGetObject(0);
    v38 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v45 = v37;
      _os_log_error_impl(&dword_18FC92000, v38, OS_LOG_TYPE_ERROR, "File did not exist at: %@", buf, 0xCu);
    }

  }
  v39 = (void *)objc_msgSend(v0, "copy");

  return v39;
}

id _PKAllFilePathsFromDirectoryURLExcludingURLs(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  char v17;
  void *v18;
  void *v20;
  void *v21;
  id v22;
  id v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _QWORD v29[3];

  v29[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v22 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = *MEMORY[0x1E0C999D0];
  v29[0] = *MEMORY[0x1E0C999D0];
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v29, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = v5;
  v21 = v3;
  objc_msgSend(v5, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:", v3, v7, 0, &__block_literal_global_983);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v9 = v8;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v25;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v25 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * v13);
        v23 = 0;
        objc_msgSend(v14, "getResourceValue:forKey:error:", &v23, v6, 0);
        v15 = v23;
        if ((objc_msgSend(v15, "BOOLValue") & 1) == 0)
        {
          objc_msgSend(v14, "URLByResolvingSymlinksInPath");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = objc_msgSend(v4, "containsObject:", v16);

          if ((v17 & 1) == 0)
            objc_msgSend(v22, "addObject:", v14);
        }

        ++v13;
      }
      while (v11 != v13);
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
    }
    while (v11);
  }

  v18 = (void *)objc_msgSend(v22, "copy");
  return v18;
}

void PKRemoveObjectSettingsManagerSafeHavenArchive()
{
  void *v0;
  void *v1;
  NSObject *v2;
  NSObject *v3;
  id v4;
  uint8_t buf[4];
  NSObject *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  PKObjectSettingsManagerSafeHavenArchivePath();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v1, "fileExistsAtPath:", v0))
  {
    v4 = 0;
    objc_msgSend(v1, "removeItemAtPath:error:", v0, &v4);
    v2 = v4;
    PKLogFacilityTypeGetObject(0);
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v6 = v2;
      _os_log_impl(&dword_18FC92000, v3, OS_LOG_TYPE_DEFAULT, "Removed ObjectSettingsManager safe haven archive file with error %@", buf, 0xCu);
    }

  }
  else
  {
    PKLogFacilityTypeGetObject(0);
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18FC92000, v2, OS_LOG_TYPE_DEFAULT, "Not removing ObjectSettingsManager safe haven archive file because it doesnt exist", buf, 2u);
    }
  }

}

void PKExcludeFileURLFromBackup(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;
  char v6;
  id v7;
  NSObject *v8;
  id v9;
  uint8_t buf[4];
  id v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "path");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v2, "fileExistsAtPath:", v3);

  if (v4)
  {
    v5 = *MEMORY[0x1E0C999D8];
    v9 = 0;
    v6 = objc_msgSend(v1, "setResourceValue:forKey:error:", MEMORY[0x1E0C9AAB0], v5, &v9);
    v7 = v9;
    if ((v6 & 1) == 0)
    {
      PKLogFacilityTypeGetObject(0);
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543618;
        v11 = v1;
        v12 = 2114;
        v13 = v7;
        _os_log_error_impl(&dword_18FC92000, v8, OS_LOG_TYPE_ERROR, "Error excluding %{public}@ from backup %{public}@", buf, 0x16u);
      }

    }
  }

}

id PKCachedFileForSHA1(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v1 = a1;
  if (!PKCachedFileForSHA1Exists(v1))
    goto LABEL_4;
  v2 = (void *)MEMORY[0x1E0C99D50];
  v3 = (void *)MEMORY[0x1E0C99E98];
  PKPassAssetDownloadCachePath();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringByAppendingPathComponent:", v1);
  v5 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fileURLWithPath:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "dataWithContentsOfURL:options:error:", v6, 0, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "SHA1Hash");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "hexEncoding");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v5) = objc_msgSend(v9, "isEqual:", v1);

  if ((v5 & 1) == 0)
  {

LABEL_4:
    v7 = 0;
  }

  return v7;
}

uint64_t PKCachedFileForSHA1Exists(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v1 = (void *)MEMORY[0x1E0C99E98];
  v2 = a1;
  PKPassAssetDownloadCachePath();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringByAppendingPathComponent:", v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v1, "fileURLWithPath:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "path");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v6, "fileExistsAtPath:", v7);

  return v8;
}

uint64_t PKPercentageDecimalToStorageInteger(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  char v4;
  uint64_t v5;
  void *v6;

  v1 = a1;
  if (!v1
    || (objc_msgSend(MEMORY[0x1E0CB3598], "notANumber"), (v2 = objc_claimAutoreleasedReturnValue()) != 0)
    && (v3 = (void *)v2, v4 = objc_msgSend(v1, "isEqual:", v2), v3, (v4 & 1) != 0))
  {
    v5 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else
  {
    objc_msgSend(v1, "decimalNumberByMultiplyingByPowerOf10:", 4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v6, "integerValue");

  }
  return v5;
}

id PKPercentageStorageIntegerToDecimal(uint64_t a1)
{
  void *v1;
  void *v2;

  if (a1 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v1 = 0;
  }
  else
  {
    v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3598]), "initWithInteger:", a1);
    objc_msgSend(v2, "decimalNumberByMultiplyingByPowerOf10:", 4294967292);
    v1 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v1;
}

uint64_t PKCurrencyDecimalToStorageInteger(void *a1)
{
  return PKCurrencyDecimalToStorageIntegerWithPrecision(a1, 4);
}

uint64_t PKCurrencyDecimalToStorageIntegerWithPrecision(void *a1, __int16 a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;

  v3 = a1;
  if (!v3
    || (objc_msgSend(MEMORY[0x1E0CB3598], "notANumber"), (v4 = objc_claimAutoreleasedReturnValue()) != 0)
    && (v5 = (void *)v4, v6 = objc_msgSend(v3, "isEqual:", v4), v5, (v6 & 1) != 0))
  {
    v7 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = 0x7FFFFFFFFFFFFFFELL;
    v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3598]), "initWithLongLong:", 0x7FFFFFFFFFFFFFFELL);
    v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3598]), "initWithLongLong:", 0x8000000000000000);
    objc_msgSend(v3, "decimalNumberByMultiplyingByPowerOf10:", a2);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v10, "compare:", v8) == -1)
    {
      if (objc_msgSend(v10, "compare:", v9) == 1)
        v7 = objc_msgSend(v10, "longLongValue");
      else
        v7 = 0x8000000000000000;
    }

  }
  return v7;
}

id PKCurrencyStorageIntegerToCurrencyDecimal(uint64_t a1)
{
  return PKCurrencyStorageIntegerToCurrencyDecimalWithPrecision(a1, 4);
}

id PKCurrencyStorageIntegerToCurrencyDecimalWithPrecision(uint64_t a1, __int16 a2)
{
  void *v2;
  void *v4;

  if (a1 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v2 = 0;
  }
  else
  {
    v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3598]), "initWithLongLong:", a1);
    objc_msgSend(v4, "decimalNumberByMultiplyingByPowerOf10:", (__int16)-a2);
    v2 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v2;
}

id PKCurrencyDecimalToStorageNumber(void *a1)
{
  if (a1)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", PKCurrencyDecimalToStorageIntegerWithPrecision(a1, 4));
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

BOOL PKIsCurrencyDecimalTooLarge(void *a1)
{
  objc_class *v1;
  id v2;
  void *v3;
  uint64_t v4;
  _BOOL8 v5;

  if (!a1)
    return 0;
  v1 = (objc_class *)MEMORY[0x1E0CB3598];
  v2 = a1;
  v3 = (void *)objc_msgSend([v1 alloc], "initWithLongLong:", 0x7FFFFFFFFFFFFFFELL);
  v4 = objc_msgSend(v3, "compare:", v2);

  v5 = v4 == -1;
  return v5;
}

id PKLegacyCurrencyStorageIntegerToDecimal(uint64_t a1, uint64_t a2)
{
  __int16 v2;
  void *v3;

  if (a2 == 2)
    goto LABEL_9;
  if (a2 == 1)
  {
    if (a1 == 0x7FFFFFFFFFFFFFFFLL)
      goto LABEL_7;
LABEL_9:
    v2 = 4;
    goto LABEL_10;
  }
  if (!a2 && a1 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v2 = 2;
LABEL_10:
    PKCurrencyStorageIntegerToCurrencyDecimalWithPrecision(a1, v2);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    return v3;
  }
LABEL_7:
  v3 = 0;
  return v3;
}

uint64_t PKCurrencyDecimalToLegacyStorageInteger(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  __int16 v5;
  uint64_t v6;

  v3 = a1;
  v4 = v3;
  if (a2 == 2)
    goto LABEL_7;
  if (a2 == 1)
  {
    if (!v3)
      goto LABEL_10;
LABEL_7:
    v5 = 4;
    goto LABEL_8;
  }
  if (a2)
    goto LABEL_7;
  if (!v3)
  {
LABEL_10:
    v6 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_9;
  }
  v5 = 2;
LABEL_8:
  v6 = PKCurrencyDecimalToStorageIntegerWithPrecision(v3, v5);
LABEL_9:

  return v6;
}

unint64_t PKCurrencyDecimalStorageBase10PowerForFormat(unint64_t a1)
{
  unint64_t v1;

  v1 = 0x400040002uLL >> (16 * a1);
  if (a1 >= 3)
    LOBYTE(v1) = 4;
  return v1 & 6;
}

id PKCurrencyDecimalAmountRound(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  _PKCurrencyNumberRoundingHandler();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "decimalNumberByRoundingAccordingToBehavior:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id _PKCurrencyNumberRoundingHandler()
{
  if (qword_1ECF22048 != -1)
    dispatch_once(&qword_1ECF22048, &__block_literal_global_984);
  return (id)qword_1ECF22050;
}

id PKCurrencyDecimalAmountMultiplyAndRound(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;

  v3 = a2;
  v4 = a1;
  _PKCurrencyNumberRoundingHandler();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "decimalNumberByMultiplyingBy:withBehavior:", v3, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PKDateToStorageValue(void *a1)
{
  void *v1;
  double v2;

  if (a1)
  {
    v1 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend(a1, "timeIntervalSince1970");
    objc_msgSend(v1, "numberWithDouble:", v2 * 1000.0);
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

id PKDateFromStorageValue(void *a1)
{
  void *v1;
  double v2;

  if (a1)
  {
    v1 = (void *)MEMORY[0x1E0C99D68];
    objc_msgSend(a1, "doubleValue");
    objc_msgSend(v1, "dateWithTimeIntervalSince1970:", v2 / 1000.0);
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

id PKRequestIDHeaderValue()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;

  PKRequestIDValue();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3A28], "UUID");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "UUIDString");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(v0, "length"))
  {
    v4 = v2;
    v3 = v0;
    goto LABEL_5;
  }
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@-%@"), v0, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if ((unint64_t)objc_msgSend(v3, "length") >= 0x25)
  {
    objc_msgSend(v3, "substringToIndex:", 36);
    v4 = (id)objc_claimAutoreleasedReturnValue();
LABEL_5:

    v3 = v4;
  }

  return v3;
}

id PKRequestFireWireIDHeaderValue()
{
  void *v0;
  uint64_t v1;

  if (os_variant_has_internal_ui())
  {
    PKRequestFireWireIDValue();
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    if ((unint64_t)objc_msgSend(v0, "length") >= 0x3D)
    {
      objc_msgSend(v0, "substringToIndex:", 60);
      v1 = objc_claimAutoreleasedReturnValue();

      v0 = (void *)v1;
    }
  }
  else
  {
    v0 = 0;
  }
  return v0;
}

uint64_t PKRandomNumberOfLength(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  double v4;

  v1 = 10;
  if (a1 < 10)
    v1 = a1;
  if (v1 <= 1)
    v2 = 1;
  else
    v2 = v1;
  v3 = __exp10((double)(v2 - 1));
  v4 = __exp10((double)v2);
  return arc4random_uniform((v4 + -1.0) - v3 + 1) + v3;
}

id PKOrdinalStringForInteger(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  if (qword_1ECF21CF0 != -1)
    dispatch_once(&qword_1ECF21CF0, &__block_literal_global_152);
  v2 = (void *)qword_1ECF21CF8;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringFromNumber:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void PKExcludePathFromBackup(uint64_t a1)
{
  id v1;

  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", a1);
  v1 = (id)objc_claimAutoreleasedReturnValue();
  PKExcludeFileURLFromBackup(v1);

}

uint64_t PKExcludePreferencesDomainFromBackup()
{
  return _CFPreferencesSetBackupDisabled();
}

void PKClearPreferencesDomain(void *a1)
{
  const __CFString *v1;
  const __CFString *v2;
  const __CFString *v3;
  const __CFArray *v4;
  const __CFArray *v5;
  __CFString *applicationID;

  v1 = a1;
  v2 = (const __CFString *)*MEMORY[0x1E0C9B260];
  v3 = (const __CFString *)*MEMORY[0x1E0C9B230];
  applicationID = (__CFString *)v1;
  v4 = CFPreferencesCopyKeyList(v1, (CFStringRef)*MEMORY[0x1E0C9B260], (CFStringRef)*MEMORY[0x1E0C9B230]);
  if (v4)
  {
    v5 = v4;
    CFPreferencesSetMultiple(0, v4, applicationID, v2, v3);
    CFRelease(v5);
  }

}

void PKCacheFile(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  char v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  id v13;
  NSObject *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  id v20;
  uint8_t buf[4];
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    PKPassAssetDownloadCachePath();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v5, "fileExistsAtPath:", v6);

    if ((v7 & 1) == 0)
    {
      objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = (void *)MEMORY[0x1E0C99E98];
      PKPassAssetDownloadCachePath();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "fileURLWithPath:", v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = 0;
      v12 = objc_msgSend(v8, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v11, 1, 0, &v20);
      v13 = v20;

      if ((v12 & 1) == 0 && v13)
      {
        PKLogFacilityTypeGetObject(0);
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          PKPassAssetDownloadCachePath();
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v22 = v15;
          _os_log_impl(&dword_18FC92000, v14, OS_LOG_TYPE_DEFAULT, "Could not create download cache at %@", buf, 0xCu);

        }
      }

    }
    v16 = (void *)MEMORY[0x1E0C99E98];
    PKPassAssetDownloadCachePath();
    v17 = objc_claimAutoreleasedReturnValue();
    -[NSObject stringByAppendingPathComponent:](v17, "stringByAppendingPathComponent:", v4);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "fileURLWithPath:", v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "writeToURL:atomically:", v19, 1);

  }
  else
  {
    PKLogFacilityTypeGetObject(0);
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl(&dword_18FC92000, v17, OS_LOG_TYPE_ERROR, "Trying to cache empty data !!", buf, 2u);
    }
  }

}

id PKAssignedDeviceName()
{
  return (id)MGCopyAnswer();
}

id PKDeviceModel()
{
  return (id)MGCopyAnswer();
}

uint64_t PKDeviceClassIsWatch(void *a1, const char *a2)
{
  return objc_msgSend(a1, "isEqualToString:", CFSTR("Watch"));
}

id PKDeviceBuildVersion()
{
  return (id)MGCopyAnswer();
}

BOOL PKLocationServicesEnabled()
{
  void *v0;
  void *v1;
  void *v2;
  _BOOL8 v3;

  v0 = (void *)MEMORY[0x1E0C9E3C8];
  PKPassKitCoreBundle();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "bundlePath");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v0, "authorizationStatusForBundlePath:", v2) - 3 < 2;

  return v3;
}

BOOL PKRelevancyLocationServicesEnabled()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _BOOL8 v6;

  v0 = (void *)MEMORY[0x1E0C9E3C8];
  PKPassKitCoreBundle();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "bundlePath");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v0, "authorizationStatusForBundlePath:", v2) - 3 > 1)
  {
    v6 = 0;
  }
  else
  {
    v3 = (void *)MEMORY[0x1E0C9E3C8];
    PKPassRelevancyBundle();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "bundlePath");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v3, "authorizationStatusForBundlePath:", v5) - 3 < 2;

  }
  return v6;
}

BOOL PKMerchantLookupLocationServicesEnabled()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _BOOL8 v6;

  v0 = (void *)MEMORY[0x1E0C9E3C8];
  PKPassKitCoreBundle();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "bundlePath");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v0, "authorizationStatusForBundlePath:", v2) - 3 > 1)
  {
    v6 = 0;
  }
  else
  {
    v3 = (void *)MEMORY[0x1E0C9E3C8];
    PKMerchantLookupBundle();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "bundlePath");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v3, "authorizationStatusForBundlePath:", v5) - 3 < 2;

  }
  return v6;
}

uint64_t PKAutomaticLoginEnabled()
{
  return 0;
}

uint64_t PKBankCredentialCenterEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKCloudKitPassSyncEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKIdentityEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKIdentityPresentmentV2Enabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKMagmaEnabled()
{
  uint64_t result;

  result = _os_feature_enabled_impl();
  if ((_DWORD)result)
    return _os_feature_enabled_impl();
  return result;
}

uint64_t PKOslo2024UIUpdatesEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKBroadwayDiscoverability2024Enabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKBroadwayAutopayPrompt2024Enabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKWalletFinanceKitTransactionsEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKWalletFinanceKitTransactionsV2Enabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKBehindThePlusRefreshEnabledWithWebService()
{
  return 1;
}

uint64_t PKWalletAirPlayDiscoveryBrokerEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKAppleCardMacTransactionHistoryEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKCocoonEnabled()
{
  return _os_feature_enabled_impl();
}

BOOL PKVirtualCardEnabledWithWebService(void *a1)
{
  id v1;
  void *v2;
  _BOOL8 v3;
  NSObject *v4;
  uint8_t v6[16];

  v1 = a1;
  if ((_os_feature_enabled_impl() & 1) != 0)
  {
    +[PKWebServiceVirtualCardFeature virtualCardFeatureWithWebService:](PKWebServiceVirtualCardFeature, "virtualCardFeatureWithWebService:", v1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = v2 != 0;

  }
  else
  {
    PKLogFacilityTypeGetObject(6uLL);
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_18FC92000, v4, OS_LOG_TYPE_DEFAULT, "Virtual card disabled by feature flag", v6, 2u);
    }

    v3 = 0;
  }

  return v3;
}

uint64_t PKNativeVPANAutofillSupported()
{
  return 1;
}

uint64_t PKVirtualCardSecureRefreshEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKSafariCredentialProvisioningEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKCashVPANEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKCashDeviceTapEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKBankConnectEnabled()
{
  uint64_t result;

  result = _os_feature_enabled_impl();
  if ((_DWORD)result)
  {
    if (qword_1ECF21D10 != -1)
      dispatch_once(&qword_1ECF21D10, &__block_literal_global_224);
    if (byte_1ECF21C7B)
    {
      return 0;
    }
    else
    {
      if (qword_1ECF21CA8 != -1)
        dispatch_once(&qword_1ECF21CA8, &__block_literal_global_13);
      return _MergedGlobals_21 == 0;
    }
  }
  return result;
}

uint64_t PKIsVision()
{
  return 0;
}

uint64_t PKBankConnectAvailableForPass(void *a1)
{
  id v1;
  int v2;
  uint64_t v3;
  int v4;
  void *v5;

  v1 = a1;
  if (PKBankConnectEnabled())
  {
    if (objc_msgSend(v1, "cardType") == 1)
      v2 = objc_msgSend(v1, "isEMoneyPass") ^ 1;
    else
      v2 = 0;
    v4 = objc_msgSend(v1, "hasAssociatedPeerPaymentAccount");
    objc_msgSend(v1, "associatedAccountServiceAccountIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (v2)
      v3 = (v5 == 0) & ~v4;
    else
      v3 = 0;
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

uint64_t PKBankConnectPushNotificationsEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKPayWithRewardsEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKAccessPassVisibilityEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKFinHealthTagsSectionEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKRewardsCenterEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKFinHealthBillPaymentSuggestionsEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKFinHealthPeerPaymentSuggestionsEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKFinHealthInsightsEnabled()
{
  if ((os_variant_has_internal_ui() & 1) != 0)
    return 1;
  else
    return _os_feature_enabled_impl();
}

uint64_t PKPaymentSheetHMEEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKPaymentSheetSIWAEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKRemoteNetworkPaymentEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKTorinoConsentSyncEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKMultiReservationTTUNotificationEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t PKAppProtectionEnabled()
{
  uint64_t result;

  result = _os_feature_enabled_impl();
  if ((_DWORD)result)
  {
    if (qword_1ECF21D00 != -1)
      dispatch_once(&qword_1ECF21D00, &__block_literal_global_218);
    return byte_1ECF21C79 != 0;
  }
  return result;
}

uint64_t PKCascadeIntegrationEnabled()
{
  return _os_feature_enabled_impl();
}

void PKRequestContactAccessWithCompletion(void *a1)
{
  void (**v1)(_QWORD);
  uint64_t v2;
  NSObject *v3;
  _BOOL4 v4;
  id v5;
  _QWORD v6[4];
  void (**v7)(_QWORD);
  uint8_t buf[4];
  uint64_t v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = objc_msgSend(MEMORY[0x1E0C97298], "authorizationStatusForEntityType:", 0);
  PKLogFacilityTypeGetObject(6uLL);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      *(_DWORD *)buf = 134217984;
      v9 = v2;
      _os_log_impl(&dword_18FC92000, v3, OS_LOG_TYPE_DEFAULT, "Not prompting for Contact Access Alert - current permission status: %ld", buf, 0xCu);
    }

    if (v1)
      v1[2](v1);
  }
  else
  {
    if (v4)
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18FC92000, v3, OS_LOG_TYPE_DEFAULT, "Requesting Contact Access from user.", buf, 2u);
    }

    v5 = objc_alloc_init(MEMORY[0x1E0C97298]);
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __PKRequestContactAccessWithCompletion_block_invoke;
    v6[3] = &unk_1E2ABE148;
    v7 = v1;
    objc_msgSend(v5, "requestAccessForEntityType:completionHandler:", 0, v6);

  }
}

id PKMeContactFullName()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  _QWORD v5[2];

  v5[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0C97218], "descriptorForRequiredKeysForStyle:", 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = v0;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v5, 1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  PKMeContactWithKeysToFetch(v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    objc_msgSend(MEMORY[0x1E0C97218], "stringFromContact:style:", v2, 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

id PKMeContactWithKeysToFetch(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  const char *v7;
  NSObject *v8;
  uint32_t v9;
  id v11;
  uint8_t buf[4];
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = (objc_class *)MEMORY[0x1E0C97298];
  v2 = a1;
  v3 = objc_alloc_init(v1);
  v11 = 0;
  objc_msgSend(v3, "_crossPlatformUnifiedMeContactWithKeysToFetch:error:", v2, &v11);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = v11;
  if (v5)
  {
    PKLogFacilityTypeGetObject(0);
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v13 = v5;
      v7 = "Failed to fetch me card with error: %@";
      v8 = v6;
      v9 = 12;
LABEL_4:
      _os_log_impl(&dword_18FC92000, v8, OS_LOG_TYPE_DEFAULT, v7, buf, v9);
    }
  }
  else
  {
    if (v4)
      goto LABEL_7;
    PKLogFacilityTypeGetObject(0);
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      v7 = "Failed to find me card";
      v8 = v6;
      v9 = 2;
      goto LABEL_4;
    }
  }

LABEL_7:
  return v4;
}

uint64_t PKCurrentUserIsMBSetupUser()
{
  return 0;
}

BOOL PKRemoveMeContactForKey(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  _BOOL8 v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSObject *log;
  void *v21;
  void *v22;
  id v23;
  uint8_t buf[4];
  id v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v26[0] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v26, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  PKMeContactWithKeysToFetch(v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(v3, "valueForKey:", v4);
    v7 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "valueForKey:", v4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      -[NSObject firstObject](v7, "firstObject");
      v9 = objc_claimAutoreleasedReturnValue();
      v10 = _PKIndexOfValueInLabeledValuesForContactKey(v9, v8, v4);
      if (v10 == 0x7FFFFFFFFFFFFFFFLL)
      {
        PKLogFacilityTypeGetObject(6uLL);
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_18FC92000, v11, OS_LOG_TYPE_DEFAULT, "Not removing entry since it's not found in me card", buf, 2u);
        }
        v12 = 0;
      }
      else
      {
        v13 = v10;
        v11 = objc_msgSend(v8, "mutableCopy");
        -[NSObject removeObjectAtIndex:](v11, "removeObjectAtIndex:", v13);
        v14 = (void *)objc_msgSend(v6, "mutableCopy");
        v15 = -[NSObject copy](v11, "copy");
        objc_msgSend(v14, "setValue:forKey:", v15, v4);

        v16 = objc_alloc_init(MEMORY[0x1E0C97298]);
        v17 = objc_alloc_init(MEMORY[0x1E0C973D0]);
        v22 = v14;
        objc_msgSend(v17, "updateContact:", v14);
        v23 = 0;
        v21 = v16;
        objc_msgSend(v16, "executeSaveRequest:error:", v17, &v23);
        v18 = v23;
        v12 = v18 == 0;
        if (v18)
        {
          PKLogFacilityTypeGetObject(6uLL);
          log = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(log, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            v25 = v18;
            _os_log_impl(&dword_18FC92000, log, OS_LOG_TYPE_DEFAULT, "Error removing an entry in me card: %@", buf, 0xCu);
          }

        }
      }

    }
    else
    {
      PKLogFacilityTypeGetObject(6uLL);
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18FC92000, v9, OS_LOG_TYPE_DEFAULT, "PKRemoveMeContactForKey currently supports adding only array fields", buf, 2u);
      }
      v12 = 0;
    }

  }
  else
  {
    PKLogFacilityTypeGetObject(6uLL);
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18FC92000, v7, OS_LOG_TYPE_DEFAULT, "PKRemoveMeContactForKey can't remove contact since me card doesn't exist", buf, 2u);
    }
    v12 = 0;
  }

  return v12;
}

uint64_t _PKIndexOfValueInLabeledValuesForContactKey(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  _QWORD v11[4];
  id v12;
  id v13;

  v5 = a1;
  v6 = a3;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = ___PKIndexOfValueInLabeledValuesForContactKey_block_invoke;
  v11[3] = &unk_1E2AC2498;
  v12 = v5;
  v13 = v6;
  v7 = v6;
  v8 = v5;
  v9 = objc_msgSend(a2, "indexOfObjectPassingTest:", v11);

  return v9;
}

BOOL PKAddMeContactForKey(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  _BOOL8 v14;
  int v15;
  NSObject *v16;
  id v17;
  void *v18;
  id v19;
  int v20;
  id v21;
  void *v22;
  char v23;
  id v24;
  NSObject *v25;
  void *v27;
  void *v28;
  id v29;
  id v30;
  NSObject *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  _QWORD v37[4];
  id v38;
  id v39;
  id v40;
  __int128 *p_buf;
  uint8_t v42[4];
  id v43;
  __int128 buf;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  void (*v47)(uint64_t);
  id v48;
  _QWORD v49[3];

  v49[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v49[0] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v49, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  PKMeContactWithKeysToFetch(v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v6)
  {
    v17 = objc_alloc_init(MEMORY[0x1E0C97298]);
    v18 = (void *)objc_msgSend(v3, "mutableCopy");
    v19 = objc_alloc_init(MEMORY[0x1E0C973D0]);
    objc_msgSend(v19, "addContact:toContainerWithIdentifier:", v18, 0);
    v35 = 0;
    v20 = objc_msgSend(v17, "executeSaveRequest:error:", v19, &v35);
    v21 = v35;
    v22 = v21;
    if (v20)
    {
      v34 = v21;
      v23 = objc_msgSend(v17, "setMeContact:error:", v18, &v34);
      v24 = v34;

      if ((v23 & 1) != 0)
      {

LABEL_27:
        v14 = 1;
        goto LABEL_17;
      }
      PKLogFacilityTypeGetObject(6uLL);
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf) = 138412290;
        *(_QWORD *)((char *)&buf + 4) = v24;
        _os_log_impl(&dword_18FC92000, v25, OS_LOG_TYPE_DEFAULT, "Error setting me contact: %@", (uint8_t *)&buf, 0xCu);
      }
    }
    else
    {
      PKLogFacilityTypeGetObject(6uLL);
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf) = 138412290;
        *(_QWORD *)((char *)&buf + 4) = v22;
        _os_log_impl(&dword_18FC92000, v25, OS_LOG_TYPE_DEFAULT, "Error saving contact for me card: %@", (uint8_t *)&buf, 0xCu);
      }
      v24 = v22;
    }

    goto LABEL_16;
  }
  objc_msgSend(v6, "valueForKey:", v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "valueForKey:", v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {
    PKLogFacilityTypeGetObject(6uLL);
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf) = 0;
      _os_log_impl(&dword_18FC92000, v16, OS_LOG_TYPE_DEFAULT, "PKAddMeContactForKey currently supports adding only array fields", (uint8_t *)&buf, 2u);
    }

LABEL_16:
    v14 = 0;
    goto LABEL_17;
  }
  objc_msgSend(v8, "firstObject");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v45 = 0x3032000000;
  v46 = __Block_byref_object_copy__3;
  v47 = __Block_byref_object_dispose__3;
  v48 = 0;
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = __PKAddMeContactForKey_block_invoke;
  v37[3] = &unk_1E2AC1B38;
  v10 = v9;
  v38 = v10;
  p_buf = &buf;
  v11 = v3;
  v39 = v11;
  v12 = v4;
  v40 = v12;
  objc_msgSend(v7, "enumerateObjectsUsingBlock:", v37);
  v13 = *(void **)(*((_QWORD *)&buf + 1) + 40);
  if (v13)
  {
    v14 = PKUpdateMeContact(v13, v11, v12);
    v15 = 1;
  }
  else
  {
    v27 = (void *)objc_msgSend(v7, "mutableCopy");
    objc_msgSend(v27, "addObject:", v10);
    v28 = (void *)objc_msgSend(v6, "mutableCopy");
    objc_msgSend(v28, "setValue:forKey:", v27, v12);
    v33 = objc_alloc_init(MEMORY[0x1E0C97298]);
    v29 = objc_alloc_init(MEMORY[0x1E0C973D0]);
    objc_msgSend(v29, "updateContact:", v28);
    v36 = 0;
    objc_msgSend(v33, "executeSaveRequest:error:", v29, &v36);
    v32 = v27;
    v30 = v36;
    if (v30)
    {
      PKLogFacilityTypeGetObject(6uLL);
      v31 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)v42 = 138412290;
        v43 = v30;
        _os_log_impl(&dword_18FC92000, v31, OS_LOG_TYPE_DEFAULT, "Error adding an entry to existing me card: %@", v42, 0xCu);
      }

      v15 = 1;
    }
    else
    {
      v15 = 0;
    }

    v14 = 0;
  }

  _Block_object_dispose(&buf, 8);
  if (!v15)
    goto LABEL_27;
LABEL_17:

  return v14;
}

void sub_18FEFD16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL PKUpdateMeContact(void *a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  _BOOL8 v7;
  id v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  _BOOL4 v22;
  const char *v23;
  NSObject *v24;
  uint32_t v25;
  NSObject *v27;
  void *v28;
  void *v29;
  id v30;
  uint8_t buf[4];
  NSObject *v32;
  __int16 v33;
  void *v34;
  _QWORD v35[2];

  v35[1] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = v5;
  v7 = 0;
  if (a1 && a2 && v5)
  {
    v8 = a2;
    objc_msgSend(a1, "valueForKey:", v6);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "valueForKey:", v6);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
    {
      PKLogFacilityTypeGetObject(6uLL);
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18FC92000, v11, OS_LOG_TYPE_DEFAULT, "PKUpdateMeContact currently supports updating only array fields", buf, 2u);
      }
      v7 = 0;
      goto LABEL_27;
    }
    v11 = objc_alloc_init(MEMORY[0x1E0C97298]);
    v35[0] = v6;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v35, 1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSObject _crossPlatformUnifiedMeContactWithKeysToFetch:error:](v11, "_crossPlatformUnifiedMeContactWithKeysToFetch:error:", v12, 0);
    v13 = objc_claimAutoreleasedReturnValue();

    PKLogFacilityTypeGetObject(6uLL);
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v32 = v13;
      _os_log_impl(&dword_18FC92000, v14, OS_LOG_TYPE_DEFAULT, "Me card: %@", buf, 0xCu);
    }

    v15 = -[NSObject mutableCopy](v13, "mutableCopy");
    objc_msgSend(v9, "firstObject");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "firstObject");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "valueForKey:", v6);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = (void *)objc_msgSend(v17, "mutableCopy");

    v28 = v16;
    v19 = _PKIndexOfValueInLabeledValuesForContactKey(v16, v18, v6);
    if (v19 == 0x7FFFFFFFFFFFFFFFLL || !v15 || !v29)
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_18FC92000, v14, OS_LOG_TYPE_DEFAULT, "Error - unable to find me card to replace", buf, 2u);
      }
      v7 = 0;
      v20 = v14;
      goto LABEL_26;
    }
    v27 = v13;
    objc_msgSend(v18, "replaceObjectAtIndex:withObject:", v19, v29);
    objc_msgSend(v15, "setValue:forKey:", v18, v6);
    v20 = objc_alloc_init(MEMORY[0x1E0C973D0]);
    -[NSObject updateContact:](v20, "updateContact:", v15);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v32 = v20;
      v33 = 2112;
      v34 = v15;
      _os_log_impl(&dword_18FC92000, v14, OS_LOG_TYPE_DEFAULT, "Requested contact update: %@ with contact: %@", buf, 0x16u);
    }

    v30 = 0;
    -[NSObject executeSaveRequest:error:](v11, "executeSaveRequest:error:", v20, &v30);
    v21 = v30;
    v7 = v21 == 0;
    v22 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);
    if (v21)
    {
      if (v22)
      {
        *(_DWORD *)buf = 138412290;
        v32 = v21;
        v23 = "Error updating me card: %@";
        v24 = v14;
        v25 = 12;
LABEL_24:
        _os_log_impl(&dword_18FC92000, v24, OS_LOG_TYPE_DEFAULT, v23, buf, v25);
      }
    }
    else if (v22)
    {
      *(_WORD *)buf = 0;
      v23 = "Updated me card in response to user editing";
      v24 = v14;
      v25 = 2;
      goto LABEL_24;
    }

    v13 = v27;
LABEL_26:

LABEL_27:
  }

  return v7;
}

id PKHomeAddressFromContact(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  objc_msgSend(a1, "postalAddresses", 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v13;
    v5 = *MEMORY[0x1E0C96FF8];
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v13 != v4)
          objc_enumerationMutation(v1);
        v7 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        objc_msgSend(v7, "label");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = objc_msgSend(v8, "isEqualToString:", v5);

        if (v9)
        {
          objc_msgSend(v7, "value");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          goto LABEL_11;
        }
      }
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v3)
        continue;
      break;
    }
  }
  v10 = 0;
LABEL_11:

  return v10;
}

id PKCorrectCountryCodeIfNecessaryForPostalAddress(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v1 = a1;
  objc_msgSend(v1, "ISOCountryCode");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2 && objc_msgSend(v2, "length") == 2)
  {
    objc_msgSend(v3, "uppercaseString");
    v4 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(v1, "suggestedCountryCode");
    v4 = objc_claimAutoreleasedReturnValue();
  }
  v5 = (void *)v4;
  objc_msgSend(v1, "setISOCountryCode:", v4);

  return v1;
}

uint64_t PKIsPod()
{
  if (qword_1ECF21D08 != -1)
    dispatch_once(&qword_1ECF21D08, &__block_literal_global_221);
  return byte_1ECF21C7A;
}

uint64_t PKIsWatch()
{
  return 0;
}

uint64_t PKIsTV()
{
  return 0;
}

uint64_t PKIsMac()
{
  return 0;
}

uint64_t PKWalletSettingsURL()
{
  return objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("prefs:root=PASSBOOK"));
}

void PKOpenPassDetails(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a1;
  if ((unint64_t)PKCurrentPassbookState() >= 2)
  {
    PKShowAlertForWalletUninstalled(0);
  }
  else
  {
    if (+[PKWalletVisibility isWalletVisible](PKWalletVisibility, "isWalletVisible"))
    {
      v1 = objc_alloc_init(MEMORY[0x1E0CB3998]);
      objc_msgSend(v1, "setScheme:", CFSTR("shoebox"));
      objc_msgSend(v1, "setHost:", CFSTR("card"));
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("/%@/%@"), v8, CFSTR("details"));
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v1, "setPath:", v2);

      objc_msgSend(v1, "URL");
      v3 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v1 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB37A0]), "initWithString:", CFSTR("prefs:root=PASSBOOK"));
      if (objc_msgSend(v8, "length"))
      {
        objc_msgSend(MEMORY[0x1E0CB3500], "alphanumericCharacterSet");
        v4 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "stringByAddingPercentEncodingWithAllowedCharacters:", v4);
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v1, "appendFormat:", CFSTR("&path=%@/%@/%@"), CFSTR("card"), v5, CFSTR("details"));

      }
      objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", v1);
      v3 = objc_claimAutoreleasedReturnValue();
    }
    v6 = (void *)v3;
    objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "openSensitiveURL:withOptions:", v6, 0);

  }
}

void PKShowAlertForWalletUninstalled(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;

  v1 = a1;
  v2 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v3 = MEMORY[0x1E0C9AAB0];
  objc_msgSend(v2, "setObject:forKeyedSubscript:", MEMORY[0x1E0C9AAB0], CFSTR("SBUserNotificationDontDismissOnUnlock"));
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, CFSTR("SBUserNotificationAllowMenuButtonDismissal"));
  PKLocalizedDeletableString(CFSTR("WALLET_UNINSTALLED_ALERT_TITLE"), 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v4, *MEMORY[0x1E0C9B800]);

  PKLocalizedDeletableString(CFSTR("WALLET_UNINSTALLED_ALERT_MESSAGE"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v5, *MEMORY[0x1E0C9B810]);

  PKLocalizedDeletableString(CFSTR("WALLET_UNINSTALLED_SHOW_APP_STORE_BUTTON"), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v6, *MEMORY[0x1E0C9B838]);

  PKLocalizedDeletableString(CFSTR("WALLET_UNINSTALLED_CANCEL_BUTTON"), 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v7, *MEMORY[0x1E0C9B830]);

  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __PKShowAlertForWalletUninstalled_block_invoke;
  v9[3] = &unk_1E2AC1B80;
  v10 = v1;
  v8 = v1;
  +[PKUserNotificationAgent presentNotificationWithParameters:responseHandler:](PKUserNotificationAgent, "presentNotificationWithParameters:responseHandler:", v2, v9);

}

BOOL PKOpenInstallWallet()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v10[1] = *MEMORY[0x1E0C80C00];
  v0 = objc_alloc_init(MEMORY[0x1E0CB3998]);
  objc_msgSend(v0, "setScheme:", CFSTR("itms-apps"));
  objc_msgSend(v0, "setHost:", &stru_1E2ADF4C0);
  objc_msgSend(MEMORY[0x1E0CB39D8], "queryItemWithName:value:", CFSTR("bundleIdentifier"), CFSTR("com.apple.Passbook"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v0, "setQueryItems:", v2);
  objc_msgSend(v0, "URL");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = objc_alloc_init(MEMORY[0x1E0CA5938]);
    objc_msgSend(v4, "setSensitive:", 1);
    v8 = *MEMORY[0x1E0D22D88];
    v9 = MEMORY[0x1E0C9AAB0];
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v9, &v8, 1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setFrontBoardOptions:", v5);

    objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "openURL:configuration:completionHandler:", v3, v4, 0);

  }
  return v3 != 0;
}

void PKBeginInstallWatchWallet(void *a1)
{
  Class (__cdecl *v1)();
  id v2;
  id v3;

  v1 = (Class (__cdecl *)())getNPKCompanionAgentConnectionClass[0];
  v2 = a1;
  v3 = objc_alloc_init(v1());
  objc_msgSend(v3, "beginPairedWatchInstallationOfWalletWithCompletion:", v2);

}

void PKOpenWallet(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;
  _QWORD v5[4];
  id v6;
  uint64_t v7;
  _QWORD v8[2];

  v8[1] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = objc_alloc_init(MEMORY[0x1E0CA5938]);
  v7 = *MEMORY[0x1E0D22D88];
  v8[0] = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v8, &v7, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setFrontBoardOptions:", v3);

  if (+[PKWalletVisibility isWalletVisible](PKWalletVisibility, "isWalletVisible"))
  {
    objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 3221225472;
    v5[2] = __PKOpenWallet_block_invoke;
    v5[3] = &unk_1E2ABE148;
    v6 = v1;
    objc_msgSend(v4, "openApplicationWithBundleIdentifier:configuration:completionHandler:", CFSTR("com.apple.Passbook"), v2, v5);

  }
}

void PKOpenWalletSettings(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;
  uint64_t v9;
  _QWORD v10[2];

  v10[1] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = objc_alloc_init(MEMORY[0x1E0CA5938]);
  v9 = *MEMORY[0x1E0D22D88];
  v10[0] = MEMORY[0x1E0C9AAB0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v10, &v9, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setFrontBoardOptions:", v3);

  objc_msgSend(v2, "setSensitive:", 1);
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("prefs:root=PASSBOOK"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __PKOpenWalletSettings_block_invoke;
  v7[3] = &unk_1E2ABE9A8;
  v8 = v1;
  v6 = v1;
  objc_msgSend(v4, "openURL:configuration:completionHandler:", v5, v2, v7);

}

void PKOpenSensitiveURL(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  NSObject *v8;
  _QWORD v9[4];
  id v10;
  uint8_t buf[8];
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v5 = objc_alloc_init(MEMORY[0x1E0CA5938]);
    v12 = *MEMORY[0x1E0D22D88];
    v13[0] = MEMORY[0x1E0C9AAB0];
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v13, &v12, 1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setFrontBoardOptions:", v6);

    objc_msgSend(v5, "setSensitive:", 1);
    objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = __PKOpenSensitiveURL_block_invoke;
    v9[3] = &unk_1E2ABE9A8;
    v10 = v4;
    objc_msgSend(v7, "openURL:configuration:completionHandler:", v3, v5, v9);

  }
  else
  {
    PKLogFacilityTypeGetObject(0);
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_18FC92000, v8, OS_LOG_TYPE_DEFAULT, "Failed to open nil URL", buf, 2u);
    }

    if (v4)
      (*((void (**)(id, _QWORD))v4 + 2))(v4, 0);
  }

}

void PKOpenPayLaterFinancingPlanDetails(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (v1)
  {
    if (+[PKWalletVisibility isWalletVisible](PKWalletVisibility, "isWalletVisible"))
    {
      v2 = objc_alloc_init(MEMORY[0x1E0CB3998]);
      objc_msgSend(v2, "setScheme:", CFSTR("wallet"));
      objc_msgSend(v2, "setHost:", CFSTR("payLaterFinancingPlan"));
      objc_msgSend(MEMORY[0x1E0CB39D8], "queryItemWithName:value:", CFSTR("transactionIdentifier"), v1);
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      v11[0] = v3;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v11, 1);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v2, "setQueryItems:", v4);

      objc_msgSend(v2, "URL");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v2 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB37A0]), "initWithString:", CFSTR("prefs:root=PASSBOOK&path="));
      objc_msgSend(v2, "appendString:", CFSTR("payLaterFinancingPlan"));
      objc_msgSend(v2, "appendString:", CFSTR("&"));
      objc_msgSend(v2, "appendString:", CFSTR("transactionIdentifier"));
      objc_msgSend(v2, "appendString:", CFSTR("="));
      objc_msgSend(MEMORY[0x1E0CB3500], "URLQueryAllowedCharacterSet");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v1, "stringByAddingPercentEncodingWithAllowedCharacters:", v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v2, "appendString:", v7);
      v8 = (void *)MEMORY[0x1E0C99E98];
      v9 = (void *)objc_msgSend(v2, "copy");
      objc_msgSend(v8, "URLWithString:", v9);
      v5 = (void *)objc_claimAutoreleasedReturnValue();

    }
    if (v5)
    {
      objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "openSensitiveURL:withOptions:", v5, 0);

    }
  }

}

BOOL PKCanShowPayLaterPassItemsForAccount(void *a1)
{
  id v1;
  unint64_t v2;
  _BOOL8 v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v1 = a1;
  v2 = objc_msgSend(v1, "state");
  if (v2 > 5 || ((1 << v2) & 0x29) != 0)
  {
    v3 = 0;
  }
  else if (((1 << v2) & 6) != 0)
  {
    v3 = 1;
  }
  else
  {
    objc_msgSend(v1, "payLaterDetails");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "currentBalance");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "amount");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (v6)
    {
      objc_msgSend(MEMORY[0x1E0CB3598], "zero");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = objc_msgSend(v6, "compare:", v7) != 0;

    }
    else
    {
      v3 = 0;
    }

  }
  return v3;
}

uint64_t PKIsChinaSKU()
{
  if (qword_1ECF21D20 != -1)
    dispatch_once(&qword_1ECF21D20, &__block_literal_global_266);
  return objc_msgSend((id)qword_1ECF21D18, "isEqualToString:", CFSTR("CH"));
}

uint64_t PKIsHandoffClient()
{
  return 0;
}

id PKUniqueDeviceIdentifier()
{
  return (id)MGCopyAnswer();
}

id PKUniqueChipIdentifier()
{
  return (id)MGCopyAnswer();
}

uint64_t PKPassbookUbiquitySwitchIsOnForAccount(void *a1)
{
  id v1;
  int v2;
  unsigned int v3;
  NSObject *v4;
  const __CFString *v5;
  const __CFString *v6;
  int v8;
  id v9;
  __int16 v10;
  const __CFString *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = objc_msgSend(v1, "isEnabledForDataclass:", *MEMORY[0x1E0C8EF28]);
  v3 = objc_msgSend(v1, "isEnabledForDataclass:", *MEMORY[0x1E0C8EF10]);
  PKLogFacilityTypeGetObject(0);
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    if (v2)
      v5 = CFSTR("ON");
    else
      v5 = CFSTR("OFF");
    v8 = 138412546;
    v9 = v1;
    v10 = 2114;
    v11 = v5;
    _os_log_impl(&dword_18FC92000, v4, OS_LOG_TYPE_DEFAULT, "Ubiquity switch for account %@, %{public}@", (uint8_t *)&v8, 0x16u);
  }

  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    if (v3)
      v6 = CFSTR("ON");
    else
      v6 = CFSTR("OFF");
    v8 = 138412546;
    v9 = v1;
    v10 = 2114;
    v11 = v6;
    _os_log_impl(&dword_18FC92000, v4, OS_LOG_TYPE_DEFAULT, "Passbook switch for account %@, %{public}@", (uint8_t *)&v8, 0x16u);
  }

  return v2 & v3;
}

id PKSerialNumber()
{
  return (id)MGCopyAnswer();
}

id PKMLBSerialNumber()
{
  return (id)MGCopyAnswer();
}

id PKHardwarePlatform()
{
  return (id)MGCopyAnswer();
}

id PKProductType()
{
  void *v0;
  NSObject *v1;
  id v2;
  void *v3;
  int v5;
  void *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  PKDeviceInformationOverrideProductType();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  if (v0)
  {
    PKLogFacilityTypeGetObject(0);
    v1 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      v5 = 138412290;
      v6 = v0;
      _os_log_impl(&dword_18FC92000, v1, OS_LOG_TYPE_DEFAULT, "PKProductType(): Using internal override value (%@)", (uint8_t *)&v5, 0xCu);
    }

    v2 = v0;
  }
  else
  {
    v2 = (id)MGCopyAnswer();
  }
  v3 = v2;

  return v3;
}

uint64_t PKCurrentKeybagUUID()
{
  return 0;
}

id PKCurrentUserUUID()
{
  uid_t v0;
  NSObject *v1;
  uint8_t v3[8];
  uuid_t uu;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  memset(uu, 0, sizeof(uu));
  v0 = getuid();
  if (!mbr_uid_to_uuid(v0, uu))
    return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3A28]), "initWithUUIDBytes:", uu);
  PKLogFacilityTypeGetObject(6uLL);
  v1 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_18FC92000, v1, OS_LOG_TYPE_DEFAULT, "Error determining the UUID of the current user.", v3, 2u);
  }

  return 0;
}

uint64_t PKCurrentUserIsGuestUser()
{
  return 0;
}

uint64_t PKCurrentUserIsInSharingMode()
{
  return 0;
}

_QWORD *PKUsernameForUserUUID(_QWORD *a1)
{
  uuid_t v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  if (a1)
  {
    memset(v2, 0, sizeof(v2));
    objc_msgSend(a1, "getUUIDBytes:", v2);
    a1 = getpwuuid(v2);
    if (a1)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithCString:encoding:", *a1, 4);
      a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    }
  }
  return a1;
}

uint64_t PKAltDSIDIsCurrentUser(void *a1)
{
  id v1;
  id v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  if (v1)
  {
    PKCurrentUserAltDSID();
    v2 = (id)objc_claimAutoreleasedReturnValue();
    v3 = v2;
    if (v2)
    {
      if (v2 == v1)
        v4 = 1;
      else
        v4 = objc_msgSend(v2, "isEqualToString:", v1);
    }
    else
    {
      v4 = 0;
    }

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

__CFString *PKCurrentUserAltDSID()
{
  __CFString *v0;
  void *v1;
  void *v2;

  if (qword_1ECF21CA8 != -1)
    dispatch_once(&qword_1ECF21CA8, &__block_literal_global_13);
  if (_MergedGlobals_21)
  {
    v0 = CFSTR("PKStoreDemoCurrentUserAltDSID");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0D00100], "sharedInstance");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "primaryAuthKitAccount");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "altDSIDForAccount:", v2);
    v0 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  return v0;
}

_QWORD *PKUserFullNameForUserUUID(_QWORD *a1)
{
  uuid_t v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  if (a1)
  {
    memset(v2, 0, sizeof(v2));
    objc_msgSend(a1, "getUUIDBytes:", v2);
    a1 = getpwuuid(v2);
    if (a1)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithCString:encoding:", a1[5], 4);
      a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    }
  }
  return a1;
}

id PKAdditionalSupportedNetworks()
{
  id v0;

  if (os_variant_has_internal_ui())
  {
    if (qword_1ECF21D30 != -1)
      dispatch_once(&qword_1ECF21D30, &__block_literal_global_290);
    v0 = (id)qword_1ECF21D28;
  }
  else
  {
    v0 = 0;
  }
  return v0;
}

id PKAdditionalNetworkNameForIndex(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  if (!os_variant_has_internal_ui())
    return 0;
  PKAdditionalSupportedNetworks();
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = (id)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v13 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        objc_msgSend(v2, "objectForKeyedSubscript:", v7, (_QWORD)v12);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = objc_msgSend(v8, "integerValue");

        if (v9 == a1)
        {
          v10 = v7;
          goto LABEL_13;
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v4)
        continue;
      break;
    }
  }
  v10 = 0;
LABEL_13:

  return v10;
}

id PKDeviceSupportedFeatureIdentifiers()
{
  if (qword_1ECF21D38 != -1)
    dispatch_once(&qword_1ECF21D38, &__block_literal_global_293);
  return (id)qword_1ECF21D40;
}

uint64_t PKDeviceSupportsApplicationForFeatureIdentifier(uint64_t result)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;

  if (result)
  {
    v1 = result;
    if (qword_1ECF21D50 != -1)
      dispatch_once(&qword_1ECF21D50, &__block_literal_global_295);
    v2 = (void *)qword_1ECF21D48;
    PKFeatureIdentifierToString(v1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v2, "containsObject:", v3);

    return v4;
  }
  return result;
}

BOOL PKTransactionsUnlimitedForCredentialType(uint64_t a1)
{
  return a1 == 129 || a1 == 138;
}

uint64_t PKMaxPaymentTransactionsForCredentialType(uint64_t a1)
{
  if ((unint64_t)(a1 - 103) > 0x23)
    return 10;
  else
    return qword_1904539E0[a1 - 103];
}

__CFString *PKPaymentMethodTypeToString(uint64_t a1)
{
  __CFString **v1;
  __CFString *result;

  switch(a1)
  {
    case 1000:
      v1 = PKPaymentApplicationTypeTransit;
      goto LABEL_16;
    case 1001:
      v1 = PKPaymentApplicationTypeAccess;
      goto LABEL_16;
    case 1002:
      v1 = PKPaymentApplicationTypeISO18013;
      goto LABEL_16;
    case 1003:
      v1 = PKPaymentApplicationTypeUnifiedAccess;
      goto LABEL_16;
    case 1004:
      v1 = PKPaymentApplicationTypeAliro;
      goto LABEL_16;
    case 1005:
      v1 = PKPaymentApplicationTypeIdentity;
LABEL_16:
      result = *v1;
      break;
    default:
      v1 = PKPaymentApplicationTypeCredit;
      switch(a1)
      {
        case 1:
          v1 = PKPaymentApplicationTypeDebit;
          goto LABEL_16;
        case 2:
          goto LABEL_16;
        case 3:
          v1 = PKPaymentApplicationTypePrePaid;
          goto LABEL_16;
        case 4:
          v1 = PKPaymentApplicationTypeStore;
          goto LABEL_16;
        case 5:
          v1 = PKPaymentApplicationTypeEMoney;
          goto LABEL_16;
        default:
          if (a1 == 100)
          {
            v1 = PKPaymentApplicationTypeEWallet;
            goto LABEL_16;
          }
          result = CFSTR("unknown");
          break;
      }
      break;
  }
  return result;
}

uint64_t PKPaymentMethodTypeIsAccess(uint64_t a1)
{
  return ((unint64_t)(a1 - 1001) < 4) & (0xDu >> ((a1 + 23) & 0xF));
}

BOOL PKPaymentMethodTypeIsIdentityDocument(uint64_t a1)
{
  return a1 == 1002 || a1 == 1005;
}

id PKDisplayablePaymentMethodStringFromType(uint64_t a1)
{
  void *v2;
  __CFString *v3;

  v2 = 0;
  if (a1 > 99)
  {
    switch(a1)
    {
      case 100:
        PKLocalizedAquamanString(CFSTR("PAYMENT_APPLICATION_TYPE_EWALLET"), 0);
        v2 = (void *)objc_claimAutoreleasedReturnValue();
        return v2;
      case 1000:
        v3 = CFSTR("PAYMENT_APPLICATION_TYPE_TRANSIT");
        break;
      case 1001:
        v3 = CFSTR("PAYMENT_APPLICATION_TYPE_ACCESS");
        break;
      default:
        return v2;
    }
LABEL_14:
    PKLocalizedPaymentString(&v3->isa, 0);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    return v2;
  }
  switch(a1)
  {
    case 1:
      v3 = CFSTR("PAYMENT_APPLICATION_TYPE_DEBIT");
      goto LABEL_14;
    case 2:
      v3 = CFSTR("PAYMENT_APPLICATION_TYPE_CREDIT");
      goto LABEL_14;
    case 3:
      v3 = CFSTR("PAYMENT_APPLICATION_TYPE_PREPAID");
      goto LABEL_14;
    case 4:
      v3 = CFSTR("PAYMENT_APPLICATION_TYPE_STORE");
      goto LABEL_14;
    case 5:
      v3 = CFSTR("PAYMENT_APPLICATION_TYPE_EMONEY");
      goto LABEL_14;
    default:
      return v2;
  }
  return v2;
}

uint64_t PKPaymentCredentialTypeForPaymentNetworkName(void *a1)
{
  id v1;
  uint64_t v2;
  void *v4;
  void *v5;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("AmEx")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Bancomat")) & 1) != 0
         || (objc_msgSend(v1, "isEqualToString:", CFSTR("PagoBancomat")) & 1) != 0)
  {
    v2 = 20;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Bancontact")) & 1) != 0)
  {
    v2 = 21;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("CarteBancaire")) & 1) != 0
         || (objc_msgSend(v1, "isEqualToString:", CFSTR("CarteBancaires")) & 1) != 0
         || (objc_msgSend(v1, "isEqualToString:", CFSTR("CartesBancaires")) & 1) != 0)
  {
    v2 = 9;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("ChinaUnionPay")) & 1) != 0)
  {
    v2 = 11;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Dankort")) & 1) != 0)
  {
    v2 = 10;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Discover")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Eftpos")) & 1) != 0)
  {
    v2 = 12;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Electron")) & 1) != 0)
  {
    v2 = 16;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Elo")) & 1) != 0)
  {
    v2 = 112;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Interac")) & 1) != 0)
  {
    v2 = 13;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("mada")) & 1) != 0)
  {
    v2 = 14;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Maestro")) & 1) != 0)
  {
    v2 = 15;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("MasterCard")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("PrivateLabel")) & 1) != 0)
  {
    v2 = 100;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Visa")) & 1) != 0)
  {
    v2 = 4;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("VPay")) & 1) != 0)
  {
    v2 = 17;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("JCB")) & 1) != 0)
  {
    v2 = 6;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("QUICPay")) & 1) != 0)
  {
    v2 = 105;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("iD")) & 1) != 0)
  {
    v2 = 106;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("HID")) & 1) != 0)
  {
    v2 = 107;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SPTCC")) & 1) != 0)
  {
    v2 = 109;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("BMAC")) & 1) != 0)
  {
    v2 = 108;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("TMONEY")) & 1) != 0)
  {
    v2 = 136;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("MOT")) & 1) != 0)
  {
    v2 = 116;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("MOTPioneer")) & 1) != 0)
  {
    v2 = 122;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Barcode")) & 1) != 0)
  {
    v2 = 123;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("girocard")) & 1) != 0)
  {
    v2 = 18;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Mir")) & 1) != 0)
  {
    v2 = 19;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("WAON")) & 1) != 0)
  {
    v2 = 127;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("nanaco")) & 1) != 0)
  {
    v2 = 128;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("AppleBalance")) & 1) != 0)
  {
    v2 = 135;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("PostFinanceAG")) & 1) != 0)
  {
    v2 = 22;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Meeza")) & 1) != 0)
  {
    v2 = 25;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("NAPAS")) & 1) != 0)
  {
    v2 = 26;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("BankAxept")) & 1) != 0)
  {
    v2 = 24;
  }
  else
  {
    PKAdditionalSupportedNetworks();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "valueForKey:", v1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = objc_msgSend(v5, "integerValue");

  }
  return v2;
}

__CFString *PKPaymentNetworkNameForPaymentCredentialType(uint64_t a1)
{
  __CFString **v1;
  __CFString *v2;

  switch(a1)
  {
    case 1:
      v1 = (__CFString **)&PKPaymentNetworkAmex;
      goto LABEL_45;
    case 2:
      v1 = (__CFString **)&PKPaymentNetworkDiscover;
      goto LABEL_45;
    case 3:
      v1 = (__CFString **)&PKPaymentNetworkMasterCard;
      goto LABEL_45;
    case 4:
      v1 = (__CFString **)&PKPaymentNetworkVisa;
      goto LABEL_45;
    case 5:
    case 7:
    case 8:
    case 23:
LABEL_26:
      PKAdditionalNetworkNameForIndex(a1);
      v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
      return v2;
    case 6:
      v1 = (__CFString **)&PKPaymentNetworkJCB;
      goto LABEL_45;
    case 9:
      v1 = (__CFString **)&PKPaymentNetworkCartesBancaires;
      goto LABEL_45;
    case 10:
      v1 = (__CFString **)&PKPaymentNetworkDankort;
      goto LABEL_45;
    case 11:
      v1 = (__CFString **)&PKPaymentNetworkChinaUnionPay;
      goto LABEL_45;
    case 12:
      v1 = (__CFString **)&PKPaymentNetworkEftpos;
      goto LABEL_45;
    case 13:
      v1 = (__CFString **)&PKPaymentNetworkInterac;
      goto LABEL_45;
    case 14:
      v1 = (__CFString **)&PKPaymentNetworkMada;
      goto LABEL_45;
    case 15:
      v1 = (__CFString **)&PKPaymentNetworkMaestro;
      goto LABEL_45;
    case 16:
      v1 = (__CFString **)&PKPaymentNetworkElectron;
      goto LABEL_45;
    case 17:
      v1 = (__CFString **)&PKPaymentNetworkVPay;
      goto LABEL_45;
    case 18:
      v1 = (__CFString **)&PKPaymentNetworkGirocard;
      goto LABEL_45;
    case 19:
      v1 = (__CFString **)&PKPaymentNetworkMir;
      goto LABEL_45;
    case 20:
      v1 = (__CFString **)&PKPaymentNetworkPagoBancomat;
      goto LABEL_45;
    case 21:
      v1 = (__CFString **)&PKPaymentNetworkBancontact;
      goto LABEL_45;
    case 22:
      v1 = (__CFString **)&PKPaymentNetworkPostFinance;
      goto LABEL_45;
    case 24:
      v1 = PKPaymentNetworkBankAxept;
      goto LABEL_45;
    case 25:
      v1 = PKPaymentNetworkMeeza;
      goto LABEL_45;
    case 26:
      v1 = PKPaymentNetworkNAPAS;
LABEL_45:
      v2 = *v1;
      return v2;
    default:
      switch(a1)
      {
        case 100:
          v1 = (__CFString **)&PKPaymentNetworkPrivateLabel;
          goto LABEL_45;
        case 103:
          v1 = (__CFString **)&PKPaymentNetworkSuica;
          goto LABEL_45;
        case 105:
          v1 = (__CFString **)&PKPaymentNetworkQuicPay;
          goto LABEL_45;
        case 106:
          v1 = (__CFString **)&PKPaymentNetworkIDCredit;
          goto LABEL_45;
        case 107:
          v1 = PKPaymentNetworkHID;
          goto LABEL_45;
        case 108:
          v1 = PKPaymentNetworkBMAC;
          goto LABEL_45;
        case 109:
          v1 = PKPaymentNetworkSPTCC;
          goto LABEL_45;
        case 112:
          v1 = (__CFString **)&PKPaymentNetworkElo;
          goto LABEL_45;
        case 113:
          v1 = PKPaymentNetworkCEMVMasterCard;
          goto LABEL_45;
        case 114:
          v1 = PKPaymentNetworkCubicMiFareDESFire;
          goto LABEL_45;
        case 115:
          v1 = PKPaymentNetworkCubicMiFarePlus;
          goto LABEL_45;
        case 116:
          v1 = PKPaymentNetworkMOT;
          goto LABEL_45;
        case 117:
          v1 = PKPaymentNetworkOctopus;
          goto LABEL_45;
        case 122:
          v1 = PKPaymentNetworkMOTPioneer;
          goto LABEL_45;
        case 123:
          v1 = (__CFString **)&PKPaymentNetworkBarcode;
          goto LABEL_45;
        case 127:
          v1 = (__CFString **)&PKPaymentNetworkWaon;
          goto LABEL_45;
        case 128:
          v1 = (__CFString **)&PKPaymentNetworkNanaco;
          goto LABEL_45;
        case 131:
          v1 = PKPaymentNetworkNavigo;
          goto LABEL_45;
        case 136:
          v1 = (__CFString **)&PKPaymentNetworkTmoney;
          goto LABEL_45;
        default:
          goto LABEL_26;
      }
  }
}

id PKDisplayablePaymentNetworkNameForPaymentCredentialType(uint64_t a1)
{
  void *v2;
  __CFString *v3;

  v2 = 0;
  switch(a1)
  {
    case 0:
      return v2;
    case 1:
      v3 = CFSTR("NETWORK_NAME_AMEX");
      goto LABEL_40;
    case 2:
      v3 = CFSTR("NETWORK_NAME_DISCOVER");
      goto LABEL_40;
    case 3:
      v3 = CFSTR("NETWORK_NAME_MASTERCARD");
      goto LABEL_40;
    case 4:
      v3 = CFSTR("NETWORK_NAME_VISA");
      goto LABEL_40;
    case 5:
      v3 = CFSTR("NETWORK_NAME_BANKCARD");
      goto LABEL_40;
    case 6:
      v3 = CFSTR("NETWORK_NAME_JCB");
      goto LABEL_40;
    case 7:
      v3 = CFSTR("NETWORK_NAME_DINERSCLUB");
      goto LABEL_40;
    case 8:
      v3 = CFSTR("NETWORK_NAME_CARTEBLEUE");
      goto LABEL_40;
    case 9:
      v3 = CFSTR("NETWORK_NAME_CARTEBANCAIRES");
      goto LABEL_40;
    case 10:
      v3 = CFSTR("NETWORK_NAME_DANKORT");
      goto LABEL_40;
    case 11:
      v3 = CFSTR("NETWORK_NAME_CHINAUNIONPAY");
      goto LABEL_40;
    case 12:
      v3 = CFSTR("NETWORK_NAME_EFTPOS");
      goto LABEL_40;
    case 13:
      v3 = CFSTR("NETWORK_NAME_INTERAC");
      goto LABEL_40;
    case 14:
      v3 = CFSTR("NETWORK_NAME_MADA");
      goto LABEL_40;
    case 15:
      v3 = CFSTR("NETWORK_NAME_MAESTRO");
      goto LABEL_40;
    case 16:
      v3 = CFSTR("NETWORK_NAME_ELECTRON");
      goto LABEL_40;
    case 17:
      v3 = CFSTR("NETWORK_NAME_VPAY");
      goto LABEL_40;
    case 18:
      v3 = CFSTR("NETWORK_NAME_GIROCARD");
      goto LABEL_40;
    case 19:
      v3 = CFSTR("NETWORK_NAME_MIR");
      goto LABEL_40;
    case 20:
      v3 = CFSTR("NETWORK_NAME_BANCOMAT");
      goto LABEL_40;
    case 21:
      v3 = CFSTR("NETWORK_NAME_BANCONTACT");
      goto LABEL_40;
    case 22:
      v3 = CFSTR("NETWORK_NAME_POSTFINANCE");
      goto LABEL_40;
    case 23:
LABEL_7:
      PKAdditionalNetworkNameForIndex(a1);
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      return v2;
    case 24:
      v3 = CFSTR("NETWORK_NAME_BANKAXEPT");
      goto LABEL_40;
    case 25:
      v3 = CFSTR("NETWORK_NAME_MEEZA");
      goto LABEL_40;
    case 26:
      v3 = CFSTR("NETWORK_NAME_NAPAS");
LABEL_40:
      PKLocalizedPaymentString(&v3->isa, 0);
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    default:
      switch(a1)
      {
        case 100:
          v3 = CFSTR("NETWORK_NAME_PRIVATELABEL");
          goto LABEL_40;
        case 101:
        case 102:
        case 104:
        case 111:
        case 118:
        case 119:
        case 120:
        case 121:
        case 124:
        case 125:
        case 126:
        case 132:
        case 134:
          goto LABEL_7;
        case 103:
          v3 = CFSTR("NETWORK_NAME_SUICA");
          goto LABEL_40;
        case 105:
          v3 = CFSTR("NETWORK_NAME_QUICPAY");
          goto LABEL_40;
        case 106:
          v3 = CFSTR("NETWORK_NAME_ID");
          goto LABEL_40;
        case 107:
          v3 = CFSTR("NETWORK_NAME_HID");
          goto LABEL_40;
        case 108:
        case 109:
        case 110:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 122:
        case 129:
        case 130:
        case 131:
        case 133:
        case 135:
        case 136:
        case 137:
        case 138:
          return v2;
        case 112:
          v3 = CFSTR("NETWORK_NAME_ELO");
          goto LABEL_40;
        case 123:
          PKLocalizedAquamanString(CFSTR("NETWORK_NAME_BARCODE"), 0);
          v2 = (void *)objc_claimAutoreleasedReturnValue();
          break;
        case 127:
          v3 = CFSTR("NETWORK_NAME_WAON");
          goto LABEL_40;
        case 128:
          v3 = CFSTR("NETWORK_NAME_NANACO");
          goto LABEL_40;
        default:
          if (a1 != 301)
            goto LABEL_7;
          break;
      }
      break;
  }
  return v2;
}

