void sub_1D5DF1574(double *a1)
{
  sub_1D5DC37CC(*a1);
}

double sub_1D5DF1598@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 1864);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF15A4(double *a1)
{
  return sub_1D5DC3988(*a1);
}

double sub_1D5DF15C8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 1872);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF15D4(double *a1)
{
  return sub_1D5DC39A4(*a1);
}

double sub_1D5DF15F8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 1880);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1604(double *a1)
{
  return sub_1D5DC39C0(*a1);
}

double sub_1D5DF1628@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 1888);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1634(double *a1)
{
  return sub_1D5DC39DC(*a1);
}

double sub_1D5DF1658@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

uint64_t sub_1D5DF1664(double *a1)
{
  return sub_1D5D8A5F4(*a1);
}

double sub_1D5DF1688@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1694(double *a1)
{
  return sub_1D5D8A3E0(*a1);
}

double sub_1D5DF16B8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF16C4(double *a1)
{
  return sub_1D5D8A354(*a1);
}

double sub_1D5DF16E8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF16F4(double *a1)
{
  return sub_1D5D8A46C(*a1);
}

__n128 sub_1D5DF1718@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 32);
  v3 = *(_OWORD *)(a1 + 48);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1D5DF1724(double *a1)
{
  sub_1D5D8A884(*a1, a1[1], a1[2], a1[3]);
}

double sub_1D5DF174C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 64);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1758(double *a1)
{
  return sub_1D5D8A54C(*a1);
}

double sub_1D5DF177C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 72);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1788(double *a1)
{
  return sub_1D5D8A3C4(*a1);
}

double sub_1D5DF17AC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 80);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF17B8(double *a1)
{
  return sub_1D5D8A338(*a1);
}

double sub_1D5DF17DC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 88);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF17E8(double *a1)
{
  return sub_1D5D8A31C(*a1);
}

uint64_t sub_1D5DF180C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 96);
  return result;
}

_BYTE *sub_1D5DF1818(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 96) = *result;
  return result;
}

double sub_1D5DF1824@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 104);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1830(double *a1)
{
  return sub_1D5D8A290(*a1);
}

double sub_1D5DF1854@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 112);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1860(double *a1)
{
  return sub_1D5D8A258(*a1);
}

double sub_1D5DF1884@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 120);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1890(double *a1)
{
  return sub_1D5D8A2E4(*a1);
}

double sub_1D5DF18B4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 128);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF18C0(double *a1)
{
  return sub_1D5D8A2C8(*a1);
}

double sub_1D5DF18E4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 136);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF18F0(double *a1)
{
  return sub_1D5D8A274(*a1);
}

double sub_1D5DF1914@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 144);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1920(double *a1)
{
  return sub_1D5D8A2AC(*a1);
}

uint64_t sub_1D5DF1944@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 152);
  return result;
}

_BYTE *sub_1D5DF1950(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 152) = *result;
  return result;
}

double sub_1D5DF195C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 312);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1968(double *a1)
{
  return sub_1D5D8A514(*a1);
}

double sub_1D5DF198C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 320);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1998(double *a1)
{
  return sub_1D5D8A488(*a1);
}

double sub_1D5DF19BC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 376);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF19C8(double *a1)
{
  return sub_1D5D8A584(*a1);
}

double sub_1D5DF19EC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 384);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF19F8(double *a1)
{
  return sub_1D5D8A3FC(*a1);
}

double sub_1D5DF1A1C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 392);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1A28(double *a1)
{
  return sub_1D5D8A5D8(*a1);
}

uint64_t sub_1D5DF1A4C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 400);
  return result;
}

_BYTE *sub_1D5DF1A58(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 400) = *result;
  return result;
}

double sub_1D5DF1A64@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 408);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1A70(double *a1)
{
  return sub_1D5D8A5BC(*a1);
}

double sub_1D5DF1A94@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 680);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1AA0(double *a1)
{
  return sub_1D5D8A530(*a1);
}

double sub_1D5DF1AC4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 688);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1AD0(double *a1)
{
  return sub_1D5D8A62C(*a1);
}

double sub_1D5DF1AF4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 696);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1B00(double *a1)
{
  return sub_1D5D8A370(*a1);
}

double sub_1D5DF1B24@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 704);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1B30(double *a1)
{
  return sub_1D5D8A4F8(*a1);
}

uint64_t sub_1D5DF1B54@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 712);
  return result;
}

_BYTE *sub_1D5DF1B60(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 712) = *result;
  return result;
}

double sub_1D5DF1B6C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 720);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1B78(double *a1)
{
  return sub_1D5D8A610(*a1);
}

double sub_1D5DF1B9C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 728);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1BA8(double *a1)
{
  return sub_1D5D8A4DC(*a1);
}

double sub_1D5DF1BCC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 736);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1BD8(double *a1)
{
  return sub_1D5D8A434(*a1);
}

double sub_1D5DF1BFC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 744);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1C08(double *a1)
{
  return sub_1D5D8A300(*a1);
}

double sub_1D5DF1C2C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 752);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1C38(double *a1)
{
  return sub_1D5D8A4C0(*a1);
}

double sub_1D5DF1C5C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 760);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1C68(double *a1)
{
  return sub_1D5D8A3A8(*a1);
}

double sub_1D5DF1C8C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 768);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1C98(double *a1)
{
  return sub_1D5D8A5A0(*a1);
}

double sub_1D5DF1CBC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 776);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1CC8(double *a1)
{
  return sub_1D5D8A38C(*a1);
}

double sub_1D5DF1CEC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 784);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1CF8(double *a1)
{
  return sub_1D5D8A418(*a1);
}

double sub_1D5DF1D1C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 792);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1D28(double *a1)
{
  return sub_1D5D8A450(*a1);
}

double sub_1D5DF1D4C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 800);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1D58(double *a1)
{
  return sub_1D5D8AABC(*a1);
}

double sub_1D5DF1D7C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 808);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1D88(double *a1)
{
  return sub_1D5D8A4A4(*a1);
}

__n128 sub_1D5DF1DAC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 816);
  v3 = *(_OWORD *)(a1 + 832);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1D5DF1DB8(double *a1)
{
  sub_1D5D8A648(*a1, a1[1], a1[2], a1[3]);
}

double sub_1D5DF1DE0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 848);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1DEC(double *a1)
{
  return sub_1D5D8A568(*a1);
}

double sub_1D5DF1E10@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

uint64_t sub_1D5DF1E1C(double *a1)
{
  return sub_1D5D89EF8(*a1);
}

double sub_1D5DF1E40@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1E4C(double *a1)
{
  return sub_1D5D89F14(*a1);
}

uint64_t sub_1D5DF1E70@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 16);
  return result;
}

uint64_t sub_1D5DF1E7C(uint64_t *a1)
{
  return sub_1D5D89D48(*a1);
}

double sub_1D5DF1EA0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1EAC(double *a1)
{
  return sub_1D5D89D10(*a1);
}

double sub_1D5DF1ED0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 32);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1EDC(double *a1)
{
  return sub_1D5D89D2C(*a1);
}

double sub_1D5DF1F00@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 40);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1F0C(double *a1)
{
  return sub_1D5D89CF4(*a1);
}

double sub_1D5DF1F30@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

void sub_1D5DF1F3C(double *a1)
{
  sub_1D5D874F4(*a1);
}

uint64_t sub_1D5DF1F60@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 8);
  return result;
}

_BYTE *sub_1D5DF1F6C(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 8) = *result;
  return result;
}

double sub_1D5DF1F78@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1F84(double *a1)
{
  return sub_1D5D876E4(*a1);
}

uint64_t sub_1D5DF1FA8@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 24);
  return result;
}

_BYTE *sub_1D5DF1FB4(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 24) = *result;
  return result;
}

double sub_1D5DF1FC0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 32);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1FCC(double *a1)
{
  return sub_1D5D872E0(*a1);
}

double sub_1D5DF1FF0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 40);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF1FFC(double *a1)
{
  return sub_1D5D878E4(*a1);
}

double sub_1D5DF2020@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 48);
  *a2 = result;
  return result;
}

void sub_1D5DF202C(double *a1)
{
  sub_1D5D87334(*a1);
}

double sub_1D5DF2050@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 56);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF205C(double *a1)
{
  return sub_1D5D872C4(*a1);
}

double sub_1D5DF2080@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 64);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF208C(double *a1)
{
  return sub_1D5D87700(*a1);
}

double sub_1D5DF20B0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 72);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF20BC(double *a1)
{
  return sub_1D5D872FC(*a1);
}

double sub_1D5DF20E0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 80);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF20EC(double *a1)
{
  return sub_1D5D87318(*a1);
}

double sub_1D5DF2110@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 88);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF211C(double *a1)
{
  return sub_1D5D876C8(*a1);
}

uint64_t sub_1D5DF2140@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 96);
  return result;
}

_BYTE *sub_1D5DF214C(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 96) = *result;
  return result;
}

uint64_t sub_1D5DF2158@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 97);
  return result;
}

_BYTE *sub_1D5DF2164(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 97) = *result;
  return result;
}

uint64_t sub_1D5DF2170@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 98);
  return result;
}

_BYTE *sub_1D5DF217C(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 98) = *result;
  return result;
}

uint64_t sub_1D5DF2188(double *a1)
{
  return sub_1D5D7B178(*a1);
}

uint64_t sub_1D5DF21AC(double *a1)
{
  return sub_1D5D7B124(*a1);
}

double sub_1D5DF21D0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF21DC(double *a1)
{
  return sub_1D5D7B108(*a1);
}

uint64_t sub_1D5DF2200(double *a1)
{
  return sub_1D5D7B0EC(*a1);
}

uint64_t sub_1D5DF2224(double *a1)
{
  return sub_1D5D7B140(*a1);
}

uint64_t sub_1D5DF2248(double *a1)
{
  return sub_1D5D7B15C(*a1);
}

_BYTE *sub_1D5DF226C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_BYTE *sub_1D5DF2278(_BYTE *result, _BYTE *a2)
{
  *a2 = *result;
  return result;
}

double sub_1D5DF2284@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2290(double *a1)
{
  return sub_1D5D8A204(*a1);
}

double sub_1D5DF22B4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF22C0(double *a1)
{
  return sub_1D5D8A220(*a1);
}

uint64_t sub_1D5DF22E4@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 48);
  return result;
}

_BYTE *sub_1D5DF22F0(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 48) = *result;
  return result;
}

double sub_1D5DF22FC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 80);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2308(double *a1)
{
  return sub_1D5D8A1E8(*a1);
}

double sub_1D5DF232C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 88);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2338(double *a1)
{
  return sub_1D5D89FBC(*a1);
}

double sub_1D5DF235C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 96);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2368(double *a1)
{
  return sub_1D5D8A23C(*a1);
}

double sub_1D5DF238C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 104);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2398(double *a1)
{
  return sub_1D5D8A1CC(*a1);
}

uint64_t sub_1D5DF23BC@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 112);
  return result;
}

_BYTE *sub_1D5DF23C8(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 112) = *result;
  return result;
}

double sub_1D5DF23D4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 120);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF23E0(double *a1)
{
  return sub_1D5D89F4C(*a1);
}

double sub_1D5DF2404@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 128);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2410(double *a1)
{
  return sub_1D5D89F84(*a1);
}

double sub_1D5DF2434@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 136);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2440(double *a1)
{
  return sub_1D5D89F30(*a1);
}

double sub_1D5DF2464@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 144);
  *a2 = result;
  return result;
}

void sub_1D5DF2470(double *a1)
{
  sub_1D5D89FF4(*a1);
}

double sub_1D5DF2494@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 152);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF24A0(double *a1)
{
  return sub_1D5D89FD8(*a1);
}

uint64_t sub_1D5DF24C4@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 160);
  return result;
}

_BYTE *sub_1D5DF24D0(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 160) = *result;
  return result;
}

double sub_1D5DF24DC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 168);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF24E8(double *a1)
{
  return sub_1D5D89FA0(*a1);
}

double sub_1D5DF250C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 176);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2518(double *a1)
{
  return sub_1D5D89F68(*a1);
}

double sub_1D5DF253C@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

uint64_t sub_1D5DF2548(double *a1)
{
  return sub_1D5D87E50(*a1);
}

double sub_1D5DF256C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2578(double *a1)
{
  return sub_1D5D87E74(*a1);
}

double sub_1D5DF259C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF25A8(double *a1)
{
  return sub_1D5D88060(*a1);
}

double sub_1D5DF25CC@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

uint64_t sub_1D5DF25D8(double *a1)
{
  return sub_1D5D89CD8(*a1);
}

double sub_1D5DF25FC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2608(double *a1)
{
  return sub_1D5D89CBC(*a1);
}

double sub_1D5DF262C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2638(double *a1)
{
  return sub_1D5D89C84(*a1);
}

double sub_1D5DF265C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2668(double *a1)
{
  return sub_1D5D89CA0(*a1);
}

double sub_1D5DF268C@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

uint64_t sub_1D5DF2698(double *a1)
{
  return sub_1D5D89A88(*a1);
}

double sub_1D5DF26BC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

void sub_1D5DF26C8(double *a1)
{
  sub_1D5D89AA4(*a1);
}

double sub_1D5DF26EC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

void sub_1D5DF26F8(double *a1)
{
  sub_1D5D898C4(*a1);
}

double sub_1D5DF271C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 56);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2728(double *a1)
{
  return sub_1D5D89C68(*a1);
}

uint64_t sub_1D5DF274C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 64);
  return result;
}

uint64_t sub_1D5DF2758(uint64_t *a1)
{
  return sub_1D5D898A8(*a1);
}

__n128 sub_1D5DF277C@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1D5DF2788(double *a1)
{
  return sub_1D5D89870(*a1, a1[1]);
}

__n128 sub_1D5DF27AC@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[1];
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF27B8(double *a1)
{
  return sub_1D5D8988C(*a1, a1[1]);
}

uint64_t sub_1D5DF27DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D5DF27E8()
{
  unint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_1D5D7BA38(v0);
}

_BYTE *sub_1D5DF2810@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_BYTE *sub_1D5DF281C(_BYTE *result, _BYTE *a2)
{
  *a2 = *result;
  return result;
}

double sub_1D5DF2828@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2834(double *a1)
{
  return sub_1D5DC5D3C(*a1);
}

uint64_t sub_1D5DF2858@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 16);
  return result;
}

uint64_t sub_1D5DF2864(uint64_t *a1)
{
  return sub_1D5DC5D58(*a1);
}

double sub_1D5DF2888@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF2894(double *a1)
{
  return sub_1D5DC5F18(*a1);
}

double sub_1D5DF28B8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 32);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF28C4(double *a1)
{
  return sub_1D5DC5F34(*a1);
}

uint64_t sub_1D5DF28E8@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 40);
  return result;
}

_BYTE *sub_1D5DF28F4(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 40) = *result;
  return result;
}

double sub_1D5DF2900@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 48);
  *a2 = result;
  return result;
}

uint64_t sub_1D5DF290C(double *a1)
{
  return sub_1D5DC5F50(*a1);
}

uint64_t sub_1D5DF2930@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 56);
  return result;
}

_BYTE *sub_1D5DF293C(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 56) = *result;
  return result;
}

void sub_1D5DF2948(double *a1)
{
  sub_1D5DC4610(*a1);
}

uint64_t sub_1D5DF296C(double *a1)
{
  return sub_1D5DC47E8(*a1);
}

uint64_t sub_1D5DF2990(double *a1)
{
  return sub_1D5DC4804(*a1);
}

__n128 sub_1D5DF29B4@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1D5DF29C0(double *a1)
{
  return sub_1D5DC4820(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF29E8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 32);
  v3 = *(_OWORD *)(a1 + 48);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D5DF29F4(double *a1)
{
  return sub_1D5DC483C(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2A1C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 80);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1D5DF2A28(double *a1)
{
  sub_1D5DC4858(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2A50@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 96);
  v3 = *(_OWORD *)(a1 + 112);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D5DF2A5C(double *a1)
{
  return sub_1D5DC4A5C(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2A84@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 128);
  v3 = *(_OWORD *)(a1 + 144);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1D5DF2A90(double *a1)
{
  sub_1D5DC4A78(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2AB8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 160);
  v3 = *(_OWORD *)(a1 + 176);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1D5DF2AC4(double *a1)
{
  sub_1D5DC4C7C(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2AEC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 192);
  v3 = *(_OWORD *)(a1 + 208);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D5DF2AF8(double *a1)
{
  return sub_1D5DC4E80(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2B20@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 224);
  v3 = *(_OWORD *)(a1 + 240);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D5DF2B2C(double *a1)
{
  return sub_1D5DC4E9C(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2B54@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 256);
  v3 = *(_OWORD *)(a1 + 272);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D5DF2B60(double *a1)
{
  return sub_1D5DC4EB8(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2B88@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 288);
  v3 = *(_OWORD *)(a1 + 304);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D5DF2B94(double *a1)
{
  return sub_1D5DC4ED4(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2BBC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 320);
  v3 = *(_OWORD *)(a1 + 336);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D5DF2BC8(double *a1)
{
  return sub_1D5DC4EF0(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2BF0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 352);
  v3 = *(_OWORD *)(a1 + 368);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D5DF2BFC(double *a1)
{
  return sub_1D5DC5104(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2C24@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 384);
  v3 = *(_OWORD *)(a1 + 400);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1D5DF2C30(double *a1)
{
  sub_1D5DC5318(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2C58@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 416);
  v3 = *(_OWORD *)(a1 + 432);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1D5DF2C64(double *a1)
{
  sub_1D5DC5518(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2C8C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 448);
  v3 = *(_OWORD *)(a1 + 464);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D5DF2C98(double *a1)
{
  return sub_1D5DC5718(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2CC0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 480);
  v3 = *(_OWORD *)(a1 + 496);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D5DF2CCC(double *a1)
{
  return sub_1D5DC5928(*a1, a1[1], a1[2], a1[3]);
}

__n128 sub_1D5DF2CF4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a1 + 512);
  v3 = *(_OWORD *)(a1 + 528);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_1D5DF2D00(double *a1)
{
  sub_1D5DC5B40(*a1, a1[1], a1[2], a1[3]);
}

uint64_t _s13ConfigurationVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13ConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  v9 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v9;
  v10 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v10;
  v11 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v11;
  v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v12;
  v13 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v13;
  v14 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v14;
  v15 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v15;
  v16 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v16;
  v17 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v17;
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v18 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v18;
  v19 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v19;
  v20 = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = v20;
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  v21 = *(_OWORD *)(a2 + 416);
  v22 = *(_OWORD *)(a2 + 432);
  v23 = *(_OWORD *)(a2 + 448);
  *(_WORD *)(a1 + 464) = *(_WORD *)(a2 + 464);
  *(_OWORD *)(a1 + 432) = v22;
  *(_OWORD *)(a1 + 448) = v23;
  *(_OWORD *)(a1 + 416) = v21;
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  v24 = *(_OWORD *)(a2 + 480);
  v25 = *(_OWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 480) = v24;
  *(_OWORD *)(a1 + 496) = v25;
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  v26 = *(_OWORD *)(a2 + 528);
  v27 = *(_OWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 528) = v26;
  *(_OWORD *)(a1 + 544) = v27;
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  v28 = *(_OWORD *)(a2 + 576);
  v29 = *(_OWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 576) = v28;
  *(_OWORD *)(a1 + 592) = v29;
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  v30 = *(_OWORD *)(a2 + 624);
  v31 = *(_OWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 624) = v30;
  *(_OWORD *)(a1 + 640) = v31;
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  v32 = *(_OWORD *)(a2 + 672);
  v33 = *(_OWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 672) = v32;
  *(_OWORD *)(a1 + 688) = v33;
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  v34 = *(_OWORD *)(a2 + 720);
  v35 = *(_OWORD *)(a2 + 736);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 720) = v34;
  *(_OWORD *)(a1 + 736) = v35;
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  v36 = *(_OWORD *)(a2 + 776);
  v37 = *(_OWORD *)(a2 + 792);
  *(_QWORD *)(a1 + 808) = *(_QWORD *)(a2 + 808);
  *(_OWORD *)(a1 + 776) = v36;
  *(_OWORD *)(a1 + 792) = v37;
  *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
  *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
  v38 = *(_OWORD *)(a2 + 848);
  v39 = *(_OWORD *)(a2 + 864);
  v40 = *(_OWORD *)(a2 + 880);
  *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
  *(_OWORD *)(a1 + 864) = v39;
  *(_OWORD *)(a1 + 880) = v40;
  *(_OWORD *)(a1 + 848) = v38;
  *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
  *(_BYTE *)(a1 + 912) = *(_BYTE *)(a2 + 912);
  *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
  *(_BYTE *)(a1 + 928) = *(_BYTE *)(a2 + 928);
  *(_QWORD *)(a1 + 936) = *(_QWORD *)(a2 + 936);
  *(_BYTE *)(a1 + 944) = *(_BYTE *)(a2 + 944);
  *(_BYTE *)(a1 + 945) = *(_BYTE *)(a2 + 945);
  *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
  v41 = *(_OWORD *)(a2 + 976);
  *(_OWORD *)(a1 + 960) = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 976) = v41;
  *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
  v42 = *(_OWORD *)(a2 + 1000);
  v43 = *(_OWORD *)(a2 + 1016);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  *(_OWORD *)(a1 + 1000) = v42;
  *(_OWORD *)(a1 + 1016) = v43;
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  v44 = *(_OWORD *)(a2 + 1048);
  v45 = *(_OWORD *)(a2 + 1064);
  *(_QWORD *)(a1 + 1080) = *(_QWORD *)(a2 + 1080);
  *(_OWORD *)(a1 + 1048) = v44;
  *(_OWORD *)(a1 + 1064) = v45;
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  v46 = *(_OWORD *)(a2 + 1096);
  v47 = *(_OWORD *)(a2 + 1112);
  *(_QWORD *)(a1 + 1128) = *(_QWORD *)(a2 + 1128);
  *(_OWORD *)(a1 + 1112) = v47;
  *(_OWORD *)(a1 + 1096) = v46;
  *(_QWORD *)(a1 + 1136) = *(_QWORD *)(a2 + 1136);
  v48 = *(_OWORD *)(a2 + 1144);
  v49 = *(_OWORD *)(a2 + 1160);
  *(_QWORD *)(a1 + 1176) = *(_QWORD *)(a2 + 1176);
  *(_OWORD *)(a1 + 1160) = v49;
  *(_OWORD *)(a1 + 1144) = v48;
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  v50 = *(_OWORD *)(a2 + 1192);
  v51 = *(_OWORD *)(a2 + 1208);
  *(_QWORD *)(a1 + 1224) = *(_QWORD *)(a2 + 1224);
  *(_OWORD *)(a1 + 1208) = v51;
  *(_OWORD *)(a1 + 1192) = v50;
  *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
  v52 = *(_OWORD *)(a2 + 1240);
  v53 = *(_OWORD *)(a2 + 1256);
  *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
  *(_OWORD *)(a1 + 1256) = v53;
  *(_OWORD *)(a1 + 1240) = v52;
  *(_QWORD *)(a1 + 1280) = *(_QWORD *)(a2 + 1280);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  v54 = *(_OWORD *)(a2 + 1296);
  v55 = *(_OWORD *)(a2 + 1312);
  *(_QWORD *)(a1 + 1328) = *(_QWORD *)(a2 + 1328);
  *(_OWORD *)(a1 + 1312) = v55;
  *(_OWORD *)(a1 + 1296) = v54;
  *(_QWORD *)(a1 + 1336) = *(_QWORD *)(a2 + 1336);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_QWORD *)(a1 + 1360) = *(_QWORD *)(a2 + 1360);
  v56 = *(_OWORD *)(a2 + 1368);
  v57 = *(_OWORD *)(a2 + 1384);
  v58 = *(_OWORD *)(a2 + 1400);
  *(_WORD *)(a1 + 1416) = *(_WORD *)(a2 + 1416);
  *(_OWORD *)(a1 + 1400) = v58;
  *(_OWORD *)(a1 + 1384) = v57;
  *(_OWORD *)(a1 + 1368) = v56;
  *(_OWORD *)(a1 + 1424) = *(_OWORD *)(a2 + 1424);
  *(_BYTE *)(a1 + 1440) = *(_BYTE *)(a2 + 1440);
  *(_QWORD *)(a1 + 1448) = *(_QWORD *)(a2 + 1448);
  *(_OWORD *)(a1 + 1456) = *(_OWORD *)(a2 + 1456);
  v59 = *(_OWORD *)(a2 + 1472);
  v60 = *(_OWORD *)(a2 + 1488);
  *(_QWORD *)(a1 + 1504) = *(_QWORD *)(a2 + 1504);
  *(_OWORD *)(a1 + 1488) = v60;
  *(_OWORD *)(a1 + 1472) = v59;
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  v61 = *(_OWORD *)(a2 + 1520);
  v62 = *(_OWORD *)(a2 + 1536);
  *(_QWORD *)(a1 + 1552) = *(_QWORD *)(a2 + 1552);
  *(_OWORD *)(a1 + 1536) = v62;
  *(_OWORD *)(a1 + 1520) = v61;
  *(_QWORD *)(a1 + 1560) = *(_QWORD *)(a2 + 1560);
  v63 = *(_OWORD *)(a2 + 1568);
  v64 = *(_OWORD *)(a2 + 1584);
  *(_QWORD *)(a1 + 1600) = *(_QWORD *)(a2 + 1600);
  *(_OWORD *)(a1 + 1584) = v64;
  *(_OWORD *)(a1 + 1568) = v63;
  *(_QWORD *)(a1 + 1608) = *(_QWORD *)(a2 + 1608);
  v65 = *(_OWORD *)(a2 + 1616);
  v66 = *(_OWORD *)(a2 + 1632);
  *(_QWORD *)(a1 + 1648) = *(_QWORD *)(a2 + 1648);
  *(_OWORD *)(a1 + 1632) = v66;
  *(_OWORD *)(a1 + 1616) = v65;
  *(_QWORD *)(a1 + 1656) = *(_QWORD *)(a2 + 1656);
  v67 = *(_OWORD *)(a2 + 1664);
  v68 = *(_OWORD *)(a2 + 1680);
  *(_QWORD *)(a1 + 1696) = *(_QWORD *)(a2 + 1696);
  *(_OWORD *)(a1 + 1680) = v68;
  *(_OWORD *)(a1 + 1664) = v67;
  *(_QWORD *)(a1 + 1704) = *(_QWORD *)(a2 + 1704);
  v69 = *(_OWORD *)(a2 + 1712);
  v70 = *(_OWORD *)(a2 + 1728);
  *(_QWORD *)(a1 + 1744) = *(_QWORD *)(a2 + 1744);
  *(_OWORD *)(a1 + 1728) = v70;
  *(_OWORD *)(a1 + 1712) = v69;
  *(_QWORD *)(a1 + 1752) = *(_QWORD *)(a2 + 1752);
  *(_QWORD *)(a1 + 1760) = *(_QWORD *)(a2 + 1760);
  v71 = *(_OWORD *)(a2 + 1768);
  v72 = *(_OWORD *)(a2 + 1784);
  *(_QWORD *)(a1 + 1800) = *(_QWORD *)(a2 + 1800);
  *(_OWORD *)(a1 + 1784) = v72;
  *(_OWORD *)(a1 + 1768) = v71;
  *(_QWORD *)(a1 + 1808) = *(_QWORD *)(a2 + 1808);
  *(_QWORD *)(a1 + 1816) = *(_QWORD *)(a2 + 1816);
  *(_QWORD *)(a1 + 1824) = *(_QWORD *)(a2 + 1824);
  *(_QWORD *)(a1 + 1832) = *(_QWORD *)(a2 + 1832);
  v73 = *(_OWORD *)(a2 + 1840);
  v74 = *(_OWORD *)(a2 + 1856);
  v75 = *(_OWORD *)(a2 + 1872);
  *(_WORD *)(a1 + 1888) = *(_WORD *)(a2 + 1888);
  *(_OWORD *)(a1 + 1872) = v75;
  *(_OWORD *)(a1 + 1856) = v74;
  *(_OWORD *)(a1 + 1840) = v73;
  *(_QWORD *)(a1 + 1896) = *(_QWORD *)(a2 + 1896);
  *(_OWORD *)(a1 + 1904) = *(_OWORD *)(a2 + 1904);
  *(_OWORD *)(a1 + 1920) = *(_OWORD *)(a2 + 1920);
  memcpy((void *)(a1 + 1936), (const void *)(a2 + 1936), 0x3EBuLL);
  *(_OWORD *)(a1 + 2960) = *(_OWORD *)(a2 + 2960);
  *(_OWORD *)(a1 + 2976) = *(_OWORD *)(a2 + 2976);
  *(_OWORD *)(a1 + 2992) = *(_OWORD *)(a2 + 2992);
  *(_QWORD *)(a1 + 3008) = *(_QWORD *)(a2 + 3008);
  *(_OWORD *)(a1 + 2944) = *(_OWORD *)(a2 + 2944);
  *(_QWORD *)(a1 + 3016) = *(_QWORD *)(a2 + 3016);
  *(_QWORD *)(a1 + 3024) = *(_QWORD *)(a2 + 3024);
  memcpy((void *)(a1 + 3032), (const void *)(a2 + 3032), 0x238uLL);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13ConfigurationVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v3 = a2 + 40;
  v4 = (_BYTE *)(a2 + 2352);
  v5 = a2 + 928;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = (_OWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(v3 + 304);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(v3 + 312);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(v3 + 320);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(v3 + 328);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(v3 + 336);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(v3 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(v3 + 352);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(v3 + 360);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(v3 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(v3 + 376);
  v8 = *(_OWORD *)(v3 + 392);
  v9 = *(_OWORD *)(v3 + 408);
  *(_WORD *)(a1 + 464) = *(_WORD *)(v3 + 424);
  *(_OWORD *)(a1 + 432) = v8;
  *(_OWORD *)(a1 + 448) = v9;
  *(_OWORD *)(a1 + 416) = v7;
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(v3 + 432);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(v3 + 440);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(v3 + 448);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(v3 + 456);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(v3 + 464);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(v3 + 472);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(v3 + 480);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(v3 + 488);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(v3 + 496);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(v3 + 504);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(v3 + 512);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(v3 + 520);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(v3 + 528);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(v3 + 536);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(v3 + 544);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(v3 + 552);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(v3 + 560);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(v3 + 568);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(v3 + 576);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(v3 + 584);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(v3 + 592);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(v3 + 600);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(v3 + 608);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(v3 + 616);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(v3 + 624);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(v3 + 632);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(v3 + 640);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(v3 + 648);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(v3 + 656);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(v3 + 664);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(v3 + 672);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(v3 + 680);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(v3 + 688);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(v3 + 696);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(v3 + 704);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(v3 + 712);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(v3 + 720);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(v3 + 728);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(v3 + 736);
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(v3 + 744);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(v3 + 752);
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(v3 + 760);
  *(_QWORD *)(a1 + 808) = *(_QWORD *)(v3 + 768);
  *(_QWORD *)(a1 + 816) = *(_QWORD *)(v3 + 776);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(v3 + 784);
  *(_QWORD *)(a1 + 832) = *(_QWORD *)(v3 + 792);
  *(_QWORD *)(a1 + 840) = *(_QWORD *)(v3 + 800);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(_OWORD *)(v3 + 808);
  v11 = *(_OWORD *)(v3 + 824);
  v12 = *(_OWORD *)(v3 + 840);
  *(_WORD *)(a1 + 896) = *(_WORD *)(v3 + 856);
  *(_OWORD *)(a1 + 864) = v11;
  *(_OWORD *)(a1 + 880) = v12;
  *(_OWORD *)(a1 + 848) = v10;
  *(_QWORD *)(a1 + 904) = *(_QWORD *)(v3 + 864);
  *(_BYTE *)(a1 + 912) = *(_BYTE *)(v3 + 872);
  *(_QWORD *)(a1 + 920) = *(_QWORD *)(v3 + 880);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 928) = *(_BYTE *)(v3 + 888);
  *(_QWORD *)(a1 + 936) = *(_QWORD *)(v3 + 896);
  *(_BYTE *)(a1 + 944) = *(_BYTE *)(v5 + 16);
  *(_BYTE *)(a1 + 945) = *(_BYTE *)(v5 + 17);
  *(_QWORD *)(a1 + 952) = *(_QWORD *)(v3 + 912);
  *(_QWORD *)(a1 + 960) = *(_QWORD *)(v3 + 920);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(v3 + 928);
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(v3 + 936);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(v3 + 944);
  *(_QWORD *)(a1 + 992) = *(_QWORD *)(v3 + 952);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(v3 + 960);
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(v3 + 968);
  *(_QWORD *)(a1 + 1016) = *(_QWORD *)(v3 + 976);
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(v3 + 984);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(v3 + 992);
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(v3 + 1000);
  *(_QWORD *)(a1 + 1048) = *(_QWORD *)(v3 + 1008);
  *(_QWORD *)(a1 + 1056) = *(_QWORD *)(v3 + 1016);
  *(_QWORD *)(a1 + 1064) = *(_QWORD *)(v3 + 1024);
  *(_QWORD *)(a1 + 1072) = *(_QWORD *)(v3 + 1032);
  *(_QWORD *)(a1 + 1080) = *(_QWORD *)(v3 + 1040);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(v3 + 1048);
  *(_QWORD *)(a1 + 1096) = *(_QWORD *)(v3 + 1056);
  *(_QWORD *)(a1 + 1104) = *(_QWORD *)(v3 + 1064);
  *(_QWORD *)(a1 + 1112) = *(_QWORD *)(v3 + 1072);
  *(_QWORD *)(a1 + 1120) = *(_QWORD *)(v3 + 1080);
  *(_QWORD *)(a1 + 1128) = *(_QWORD *)(v3 + 1088);
  *(_QWORD *)(a1 + 1136) = *(_QWORD *)(v3 + 1096);
  *(_QWORD *)(a1 + 1144) = *(_QWORD *)(v3 + 1104);
  *(_QWORD *)(a1 + 1152) = *(_QWORD *)(v3 + 1112);
  *(_QWORD *)(a1 + 1160) = *(_QWORD *)(v3 + 1120);
  *(_QWORD *)(a1 + 1168) = *(_QWORD *)(v3 + 1128);
  *(_QWORD *)(a1 + 1176) = *(_QWORD *)(v3 + 1136);
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(v3 + 1144);
  *(_QWORD *)(a1 + 1192) = *(_QWORD *)(v3 + 1152);
  *(_QWORD *)(a1 + 1200) = *(_QWORD *)(v3 + 1160);
  *(_QWORD *)(a1 + 1208) = *(_QWORD *)(v3 + 1168);
  *(_QWORD *)(a1 + 1216) = *(_QWORD *)(v3 + 1176);
  *(_QWORD *)(a1 + 1224) = *(_QWORD *)(v3 + 1184);
  *(_QWORD *)(a1 + 1232) = *(_QWORD *)(v3 + 1192);
  *(_QWORD *)(a1 + 1240) = *(_QWORD *)(v3 + 1200);
  *(_QWORD *)(a1 + 1248) = *(_QWORD *)(v3 + 1208);
  *(_QWORD *)(a1 + 1256) = *(_QWORD *)(v3 + 1216);
  *(_QWORD *)(a1 + 1264) = *(_QWORD *)(v3 + 1224);
  *(_QWORD *)(a1 + 1272) = *(_QWORD *)(v3 + 1232);
  *(_QWORD *)(a1 + 1280) = *(_QWORD *)(v3 + 1240);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(v3 + 1248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1296) = *(_QWORD *)(v3 + 1256);
  *(_QWORD *)(a1 + 1304) = *(_QWORD *)(v3 + 1264);
  *(_QWORD *)(a1 + 1312) = *(_QWORD *)(v3 + 1272);
  *(_QWORD *)(a1 + 1320) = *(_QWORD *)(v3 + 1280);
  *(_QWORD *)(a1 + 1328) = *(_QWORD *)(v3 + 1288);
  *(_QWORD *)(a1 + 1336) = *(_QWORD *)(v3 + 1296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1344) = *(_QWORD *)(v3 + 1304);
  *(_QWORD *)(a1 + 1352) = *(_QWORD *)(v3 + 1312);
  *(_QWORD *)(a1 + 1360) = *(_QWORD *)(v3 + 1320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(_OWORD *)(v3 + 1328);
  v14 = *(_OWORD *)(v3 + 1344);
  v15 = *(_OWORD *)(v3 + 1360);
  *(_WORD *)(a1 + 1416) = *(_WORD *)(v3 + 1376);
  v6[85] = v15;
  v6[84] = v14;
  v6[83] = v13;
  *(_QWORD *)(a1 + 1424) = *(_QWORD *)(v3 + 1384);
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(v3 + 1392);
  *(_BYTE *)(a1 + 1440) = *(_BYTE *)(v3 + 1400);
  *(_QWORD *)(a1 + 1448) = *(_QWORD *)(v3 + 1408);
  *(_QWORD *)(a1 + 1456) = *(_QWORD *)(v3 + 1416);
  *(_QWORD *)(a1 + 1464) = *(_QWORD *)(v3 + 1424);
  *(_QWORD *)(a1 + 1472) = *(_QWORD *)(v3 + 1432);
  *(_QWORD *)(a1 + 1480) = *(_QWORD *)(v3 + 1440);
  *(_QWORD *)(a1 + 1488) = *(_QWORD *)(v3 + 1448);
  *(_QWORD *)(a1 + 1496) = *(_QWORD *)(v3 + 1456);
  *(_QWORD *)(a1 + 1504) = *(_QWORD *)(v3 + 1464);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(v3 + 1472);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(v3 + 1480);
  *(_QWORD *)(a1 + 1528) = *(_QWORD *)(v3 + 1488);
  *(_QWORD *)(a1 + 1536) = *(_QWORD *)(v3 + 1496);
  *(_QWORD *)(a1 + 1544) = *(_QWORD *)(v3 + 1504);
  *(_QWORD *)(a1 + 1552) = *(_QWORD *)(v3 + 1512);
  *(_QWORD *)(a1 + 1560) = *(_QWORD *)(v3 + 1520);
  *(_QWORD *)(a1 + 1568) = *(_QWORD *)(v3 + 1528);
  *(_QWORD *)(a1 + 1576) = *(_QWORD *)(v3 + 1536);
  *(_QWORD *)(a1 + 1584) = *(_QWORD *)(v3 + 1544);
  *(_QWORD *)(a1 + 1592) = *(_QWORD *)(v3 + 1552);
  *(_QWORD *)(a1 + 1600) = *(_QWORD *)(v3 + 1560);
  *(_QWORD *)(a1 + 1608) = *(_QWORD *)(v3 + 1568);
  *(_QWORD *)(a1 + 1616) = *(_QWORD *)(v3 + 1576);
  *(_QWORD *)(a1 + 1624) = *(_QWORD *)(v3 + 1584);
  *(_QWORD *)(a1 + 1632) = *(_QWORD *)(v3 + 1592);
  *(_QWORD *)(a1 + 1640) = *(_QWORD *)(v3 + 1600);
  *(_QWORD *)(a1 + 1648) = *(_QWORD *)(v3 + 1608);
  *(_QWORD *)(a1 + 1656) = *(_QWORD *)(v3 + 1616);
  *(_QWORD *)(a1 + 1664) = *(_QWORD *)(v3 + 1624);
  *(_QWORD *)(a1 + 1672) = *(_QWORD *)(v3 + 1632);
  *(_QWORD *)(a1 + 1680) = *(_QWORD *)(v3 + 1640);
  *(_QWORD *)(a1 + 1688) = *(_QWORD *)(v3 + 1648);
  *(_QWORD *)(a1 + 1696) = *(_QWORD *)(v3 + 1656);
  *(_QWORD *)(a1 + 1704) = *(_QWORD *)(v3 + 1664);
  *(_QWORD *)(a1 + 1712) = *(_QWORD *)(v3 + 1672);
  *(_QWORD *)(a1 + 1720) = *(_QWORD *)(v3 + 1680);
  *(_QWORD *)(a1 + 1728) = *(_QWORD *)(v3 + 1688);
  *(_QWORD *)(a1 + 1736) = *(_QWORD *)(v3 + 1696);
  *(_QWORD *)(a1 + 1744) = *(_QWORD *)(v3 + 1704);
  *(_QWORD *)(a1 + 1752) = *(_QWORD *)(v3 + 1712);
  *(_QWORD *)(a1 + 1760) = *(_QWORD *)(v3 + 1720);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1768) = *(_QWORD *)(v3 + 1728);
  *(_QWORD *)(a1 + 1776) = *(_QWORD *)(v3 + 1736);
  *(_QWORD *)(a1 + 1784) = *(_QWORD *)(v3 + 1744);
  *(_QWORD *)(a1 + 1792) = *(_QWORD *)(v3 + 1752);
  *(_QWORD *)(a1 + 1800) = *(_QWORD *)(v3 + 1760);
  *(_QWORD *)(a1 + 1808) = *(_QWORD *)(v3 + 1768);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1816) = *(_QWORD *)(v3 + 1776);
  *(_QWORD *)(a1 + 1824) = *(_QWORD *)(v3 + 1784);
  *(_QWORD *)(a1 + 1832) = *(_QWORD *)(v3 + 1792);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = *(_OWORD *)(v3 + 1800);
  v17 = *(_OWORD *)(v3 + 1816);
  v18 = *(_OWORD *)(v3 + 1832);
  *(_WORD *)(a1 + 1888) = *(_WORD *)(v3 + 1848);
  *(_OWORD *)(a1 + 1872) = v18;
  *(_OWORD *)(a1 + 1856) = v17;
  *(_OWORD *)(a1 + 1840) = v16;
  *(_QWORD *)(a1 + 1896) = *(_QWORD *)(v3 + 1856);
  *(_QWORD *)(a1 + 1904) = *(_QWORD *)(v3 + 1864);
  *(_QWORD *)(a1 + 1912) = *(_QWORD *)(v3 + 1872);
  *(_QWORD *)(a1 + 1920) = *(_QWORD *)(v3 + 1880);
  *(_QWORD *)(a1 + 1928) = *(_QWORD *)(v3 + 1888);
  *(_QWORD *)(a1 + 1936) = *(_QWORD *)(v3 + 1896);
  *(_QWORD *)(a1 + 1944) = *(_QWORD *)(v3 + 1904);
  *(_QWORD *)(a1 + 1952) = *(_QWORD *)(v3 + 1912);
  *(_QWORD *)(a1 + 1960) = *(_QWORD *)(v3 + 1920);
  *(_QWORD *)(a1 + 1968) = *(_QWORD *)(v3 + 1928);
  *(_QWORD *)(a1 + 1976) = *(_QWORD *)(v3 + 1936);
  *(_QWORD *)(a1 + 1984) = *(_QWORD *)(v3 + 1944);
  *(_QWORD *)(a1 + 1992) = *(_QWORD *)(v3 + 1952);
  *(_QWORD *)(a1 + 2000) = *(_QWORD *)(v3 + 1960);
  *(_QWORD *)(a1 + 2008) = *(_QWORD *)(v3 + 1968);
  *(_QWORD *)(a1 + 2016) = *(_QWORD *)(v3 + 1976);
  *(_QWORD *)(a1 + 2024) = *(_QWORD *)(v3 + 1984);
  *(_BYTE *)(a1 + 2032) = *(_BYTE *)(v3 + 1992);
  *(_QWORD *)(a1 + 2040) = *(_QWORD *)(v3 + 2000);
  *(_QWORD *)(a1 + 2048) = *(_QWORD *)(v3 + 2008);
  *(_QWORD *)(a1 + 2056) = *(_QWORD *)(v3 + 2016);
  *(_QWORD *)(a1 + 2064) = *(_QWORD *)(v3 + 2024);
  *(_QWORD *)(a1 + 2072) = *(_QWORD *)(v3 + 2032);
  *(_QWORD *)(a1 + 2080) = *(_QWORD *)(v3 + 2040);
  *(_BYTE *)(a1 + 2088) = *(_BYTE *)(v3 + 2048);
  *(_QWORD *)(a1 + 2096) = *(_QWORD *)(v3 + 2056);
  *(_QWORD *)(a1 + 2104) = *(_QWORD *)(v3 + 2064);
  *(_QWORD *)(a1 + 2112) = *(_QWORD *)(v3 + 2072);
  *(_QWORD *)(a1 + 2120) = *(_QWORD *)(v3 + 2080);
  *(_QWORD *)(a1 + 2128) = *(_QWORD *)(v3 + 2088);
  *(_QWORD *)(a1 + 2136) = *(_QWORD *)(v3 + 2096);
  *(_QWORD *)(a1 + 2144) = *(_QWORD *)(v3 + 2104);
  *(_BYTE *)(a1 + 2152) = *(_BYTE *)(v3 + 2112);
  *(_QWORD *)(a1 + 2160) = *(_QWORD *)(v3 + 2120);
  *(_BYTE *)(a1 + 2168) = *(_BYTE *)(v3 + 2128);
  *(_QWORD *)(a1 + 2176) = *(_QWORD *)(v3 + 2136);
  *(_QWORD *)(a1 + 2184) = *(_QWORD *)(v3 + 2144);
  *(_QWORD *)(a1 + 2192) = *(_QWORD *)(v3 + 2152);
  *(_QWORD *)(a1 + 2200) = *(_QWORD *)(v3 + 2160);
  *(_QWORD *)(a1 + 2208) = *(_QWORD *)(v3 + 2168);
  *(_QWORD *)(a1 + 2216) = *(_QWORD *)(v3 + 2176);
  *(_QWORD *)(a1 + 2224) = *(_QWORD *)(v3 + 2184);
  *(_QWORD *)(a1 + 2232) = *(_QWORD *)(v3 + 2192);
  *(_BYTE *)(a1 + 2240) = *(_BYTE *)(v3 + 2200);
  *(_BYTE *)(a1 + 2241) = *(_BYTE *)(v3 + 2201);
  *(_BYTE *)(a1 + 2242) = *(_BYTE *)(v3 + 2202);
  *(_QWORD *)(a1 + 2248) = *(_QWORD *)(v3 + 2208);
  *(_QWORD *)(a1 + 2256) = *(_QWORD *)(v3 + 2216);
  *(_QWORD *)(a1 + 2264) = *(_QWORD *)(v3 + 2224);
  *(_QWORD *)(a1 + 2272) = *(_QWORD *)(v3 + 2232);
  *(_QWORD *)(a1 + 2280) = *(_QWORD *)(v3 + 2240);
  *(_QWORD *)(a1 + 2288) = *(_QWORD *)(v3 + 2248);
  *(_QWORD *)(a1 + 2296) = *(_QWORD *)(v3 + 2256);
  *(_QWORD *)(a1 + 2304) = *(_QWORD *)(v3 + 2264);
  *(_QWORD *)(a1 + 2312) = *(_QWORD *)(v3 + 2272);
  *(_QWORD *)(a1 + 2320) = *(_QWORD *)(v3 + 2280);
  *(_QWORD *)(a1 + 2328) = *(_QWORD *)(v3 + 2288);
  *(_BYTE *)(a1 + 2336) = *(_BYTE *)(v3 + 2296);
  *(_QWORD *)(a1 + 2344) = *(_QWORD *)(v3 + 2304);
  *(_BYTE *)(a1 + 2352) = *(_BYTE *)(v3 + 2312);
  *(_QWORD *)(a1 + 2360) = *(_QWORD *)(v3 + 2320);
  *(_QWORD *)(a1 + 2368) = *(_QWORD *)(v3 + 2328);
  *(_QWORD *)(a1 + 2376) = *(_QWORD *)(v3 + 2336);
  *(_QWORD *)(a1 + 2384) = *(_QWORD *)(v3 + 2344);
  *(_QWORD *)(a1 + 2392) = *(_QWORD *)(v3 + 2352);
  *(_BYTE *)(a1 + 2400) = v4[48];
  *(_QWORD *)(a1 + 2408) = *(_QWORD *)(v3 + 2368);
  *(_QWORD *)(a1 + 2416) = *(_QWORD *)(v3 + 2376);
  *(_QWORD *)(a1 + 2424) = *(_QWORD *)(v3 + 2384);
  *(_QWORD *)(a1 + 2432) = *(_QWORD *)(v3 + 2392);
  *(_QWORD *)(a1 + 2440) = *(_QWORD *)(v3 + 2400);
  *(_QWORD *)(a1 + 2448) = *(_QWORD *)(v3 + 2408);
  *(_QWORD *)(a1 + 2456) = *(_QWORD *)(v3 + 2416);
  *(_BYTE *)(a1 + 2464) = v4[112];
  *(_QWORD *)(a1 + 2472) = *(_QWORD *)(v3 + 2432);
  *(_QWORD *)(a1 + 2480) = *(_QWORD *)(v3 + 2440);
  *(_QWORD *)(a1 + 2488) = *(_QWORD *)(v3 + 2448);
  *(_QWORD *)(a1 + 2496) = *(_QWORD *)(v3 + 2456);
  *(_QWORD *)(a1 + 2504) = *(_QWORD *)(v3 + 2464);
  *(_BYTE *)(a1 + 2512) = v4[160];
  *(_QWORD *)(a1 + 2520) = *(_QWORD *)(v3 + 2480);
  *(_QWORD *)(a1 + 2528) = *(_QWORD *)(v3 + 2488);
  *(_QWORD *)(a1 + 2536) = *(_QWORD *)(v3 + 2496);
  *(_QWORD *)(a1 + 2544) = *(_QWORD *)(v3 + 2504);
  *(_QWORD *)(a1 + 2552) = *(_QWORD *)(v3 + 2512);
  *(_QWORD *)(a1 + 2560) = *(_QWORD *)(v3 + 2520);
  *(_QWORD *)(a1 + 2568) = *(_QWORD *)(v3 + 2528);
  *(_QWORD *)(a1 + 2576) = *(_QWORD *)(v3 + 2536);
  *(_QWORD *)(a1 + 2584) = *(_QWORD *)(v3 + 2544);
  *(_QWORD *)(a1 + 2592) = *(_QWORD *)(v3 + 2552);
  *(_QWORD *)(a1 + 2600) = *(_QWORD *)(v3 + 2560);
  *(_QWORD *)(a1 + 2608) = *(_QWORD *)(v3 + 2568);
  *(_QWORD *)(a1 + 2616) = *(_QWORD *)(v3 + 2576);
  *(_QWORD *)(a1 + 2624) = *(_QWORD *)(v3 + 2584);
  *(_QWORD *)(a1 + 2632) = *(_QWORD *)(v3 + 2592);
  *(_QWORD *)(a1 + 2640) = *(_QWORD *)(v3 + 2600);
  *(_BYTE *)(a1 + 2648) = *(_BYTE *)(v3 + 2608);
  *(_QWORD *)(a1 + 2656) = *(_QWORD *)(v3 + 2616);
  *(_QWORD *)(a1 + 2664) = *(_QWORD *)(v3 + 2624);
  *(_QWORD *)(a1 + 2672) = *(_QWORD *)(v3 + 2632);
  *(_QWORD *)(a1 + 2680) = *(_QWORD *)(v3 + 2640);
  *(_QWORD *)(a1 + 2688) = *(_QWORD *)(v3 + 2648);
  *(_QWORD *)(a1 + 2696) = *(_QWORD *)(v3 + 2656);
  *(_QWORD *)(a1 + 2704) = *(_QWORD *)(v3 + 2664);
  *(_QWORD *)(a1 + 2712) = *(_QWORD *)(v3 + 2672);
  *(_QWORD *)(a1 + 2720) = *(_QWORD *)(v3 + 2680);
  *(_QWORD *)(a1 + 2728) = *(_QWORD *)(v3 + 2688);
  *(_QWORD *)(a1 + 2736) = *(_QWORD *)(v3 + 2696);
  *(_QWORD *)(a1 + 2744) = *(_QWORD *)(v3 + 2704);
  *(_QWORD *)(a1 + 2752) = *(_QWORD *)(v3 + 2712);
  *(_QWORD *)(a1 + 2760) = *(_QWORD *)(v3 + 2720);
  *(_QWORD *)(a1 + 2768) = *(_QWORD *)(v3 + 2728);
  *(_QWORD *)(a1 + 2776) = *(_QWORD *)(v3 + 2736);
  *(_QWORD *)(a1 + 2784) = *(_QWORD *)(v3 + 2744);
  *(_QWORD *)(a1 + 2792) = *(_QWORD *)(v3 + 2752);
  *(_QWORD *)(a1 + 2800) = *(_QWORD *)(v3 + 2760);
  *(_QWORD *)(a1 + 2808) = *(_QWORD *)(v3 + 2768);
  *(_QWORD *)(a1 + 2816) = *(_QWORD *)(v3 + 2776);
  *(_QWORD *)(a1 + 2824) = *(_QWORD *)(v3 + 2784);
  *(_QWORD *)(a1 + 2832) = *(_QWORD *)(v3 + 2792);
  *(_QWORD *)(a1 + 2840) = *(_QWORD *)(v3 + 2800);
  *(_BYTE *)(a1 + 2848) = *(_BYTE *)(v3 + 2808);
  *(_QWORD *)(a1 + 2856) = *(_QWORD *)(v3 + 2816);
  *(_BYTE *)(a1 + 2864) = *(_BYTE *)(v3 + 2824);
  *(_QWORD *)(a1 + 2872) = *(_QWORD *)(v3 + 2832);
  *(_QWORD *)(a1 + 2880) = *(_QWORD *)(v3 + 2840);
  *(_QWORD *)(a1 + 2888) = *(_QWORD *)(v3 + 2848);
  *(_QWORD *)(a1 + 2896) = *(_QWORD *)(v3 + 2856);
  *(_QWORD *)(a1 + 2904) = *(_QWORD *)(v3 + 2864);
  *(_QWORD *)(a1 + 2912) = *(_QWORD *)(v3 + 2872);
  *(_QWORD *)(a1 + 2920) = *(_QWORD *)(v3 + 2880);
  *(_QWORD *)(a1 + 2928) = *(_QWORD *)(v3 + 2888);
  *(_BYTE *)(a1 + 2936) = *(_BYTE *)(v3 + 2896);
  *(_BYTE *)(a1 + 2937) = *(_BYTE *)(v3 + 2897);
  *(_BYTE *)(a1 + 2938) = *(_BYTE *)(v3 + 2898);
  *(_QWORD *)(a1 + 2944) = *(_QWORD *)(v3 + 2904);
  *(_QWORD *)(a1 + 2952) = *(_QWORD *)(v3 + 2912);
  *(_QWORD *)(a1 + 2960) = *(_QWORD *)(v3 + 2920);
  *(_QWORD *)(a1 + 2968) = *(_QWORD *)(v3 + 2928);
  *(_QWORD *)(a1 + 2976) = *(_QWORD *)(v3 + 2936);
  *(_QWORD *)(a1 + 2984) = *(_QWORD *)(v3 + 2944);
  *(_QWORD *)(a1 + 2992) = *(_QWORD *)(v3 + 2952);
  *(_QWORD *)(a1 + 3000) = *(_QWORD *)(v3 + 2960);
  *(_QWORD *)(a1 + 3008) = *(_QWORD *)(v3 + 2968);
  *(_QWORD *)(a1 + 3016) = *(_QWORD *)(v3 + 2976);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 3024) = *(_QWORD *)(v3 + 2984);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 3032) = *(_QWORD *)(v3 + 2992);
  *(_QWORD *)(a1 + 3040) = *(_QWORD *)(v3 + 3000);
  *(_QWORD *)(a1 + 3048) = *(_QWORD *)(v3 + 3008);
  *(_QWORD *)(a1 + 3056) = *(_QWORD *)(v3 + 3016);
  *(_QWORD *)(a1 + 3064) = *(_QWORD *)(v3 + 3024);
  *(_QWORD *)(a1 + 3072) = *(_QWORD *)(v3 + 3032);
  *(_QWORD *)(a1 + 3080) = *(_QWORD *)(v3 + 3040);
  *(_QWORD *)(a1 + 3088) = *(_QWORD *)(v3 + 3048);
  *(_QWORD *)(a1 + 3096) = *(_QWORD *)(v3 + 3056);
  *(_QWORD *)(a1 + 3104) = *(_QWORD *)(v3 + 3064);
  *(_QWORD *)(a1 + 3112) = *(_QWORD *)(v3 + 3072);
  *(_QWORD *)(a1 + 3120) = *(_QWORD *)(v3 + 3080);
  *(_QWORD *)(a1 + 3128) = *(_QWORD *)(v3 + 3088);
  *(_QWORD *)(a1 + 3136) = *(_QWORD *)(v3 + 3096);
  *(_QWORD *)(a1 + 3144) = *(_QWORD *)(v3 + 3104);
  *(_QWORD *)(a1 + 3152) = *(_QWORD *)(v3 + 3112);
  *(_QWORD *)(a1 + 3160) = *(_QWORD *)(v3 + 3120);
  *(_QWORD *)(a1 + 3168) = *(_QWORD *)(v3 + 3128);
  *(_QWORD *)(a1 + 3176) = *(_QWORD *)(v3 + 3136);
  *(_QWORD *)(a1 + 3184) = *(_QWORD *)(v3 + 3144);
  *(_QWORD *)(a1 + 3192) = *(_QWORD *)(v3 + 3152);
  *(_QWORD *)(a1 + 3200) = *(_QWORD *)(v3 + 3160);
  *(_QWORD *)(a1 + 3208) = *(_QWORD *)(v3 + 3168);
  *(_QWORD *)(a1 + 3216) = *(_QWORD *)(v3 + 3176);
  *(_QWORD *)(a1 + 3224) = *(_QWORD *)(v3 + 3184);
  *(_QWORD *)(a1 + 3232) = *(_QWORD *)(v3 + 3192);
  *(_QWORD *)(a1 + 3240) = *(_QWORD *)(v3 + 3200);
  *(_QWORD *)(a1 + 3248) = *(_QWORD *)(v3 + 3208);
  *(_QWORD *)(a1 + 3256) = *(_QWORD *)(v3 + 3216);
  *(_QWORD *)(a1 + 3264) = *(_QWORD *)(v3 + 3224);
  *(_QWORD *)(a1 + 3272) = *(_QWORD *)(v3 + 3232);
  *(_QWORD *)(a1 + 3280) = *(_QWORD *)(v3 + 3240);
  *(_QWORD *)(a1 + 3288) = *(_QWORD *)(v3 + 3248);
  *(_QWORD *)(a1 + 3296) = *(_QWORD *)(v3 + 3256);
  *(_QWORD *)(a1 + 3304) = *(_QWORD *)(v3 + 3264);
  *(_QWORD *)(a1 + 3312) = *(_QWORD *)(v3 + 3272);
  *(_QWORD *)(a1 + 3320) = *(_QWORD *)(v3 + 3280);
  *(_QWORD *)(a1 + 3328) = *(_QWORD *)(v3 + 3288);
  *(_QWORD *)(a1 + 3336) = *(_QWORD *)(v3 + 3296);
  *(_QWORD *)(a1 + 3344) = *(_QWORD *)(v3 + 3304);
  *(_QWORD *)(a1 + 3352) = *(_QWORD *)(v3 + 3312);
  *(_QWORD *)(a1 + 3360) = *(_QWORD *)(v3 + 3320);
  *(_QWORD *)(a1 + 3368) = *(_QWORD *)(v3 + 3328);
  *(_QWORD *)(a1 + 3376) = *(_QWORD *)(v3 + 3336);
  *(_QWORD *)(a1 + 3384) = *(_QWORD *)(v3 + 3344);
  *(_QWORD *)(a1 + 3392) = *(_QWORD *)(v3 + 3352);
  *(_QWORD *)(a1 + 3400) = *(_QWORD *)(v3 + 3360);
  *(_QWORD *)(a1 + 3408) = *(_QWORD *)(v3 + 3368);
  *(_QWORD *)(a1 + 3416) = *(_QWORD *)(v3 + 3376);
  *(_QWORD *)(a1 + 3424) = *(_QWORD *)(v3 + 3384);
  *(_QWORD *)(a1 + 3432) = *(_QWORD *)(v3 + 3392);
  *(_QWORD *)(a1 + 3440) = *(_QWORD *)(v3 + 3400);
  *(_QWORD *)(a1 + 3448) = *(_QWORD *)(v3 + 3408);
  *(_QWORD *)(a1 + 3456) = *(_QWORD *)(v3 + 3416);
  *(_QWORD *)(a1 + 3464) = *(_QWORD *)(v3 + 3424);
  *(_QWORD *)(a1 + 3472) = *(_QWORD *)(v3 + 3432);
  *(_QWORD *)(a1 + 3480) = *(_QWORD *)(v3 + 3440);
  *(_QWORD *)(a1 + 3488) = *(_QWORD *)(v3 + 3448);
  *(_QWORD *)(a1 + 3496) = *(_QWORD *)(v3 + 3456);
  *(_QWORD *)(a1 + 3504) = *(_QWORD *)(v3 + 3464);
  *(_QWORD *)(a1 + 3512) = *(_QWORD *)(v3 + 3472);
  *(_QWORD *)(a1 + 3520) = *(_QWORD *)(v3 + 3480);
  *(_QWORD *)(a1 + 3528) = *(_QWORD *)(v3 + 3488);
  *(_QWORD *)(a1 + 3536) = *(_QWORD *)(v3 + 3496);
  *(_QWORD *)(a1 + 3544) = *(_QWORD *)(v3 + 3504);
  *(_QWORD *)(a1 + 3552) = *(_QWORD *)(v3 + 3512);
  *(_QWORD *)(a1 + 3560) = *(_QWORD *)(v3 + 3520);
  *(_QWORD *)(a1 + 3568) = *(_QWORD *)(v3 + 3528);
  *(_QWORD *)(a1 + 3576) = *(_QWORD *)(v3 + 3536);
  *(_QWORD *)(a1 + 3584) = *(_QWORD *)(v3 + 3544);
  *(_QWORD *)(a1 + 3592) = *(_QWORD *)(v3 + 3552);
  return a1;
}

void *__swift_memcpy3600_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xE10uLL);
}

uint64_t _s13ConfigurationVwta(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v4 = (_BYTE *)(a2 + 2352);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = a2 + 928;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = (_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = (_OWORD *)(a1 + 40);
  v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v10 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v10;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  v12 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v12;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v13 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v13;
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  v14 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v14;
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  v15 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v16;
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_WORD *)(a1 + 464) = *(_WORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  v17 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v17;
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  v18 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v18;
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  v19 = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 592) = v19;
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  v20 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = v20;
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  v21 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v21;
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  v22 = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 736) = v22;
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  v23 = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 800) = v23;
  *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
  *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
  swift_bridgeObjectRelease();
  v24 = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 848) = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 864) = v24;
  *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
  *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
  *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
  *(_BYTE *)(a1 + 912) = *(_BYTE *)(a2 + 912);
  *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 928) = *(_BYTE *)(a2 + 928);
  *(_QWORD *)(a1 + 936) = *(_QWORD *)(a2 + 936);
  *(_BYTE *)(a1 + 944) = *(_BYTE *)(v5 + 16);
  *(_BYTE *)(a1 + 945) = *(_BYTE *)(v5 + 17);
  *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
  *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
  *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  v25 = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 1024) = v25;
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  *(_QWORD *)(a1 + 1048) = *(_QWORD *)(a2 + 1048);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_QWORD *)(a1 + 1096) = *(_QWORD *)(a2 + 1096);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
  *(_QWORD *)(a1 + 1136) = *(_QWORD *)(a2 + 1136);
  *(_QWORD *)(a1 + 1144) = *(_QWORD *)(a2 + 1144);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_QWORD *)(a1 + 1192) = *(_QWORD *)(a2 + 1192);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
  *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
  *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
  *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
  *(_OWORD *)(a1 + 1264) = *(_OWORD *)(a2 + 1264);
  *(_QWORD *)(a1 + 1280) = *(_QWORD *)(a2 + 1280);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  *(_QWORD *)(a1 + 1328) = *(_QWORD *)(a2 + 1328);
  *(_QWORD *)(a1 + 1336) = *(_QWORD *)(a2 + 1336);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1344) = *(_QWORD *)(a2 + 1344);
  *(_QWORD *)(a1 + 1352) = *(_QWORD *)(a2 + 1352);
  *(_QWORD *)(a1 + 1360) = *(_QWORD *)(a2 + 1360);
  swift_bridgeObjectRelease();
  v7[83] = v6[83];
  v7[84] = v6[84];
  v7[85] = v6[85];
  *(_WORD *)(a1 + 1416) = *(_WORD *)(a2 + 1416);
  *(_OWORD *)(a1 + 1424) = *(_OWORD *)(a2 + 1424);
  *(_BYTE *)(a1 + 1440) = *(_BYTE *)(a2 + 1440);
  *(_QWORD *)(a1 + 1448) = *(_QWORD *)(a2 + 1448);
  *(_QWORD *)(a1 + 1456) = *(_QWORD *)(a2 + 1456);
  *(_QWORD *)(a1 + 1464) = *(_QWORD *)(a2 + 1464);
  *(_OWORD *)(a1 + 1472) = *(_OWORD *)(a2 + 1472);
  *(_OWORD *)(a1 + 1488) = *(_OWORD *)(a2 + 1488);
  *(_QWORD *)(a1 + 1504) = *(_QWORD *)(a2 + 1504);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  *(_OWORD *)(a1 + 1520) = *(_OWORD *)(a2 + 1520);
  *(_OWORD *)(a1 + 1536) = *(_OWORD *)(a2 + 1536);
  *(_QWORD *)(a1 + 1552) = *(_QWORD *)(a2 + 1552);
  *(_QWORD *)(a1 + 1560) = *(_QWORD *)(a2 + 1560);
  *(_OWORD *)(a1 + 1568) = *(_OWORD *)(a2 + 1568);
  *(_OWORD *)(a1 + 1584) = *(_OWORD *)(a2 + 1584);
  *(_QWORD *)(a1 + 1600) = *(_QWORD *)(a2 + 1600);
  *(_QWORD *)(a1 + 1608) = *(_QWORD *)(a2 + 1608);
  *(_OWORD *)(a1 + 1616) = *(_OWORD *)(a2 + 1616);
  *(_OWORD *)(a1 + 1632) = *(_OWORD *)(a2 + 1632);
  *(_QWORD *)(a1 + 1648) = *(_QWORD *)(a2 + 1648);
  *(_QWORD *)(a1 + 1656) = *(_QWORD *)(a2 + 1656);
  *(_OWORD *)(a1 + 1664) = *(_OWORD *)(a2 + 1664);
  *(_OWORD *)(a1 + 1680) = *(_OWORD *)(a2 + 1680);
  *(_QWORD *)(a1 + 1696) = *(_QWORD *)(a2 + 1696);
  *(_QWORD *)(a1 + 1704) = *(_QWORD *)(a2 + 1704);
  *(_OWORD *)(a1 + 1712) = *(_OWORD *)(a2 + 1712);
  *(_OWORD *)(a1 + 1728) = *(_OWORD *)(a2 + 1728);
  *(_OWORD *)(a1 + 1744) = *(_OWORD *)(a2 + 1744);
  *(_QWORD *)(a1 + 1760) = *(_QWORD *)(a2 + 1760);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1768) = *(_QWORD *)(a2 + 1768);
  *(_OWORD *)(a1 + 1776) = *(_OWORD *)(a2 + 1776);
  *(_OWORD *)(a1 + 1792) = *(_OWORD *)(a2 + 1792);
  *(_QWORD *)(a1 + 1808) = *(_QWORD *)(a2 + 1808);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1816) = *(_QWORD *)(a2 + 1816);
  *(_QWORD *)(a1 + 1824) = *(_QWORD *)(a2 + 1824);
  *(_QWORD *)(a1 + 1832) = *(_QWORD *)(a2 + 1832);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1840) = *(_OWORD *)(a2 + 1840);
  *(_OWORD *)(a1 + 1856) = *(_OWORD *)(a2 + 1856);
  *(_OWORD *)(a1 + 1872) = *(_OWORD *)(a2 + 1872);
  *(_WORD *)(a1 + 1888) = *(_WORD *)(a2 + 1888);
  *(_QWORD *)(a1 + 1896) = *(_QWORD *)(a2 + 1896);
  *(_OWORD *)(a1 + 1904) = *(_OWORD *)(a2 + 1904);
  *(_OWORD *)(a1 + 1920) = *(_OWORD *)(a2 + 1920);
  *(_OWORD *)(a1 + 1936) = *(_OWORD *)(a2 + 1936);
  *(_OWORD *)(a1 + 1952) = *(_OWORD *)(a2 + 1952);
  *(_OWORD *)(a1 + 1968) = *(_OWORD *)(a2 + 1968);
  *(_OWORD *)(a1 + 1984) = *(_OWORD *)(a2 + 1984);
  *(_OWORD *)(a1 + 2000) = *(_OWORD *)(a2 + 2000);
  *(_OWORD *)(a1 + 2016) = *(_OWORD *)(a2 + 2016);
  *(_BYTE *)(a1 + 2032) = *(_BYTE *)(a2 + 2032);
  *(_QWORD *)(a1 + 2040) = *(_QWORD *)(a2 + 2040);
  *(_OWORD *)(a1 + 2048) = *(_OWORD *)(a2 + 2048);
  *(_OWORD *)(a1 + 2064) = *(_OWORD *)(a2 + 2064);
  *(_QWORD *)(a1 + 2080) = *(_QWORD *)(a2 + 2080);
  *(_BYTE *)(a1 + 2088) = *(_BYTE *)(a2 + 2088);
  *(_OWORD *)(a1 + 2096) = *(_OWORD *)(a2 + 2096);
  *(_QWORD *)(a1 + 2112) = *(_QWORD *)(a2 + 2112);
  *(_QWORD *)(a1 + 2120) = *(_QWORD *)(a2 + 2120);
  *(_OWORD *)(a1 + 2128) = *(_OWORD *)(a2 + 2128);
  *(_QWORD *)(a1 + 2144) = *(_QWORD *)(a2 + 2144);
  *(_BYTE *)(a1 + 2152) = *(_BYTE *)(a2 + 2152);
  *(_QWORD *)(a1 + 2160) = *(_QWORD *)(a2 + 2160);
  *(_BYTE *)(a1 + 2168) = *(_BYTE *)(a2 + 2168);
  *(_OWORD *)(a1 + 2176) = *(_OWORD *)(a2 + 2176);
  *(_OWORD *)(a1 + 2192) = *(_OWORD *)(a2 + 2192);
  *(_OWORD *)(a1 + 2208) = *(_OWORD *)(a2 + 2208);
  *(_OWORD *)(a1 + 2224) = *(_OWORD *)(a2 + 2224);
  *(_BYTE *)(a1 + 2240) = *(_BYTE *)(a2 + 2240);
  *(_BYTE *)(a1 + 2241) = *(_BYTE *)(a2 + 2241);
  *(_BYTE *)(a1 + 2242) = *(_BYTE *)(a2 + 2242);
  *(_QWORD *)(a1 + 2248) = *(_QWORD *)(a2 + 2248);
  *(_OWORD *)(a1 + 2256) = *(_OWORD *)(a2 + 2256);
  *(_OWORD *)(a1 + 2272) = *(_OWORD *)(a2 + 2272);
  *(_OWORD *)(a1 + 2288) = *(_OWORD *)(a2 + 2288);
  *(_OWORD *)(a1 + 2304) = *(_OWORD *)(a2 + 2304);
  *(_OWORD *)(a1 + 2320) = *(_OWORD *)(a2 + 2320);
  *(_BYTE *)(a1 + 2336) = *(_BYTE *)(a2 + 2336);
  *(_QWORD *)(a1 + 2344) = *(_QWORD *)(a2 + 2344);
  *(_BYTE *)(a1 + 2352) = *(_BYTE *)(a2 + 2352);
  *(_QWORD *)(a1 + 2360) = *(_QWORD *)(a2 + 2360);
  *(_OWORD *)(a1 + 2368) = *(_OWORD *)(a2 + 2368);
  *(_OWORD *)(a1 + 2384) = *(_OWORD *)(a2 + 2384);
  *(_BYTE *)(a1 + 2400) = v4[48];
  *(_QWORD *)(a1 + 2408) = *(_QWORD *)(a2 + 2408);
  *(_OWORD *)(a1 + 2416) = *(_OWORD *)(a2 + 2416);
  *(_OWORD *)(a1 + 2432) = *(_OWORD *)(a2 + 2432);
  *(_OWORD *)(a1 + 2448) = *(_OWORD *)(a2 + 2448);
  *(_BYTE *)(a1 + 2464) = v4[112];
  *(_QWORD *)(a1 + 2472) = *(_QWORD *)(a2 + 2472);
  *(_OWORD *)(a1 + 2480) = *(_OWORD *)(a2 + 2480);
  *(_OWORD *)(a1 + 2496) = *(_OWORD *)(a2 + 2496);
  *(_BYTE *)(a1 + 2512) = v4[160];
  *(_QWORD *)(a1 + 2520) = *(_QWORD *)(a2 + 2520);
  *(_OWORD *)(a1 + 2528) = *(_OWORD *)(a2 + 2528);
  *(_OWORD *)(a1 + 2544) = *(_OWORD *)(a2 + 2544);
  *(_OWORD *)(a1 + 2560) = *(_OWORD *)(a2 + 2560);
  *(_OWORD *)(a1 + 2576) = *(_OWORD *)(a2 + 2576);
  *(_OWORD *)(a1 + 2592) = *(_OWORD *)(a2 + 2592);
  *(_OWORD *)(a1 + 2608) = *(_OWORD *)(a2 + 2608);
  *(_OWORD *)(a1 + 2624) = *(_OWORD *)(a2 + 2624);
  *(_QWORD *)(a1 + 2640) = *(_QWORD *)(a2 + 2640);
  *(_BYTE *)(a1 + 2648) = *(_BYTE *)(a2 + 2648);
  *(_OWORD *)(a1 + 2656) = *(_OWORD *)(a2 + 2656);
  *(_OWORD *)(a1 + 2672) = *(_OWORD *)(a2 + 2672);
  *(_OWORD *)(a1 + 2688) = *(_OWORD *)(a2 + 2688);
  *(_OWORD *)(a1 + 2704) = *(_OWORD *)(a2 + 2704);
  *(_OWORD *)(a1 + 2720) = *(_OWORD *)(a2 + 2720);
  *(_OWORD *)(a1 + 2736) = *(_OWORD *)(a2 + 2736);
  *(_OWORD *)(a1 + 2752) = *(_OWORD *)(a2 + 2752);
  *(_OWORD *)(a1 + 2768) = *(_OWORD *)(a2 + 2768);
  *(_OWORD *)(a1 + 2784) = *(_OWORD *)(a2 + 2784);
  *(_OWORD *)(a1 + 2800) = *(_OWORD *)(a2 + 2800);
  *(_OWORD *)(a1 + 2816) = *(_OWORD *)(a2 + 2816);
  *(_OWORD *)(a1 + 2832) = *(_OWORD *)(a2 + 2832);
  *(_BYTE *)(a1 + 2848) = *(_BYTE *)(a2 + 2848);
  *(_QWORD *)(a1 + 2856) = *(_QWORD *)(a2 + 2856);
  *(_BYTE *)(a1 + 2864) = *(_BYTE *)(a2 + 2864);
  *(_QWORD *)(a1 + 2872) = *(_QWORD *)(a2 + 2872);
  *(_OWORD *)(a1 + 2880) = *(_OWORD *)(a2 + 2880);
  *(_OWORD *)(a1 + 2896) = *(_OWORD *)(a2 + 2896);
  *(_OWORD *)(a1 + 2912) = *(_OWORD *)(a2 + 2912);
  *(_QWORD *)(a1 + 2928) = *(_QWORD *)(a2 + 2928);
  *(_BYTE *)(a1 + 2936) = *(_BYTE *)(a2 + 2936);
  *(_BYTE *)(a1 + 2937) = *(_BYTE *)(a2 + 2937);
  *(_BYTE *)(a1 + 2938) = *(_BYTE *)(a2 + 2938);
  *(_OWORD *)(a1 + 2944) = *(_OWORD *)(a2 + 2944);
  *(_OWORD *)(a1 + 2960) = *(_OWORD *)(a2 + 2960);
  *(_OWORD *)(a1 + 2976) = *(_OWORD *)(a2 + 2976);
  *(_OWORD *)(a1 + 2992) = *(_OWORD *)(a2 + 2992);
  *(_QWORD *)(a1 + 3008) = *(_QWORD *)(a2 + 3008);
  *(_QWORD *)(a1 + 3016) = *(_QWORD *)(a2 + 3016);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 3024) = *(_QWORD *)(a2 + 3024);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 3032) = *(_QWORD *)(a2 + 3032);
  *(_OWORD *)(a1 + 3040) = *(_OWORD *)(a2 + 3040);
  *(_OWORD *)(a1 + 3056) = *(_OWORD *)(a2 + 3056);
  *(_OWORD *)(a1 + 3072) = *(_OWORD *)(a2 + 3072);
  *(_OWORD *)(a1 + 3088) = *(_OWORD *)(a2 + 3088);
  *(_OWORD *)(a1 + 3104) = *(_OWORD *)(a2 + 3104);
  *(_OWORD *)(a1 + 3120) = *(_OWORD *)(a2 + 3120);
  *(_OWORD *)(a1 + 3136) = *(_OWORD *)(a2 + 3136);
  *(_OWORD *)(a1 + 3152) = *(_OWORD *)(a2 + 3152);
  *(_OWORD *)(a1 + 3168) = *(_OWORD *)(a2 + 3168);
  *(_OWORD *)(a1 + 3184) = *(_OWORD *)(a2 + 3184);
  *(_OWORD *)(a1 + 3200) = *(_OWORD *)(a2 + 3200);
  *(_OWORD *)(a1 + 3216) = *(_OWORD *)(a2 + 3216);
  *(_OWORD *)(a1 + 3232) = *(_OWORD *)(a2 + 3232);
  *(_OWORD *)(a1 + 3248) = *(_OWORD *)(a2 + 3248);
  *(_OWORD *)(a1 + 3264) = *(_OWORD *)(a2 + 3264);
  *(_OWORD *)(a1 + 3280) = *(_OWORD *)(a2 + 3280);
  *(_OWORD *)(a1 + 3296) = *(_OWORD *)(a2 + 3296);
  *(_OWORD *)(a1 + 3312) = *(_OWORD *)(a2 + 3312);
  *(_OWORD *)(a1 + 3328) = *(_OWORD *)(a2 + 3328);
  *(_OWORD *)(a1 + 3344) = *(_OWORD *)(a2 + 3344);
  *(_OWORD *)(a1 + 3360) = *(_OWORD *)(a2 + 3360);
  *(_OWORD *)(a1 + 3376) = *(_OWORD *)(a2 + 3376);
  *(_OWORD *)(a1 + 3392) = *(_OWORD *)(a2 + 3392);
  *(_OWORD *)(a1 + 3408) = *(_OWORD *)(a2 + 3408);
  *(_OWORD *)(a1 + 3424) = *(_OWORD *)(a2 + 3424);
  *(_OWORD *)(a1 + 3440) = *(_OWORD *)(a2 + 3440);
  *(_OWORD *)(a1 + 3456) = *(_OWORD *)(a2 + 3456);
  *(_OWORD *)(a1 + 3472) = *(_OWORD *)(a2 + 3472);
  *(_OWORD *)(a1 + 3488) = *(_OWORD *)(a2 + 3488);
  *(_OWORD *)(a1 + 3504) = *(_OWORD *)(a2 + 3504);
  *(_OWORD *)(a1 + 3520) = *(_OWORD *)(a2 + 3520);
  *(_OWORD *)(a1 + 3536) = *(_OWORD *)(a2 + 3536);
  *(_OWORD *)(a1 + 3552) = *(_OWORD *)(a2 + 3552);
  *(_OWORD *)(a1 + 3568) = *(_OWORD *)(a2 + 3568);
  *(_OWORD *)(a1 + 3584) = *(_OWORD *)(a2 + 3584);
  return a1;
}

uint64_t _s13ConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 3600))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 336);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13ConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 3592) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 3576) = 0u;
    *(_OWORD *)(result + 3560) = 0u;
    *(_OWORD *)(result + 3544) = 0u;
    *(_OWORD *)(result + 3528) = 0u;
    *(_OWORD *)(result + 3512) = 0u;
    *(_OWORD *)(result + 3496) = 0u;
    *(_OWORD *)(result + 3480) = 0u;
    *(_OWORD *)(result + 3464) = 0u;
    *(_OWORD *)(result + 3448) = 0u;
    *(_OWORD *)(result + 3432) = 0u;
    *(_OWORD *)(result + 3416) = 0u;
    *(_OWORD *)(result + 3400) = 0u;
    *(_OWORD *)(result + 3384) = 0u;
    *(_OWORD *)(result + 3368) = 0u;
    *(_OWORD *)(result + 3352) = 0u;
    *(_OWORD *)(result + 3336) = 0u;
    *(_OWORD *)(result + 3320) = 0u;
    *(_OWORD *)(result + 3304) = 0u;
    *(_OWORD *)(result + 3288) = 0u;
    *(_OWORD *)(result + 3272) = 0u;
    *(_OWORD *)(result + 3256) = 0u;
    *(_OWORD *)(result + 3240) = 0u;
    *(_OWORD *)(result + 3224) = 0u;
    *(_OWORD *)(result + 3208) = 0u;
    *(_OWORD *)(result + 3192) = 0u;
    *(_OWORD *)(result + 3176) = 0u;
    *(_OWORD *)(result + 3160) = 0u;
    *(_OWORD *)(result + 3144) = 0u;
    *(_OWORD *)(result + 3128) = 0u;
    *(_OWORD *)(result + 3112) = 0u;
    *(_OWORD *)(result + 3096) = 0u;
    *(_OWORD *)(result + 3080) = 0u;
    *(_OWORD *)(result + 3064) = 0u;
    *(_OWORD *)(result + 3048) = 0u;
    *(_OWORD *)(result + 3032) = 0u;
    *(_OWORD *)(result + 3016) = 0u;
    *(_OWORD *)(result + 3000) = 0u;
    *(_OWORD *)(result + 2984) = 0u;
    *(_OWORD *)(result + 2968) = 0u;
    *(_OWORD *)(result + 2952) = 0u;
    *(_OWORD *)(result + 2936) = 0u;
    *(_OWORD *)(result + 2920) = 0u;
    *(_OWORD *)(result + 2904) = 0u;
    *(_OWORD *)(result + 2888) = 0u;
    *(_OWORD *)(result + 2872) = 0u;
    *(_OWORD *)(result + 2856) = 0u;
    *(_OWORD *)(result + 2840) = 0u;
    *(_OWORD *)(result + 2824) = 0u;
    *(_OWORD *)(result + 2808) = 0u;
    *(_OWORD *)(result + 2792) = 0u;
    *(_OWORD *)(result + 2776) = 0u;
    *(_OWORD *)(result + 2760) = 0u;
    *(_OWORD *)(result + 2744) = 0u;
    *(_OWORD *)(result + 2728) = 0u;
    *(_OWORD *)(result + 2712) = 0u;
    *(_OWORD *)(result + 2696) = 0u;
    *(_OWORD *)(result + 2680) = 0u;
    *(_OWORD *)(result + 2664) = 0u;
    *(_OWORD *)(result + 2648) = 0u;
    *(_OWORD *)(result + 2632) = 0u;
    *(_OWORD *)(result + 2616) = 0u;
    *(_OWORD *)(result + 2600) = 0u;
    *(_OWORD *)(result + 2584) = 0u;
    *(_OWORD *)(result + 2568) = 0u;
    *(_OWORD *)(result + 2552) = 0u;
    *(_OWORD *)(result + 2536) = 0u;
    *(_OWORD *)(result + 2520) = 0u;
    *(_OWORD *)(result + 2504) = 0u;
    *(_OWORD *)(result + 2488) = 0u;
    *(_OWORD *)(result + 2472) = 0u;
    *(_OWORD *)(result + 2456) = 0u;
    *(_OWORD *)(result + 2440) = 0u;
    *(_OWORD *)(result + 2424) = 0u;
    *(_OWORD *)(result + 2408) = 0u;
    *(_OWORD *)(result + 2392) = 0u;
    *(_OWORD *)(result + 2376) = 0u;
    *(_OWORD *)(result + 2360) = 0u;
    *(_OWORD *)(result + 2344) = 0u;
    *(_OWORD *)(result + 2328) = 0u;
    *(_OWORD *)(result + 2312) = 0u;
    *(_OWORD *)(result + 2296) = 0u;
    *(_OWORD *)(result + 2280) = 0u;
    *(_OWORD *)(result + 2264) = 0u;
    *(_OWORD *)(result + 2248) = 0u;
    *(_OWORD *)(result + 2232) = 0u;
    *(_OWORD *)(result + 2216) = 0u;
    *(_OWORD *)(result + 2200) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 3600) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 336) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 3600) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s13ConfigurationV31PublisherDampeningConfigurationVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13ConfigurationV31PublisherDampeningConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationV31PublisherDampeningConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s13ConfigurationV31PublisherDampeningConfigurationV17DampeningStrategyOMa()
{
  return &_s13ConfigurationV31PublisherDampeningConfigurationV17DampeningStrategyON;
}

uint64_t _s13ConfigurationV19ActionConfigurationVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s13ConfigurationV19ActionConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *_s13ConfigurationV19ActionConfigurationVMa()
{
  return &_s13ConfigurationV19ActionConfigurationVN;
}

ValueMetadata *_s13ConfigurationV30ArticleReadActionConfigurationVMa()
{
  return &_s13ConfigurationV30ArticleReadActionConfigurationVN;
}

ValueMetadata *_s13ConfigurationV30ArticleReadActionConfigurationV32DefaultArticleReadActionDurationVMa()
{
  return &_s13ConfigurationV30ArticleReadActionConfigurationV32DefaultArticleReadActionDurationVN;
}

uint64_t __swift_memcpy11_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s13ConfigurationV32SportsTagSeenActionConfigurationVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 11))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s13ConfigurationV32SportsTagSeenActionConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 11) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 11) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *_s13ConfigurationV32SportsTagSeenActionConfigurationVMa()
{
  return &_s13ConfigurationV32SportsTagSeenActionConfigurationVN;
}

ValueMetadata *_s13ConfigurationV32SportsTagSeenActionConfigurationV34DefaultSportsTagSeenActionDurationVMa()
{
  return &_s13ConfigurationV32SportsTagSeenActionConfigurationV34DefaultSportsTagSeenActionDurationVN;
}

ValueMetadata *_s13ConfigurationV32SportsTagSeenActionConfigurationV42DefaultSportsTagSeenActionEnableFeedSourceVMa()
{
  return &_s13ConfigurationV32SportsTagSeenActionConfigurationV42DefaultSportsTagSeenActionEnableFeedSourceVN;
}

ValueMetadata *_s13ConfigurationV32SportsTagSeenActionConfigurationV59DefaultSportsTagSeenActionnableSportsManagementDetailSourceVMa()
{
  return &_s13ConfigurationV32SportsTagSeenActionConfigurationV59DefaultSportsTagSeenActionnableSportsManagementDetailSourceVN;
}

ValueMetadata *_s13ConfigurationV32SportsTagSeenActionConfigurationV54DefaultSportsTagSeenActionEnableSportsManagementSourceVMa()
{
  return &_s13ConfigurationV32SportsTagSeenActionConfigurationV54DefaultSportsTagSeenActionEnableSportsManagementSourceVN;
}

ValueMetadata *_s13ConfigurationV32TrackListenedActionConfigurationVMa()
{
  return &_s13ConfigurationV32TrackListenedActionConfigurationVN;
}

ValueMetadata *_s13ConfigurationV32TrackListenedActionConfigurationV34DefaultTrackListenedActionDurationVMa()
{
  return &_s13ConfigurationV32TrackListenedActionConfigurationV34DefaultTrackListenedActionDurationVN;
}

ValueMetadata *_s13ConfigurationV31TrackVisitedActionConfigurationVMa()
{
  return &_s13ConfigurationV31TrackVisitedActionConfigurationVN;
}

ValueMetadata *_s13ConfigurationV31TrackVisitedActionConfigurationV33DefaultTrackVisitedActionDurationVMa()
{
  return &_s13ConfigurationV31TrackVisitedActionConfigurationV33DefaultTrackVisitedActionDurationVN;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13ConfigurationV23ClusteringConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v4 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v4;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v5 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v5;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  v6 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v6;
  v7 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = v7;
  v8 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v8;
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v9 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v9;
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  v10 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v10;
  v11 = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = v11;
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  v12 = *(_OWORD *)(a2 + 376);
  v13 = *(_OWORD *)(a2 + 392);
  v14 = *(_OWORD *)(a2 + 408);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(_OWORD *)(a1 + 392) = v13;
  *(_OWORD *)(a1 + 408) = v14;
  *(_OWORD *)(a1 + 376) = v12;
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  v15 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = v15;
  v16 = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = v16;
  v17 = *(_OWORD *)(a2 + 488);
  v18 = *(_OWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 504) = v18;
  *(_OWORD *)(a1 + 488) = v17;
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  v19 = *(_OWORD *)(a2 + 536);
  v20 = *(_OWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 552) = v20;
  *(_OWORD *)(a1 + 536) = v19;
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  v21 = *(_OWORD *)(a2 + 584);
  v22 = *(_OWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 600) = v22;
  *(_OWORD *)(a1 + 584) = v21;
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  v23 = *(_OWORD *)(a2 + 632);
  v24 = *(_OWORD *)(a2 + 648);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_OWORD *)(a1 + 648) = v24;
  *(_OWORD *)(a1 + 632) = v23;
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  v25 = *(_OWORD *)(a2 + 680);
  v26 = *(_OWORD *)(a2 + 696);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_OWORD *)(a1 + 696) = v26;
  *(_OWORD *)(a1 + 680) = v25;
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  v27 = *(_OWORD *)(a2 + 736);
  v28 = *(_OWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 736) = v27;
  *(_OWORD *)(a1 + 752) = v28;
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  v29 = *(_OWORD *)(a2 + 808);
  v30 = *(_OWORD *)(a2 + 824);
  v31 = *(_OWORD *)(a2 + 840);
  *(_WORD *)(a1 + 856) = *(_WORD *)(a2 + 856);
  *(_OWORD *)(a1 + 824) = v30;
  *(_OWORD *)(a1 + 840) = v31;
  *(_OWORD *)(a1 + 808) = v29;
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  *(_BYTE *)(a1 + 872) = *(_BYTE *)(a2 + 872);
  *(_QWORD *)(a1 + 880) = *(_QWORD *)(a2 + 880);
  *(_BYTE *)(a1 + 888) = *(_BYTE *)(a2 + 888);
  *(_QWORD *)(a1 + 896) = *(_QWORD *)(a2 + 896);
  *(_BYTE *)(a1 + 904) = *(_BYTE *)(a2 + 904);
  *(_BYTE *)(a1 + 905) = *(_BYTE *)(a2 + 905);
  v32 = *(_OWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 912) = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 928) = v32;
  v33 = *(_OWORD *)(a2 + 944);
  v34 = *(_OWORD *)(a2 + 960);
  v35 = *(_OWORD *)(a2 + 976);
  *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
  *(_OWORD *)(a1 + 960) = v34;
  *(_OWORD *)(a1 + 976) = v35;
  *(_OWORD *)(a1 + 944) = v33;
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  v36 = *(_OWORD *)(a2 + 1008);
  v37 = *(_OWORD *)(a2 + 1024);
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1008) = v36;
  *(_OWORD *)(a1 + 1024) = v37;
  *(_QWORD *)(a1 + 1048) = *(_QWORD *)(a2 + 1048);
  v38 = *(_OWORD *)(a2 + 1056);
  v39 = *(_OWORD *)(a2 + 1072);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1072) = v39;
  *(_OWORD *)(a1 + 1056) = v38;
  *(_QWORD *)(a1 + 1096) = *(_QWORD *)(a2 + 1096);
  v40 = *(_OWORD *)(a2 + 1104);
  v41 = *(_OWORD *)(a2 + 1120);
  *(_QWORD *)(a1 + 1136) = *(_QWORD *)(a2 + 1136);
  *(_OWORD *)(a1 + 1120) = v41;
  *(_OWORD *)(a1 + 1104) = v40;
  *(_QWORD *)(a1 + 1144) = *(_QWORD *)(a2 + 1144);
  v42 = *(_OWORD *)(a2 + 1152);
  v43 = *(_OWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_OWORD *)(a1 + 1168) = v43;
  *(_OWORD *)(a1 + 1152) = v42;
  *(_QWORD *)(a1 + 1192) = *(_QWORD *)(a2 + 1192);
  v44 = *(_OWORD *)(a2 + 1200);
  v45 = *(_OWORD *)(a2 + 1216);
  *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
  *(_OWORD *)(a1 + 1216) = v45;
  *(_OWORD *)(a1 + 1200) = v44;
  *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
  *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
  v46 = *(_OWORD *)(a2 + 1256);
  v47 = *(_OWORD *)(a2 + 1272);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  *(_OWORD *)(a1 + 1256) = v46;
  *(_OWORD *)(a1 + 1272) = v47;
  *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
  *(_QWORD *)(a1 + 1304) = *(_QWORD *)(a2 + 1304);
  *(_QWORD *)(a1 + 1312) = *(_QWORD *)(a2 + 1312);
  *(_QWORD *)(a1 + 1320) = *(_QWORD *)(a2 + 1320);
  v48 = *(_OWORD *)(a2 + 1328);
  v49 = *(_OWORD *)(a2 + 1344);
  v50 = *(_OWORD *)(a2 + 1360);
  *(_WORD *)(a1 + 1376) = *(_WORD *)(a2 + 1376);
  *(_OWORD *)(a1 + 1360) = v50;
  *(_OWORD *)(a1 + 1344) = v49;
  *(_OWORD *)(a1 + 1328) = v48;
  *(_QWORD *)(a1 + 1384) = *(_QWORD *)(a2 + 1384);
  *(_QWORD *)(a1 + 1392) = *(_QWORD *)(a2 + 1392);
  *(_BYTE *)(a1 + 1400) = *(_BYTE *)(a2 + 1400);
  *(_OWORD *)(a1 + 1408) = *(_OWORD *)(a2 + 1408);
  *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
  v51 = *(_OWORD *)(a2 + 1432);
  v52 = *(_OWORD *)(a2 + 1448);
  *(_QWORD *)(a1 + 1464) = *(_QWORD *)(a2 + 1464);
  *(_OWORD *)(a1 + 1448) = v52;
  *(_OWORD *)(a1 + 1432) = v51;
  *(_QWORD *)(a1 + 1472) = *(_QWORD *)(a2 + 1472);
  v53 = *(_OWORD *)(a2 + 1480);
  v54 = *(_OWORD *)(a2 + 1496);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  *(_OWORD *)(a1 + 1496) = v54;
  *(_OWORD *)(a1 + 1480) = v53;
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  v55 = *(_OWORD *)(a2 + 1528);
  v56 = *(_OWORD *)(a2 + 1544);
  *(_QWORD *)(a1 + 1560) = *(_QWORD *)(a2 + 1560);
  *(_OWORD *)(a1 + 1544) = v56;
  *(_OWORD *)(a1 + 1528) = v55;
  *(_QWORD *)(a1 + 1568) = *(_QWORD *)(a2 + 1568);
  v57 = *(_OWORD *)(a2 + 1576);
  v58 = *(_OWORD *)(a2 + 1592);
  *(_QWORD *)(a1 + 1608) = *(_QWORD *)(a2 + 1608);
  *(_OWORD *)(a1 + 1592) = v58;
  *(_OWORD *)(a1 + 1576) = v57;
  *(_QWORD *)(a1 + 1616) = *(_QWORD *)(a2 + 1616);
  v59 = *(_OWORD *)(a2 + 1624);
  v60 = *(_OWORD *)(a2 + 1640);
  *(_QWORD *)(a1 + 1656) = *(_QWORD *)(a2 + 1656);
  *(_OWORD *)(a1 + 1640) = v60;
  *(_OWORD *)(a1 + 1624) = v59;
  *(_QWORD *)(a1 + 1664) = *(_QWORD *)(a2 + 1664);
  v61 = *(_OWORD *)(a2 + 1672);
  v62 = *(_OWORD *)(a2 + 1688);
  *(_QWORD *)(a1 + 1704) = *(_QWORD *)(a2 + 1704);
  *(_OWORD *)(a1 + 1688) = v62;
  *(_OWORD *)(a1 + 1672) = v61;
  *(_QWORD *)(a1 + 1712) = *(_QWORD *)(a2 + 1712);
  *(_QWORD *)(a1 + 1720) = *(_QWORD *)(a2 + 1720);
  v63 = *(_OWORD *)(a2 + 1728);
  v64 = *(_OWORD *)(a2 + 1744);
  *(_QWORD *)(a1 + 1760) = *(_QWORD *)(a2 + 1760);
  *(_OWORD *)(a1 + 1744) = v64;
  *(_OWORD *)(a1 + 1728) = v63;
  *(_QWORD *)(a1 + 1768) = *(_QWORD *)(a2 + 1768);
  *(_OWORD *)(a1 + 1776) = *(_OWORD *)(a2 + 1776);
  *(_QWORD *)(a1 + 1792) = *(_QWORD *)(a2 + 1792);
  v65 = *(_OWORD *)(a2 + 1800);
  v66 = *(_OWORD *)(a2 + 1816);
  v67 = *(_OWORD *)(a2 + 1832);
  *(_WORD *)(a1 + 1848) = *(_WORD *)(a2 + 1848);
  *(_OWORD *)(a1 + 1816) = v66;
  *(_OWORD *)(a1 + 1832) = v67;
  *(_OWORD *)(a1 + 1800) = v65;
  *(_OWORD *)(a1 + 1856) = *(_OWORD *)(a2 + 1856);
  *(_OWORD *)(a1 + 1872) = *(_OWORD *)(a2 + 1872);
  *(_QWORD *)(a1 + 1888) = *(_QWORD *)(a2 + 1888);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = a2 + 888;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 376);
  v6 = *(_OWORD *)(a2 + 392);
  v7 = *(_OWORD *)(a2 + 408);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(_OWORD *)(a1 + 392) = v6;
  *(_OWORD *)(a1 + 408) = v7;
  *(_OWORD *)(a1 + 376) = v5;
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(_OWORD *)(a2 + 808);
  v9 = *(_OWORD *)(a2 + 824);
  v10 = *(_OWORD *)(a2 + 840);
  *(_WORD *)(a1 + 856) = *(_WORD *)(a2 + 856);
  *(_OWORD *)(a1 + 824) = v9;
  *(_OWORD *)(a1 + 840) = v10;
  *(_OWORD *)(a1 + 808) = v8;
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  *(_BYTE *)(a1 + 872) = *(_BYTE *)(a2 + 872);
  *(_QWORD *)(a1 + 880) = *(_QWORD *)(a2 + 880);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 888) = *(_BYTE *)(a2 + 888);
  *(_QWORD *)(a1 + 896) = *(_QWORD *)(a2 + 896);
  *(_BYTE *)(a1 + 904) = *(_BYTE *)(v4 + 16);
  *(_BYTE *)(a1 + 905) = *(_BYTE *)(v4 + 17);
  *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
  *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
  *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
  *(_QWORD *)(a1 + 936) = *(_QWORD *)(a2 + 936);
  *(_QWORD *)(a1 + 944) = *(_QWORD *)(a2 + 944);
  *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
  *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
  *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  *(_QWORD *)(a1 + 1048) = *(_QWORD *)(a2 + 1048);
  *(_QWORD *)(a1 + 1056) = *(_QWORD *)(a2 + 1056);
  *(_QWORD *)(a1 + 1064) = *(_QWORD *)(a2 + 1064);
  *(_QWORD *)(a1 + 1072) = *(_QWORD *)(a2 + 1072);
  *(_QWORD *)(a1 + 1080) = *(_QWORD *)(a2 + 1080);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_QWORD *)(a1 + 1096) = *(_QWORD *)(a2 + 1096);
  *(_QWORD *)(a1 + 1104) = *(_QWORD *)(a2 + 1104);
  *(_QWORD *)(a1 + 1112) = *(_QWORD *)(a2 + 1112);
  *(_QWORD *)(a1 + 1120) = *(_QWORD *)(a2 + 1120);
  *(_QWORD *)(a1 + 1128) = *(_QWORD *)(a2 + 1128);
  *(_QWORD *)(a1 + 1136) = *(_QWORD *)(a2 + 1136);
  *(_QWORD *)(a1 + 1144) = *(_QWORD *)(a2 + 1144);
  *(_QWORD *)(a1 + 1152) = *(_QWORD *)(a2 + 1152);
  *(_QWORD *)(a1 + 1160) = *(_QWORD *)(a2 + 1160);
  *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1176) = *(_QWORD *)(a2 + 1176);
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_QWORD *)(a1 + 1192) = *(_QWORD *)(a2 + 1192);
  *(_QWORD *)(a1 + 1200) = *(_QWORD *)(a2 + 1200);
  *(_QWORD *)(a1 + 1208) = *(_QWORD *)(a2 + 1208);
  *(_QWORD *)(a1 + 1216) = *(_QWORD *)(a2 + 1216);
  *(_QWORD *)(a1 + 1224) = *(_QWORD *)(a2 + 1224);
  *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
  *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
  *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
  *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
  *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
  *(_QWORD *)(a1 + 1280) = *(_QWORD *)(a2 + 1280);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1304) = *(_QWORD *)(a2 + 1304);
  *(_QWORD *)(a1 + 1312) = *(_QWORD *)(a2 + 1312);
  *(_QWORD *)(a1 + 1320) = *(_QWORD *)(a2 + 1320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_OWORD *)(a2 + 1328);
  v12 = *(_OWORD *)(a2 + 1344);
  v13 = *(_OWORD *)(a2 + 1360);
  *(_WORD *)(a1 + 1376) = *(_WORD *)(a2 + 1376);
  *(_OWORD *)(a1 + 1360) = v13;
  *(_OWORD *)(a1 + 1344) = v12;
  *(_OWORD *)(a1 + 1328) = v11;
  *(_QWORD *)(a1 + 1384) = *(_QWORD *)(a2 + 1384);
  *(_QWORD *)(a1 + 1392) = *(_QWORD *)(a2 + 1392);
  *(_BYTE *)(a1 + 1400) = *(_BYTE *)(a2 + 1400);
  *(_QWORD *)(a1 + 1408) = *(_QWORD *)(a2 + 1408);
  *(_QWORD *)(a1 + 1416) = *(_QWORD *)(a2 + 1416);
  *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(a2 + 1432);
  *(_QWORD *)(a1 + 1440) = *(_QWORD *)(a2 + 1440);
  *(_QWORD *)(a1 + 1448) = *(_QWORD *)(a2 + 1448);
  *(_QWORD *)(a1 + 1456) = *(_QWORD *)(a2 + 1456);
  *(_QWORD *)(a1 + 1464) = *(_QWORD *)(a2 + 1464);
  *(_QWORD *)(a1 + 1472) = *(_QWORD *)(a2 + 1472);
  *(_QWORD *)(a1 + 1480) = *(_QWORD *)(a2 + 1480);
  *(_QWORD *)(a1 + 1488) = *(_QWORD *)(a2 + 1488);
  *(_QWORD *)(a1 + 1496) = *(_QWORD *)(a2 + 1496);
  *(_QWORD *)(a1 + 1504) = *(_QWORD *)(a2 + 1504);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  *(_QWORD *)(a1 + 1528) = *(_QWORD *)(a2 + 1528);
  *(_QWORD *)(a1 + 1536) = *(_QWORD *)(a2 + 1536);
  *(_QWORD *)(a1 + 1544) = *(_QWORD *)(a2 + 1544);
  *(_QWORD *)(a1 + 1552) = *(_QWORD *)(a2 + 1552);
  *(_QWORD *)(a1 + 1560) = *(_QWORD *)(a2 + 1560);
  *(_QWORD *)(a1 + 1568) = *(_QWORD *)(a2 + 1568);
  *(_QWORD *)(a1 + 1576) = *(_QWORD *)(a2 + 1576);
  *(_QWORD *)(a1 + 1584) = *(_QWORD *)(a2 + 1584);
  *(_QWORD *)(a1 + 1592) = *(_QWORD *)(a2 + 1592);
  *(_QWORD *)(a1 + 1600) = *(_QWORD *)(a2 + 1600);
  *(_QWORD *)(a1 + 1608) = *(_QWORD *)(a2 + 1608);
  *(_QWORD *)(a1 + 1616) = *(_QWORD *)(a2 + 1616);
  *(_QWORD *)(a1 + 1624) = *(_QWORD *)(a2 + 1624);
  *(_QWORD *)(a1 + 1632) = *(_QWORD *)(a2 + 1632);
  *(_QWORD *)(a1 + 1640) = *(_QWORD *)(a2 + 1640);
  *(_QWORD *)(a1 + 1648) = *(_QWORD *)(a2 + 1648);
  *(_QWORD *)(a1 + 1656) = *(_QWORD *)(a2 + 1656);
  *(_QWORD *)(a1 + 1664) = *(_QWORD *)(a2 + 1664);
  *(_QWORD *)(a1 + 1672) = *(_QWORD *)(a2 + 1672);
  *(_QWORD *)(a1 + 1680) = *(_QWORD *)(a2 + 1680);
  *(_QWORD *)(a1 + 1688) = *(_QWORD *)(a2 + 1688);
  *(_QWORD *)(a1 + 1696) = *(_QWORD *)(a2 + 1696);
  *(_QWORD *)(a1 + 1704) = *(_QWORD *)(a2 + 1704);
  *(_QWORD *)(a1 + 1712) = *(_QWORD *)(a2 + 1712);
  *(_QWORD *)(a1 + 1720) = *(_QWORD *)(a2 + 1720);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1728) = *(_QWORD *)(a2 + 1728);
  *(_QWORD *)(a1 + 1736) = *(_QWORD *)(a2 + 1736);
  *(_QWORD *)(a1 + 1744) = *(_QWORD *)(a2 + 1744);
  *(_QWORD *)(a1 + 1752) = *(_QWORD *)(a2 + 1752);
  *(_QWORD *)(a1 + 1760) = *(_QWORD *)(a2 + 1760);
  *(_QWORD *)(a1 + 1768) = *(_QWORD *)(a2 + 1768);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1776) = *(_QWORD *)(a2 + 1776);
  *(_QWORD *)(a1 + 1784) = *(_QWORD *)(a2 + 1784);
  *(_QWORD *)(a1 + 1792) = *(_QWORD *)(a2 + 1792);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(_OWORD *)(a2 + 1800);
  v15 = *(_OWORD *)(a2 + 1816);
  v16 = *(_OWORD *)(a2 + 1832);
  *(_WORD *)(a1 + 1848) = *(_WORD *)(a2 + 1848);
  *(_OWORD *)(a1 + 1816) = v15;
  *(_OWORD *)(a1 + 1832) = v16;
  *(_OWORD *)(a1 + 1800) = v14;
  *(_QWORD *)(a1 + 1856) = *(_QWORD *)(a2 + 1856);
  *(_QWORD *)(a1 + 1864) = *(_QWORD *)(a2 + 1864);
  *(_QWORD *)(a1 + 1872) = *(_QWORD *)(a2 + 1872);
  *(_QWORD *)(a1 + 1880) = *(_QWORD *)(a2 + 1880);
  *(_QWORD *)(a1 + 1888) = *(_QWORD *)(a2 + 1888);
  return a1;
}

void *__swift_memcpy1896_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x768uLL);
}

uint64_t _s13ConfigurationV23ClusteringConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v4 = a2 + 888;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v5;
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  v6 = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v7;
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  v8 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v8;
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  v9 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v9;
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  v10 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v10;
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  v11 = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 608) = v11;
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  v12 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v12;
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  v13 = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 704) = v13;
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  swift_bridgeObjectRelease();
  v14 = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 752) = v14;
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  swift_bridgeObjectRelease();
  v15 = *(_OWORD *)(a2 + 824);
  *(_OWORD *)(a1 + 808) = *(_OWORD *)(a2 + 808);
  *(_OWORD *)(a1 + 824) = v15;
  *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
  *(_WORD *)(a1 + 856) = *(_WORD *)(a2 + 856);
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  *(_BYTE *)(a1 + 872) = *(_BYTE *)(a2 + 872);
  *(_QWORD *)(a1 + 880) = *(_QWORD *)(a2 + 880);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 888) = *(_BYTE *)(a2 + 888);
  *(_QWORD *)(a1 + 896) = *(_QWORD *)(a2 + 896);
  *(_BYTE *)(a1 + 904) = *(_BYTE *)(v4 + 16);
  *(_BYTE *)(a1 + 905) = *(_BYTE *)(v4 + 17);
  *(_OWORD *)(a1 + 912) = *(_OWORD *)(a2 + 912);
  *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
  *(_QWORD *)(a1 + 936) = *(_QWORD *)(a2 + 936);
  *(_QWORD *)(a1 + 944) = *(_QWORD *)(a2 + 944);
  *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
  v16 = *(_OWORD *)(a2 + 976);
  *(_OWORD *)(a1 + 960) = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 976) = v16;
  *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  v17 = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 1024) = v17;
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  *(_QWORD *)(a1 + 1048) = *(_QWORD *)(a2 + 1048);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_QWORD *)(a1 + 1096) = *(_QWORD *)(a2 + 1096);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
  *(_QWORD *)(a1 + 1136) = *(_QWORD *)(a2 + 1136);
  *(_QWORD *)(a1 + 1144) = *(_QWORD *)(a2 + 1144);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_QWORD *)(a1 + 1192) = *(_QWORD *)(a2 + 1192);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
  *(_OWORD *)(a1 + 1232) = *(_OWORD *)(a2 + 1232);
  *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
  *(_OWORD *)(a1 + 1264) = *(_OWORD *)(a2 + 1264);
  *(_OWORD *)(a1 + 1280) = *(_OWORD *)(a2 + 1280);
  *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1304) = *(_QWORD *)(a2 + 1304);
  *(_QWORD *)(a1 + 1312) = *(_QWORD *)(a2 + 1312);
  *(_QWORD *)(a1 + 1320) = *(_QWORD *)(a2 + 1320);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1328) = *(_OWORD *)(a2 + 1328);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_WORD *)(a1 + 1376) = *(_WORD *)(a2 + 1376);
  *(_QWORD *)(a1 + 1384) = *(_QWORD *)(a2 + 1384);
  *(_QWORD *)(a1 + 1392) = *(_QWORD *)(a2 + 1392);
  *(_BYTE *)(a1 + 1400) = *(_BYTE *)(a2 + 1400);
  *(_QWORD *)(a1 + 1408) = *(_QWORD *)(a2 + 1408);
  *(_QWORD *)(a1 + 1416) = *(_QWORD *)(a2 + 1416);
  *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(a2 + 1432);
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_OWORD *)(a1 + 1456) = *(_OWORD *)(a2 + 1456);
  *(_QWORD *)(a1 + 1472) = *(_QWORD *)(a2 + 1472);
  *(_QWORD *)(a1 + 1480) = *(_QWORD *)(a2 + 1480);
  *(_OWORD *)(a1 + 1488) = *(_OWORD *)(a2 + 1488);
  *(_OWORD *)(a1 + 1504) = *(_OWORD *)(a2 + 1504);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  *(_QWORD *)(a1 + 1528) = *(_QWORD *)(a2 + 1528);
  *(_OWORD *)(a1 + 1536) = *(_OWORD *)(a2 + 1536);
  *(_OWORD *)(a1 + 1552) = *(_OWORD *)(a2 + 1552);
  *(_QWORD *)(a1 + 1568) = *(_QWORD *)(a2 + 1568);
  *(_QWORD *)(a1 + 1576) = *(_QWORD *)(a2 + 1576);
  *(_OWORD *)(a1 + 1584) = *(_OWORD *)(a2 + 1584);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  *(_QWORD *)(a1 + 1616) = *(_QWORD *)(a2 + 1616);
  *(_QWORD *)(a1 + 1624) = *(_QWORD *)(a2 + 1624);
  *(_OWORD *)(a1 + 1632) = *(_OWORD *)(a2 + 1632);
  *(_OWORD *)(a1 + 1648) = *(_OWORD *)(a2 + 1648);
  *(_QWORD *)(a1 + 1664) = *(_QWORD *)(a2 + 1664);
  *(_QWORD *)(a1 + 1672) = *(_QWORD *)(a2 + 1672);
  *(_OWORD *)(a1 + 1680) = *(_OWORD *)(a2 + 1680);
  *(_OWORD *)(a1 + 1696) = *(_OWORD *)(a2 + 1696);
  *(_QWORD *)(a1 + 1712) = *(_QWORD *)(a2 + 1712);
  *(_QWORD *)(a1 + 1720) = *(_QWORD *)(a2 + 1720);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1728) = *(_OWORD *)(a2 + 1728);
  *(_OWORD *)(a1 + 1744) = *(_OWORD *)(a2 + 1744);
  *(_QWORD *)(a1 + 1760) = *(_QWORD *)(a2 + 1760);
  *(_QWORD *)(a1 + 1768) = *(_QWORD *)(a2 + 1768);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1776) = *(_QWORD *)(a2 + 1776);
  *(_QWORD *)(a1 + 1784) = *(_QWORD *)(a2 + 1784);
  *(_QWORD *)(a1 + 1792) = *(_QWORD *)(a2 + 1792);
  swift_bridgeObjectRelease();
  v18 = *(_OWORD *)(a2 + 1816);
  *(_OWORD *)(a1 + 1800) = *(_OWORD *)(a2 + 1800);
  *(_OWORD *)(a1 + 1816) = v18;
  *(_OWORD *)(a1 + 1832) = *(_OWORD *)(a2 + 1832);
  *(_WORD *)(a1 + 1848) = *(_WORD *)(a2 + 1848);
  *(_OWORD *)(a1 + 1856) = *(_OWORD *)(a2 + 1856);
  *(_OWORD *)(a1 + 1872) = *(_OWORD *)(a2 + 1872);
  *(_QWORD *)(a1 + 1888) = *(_QWORD *)(a2 + 1888);
  return a1;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 1896))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 296);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13ConfigurationV23ClusteringConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 1896) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 296) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 1896) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationVN;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV14TopicDiversityVwCP(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationV31PublisherDampeningConfigurationVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1D5DF6A24(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV19ClusterOrderingModeOMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV19ClusterOrderingModeON;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV6QuotasVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV6QuotasVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s13ConfigurationV23ClusteringConfigurationV6QuotasVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV6QuotasVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV6QuotasVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV6QuotasVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV6QuotasVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV6QuotasVN;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV14DepthTransformVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV14DepthTransformV12DefaultAlphaVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV14DepthTransformV12DefaultAlphaVN;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 49) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationVN;
}

uint64_t sub_1D5DF6D6C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D5DF6D74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5DF6DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v4 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v4;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v5 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v5;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v6 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v6;
  v7 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = v7;
  v8 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v8;
  v9 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = v9;
  v10 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v10;
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  v11 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v11;
  v12 = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = v12;
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  v13 = *(_OWORD *)(a2 + 376);
  v14 = *(_OWORD *)(a2 + 392);
  v15 = *(_OWORD *)(a2 + 408);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(_OWORD *)(a1 + 392) = v14;
  *(_OWORD *)(a1 + 408) = v15;
  *(_OWORD *)(a1 + 376) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D5DF6EC8(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 376);
  v5 = *(_OWORD *)(a2 + 392);
  v6 = *(_OWORD *)(a2 + 408);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(_OWORD *)(a1 + 392) = v5;
  *(_OWORD *)(a1 + 408) = v6;
  *(_OWORD *)(a1 + 376) = v4;
  return a1;
}

void *__swift_memcpy426_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1AAuLL);
}

uint64_t sub_1D5DF70C4(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v4;
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  v5 = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v6;
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  return a1;
}

uint64_t sub_1D5DF7218(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 426))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 296);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1D5DF7260(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 424) = 0;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 426) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 296) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 426) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void _s13ConfigurationV23ClusteringConfigurationV15ClusteringKnobsVMa()
{
  JUMPOUT(0x1D827D88CLL);
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV54DefaultAutofavoriteClusteringKnobsMaxEvergreenArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV54DefaultAutofavoriteClusteringKnobsMaxEvergreenArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV57DefaultAutofavoriteClusteringKnobsMaxInaccessibleArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV57DefaultAutofavoriteClusteringKnobsMaxInaccessibleArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV57DefaultAutofavoriteClusteringKnobsMaxPublisherOccurrencesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV57DefaultAutofavoriteClusteringKnobsMaxPublisherOccurrencesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV49DefaultAutofavoriteClusteringKnobsMaxAIGCArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV49DefaultAutofavoriteClusteringKnobsMaxAIGCArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV41DefaultAutofavoriteClusteringKnobsMaxSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV41DefaultAutofavoriteClusteringKnobsMaxSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV41DefaultAutofavoriteClusteringKnobsMinSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV41DefaultAutofavoriteClusteringKnobsMinSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV57DefaultAutofavoriteClusteringKnobsPaidBundleArticleQuotasVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV57DefaultAutofavoriteClusteringKnobsPaidBundleArticleQuotasVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV48DefaultAutofavoriteClusteringKnobsTopicDiversityVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV48DefaultAutofavoriteClusteringKnobsTopicDiversityVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV49DefaultChannelClusteringKnobsMaxEvergreenArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV49DefaultChannelClusteringKnobsMaxEvergreenArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV52DefaultChannelClusteringKnobsMaxInaccessibleArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV52DefaultChannelClusteringKnobsMaxInaccessibleArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV52DefaultChannelClusteringKnobsMaxPublisherOccurrencesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV52DefaultChannelClusteringKnobsMaxPublisherOccurrencesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV44DefaultChannelClusteringKnobsMaxAIGCArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV44DefaultChannelClusteringKnobsMaxAIGCArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV36DefaultChannelClusteringKnobsMaxSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV36DefaultChannelClusteringKnobsMaxSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV36DefaultChannelClusteringKnobsMinSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV36DefaultChannelClusteringKnobsMinSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV52DefaultChannelClusteringKnobsPaidBundleArticleQuotasVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV52DefaultChannelClusteringKnobsPaidBundleArticleQuotasVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV43DefaultChannelClusteringKnobsTopicDiversityVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV43DefaultChannelClusteringKnobsTopicDiversityVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV25DefaultChannelScoreWeightVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV25DefaultChannelScoreWeightVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV36DefaultClusteringClusterOrderingModeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV36DefaultClusteringClusterOrderingModeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV48DefaultCustomClusteringKnobsMaxEvergreenArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV48DefaultCustomClusteringKnobsMaxEvergreenArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV51DefaultCustomClusteringKnobsMaxInaccessibleArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV51DefaultCustomClusteringKnobsMaxInaccessibleArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV51DefaultCustomClusteringKnobsMaxPublisherOccurrencesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV51DefaultCustomClusteringKnobsMaxPublisherOccurrencesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV43DefaultCustomClusteringKnobsMaxAIGCArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV43DefaultCustomClusteringKnobsMaxAIGCArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV35DefaultCustomClusteringKnobsMaxSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV35DefaultCustomClusteringKnobsMaxSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV35DefaultCustomClusteringKnobsMinSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV35DefaultCustomClusteringKnobsMinSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV51DefaultCustomClusteringKnobsPaidBundleArticleQuotasVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV51DefaultCustomClusteringKnobsPaidBundleArticleQuotasVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV42DefaultCustomClusteringKnobsTopicDiversityVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV42DefaultCustomClusteringKnobsTopicDiversityVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV44DefaultConsiderRejectedHeadlinesInMoreForYouVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV44DefaultConsiderRejectedHeadlinesInMoreForYouVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV36DefaultHardPaywallBundleArticleLimitVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV36DefaultHardPaywallBundleArticleLimitVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV46DefaultKeepOverflowChannelHeadlinesInInventoryVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV46DefaultKeepOverflowChannelHeadlinesInInventoryVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV44DefaultKeepOverflowTopicHeadlinesInInventoryVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV44DefaultKeepOverflowTopicHeadlinesInInventoryVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV29DefaultManagedTopicMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV29DefaultManagedTopicMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV35DefaultManagedWinnerTopicMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV35DefaultManagedWinnerTopicMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV44DefaultMaxNumberOfTotalTopicAndChannelGroupsVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV44DefaultMaxNumberOfTotalTopicAndChannelGroupsVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV27DefaultMinChannelGroupRatioVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV27DefaultMinChannelGroupRatioVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV25DefaultMinTopicGroupRatioVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV25DefaultMinTopicGroupRatioVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV52DefaultMoreForYouClusteringKnobsMaxEvergreenArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV52DefaultMoreForYouClusteringKnobsMaxEvergreenArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV55DefaultMoreForYouClusteringKnobsMaxInaccessibleArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV55DefaultMoreForYouClusteringKnobsMaxInaccessibleArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV55DefaultMoreForYouClusteringKnobsMaxPublisherOccurrencesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV55DefaultMoreForYouClusteringKnobsMaxPublisherOccurrencesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV47DefaultMoreForYouClusteringKnobsMaxAIGCArticlesVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV47DefaultMoreForYouClusteringKnobsMaxAIGCArticlesVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV39DefaultMoreForYouClusteringKnobsMaxSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV39DefaultMoreForYouClusteringKnobsMaxSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV39DefaultMoreForYouClusteringKnobsMinSizeVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV39DefaultMoreForYouClusteringKnobsMinSizeVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV55DefaultMoreForYouClusteringKnobsPaidBundleArticleQuotasVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV55DefaultMoreForYouClusteringKnobsPaidBundleArticleQuotasVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV46DefaultMoreForYouClusteringKnobsTopicDiversityVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV46DefaultMoreForYouClusteringKnobsTopicDiversityVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV29DefaultRelatedTopicMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV29DefaultRelatedTopicMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV30DefaultRelatedTopicRatioFilterVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV30DefaultRelatedTopicRatioFilterVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV33DefaultReorderUsingEmbeddingScoreVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV33DefaultReorderUsingEmbeddingScoreVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV34DefaultThumbnailMinHammingDistanceVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV34DefaultThumbnailMinHammingDistanceVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV35DefaultTopicAutofavoritedMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV35DefaultTopicAutofavoritedMultiplierVN;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxEvergreenArticles()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxEvergreenArticles;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxInaccessibleArticles()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxInaccessibleArticles;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxPublisherOccurrences()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxPublisherOccurrences;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxAIGCArticles()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxAIGCArticles;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxSize()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMaxSize;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMinSize()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsMinSize;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsPaidBundleArticleQuotas()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsPaidBundleArticleQuotas;
}

ValueMetadata *type metadata accessor for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsTopicDiversity()
{
  return &type metadata for Classic.Configuration.ClusteringConfiguration.DefaultTopicClusteringKnobsTopicDiversity;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV31DefaultTopicFavoritedMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV31DefaultTopicFavoritedMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV31DefaultTopicGroupSizeMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV31DefaultTopicGroupSizeMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV31DefaultTopicGroupableMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV31DefaultTopicGroupableMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV23DefaultTopicScoreWeightVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV23DefaultTopicScoreWeightVN;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV33DefaultTopicSpecificityMultiplierVMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV33DefaultTopicSpecificityMultiplierVN;
}

void *__swift_memcpy1003_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x3EBuLL);
}

uint64_t _s13ConfigurationV23EvaluationConfigurationVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 1003))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 96);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s13ConfigurationV23EvaluationConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 1002) = 0;
    *(_WORD *)(result + 1000) = 0;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 1003) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 1003) = 0;
    if (a2)
      *(_BYTE *)(result + 96) = a2 + 1;
  }
  return result;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV19DefaultANFMutiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV19DefaultANFMutiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV39DefaultArticleEmbeddingScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV39DefaultArticleEmbeddingScoreCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV42DefaultArticleEmbeddingScoreDampenerWeightVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV42DefaultArticleEmbeddingScoreDampenerWeightVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV36DefaultAutofavoritedScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV36DefaultAutofavoritedScoreCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV38DefaultAutofavoritedScoreConfigurationVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV38DefaultAutofavoritedScoreConfigurationVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV29DefaultClientScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV29DefaultClientScoreCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV39DefaultClientScoreDemocratizationFactorVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV39DefaultClientScoreDemocratizationFactorVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV43DefaultConversionScoreDemocratizationFactorVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV43DefaultConversionScoreDemocratizationFactorVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV44DefaultClientSideEngagementBoostANFMutiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV44DefaultClientSideEngagementBoostANFMutiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV39DefaultClientSideEngagementBoostEnabledVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV39DefaultClientSideEngagementBoostEnabledVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV57DefaultClientSideEngagementBoostFeaturedArticleMultiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV57DefaultClientSideEngagementBoostFeaturedArticleMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV65DefaultClientSideEngagementBoostFeatureCandidateArticleMultiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV65DefaultClientSideEngagementBoostFeatureCandidateArticleMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV48DefaultClientSideEngagementBoostFreeCohortCTRCapVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV48DefaultClientSideEngagementBoostFreeCohortCTRCapVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV48DefaultClientSideEngagementBoostPaidCohortCTRCapVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV48DefaultClientSideEngagementBoostPaidCohortCTRCapVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV58DefaultClientSideEngagementBoostReduceVisibilityMultiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV58DefaultClientSideEngagementBoostReduceVisibilityMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV52DefaultClientSideEngagementBoostTagQualityMultiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV52DefaultClientSideEngagementBoostTagQualityMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV22DefaultDampenerEnabledVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV22DefaultDampenerEnabledVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV31DefaultCtrWithSubscribedChannelVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV31DefaultCtrWithSubscribedChannelVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV35DefaultEvergreenHalfLifeCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV35DefaultEvergreenHalfLifeCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV26DefaultHalfLifeCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV26DefaultHalfLifeCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV38DefaultUserFeedbackHalfLifeCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV38DefaultUserFeedbackHalfLifeCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV22DefaultListenedPenaltyVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV22DefaultListenedPenaltyVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV24DefaultMultiplierEnabledVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV24DefaultMultiplierEnabledVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV24DefaultMutedVoteDampenerVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV24DefaultMutedVoteDampenerVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV30DefaultPublisherDampenerWeightVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV30DefaultPublisherDampenerWeightVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV18DefaultReadPenaltyVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV18DefaultReadPenaltyVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV40DefaultRecentlyFollowedDurationThresholdVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV40DefaultRecentlyFollowedDurationThresholdVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV33DefaultRecentlyFollowedMultiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV33DefaultRecentlyFollowedMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV30DefaultRespectHalfLifeOverrideVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV30DefaultRespectHalfLifeOverrideVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV18DefaultSeenPenaltyVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV18DefaultSeenPenaltyVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV33DefaultServerScoreCoefficientFreeVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV33DefaultServerScoreCoefficientFreeVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV37DefaultServerScoreCoefficientHalfLifeVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV37DefaultServerScoreCoefficientHalfLifeVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV46DefaultServerScoreCoefficientInitialMultiplierVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV46DefaultServerScoreCoefficientInitialMultiplierVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV33DefaultServerScoreCoefficientPaidVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV33DefaultServerScoreCoefficientPaidVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV39DefaultServerScoreDemocratizationFactorVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV39DefaultServerScoreDemocratizationFactorVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV24DefaultSparseTagsPenaltyVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV24DefaultSparseTagsPenaltyVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV39DefaultSubscribedChannelScoreCoefficentVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV39DefaultSubscribedChannelScoreCoefficentVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV38DefaultSubscribedTopicScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV38DefaultSubscribedTopicScoreCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV37DefaultPeopleAlsoReadScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV37DefaultPeopleAlsoReadScoreCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV48DefaultPeopleAlsoReadConditionalScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV48DefaultPeopleAlsoReadConditionalScoreCoefficientVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV34DefaultPeopleAlsoReadBaselineScoreVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV34DefaultPeopleAlsoReadBaselineScoreVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV40DefaultSubscribedTopicScoreConfigurationVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV40DefaultSubscribedTopicScoreConfigurationVN;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV27DefaultTabiScoreCoefficientVMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV27DefaultTabiScoreCoefficientVN;
}

uint64_t _s13ConfigurationV33SubscribedCountScoreConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13ConfigurationV33SubscribedCountScoreConfigurationVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV26DefaultDampenerCoefficientVMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV26DefaultDampenerCoefficientVN;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV18DefaultMaxDampenerVMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV18DefaultMaxDampenerVN;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV20DefaultMaxEventCountVMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV20DefaultMaxEventCountVN;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV21DefaultMinScoreWeightVMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV21DefaultMinScoreWeightVN;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV20DefaultScoreExponentVMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV20DefaultScoreExponentVN;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV24DefaultTagWeightExponentVMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV24DefaultTagWeightExponentVN;
}

__n128 __swift_memcpy99_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_DWORD *)(a1 + 95) = *(_DWORD *)((char *)a2 + 95);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s13ConfigurationV30UserFeedbackScoreConfigurationVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 99))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s13ConfigurationV30UserFeedbackScoreConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 98) = 0;
    *(_WORD *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 99) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 99) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV25DefaultBaselineMembershipVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV25DefaultBaselineMembershipVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV39DefaultConsiderPublisherTopicAggregatesVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV39DefaultConsiderPublisherTopicAggregatesVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV21DefaultDilutionFactorVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV21DefaultDilutionFactorVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV24DefaultEnableUndampeningVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV24DefaultEnableUndampeningVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV33DefaultExponentialSubscribedBoostVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV33DefaultExponentialSubscribedBoostVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV19DefaultGlobalWeightVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV19DefaultGlobalWeightVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV27DefaultGlobalWeightHalfLifeVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV27DefaultGlobalWeightHalfLifeVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV36DefaultGlobalWeightInitialMultiplierVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV36DefaultGlobalWeightInitialMultiplierVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV20DefaultPaddingFactorVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV20DefaultPaddingFactorVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV28DefaultPostBaselineCurvatureVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV28DefaultPostBaselineCurvatureVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV27DefaultPreBaselineCurvatureVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV27DefaultPreBaselineCurvatureVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV22DefaultSubscribedBoostVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV22DefaultSubscribedBoostVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV42DefaultUndampenOnlyAboveBaselineMembershipVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV42DefaultUndampenOnlyAboveBaselineMembershipVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV36DefaultUseExponentialSubscribedBoostVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV36DefaultUseExponentialSubscribedBoostVN;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV38DefaultUseRelativePersonalizationValueVMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV38DefaultUseRelativePersonalizationValueVN;
}

uint64_t _s13ConfigurationV32PremiumSubscriptionConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13ConfigurationV32PremiumSubscriptionConfigurationVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV22DefaultAudioMultiplierVMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV22DefaultAudioMultiplierVN;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV27DefaultBundleFreeMultiplierVMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV27DefaultBundleFreeMultiplierVN;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV27DefaultBundlePaidMultiplierVMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV27DefaultBundlePaidMultiplierVN;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV28DefaultConversionCoefficientVMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV28DefaultConversionCoefficientVN;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV26DefaultEvergreenMultiplierVMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV26DefaultEvergreenMultiplierVN;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV25DefaultFeaturedMultiplierVMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV25DefaultFeaturedMultiplierVN;
}

__n128 __swift_memcpy184_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_QWORD *)(a1 + 176) = *((_QWORD *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t _s13ConfigurationV30NicheContentScoreConfigurationVwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[184])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s13ConfigurationV30NicheContentScoreConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 184) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 184) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV35DefaultBoostAllTagsIfTopicIsManagedVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV35DefaultBoostAllTagsIfTopicIsManagedVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV22DefaultDefaultFlowRateVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV22DefaultDefaultFlowRateVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV30DefaultDefaultSubscriptionRateVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV30DefaultDefaultSubscriptionRateVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV32DefaultExcludeNonGroupableTopicsVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV32DefaultExcludeNonGroupableTopicsVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV22DefaultFetchFlowWeightVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV22DefaultFetchFlowWeightVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV24DefaultManagedTopicBoostVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV24DefaultManagedTopicBoostVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV45DefaultMultiplierBaselineMembershipMultiplierVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV45DefaultMultiplierBaselineMembershipMultiplierVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV22DefaultMultiplierBoostVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV22DefaultMultiplierBoostVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV49DefaultMultiplierBoostOnlyAboveBaselineMembershipVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV49DefaultMultiplierBoostOnlyAboveBaselineMembershipVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV33DefaultMultiplierMaxProductFactorVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV33DefaultMultiplierMaxProductFactorVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV28DefaultPublisherFlowExponentVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV28DefaultPublisherFlowExponentVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV36DefaultPublisherSubscriptionExponentVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV36DefaultPublisherSubscriptionExponentVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV23DefaultQualityThresholdVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV23DefaultQualityThresholdVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV23DefaultServerFlowWeightVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV23DefaultServerFlowWeightVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV27DefaultShouldBoostPublisherVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV27DefaultShouldBoostPublisherVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV24DefaultTopicFlowExponentVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV24DefaultTopicFlowExponentVN;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV32DefaultTopicSubscriptionExponentVMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV32DefaultTopicSubscriptionExponentVN;
}

uint64_t _s13ConfigurationV27FlowEstimationConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13ConfigurationV27FlowEstimationConfigurationVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV27FlowEstimationConfigurationV15DefaultExponentVMa()
{
  return &_s13ConfigurationV27FlowEstimationConfigurationV15DefaultExponentVN;
}

ValueMetadata *_s13ConfigurationV27FlowEstimationConfigurationV14DefaultPaddingVMa()
{
  return &_s13ConfigurationV27FlowEstimationConfigurationV14DefaultPaddingVN;
}

ValueMetadata *_s13ConfigurationV27FlowEstimationConfigurationV12DefaultPriorVMa()
{
  return &_s13ConfigurationV27FlowEstimationConfigurationV12DefaultPriorVN;
}

ValueMetadata *_s13ConfigurationV35PersonalizedMultiplierConfigurationV25DefaultBaselineMembershipVMa()
{
  return &_s13ConfigurationV35PersonalizedMultiplierConfigurationV25DefaultBaselineMembershipVN;
}

ValueMetadata *_s13ConfigurationV35PersonalizedMultiplierConfigurationV25DefaultMembershipDampenerVMa()
{
  return &_s13ConfigurationV35PersonalizedMultiplierConfigurationV25DefaultMembershipDampenerVN;
}

ValueMetadata *_s13ConfigurationV35PersonalizedMultiplierConfigurationV28DefaultPostBaselineCurvatureVMa()
{
  return &_s13ConfigurationV35PersonalizedMultiplierConfigurationV28DefaultPostBaselineCurvatureVN;
}

ValueMetadata *_s13ConfigurationV35PersonalizedMultiplierConfigurationV27DefaultPreBaselineCurvatureVMa()
{
  return &_s13ConfigurationV35PersonalizedMultiplierConfigurationV27DefaultPreBaselineCurvatureVN;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s13ConfigurationV20FeatureConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13ConfigurationV20FeatureConfigurationVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 72) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV20FeatureConfigurationV35DefaultArticleLengthAggregateWeightVMa()
{
  return &_s13ConfigurationV20FeatureConfigurationV35DefaultArticleLengthAggregateWeightVN;
}

ValueMetadata *_s13ConfigurationV20FeatureConfigurationV33DefaultArticleLengthLongThresholdVMa()
{
  return &_s13ConfigurationV20FeatureConfigurationV33DefaultArticleLengthLongThresholdVN;
}

ValueMetadata *_s13ConfigurationV20FeatureConfigurationV35DefaultArticleLengthMediumThresholdVMa()
{
  return &_s13ConfigurationV20FeatureConfigurationV35DefaultArticleLengthMediumThresholdVN;
}

ValueMetadata *_s13ConfigurationV20FeatureConfigurationV31DefaultPublisherAggregateWeightVMa()
{
  return &_s13ConfigurationV20FeatureConfigurationV31DefaultPublisherAggregateWeightVN;
}

ValueMetadata *_s13ConfigurationV20FeatureConfigurationV38DefaultPublisherTopicMinimumEventCountVMa()
{
  return &_s13ConfigurationV20FeatureConfigurationV38DefaultPublisherTopicMinimumEventCountVN;
}

ValueMetadata *_s13ConfigurationV13FeaturePriorsV27DefaultBaselineFeaturePriorVMa()
{
  return &_s13ConfigurationV13FeaturePriorsV27DefaultBaselineFeaturePriorVN;
}

ValueMetadata *_s13ConfigurationV13FeaturePriorsV26DefaultGeneralFeaturePriorVMa()
{
  return &_s13ConfigurationV13FeaturePriorsV26DefaultGeneralFeaturePriorVN;
}

uint64_t _s13ConfigurationV12FeaturePriorVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13ConfigurationV12FeaturePriorVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV26OntologyLevelConfigurationV23DefaultTagWeightMappingVMa()
{
  return &_s13ConfigurationV26OntologyLevelConfigurationV23DefaultTagWeightMappingVN;
}

uint64_t _s13ConfigurationV11TopicConfigVwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[57])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s13ConfigurationV11TopicConfigVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV20DefaultCapAtBaselineVMa()
{
  return &_s13ConfigurationV11TopicConfigV20DefaultCapAtBaselineVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV34DefaultHalfLifeCoefficientOverrideVMa()
{
  return &_s13ConfigurationV11TopicConfigV34DefaultHalfLifeCoefficientOverrideVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV19DefaultLimitInGroupVMa()
{
  return &_s13ConfigurationV11TopicConfigV19DefaultLimitInGroupVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV27DefaultPublisherTopicWeightVMa()
{
  return &_s13ConfigurationV11TopicConfigV27DefaultPublisherTopicWeightVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV22DefaultScoreMultiplierVMa()
{
  return &_s13ConfigurationV11TopicConfigV22DefaultScoreMultiplierVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV25DefaultShouldLimitInGroupVMa()
{
  return &_s13ConfigurationV11TopicConfigV25DefaultShouldLimitInGroupVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV16DefaultTagWeightVMa()
{
  return &_s13ConfigurationV11TopicConfigV16DefaultTagWeightVN;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV37DefaultUseHalfLifeCoefficientOverrideVMa()
{
  return &_s13ConfigurationV11TopicConfigV37DefaultUseHalfLifeCoefficientOverrideVN;
}

void *__swift_memcpy568_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x238uLL);
}

uint64_t _s13ConfigurationV21TrainingConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 568))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13ConfigurationV21TrainingConfigurationVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 568) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV21TrainingConfigurationVMa()
{
  return &_s13ConfigurationV21TrainingConfigurationVN;
}

ValueMetadata *_s13ConfigurationV20GeneralConfigurationVMa()
{
  return &_s13ConfigurationV20GeneralConfigurationVN;
}

ValueMetadata *_s13ConfigurationV20GeneralConfigurationV16DefaultDecayRateVMa()
{
  return &_s13ConfigurationV20GeneralConfigurationV16DefaultDecayRateVN;
}

ValueMetadata *_s13ConfigurationV20GeneralConfigurationV35DefaultTopStoriesGroupAggregateBiasVMa()
{
  return &_s13ConfigurationV20GeneralConfigurationV35DefaultTopStoriesGroupAggregateBiasVN;
}

ValueMetadata *_s13ConfigurationV20GeneralConfigurationV33DefaultTrendingGroupAggregateBiasVMa()
{
  return &_s13ConfigurationV20GeneralConfigurationV33DefaultTrendingGroupAggregateBiasVN;
}

void *__swift_memcpy544_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x220uLL);
}

uint64_t _s13ConfigurationV21TrainerConfigurationsVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 544))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13ConfigurationV21TrainerConfigurationsVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 536) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 544) = v3;
  return result;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV52DefaultArticleReadAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV52DefaultArticleReadAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV52DefaultArticleSeenAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV52DefaultArticleSeenAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV55DefaultArticleVisitedAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV55DefaultArticleVisitedAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV48DefaultDislikeAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV48DefaultDislikeAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV49DefaultFeedViewAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV49DefaultFeedViewAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV47DefaultFollowAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV47DefaultFollowAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV47DefaultIgnoreAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV47DefaultIgnoreAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV45DefaultLikeAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV45DefaultLikeAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV45DefaultMuteAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV45DefaultMuteAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV46DefaultSavedAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV46DefaultSavedAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV46DefaultShareAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV46DefaultShareAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV54DefaultSportsTagSeenAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV54DefaultSportsTagSeenAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV54DefaultTrackFinishedAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV54DefaultTrackFinishedAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV54DefaultTrackListenedAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV54DefaultTrackListenedAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV53DefaultTrackVisitedAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV53DefaultTrackVisitedAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV49DefaultUnfollowAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV49DefaultUnfollowAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV47DefaultUnmuteAggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV47DefaultUnmuteAggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV34AggregateModificationConfigurationVMa()
{
  return &_s13ConfigurationV34AggregateModificationConfigurationVN;
}

ValueMetadata *_s13ConfigurationV25AggregateModificationDataVMa()
{
  return &_s13ConfigurationV25AggregateModificationDataVN;
}

uint64_t _s13ConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D5DF87F4 + 4 * byte_1D5E3DABF[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D5DF8828 + 4 * byte_1D5E3DABA[v4]))();
}

uint64_t sub_1D5DF8828(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF8830(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5DF8838);
  return result;
}

uint64_t sub_1D5DF8844(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5DF884CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D5DF8850(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF8858(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV25AggregateModificationDataV10CodingKeysOMa()
{
  return &_s13ConfigurationV25AggregateModificationDataV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV34AggregateModificationConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV34AggregateModificationConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV21TrainerConfigurationsV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV21TrainerConfigurationsV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_1D5DF898C + 4 * byte_1D5E3DAC9[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_1D5DF89C0 + 4 * byte_1D5E3DAC4[v4]))();
}

uint64_t sub_1D5DF89C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF89C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5DF89D0);
  return result;
}

uint64_t sub_1D5DF89DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5DF89E4);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_1D5DF89E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF89F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ConfigurationV21TrainerConfigurationsV10CodingKeysOMa()
{
  return &_s13ConfigurationV21TrainerConfigurationsV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV20GeneralConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV20GeneralConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV21TrainingConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV21TrainingConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV11TopicConfigV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV11TopicConfigV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D5DF8B24 + 4 * byte_1D5E3DAD3[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D5DF8B58 + 4 * byte_1D5E3DACE[v4]))();
}

uint64_t sub_1D5DF8B58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF8B60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5DF8B68);
  return result;
}

uint64_t sub_1D5DF8B74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5DF8B7CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D5DF8B80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF8B88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ConfigurationV11TopicConfigV10CodingKeysOMa()
{
  return &_s13ConfigurationV11TopicConfigV10CodingKeysON;
}

uint64_t sub_1D5DF8BB0()
{
  return 0;
}

ValueMetadata *_s13ConfigurationV26OntologyLevelConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV26OntologyLevelConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV12FeaturePriorV10CodingKeysOMa()
{
  return &_s13ConfigurationV12FeaturePriorV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV13FeaturePriorsV10CodingKeysOMa()
{
  return &_s13ConfigurationV13FeaturePriorsV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV20FeatureConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV20FeatureConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV35PersonalizedMultiplierConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV35PersonalizedMultiplierConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV27FlowEstimationConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV27FlowEstimationConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV30NicheContentScoreConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV30NicheContentScoreConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_1D5DF8D38 + 4 * byte_1D5E3DADD[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_1D5DF8D6C + 4 * byte_1D5E3DAD8[v4]))();
}

uint64_t sub_1D5DF8D6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF8D74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5DF8D7CLL);
  return result;
}

uint64_t sub_1D5DF8D88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5DF8D90);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_1D5DF8D94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF8D9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ConfigurationV30NicheContentScoreConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV30NicheContentScoreConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV32PremiumSubscriptionConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV32PremiumSubscriptionConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV30UserFeedbackScoreConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV30UserFeedbackScoreConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV20FeatureConfigurationV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV20FeatureConfigurationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5DF8ED8 + 4 * byte_1D5E3DAE7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D5DF8F0C + 4 * byte_1D5E3DAE2[v4]))();
}

uint64_t sub_1D5DF8F0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF8F14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5DF8F1CLL);
  return result;
}

uint64_t sub_1D5DF8F28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5DF8F30);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D5DF8F34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF8F3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ConfigurationV35ContentTriggerDampenerConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV35ContentTriggerDampenerConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV33SubscribedCountScoreConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV33SubscribedCountScoreConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV23EvaluationConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xCE)
    goto LABEL_17;
  if (a2 + 50 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 50) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 50;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 50;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 50;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x33;
  v8 = v6 - 51;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV23EvaluationConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 50 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 50) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xCE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xCD)
    return ((uint64_t (*)(void))((char *)&loc_1D5DF9054 + 4 * byte_1D5E3DAF1[v4]))();
  *a1 = a2 + 50;
  return ((uint64_t (*)(void))((char *)sub_1D5DF9088 + 4 * byte_1D5E3DAEC[v4]))();
}

uint64_t sub_1D5DF9088(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF9090(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5DF9098);
  return result;
}

uint64_t sub_1D5DF90A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5DF90ACLL);
  *(_BYTE *)result = a2 + 50;
  return result;
}

uint64_t sub_1D5DF90B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF90B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ConfigurationV23EvaluationConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV23EvaluationConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_1D5DF91B4 + 4 * byte_1D5E3DAFB[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_1D5DF91E8 + 4 * byte_1D5E3DAF6[v4]))();
}

uint64_t sub_1D5DF91E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF91F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5DF91F8);
  return result;
}

uint64_t sub_1D5DF9204(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5DF920CLL);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_1D5DF9210(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF9218(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV10CodingKeysON;
}

uint64_t sub_1D5DF9238()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t _s13ConfigurationV30UserFeedbackScoreConfigurationV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV30UserFeedbackScoreConfigurationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1D5DF9324 + 4 * byte_1D5E3DB05[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1D5DF9358 + 4 * byte_1D5E3DB00[v4]))();
}

uint64_t sub_1D5DF9358(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF9360(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5DF9368);
  return result;
}

uint64_t sub_1D5DF9374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5DF937CLL);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1D5DF9380(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF9388(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF9394(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D5DF93A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t _s13ConfigurationV25AggregateModificationDataV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV25AggregateModificationDataV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D5DF948C + 4 * byte_1D5E3DB0F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D5DF94C0 + 4 * byte_1D5E3DB0A[v4]))();
}

uint64_t sub_1D5DF94C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF94C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5DF94D0);
  return result;
}

uint64_t sub_1D5DF94DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5DF94E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D5DF94E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF94F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF94FC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D5DF9508(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV31PublisherDampeningConfigurationV17DampeningStrategyOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV31PublisherDampeningConfigurationV17DampeningStrategyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5DF9608 + 4 * byte_1D5E3DB19[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5DF963C + 4 * byte_1D5E3DB14[v4]))();
}

uint64_t sub_1D5DF963C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF9644(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5DF964CLL);
  return result;
}

uint64_t sub_1D5DF9658(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5DF9660);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5DF9664(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF966C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV14DepthTransformV10CodingKeysOMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV14DepthTransformV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV6QuotasV10CodingKeysOMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV6QuotasV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityV10CodingKeysOMa()
{
  return &_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityV10CodingKeysON;
}

uint64_t sub_1D5DF96CC()
{
  return 0;
}

ValueMetadata *_s13ConfigurationV31TrackVisitedActionConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV31TrackVisitedActionConfigurationV10CodingKeysON;
}

uint64_t sub_1D5DF96F4()
{
  return 0;
}

ValueMetadata *_s13ConfigurationV32TrackListenedActionConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV32TrackListenedActionConfigurationV10CodingKeysON;
}

ValueMetadata *_s13ConfigurationV32SportsTagSeenActionConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV32SportsTagSeenActionConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV26OntologyLevelConfigurationV10CodingKeysOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s13ConfigurationV26OntologyLevelConfigurationV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5DF97C8 + 4 * byte_1D5E3DB1E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5DF97E8 + 4 * byte_1D5E3DB23[v4]))();
}

_BYTE *sub_1D5DF97C8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5DF97E8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5DF97F0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5DF97F8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5DF9800(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5DF9808(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D5DF9814()
{
  return 0;
}

ValueMetadata *_s13ConfigurationV30ArticleReadActionConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV30ArticleReadActionConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV35PersonalizedMultiplierConfigurationV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV35PersonalizedMultiplierConfigurationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D5DF9918 + 4 * byte_1D5E3DB2D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D5DF994C + 4 * byte_1D5E3DB28[v4]))();
}

uint64_t sub_1D5DF994C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF9954(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5DF995CLL);
  return result;
}

uint64_t sub_1D5DF9968(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5DF9970);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D5DF9974(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF997C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ConfigurationV19ActionConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV19ActionConfigurationV10CodingKeysON;
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV19ClusterOrderingModeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV23ClusteringConfigurationV19ClusterOrderingModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5DF9A80 + 4 * byte_1D5E3DB37[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5DF9AB4 + 4 * byte_1D5E3DB32[v4]))();
}

uint64_t sub_1D5DF9AB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF9ABC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5DF9AC4);
  return result;
}

uint64_t sub_1D5DF9AD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5DF9AD8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5DF9ADC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5DF9AE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ConfigurationV31PublisherDampeningConfigurationV10CodingKeysOMa()
{
  return &_s13ConfigurationV31PublisherDampeningConfigurationV10CodingKeysON;
}

unint64_t sub_1D5DF9B08()
{
  unint64_t result;

  result = qword_1EFFB8878;
  if (!qword_1EFFB8878)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42248, &_s13ConfigurationV31PublisherDampeningConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8878);
  }
  return result;
}

unint64_t sub_1D5DF9B50()
{
  unint64_t result;

  result = qword_1EFFB8880;
  if (!qword_1EFFB8880)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42300, &_s13ConfigurationV19ActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8880);
  }
  return result;
}

unint64_t sub_1D5DF9B98()
{
  unint64_t result;

  result = qword_1EFFB8888;
  if (!qword_1EFFB8888)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E423B8, &_s13ConfigurationV30ArticleReadActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8888);
  }
  return result;
}

unint64_t sub_1D5DF9BE0()
{
  unint64_t result;

  result = qword_1EFFB8890;
  if (!qword_1EFFB8890)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42470, &_s13ConfigurationV32SportsTagSeenActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8890);
  }
  return result;
}

unint64_t sub_1D5DF9C28()
{
  unint64_t result;

  result = qword_1EFFB8898;
  if (!qword_1EFFB8898)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42528, &_s13ConfigurationV32TrackListenedActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8898);
  }
  return result;
}

unint64_t sub_1D5DF9C70()
{
  unint64_t result;

  result = qword_1EFFB88A0;
  if (!qword_1EFFB88A0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E425E0, &_s13ConfigurationV31TrackVisitedActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB88A0);
  }
  return result;
}

unint64_t sub_1D5DF9CB8()
{
  unint64_t result;

  result = qword_1EFFB88A8;
  if (!qword_1EFFB88A8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42698, &_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB88A8);
  }
  return result;
}

unint64_t sub_1D5DF9D00()
{
  unint64_t result;

  result = qword_1EFFB88B0;
  if (!qword_1EFFB88B0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42750, &_s13ConfigurationV23ClusteringConfigurationV6QuotasV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB88B0);
  }
  return result;
}

unint64_t sub_1D5DF9D48()
{
  unint64_t result;

  result = qword_1EFFB88B8;
  if (!qword_1EFFB88B8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42840, &_s13ConfigurationV23ClusteringConfigurationV14DepthTransformV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB88B8);
  }
  return result;
}

unint64_t sub_1D5DF9D90()
{
  unint64_t result;

  result = qword_1EFFB88C0;
  if (!qword_1EFFB88C0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E428F8, &_s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB88C0);
  }
  return result;
}

void sub_1D5DF9DD4()
{
  JUMPOUT(0x1D827D8E0);
}

unint64_t sub_1D5DF9DE8()
{
  unint64_t result;

  result = qword_1EFFB88C8;
  if (!qword_1EFFB88C8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42A68, &_s13ConfigurationV23ClusteringConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB88C8);
  }
  return result;
}

unint64_t sub_1D5DF9E30()
{
  unint64_t result;

  result = qword_1EFFB88D0;
  if (!qword_1EFFB88D0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42B20, &_s13ConfigurationV23EvaluationConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB88D0);
  }
  return result;
}

unint64_t sub_1D5DF9E78()
{
  unint64_t result;

  result = qword_1EFFB88D8;
  if (!qword_1EFFB88D8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42BD8, &_s13ConfigurationV33SubscribedCountScoreConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB88D8);
  }
  return result;
}

unint64_t sub_1D5DF9EC0()
{
  unint64_t result;

  result = qword_1EFFB88E0;
  if (!qword_1EFFB88E0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42C90, &_s13ConfigurationV35ContentTriggerDampenerConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB88E0);
  }
  return result;
}

unint64_t sub_1D5DF9F08()
{
  unint64_t result;

  result = qword_1EFFB88E8;
  if (!qword_1EFFB88E8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42D48, &_s13ConfigurationV30UserFeedbackScoreConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB88E8);
  }
  return result;
}

unint64_t sub_1D5DF9F50()
{
  unint64_t result;

  result = qword_1EFFB88F0;
  if (!qword_1EFFB88F0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42E00, &_s13ConfigurationV32PremiumSubscriptionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB88F0);
  }
  return result;
}

unint64_t sub_1D5DF9F98()
{
  unint64_t result;

  result = qword_1EFFB88F8;
  if (!qword_1EFFB88F8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42EB8, &_s13ConfigurationV30NicheContentScoreConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB88F8);
  }
  return result;
}

unint64_t sub_1D5DF9FE0()
{
  unint64_t result;

  result = qword_1EFFB8900;
  if (!qword_1EFFB8900)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42F70, &_s13ConfigurationV27FlowEstimationConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8900);
  }
  return result;
}

unint64_t sub_1D5DFA028()
{
  unint64_t result;

  result = qword_1EFFB8908;
  if (!qword_1EFFB8908)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43028, &_s13ConfigurationV35PersonalizedMultiplierConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8908);
  }
  return result;
}

unint64_t sub_1D5DFA070()
{
  unint64_t result;

  result = qword_1EFFB8910;
  if (!qword_1EFFB8910)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E430E0, &_s13ConfigurationV20FeatureConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8910);
  }
  return result;
}

unint64_t sub_1D5DFA0B8()
{
  unint64_t result;

  result = qword_1EFFB8918;
  if (!qword_1EFFB8918)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43198, &_s13ConfigurationV13FeaturePriorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8918);
  }
  return result;
}

unint64_t sub_1D5DFA100()
{
  unint64_t result;

  result = qword_1EFFB8920;
  if (!qword_1EFFB8920)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43250, &_s13ConfigurationV12FeaturePriorV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8920);
  }
  return result;
}

unint64_t sub_1D5DFA148()
{
  unint64_t result;

  result = qword_1EFFB8928;
  if (!qword_1EFFB8928)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43308, &_s13ConfigurationV26OntologyLevelConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8928);
  }
  return result;
}

unint64_t sub_1D5DFA190()
{
  unint64_t result;

  result = qword_1EFFB8930;
  if (!qword_1EFFB8930)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E433C0, &_s13ConfigurationV11TopicConfigV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8930);
  }
  return result;
}

unint64_t sub_1D5DFA1D8()
{
  unint64_t result;

  result = qword_1EFFB8938;
  if (!qword_1EFFB8938)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43478, &_s13ConfigurationV21TrainingConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8938);
  }
  return result;
}

unint64_t sub_1D5DFA220()
{
  unint64_t result;

  result = qword_1EFFB8940;
  if (!qword_1EFFB8940)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43530, &_s13ConfigurationV20GeneralConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8940);
  }
  return result;
}

unint64_t sub_1D5DFA268()
{
  unint64_t result;

  result = qword_1EFFB8948;
  if (!qword_1EFFB8948)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E435E8, &_s13ConfigurationV21TrainerConfigurationsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8948);
  }
  return result;
}

unint64_t sub_1D5DFA2B0()
{
  unint64_t result;

  result = qword_1EFFB8950;
  if (!qword_1EFFB8950)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E436A0, &_s13ConfigurationV34AggregateModificationConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8950);
  }
  return result;
}

unint64_t sub_1D5DFA2F8()
{
  unint64_t result;

  result = qword_1EFFB8958;
  if (!qword_1EFFB8958)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43758, &_s13ConfigurationV25AggregateModificationDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8958);
  }
  return result;
}

unint64_t sub_1D5DFA340()
{
  unint64_t result;

  result = qword_1EFFB8960;
  if (!qword_1EFFB8960)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43810, &_s13ConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8960);
  }
  return result;
}

unint64_t sub_1D5DFA388()
{
  unint64_t result;

  result = qword_1EFFB8968;
  if (!qword_1EFFB8968)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43780, &_s13ConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8968);
  }
  return result;
}

unint64_t sub_1D5DFA3D0()
{
  unint64_t result;

  result = qword_1EFFB8970;
  if (!qword_1EFFB8970)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E437A8, &_s13ConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8970);
  }
  return result;
}

unint64_t sub_1D5DFA418()
{
  unint64_t result;

  result = qword_1EFFB8978;
  if (!qword_1EFFB8978)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E436C8, &_s13ConfigurationV25AggregateModificationDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8978);
  }
  return result;
}

unint64_t sub_1D5DFA460()
{
  unint64_t result;

  result = qword_1EFFB8980;
  if (!qword_1EFFB8980)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E436F0, &_s13ConfigurationV25AggregateModificationDataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8980);
  }
  return result;
}

unint64_t sub_1D5DFA4A8()
{
  unint64_t result;

  result = qword_1EFFB8988;
  if (!qword_1EFFB8988)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43610, &_s13ConfigurationV34AggregateModificationConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8988);
  }
  return result;
}

unint64_t sub_1D5DFA4F0()
{
  unint64_t result;

  result = qword_1EFFB8990;
  if (!qword_1EFFB8990)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43638, &_s13ConfigurationV34AggregateModificationConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8990);
  }
  return result;
}

unint64_t sub_1D5DFA538()
{
  unint64_t result;

  result = qword_1EFFB8998;
  if (!qword_1EFFB8998)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43558, &_s13ConfigurationV21TrainerConfigurationsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8998);
  }
  return result;
}

unint64_t sub_1D5DFA580()
{
  unint64_t result;

  result = qword_1EFFB89A0;
  if (!qword_1EFFB89A0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43580, &_s13ConfigurationV21TrainerConfigurationsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB89A0);
  }
  return result;
}

unint64_t sub_1D5DFA5C8()
{
  unint64_t result;

  result = qword_1EFFB89A8;
  if (!qword_1EFFB89A8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E434A0, &_s13ConfigurationV20GeneralConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB89A8);
  }
  return result;
}

unint64_t sub_1D5DFA610()
{
  unint64_t result;

  result = qword_1EFFB89B0;
  if (!qword_1EFFB89B0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E434C8, &_s13ConfigurationV20GeneralConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB89B0);
  }
  return result;
}

unint64_t sub_1D5DFA658()
{
  unint64_t result;

  result = qword_1EFFB89B8;
  if (!qword_1EFFB89B8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E433E8, &_s13ConfigurationV21TrainingConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB89B8);
  }
  return result;
}

unint64_t sub_1D5DFA6A0()
{
  unint64_t result;

  result = qword_1EFFB89C0;
  if (!qword_1EFFB89C0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43410, &_s13ConfigurationV21TrainingConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB89C0);
  }
  return result;
}

unint64_t sub_1D5DFA6E8()
{
  unint64_t result;

  result = qword_1ED9AED08;
  if (!qword_1ED9AED08)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43330, &_s13ConfigurationV11TopicConfigV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AED08);
  }
  return result;
}

unint64_t sub_1D5DFA730()
{
  unint64_t result;

  result = qword_1ED9AED00;
  if (!qword_1ED9AED00)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43358, &_s13ConfigurationV11TopicConfigV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AED00);
  }
  return result;
}

unint64_t sub_1D5DFA778()
{
  unint64_t result;

  result = qword_1EFFB89C8;
  if (!qword_1EFFB89C8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43278, &_s13ConfigurationV26OntologyLevelConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB89C8);
  }
  return result;
}

unint64_t sub_1D5DFA7C0()
{
  unint64_t result;

  result = qword_1EFFB89D0;
  if (!qword_1EFFB89D0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E432A0, &_s13ConfigurationV26OntologyLevelConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB89D0);
  }
  return result;
}

unint64_t sub_1D5DFA808()
{
  unint64_t result;

  result = qword_1EFFB89D8;
  if (!qword_1EFFB89D8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E431C0, &_s13ConfigurationV12FeaturePriorV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB89D8);
  }
  return result;
}

unint64_t sub_1D5DFA850()
{
  unint64_t result;

  result = qword_1EFFB89E0;
  if (!qword_1EFFB89E0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E431E8, &_s13ConfigurationV12FeaturePriorV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB89E0);
  }
  return result;
}

unint64_t sub_1D5DFA898()
{
  unint64_t result;

  result = qword_1EFFB89E8;
  if (!qword_1EFFB89E8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43108, &_s13ConfigurationV13FeaturePriorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB89E8);
  }
  return result;
}

unint64_t sub_1D5DFA8E0()
{
  unint64_t result;

  result = qword_1EFFB89F0;
  if (!qword_1EFFB89F0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43130, &_s13ConfigurationV13FeaturePriorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB89F0);
  }
  return result;
}

unint64_t sub_1D5DFA928()
{
  unint64_t result;

  result = qword_1EFFB89F8;
  if (!qword_1EFFB89F8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43050, &_s13ConfigurationV20FeatureConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB89F8);
  }
  return result;
}

unint64_t sub_1D5DFA970()
{
  unint64_t result;

  result = qword_1EFFB8A00;
  if (!qword_1EFFB8A00)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E43078, &_s13ConfigurationV20FeatureConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A00);
  }
  return result;
}

unint64_t sub_1D5DFA9B8()
{
  unint64_t result;

  result = qword_1EFFB8A08;
  if (!qword_1EFFB8A08)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42F98, &_s13ConfigurationV35PersonalizedMultiplierConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A08);
  }
  return result;
}

unint64_t sub_1D5DFAA00()
{
  unint64_t result;

  result = qword_1EFFB8A10;
  if (!qword_1EFFB8A10)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42FC0, &_s13ConfigurationV35PersonalizedMultiplierConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A10);
  }
  return result;
}

unint64_t sub_1D5DFAA48()
{
  unint64_t result;

  result = qword_1EFFB8A18;
  if (!qword_1EFFB8A18)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42EE0, &_s13ConfigurationV27FlowEstimationConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A18);
  }
  return result;
}

unint64_t sub_1D5DFAA90()
{
  unint64_t result;

  result = qword_1EFFB8A20;
  if (!qword_1EFFB8A20)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42F08, &_s13ConfigurationV27FlowEstimationConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A20);
  }
  return result;
}

unint64_t sub_1D5DFAAD8()
{
  unint64_t result;

  result = qword_1EFFB8A28;
  if (!qword_1EFFB8A28)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42E28, &_s13ConfigurationV30NicheContentScoreConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A28);
  }
  return result;
}

unint64_t sub_1D5DFAB20()
{
  unint64_t result;

  result = qword_1EFFB8A30;
  if (!qword_1EFFB8A30)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42E50, &_s13ConfigurationV30NicheContentScoreConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A30);
  }
  return result;
}

unint64_t sub_1D5DFAB68()
{
  unint64_t result;

  result = qword_1EFFB8A38;
  if (!qword_1EFFB8A38)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42D70, &_s13ConfigurationV32PremiumSubscriptionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A38);
  }
  return result;
}

unint64_t sub_1D5DFABB0()
{
  unint64_t result;

  result = qword_1EFFB8A40;
  if (!qword_1EFFB8A40)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42D98, &_s13ConfigurationV32PremiumSubscriptionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A40);
  }
  return result;
}

unint64_t sub_1D5DFABF8()
{
  unint64_t result;

  result = qword_1EFFB8A48;
  if (!qword_1EFFB8A48)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42CB8, &_s13ConfigurationV30UserFeedbackScoreConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A48);
  }
  return result;
}

unint64_t sub_1D5DFAC40()
{
  unint64_t result;

  result = qword_1EFFB8A50;
  if (!qword_1EFFB8A50)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42CE0, &_s13ConfigurationV30UserFeedbackScoreConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A50);
  }
  return result;
}

unint64_t sub_1D5DFAC88()
{
  unint64_t result;

  result = qword_1EFFB8A58;
  if (!qword_1EFFB8A58)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42C00, &_s13ConfigurationV35ContentTriggerDampenerConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A58);
  }
  return result;
}

unint64_t sub_1D5DFACD0()
{
  unint64_t result;

  result = qword_1EFFB8A60;
  if (!qword_1EFFB8A60)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42C28, &_s13ConfigurationV35ContentTriggerDampenerConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A60);
  }
  return result;
}

unint64_t sub_1D5DFAD18()
{
  unint64_t result;

  result = qword_1EFFB8A68;
  if (!qword_1EFFB8A68)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42B48, &_s13ConfigurationV33SubscribedCountScoreConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A68);
  }
  return result;
}

unint64_t sub_1D5DFAD60()
{
  unint64_t result;

  result = qword_1EFFB8A70;
  if (!qword_1EFFB8A70)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42B70, &_s13ConfigurationV33SubscribedCountScoreConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A70);
  }
  return result;
}

unint64_t sub_1D5DFADA8()
{
  unint64_t result;

  result = qword_1EFFB8A78;
  if (!qword_1EFFB8A78)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42A90, &_s13ConfigurationV23EvaluationConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A78);
  }
  return result;
}

unint64_t sub_1D5DFADF0()
{
  unint64_t result;

  result = qword_1EFFB8A80;
  if (!qword_1EFFB8A80)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42AB8, &_s13ConfigurationV23EvaluationConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A80);
  }
  return result;
}

unint64_t sub_1D5DFAE38()
{
  unint64_t result;

  result = qword_1ED9AE638;
  if (!qword_1ED9AE638)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E429D8, &_s13ConfigurationV23ClusteringConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AE638);
  }
  return result;
}

unint64_t sub_1D5DFAE80()
{
  unint64_t result;

  result = qword_1ED9AE630;
  if (!qword_1ED9AE630)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42A00, &_s13ConfigurationV23ClusteringConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AE630);
  }
  return result;
}

void sub_1D5DFAEC4()
{
  JUMPOUT(0x1D827D8E0);
}

void sub_1D5DFAED4()
{
  JUMPOUT(0x1D827D8E0);
}

unint64_t sub_1D5DFAEE8()
{
  unint64_t result;

  result = qword_1EFFB8A88;
  if (!qword_1EFFB8A88)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42868, &_s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A88);
  }
  return result;
}

unint64_t sub_1D5DFAF30()
{
  unint64_t result;

  result = qword_1EFFB8A90;
  if (!qword_1EFFB8A90)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42890, &_s13ConfigurationV23ClusteringConfigurationV22SplittingConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A90);
  }
  return result;
}

unint64_t sub_1D5DFAF78()
{
  unint64_t result;

  result = qword_1ED9AF4D8;
  if (!qword_1ED9AF4D8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42778, &_s13ConfigurationV23ClusteringConfigurationV14DepthTransformV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AF4D8);
  }
  return result;
}

unint64_t sub_1D5DFAFC0()
{
  unint64_t result;

  result = qword_1ED9AF4D0;
  if (!qword_1ED9AF4D0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E427A0, &_s13ConfigurationV23ClusteringConfigurationV14DepthTransformV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AF4D0);
  }
  return result;
}

unint64_t sub_1D5DFB008()
{
  unint64_t result;

  result = qword_1ED9AECC0;
  if (!qword_1ED9AECC0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E426C0, &_s13ConfigurationV23ClusteringConfigurationV6QuotasV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AECC0);
  }
  return result;
}

unint64_t sub_1D5DFB050()
{
  unint64_t result;

  result = qword_1ED9AECB8;
  if (!qword_1ED9AECB8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E426E8, &_s13ConfigurationV23ClusteringConfigurationV6QuotasV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AECB8);
  }
  return result;
}

unint64_t sub_1D5DFB098()
{
  unint64_t result;

  result = qword_1ED9AECA0;
  if (!qword_1ED9AECA0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42608, &_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AECA0);
  }
  return result;
}

unint64_t sub_1D5DFB0E0()
{
  unint64_t result;

  result = qword_1ED9AEC98;
  if (!qword_1ED9AEC98)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42630, &_s13ConfigurationV23ClusteringConfigurationV14TopicDiversityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEC98);
  }
  return result;
}

unint64_t sub_1D5DFB128()
{
  unint64_t result;

  result = qword_1EFFB8A98;
  if (!qword_1EFFB8A98)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42550, &_s13ConfigurationV31TrackVisitedActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8A98);
  }
  return result;
}

unint64_t sub_1D5DFB170()
{
  unint64_t result;

  result = qword_1EFFB8AA0;
  if (!qword_1EFFB8AA0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42578, &_s13ConfigurationV31TrackVisitedActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8AA0);
  }
  return result;
}

unint64_t sub_1D5DFB1B8()
{
  unint64_t result;

  result = qword_1EFFB8AA8;
  if (!qword_1EFFB8AA8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42498, &_s13ConfigurationV32TrackListenedActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8AA8);
  }
  return result;
}

unint64_t sub_1D5DFB200()
{
  unint64_t result;

  result = qword_1EFFB8AB0;
  if (!qword_1EFFB8AB0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E424C0, &_s13ConfigurationV32TrackListenedActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8AB0);
  }
  return result;
}

unint64_t sub_1D5DFB248()
{
  unint64_t result;

  result = qword_1EFFB8AB8;
  if (!qword_1EFFB8AB8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E423E0, &_s13ConfigurationV32SportsTagSeenActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8AB8);
  }
  return result;
}

unint64_t sub_1D5DFB290()
{
  unint64_t result;

  result = qword_1EFFB8AC0;
  if (!qword_1EFFB8AC0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42408, &_s13ConfigurationV32SportsTagSeenActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8AC0);
  }
  return result;
}

unint64_t sub_1D5DFB2D8()
{
  unint64_t result;

  result = qword_1EFFB8AC8;
  if (!qword_1EFFB8AC8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42328, &_s13ConfigurationV30ArticleReadActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8AC8);
  }
  return result;
}

unint64_t sub_1D5DFB320()
{
  unint64_t result;

  result = qword_1EFFB8AD0;
  if (!qword_1EFFB8AD0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42350, &_s13ConfigurationV30ArticleReadActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8AD0);
  }
  return result;
}

unint64_t sub_1D5DFB368()
{
  unint64_t result;

  result = qword_1EFFB8AD8;
  if (!qword_1EFFB8AD8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42270, &_s13ConfigurationV19ActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8AD8);
  }
  return result;
}

unint64_t sub_1D5DFB3B0()
{
  unint64_t result;

  result = qword_1EFFB8AE0;
  if (!qword_1EFFB8AE0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E42298, &_s13ConfigurationV19ActionConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8AE0);
  }
  return result;
}

unint64_t sub_1D5DFB3F8()
{
  unint64_t result;

  result = qword_1EFFB8AE8;
  if (!qword_1EFFB8AE8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E421B8, &_s13ConfigurationV31PublisherDampeningConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8AE8);
  }
  return result;
}

unint64_t sub_1D5DFB440()
{
  unint64_t result;

  result = qword_1EFFB8AF0;
  if (!qword_1EFFB8AF0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E421E0, &_s13ConfigurationV31PublisherDampeningConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8AF0);
  }
  return result;
}

uint64_t sub_1D5DFB484(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001D5E49F00 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5E49F20 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E697070616DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D5DFB5D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x52656C6369747261 && a2 == 0xEB00000000646165;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61547374726F7073 && a2 == 0xED00006E65655367 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73694C6B63617274 && a2 == 0xED000064656E6574 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7369566B63617274 && a2 == 0xEC00000064657469)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D5DFB800(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5E49F40 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001D5E49F60 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5E49F90)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D5DFB9A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6953776F646E6977 && a2 == 0xEA0000000000657ALL || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x546465776F6C6C61 && a2 == 0xEF7344496369706FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1D5DFBB30(uint64_t a1, uint64_t a2, double (*a3)(__int128 *))
{
  unint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  __int128 *v13;
  double v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __int128 v25;
  double v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v4 = *(_QWORD *)(a1 + 16);
  v32 = *(_QWORD *)(a2 + 16);
  if (v32 >= v4)
    v5 = *(_QWORD *)(a1 + 16);
  else
    v5 = *(_QWORD *)(a2 + 16);
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1D5DB9D9C(0, v5, 0);
  v6 = v38;
  v29 = a2;
  if (v5)
  {
    v30 = a2 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = 0uLL;
      v10 = 0;
      if (v8 == v4)
      {
        v11 = 1;
        v8 = v4;
      }
      else
      {
        if (v8 >= v4)
        {
          __break(1u);
          goto LABEL_37;
        }
        if (v7 != v32)
        {
          if (v7 >= v32)
            goto LABEL_39;
          v11 = 0;
          v13 = (__int128 *)(v30 + 40 * v7++);
          v10 = *((_QWORD *)v13 + 4);
          v9 = *v13;
          v12 = v13[1];
          ++v8;
          goto LABEL_14;
        }
        v11 = 1;
        ++v8;
      }
      v12 = 0uLL;
LABEL_14:
      v34 = v9;
      v35 = v12;
      v36 = v10;
      v37 = v11;
      if ((v11 & 1) != 0)
        goto LABEL_40;
      v14 = a3(&v34);
      v38 = v6;
      v16 = *(_QWORD *)(v6 + 16);
      v15 = *(_QWORD *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1D5DB9D9C((char *)(v15 > 1), v16 + 1, 1);
        v6 = v38;
      }
      *(_QWORD *)(v6 + 16) = v16 + 1;
      *(double *)(v6 + 8 * v16 + 32) = v14;
      if (!--v5)
        goto LABEL_20;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
LABEL_20:
  if (v8 <= v4)
    v17 = v4;
  else
    v17 = v8;
  if (v7 <= v32)
    v18 = v32;
  else
    v18 = v7;
  v31 = v4 - v8;
  if (v4 == v8)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
    v20 = (_QWORD *)(v29 + 40 * v7 + 64);
    v21 = v32 - v7;
    v22 = v17 - v8;
    v23 = v18 - v7;
    while (v22 != v19)
    {
      if (v21 == v19)
        goto LABEL_27;
      if (v23 == v19)
        goto LABEL_38;
      v24 = *v20;
      v25 = *((_OWORD *)v20 - 1);
      v34 = *((_OWORD *)v20 - 2);
      v35 = v25;
      v36 = v24;
      v26 = a3(&v34);
      v38 = v6;
      v28 = *(_QWORD *)(v6 + 16);
      v27 = *(_QWORD *)(v6 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1D5DB9D9C((char *)(v27 > 1), v28 + 1, 1);
        v6 = v38;
      }
      *(_QWORD *)(v6 + 16) = v28 + 1;
      *(double *)(v6 + 8 * v28 + 32) = v26;
      v20 += 5;
      if (v31 == ++v19)
        goto LABEL_27;
    }
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
  }
}

uint64_t sub_1D5DFBE1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x52746C7561666564 && a2 == 0xEC0000006F697461;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x52646574746F6C73 && a2 == 0xED0000736F697461 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5E49FB0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5E49FD0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D5DFC004()
{
  unint64_t v0;

  v0 = sub_1D5E3771C();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1D5DFC04C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657A69536E696DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E49FF0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D5DFC138()
{
  return 15;
}

uint64_t sub_1D5DFC140(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D5E4A180 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5E4A1A0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E4A1C0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5E4A1E0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4A200 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001D5E4A220 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5E4A250 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001D5E4A270 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001D5E4A2A0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5E4A2D0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5E4A2F0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001D5E4A310 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4A340 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E4A360 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5E4A380 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5E4A3A0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5E4A3C0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5E4A3E0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D5E4A400 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5E4A420 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4A440 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5E4A460 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5E4A480 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5E4A4A0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5E4A4C0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5E4A4E0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else
  {
    v5 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 25;
    else
      return 26;
  }
}

uint64_t sub_1D5DFCA18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69746C754D666E61 && a2 == 0xED00007265696C70;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5E4A500 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001D5E4A530 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5E4A560 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D5E4A580 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5E4A5A0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5E4A5C0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001D5E4A5F0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001D5E4A620 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5E4A650 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000032 && a2 == 0x80000001D5E4A680 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000003ALL && a2 == 0x80000001D5E4A6C0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001D5E4A700 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001D5E4A730 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000033 && a2 == 0x80000001D5E4A760 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000002DLL && a2 == 0x80000001D5E4A7A0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x72656E65706D6164 && a2 == 0xEF64656C62616E45 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001D5E4A7D0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5E4A800 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5E4A820 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5E4A840 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001D5E4A860 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5E4A890 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D5E4A8B0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x64656E657473696CLL && a2 == 0xEF79746C616E6550 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5E4A8D0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5E4A8F0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5E4A910 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001D5E4A930 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001D5E4A960 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5E4A990 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0x616E655064616572 && a2 == 0xEB0000000079746CLL || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5E4A9B0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5E4A9E0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5E4AA00 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0x616E65506E656573 && a2 == 0xEB0000000079746CLL || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5E4AA20 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5E4AA40 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001D5E4AA60 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5E4AA90 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5E4AAB0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5E4AAE0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5E4AB00 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D5E4AB30 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5E4AB50 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 44;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001D5E4AB70 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 45;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D5E4ABA0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 46;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D5E4ABC0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 47;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4ABF0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001D5E4AC10 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 49;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5E4AC40)
  {
    swift_bridgeObjectRelease();
    return 50;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 50;
    else
      return 51;
  }
}

uint64_t sub_1D5DFDC0C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4AC60 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5E4AC80 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4ACA0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4ACC0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D5DFDDA0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001D5E4ACE0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65706D614478616DLL && a2 == 0xEB0000000072656ELL || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E65764578616DLL && a2 == 0xED0000746E756F43 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65726F63536E696DLL && a2 == 0xEE00746867696557 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x70784565726F6373 && a2 == 0xED0000746E656E6FLL || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5E4AD00)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1D5DFE09C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E4AD20 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5E4AD40 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6974756C6964 && a2 == 0xEE00726F74636146 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5E4AD70 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5E4AD90 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65576C61626F6C67 && a2 == 0xEC00000074686769 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4ADB0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5E4ADD0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x46676E6964646170 && a2 == 0xED0000726F746361 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4ADF0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4AE10 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6269726373627573 && a2 == 0xEF74736F6F426465 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001D5E4AE30 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5E4AE60 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D5E4AE80)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v5 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t sub_1D5DFE6D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C754D6F69647561 && a2 == 0xEF7265696C706974;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4AEA0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4AEC0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4AEE0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5E4AF00 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E4AF20)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1D5DFE940(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5E4AF40 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x46746C7561666564 && a2 == 0xEF65746152776F6CLL || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5E4AF60 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5E4AF80 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5E4AFA0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5E4AFC0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F6C466863746566 && a2 == 0xEF74686769655777 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5E4AFE0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001D5E4B000 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x696C7069746C756DLL && a2 == 0xEF74736F6F427265 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001D5E4B030 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5E4B060 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4B080 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5E4B0A0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5E4B0C0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5E4B0E0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4B100 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5E4B120 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5E4B140)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    v5 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 18;
    else
      return 19;
  }
}

uint64_t sub_1D5DFF070(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E656E6F707865 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6964646170 && a2 == 0xE700000000000000 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F697270 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D5DFF1BC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E4AD20 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E4B160 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4ADF0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4AE10)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D5DFF350(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5E4B180 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5E4B1A0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5E4B1C0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73726F697270 && a2 == 0xE600000000000000 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5E4B1E0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D5E4B200)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1D5DFF598(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656E696C65736162 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6172656E6567 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D5DFF688(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001D5E4B220)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D5DFF70C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7361427441706163 && a2 == 0xED0000656E696C65;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D5E4B240 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x476E4974696D696CLL && a2 == 0xEC00000070756F72 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4B260 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C754D65726F6373 && a2 == 0xEF7265696C706974 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E4B280 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6867696557676174 && a2 == 0xE900000000000074 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001D5E4B2A0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1D5DFFA9C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4B2C0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4B2E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D5DFFB84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7461527961636564 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5E4B300 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5E4B320)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D5DFFCDC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x52656C6369747261 && a2 == 0xEB00000000646165;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x53656C6369747261 && a2 == 0xEB000000006E6565 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x56656C6369747261 && a2 == 0xEE00646574697369 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656B696C736964 && a2 == 0xE700000000000000 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7765695664656566 && a2 == 0xE800000000000000 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x776F6C6C6F66 && a2 == 0xE600000000000000 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x65726F6E6769 && a2 == 0xE600000000000000 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1701538156 && a2 == 0xE400000000000000 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1702131053 && a2 == 0xE400000000000000 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6465766173 && a2 == 0xE500000000000000 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6572616873 && a2 == 0xE500000000000000 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x61547374726F7073 && a2 == 0xED00006E65655367 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E69466B63617274 && a2 == 0xED00006465687369 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x73694C6B63617274 && a2 == 0xED000064656E6574 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x7369566B63617274 && a2 == 0xEC00000064657469 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x776F6C6C6F666E75 && a2 == 0xE800000000000000 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6574756D6E75 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 16;
    else
      return 17;
  }
}

uint64_t sub_1D5E00438(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000019 && a2 == 0x80000001D5E4B340 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5E4B360)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D5E00520(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736B63696C63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEB00000000736E6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D5E00620(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001D5E4B380 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5E4B3A0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5E4B3C0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4B3E0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5E4B400 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5E4B420 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4B440)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

unint64_t sub_1D5E008B0()
{
  unint64_t result;

  result = qword_1ED9AE678;
  if (!qword_1ED9AE678)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E3E024, &_s13ConfigurationV23ClusteringConfigurationV19ClusterOrderingModeON);
    atomic_store(result, (unint64_t *)&qword_1ED9AE678);
  }
  return result;
}

unint64_t sub_1D5E008F4()
{
  unint64_t result;

  result = qword_1EFFB8AF8;
  if (!qword_1EFFB8AF8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E3DB7C, &_s13ConfigurationV31PublisherDampeningConfigurationV17DampeningStrategyON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8AF8);
  }
  return result;
}

void sub_1D5E00938()
{
  uint64_t v0;

  sub_1D5DD1FC4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D5E00978(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D5E009A0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5E009CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D5E00A10(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D5E00A58(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5E00DBC(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1D5D81E38(&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D5E00F28(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  int64_t v20;
  _BYTE v21[8];
  uint64_t v22;
  unint64_t v23;
  _OWORD v24[5];
  _BYTE v25[25];

  v1 = result;
  v2 = 0;
  v19 = result + 56;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 56);
  v20 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v5)
    {
      v6 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v7 = v6 | (v2 << 6);
      goto LABEL_5;
    }
    v16 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v20)
      return swift_release();
    v17 = *(_QWORD *)(v19 + 8 * v16);
    ++v2;
    if (!v17)
    {
      v2 = v16 + 1;
      if (v16 + 1 >= v20)
        return swift_release();
      v17 = *(_QWORD *)(v19 + 8 * v2);
      if (!v17)
      {
        v2 = v16 + 2;
        if (v16 + 2 >= v20)
          return swift_release();
        v17 = *(_QWORD *)(v19 + 8 * v2);
        if (!v17)
        {
          v2 = v16 + 3;
          if (v16 + 3 >= v20)
            return swift_release();
          v17 = *(_QWORD *)(v19 + 8 * v2);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v17 - 1) & v17;
    v7 = __clz(__rbit64(v17)) + (v2 << 6);
LABEL_5:
    v8 = (_OWORD *)(*(_QWORD *)(v1 + 48) + 112 * v7);
    v10 = v8[1];
    v9 = v8[2];
    v24[0] = *v8;
    v24[1] = v10;
    v24[2] = v9;
    v12 = v8[4];
    v11 = v8[5];
    v13 = v8[3];
    *(_OWORD *)&v25[9] = *(_OWORD *)((char *)v8 + 89);
    v24[4] = v12;
    *(_OWORD *)v25 = v11;
    v24[3] = v13;
    sub_1D5DA2190((uint64_t)v24);
    sub_1D5E0CF48((uint64_t)v21, (uint64_t)v24);
    v14 = v22;
    v15 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1D5DA2260(v14, v15);
  }
  v18 = v16 + 4;
  if (v18 >= v20)
    return swift_release();
  v17 = *(_QWORD *)(v19 + 8 * v18);
  if (v17)
  {
    v2 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v2 >= v20)
      return swift_release();
    v17 = *(_QWORD *)(v19 + 8 * v2);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D5E01134(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  if (*(_BYTE *)(a3 + 40) != 1)
    return result;
  v4 = result;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a4 + 16);
  if (!v6)
  {
    if (v5 <= 0)
      goto LABEL_29;
    return result;
  }
  v31 = *(_QWORD *)(a3 + 16);
  v34 = a4 + 32;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  v32 = v4;
  v33 = v6;
  do
  {
    v9 = (_QWORD *)(v34 + 112 * v7);
    v10 = v9[4];
    if (!*(_QWORD *)(v10 + 16))
    {
      v20 = 0;
      goto LABEL_26;
    }
    v11 = v9[9];
    v12 = v9[10];
    sub_1D5E379A4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36 = v11;
    v35 = v12;
    sub_1D5DA2208(v11, v12);
    sub_1D5E3744C();
    v13 = sub_1D5E379C8();
    v14 = -1 << *(_BYTE *)(v10 + 32);
    v15 = v13 & ~v14;
    v16 = v10 + 56;
    if (((*(_QWORD *)(v10 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      v17 = *(_QWORD *)(v10 + 48);
      v18 = (_QWORD *)(v17 + 16 * v15);
      if (*v18 != v4 || v18[1] != a2)
      {
        if ((sub_1D5E378FC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v20 = 1;
          v4 = v32;
LABEL_24:
          v6 = v33;
          v21 = v36;
          v22 = v35;
          goto LABEL_25;
        }
        v23 = ~v14;
        v24 = (v15 + 1) & v23;
        v25 = a2;
        v4 = v32;
        if (((*(_QWORD *)(v16 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v20 = 0;
          goto LABEL_24;
        }
        while (1)
        {
          v26 = (_QWORD *)(v17 + 16 * v24);
          if (*v26 == v32 && v26[1] == v25)
            break;
          v28 = sub_1D5E378FC();
          v25 = a2;
          if ((v28 & 1) != 0)
            break;
          v24 = (v24 + 1) & v23;
          if (((*(_QWORD *)(v16 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
            goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = 1;
      goto LABEL_24;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = 0;
    v21 = v36;
    v22 = v12;
    v6 = v33;
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1D5DA2260(v21, v22);
LABEL_26:
    v29 = __OFADD__(v8, v20);
    v8 += v20;
    if (v29)
    {
      __break(1u);
      return result;
    }
    ++v7;
  }
  while (v7 != v6);
  result = swift_bridgeObjectRelease();
  v5 = v31;
  if (v8 < v31)
    return result;
LABEL_29:
  sub_1D5E1E2B0();
  swift_allocError();
  *(_QWORD *)v30 = v4;
  *(_QWORD *)(v30 + 8) = a2;
  *(_QWORD *)(v30 + 24) = 0;
  *(_QWORD *)(v30 + 32) = 0;
  *(_QWORD *)(v30 + 16) = v5;
  *(_BYTE *)(v30 + 40) = 5;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

void sub_1D5E01494()
{
  __asm { BR              X10 }
}

unint64_t sub_1D5E014D4()
{
  sub_1D5E37650();
  swift_bridgeObjectRelease();
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  return 0xD00000000000001ALL;
}

uint64_t sub_1D5E01820(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 4 || a4 == 5)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D5E01848(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5E01888 + 4 * byte_1D5E44228[a1]))(0x6269737365636361, 0xED00007974696C69);
}

uint64_t sub_1D5E01888()
{
  return 0x6565726772657665;
}

uint64_t sub_1D5E018AC()
{
  return 0x696D694C63676961;
}

unint64_t sub_1D5E018C8()
{
  return 0xD000000000000012;
}

uint64_t sub_1D5E0195C()
{
  return 1;
}

unint64_t sub_1D5E0196C()
{
  return 0xD000000000000018;
}

uint64_t sub_1D5E01988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5E18A50(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5E019B0()
{
  return 0;
}

void sub_1D5E019BC(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D5E019C8()
{
  sub_1D5E17E7C();
  return sub_1D5E37A04();
}

uint64_t sub_1D5E019F0()
{
  sub_1D5E17E7C();
  return sub_1D5E37A10();
}

uint64_t sub_1D5E01A18()
{
  return 1;
}

unint64_t sub_1D5E01A28()
{
  return 0xD000000000000010;
}

uint64_t sub_1D5E01A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5E18AD4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5E01A6C()
{
  return 0;
}

void sub_1D5E01A78(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D5E01A84()
{
  sub_1D5E17DF4();
  return sub_1D5E37A04();
}

uint64_t sub_1D5E01AAC()
{
  sub_1D5E17DF4();
  return sub_1D5E37A10();
}

BOOL sub_1D5E01AD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D5E01AEC()
{
  return sub_1D5E379B0();
}

uint64_t sub_1D5E01B18()
{
  unsigned __int8 *v0;

  return sub_1D5E01848(*v0);
}

uint64_t sub_1D5E01B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5E18B58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5E01B44()
{
  return 0;
}

void sub_1D5E01B50(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1D5E01B5C()
{
  sub_1D5E17C5C();
  return sub_1D5E37A04();
}

uint64_t sub_1D5E01B84()
{
  sub_1D5E17C5C();
  return sub_1D5E37A10();
}

uint64_t sub_1D5E01BAC()
{
  return 1;
}

unint64_t sub_1D5E01BBC()
{
  return 0xD000000000000015;
}

uint64_t sub_1D5E01BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5E18EF0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5E01C00()
{
  return 0;
}

void sub_1D5E01C0C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D5E01C18()
{
  sub_1D5E17E38();
  return sub_1D5E37A04();
}

uint64_t sub_1D5E01C40()
{
  sub_1D5E17E38();
  return sub_1D5E37A10();
}

uint64_t sub_1D5E01C68()
{
  return 1;
}

uint64_t sub_1D5E01C74()
{
  return sub_1D5E379B0();
}

uint64_t sub_1D5E01C9C()
{
  return 0x74696D696CLL;
}

uint64_t sub_1D5E01CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5E378FC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5E01D3C()
{
  return 0;
}

void sub_1D5E01D48(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D5E01D54()
{
  sub_1D5E17CE4();
  return sub_1D5E37A04();
}

uint64_t sub_1D5E01D7C()
{
  sub_1D5E17CE4();
  return sub_1D5E37A10();
}

uint64_t sub_1D5E01DA4()
{
  return 1;
}

unint64_t sub_1D5E01DB4()
{
  return 0xD000000000000012;
}

uint64_t sub_1D5E01DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5E18F74(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5E01DF8()
{
  return 0;
}

void sub_1D5E01E04(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D5E01E10()
{
  sub_1D5E17CA0();
  return sub_1D5E37A04();
}

uint64_t sub_1D5E01E38()
{
  sub_1D5E17CA0();
  return sub_1D5E37A10();
}

uint64_t sub_1D5E01E60()
{
  return 1;
}

unint64_t sub_1D5E01E70()
{
  return 0xD000000000000017;
}

uint64_t sub_1D5E01E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5E18FF8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D5E01EB4()
{
  return 0;
}

void sub_1D5E01EC0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D5E01ECC()
{
  sub_1D5E17DB0();
  return sub_1D5E37A04();
}

uint64_t sub_1D5E01EF4()
{
  sub_1D5E17DB0();
  return sub_1D5E37A10();
}

uint64_t sub_1D5E01F1C()
{
  return 1;
}

uint64_t sub_1D5E01F2C()
{
  return 0x6769666E6F63;
}

uint64_t sub_1D5E01F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6769666E6F63 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5E378FC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5E01FCC()
{
  return 0;
}

void sub_1D5E01FD8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D5E01FE4()
{
  sub_1D5E17D28();
  return sub_1D5E37A04();
}

uint64_t sub_1D5E0200C()
{
  sub_1D5E17D28();
  return sub_1D5E37A10();
}

uint64_t sub_1D5E02034()
{
  return 1;
}

uint64_t sub_1D5E02040()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

uint64_t sub_1D5E02084()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

uint64_t sub_1D5E020C0()
{
  return 12383;
}

uint64_t sub_1D5E020CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D5E378FC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D5E02148()
{
  return 0;
}

void sub_1D5E02154(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D5E02160()
{
  sub_1D5E17D6C();
  return sub_1D5E37A04();
}

uint64_t sub_1D5E02188()
{
  sub_1D5E17D6C();
  return sub_1D5E37A10();
}

void sub_1D5E021B0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[4];
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF1C8);
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x1E0C80A78](v3, v4);
  v40 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF190);
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38, v6);
  v34 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF1B8);
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39, v8);
  v35 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF1B0);
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v31 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF1C0);
  v29 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  MEMORY[0x1E0C80A78](v13, v14);
  v28 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF530);
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27, v16);
  v25 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF1A8);
  v23[3] = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24, v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF1A0);
  MEMORY[0x1E0C80A78](v19, v20);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF198);
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45, v21);
  v43 = *v1;
  v23[2] = v1[1];
  v23[1] = v1[2];
  v22 = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E17C5C();
  sub_1D5E379F8();
  __asm { BR              X9 }
}

uint64_t sub_1D5E024AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 112) = 0;
  sub_1D5E17E7C();
  v5 = *(_QWORD *)(v4 - 72);
  sub_1D5E37800();
  sub_1D5E37890();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 128) + 8))(v1, v5);
}

uint64_t sub_1D5E02868@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD v37[4];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;

  v56 = a2;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB8B10);
  v49 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60, v3);
  v59 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB8B18);
  v47 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58, v5);
  v55 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB8B20);
  v48 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50, v7);
  v57 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB8B28);
  v45 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  MEMORY[0x1E0C80A78](v9, v10);
  v54 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB8B30);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44, v12);
  v53 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB8B38);
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42, v14);
  v52 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB8B40);
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40, v16);
  v51 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB8B48);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20);
  v22 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB8B50);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23, v25);
  v27 = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a1[3];
  v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_1D5E17C5C();
  v29 = v62;
  sub_1D5E379E0();
  if (!v29)
  {
    v37[3] = v22;
    v37[1] = v19;
    v37[2] = v18;
    v38 = v24;
    v62 = v23;
    v30 = sub_1D5E377E8();
    if (*(_QWORD *)(v30 + 16) == 1)
      __asm { BR              X9 }
    v31 = v27;
    v32 = sub_1D5E37674();
    swift_allocError();
    v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB52B8);
    *v34 = &_s22HeadlineClusteringRuleON;
    v35 = v62;
    sub_1D5E37734();
    sub_1D5E3765C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x1E0DEC450], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v35);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
}

uint64_t sub_1D5E033A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D5E02868(a1, a2);
}

void sub_1D5E033BC(_QWORD *a1)
{
  sub_1D5E021B0(a1);
}

uint64_t sub_1D5E033D4()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

uint64_t sub_1D5E0341C()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

void sub_1D5E0345C(uint64_t a1@<X0>, uint64_t a2@<X3>, char *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, char a6@<W7>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _QWORD v11[2];
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v7 = *(_QWORD *)(a4 + 8);
  v8 = *(_QWORD *)(a4 + 48);
  v9 = *(_QWORD *)(a4 + 56);
  v11[0] = *(_QWORD *)a4;
  v11[1] = v7;
  v10 = *(_OWORD *)(a4 + 32);
  v12 = *(_OWORD *)(a4 + 16);
  v13 = v10;
  v14 = v8;
  v15 = v9;
  sub_1D5E034C4(a1, 0, 1, a2, a3, (uint64_t)v11, a5, 0x7FFFFFFFFFFFFFFFLL, a7, 0, (double (*)(char *, double, double))sub_1D5E03CA0, 0, a6);
}

void sub_1D5E034C4(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, double (*a11)(char *, double, double), uint64_t a12, char a13)
{
  uint64_t v13;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t (*)());
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  void (*v49)(uint64_t (*)(), _QWORD *);
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  _QWORD *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  _QWORD v76[4];
  char v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  _OWORD v83[2];
  _OWORD v84[5];

  v73 = a4;
  v74 = a8;
  v15 = a5;
  v16 = a4;
  v18 = a2;
  v62 = a9;
  v20 = *(_OWORD *)(a6 + 16);
  v84[0] = *(_OWORD *)a6;
  v84[1] = v20;
  v21 = *(_OWORD *)(a6 + 48);
  v84[2] = *(_OWORD *)(a6 + 32);
  v84[3] = v21;
  if (a7)
  {
    v22 = *(_QWORD *)(a6 + 56);
    *(_QWORD *)&v78 = *(_QWORD *)a6;
    v23 = *(_OWORD *)(a6 + 32);
    v79 = *(_OWORD *)(a6 + 16);
    v24 = *(_QWORD *)(a6 + 48);
    v13 = *(_QWORD *)(a6 + 8);
    if ((a3 & 1) != 0)
      v25 = 0;
    else
      v25 = a2;
    *((_QWORD *)&v78 + 1) = *(_QWORD *)(a6 + 8);
    v80 = v23;
    *(_QWORD *)&v81 = v24;
    *((_QWORD *)&v81 + 1) = v22;
    *(_QWORD *)&v82 = v25;
    *((_QWORD *)&v82 + 1) = a4;
    *(_QWORD *)&v83[0] = a5;
    sub_1D5E1DF6C((uint64_t)v84);
    swift_bridgeObjectRetain();
    ClusteringJournal.set(clusteringRequirements:)(&v78);
    v16 = v73;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if ((a3 & 1) == 0)
  {
    v26 = *(_QWORD *)(a1 + 16);
    if (v26 < v18)
    {
      v27 = v62;
      if (a7 && *(_BYTE *)(a7 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
      {
        v28 = *(_QWORD *)(a7 + 48);
        if (v28)
        {
          *(_QWORD *)&v78 = v18;
          *((_QWORD *)&v78 + 1) = v26;
          v79 = v28;
          LOBYTE(v80) = 1;
          swift_bridgeObjectRetain();
          sub_1D5DB7D58((uint64_t)&v78);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (qword_1ED9ADAB8[0] != -1)
            swift_once();
          v56 = (id)qword_1ED9AEC38;
          sub_1D5E375E4();
          sub_1D5E373A4();

        }
      }
      *v62 = 0;
      v27[1] = 0;
      return;
    }
  }
  if (v16 < 0)
  {
    __break(1u);
  }
  else
  {
    v63 = v18;
    v13 = a10;
    sub_1D5E1DF6C((uint64_t)v84);
    swift_retain();
    sub_1D5E14500(0, v16, (double *)v84, a11);
    v18 = v29;
    swift_release();
    sub_1D5E1CAD0((uint64_t)v84);
    v30 = (uint64_t *)swift_allocObject();
    v31 = MEMORY[0x1E0DEE9D8];
    v70 = v30;
    v30[2] = MEMORY[0x1E0DEE9D8];
    v61 = v30 + 2;
    v32 = swift_allocObject();
    v71 = v32;
    *(_QWORD *)(v32 + 16) = v31;
    v60 = v32 + 16;
    v33 = swift_allocObject();
    v72 = v33;
    *(_QWORD *)(v33 + 16) = MEMORY[0x1E0DEE9E8];
    if (qword_1ED9ADB98 == -1)
      goto LABEL_14;
  }
  v33 = swift_once();
LABEL_14:
  MEMORY[0x1E0C80A78](v33, v34);
  v66 = v18;
  v58[0] = v15;
  v58[1] = v74;
  v58[2] = v13;
  v35(sub_1D5E17F58);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v15 = sub_1D5DAB4D4(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
  v36 = v62;
  v37 = v63;
  v39 = *((_QWORD *)v15 + 2);
  v38 = *((_QWORD *)v15 + 3);
  if (v39 >= v38 >> 1)
    v15 = sub_1D5DAB4D4((char *)(v38 > 1), v39 + 1, 1, v15);
  *((_QWORD *)v15 + 2) = v39 + 1;
  v40 = &v15[32 * v39];
  *((_QWORD *)v40 + 5) = 0;
  *((_QWORD *)v40 + 6) = 0;
  v41 = v74;
  *((_QWORD *)v40 + 4) = v74;
  v40[56] = 6;
  v67 = swift_allocObject();
  *(_BYTE *)(v67 + 16) = v13 >= v41;
  v68 = swift_allocObject();
  *(_BYTE *)(v68 + 16) = 0;
  v69 = swift_allocObject();
  *(_QWORD *)(v69 + 16) = 0;
  v65 = *(_QWORD *)(a1 + 16);
  if (v65)
  {
    HIDWORD(v59) = a3;
    v42 = swift_bridgeObjectRetain();
    v44 = 0;
    v45 = 32;
    v64 = a13 & 1;
    while (1)
    {
      v75 = &v59;
      v46 = *(_OWORD *)(a1 + v45 + 80);
      v82 = *(_OWORD *)(a1 + v45 + 64);
      v83[0] = v46;
      *(_OWORD *)((char *)v83 + 9) = *(_OWORD *)(a1 + v45 + 89);
      v47 = *(_OWORD *)(a1 + v45 + 16);
      v78 = *(_OWORD *)(a1 + v45);
      v79 = v47;
      v48 = *(_OWORD *)(a1 + v45 + 48);
      v80 = *(_OWORD *)(a1 + v45 + 32);
      v81 = v48;
      v49 = (void (*)(uint64_t (*)(), _QWORD *))qword_1ED9B7910;
      MEMORY[0x1E0C80A78](v42, v43);
      sub_1D5DA2190((uint64_t)&v78);
      v49(sub_1D5E17FAC, v58);
      if ((sub_1D5E16AE8(v72, (uint64_t)&v78, v70, v73, a1, v44, v71, a7, v64, (uint64_t)v15, v13, v69, v67, v68, v66, v74) & 1) == 0)break;
      ++v44;
      v42 = sub_1D5E17FB4((uint64_t)&v78);
      v45 += 112;
      if (v65 == v44)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    qword_1ED9B7910(sub_1D5E07C74, 0);
    sub_1D5E17FB4((uint64_t)&v78);
LABEL_26:
    v36 = v62;
    v37 = v63;
    v50 = v61;
    if ((v59 & 0x100000000) != 0)
      goto LABEL_31;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v50 = v61;
    if ((a3 & 1) != 0)
      goto LABEL_31;
  }
  swift_beginAccess();
  if (*(_QWORD *)(*v50 + 16) >= v37)
  {
LABEL_31:
    swift_beginAccess();
    v52 = v70[2];
    swift_beginAccess();
    v53 = *(_QWORD *)(v71 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *v36 = v52;
    v36[1] = v53;
    return;
  }
  if (a7
    && (v51 = v60, swift_beginAccess(), *(_BYTE *)(a7 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2))
  {
    v54 = *(_QWORD *)(a7 + 48);
    if (v54)
    {
      v55 = *(_QWORD *)(*(_QWORD *)v51 + 16);
      v76[0] = v37;
      v76[1] = v65;
      v76[2] = v55;
      v76[3] = v54;
      v77 = 2;
      swift_bridgeObjectRetain();
      sub_1D5DB7D58((uint64_t)v76);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1ED9ADAB8[0] != -1)
        swift_once();
      v57 = (id)qword_1ED9AEC38;
      sub_1D5E375E4();
      sub_1D5E373A4();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  *v36 = 0;
  v36[1] = 0;
}

void sub_1D5E03CA0(double a1, double a2)
{
  if ((~COERCE__INT64(a2 - a1) & 0x7FF0000000000000) != 0)
    sub_1D5E0FA58(0x20000000000001uLL);
  else
    __break(1u);
}

uint64_t sub_1D5E03D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED9AF420);
  sub_1D5E37440();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  sub_1D5E376B0();
  sub_1D5E37458();
  MEMORY[0x1D827D0A0](a6, &_s24BundleArticleQuotaResultON);
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  MEMORY[0x1D827D0A0](a7, &_s22HeadlineClusteringRuleON);
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E04054(uint64_t a1, char *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char **v35;
  _QWORD v36[8];
  char v37;
  uint64_t v38;

  v8 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 24);
  v32 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v30 = *(_BYTE *)(a1 + 65);
  v31 = *(_BYTE *)(a1 + 64);
  v28 = *(_BYTE *)(a1 + 67);
  v29 = *(_BYTE *)(a1 + 66);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a1 + 80);
  v27 = *(_QWORD *)(a1 + 96);
  v25 = *a2;
  v26 = *(_BYTE *)(a1 + 104);
  v23 = a3[1];
  v24 = *a3;
  v33 = *((unsigned __int8 *)a3 + 16);
  v35 = (char **)(a6 + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1D5DA2208(v14, v15);
  sub_1D5DA2208(v14, v15);
  sub_1D5D81E38(&v38, v8, v7);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (a5)
  {
    v36[0] = v8;
    v36[1] = v7;
    v36[2] = v13;
    v36[3] = v24;
    v36[4] = v23;
    v36[6] = 0;
    v36[7] = 0;
    v36[5] = v33;
    v37 = 0;
    ClusteringJournal.record(event:)((uint64_t)v36);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D5DA2208(v14, v15);
  sub_1D5DA2260(v14, v15);
  swift_bridgeObjectRelease();
  v34 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v16 = *v35;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v35 = v16;
  v18 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = sub_1D5DAAFFC(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    *v35 = v16;
  }
  v20 = *((_QWORD *)v16 + 2);
  v19 = *((_QWORD *)v16 + 3);
  if (v20 >= v19 >> 1)
  {
    v16 = sub_1D5DAAFFC((char *)(v19 > 1), v20 + 1, 1, v16);
    *v35 = v16;
  }
  *((_QWORD *)v16 + 2) = v20 + 1;
  v21 = &v16[112 * v20];
  *((_QWORD *)v21 + 4) = v18;
  *((_QWORD *)v21 + 5) = v7;
  *((_QWORD *)v21 + 6) = v32;
  *((_QWORD *)v21 + 7) = v34;
  *((_QWORD *)v21 + 8) = v10;
  *((_QWORD *)v21 + 9) = v11;
  *((_QWORD *)v21 + 10) = v12;
  *((_QWORD *)v21 + 11) = v13;
  v21[96] = v31;
  v21[97] = v30;
  v21[98] = v29;
  v21[99] = v28;
  *((_QWORD *)v21 + 13) = v14;
  *((_QWORD *)v21 + 14) = v15;
  v21[120] = v25;
  *((_QWORD *)v21 + 16) = v27;
  v21[136] = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1D5DA2260(v14, v15);
}

uint64_t sub_1D5E04358()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E04438()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E044D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  sub_1D5E37650();
  result = sub_1D5E37458();
  if (__OFSUB__(*(_QWORD *)(a1 + 16), a2))
  {
    __break(1u);
  }
  else
  {
    sub_1D5E378CC();
    sub_1D5E37458();
    swift_bridgeObjectRelease();
    sub_1D5E37458();
    return 0;
  }
  return result;
}

uint64_t sub_1D5E045A8()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E04644(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  BOOL v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t (*)());
  uint64_t (*v60)();
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  BOOL v77;
  uint64_t v78;
  _QWORD *v79;
  BOOL v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  BOOL v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  BOOL v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  char v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  BOOL v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  BOOL v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(uint64_t (*)());
  char v141;
  _OWORD *v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  __int128 *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v176;
  uint64_t v177;
  char v178;
  char v179;
  uint64_t v180;
  char v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  char v186;
  char v187;
  uint64_t v188;
  char v189;
  char v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  unint64_t v213;
  unint64_t v214;
  _QWORD *v215;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char v223[24];
  uint64_t v224;
  uint64_t v225;
  char v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  _OWORD v232[2];
  char v233[24];
  uint64_t v234;
  uint64_t v235;
  char v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  _BYTE v242[25];

  v21 = (_QWORD *)(a6 + 16);
  v169 = (uint64_t *)(a7 + 16);
  swift_beginAccess();
  v163 = a7;
  v22 = *(_QWORD *)(a7 + 16);
  v23 = *(_QWORD *)(v22 + 16);
  swift_retain();
  v173 = a3;
  v174 = a2;
  v170 = a4;
  v215 = v21;
  v164 = a6;
  if (!v23)
  {
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    goto LABEL_41;
  }
  v167 = v23;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v165 = a2 + 16;
  swift_beginAccess();
  v24 = v22 + 32;
  v25 = v23;
  v26 = 0;
  v160 = (char *)(a3 + 56);
  do
  {
    v27 = (uint64_t *)(v24 + 112 * v26);
    if (*((_BYTE *)v27 + 66) != 1)
      goto LABEL_3;
    v28 = v27[1];
    v193 = v27[2];
    v205 = v27[3];
    v203 = v27[4];
    v201 = v27[5];
    v199 = v27[6];
    v29 = v27[7];
    v190 = *((_BYTE *)v27 + 65);
    v187 = *((_BYTE *)v27 + 67);
    v207 = v27[9];
    v211 = v27[10];
    v185 = *((_BYTE *)v27 + 88);
    v183 = v27[12];
    v181 = *((_BYTE *)v27 + 104);
    if ((a1 & 1) != 0)
    {
      if ((v27[8] & 1) == 0)
        goto LABEL_3;
    }
    else if ((v27[8] & 1) != 0)
    {
      goto LABEL_3;
    }
    v179 = *((_BYTE *)v27 + 64);
    v196 = *v27;
    v161 = 112 * v26;
    v30 = *(_QWORD *)v165;
    v172 = v26;
    if (!*(_QWORD *)(*(_QWORD *)v165 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D5DA2208(v207, v211);
      goto LABEL_20;
    }
    sub_1D5E379A4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D5DA2208(v207, v211);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D5E3744C();
    v31 = v28;
    v32 = sub_1D5E379C8();
    v33 = -1 << *(_BYTE *)(v30 + 32);
    v34 = v32 & ~v33;
    v35 = v30 + 56;
    if (((*(_QWORD *)(v30 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = v172;
      v28 = v31;
      goto LABEL_19;
    }
    v217 = *(_QWORD *)(v30 + 48);
    v36 = (_QWORD *)(v217 + 16 * v34);
    v37 = *v36 == v196 && v36[1] == v31;
    if (!v37 && (sub_1D5E378FC() & 1) == 0)
    {
      v43 = ~v33;
      v44 = (v34 + 1) & v43;
      if (((*(_QWORD *)(v35 + ((v44 >> 3) & 0xFFFFFFFFFFFFF8)) >> v44) & 1) == 0)
      {
LABEL_34:
        v28 = v31;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = v172;
LABEL_19:
        a2 = v174;
LABEL_20:
        v38 = *(_QWORD *)(v173 + 16);
        if (v38)
        {
          swift_bridgeObjectRetain();
          swift_beginAccess();
          swift_beginAccess();
          v39 = v160;
          v177 = v28;
          while (1)
          {
            a2 = a5 + *v21;
            if (__OFADD__(a5, *v21))
              break;
            v218 = v38;
            v40 = *((_QWORD *)v39 - 2);
            v41 = *((_QWORD *)v39 - 1);
            v42 = *v39;
            *(_QWORD *)&v227 = *((_QWORD *)v39 - 3);
            *((_QWORD *)&v227 + 1) = v40;
            *(_QWORD *)&v228 = v41;
            BYTE8(v228) = v42;
            *(_QWORD *)&v237 = v196;
            *((_QWORD *)&v237 + 1) = v28;
            *(_QWORD *)&v238 = v193;
            *((_QWORD *)&v238 + 1) = v205;
            *(_QWORD *)&v239 = v203;
            *((_QWORD *)&v239 + 1) = v201;
            *(_QWORD *)&v240 = v199;
            *((_QWORD *)&v240 + 1) = v29;
            LOBYTE(v241) = v179;
            BYTE1(v241) = v190;
            BYTE2(v241) = 1;
            BYTE3(v241) = v187;
            *((_QWORD *)&v241 + 1) = v207;
            *(_QWORD *)v242 = v211;
            v242[8] = v185;
            *(_QWORD *)&v242[16] = v183;
            v242[24] = v181;
            sub_1D5E1CE34(v227, v40, v41, v42);
            swift_bridgeObjectRetain();
            sub_1D5E148A4();
            v39 += 32;
            swift_bridgeObjectRelease();
            sub_1D5E01820(v227, v40, v41, v42);
            v38 = v218 - 1;
            v21 = v215;
            v28 = v177;
            if (v218 == 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a2 = v174;
              v26 = v172;
              goto LABEL_35;
            }
          }
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
          goto LABEL_167;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_35:
        sub_1D5DA2260(v207, v211);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        if (v26 >= *(_QWORD *)(*v169 + 16))
          goto LABEL_166;
        v49 = (_OWORD *)(*v169 + v161);
        v50 = v49[2];
        v51 = v49[4];
        v238 = v49[3];
        v239 = v51;
        v237 = v50;
        v52 = v49[5];
        v53 = v49[6];
        v54 = v49[7];
        *(_OWORD *)&v242[9] = *(_OWORD *)((char *)v49 + 121);
        v241 = v53;
        *(_OWORD *)v242 = v54;
        v240 = v52;
        v230 = v49[5];
        v231 = v49[6];
        v232[0] = v49[7];
        *(_OWORD *)((char *)v232 + 9) = *(_OWORD *)((char *)v49 + 121);
        v227 = v49[2];
        v228 = v49[3];
        v229 = v49[4];
        v233[0] = 8;
        swift_beginAccess();
        v234 = *(_QWORD *)(*(_QWORD *)(v170 + 16) + 16);
        v235 = -1;
        v236 = 2;
        sub_1D5DA2190((uint64_t)&v237);
        sub_1D5E04054((uint64_t)&v227, v233, &v234, a2, a8, v170);
        swift_beginAccess();
        if (__OFADD__(*v21, 1))
        {
LABEL_167:
          __break(1u);
        }
        else
        {
          ++*v21;
          swift_beginAccess();
          sub_1D5E0602C(v26, (uint64_t)&v227);
          v55 = *((_QWORD *)&v231 + 1);
          v56 = *(_QWORD *)&v232[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v57 = sub_1D5DA2260(v55, v56);
          if (qword_1ED9ADB98 == -1)
          {
LABEL_38:
            MEMORY[0x1E0C80A78](v57, v58);
            v60 = sub_1D5E1E2A8;
            goto LABEL_155;
          }
        }
        v57 = swift_once();
        goto LABEL_38;
      }
      v45 = v196;
      while (1)
      {
        v46 = (_QWORD *)(v217 + 16 * v44);
        if (*v46 == v45 && v46[1] == v31)
          break;
        v48 = sub_1D5E378FC();
        v45 = v196;
        if ((v48 & 1) != 0)
          break;
        v44 = (v44 + 1) & v43;
        if (((*(_QWORD *)(v35 + ((v44 >> 3) & 0xFFFFFFFFFFFFF8)) >> v44) & 1) == 0)
          goto LABEL_34;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = v172;
    a2 = v174;
    sub_1D5DA2260(v207, v211);
    v25 = v167;
    v24 = v22 + 32;
LABEL_3:
    ++v26;
  }
  while (v26 != v25);
  swift_bridgeObjectRelease();
LABEL_41:
  v61 = *(_QWORD *)(a9 + 16);
  v62 = a10;
  if (v61 < a10)
    goto LABEL_164;
  if (a10 < 0)
    goto LABEL_165;
  v176 = *(_QWORD *)(a9 + 16);
  if (v61 == a10)
    goto LABEL_44;
  swift_bridgeObjectRetain();
  v166 = a2 + 16;
  swift_beginAccess();
  v81 = a9 + 32;
  while (2)
  {
    if (v62 >= v61)
      goto LABEL_160;
    v82 = (uint64_t *)(v81 + 112 * v62);
    if (*((_BYTE *)v82 + 66) == 1)
    {
      v83 = v82[1];
      v194 = v82[2];
      v206 = v82[3];
      v204 = v82[4];
      v202 = v82[5];
      v200 = v82[6];
      v84 = v82[7];
      v192 = *((_BYTE *)v82 + 65);
      v189 = *((_BYTE *)v82 + 67);
      v209 = v82[9];
      v213 = v82[10];
      v186 = *((_BYTE *)v82 + 88);
      v184 = v82[12];
      v182 = *((_BYTE *)v82 + 104);
      if ((a1 & 1) != 0)
      {
        if ((v82[8] & 1) == 0)
          goto LABEL_92;
      }
      else if ((v82[8] & 1) != 0)
      {
        goto LABEL_92;
      }
      v178 = *((_BYTE *)v82 + 64);
      v198 = *v82;
      v162 = (__int128 *)(v81 + 112 * v62);
      v168 = v62;
      v85 = *(_QWORD *)v166;
      if (*(_QWORD *)(*(_QWORD *)v166 + 16))
      {
        sub_1D5E379A4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v209, v213);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5E3744C();
        v86 = sub_1D5E379C8();
        v87 = -1 << *(_BYTE *)(v85 + 32);
        v88 = v86 & ~v87;
        v89 = v85 + 56;
        if (((*(_QWORD *)(v85 + 56 + ((v88 >> 3) & 0xFFFFFFFFFFFFF8)) >> v88) & 1) != 0)
        {
          v220 = *(_QWORD *)(v85 + 48);
          v90 = (_QWORD *)(v220 + 16 * v88);
          v91 = *v90 == v198 && v90[1] == v83;
          if (v91 || (sub_1D5E378FC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a2 = v174;
LABEL_91:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1D5DA2260(v209, v213);
            v81 = a9 + 32;
            v62 = v168;
            goto LABEL_92;
          }
          v98 = ~v87;
          v99 = (v88 + 1) & v98;
          a2 = v174;
          if (((*(_QWORD *)(v89 + ((v99 >> 3) & 0xFFFFFFFFFFFFF8)) >> v99) & 1) != 0)
          {
            v100 = v198;
            while (1)
            {
              v101 = (_QWORD *)(v220 + 16 * v99);
              if (*v101 == v100 && v101[1] == v83)
                break;
              v103 = sub_1D5E378FC();
              v100 = v198;
              if ((v103 & 1) != 0)
                break;
              v99 = (v99 + 1) & v98;
              if (((*(_QWORD *)(v89 + ((v99 >> 3) & 0xFFFFFFFFFFFFF8)) >> v99) & 1) == 0)
                goto LABEL_103;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_91;
          }
LABEL_103:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a2 = v174;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v209, v213);
      }
      v92 = *(_QWORD *)(v173 + 16);
      if (v92)
      {
        v180 = v83;
        swift_bridgeObjectRetain();
        swift_beginAccess();
        swift_beginAccess();
        v93 = (char *)(v173 + 56);
        do
        {
          a2 = a5 + *v21;
          if (__OFADD__(a5, *v21))
            goto LABEL_159;
          v221 = v92;
          v94 = *((_QWORD *)v93 - 2);
          v95 = *((_QWORD *)v93 - 1);
          v96 = *v93;
          *(_QWORD *)&v227 = *((_QWORD *)v93 - 3);
          *((_QWORD *)&v227 + 1) = v94;
          *(_QWORD *)&v228 = v95;
          BYTE8(v228) = v96;
          *(_QWORD *)&v237 = v198;
          *((_QWORD *)&v237 + 1) = v180;
          *(_QWORD *)&v238 = v194;
          *((_QWORD *)&v238 + 1) = v206;
          *(_QWORD *)&v239 = v204;
          *((_QWORD *)&v239 + 1) = v202;
          *(_QWORD *)&v240 = v200;
          *((_QWORD *)&v240 + 1) = v84;
          LOBYTE(v241) = v178;
          BYTE1(v241) = v192;
          BYTE2(v241) = 1;
          BYTE3(v241) = v189;
          *((_QWORD *)&v241 + 1) = v209;
          *(_QWORD *)v242 = v213;
          v242[8] = v186;
          *(_QWORD *)&v242[16] = v184;
          v242[24] = v182;
          sub_1D5E1CE34(v227, v94, v95, v96);
          swift_bridgeObjectRetain();
          sub_1D5E148A4();
          v93 += 32;
          swift_bridgeObjectRelease();
          sub_1D5E01820(v227, v94, v95, v96);
          --v92;
          v21 = v215;
        }
        while (v221 != 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a2 = v174;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1D5DA2260(v209, v213);
      swift_bridgeObjectRelease();
      v104 = v162[3];
      v105 = v162[5];
      v241 = v162[4];
      *(_OWORD *)v242 = v105;
      *(_OWORD *)&v242[9] = *(__int128 *)((char *)v162 + 89);
      v106 = v162[1];
      v237 = *v162;
      v238 = v106;
      v107 = v162[3];
      v109 = *v162;
      v108 = v162[1];
      v239 = v162[2];
      v240 = v107;
      v110 = v162[5];
      v231 = v241;
      v232[0] = v110;
      *(_OWORD *)((char *)v232 + 9) = *(__int128 *)((char *)v162 + 89);
      v227 = v109;
      v228 = v108;
      v229 = v239;
      v230 = v104;
      v233[0] = 8;
      swift_beginAccess();
      v234 = *(_QWORD *)(*(_QWORD *)(v170 + 16) + 16);
      v235 = v168;
      v236 = 2;
      sub_1D5DA2190((uint64_t)&v237);
      sub_1D5E04054((uint64_t)&v227, v233, &v234, a2, a8, v170);
      v111 = swift_beginAccess();
      if (__OFADD__(*v21, 1))
      {
        __break(1u);
      }
      else
      {
        ++*v21;
        if (qword_1ED9ADB98 == -1)
        {
LABEL_107:
          MEMORY[0x1E0C80A78](v111, v112);
          v60 = sub_1D5E1E2A0;
          goto LABEL_155;
        }
      }
      v111 = swift_once();
      goto LABEL_107;
    }
LABEL_92:
    v97 = __OFADD__(v62++, 1);
    if (v97)
      goto LABEL_161;
    if (v62 != v61)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
LABEL_44:
  swift_beginAccess();
  v64 = *v169;
  v65 = *(_QWORD *)(*v169 + 16);
  if (!v65)
    goto LABEL_109;
  v66 = v64 + 32;
  swift_bridgeObjectRetain();
  v197 = a2 + 16;
  swift_beginAccess();
  v67 = v66;
  v68 = 0;
  v188 = v66;
  v191 = v65;
  while (1)
  {
    v69 = (uint64_t *)(v67 + 112 * v68);
    if (*((_BYTE *)v69 + 66) != 1)
      goto LABEL_47;
    v70 = v69[1];
    v219 = v69[10];
    if ((a1 & 1) != 0)
    {
      if ((v69[8] & 1) == 0)
        goto LABEL_47;
    }
    else if ((v69[8] & 1) != 0)
    {
      goto LABEL_47;
    }
    v71 = *(_QWORD *)v197;
    if (!*(_QWORD *)(*(_QWORD *)v197 + 16))
    {
      swift_bridgeObjectRelease();
      goto LABEL_151;
    }
    v208 = *v69;
    v212 = v69[9];
    sub_1D5E379A4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D5DA2208(v212, v219);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D5E3744C();
    v72 = sub_1D5E379C8();
    v73 = -1 << *(_BYTE *)(v71 + 32);
    v74 = v72 & ~v73;
    if (((*(_QWORD *)(v71 + 56 + ((v74 >> 3) & 0xFFFFFFFFFFFFF8)) >> v74) & 1) == 0)
      goto LABEL_150;
    v75 = *(_QWORD *)(v71 + 48);
    v76 = (_QWORD *)(v75 + 16 * v74);
    v77 = *v76 == v208 && v76[1] == v70;
    if (!v77 && (sub_1D5E378FC() & 1) == 0)
      break;
LABEL_46:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    a2 = v174;
    sub_1D5DA2260(v212, v219);
    v61 = v176;
    v67 = v188;
    v65 = v191;
LABEL_47:
    if (++v68 == v65)
    {
      v64 = swift_bridgeObjectRelease();
LABEL_109:
      if (v61 == a10)
      {
LABEL_143:
        if (a8)
        {
          v239 = 0u;
          v240 = 0u;
          v237 = 0u;
          v238 = 0u;
          LOBYTE(v241) = -16;
          v64 = ClusteringJournal.record(event:)((uint64_t)&v237);
        }
        if (qword_1ED9ADB98 != -1)
          v64 = swift_once();
        MEMORY[0x1E0C80A78](v64, v63);
        v140(sub_1D5E1E288);
        swift_beginAccess();
        *(_BYTE *)(a11 + 16) = 1;
        v159 = a16;
        v158 = a15;
        v157 = a14;
        v141 = a1 & 1;
        v156 = a11;
        v154 = a5;
        v155 = v164;
        goto LABEL_156;
      }
      swift_bridgeObjectRetain();
      v195 = a2 + 16;
      swift_beginAccess();
      v113 = a10;
      v114 = a9 + 32;
      while (1)
      {
        if (v113 >= v61)
          goto LABEL_162;
        v115 = (uint64_t *)(v114 + 112 * v113);
        if (*((_BYTE *)v115 + 66) != 1)
          goto LABEL_116;
        v116 = *v115;
        v222 = v115[1];
        if ((a1 & 1) != 0)
        {
          if ((v115[8] & 1) == 0)
            goto LABEL_115;
        }
        else if ((v115[8] & 1) != 0)
        {
LABEL_115:
          a2 = v174;
LABEL_116:
          v97 = __OFADD__(v113++, 1);
          if (v97)
            goto LABEL_163;
          goto LABEL_117;
        }
        v117 = *(_QWORD *)v195;
        if (!*(_QWORD *)(*(_QWORD *)v195 + 16))
          goto LABEL_139;
        v210 = v115[9];
        v214 = v115[10];
        sub_1D5E379A4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v210, v214);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5E3744C();
        v118 = sub_1D5E379C8();
        v119 = v117;
        v120 = -1 << *(_BYTE *)(v117 + 32);
        v121 = v118 & ~v120;
        v122 = v119 + 56;
        if (((*(_QWORD *)(v119 + 56 + ((v121 >> 3) & 0xFFFFFFFFFFFFF8)) >> v121) & 1) == 0)
        {
LABEL_138:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          sub_1D5DA2260(v210, v214);
LABEL_139:
          swift_bridgeObjectRelease();
          v131 = *((_OWORD *)v115 + 3);
          v132 = *((_OWORD *)v115 + 5);
          v241 = *((_OWORD *)v115 + 4);
          *(_OWORD *)v242 = v132;
          *(_OWORD *)&v242[9] = *(_OWORD *)((char *)v115 + 89);
          v133 = *((_OWORD *)v115 + 1);
          v237 = *(_OWORD *)v115;
          v238 = v133;
          v134 = *((_OWORD *)v115 + 3);
          v136 = *(_OWORD *)v115;
          v135 = *((_OWORD *)v115 + 1);
          v239 = *((_OWORD *)v115 + 2);
          v240 = v134;
          v137 = *((_OWORD *)v115 + 5);
          v231 = v241;
          v232[0] = v137;
          *(_OWORD *)((char *)v232 + 9) = *(_OWORD *)((char *)v115 + 89);
          v227 = v136;
          v228 = v135;
          v229 = v239;
          v230 = v131;
          v223[0] = 8;
          swift_beginAccess();
          v224 = *(_QWORD *)(*(_QWORD *)(v170 + 16) + 16);
          v225 = v113;
          v226 = 2;
          sub_1D5DA2190((uint64_t)&v237);
          a2 = v174;
          sub_1D5E04054((uint64_t)&v227, v223, &v224, v174, a8, v170);
          v138 = swift_beginAccess();
          if (__OFADD__(*v215, 1))
          {
            __break(1u);
          }
          else
          {
            ++*v215;
            if (qword_1ED9ADB98 == -1)
            {
LABEL_141:
              MEMORY[0x1E0C80A78](v138, v139);
              v60 = sub_1D5E1E290;
              goto LABEL_155;
            }
          }
          v138 = swift_once();
          goto LABEL_141;
        }
        v123 = *(_QWORD *)(v119 + 48);
        v124 = (_QWORD *)(v123 + 16 * v121);
        v125 = *v124 == v116 && v124[1] == v222;
        if (!v125 && (sub_1D5E378FC() & 1) == 0)
        {
          v126 = ~v120;
          v127 = (v121 + 1) & v126;
          if (((*(_QWORD *)(v122 + ((v127 >> 3) & 0xFFFFFFFFFFFFF8)) >> v127) & 1) == 0)
            goto LABEL_138;
          v128 = v116;
          while (1)
          {
            v129 = (_QWORD *)(v123 + 16 * v127);
            v130 = *v129 == v128 && v129[1] == v222;
            if (v130 || (sub_1D5E378FC() & 1) != 0)
              break;
            v128 = v116;
            v127 = (v127 + 1) & v126;
            if (((*(_QWORD *)(v122 + ((v127 >> 3) & 0xFFFFFFFFFFFFF8)) >> v127) & 1) == 0)
              goto LABEL_138;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_1D5DA2260(v210, v214);
        a2 = v174;
        v61 = v176;
        v114 = a9 + 32;
        v97 = __OFADD__(v113++, 1);
        if (v97)
          goto LABEL_163;
LABEL_117:
        if (v113 == v61)
        {
          v64 = swift_bridgeObjectRelease();
          goto LABEL_143;
        }
      }
    }
  }
  v78 = ~v73;
  while (1)
  {
    v74 = (v74 + 1) & v78;
    if (((*(_QWORD *)(v71 + 56 + ((v74 >> 3) & 0xFFFFFFFFFFFFF8)) >> v74) & 1) == 0)
      break;
    v79 = (_QWORD *)(v75 + 16 * v74);
    v80 = *v79 == v208 && v79[1] == v70;
    if (v80 || (sub_1D5E378FC() & 1) != 0)
      goto LABEL_46;
  }
LABEL_150:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  sub_1D5DA2260(v212, v219);
  swift_bridgeObjectRelease();
  a2 = v174;
LABEL_151:
  swift_beginAccess();
  if (v68 >= *(_QWORD *)(*v169 + 16))
  {
    __break(1u);
  }
  else
  {
    v142 = (_OWORD *)(*v169 + 112 * v68);
    v143 = v142[2];
    v144 = v142[4];
    v238 = v142[3];
    v239 = v144;
    v237 = v143;
    v145 = v142[5];
    v146 = v142[6];
    v147 = v142[7];
    *(_OWORD *)&v242[9] = *(_OWORD *)((char *)v142 + 121);
    v241 = v146;
    *(_OWORD *)v242 = v147;
    v240 = v145;
    v230 = v142[5];
    v231 = v142[6];
    v232[0] = v142[7];
    *(_OWORD *)((char *)v232 + 9) = *(_OWORD *)((char *)v142 + 121);
    v227 = v142[2];
    v228 = v142[3];
    v229 = v142[4];
    v223[0] = 8;
    swift_beginAccess();
    v224 = *(_QWORD *)(*(_QWORD *)(v170 + 16) + 16);
    v225 = -1;
    v226 = 2;
    sub_1D5DA2190((uint64_t)&v237);
    sub_1D5E04054((uint64_t)&v227, v223, &v224, a2, a8, v170);
    swift_beginAccess();
    if (!__OFADD__(*v215, 1))
    {
      ++*v215;
      swift_beginAccess();
      sub_1D5E0602C(v68, (uint64_t)&v227);
      v148 = *((_QWORD *)&v231 + 1);
      v149 = *(_QWORD *)&v232[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v150 = sub_1D5DA2260(v148, v149);
      if (qword_1ED9ADB98 == -1)
        goto LABEL_154;
      goto LABEL_173;
    }
  }
  __break(1u);
LABEL_173:
  v150 = swift_once();
LABEL_154:
  MEMORY[0x1E0C80A78](v150, v151);
  v60 = sub_1D5E1E298;
LABEL_155:
  v59(v60);
  sub_1D5E17FB4((uint64_t)&v237);
  v159 = a16;
  v158 = a15;
  v157 = a14;
  v141 = a1 & 1;
  v156 = a11;
  v155 = v164;
  v154 = a5;
LABEL_156:
  v152 = sub_1D5E16AE8(a2, a12, v170, a13, a9, a10, v163, a8, v141, v173, v154, v155, v156, v157, v158, v159);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release();
  return v152 & 1;
}

uint64_t sub_1D5E0602C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1D5E0FAE0(v5);
    v5 = result;
  }
  v7 = *(_QWORD *)(v5 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    v8 = v5 + 112 * a1;
    v9 = *(_OWORD *)(v8 + 32);
    v8 += 32;
    v10 = *(_QWORD *)(v8 + 16);
    v11 = v7 - 1;
    v12 = *(_QWORD *)(v8 + 56);
    v13 = *(_BYTE *)(v8 + 64);
    v14 = *(_BYTE *)(v8 + 65);
    v15 = *(_BYTE *)(v8 + 66);
    v16 = *(_BYTE *)(v8 + 67);
    v17 = *(_BYTE *)(v8 + 88);
    v18 = *(_QWORD *)(v8 + 96);
    v19 = *(_BYTE *)(v8 + 104);
    *(_OWORD *)a2 = v9;
    *(_QWORD *)(a2 + 16) = v10;
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(v8 + 24);
    *(_OWORD *)(a2 + 40) = *(_OWORD *)(v8 + 40);
    *(_QWORD *)(a2 + 56) = v12;
    *(_BYTE *)(a2 + 64) = v13;
    *(_BYTE *)(a2 + 65) = v14;
    *(_BYTE *)(a2 + 66) = v15;
    *(_BYTE *)(a2 + 67) = v16;
    *(_OWORD *)(a2 + 72) = *(_OWORD *)(v8 + 72);
    *(_BYTE *)(a2 + 88) = v17;
    *(_QWORD *)(a2 + 96) = v18;
    *(_BYTE *)(a2 + 104) = v19;
    result = (uint64_t)memmove((void *)v8, (const void *)(v8 + 112), 112 * (v11 - a1));
    *(_QWORD *)(v5 + 16) = v11;
    *v2 = v5;
  }
  return result;
}

uint64_t sub_1D5E0611C()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E0619C()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E0621C()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E0629C()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E0631C()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E063C0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  __int128 *v16;
  char *v17;
  uint64_t v18;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  BOOL v37;
  uint64_t v38;
  _QWORD *v39;
  BOOL v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  BOOL v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  BOOL v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t (*)());
  uint64_t (*v77)();
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  BOOL v90;
  uint64_t v91;
  _QWORD *v92;
  BOOL v93;
  _OWORD *v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v136;
  uint64_t v137;
  char v138;
  char v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  char *v148;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  char v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  _OWORD v173[2];
  char v174[24];
  uint64_t v175[2];
  char v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  _BYTE v182[25];

  if (*(_QWORD *)(a6 + 16) < a7)
  {
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  if (a7 < 0)
  {
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  v17 = a1;
  v131 = a8;
  v18 = a7;
  v16 = 0;
  v118 = a16;
  v119 = a15;
  v121 = a14;
  v120 = a13;
  v123 = a12;
  v122 = a11;
  v147 = (_QWORD *)(a5 + 16);
  v134 = a6 + 32;
  v125 = a10;
  v128 = a9;
  v132 = *(_QWORD *)(a6 + 16);
  v133 = swift_retain();
  v129 = a3;
  v130 = a6;
  v124 = a5;
  v126 = v18;
  if (v132 == v18)
  {
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    goto LABEL_5;
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v117 = v17 + 16;
  swift_beginAccess();
  v41 = v132;
  do
  {
    if (v18 >= v41)
      goto LABEL_103;
    v42 = (uint64_t *)(v134 + 112 * v18);
    if (*((_BYTE *)v42 + 64) == 1)
    {
      v127 = v18;
      v44 = *v42;
      v43 = v42[1];
      v144 = v42[2];
      v45 = v42[7];
      v142 = *((_BYTE *)v42 + 65);
      v141 = *((_BYTE *)v42 + 66);
      v47 = v42[9];
      v46 = v42[10];
      v138 = *((_BYTE *)v42 + 88);
      v139 = *((_BYTE *)v42 + 67);
      v137 = v42[12];
      v116 = (__int128 *)(v134 + 112 * v18);
      v136 = *((_BYTE *)v42 + 104);
      v159 = v46;
      v160 = *v42;
      v150 = v42[6];
      v153 = v47;
      v155 = v42[4];
      v156 = v42[3];
      v154 = v42[5];
      if (*(_QWORD *)(*(_QWORD *)v117 + 16))
      {
        v161 = *(_QWORD *)v117;
        sub_1D5E379A4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v47, v46);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5E3744C();
        v48 = sub_1D5E379C8();
        v49 = -1 << *(_BYTE *)(v161 + 32);
        v50 = v48 & ~v49;
        v51 = v161 + 56;
        if (((*(_QWORD *)(v161 + 56 + ((v50 >> 3) & 0xFFFFFFFFFFFFF8)) >> v50) & 1) == 0)
          goto LABEL_37;
        v52 = *(_QWORD *)(v161 + 48);
        v53 = (_QWORD *)(v52 + 16 * v50);
        v54 = *v53 == v44 && v53[1] == v43;
        if (v54 || (sub_1D5E378FC() & 1) != 0)
          goto LABEL_43;
        v61 = ~v49;
        v62 = (v50 + 1) & v61;
        if (((*(_QWORD *)(v51 + ((v62 >> 3) & 0xFFFFFFFFFFFFF8)) >> v62) & 1) != 0)
        {
          v63 = v160;
          while (1)
          {
            v64 = (_QWORD *)(v52 + 16 * v62);
            if (*v64 == v63 && v64[1] == v43)
              break;
            v66 = sub_1D5E378FC();
            v63 = v160;
            if ((v66 & 1) != 0)
              break;
            v62 = (v62 + 1) & v61;
            if (((*(_QWORD *)(v51 + ((v62 >> 3) & 0xFFFFFFFFFFFFF8)) >> v62) & 1) == 0)
              goto LABEL_37;
          }
LABEL_43:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v17 = (char *)v133;
          sub_1D5DA2260(v153, v159);
          v41 = v132;
          v18 = v127;
          goto LABEL_44;
        }
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v46 = v159;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v47, v46);
      }
      v55 = *(_QWORD *)(a2 + 16);
      if (!v55)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17 = (char *)v133;
LABEL_57:
        sub_1D5DA2260(v153, v46);
        swift_bridgeObjectRelease();
        v67 = v116[3];
        v68 = v116[5];
        v181 = v116[4];
        *(_OWORD *)v182 = v68;
        *(_OWORD *)&v182[9] = *(__int128 *)((char *)v116 + 89);
        v69 = v116[1];
        v177 = *v116;
        v178 = v69;
        v70 = v116[3];
        v72 = *v116;
        v71 = v116[1];
        v179 = v116[2];
        v180 = v70;
        v73 = v116[5];
        v172 = v181;
        v173[0] = v73;
        *(_OWORD *)((char *)v173 + 9) = *(__int128 *)((char *)v116 + 89);
        v168 = v72;
        v169 = v71;
        v170 = v179;
        v171 = v67;
        v174[0] = 8;
        swift_beginAccess();
        v175[0] = *(_QWORD *)(*(_QWORD *)(v129 + 16) + 16);
        v175[1] = v127;
        v176 = 3;
        v16 = &v177;
        sub_1D5DA2190((uint64_t)&v177);
        v74 = sub_1D5E04054((uint64_t)&v168, v174, v175, (uint64_t)v17, v131, v129);
        if (qword_1ED9ADB98 == -1)
        {
LABEL_58:
          MEMORY[0x1E0C80A78](v74, v75);
          v77 = sub_1D5E1E7C4;
          goto LABEL_100;
        }
LABEL_109:
        v74 = swift_once();
        goto LABEL_58;
      }
      v146 = v43;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      v56 = v147;
      swift_beginAccess();
      v17 = (char *)(a2 + 56);
      while (!__OFADD__(a4, *v56))
      {
        v162 = v55;
        v57 = *((_QWORD *)v17 - 2);
        v58 = *((_QWORD *)v17 - 1);
        v59 = *v17;
        *(_QWORD *)&v168 = *((_QWORD *)v17 - 3);
        *((_QWORD *)&v168 + 1) = v57;
        *(_QWORD *)&v169 = v58;
        BYTE8(v169) = v59;
        *(_QWORD *)&v177 = v160;
        *((_QWORD *)&v177 + 1) = v146;
        *(_QWORD *)&v178 = v144;
        *((_QWORD *)&v178 + 1) = v156;
        *(_QWORD *)&v179 = v155;
        *((_QWORD *)&v179 + 1) = v154;
        *(_QWORD *)&v180 = v150;
        *((_QWORD *)&v180 + 1) = v45;
        LOBYTE(v181) = 1;
        BYTE1(v181) = v142;
        BYTE2(v181) = v141;
        BYTE3(v181) = v139;
        *((_QWORD *)&v181 + 1) = v153;
        *(_QWORD *)v182 = v159;
        v182[8] = v138;
        *(_QWORD *)&v182[16] = v137;
        v182[24] = v136;
        sub_1D5E1CE34(v168, v57, v58, v59);
        swift_bridgeObjectRetain();
        sub_1D5E148A4();
        v17 += 32;
        swift_bridgeObjectRelease();
        sub_1D5E01820(v168, v57, v58, v59);
        --v55;
        v56 = v147;
        if (v162 == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v17 = (char *)v133;
          v46 = v159;
          goto LABEL_57;
        }
      }
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
      goto LABEL_107;
    }
LABEL_44:
    v60 = __OFADD__(v18++, 1);
    if (v60)
      goto LABEL_104;
  }
  while (v18 != v41);
  swift_bridgeObjectRelease();
LABEL_5:
  swift_beginAccess();
  v22 = *(_QWORD *)(*(_QWORD *)(a9 + 16) + 16);
  if (!v22)
  {
LABEL_61:
    if (v132 != v126)
    {
      swift_bridgeObjectRetain();
      v148 = v17 + 16;
      swift_beginAccess();
      v78 = v132;
      v79 = v126;
      while (1)
      {
        if (v79 >= v78)
          goto LABEL_105;
        v80 = (uint64_t *)(v134 + 112 * v79);
        if (*((_BYTE *)v80 + 64) == 1)
        {
          if (!*(_QWORD *)(*(_QWORD *)v148 + 16))
          {
            swift_bridgeObjectRelease();
            goto LABEL_97;
          }
          v151 = v79;
          v81 = *v80;
          v82 = v80[1];
          v163 = *(_QWORD *)v148;
          v84 = v80[9];
          v83 = v80[10];
          sub_1D5E379A4();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v157 = v84;
          sub_1D5DA2208(v84, v83);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1D5E3744C();
          v85 = sub_1D5E379C8();
          v86 = -1 << *(_BYTE *)(v163 + 32);
          v87 = v85 & ~v86;
          if (((*(_QWORD *)(v163 + 56 + ((v87 >> 3) & 0xFFFFFFFFFFFFF8)) >> v87) & 1) == 0)
            goto LABEL_96;
          v88 = *(_QWORD *)(v163 + 48);
          v89 = (_QWORD *)(v88 + 16 * v87);
          v90 = *v89 == v81 && v89[1] == v82;
          if (!v90 && (sub_1D5E378FC() & 1) == 0)
          {
            v91 = ~v86;
            while (1)
            {
              v87 = (v87 + 1) & v91;
              if (((*(_QWORD *)(v163 + 56 + ((v87 >> 3) & 0xFFFFFFFFFFFFF8)) >> v87) & 1) == 0)
                break;
              v92 = (_QWORD *)(v88 + 16 * v87);
              v93 = *v92 == v81 && v92[1] == v82;
              if (v93 || (sub_1D5E378FC() & 1) != 0)
                goto LABEL_79;
            }
LABEL_96:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            sub_1D5DA2260(v157, v83);
            swift_bridgeObjectRelease();
            v17 = (char *)v133;
            v79 = v151;
LABEL_97:
            v102 = *((_OWORD *)v80 + 3);
            v103 = *((_OWORD *)v80 + 5);
            v181 = *((_OWORD *)v80 + 4);
            *(_OWORD *)v182 = v103;
            *(_OWORD *)&v182[9] = *(_OWORD *)((char *)v80 + 89);
            v104 = *((_OWORD *)v80 + 1);
            v177 = *(_OWORD *)v80;
            v178 = v104;
            v105 = *((_OWORD *)v80 + 3);
            v107 = *(_OWORD *)v80;
            v106 = *((_OWORD *)v80 + 1);
            v179 = *((_OWORD *)v80 + 2);
            v180 = v105;
            v108 = *((_OWORD *)v80 + 5);
            v172 = v181;
            v173[0] = v108;
            *(_OWORD *)((char *)v173 + 9) = *(_OWORD *)((char *)v80 + 89);
            v168 = v107;
            v169 = v106;
            v170 = v179;
            v171 = v102;
            v167 = 8;
            swift_beginAccess();
            v164 = *(_QWORD *)(*(_QWORD *)(v129 + 16) + 16);
            v165 = v79;
            v166 = 3;
            v16 = &v177;
            sub_1D5DA2190((uint64_t)&v177);
            v109 = sub_1D5E04054((uint64_t)&v168, &v167, &v164, (uint64_t)v17, v131, v129);
            if (qword_1ED9ADB98 != -1)
              v109 = swift_once();
            MEMORY[0x1E0C80A78](v109, v110);
            v77 = sub_1D5E1E30C;
            goto LABEL_100;
          }
LABEL_79:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v79 = v151;
          sub_1D5DA2260(v157, v83);
          v78 = v132;
          v17 = (char *)v133;
        }
        v60 = __OFADD__(v79++, 1);
        if (v60)
          goto LABEL_106;
        if (v79 == v78)
        {
          swift_bridgeObjectRelease();
          break;
        }
      }
    }
    if (v131)
    {
      v179 = 0u;
      v180 = 0u;
      v177 = 0u;
      v178 = 0u;
      LOBYTE(v181) = 112;
      ClusteringJournal.record(event:)((uint64_t)&v177);
    }
    if (qword_1ED9ADB98 != -1)
      swift_once();
    qword_1ED9B7910(sub_1D5E0759C, 0);
    swift_beginAccess();
    *(_BYTE *)(a10 + 16) = 1;
    v115 = a16;
    v113 = a10;
    v114 = a15;
    goto LABEL_101;
  }
  v140 = a9 + 16;
  v23 = *(_QWORD *)(a9 + 16) + 32;
  swift_bridgeObjectRetain();
  v152 = v17 + 16;
  swift_beginAccess();
  v24 = 0;
  v143 = v23;
  v145 = v22;
  while (2)
  {
    v25 = 112 * v24;
    v26 = v23 + 112 * v24;
    if (*(_BYTE *)(v26 + 64) != 1)
    {
LABEL_8:
      if (++v24 == v22)
      {
        swift_bridgeObjectRelease();
        v16 = 0;
        goto LABEL_61;
      }
      continue;
    }
    break;
  }
  v27 = *(_QWORD *)v152;
  if (*(_QWORD *)(*(_QWORD *)v152 + 16))
  {
    v28 = *(_QWORD *)v26;
    v29 = *(_QWORD *)(v26 + 8);
    v31 = *(_QWORD *)(v26 + 72);
    v30 = *(_QWORD *)(v26 + 80);
    sub_1D5E379A4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v158 = v31;
    sub_1D5DA2208(v31, v30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D5E3744C();
    v32 = sub_1D5E379C8();
    v33 = -1 << *(_BYTE *)(v27 + 32);
    v34 = v32 & ~v33;
    if (((*(_QWORD *)(v27 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
      goto LABEL_59;
    v35 = *(_QWORD *)(v27 + 48);
    v36 = (_QWORD *)(v35 + 16 * v34);
    v37 = *v36 == v28 && v36[1] == v29;
    if (!v37 && (sub_1D5E378FC() & 1) == 0)
    {
      v38 = ~v33;
      while (1)
      {
        v34 = (v34 + 1) & v38;
        if (((*(_QWORD *)(v27 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
          break;
        v39 = (_QWORD *)(v35 + 16 * v34);
        v40 = *v39 == v28 && v39[1] == v29;
        if (v40 || (sub_1D5E378FC() & 1) != 0)
          goto LABEL_7;
      }
LABEL_59:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_1D5DA2260(v158, v30);
      swift_bridgeObjectRelease();
      v17 = (char *)v133;
      v25 = 112 * v24;
      goto LABEL_90;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v17 = (char *)v133;
    sub_1D5DA2260(v158, v30);
    v23 = v143;
    v22 = v145;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
LABEL_90:
  swift_beginAccess();
  if (v24 >= *(_QWORD *)(*(_QWORD *)v140 + 16))
  {
    __break(1u);
  }
  else
  {
    v94 = (_OWORD *)(*(_QWORD *)v140 + v25);
    v95 = v94[2];
    v96 = v94[4];
    v178 = v94[3];
    v179 = v96;
    v177 = v95;
    v97 = v94[5];
    v98 = v94[6];
    v99 = v94[7];
    *(_OWORD *)&v182[9] = *(_OWORD *)((char *)v94 + 121);
    v181 = v98;
    *(_OWORD *)v182 = v99;
    v180 = v97;
    v171 = v94[5];
    v172 = v94[6];
    v173[0] = v94[7];
    *(_OWORD *)((char *)v173 + 9) = *(_OWORD *)((char *)v94 + 121);
    v168 = v94[2];
    v169 = v94[3];
    v170 = v94[4];
    v167 = 8;
    swift_beginAccess();
    v164 = *(_QWORD *)(*(_QWORD *)(v129 + 16) + 16);
    v165 = -1;
    v166 = 3;
    sub_1D5DA2190((uint64_t)&v177);
    sub_1D5E04054((uint64_t)&v168, &v167, &v164, (uint64_t)v17, v131, v129);
    v100 = swift_beginAccess();
    if (!__OFADD__(*v147, 1))
    {
      ++*v147;
      if (qword_1ED9ADB98 == -1)
        goto LABEL_93;
      goto LABEL_112;
    }
  }
  __break(1u);
LABEL_112:
  v100 = swift_once();
LABEL_93:
  MEMORY[0x1E0C80A78](v100, v101);
  v16 = &v177;
  v77 = sub_1D5E1E314;
LABEL_100:
  v76(v77);
  sub_1D5E17FB4((uint64_t)v16);
  v115 = v118;
  v114 = v119;
  v113 = v125;
LABEL_101:
  v111 = sub_1D5E16AE8(v17, v122, v129, v123, v130, v126, v128, v131, v120 & 1, a2, a4, v124, v121, v113, v114, v115);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release();
  return v111 & 1;
}

uint64_t sub_1D5E0749C()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E0751C()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

unint64_t sub_1D5E0759C()
{
  return 0xD000000000000037;
}

uint64_t sub_1D5E075B8()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E07638()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E076D4()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E07770()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E0780C()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E078A8()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E07944()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E079E4()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E07A84()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E07B20()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  return 0;
}

uint64_t sub_1D5E07BBC()
{
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  return 0;
}

unint64_t sub_1D5E07C74()
{
  return 0xD00000000000003CLL;
}

uint64_t sub_1D5E07C90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  double (*v4)(char *, double, double);
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char **v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t (*)());
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char isUniquelyReferenced_nonNull_native;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  int64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  unsigned __int8 *v63;
  _QWORD *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  int v69;
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  uint64_t v80;
  _BOOL8 v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  int v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  void (*v100)(uint64_t (*)());
  uint64_t v101;
  uint64_t *v102;
  uint64_t *v103;
  void **v104;
  uint64_t *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  Swift::String v114;
  char v115;
  unint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  double v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  void *v145;
  uint64_t v146;
  _QWORD *v147;
  int64_t v148;
  id v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  _QWORD *v157;
  id v158;
  uint64_t v159;
  unint64_t v160;
  void *v161;
  uint64_t v162;
  _QWORD *v163;
  int64_t v164;
  id v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  _QWORD *v173;
  id v174;
  void *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  int64_t v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  void *v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  id v205;
  uint64_t result;
  char **v207;
  uint64_t v208;
  uint64_t v209;
  char v210;
  uint64_t v211;
  double (*v212)(char *, double, double);
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  unint64_t v222;
  _QWORD *v223;
  char v224;
  uint64_t v225;
  void *v226;
  unint64_t v227;
  _QWORD *v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  unint64_t v245;
  char *v246;
  char v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD v251[4];
  char v252;
  _BYTE v253[1896];
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257[2];
  _QWORD v258[2];
  char v259;
  uint64_t v260;
  uint64_t v261;
  _BYTE v262[1896];
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  _OWORD v268[2];
  __int128 v269;
  _OWORD v270[4];
  __int128 v271;
  uint64_t v272;

  v2 = MEMORY[0x1E0C80A78](a1, a2);
  v210 = v3;
  v211 = v5;
  v212 = v4;
  v7 = v6;
  v209 = v8;
  v10 = v9;
  v11 = v2;
  v207 = v12;
  v14 = (uint64_t)memcpy(v262, v13, sizeof(v262));
  if (qword_1ED9ADB98 != -1)
    goto LABEL_141;
LABEL_2:
  v213 = (uint64_t)v7;
  MEMORY[0x1E0C80A78](v14, v15);
  v16(sub_1D5E1802C);
  if (qword_1ED9ADAB8[0] != -1)
    swift_once();
  v17 = (void *)qword_1ED9AEC38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF878);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1D5E38FE0;
  v19 = *(_QWORD *)(v11 + 16);
  v20 = MEMORY[0x1E0DEB418];
  v21 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v18 + 64) = v21;
  *(_QWORD *)(v18 + 32) = v19;
  v22 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v18 + 96) = v20;
  *(_QWORD *)(v18 + 104) = v21;
  *(_QWORD *)(v18 + 72) = v22;
  v23 = v17;
  sub_1D5E375FC();
  sub_1D5E373A4();

  swift_bridgeObjectRelease();
  if (v22)
  {
    v231 = v11;
    swift_bridgeObjectRetain();
    v227 = v10;
    v24 = (char *)(v10 + 60);
    v218 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    do
    {
      v237 = v22;
      v26 = *(_QWORD *)(v24 - 28);
      v11 = *(_QWORD *)(v24 - 20);
      v27 = *(_QWORD *)(v24 - 12);
      v10 = *(v24 - 4);
      v28 = *(v24 - 3);
      v241 = *(v24 - 2);
      LODWORD(v245) = *(v24 - 1);
      v247 = *v24;
      swift_bridgeObjectRetain_n();
      v7 = v218;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v253 = v218;
      v31 = sub_1D5D7FFCC(v26, v11);
      v32 = v218[2];
      v33 = (v30 & 1) == 0;
      v34 = v32 + v33;
      if (__OFADD__(v32, v33))
        goto LABEL_138;
      v35 = v30;
      if (v218[3] >= v34)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v7 = v253;
          sub_1D5D98F5C();
        }
      }
      else
      {
        sub_1D5D9C278(v34, isUniquelyReferenced_nonNull_native);
        v7 = *(_BYTE **)v253;
        v36 = sub_1D5D7FFCC(v26, v11);
        if ((v35 & 1) != (v37 & 1))
          goto LABEL_143;
        v31 = v36;
      }
      v38 = *(_QWORD **)v253;
      v218 = *(_QWORD **)v253;
      if ((v35 & 1) != 0)
      {
        v25 = *(_QWORD *)(*(_QWORD *)v253 + 56) + 32 * v31;
        swift_bridgeObjectRelease();
        *(_QWORD *)v25 = v26;
        *(_QWORD *)(v25 + 8) = v11;
        *(_QWORD *)(v25 + 16) = v27;
        *(_BYTE *)(v25 + 24) = v10;
        *(_BYTE *)(v25 + 25) = v28;
        *(_BYTE *)(v25 + 26) = v241;
        *(_BYTE *)(v25 + 27) = v245;
        *(_BYTE *)(v25 + 28) = v247;
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)v253 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        v39 = (uint64_t *)(v38[6] + 16 * v31);
        *v39 = v26;
        v39[1] = v11;
        v40 = v38[7] + 32 * v31;
        *(_QWORD *)v40 = v26;
        *(_QWORD *)(v40 + 8) = v11;
        *(_QWORD *)(v40 + 16) = v27;
        *(_BYTE *)(v40 + 24) = v10;
        *(_BYTE *)(v40 + 25) = v28;
        *(_BYTE *)(v40 + 26) = v241;
        *(_BYTE *)(v40 + 27) = v245;
        *(_BYTE *)(v40 + 28) = v247;
        v41 = v38[2];
        v42 = __OFADD__(v41, 1);
        v43 = v41 + 1;
        if (v42)
          goto LABEL_139;
        v38[2] = v43;
        swift_bridgeObjectRetain();
      }
      v24 += 32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = v237 - 1;
    }
    while (v237 != 1);
    swift_bridgeObjectRelease();
    v11 = v231;
  }
  else
  {
    v218 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v44 = sub_1D5E09430((uint64_t)v262, (char *)v11);
  v45 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v270[0] = MEMORY[0x1E0DEE9E8];
  v46 = MEMORY[0x1E0DEE9E0];
  v215 = *((_QWORD *)v44 + 2);
  v208 = (uint64_t)v44;
  if (!v215)
  {
    v48 = 0;
    v49 = MEMORY[0x1E0DEE9E0];
LABEL_56:
    v257[0] = v49;
    v256 = v45;
    v255 = v46;
    v254 = 0;
    v93 = v213;
    if (!*(_QWORD *)(v49 + 16) || (v249 = *(_QWORD *)&v262[928], *(uint64_t *)&v262[928] < 1))
    {
LABEL_104:
      swift_bridgeObjectRelease();
      goto LABEL_105;
    }
    v94 = v49;
    while (1)
    {
      ClusteringJournal.startedBuildingCandidateGroups()();
      swift_retain();
      sub_1D5DBBE24((uint64_t)v262);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v95 = sub_1D5E17674(MEMORY[0x1E0DEE9D8], v94, v93, v262, v209, &v254, (uint64_t)v212, v211, v210 & 1, (uint64_t)&v255, (uint64_t)&v256, v257);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1D5DBE3F4((uint64_t)v262);
      swift_bridgeObjectRelease();
      swift_release();
      *(_QWORD *)v253 = v95;
      swift_bridgeObjectRetain();
      sub_1D5E0D65C((char **)v253);
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)v253;
      v96 = sub_1D5E0A2E4(&v255, (uint64_t)v262);
      v97 = sub_1D5E0A7E0(&v255, (uint64_t)v262);
      v98 = v97;
      MEMORY[0x1E0C80A78](v97, v99);
      v100(sub_1D5E1CB30);
      v101 = *(_QWORD *)(v11 + 16);
      if (!v101)
        goto LABEL_102;
      v102 = (uint64_t *)(v11 + 32);
      v103 = (uint64_t *)(v11 + 64);
      while (1)
      {
        v7 = (_BYTE *)*((unsigned __int8 *)v103 - 16);
        if (((v96 ^ v98 ^ 1 | v96 ^ v7) & 1) != 0)
          break;
        v103 += 5;
        if (!--v101)
        {
          v104 = (void **)(v11 + 40);
          v7 = (_BYTE *)*(unsigned __int8 *)(v11 + 48);
          v105 = (uint64_t *)(v11 + 56);
          v103 = (uint64_t *)(v11 + 64);
          goto LABEL_65;
        }
      }
      v102 = v103 - 4;
      v104 = (void **)(v103 - 3);
      v105 = v103 - 1;
LABEL_65:
      v106 = *v105;
      v107 = *v104;
      v108 = *v102;
      v10 = *v103;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      v109 = *(_QWORD *)(v106 + 16);
      v93 = v213;
      v110 = 0;
      if (v109)
      {
        v111 = (_BYTE *)(v106 + 98);
        do
        {
          v112 = *v111 & ~*(v111 - 2) & 1;
          v42 = __OFADD__(v110, v112);
          v110 += v112;
          if (v42)
            goto LABEL_137;
          v111 += 112;
        }
        while (--v109);
      }
      v42 = __OFADD__(v254, v110);
      v113 = v254 + v110;
      if (v42)
        goto LABEL_140;
      v254 = v113;
      v114._countAndFlagsBits = v108;
      v114._object = v107;
      ClusteringJournal.finishedBuildingCandidateGroups(selectedTag:)(v114);
      v258[0] = v108;
      v258[1] = v107;
      v259 = (char)v7;
      v260 = v106;
      v261 = v10;
      swift_bridgeObjectRetain_n();
      sub_1D5E1CB44(v108, (uint64_t)v107);
      v115 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v253 = v255;
      v255 = 0x8000000000000000;
      sub_1D5D9DABC((uint64_t)v258, v108, (uint64_t)v107, v115);
      v255 = *(_QWORD *)v253;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v218[2] || (v116 = sub_1D5D7FFCC(v108, (uint64_t)v107), (v117 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        sub_1D5E1CB74(v108, (uint64_t)v107);
        goto LABEL_98;
      }
      v118 = v218[7] + 32 * v116;
      v119 = *(_QWORD *)(v118 + 8);
      v120 = *(double *)(v118 + 16);
      v239 = *(unsigned __int8 *)(v118 + 24);
      v243 = *(_QWORD *)v118;
      v121 = *(unsigned __int8 *)(v118 + 25);
      v122 = *(unsigned __int8 *)(v118 + 26);
      v233 = *(unsigned __int8 *)(v118 + 27);
      LODWORD(v245) = *(unsigned __int8 *)(v118 + 28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v123 = v257[0];
      if (*(_QWORD *)(v257[0] + 16))
      {
        if (v121)
          v124 = 256;
        else
          v124 = 0;
        v125 = 0x10000;
        if (!v122)
          v125 = 0;
        v126 = 0x1000000;
        if (!v233)
          v126 = 0;
        if ((_DWORD)v245)
          v127 = 0x100000000;
        else
          v127 = 0;
        v234 = v124;
        v128 = v125 | v126;
        v225 = v127;
        v129 = v227 & 0xFFFFFF0000000000 | v239 | v124 | v125 | v126 | v127;
        swift_bridgeObjectRetain();
        v227 = v129;
        v130 = sub_1D5D97A74(v243, v119, v129, v120);
        if ((v131 & 1) != 0)
        {
          v221 = *(_QWORD *)(*(_QWORD *)(v123 + 56) + 8 * v130);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_1D5E0D4FC(v243, v119, v222 & 0xFFFFFF0000000000 | v239 | v234 | v128 | v225, v120);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v132 = 904;
          if ((_DWORD)v245)
            v132 = 905;
          v222 = v222 & 0xFFFFFF0000000000 | v239 | v234 | v128 | v225;
          if ((v262[v132] & 1) != 0)
          {
            v135 = swift_bridgeObjectRetain();
            v134 = sub_1D5DA1400(v135);
            swift_bridgeObjectRelease();
            v133 = v221;
          }
          else
          {
            v133 = v221;
            swift_bridgeObjectRetain();
            v134 = v221;
          }
          swift_bridgeObjectRetain();
          v136 = swift_bridgeObjectRetain();
          sub_1D5E18450(v136, (uint64_t)v257, v134);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          if ((v262[888] & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v137 = swift_bridgeObjectRetain();
            v138 = sub_1D5DA1400(v137);
            swift_bridgeObjectRelease();
            sub_1D5E1CB74(v108, (uint64_t)v107);
            sub_1D5E0FAF4(v138);
          }
          else
          {
            sub_1D5E1CB74(v108, (uint64_t)v107);
            sub_1D5E0FAF4(v133);
          }
          swift_bridgeObjectRelease();
          goto LABEL_97;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_1D5E1CB74(v108, (uint64_t)v107);
LABEL_97:
      v93 = v213;
LABEL_98:
      v94 = v257[0];
      v48 = 0;
      if (!*(_QWORD *)(v257[0] + 16) || *(_QWORD *)(v255 + 16) >= v249)
        goto LABEL_104;
    }
  }
  v214 = v44 + 32;
  swift_bridgeObjectRetain();
  v47 = 0;
  v48 = 0;
  v49 = MEMORY[0x1E0DEE9E0];
LABEL_23:
  v217 = v47;
  v50 = &v214[112 * v47];
  v51 = *(_OWORD *)v50;
  v52 = *((_OWORD *)v50 + 1);
  v265 = *((_OWORD *)v50 + 2);
  v264 = v52;
  v53 = *((_OWORD *)v50 + 3);
  v54 = *((_OWORD *)v50 + 4);
  v55 = *((_OWORD *)v50 + 5);
  *(_OWORD *)((char *)v268 + 9) = *(_OWORD *)(v50 + 89);
  v267 = v54;
  v268[0] = v55;
  v266 = v53;
  v263 = v51;
  v269 = v264;
  v56 = *(_QWORD *)(v265 + 16) + 1;
  sub_1D5DA2190((uint64_t)&v263);
  swift_bridgeObjectRetain();
  sub_1D5E18400((uint64_t)&v269);
  *(_QWORD *)v253 = sub_1D5D7DABC(0, v56, 0, MEMORY[0x1E0DEE9D8]);
  v57 = swift_bridgeObjectRetain();
  sub_1D5D8C008(v57);
  v58 = *(char **)v253;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v58 = sub_1D5D7DABC(0, *((_QWORD *)v58 + 2) + 1, 1, v58);
  v60 = *((_QWORD *)v58 + 2);
  v59 = *((_QWORD *)v58 + 3);
  if (v60 >= v59 >> 1)
    v58 = sub_1D5D7DABC((char *)(v59 > 1), v60 + 1, 1, v58);
  *((_QWORD *)v58 + 2) = v60 + 1;
  *(_OWORD *)&v58[16 * v60 + 32] = v269;
  sub_1D5E18428((uint64_t)&v269);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v61 = sub_1D5E18260((uint64_t)v58, (uint64_t)v218);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v62 = *((_QWORD *)v61 + 2);
  if (!v62)
  {
    swift_bridgeObjectRelease();
    sub_1D5DA2190((uint64_t)&v263);
    sub_1D5E0CF48((uint64_t)v253, (uint64_t)&v263);
    v91 = *(_QWORD *)&v253[72];
    v92 = *(_QWORD *)&v253[80];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D5DA2260(v91, v92);
    sub_1D5E17FB4((uint64_t)&v263);
    goto LABEL_22;
  }
  v216 = v48;
  swift_bridgeObjectRetain();
  v63 = (unsigned __int8 *)(v61 + 60);
  v64 = (_QWORD *)v49;
  while (1)
  {
    v232 = v62;
    v248 = *(_QWORD *)(v63 - 28);
    v67 = *(_QWORD *)(v63 - 20);
    v68 = *(double *)(v63 - 12);
    v69 = *v63;
    v70 = *(v63 - 1);
    v71 = *(v63 - 2);
    v72 = *(v63 - 3);
    v73 = *(v63 - 4);
    swift_bridgeObjectRetain();
    sub_1D5DA2190((uint64_t)&v263);
    swift_bridgeObjectRetain();
    v10 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v253 = v64;
    v220 = v72;
    v74 = v72 == 0;
    v7 = v64;
    v48 = v74 ? 0 : 256;
    LODWORD(v222) = v71;
    v75 = v71 ? 0x10000 : 0;
    v224 = v70;
    v76 = v70 ? 0x1000000 : 0;
    LODWORD(v227) = v69;
    v77 = v69 ? 0x100000000 : 0;
    v238 = v73;
    v242 = v67;
    v245 = v77 | v245 & 0xFFFFFF0000000000 | v76 | v75 | v48 | v73;
    v79 = sub_1D5D97A74(v248, v67, v245, v68);
    v80 = *((_QWORD *)v7 + 2);
    v81 = (v78 & 1) == 0;
    v82 = v80 + v81;
    if (__OFADD__(v80, v81))
      break;
    v83 = v78;
    if (*((_QWORD *)v7 + 3) < v82)
    {
      sub_1D5D9BBA4(v82, v10);
      v7 = *(_BYTE **)v253;
      v84 = v77 | v219 & 0xFFFFFF0000000000 | v76 | v75;
      v11 = v242;
      v85 = v84 | v48 | v238;
      v86 = sub_1D5D97A74(v248, v242, v85, v68);
      if ((v83 & 1) == (v87 & 1))
      {
        v79 = v86;
        v219 = v85;
        goto LABEL_49;
      }
      sub_1D5E3795C();
      __break(1u);
LABEL_143:
      sub_1D5E3795C();
      __break(1u);
LABEL_144:
      result = swift_release();
      __break(1u);
      return result;
    }
    if ((v10 & 1) == 0)
    {
      v7 = v253;
      sub_1D5D98B90();
    }
    v11 = v242;
LABEL_49:
    v64 = *(_QWORD **)v253;
    swift_bridgeObjectRelease();
    if ((v83 & 1) != 0)
      goto LABEL_29;
    v64[(v79 >> 6) + 8] |= 1 << v79;
    v88 = v64[6] + 32 * v79;
    *(_QWORD *)v88 = v248;
    *(_QWORD *)(v88 + 8) = v11;
    *(double *)(v88 + 16) = v68;
    *(_BYTE *)(v88 + 24) = v238;
    *(_BYTE *)(v88 + 25) = v220;
    *(_BYTE *)(v88 + 26) = v222;
    *(_BYTE *)(v88 + 27) = v224;
    *(_BYTE *)(v88 + 28) = v227;
    *(_QWORD *)(v64[7] + 8 * v79) = MEMORY[0x1E0DEE9E8];
    v89 = v64[2];
    v42 = __OFADD__(v89, 1);
    v90 = v89 + 1;
    if (v42)
    {
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      v14 = swift_once();
      goto LABEL_2;
    }
    v64[2] = v90;
    swift_bridgeObjectRetain();
LABEL_29:
    v63 += 32;
    sub_1D5E0CF48((uint64_t)v253, (uint64_t)&v263);
    v66 = *(_QWORD *)&v253[72];
    v65 = *(_QWORD *)&v253[80];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D5DA2260(v66, v65);
    swift_bridgeObjectRelease_n();
    v62 = v232 - 1;
    if (v232 == 1)
    {
      v49 = (uint64_t)v64;
      swift_bridgeObjectRelease_n();
      sub_1D5E17FB4((uint64_t)&v263);
      v48 = v216;
LABEL_22:
      v47 = v217 + 1;
      if (v217 + 1 == v215)
      {
        swift_bridgeObjectRelease();
        v45 = *(_QWORD *)&v270[0];
        v46 = MEMORY[0x1E0DEE9E0];
        goto LABEL_56;
      }
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_102:
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_BYTE *)(v213 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
  {
    swift_beginAccess();
    *(_QWORD *)(v213 + 16) = 0;
    goto LABEL_104;
  }
LABEL_105:
  v139 = MEMORY[0x1E0DEE9D8];
  v140 = swift_bridgeObjectRetain();
  sub_1D5E0F658(v140, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1D5E0F908);
  swift_bridgeObjectRelease();
  v141 = sub_1D5E1907C();
  swift_release();
  v142 = swift_bridgeObjectRetain();
  v143 = sub_1D5E0F658(v142, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1D5E0F7B4);
  v240 = v48;
  swift_bridgeObjectRelease();
  memcpy(v253, v262, sizeof(v253));
  v144 = sub_1D5E1C7C8(v143, v208, v253);
  swift_bridgeObjectRelease();
  swift_release();
  v145 = (void *)qword_1ED9AEC38;
  v146 = swift_allocObject();
  v147 = (_QWORD *)v146;
  *(_OWORD *)(v146 + 16) = xmmword_1D5E38280;
  v148 = *((_QWORD *)v141 + 2);
  v244 = v141;
  v246 = v144;
  if (v148)
  {
    v228 = (_QWORD *)v146;
    *(_QWORD *)v253 = v139;
    v149 = v145;
    sub_1D5DB9E44(0, v148, 0);
    v150 = *(_QWORD *)v253;
    v151 = v141 + 48;
    do
    {
      v153 = *((_QWORD *)v151 - 2);
      v152 = *((_QWORD *)v151 - 1);
      v154 = *(_QWORD *)(*(_QWORD *)v151 + 16);
      *(_QWORD *)v253 = v150;
      v156 = *(_QWORD *)(v150 + 16);
      v155 = *(_QWORD *)(v150 + 24);
      swift_bridgeObjectRetain();
      if (v156 >= v155 >> 1)
      {
        sub_1D5DB9E44((_QWORD *)(v155 > 1), v156 + 1, 1);
        v150 = *(_QWORD *)v253;
      }
      *(_QWORD *)(v150 + 16) = v156 + 1;
      v157 = (_QWORD *)(v150 + 24 * v156);
      v157[4] = v153;
      v157[5] = v152;
      v157[6] = v154;
      v151 += 24;
      --v148;
    }
    while (v148);
    v144 = v246;
    v139 = MEMORY[0x1E0DEE9D8];
    v147 = v228;
  }
  else
  {
    v158 = v145;
    v150 = MEMORY[0x1E0DEE9D8];
  }
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF510);
  v147[7] = v159;
  v160 = sub_1D5E1CA84();
  v147[8] = v160;
  v147[4] = v150;
  sub_1D5E375FC();
  sub_1D5E373A4();

  swift_bridgeObjectRelease();
  v161 = (void *)qword_1ED9AEC38;
  v162 = swift_allocObject();
  v163 = (_QWORD *)v162;
  *(_OWORD *)(v162 + 16) = xmmword_1D5E38280;
  v164 = *((_QWORD *)v144 + 2);
  if (v164)
  {
    v223 = (_QWORD *)v162;
    v226 = v161;
    v229 = v160;
    v235 = v159;
    *(_QWORD *)v253 = v139;
    v165 = v161;
    sub_1D5DB9E44(0, v164, 0);
    v166 = *(_QWORD *)v253;
    v167 = v144 + 48;
    do
    {
      v169 = *((_QWORD *)v167 - 2);
      v168 = *((_QWORD *)v167 - 1);
      v170 = *(_QWORD *)(*(_QWORD *)v167 + 16);
      *(_QWORD *)v253 = v166;
      v172 = *(_QWORD *)(v166 + 16);
      v171 = *(_QWORD *)(v166 + 24);
      swift_bridgeObjectRetain();
      if (v172 >= v171 >> 1)
      {
        sub_1D5DB9E44((_QWORD *)(v171 > 1), v172 + 1, 1);
        v166 = *(_QWORD *)v253;
      }
      *(_QWORD *)(v166 + 16) = v172 + 1;
      v173 = (_QWORD *)(v166 + 24 * v172);
      v173[4] = v169;
      v173[5] = v168;
      v173[6] = v170;
      v167 += 24;
      --v164;
    }
    while (v164);
    v160 = v229;
    v159 = v235;
    v163 = v223;
    v161 = v226;
  }
  else
  {
    v174 = v161;
    v166 = MEMORY[0x1E0DEE9D8];
  }
  v163[7] = v159;
  v163[8] = v160;
  v163[4] = v166;
  sub_1D5E375FC();
  sub_1D5E373A4();

  swift_bridgeObjectRelease();
  *(_QWORD *)v253 = 0;
  *(_QWORD *)&v253[8] = 0;
  v253[16] = 2;
  ClusteringJournal.startedClustering(group:)((uint64_t)v253);
  v175 = (void *)qword_1ED9AEC38;
  v176 = swift_allocObject();
  *(_OWORD *)(v176 + 16) = xmmword_1D5E38280;
  v177 = v256;
  v178 = *(_QWORD *)(v256 + 16);
  *(_QWORD *)(v176 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v176 + 64) = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v176 + 32) = v178;
  v179 = v175;
  sub_1D5E375FC();
  sub_1D5E373A4();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  v180 = sub_1D5D9E3E0(v177);
  swift_bridgeObjectRelease();
  *(_QWORD *)v253 = v180;
  sub_1D5E0D5F0((char **)v253, sub_1D5E0DEBC);
  if (v240)
    goto LABEL_144;
  swift_bridgeObjectRelease();
  v181 = *(_QWORD *)v253;
  v182 = *(_QWORD *)&v262[952];
  v183 = *(_QWORD *)&v262[1000];
  v184 = *(_QWORD *)&v262[1048];
  v185 = *(_QWORD *)&v262[1096];
  v230 = *(_QWORD *)&v262[1192];
  v236 = *(_QWORD *)&v262[1144];
  *(_OWORD *)&v253[64] = *(_OWORD *)&v262[1264];
  *(_OWORD *)&v253[80] = *(_OWORD *)&v262[1280];
  *(_QWORD *)&v253[96] = *(_QWORD *)&v262[1296];
  *(_OWORD *)v253 = *(_OWORD *)&v262[1200];
  *(_OWORD *)&v253[16] = *(_OWORD *)&v262[1216];
  *(_OWORD *)&v253[32] = *(_OWORD *)&v262[1232];
  *(_OWORD *)&v253[48] = *(_OWORD *)&v262[1248];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AD940);
  v186 = swift_allocObject();
  *(_OWORD *)(v186 + 16) = xmmword_1D5E44EF0;
  *(_QWORD *)(v186 + 40) = 0;
  *(_QWORD *)(v186 + 48) = 0;
  *(_QWORD *)(v186 + 32) = v183;
  *(_BYTE *)(v186 + 56) = 0;
  *(_QWORD *)(v186 + 72) = 0;
  *(_QWORD *)(v186 + 80) = 0;
  *(_QWORD *)(v186 + 64) = v184;
  *(_BYTE *)(v186 + 88) = 3;
  *(_QWORD *)(v186 + 104) = 0;
  *(_QWORD *)(v186 + 112) = 0;
  *(_QWORD *)(v186 + 96) = v182;
  *(_BYTE *)(v186 + 120) = 1;
  *(_QWORD *)(v186 + 136) = 0;
  *(_QWORD *)(v186 + 144) = 0;
  *(_QWORD *)(v186 + 128) = v185;
  *(_BYTE *)(v186 + 152) = 2;
  v187 = *(_QWORD *)&v262[1320];
  v271 = *(_OWORD *)&v262[1304];
  v272 = *(_QWORD *)&v262[1320];
  *(_OWORD *)(v186 + 160) = *(_OWORD *)&v262[1304];
  *(_QWORD *)(v186 + 176) = v187;
  *(_BYTE *)(v186 + 184) = 4;
  *(_QWORD *)(v186 + 192) = v209;
  *(_QWORD *)(v186 + 200) = 0;
  *(_QWORD *)(v186 + 208) = 0;
  *(_BYTE *)(v186 + 216) = 5;
  *(_QWORD *)(v186 + 224) = *(_QWORD *)&v262[1408];
  *(_QWORD *)(v186 + 232) = 0;
  *(_QWORD *)(v186 + 240) = 0;
  *(_BYTE *)(v186 + 248) = 7;
  v270[2] = *(_OWORD *)&v253[72];
  v270[3] = *(_OWORD *)&v253[88];
  v270[0] = *(_OWORD *)&v253[40];
  v270[1] = *(_OWORD *)&v253[56];
  v188 = *(_QWORD *)&v262[896];
  v189 = v254;
  swift_bridgeObjectRetain();
  sub_1D5E00978((uint64_t)&v271);
  sub_1D5E1DF6C((uint64_t)v270);
  sub_1D5E034C4(v181, v230, 0, v236, (char *)v186, (uint64_t)&v253[40], v213, v188, v251, v189, v212, v211, v210 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1D5E1CAD0((uint64_t)v270);
  v190 = v251[0];
  v191 = v213;
  if (v251[0])
  {
    v192 = swift_bridgeObjectRetain();
    sub_1D5E1CB04(v192);
    v193 = *(_QWORD *)(v190 + 16);
    if (v193)
    {
      v250 = MEMORY[0x1E0DEE9D8];
      sub_1D5DB9AEC(0, v193, 0);
      v194 = v250;
      v195 = (uint64_t *)(v190 + 40);
      do
      {
        v197 = *(v195 - 1);
        v196 = *v195;
        v199 = *(_QWORD *)(v250 + 16);
        v198 = *(_QWORD *)(v250 + 24);
        swift_bridgeObjectRetain();
        if (v199 >= v198 >> 1)
          sub_1D5DB9AEC((char *)(v198 > 1), v199 + 1, 1);
        v195 += 14;
        *(_QWORD *)(v250 + 16) = v199 + 1;
        v200 = v250 + 16 * v199;
        *(_QWORD *)(v200 + 32) = v197;
        *(_QWORD *)(v200 + 40) = v196;
        --v193;
      }
      while (v193);
      swift_bridgeObjectRelease();
      v191 = v213;
    }
    else
    {
      swift_bridgeObjectRelease();
      v194 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v194 = 0;
  }
  if (*(_BYTE *)(v191 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) == 2)
  {
LABEL_132:
    if (!v194)
      goto LABEL_135;
    goto LABEL_133;
  }
  if (*(_QWORD *)(v191 + 48))
  {
    v251[0] = *(_QWORD *)(v191 + 48);
    memset(&v251[1], 0, 24);
    v252 = 0;
    swift_bridgeObjectRetain();
    sub_1D5DB7D58((uint64_t)v251);
    swift_bridgeObjectRelease();
    goto LABEL_132;
  }
  v205 = (id)qword_1ED9AEC38;
  sub_1D5E375E4();
  sub_1D5E373A4();

  if (v194)
  {
LABEL_133:
    v201 = (void *)qword_1ED9AEC38;
    v202 = swift_allocObject();
    *(_OWORD *)(v202 + 16) = xmmword_1D5E38280;
    v203 = *(_QWORD *)(v194 + 16);
    *(_QWORD *)(v202 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v202 + 64) = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v202 + 32) = v203;
    v204 = v201;
    sub_1D5E375FC();
    sub_1D5E373A4();

    swift_bridgeObjectRelease();
    goto LABEL_136;
  }
LABEL_135:
  v194 = MEMORY[0x1E0DEE9D8];
LABEL_136:
  *v207 = v244;
  v207[1] = v246;
  v207[2] = (char *)v194;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5E09398(uint64_t a1)
{
  sub_1D5E37650();
  sub_1D5E37458();
  MEMORY[0x1D827D0A0](a1, &type metadata for GroupableHeadline);
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  return 0;
}

char *sub_1D5E09430(uint64_t a1, char *a2)
{
  id v3;
  char *v5;

  if ((*(_BYTE *)(a1 + 1400) & 1) != 0)
  {
    if (qword_1ED9ADAB8[0] != -1)
      swift_once();
    v3 = (id)qword_1ED9AEC38;
    sub_1D5E375FC();
    sub_1D5E373A4();

    v5 = a2;
    swift_bridgeObjectRetain();
    sub_1D5E0D5F0(&v5, sub_1D5E0D6C4);
    return v5;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a2;
}

uint64_t sub_1D5E09514(char **a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  id v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _BYTE *v57;
  uint64_t v58;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _BYTE __dst[1896];
  _QWORD v73[3];
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;

  v14 = *(_QWORD *)(a2 + 8);
  v16 = *(double *)(a2 + 16);
  v17 = *(unsigned __int8 *)(a2 + 24);
  v18 = *(unsigned __int8 *)(a2 + 25);
  v19 = *(unsigned __int8 *)(a2 + 26);
  v20 = *(unsigned __int8 *)(a2 + 27);
  v21 = *(unsigned __int8 *)(a2 + 28);
  v58 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)__dst = *(_QWORD *)a2;
  v15 = *(_QWORD *)__dst;
  *(_QWORD *)&__dst[8] = v14;
  __dst[16] = v21 ^ 1;
  swift_bridgeObjectRetain();
  ClusteringJournal.startedClustering(group:)((uint64_t)__dst);
  swift_bridgeObjectRelease();
  v73[0] = v15;
  v73[1] = v14;
  *(double *)&v73[2] = v16;
  v55 = v17;
  v74 = v17;
  v22 = v19;
  v75 = v18;
  v76 = v19;
  v77 = v20;
  v78 = v21;
  v57 = a4;
  memcpy(__dst, a4, sizeof(__dst));
  sub_1D5E09960((uint64_t)v73, v58, (uint64_t)__dst, a5, a3, *a6, a7, a8, a9, *(_QWORD *)(*(_QWORD *)a10 + 16));
  v23 = v65;
  if (v65)
  {
    v24 = v64;
    v25 = v67;
    v63 = v66;
    v27 = v68;
    v26 = v69;
    if (*(_BYTE *)(a3 + OBJC_IVAR____TtC10XavierNews17ClusteringJournal_mode) != 2)
    {
      v28 = *(_QWORD *)(a3 + 48);
      if (v28)
      {
        *(_OWORD *)__dst = v28;
        memset(&__dst[16], 0, 17);
        swift_bridgeObjectRetain();
        sub_1D5DB7D58((uint64_t)__dst);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1ED9ADAB8[0] != -1)
          swift_once();
        v40 = (id)qword_1ED9AEC38;
        sub_1D5E375E4();
        sub_1D5E373A4();

      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = *a1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v41 = sub_1D5DAB600(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
    v43 = *((_QWORD *)v41 + 2);
    v42 = *((_QWORD *)v41 + 3);
    if (v43 >= v42 >> 1)
      v41 = sub_1D5DAB600((char *)(v42 > 1), v43 + 1, 1, v41);
    *((_QWORD *)v41 + 2) = v43 + 1;
    v44 = &v41[40 * v43];
    *((_QWORD *)v44 + 4) = v24;
    *((_QWORD *)v44 + 5) = v23;
    v44[48] = v63 & 1;
    *((_QWORD *)v44 + 7) = v25;
    *((_QWORD *)v44 + 8) = v27;
    *a1 = v41;
    if ((v57[888] & 1) == 0)
      return sub_1D5E1DBF0(v24, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = *(_QWORD *)(v26 + 16);
    if (v46)
    {
      v47 = 32;
      do
      {
        v48 = *(_OWORD *)(v26 + v47);
        v49 = *(_OWORD *)(v26 + v47 + 32);
        *(_OWORD *)&__dst[16] = *(_OWORD *)(v26 + v47 + 16);
        *(_OWORD *)&__dst[32] = v49;
        *(_OWORD *)__dst = v48;
        v50 = *(_OWORD *)(v26 + v47 + 48);
        v51 = *(_OWORD *)(v26 + v47 + 64);
        v52 = *(_OWORD *)(v26 + v47 + 80);
        *(_OWORD *)&__dst[89] = *(_OWORD *)(v26 + v47 + 89);
        *(_OWORD *)&__dst[64] = v51;
        *(_OWORD *)&__dst[80] = v52;
        *(_OWORD *)&__dst[48] = v50;
        sub_1D5DA2190((uint64_t)__dst);
        sub_1D5E0CF48((uint64_t)&v64, (uint64_t)__dst);
        v53 = v70;
        v54 = v71;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D5DA2260(v53, v54);
        v47 += 112;
        --v46;
      }
      while (v46);
    }
  }
  else
  {
    v29 = *a12;
    v30 = 256;
    if (!v18)
      v30 = 0;
    v31 = v30 | v55;
    v32 = 0x10000;
    if (!v22)
      v32 = 0;
    v33 = 0x1000000;
    if (!v20)
      v33 = 0;
    v34 = v31 | v32 | v33;
    v35 = 0x100000000;
    if (!v21)
      v35 = 0;
    v36 = v34 | v35;
    if (*(_QWORD *)(*a12 + 16))
    {
      swift_bridgeObjectRetain();
      v37 = sub_1D5D97A74(v15, v14, v36, v16);
      if ((v38 & 1) != 0)
      {
        v39 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v37);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1D5E00F28(v39);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    sub_1D5E0D4FC(v15, v14, v36, v16);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5E09960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v10;
  double (*v11)(char *, double, double);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  const void *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)();
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  long double v70;
  long double v71;
  long double v72;
  double v73;
  uint64_t v74;
  double v75;
  double *v76;
  uint64_t v77;
  double v78;
  double v79;
  uint64_t v80;
  double *v81;
  double v82;
  uint64_t v83;
  double v84;
  __int128 v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  double (*v89)(char *, double, double);
  uint64_t v90;
  uint64_t v91;
  int v92;
  int v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  int v97;
  char *v98[2];
  __int128 v99;
  __int128 v100;
  __int128 v101;
  _QWORD v102[2];
  _BYTE v103[432];
  _BYTE __src[432];
  _BYTE v105[432];
  _QWORD __dst[237];
  _BYTE v107[432];
  _OWORD v108[27];
  _OWORD v109[27];
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  _BYTE v114[440];

  v10 = MEMORY[0x1E0C80A78](a1, a2);
  v88 = v12;
  v89 = v11;
  v90 = v14;
  v91 = v13;
  v87 = v15;
  v17 = v16;
  v18 = *(_QWORD *)v10;
  v19 = *(_QWORD *)(v10 + 8);
  v20 = *(double *)(v10 + 16);
  v94 = *(unsigned __int8 *)(v10 + 24);
  v97 = *(unsigned __int8 *)(v10 + 25);
  v92 = *(unsigned __int8 *)(v10 + 26);
  v93 = *(unsigned __int8 *)(v10 + 27);
  v21 = *(unsigned __int8 *)(v10 + 28);
  memcpy(__dst, v22, sizeof(__dst));
  v23 = __dst[110];
  if (*(_QWORD *)(__dst[110] + 16))
  {
    swift_bridgeObjectRetain();
    v24 = sub_1D5D7FFCC(v18, v19);
    if ((v25 & 1) != 0)
    {
      v26 = (const void *)(*(_QWORD *)(v23 + 56) + 432 * v24);
      memcpy(v108, v26, 0x1AAuLL);
      memmove(v109, v26, 0x1AAuLL);
      nullsub_153(v109);
      sub_1D5E1DFA4((uint64_t)v108);
      swift_bridgeObjectRelease();
      v27 = *(_QWORD *)&v108[18];
      v28 = v21;
      v29 = *((_QWORD *)&v108[18] + 1);
      v95 = v108[19];
      v85 = v108[20];
      v30 = v108[21];
      v31 = swift_allocObject();
      *(_QWORD *)(v31 + 16) = v27;
      *(_QWORD *)(v31 + 24) = v29;
      *(_OWORD *)(v31 + 32) = v95;
      *(_OWORD *)(v31 + 48) = v85;
      *(_OWORD *)(v31 + 64) = v30;
      v21 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32 = v109;
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
  }
  sub_1D5E1DC2C(v108);
  if ((v21 & 1) != 0)
  {
    if (v97)
      memcpy(v109, &__dst[178], 0x1AAuLL);
    else
      memcpy(v109, __dst, 0x1AAuLL);
    v110 = v109[18];
    v111 = v109[19];
    v112 = v109[20];
    v113 = v109[21];
  }
  else
  {
    memcpy(v109, &__dst[54], 0x1AAuLL);
    v110 = v109[18];
    v111 = v109[19];
    v112 = v109[20];
    v113 = v109[21];
  }
  v33 = (_OWORD *)swift_allocObject();
  v34 = v109[19];
  v33[1] = v109[18];
  v33[2] = v34;
  v35 = v109[21];
  v33[3] = v109[20];
  v33[4] = v35;
  sub_1D5E1DF6C((uint64_t)&v110);
  v32 = v108;
LABEL_12:
  sub_1D5E1DC74((uint64_t)v32, (uint64_t)v114);
  sub_1D5E1DC74((uint64_t)v114, (uint64_t)v105);
  sub_1D5E1DF34(a10, (uint64_t)v108);
  swift_release();
  v36 = *(char **)&v108[0];
  v37 = v108[1];
  v38 = v108[2];
  v39 = v108[3];
  v86 = (char *)*((_QWORD *)&v108[0] + 1);
  sub_1D5E1DC74((uint64_t)v114, (uint64_t)__src);
  v96 = v18;
  if (sub_1D5E1DCBC((uint64_t)__src) == 1)
  {
    if ((v21 & 1) != 0)
    {
      if (v97)
      {
        memcpy(v108, &__dst[178], 0x1AAuLL);
        v40 = swift_allocObject();
        memcpy((void *)(v40 + 16), &__dst[178], 0x1AAuLL);
        sub_1D5E1DFA4((uint64_t)v108);
        v41 = sub_1D5E1DEC4;
      }
      else
      {
        memcpy(v108, __dst, 0x1AAuLL);
        v40 = swift_allocObject();
        memcpy((void *)(v40 + 16), __dst, 0x1AAuLL);
        sub_1D5E1DFA4((uint64_t)v108);
        v41 = sub_1D5E1DCD8;
      }
    }
    else
    {
      memcpy(v108, &__dst[54], 0x1AAuLL);
      v40 = swift_allocObject();
      memcpy((void *)(v40 + 16), &__dst[54], 0x1AAuLL);
      sub_1D5E1DFA4((uint64_t)v108);
      v41 = sub_1D5E1DECC;
    }
  }
  else
  {
    v40 = swift_allocObject();
    memcpy((void *)(v40 + 16), __src, 0x1AAuLL);
    v41 = sub_1D5E1DED4;
  }
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v41;
  *(_QWORD *)(v42 + 24) = v40;
  sub_1D5E1DD58((uint64_t)v114, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1D5E1DD00);
  v43 = sub_1D5E1DCDC(a10);
  swift_release();
  sub_1D5E1DC74((uint64_t)v114, (uint64_t)v103);
  if (sub_1D5E1DCBC((uint64_t)v103) == 1)
  {
    if ((v21 & 1) != 0)
    {
      v44 = v21;
      if (v97)
      {
        memcpy(v107, &__dst[178], 0x1AAuLL);
        v45 = swift_allocObject();
        memcpy((void *)(v45 + 16), &__dst[178], 0x1AAuLL);
        sub_1D5E1DFA4((uint64_t)v107);
        v46 = sub_1D5E1DE58;
      }
      else
      {
        memcpy(v107, __dst, 0x1AAuLL);
        v45 = swift_allocObject();
        memcpy((void *)(v45 + 16), __dst, 0x1AAuLL);
        sub_1D5E1DFA4((uint64_t)v107);
        v46 = sub_1D5E1DD54;
      }
    }
    else
    {
      v44 = v21;
      memcpy(v107, &__dst[54], 0x1AAuLL);
      v45 = swift_allocObject();
      memcpy((void *)(v45 + 16), &__dst[54], 0x1AAuLL);
      sub_1D5E1DFA4((uint64_t)v107);
      v46 = sub_1D5E1DE60;
    }
  }
  else
  {
    v44 = v21;
    v45 = swift_allocObject();
    memcpy((void *)(v45 + 16), v103, 0x1AAuLL);
    v46 = sub_1D5E1DE68;
  }
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v46;
  *(_QWORD *)(v47 + 24) = v45;
  sub_1D5E1DD58((uint64_t)v114, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1D5E1DD00);
  v48 = sub_1D5E1DCDC(a10);
  swift_release();
  swift_bridgeObjectRetain();
  sub_1D5DBBE24((uint64_t)__dst);
  v49 = swift_bridgeObjectRetain();
  v50 = (char *)sub_1D5D9E3E0(v49);
  swift_bridgeObjectRelease();
  v98[0] = v50;
  sub_1D5E14410(v98, v96, v19, (uint64_t)__dst);
  sub_1D5DBE3F4((uint64_t)__dst);
  swift_bridgeObjectRelease();
  v51 = v98[0];
  v52 = 256;
  if (!v97)
    v52 = 0;
  v53 = v52 | v94;
  v54 = 0x10000;
  if (!v92)
    v54 = 0;
  v55 = 0x1000000;
  if (!v93)
    v55 = 0;
  v56 = v53 | v54 | v55;
  v57 = 0x100000000;
  if (!(_DWORD)v44)
    v57 = 0;
  v58 = (char *)sub_1D5E0AEB4((uint64_t)v105, v96, v19, v56 | v57, (uint64_t)__dst, a10, v87);
  sub_1D5E1DD58((uint64_t)v114, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1D5E1DE04);
  v98[0] = v36;
  v98[1] = v86;
  v99 = v37;
  v100 = v38;
  v101 = v39;
  sub_1D5E034C4((uint64_t)v51, v43, 0, v48, v58, (uint64_t)v98, v91, __dst[112], v102, v90, v89, v88, a9 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  result = swift_bridgeObjectRelease();
  v60 = v102[0];
  if (!v102[0])
  {
    *(_OWORD *)(v17 + 16) = 0u;
    *(_OWORD *)(v17 + 32) = 0u;
    *(_OWORD *)v17 = 0u;
    return result;
  }
  v61 = v102[1];
  v62 = *(_QWORD *)(v102[0] + 16);
  v63 = 0.0;
  v64 = 0.0;
  if (v43 < v48)
  {
    if (__OFSUB__(v62, v43))
    {
      __break(1u);
    }
    else if (!__OFSUB__(v48, v43))
    {
      v64 = (double)(v62 - v43) / (double)(v48 - v43);
      goto LABEL_39;
    }
    __break(1u);
    result = swift_release();
    __break(1u);
    return result;
  }
LABEL_39:
  if (v97)
    v65 = 1.0;
  else
    v65 = 0.0;
  if (v92)
    v66 = 1.0;
  else
    v66 = 0.0;
  if (v93)
    v67 = 1.0;
  else
    v67 = 0.0;
  if ((_DWORD)v94)
    v68 = 1.0;
  else
    v68 = 0.0;
  v69 = pow(*(long double *)&__dst[232], v65);
  v70 = v69 * pow(*(long double *)&__dst[177], v66);
  v71 = v70 * pow(*(long double *)&__dst[234], v67);
  v72 = v71 * pow(*(long double *)&__dst[236], v68);
  v73 = v72 * pow(*(long double *)&__dst[233], v64);
  if (!v62)
    goto LABEL_61;
  if (v62 == 1)
  {
    v74 = 0;
    v75 = 0.0;
  }
  else
  {
    v74 = v62 & 0x7FFFFFFFFFFFFFFELL;
    v76 = (double *)(v60 + 200);
    v75 = 0.0;
    v77 = v62 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v78 = *(v76 - 14);
      v79 = *v76;
      v76 += 28;
      v75 = v75 + v78 + v79;
      v77 -= 2;
    }
    while (v77);
    if (v62 == v74)
      goto LABEL_60;
  }
  v80 = v62 - v74;
  v81 = (double *)(v60 + 112 * v74 + 88);
  do
  {
    v82 = *v81;
    v81 += 14;
    v75 = v75 + v82;
    --v80;
  }
  while (v80);
LABEL_60:
  v63 = v75 / (double)v62;
LABEL_61:
  v83 = 108;
  if ((_DWORD)v44)
    v83 = 235;
  v84 = v73 * (v20 * *(double *)&__dst[v83] + v63 * (1.0 - *(double *)&__dst[v83]));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1D5E1CB04(v60);
  *(_QWORD *)v17 = v96;
  *(_QWORD *)(v17 + 8) = v19;
  *(_QWORD *)(v17 + 16) = v44;
  *(_QWORD *)(v17 + 24) = v60;
  *(double *)(v17 + 32) = v84;
  *(_QWORD *)(v17 + 40) = v61;
  return result;
}

uint64_t sub_1D5E0A2E4(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = *a1;
  v3 = floor(*(double *)(a2 + 936) * (double)(*(_QWORD *)(result + 16) + 1));
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 9.22337204e18)
  {
    v4 = (uint64_t)v3;
    v5 = swift_bridgeObjectRetain();
    v6 = *(_QWORD *)(sub_1D5E0A388(v5) + 16);
    swift_bridgeObjectRelease();
    return v6 < v4;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D5E0A388(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    goto LABEL_7;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v2 << 6); ; i = __clz(__rbit64(v13)) + (v2 << 6))
  {
    v11 = *(_QWORD *)(v1 + 56);
    if ((*(_BYTE *)(v11 + 40 * i + 16) & 1) != 0)
    {
      if (v6)
        goto LABEL_4;
    }
    else
    {
      v15 = (uint64_t *)(v11 + 40 * i);
      v21 = *v15;
      v22 = v15[1];
      v16 = v15[3];
      v17 = v15[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = (uint64_t)sub_1D5DB9E0C(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v19 = *(_QWORD *)(v8 + 16);
      v18 = *(_QWORD *)(v8 + 24);
      if (v19 >= v18 >> 1)
        result = (uint64_t)sub_1D5DB9E0C((char *)(v18 > 1), v19 + 1, 1);
      *(_QWORD *)(v8 + 16) = v19 + 1;
      v20 = v8 + 40 * v19;
      *(_QWORD *)(v20 + 32) = v21;
      *(_QWORD *)(v20 + 40) = v22;
      *(_BYTE *)(v20 + 48) = 0;
      *(_QWORD *)(v20 + 56) = v16;
      *(_QWORD *)(v20 + 64) = v17;
      if (v6)
        goto LABEL_4;
    }
LABEL_7:
    v12 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v7)
      goto LABEL_29;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v2;
    if (!v13)
    {
      v2 = v12 + 1;
      if (v12 + 1 >= v7)
        goto LABEL_29;
      v13 = *(_QWORD *)(v3 + 8 * v2);
      if (!v13)
      {
        v2 = v12 + 2;
        if (v12 + 2 >= v7)
          goto LABEL_29;
        v13 = *(_QWORD *)(v3 + 8 * v2);
        if (!v13)
        {
          v2 = v12 + 3;
          if (v12 + 3 >= v7)
            goto LABEL_29;
          v13 = *(_QWORD *)(v3 + 8 * v2);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v13 - 1) & v13;
  }
  v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_29:
    swift_release();
    return v8;
  }
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v2 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v2 >= v7)
      goto LABEL_29;
    v13 = *(_QWORD *)(v3 + 8 * v2);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1D5E0A5B0(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    goto LABEL_7;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v2 << 6); ; i = __clz(__rbit64(v13)) + (v2 << 6))
  {
    v11 = *(_QWORD *)(v1 + 56);
    if (*(_BYTE *)(v11 + 40 * i + 16) == 1)
    {
      v15 = (uint64_t *)(v11 + 40 * i);
      v21 = *v15;
      v22 = v15[1];
      v16 = v15[3];
      v17 = v15[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = (uint64_t)sub_1D5DB9E0C(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v19 = *(_QWORD *)(v8 + 16);
      v18 = *(_QWORD *)(v8 + 24);
      if (v19 >= v18 >> 1)
        result = (uint64_t)sub_1D5DB9E0C((char *)(v18 > 1), v19 + 1, 1);
      *(_QWORD *)(v8 + 16) = v19 + 1;
      v20 = v8 + 40 * v19;
      *(_QWORD *)(v20 + 32) = v21;
      *(_QWORD *)(v20 + 40) = v22;
      *(_BYTE *)(v20 + 48) = 1;
      *(_QWORD *)(v20 + 56) = v16;
      *(_QWORD *)(v20 + 64) = v17;
      if (v6)
        goto LABEL_4;
    }
    else if (v6)
    {
      goto LABEL_4;
    }
LABEL_7:
    v12 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v7)
      goto LABEL_29;
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v2;
    if (!v13)
    {
      v2 = v12 + 1;
      if (v12 + 1 >= v7)
        goto LABEL_29;
      v13 = *(_QWORD *)(v3 + 8 * v2);
      if (!v13)
      {
        v2 = v12 + 2;
        if (v12 + 2 >= v7)
          goto LABEL_29;
        v13 = *(_QWORD *)(v3 + 8 * v2);
        if (!v13)
        {
          v2 = v12 + 3;
          if (v12 + 3 >= v7)
            goto LABEL_29;
          v13 = *(_QWORD *)(v3 + 8 * v2);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v13 - 1) & v13;
  }
  v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_29:
    swift_release();
    return v8;
  }
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v2 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v2 >= v7)
      goto LABEL_29;
    v13 = *(_QWORD *)(v3 + 8 * v2);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1D5E0A7E0(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = *a1;
  v3 = floor(*(double *)(a2 + 944) * (double)(*(_QWORD *)(result + 16) + 1));
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 9.22337204e18)
  {
    v4 = (uint64_t)v3;
    v5 = swift_bridgeObjectRetain();
    v6 = *(_QWORD *)(sub_1D5E0A5B0(v5) + 16);
    swift_bridgeObjectRelease();
    return v6 < v4;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D5E0A884(uint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_1D5E37650();
  sub_1D5E37458();
  v2 = *(_QWORD *)(a1 + 16);
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  result = swift_bridgeObjectRetain();
  v4 = 0;
  v5 = MEMORY[0x1E0DEE9D8];
LABEL_2:
  if (v4 <= v2)
    v6 = v2;
  else
    v6 = v4;
  v7 = 40 * v4;
  v8 = v6 + 1;
  while (v2 != v4)
  {
    if (v8 == ++v4)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    v9 = v7 + 40;
    v10 = *(_BYTE *)(a1 + v7 + 48);
    v7 += 40;
    if ((v10 & 1) == 0)
    {
      v11 = *(_QWORD *)(a1 + v9 - 8);
      v12 = *(_QWORD *)(a1 + v9);
      v13 = *(_QWORD *)(a1 + v9 + 16);
      v14 = *(_QWORD *)(a1 + v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = (uint64_t)sub_1D5DB9E0C(0, *(_QWORD *)(v5 + 16) + 1, 1);
      v16 = *(_QWORD *)(v5 + 16);
      v15 = *(_QWORD *)(v5 + 24);
      if (v16 >= v15 >> 1)
        result = (uint64_t)sub_1D5DB9E0C((char *)(v15 > 1), v16 + 1, 1);
      *(_QWORD *)(v5 + 16) = v16 + 1;
      v17 = v5 + 40 * v16;
      *(_QWORD *)(v17 + 32) = v11;
      *(_QWORD *)(v17 + 40) = v12;
      *(_BYTE *)(v17 + 48) = 0;
      *(_QWORD *)(v17 + 56) = v13;
      *(_QWORD *)(v17 + 64) = v14;
      goto LABEL_2;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v19 = MEMORY[0x1E0DEE9D8];
LABEL_15:
  if (v18 <= v2)
    v20 = v2;
  else
    v20 = v18;
  v21 = 40 * v18;
  v22 = v20 + 1;
  while (v2 != v18)
  {
    if (v22 == ++v18)
      goto LABEL_29;
    v23 = v21 + 40;
    v24 = *(unsigned __int8 *)(a1 + v21 + 48);
    v21 += 40;
    if (v24 == 1)
    {
      v25 = *(_QWORD *)(a1 + v23 - 8);
      v26 = *(_QWORD *)(a1 + v23);
      v27 = *(_QWORD *)(a1 + v23 + 16);
      v28 = *(_QWORD *)(a1 + v23 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = (uint64_t)sub_1D5DB9E0C(0, *(_QWORD *)(v19 + 16) + 1, 1);
      v30 = *(_QWORD *)(v19 + 16);
      v29 = *(_QWORD *)(v19 + 24);
      if (v30 >= v29 >> 1)
        result = (uint64_t)sub_1D5DB9E0C((char *)(v29 > 1), v30 + 1, 1);
      *(_QWORD *)(v19 + 16) = v30 + 1;
      v31 = v19 + 40 * v30;
      *(_QWORD *)(v31 + 32) = v25;
      *(_QWORD *)(v31 + 40) = v26;
      *(_BYTE *)(v31 + 48) = 1;
      *(_QWORD *)(v31 + 56) = v27;
      *(_QWORD *)(v31 + 64) = v28;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  v32 = swift_bridgeObjectRetain();
  sub_1D5E0A388(v32);
  swift_bridgeObjectRelease();
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  v33 = swift_bridgeObjectRetain();
  sub_1D5E0A5B0(v33);
  swift_bridgeObjectRelease();
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  sub_1D5E37584();
  sub_1D5E37458();
  sub_1D5E37584();
  sub_1D5E37458();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  return 0;
}

void (*sub_1D5E0ADF0(double ****a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5))(_QWORD *a1)
{
  double ***v10;

  v10 = (double ***)malloc(0x30uLL);
  *a1 = v10;
  v10[4] = (double **)a3;
  swift_bridgeObjectRetain();
  v10[5] = (double **)sub_1D5E10194(v10, a2, a3, a4 & 0x101010101, a5);
  return sub_1D5E0AE7C;
}

void sub_1D5E0AE7C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_1D5E0AEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[432];
  _BYTE v29[432];
  _BYTE v30[432];
  _OWORD __dst[27];
  __int128 v32;
  uint64_t v33;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AD940);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1D5E44F00;
  v15 = sub_1D5E0B208(a1, a2, a3, a4 & 0x101010101, (char *)a5, a6);
  *(_QWORD *)(v14 + 40) = 0;
  *(_QWORD *)(v14 + 48) = 0;
  *(_QWORD *)(v14 + 32) = v15;
  *(_BYTE *)(v14 + 56) = 0;
  v16 = sub_1D5E0B3D4(a1, a2, a3, a4 & 0x101010101, (char *)a5, a6);
  *(_QWORD *)(v14 + 72) = 0;
  *(_QWORD *)(v14 + 80) = 0;
  *(_QWORD *)(v14 + 64) = v16;
  *(_BYTE *)(v14 + 88) = 1;
  v17 = sub_1D5E0B5A0(a1, a2, a3, a4 & 0x101010101, (char *)a5, a6);
  *(_QWORD *)(v14 + 104) = 0;
  *(_QWORD *)(v14 + 112) = 0;
  *(_QWORD *)(v14 + 96) = v17;
  *(_BYTE *)(v14 + 120) = 2;
  *(_QWORD *)(v14 + 136) = 0;
  *(_QWORD *)(v14 + 144) = 0;
  *(_QWORD *)(v14 + 128) = a7;
  *(_BYTE *)(v14 + 152) = 5;
  sub_1D5E1DC74(a1, (uint64_t)v29);
  if (sub_1D5E1DCBC((uint64_t)v29) == 1)
  {
    if ((a4 & 0x100000000) != 0)
    {
      if ((a4 & 0x100) != 0)
        v18 = (_BYTE *)(a5 + 1424);
      else
        v18 = (_BYTE *)a5;
    }
    else
    {
      v18 = (_BYTE *)(a5 + 432);
    }
  }
  else
  {
    v18 = v29;
  }
  memcpy(__dst, v18, 0x1AAuLL);
  v32 = __dst[22];
  v33 = *(_QWORD *)&__dst[23];
  v20 = __dst[22];
  v19 = *(_QWORD *)&__dst[23];
  sub_1D5E00978((uint64_t)&v32);
  *(_OWORD *)(v14 + 160) = v20;
  *(_QWORD *)(v14 + 176) = v19;
  *(_BYTE *)(v14 + 184) = 4;
  v21 = *(_QWORD *)(a5 + 1408);
  *(_QWORD *)(v14 + 200) = 0;
  *(_QWORD *)(v14 + 208) = 0;
  *(_QWORD *)(v14 + 192) = v21;
  *(_BYTE *)(v14 + 216) = 7;
  if ((a4 & 0x100000000) != 0)
  {
    sub_1D5E1DC74(a1, (uint64_t)v28);
    if (sub_1D5E1DCBC((uint64_t)v28) == 1)
    {
      if ((a4 & 0x100) != 0)
      {
        v24 = (const void *)(a5 + 1424);
        memcpy(v30, v24, 0x1AAuLL);
        v22 = swift_allocObject();
        memcpy((void *)(v22 + 16), v24, 0x1AAuLL);
        sub_1D5E1DFA4((uint64_t)v30);
        v23 = sub_1D5E1E028;
      }
      else
      {
        memcpy(v30, (const void *)a5, 0x1AAuLL);
        v22 = swift_allocObject();
        memcpy((void *)(v22 + 16), (const void *)a5, 0x1AAuLL);
        sub_1D5E1DFA4((uint64_t)v30);
        v23 = sub_1D5E1E020;
      }
    }
    else
    {
      v22 = swift_allocObject();
      memcpy((void *)(v22 + 16), v28, 0x1AAuLL);
      v23 = sub_1D5E1E030;
    }
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v23;
    *(_QWORD *)(v25 + 24) = v22;
    swift_bridgeObjectRetain();
    sub_1D5E1DD58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1D5E1DD00);
    v26 = sub_1D5E1DCDC(a6);
    swift_release();
    v14 = (uint64_t)sub_1D5DAB4D4((char *)1, 7, 1, (char *)v14);
    *(_QWORD *)(v14 + 16) = 7;
    *(_QWORD *)(v14 + 232) = 0;
    *(_QWORD *)(v14 + 240) = 0;
    *(_QWORD *)(v14 + 224) = v26;
    *(_BYTE *)(v14 + 248) = 3;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v14;
}

uint64_t sub_1D5E0B208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  const void *v10;
  uint64_t v11;
  uint64_t (*v12)();
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[432];
  _BYTE __dst[432];

  sub_1D5E1DC74(a1, (uint64_t)v17);
  if (sub_1D5E1DCBC((uint64_t)v17) == 1)
  {
    if ((a4 & 0x100000000) != 0)
    {
      if ((a4 & 0x100) != 0)
      {
        v13 = a5 + 1424;
        memcpy(__dst, v13, 0x1AAuLL);
        v11 = swift_allocObject();
        memcpy((void *)(v11 + 16), v13, 0x1AAuLL);
        sub_1D5E1DFA4((uint64_t)__dst);
        v12 = sub_1D5E1E1A0;
      }
      else
      {
        memcpy(__dst, a5, 0x1AAuLL);
        v11 = swift_allocObject();
        memcpy((void *)(v11 + 16), a5, 0x1AAuLL);
        sub_1D5E1DFA4((uint64_t)__dst);
        v12 = sub_1D5E1E198;
      }
    }
    else
    {
      v10 = a5 + 432;
      memcpy(__dst, v10, 0x1AAuLL);
      v11 = swift_allocObject();
      memcpy((void *)(v11 + 16), v10, 0x1AAuLL);
      sub_1D5E1DFA4((uint64_t)__dst);
      v12 = sub_1D5E1E1A8;
    }
  }
  else
  {
    v11 = swift_allocObject();
    memcpy((void *)(v11 + 16), v17, 0x1AAuLL);
    v12 = sub_1D5E1E1E4;
  }
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v11;
  sub_1D5E1DD58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1D5E1DD00);
  v15 = sub_1D5E1DCDC(a6);
  swift_release();
  return v15;
}

uint64_t sub_1D5E0B3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  const void *v10;
  uint64_t v11;
  uint64_t (*v12)();
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[432];
  _BYTE __dst[432];

  sub_1D5E1DC74(a1, (uint64_t)v17);
  if (sub_1D5E1DCBC((uint64_t)v17) == 1)
  {
    if ((a4 & 0x100000000) != 0)
    {
      if ((a4 & 0x100) != 0)
      {
        v13 = a5 + 1424;
        memcpy(__dst, v13, 0x1AAuLL);
        v11 = swift_allocObject();
        memcpy((void *)(v11 + 16), v13, 0x1AAuLL);
        sub_1D5E1DFA4((uint64_t)__dst);
        v12 = sub_1D5E1E12C;
      }
      else
      {
        memcpy(__dst, a5, 0x1AAuLL);
        v11 = swift_allocObject();
        memcpy((void *)(v11 + 16), a5, 0x1AAuLL);
        sub_1D5E1DFA4((uint64_t)__dst);
        v12 = sub_1D5E1E100;
      }
    }
    else
    {
      v10 = a5 + 432;
      memcpy(__dst, v10, 0x1AAuLL);
      v11 = swift_allocObject();
      memcpy((void *)(v11 + 16), v10, 0x1AAuLL);
      sub_1D5E1DFA4((uint64_t)__dst);
      v12 = sub_1D5E1E134;
    }
  }
  else
  {
    v11 = swift_allocObject();
    memcpy((void *)(v11 + 16), v17, 0x1AAuLL);
    v12 = sub_1D5E1E13C;
  }
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v11;
  sub_1D5E1DD58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1D5E1DD00);
  v15 = sub_1D5E1DCDC(a6);
  swift_release();
  return v15;
}

uint64_t sub_1D5E0B5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  const void *v10;
  uint64_t v11;
  uint64_t (*v12)();
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[432];
  _BYTE __dst[432];

  sub_1D5E1DC74(a1, (uint64_t)v17);
  if (sub_1D5E1DCBC((uint64_t)v17) == 1)
  {
    if ((a4 & 0x100000000) != 0)
    {
      if ((a4 & 0x100) != 0)
      {
        v13 = a5 + 1424;
        memcpy(__dst, v13, 0x1AAuLL);
        v11 = swift_allocObject();
        memcpy((void *)(v11 + 16), v13, 0x1AAuLL);
        sub_1D5E1DFA4((uint64_t)__dst);
        v12 = sub_1D5E1E094;
      }
      else
      {
        memcpy(__dst, a5, 0x1AAuLL);
        v11 = swift_allocObject();
        memcpy((void *)(v11 + 16), a5, 0x1AAuLL);
        sub_1D5E1DFA4((uint64_t)__dst);
        v12 = sub_1D5E1E08C;
      }
    }
    else
    {
      v10 = a5 + 432;
      memcpy(__dst, v10, 0x1AAuLL);
      v11 = swift_allocObject();
      memcpy((void *)(v11 + 16), v10, 0x1AAuLL);
      sub_1D5E1DFA4((uint64_t)__dst);
      v12 = sub_1D5E1E09C;
    }
  }
  else
  {
    v11 = swift_allocObject();
    memcpy((void *)(v11 + 16), v17, 0x1AAuLL);
    v12 = sub_1D5E1E0A4;
  }
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v11;
  sub_1D5E1DD58(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1D5E1DD00);
  v15 = sub_1D5E1DCDC(a6);
  swift_release();
  return v15;
}

uint64_t sub_1D5E0B76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t, uint64_t, double);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t result;
  BOOL v16;
  char *v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t inited;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t, uint64_t, double);
  _QWORD *v80;
  unint64_t v81;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89[8];
  char v90;
  char v91;
  char v92;
  char v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  double v99;

  v7 = v6;
  v10 = (_QWORD *)a1;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, double))a2;
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(_QWORD **)a1;
  v14 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v14)
  {
    result = v13[4];
    v16 = (uint64_t (*)(uint64_t, uint64_t, double))result == v11 && v13[5] == v12;
    if (v16)
      return result;
    v80 = v13;
    result = sub_1D5E378FC();
    if ((result & 1) != 0)
      return result;
    if (v14 != 1)
    {
      result = v13[6];
      if ((uint64_t (*)(uint64_t, uint64_t, double))result == v11 && v13[7] == v12)
        return result;
      result = sub_1D5E378FC();
      if ((result & 1) != 0)
        return result;
      if (v14 != 2)
      {
        v73 = v13 + 9;
        v74 = 2;
        while (1)
        {
          v75 = v74 + 1;
          if (__OFADD__(v74, 1))
            break;
          result = *(v73 - 1);
          if ((uint64_t (*)(uint64_t, uint64_t, double))result == v11 && *v73 == v12)
            return result;
          result = sub_1D5E378FC();
          if ((result & 1) != 0)
            return result;
          v73 += 2;
          ++v74;
          v16 = v75 == v14;
          v10 = (_QWORD *)a1;
          v13 = v80;
          if (v16)
            goto LABEL_8;
        }
        __break(1u);
        goto LABEL_70;
      }
    }
  }
LABEL_8:
  swift_bridgeObjectRetain();
  v17 = (char *)v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    v18 = (char *)v13;
  else
LABEL_68:
    v18 = sub_1D5D7DABC(0, v14 + 1, 1, v17);
  v20 = *((_QWORD *)v18 + 2);
  v19 = *((_QWORD *)v18 + 3);
  if (v20 >= v19 >> 1)
    v18 = sub_1D5D7DABC((char *)(v19 > 1), v20 + 1, 1, v18);
  *((_QWORD *)v18 + 2) = v20 + 1;
  v21 = &v18[16 * v20];
  v79 = v11;
  *((_QWORD *)v21 + 4) = v11;
  *((_QWORD *)v21 + 5) = v12;
  *v10 = v18;
  v22 = MEMORY[0x1E0DEE9E0];
  v99 = MEMORY[0x1E0DEE9E0];
  v23 = *(_QWORD *)(a3 + 16);
  v81 = a6;
  if (v23)
  {
    v77 = a5;
    v78 = v12;
    v24 = swift_bridgeObjectRetain();
    v25 = 0;
    while (1)
    {
      v85 = v23;
      v26 = *(_QWORD *)(v24 + v25 + 64);
      v27 = *(_QWORD *)(v24 + v25 + 72);
      v28 = *(_QWORD *)(v24 + v25 + 80);
      a5 = *(_QWORD *)(v24 + v25 + 104);
      a6 = *(_QWORD *)(v24 + v25 + 112);
      v29 = *(_BYTE *)(v24 + v25 + 136);
      v30 = *(_QWORD *)(v24 + v25 + 128);
      v31 = *(_BYTE *)(v24 + v25 + 120);
      v32 = *(_BYTE *)(v24 + v25 + 99);
      v33 = *(_BYTE *)(v24 + v25 + 98);
      v34 = *(_BYTE *)(v24 + v25 + 97);
      v35 = *(_BYTE *)(v24 + v25 + 96);
      v36 = *(_QWORD *)(v24 + v25 + 88);
      v37 = *(_QWORD *)(v24 + v25 + 48);
      v38 = *(_QWORD *)(v24 + v25 + 56);
      v39 = *(_QWORD *)(v24 + v25 + 40);
      v89[0] = *(_QWORD *)(v24 + v25 + 32);
      v89[1] = v39;
      v89[2] = v37;
      v89[3] = v38;
      v89[4] = v26;
      v89[5] = v27;
      v89[6] = v28;
      v89[7] = v36;
      v90 = v35;
      v91 = v34;
      v92 = v33;
      v93 = v32;
      v94 = a5;
      v95 = a6;
      v96 = v31;
      v97 = v30;
      v98 = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D5DA2208(a5, a6);
      sub_1D5E0BFD0(&v99, (uint64_t)v89, a4);
      if (v7)
        goto LABEL_71;
      v7 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D5DA2260(a5, a6);
      v25 += 112;
      --v23;
      v24 = a3;
      if (v85 == 1)
      {
        swift_bridgeObjectRelease();
        v40 = *(_QWORD *)&v99;
        a6 = v81;
        v22 = MEMORY[0x1E0DEE9E0];
        a5 = v77;
        v12 = v78;
        goto LABEL_18;
      }
    }
  }
  v40 = MEMORY[0x1E0DEE9E0];
LABEL_18:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D5DBBE24(a5);
  v41 = a5;
  a5 = sub_1D5E11608(v22, a4, v40, a4, a5);
  sub_1D5DBE3F4(v41);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v42 = swift_bridgeObjectRetain();
  v43 = sub_1D5E10988(v42, a4);
  swift_bridgeObjectRelease();
  v89[0] = v22;
  v44 = *(double *)(v41 + 1384);
  v99 = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF868);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D5E38280;
  *(_QWORD *)(inited + 32) = v79;
  v10 = (_QWORD *)(inited + 32);
  *(_QWORD *)(inited + 40) = v12;
  swift_bridgeObjectRetain();
  v46 = sub_1D5D81DA4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  if (*(_QWORD *)(v46 + 16))
  {
    v47 = MEMORY[0x1E0DEE9E8];
    v10 = (_QWORD *)a1;
    do
    {
      v88 = v47;
      swift_bridgeObjectRetain();
      sub_1D5E18838(v46, a5, a1, (uint64_t)&v99, (uint64_t)v89, (uint64_t)&v88, (void (*)(uint64_t, uint64_t, double))sub_1D5E1E760);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v99 = v99 * v99;
      v46 = v88;
    }
    while (*(_QWORD *)(v88 + 16));
    swift_bridgeObjectRelease();
    v48 = v89[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = MEMORY[0x1E0DEE9E0];
  }
  v14 = sub_1D5E10520(v48, v43);
  swift_bridgeObjectRelease();
  v49 = sub_1D5E11198(v14);
  if ((v51 & 1) != 0)
  {
LABEL_70:
    __break(1u);
LABEL_71:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D5DA2260(a5, a6);
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_72:
    swift_bridgeObjectRelease();
    result = swift_release();
    __break(1u);
    return result;
  }
  v17 = (char *)MEMORY[0x1E0DEE9E8];
  v11 = sub_1D5E1E760;
  while (1)
  {
    if (*(_DWORD *)(v14 + 36) != v50)
    {
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    v53 = 1 << *(_BYTE *)(v14 + 32);
    if (v49 == v53)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (v49 < 0 || v49 >= v53)
      goto LABEL_66;
    if (((*(_QWORD *)(v14 + (((unint64_t)v49 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v49) & 1) == 0)
      goto LABEL_67;
    v54 = (uint64_t *)(*(_QWORD *)(v14 + 48) + 16 * v49);
    v55 = *v54;
    v56 = v54[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v57 = swift_bridgeObjectRetain();
    v58 = sub_1D5D9E030(v57);
    swift_bridgeObjectRelease();
    v89[0] = (uint64_t)v58;
    sub_1D5E1C578(v89, a6, (uint64_t (*)(uint64_t))sub_1D5E26050, (void (*)(_QWORD *, uint64_t))sub_1D5E1BB10);
    if (v7)
      goto LABEL_72;
    v7 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v89[0] + 16))
      break;
    v59 = *(_QWORD *)(v89[0] + 32);
    v60 = *(_QWORD *)(v89[0] + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
    v61 = *(char **)a1;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v61 = sub_1D5D7DABC(0, *((_QWORD *)v61 + 2) + 1, 1, v61);
    v63 = *((_QWORD *)v61 + 2);
    v62 = *((_QWORD *)v61 + 3);
    if (v63 >= v62 >> 1)
      v61 = sub_1D5D7DABC((char *)(v62 > 1), v63 + 1, 1, v61);
    *((_QWORD *)v61 + 2) = v63 + 1;
    v64 = &v61[16 * v63];
    *((_QWORD *)v64 + 4) = v59;
    *((_QWORD *)v64 + 5) = v60;
    v10 = (_QWORD *)a1;
    *(_QWORD *)a1 = v61;
    swift_bridgeObjectRetain();
    v65 = swift_bridgeObjectRetain();
    v86 = sub_1D5E10988(v65, a4);
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x1E0DEE9E0];
    v99 = MEMORY[0x1E0DEE9E0];
    v88 = *(_QWORD *)&v44;
    swift_bridgeObjectRetain();
    v87 = sub_1D5E3759C();
    swift_bridgeObjectRetain();
    sub_1D5D81E38(v89, v59, v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v66 = v87;
    if (*(_QWORD *)(v87 + 16))
    {
      v67 = v44;
      do
      {
        v89[0] = (uint64_t)v17;
        swift_bridgeObjectRetain();
        sub_1D5E18838(v66, a5, a1, (uint64_t)&v88, (uint64_t)&v99, (uint64_t)v89, (void (*)(uint64_t, uint64_t, double))sub_1D5E1E760);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v67 = v67 * v67;
        v88 = *(_QWORD *)&v67;
        v66 = v89[0];
      }
      while (*(_QWORD *)(v89[0] + 16));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)&v99;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v14 = sub_1D5E10520(v12, v86);
    swift_bridgeObjectRelease();
    v49 = sub_1D5E11198(v14);
    a6 = v81;
    if ((v52 & 1) != 0)
      goto LABEL_70;
  }
  swift_bridgeObjectRelease();
  swift_release();
  v68 = *(_QWORD *)a1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1D5D7DABC(0, *(_QWORD *)(v68 + 16) + 1, 1, (char *)v68);
    v68 = result;
  }
  v70 = *(_QWORD *)(v68 + 16);
  v69 = *(_QWORD *)(v68 + 24);
  if (v70 >= v69 >> 1)
  {
    result = (uint64_t)sub_1D5D7DABC((char *)(v69 > 1), v70 + 1, 1, (char *)v68);
    v68 = result;
  }
  *(_QWORD *)(v68 + 16) = v70 + 1;
  v71 = v68 + 16 * v70;
  *(_QWORD *)(v71 + 32) = v55;
  *(_QWORD *)(v71 + 40) = v56;
  *(_QWORD *)a1 = v68;
  return result;
}

uint64_t sub_1D5E0BFD0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)(_QWORD *@<X8>);
  void (*v9)(_QWORD *@<X8>);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD *@<X8>);
  uint64_t result;
  _QWORD *v61;
  unint64_t v62;
  uint64_t *v63;
  _QWORD *v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;

  v5 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  v6 = sub_1D5D809F8(v5, a3);
  v7 = sub_1D5D9E030(v6);
  swift_release();
  if (!v7[2])
  {
    swift_release();
    v59 = 0;
    v9 = 0;
    goto LABEL_45;
  }
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v61 = v7 + 4;
  v11 = v7 + 7;
  v12 = 1;
  v64 = v7;
  v65 = v7[2];
  while (2)
  {
    v13 = &v61[2 * v10];
    v15 = *v13;
    v14 = v13[1];
    swift_bridgeObjectRetain_n();
    sub_1D5E1E258((uint64_t)v8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = (_QWORD *)*a1;
    v66 = v15;
    v67 = (_QWORD *)*a1;
    *a1 = 0x8000000000000000;
    v71 = v14;
    v19 = sub_1D5D7FFCC(v15, v14);
    v20 = v17[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v23 = v18;
    if (v17[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1D5D99148();
        v17 = v67;
      }
      goto LABEL_10;
    }
    sub_1D5D9C5EC(v22, isUniquelyReferenced_nonNull_native);
    v17 = v67;
    v24 = sub_1D5D7FFCC(v66, v71);
    if ((v23 & 1) == (v25 & 1))
    {
      v19 = v24;
LABEL_10:
      *a1 = v17;
      swift_bridgeObjectRelease();
      v26 = (_QWORD *)*a1;
      if ((v23 & 1) == 0)
      {
        v26[(v19 >> 6) + 8] |= 1 << v19;
        v27 = (uint64_t *)(v26[6] + 16 * v19);
        *v27 = v66;
        v27[1] = v71;
        *(_QWORD *)(v26[7] + 8 * v19) = 0;
        v28 = v26[2];
        v29 = v28 + 1;
        v30 = __OFADD__(v28, 1);
        swift_bridgeObjectRetain();
        if (v30)
          goto LABEL_54;
        v26[2] = v29;
      }
      swift_bridgeObjectRetain();
      v31 = v26[7];
      swift_bridgeObjectRelease();
      v32 = *(_QWORD *)(v31 + 8 * v19);
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (v33)
      {
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        break;
      }
      *(_QWORD *)(v31 + 8 * v19) = v34;
      v35 = v71;
      swift_bridgeObjectRelease();
      v36 = v65;
      if (v12 != v65)
      {
        v62 = v12;
        v63 = v11;
        do
        {
          if (v12 >= v36)
          {
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          if (v12 >= v7[2])
            goto LABEL_47;
          v38 = *(v11 - 1);
          v37 = *v11;
          v39 = v66 == v38 && v35 == v37;
          if (v39 || (sub_1D5E378FC() & 1) == 0)
          {
            v68 = v38;
            v70 = v37;
            swift_bridgeObjectRetain_n();
          }
          else
          {
            v68 = v66;
            v70 = v35;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          sub_1D5E37458();
          swift_bridgeObjectRelease();
          sub_1D5E1E258((uint64_t)v9);
          v40 = v68;
          v41 = swift_isUniquelyReferenced_nonNull_native();
          v42 = (_QWORD *)*a1;
          v69 = (_QWORD *)*a1;
          *a1 = 0x8000000000000000;
          v44 = sub_1D5D7FFCC(v40, v70);
          v45 = v42[2];
          v46 = (v43 & 1) == 0;
          v47 = v45 + v46;
          if (__OFADD__(v45, v46))
            goto LABEL_48;
          v48 = v43;
          if (v42[3] >= v47)
          {
            if ((v41 & 1) == 0)
            {
              sub_1D5D99148();
              v42 = v69;
            }
          }
          else
          {
            sub_1D5D9C5EC(v47, v41);
            v42 = v69;
            v49 = sub_1D5D7FFCC(v40, v70);
            if ((v48 & 1) != (v50 & 1))
              goto LABEL_55;
            v44 = v49;
          }
          v7 = v64;
          *a1 = v42;
          swift_bridgeObjectRelease();
          v51 = (_QWORD *)*a1;
          if ((v48 & 1) == 0)
          {
            v51[(v44 >> 6) + 8] |= 1 << v44;
            v52 = (uint64_t *)(v51[6] + 16 * v44);
            *v52 = v40;
            v52[1] = v70;
            *(_QWORD *)(v51[7] + 8 * v44) = 0;
            v53 = v51[2];
            v54 = v53 + 1;
            v55 = __OFADD__(v53, 1);
            swift_bridgeObjectRetain();
            if (v55)
              goto LABEL_50;
            v51[2] = v54;
          }
          swift_bridgeObjectRetain();
          v56 = v51[7];
          swift_bridgeObjectRelease();
          v57 = *(_QWORD *)(v56 + 8 * v44);
          v33 = __OFADD__(v57, 1);
          v58 = v57 + 1;
          if (v33)
            goto LABEL_49;
          ++v12;
          *(_QWORD *)(v56 + 8 * v44) = v58;
          swift_bridgeObjectRelease();
          v11 += 2;
          v9 = sub_1D5E0C494;
          v36 = v65;
          v35 = v71;
        }
        while (v65 != v12);
        swift_bridgeObjectRelease();
        v10 = v62;
        v12 = v62 + 1;
        v11 = v63 + 2;
        v8 = sub_1D5E0C48C;
        if (v62 < v64[2])
          continue;
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      swift_release();
      swift_bridgeObjectRelease();
      v59 = sub_1D5E0C48C;
LABEL_45:
      sub_1D5E1E258((uint64_t)v59);
      return sub_1D5E1E258((uint64_t)v9);
    }
    break;
  }
LABEL_55:
  result = sub_1D5E3795C();
  __break(1u);
  return result;
}

void sub_1D5E0C47C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_1D5E0C484(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_1D5E0C48C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_1D5E0C494(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1D5E0C49C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)(_QWORD *@<X8>);
  void (*v9)(_QWORD *@<X8>);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD *@<X8>);
  uint64_t result;
  _QWORD *v61;
  unint64_t v62;
  uint64_t *v63;
  _QWORD *v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;

  v5 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  v6 = sub_1D5D809F8(v5, a3);
  v7 = sub_1D5D9E030(v6);
  swift_release();
  if (!v7[2])
  {
    swift_release();
    v59 = 0;
    v9 = 0;
    goto LABEL_45;
  }
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v61 = v7 + 4;
  v11 = v7 + 7;
  v12 = 1;
  v64 = v7;
  v65 = v7[2];
  while (2)
  {
    v13 = &v61[2 * v10];
    v15 = *v13;
    v14 = v13[1];
    swift_bridgeObjectRetain_n();
    sub_1D5E1E258((uint64_t)v8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = (_QWORD *)*a1;
    v66 = v15;
    v67 = (_QWORD *)*a1;
    *a1 = 0x8000000000000000;
    v71 = v14;
    v19 = sub_1D5D7FFCC(v15, v14);
    v20 = v17[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v23 = v18;
    if (v17[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1D5D99148();
        v17 = v67;
      }
      goto LABEL_10;
    }
    sub_1D5D9C5EC(v22, isUniquelyReferenced_nonNull_native);
    v17 = v67;
    v24 = sub_1D5D7FFCC(v66, v71);
    if ((v23 & 1) == (v25 & 1))
    {
      v19 = v24;
LABEL_10:
      *a1 = v17;
      swift_bridgeObjectRelease();
      v26 = (_QWORD *)*a1;
      if ((v23 & 1) == 0)
      {
        v26[(v19 >> 6) + 8] |= 1 << v19;
        v27 = (uint64_t *)(v26[6] + 16 * v19);
        *v27 = v66;
        v27[1] = v71;
        *(_QWORD *)(v26[7] + 8 * v19) = 0;
        v28 = v26[2];
        v29 = v28 + 1;
        v30 = __OFADD__(v28, 1);
        swift_bridgeObjectRetain();
        if (v30)
          goto LABEL_54;
        v26[2] = v29;
      }
      swift_bridgeObjectRetain();
      v31 = v26[7];
      swift_bridgeObjectRelease();
      v32 = *(_QWORD *)(v31 + 8 * v19);
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (v33)
      {
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        break;
      }
      *(_QWORD *)(v31 + 8 * v19) = v34;
      v35 = v71;
      swift_bridgeObjectRelease();
      v36 = v65;
      if (v12 != v65)
      {
        v62 = v12;
        v63 = v11;
        do
        {
          if (v12 >= v36)
          {
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          if (v12 >= v7[2])
            goto LABEL_47;
          v38 = *(v11 - 1);
          v37 = *v11;
          v39 = v66 == v38 && v35 == v37;
          if (v39 || (sub_1D5E378FC() & 1) == 0)
          {
            v68 = v38;
            v70 = v37;
            swift_bridgeObjectRetain_n();
          }
          else
          {
            v68 = v66;
            v70 = v35;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          sub_1D5E37458();
          swift_bridgeObjectRelease();
          sub_1D5E1E258((uint64_t)v9);
          v40 = v68;
          v41 = swift_isUniquelyReferenced_nonNull_native();
          v42 = (_QWORD *)*a1;
          v69 = (_QWORD *)*a1;
          *a1 = 0x8000000000000000;
          v44 = sub_1D5D7FFCC(v40, v70);
          v45 = v42[2];
          v46 = (v43 & 1) == 0;
          v47 = v45 + v46;
          if (__OFADD__(v45, v46))
            goto LABEL_48;
          v48 = v43;
          if (v42[3] >= v47)
          {
            if ((v41 & 1) == 0)
            {
              sub_1D5D99148();
              v42 = v69;
            }
          }
          else
          {
            sub_1D5D9C5EC(v47, v41);
            v42 = v69;
            v49 = sub_1D5D7FFCC(v40, v70);
            if ((v48 & 1) != (v50 & 1))
              goto LABEL_55;
            v44 = v49;
          }
          v7 = v64;
          *a1 = v42;
          swift_bridgeObjectRelease();
          v51 = (_QWORD *)*a1;
          if ((v48 & 1) == 0)
          {
            v51[(v44 >> 6) + 8] |= 1 << v44;
            v52 = (uint64_t *)(v51[6] + 16 * v44);
            *v52 = v40;
            v52[1] = v70;
            *(_QWORD *)(v51[7] + 8 * v44) = 0;
            v53 = v51[2];
            v54 = v53 + 1;
            v55 = __OFADD__(v53, 1);
            swift_bridgeObjectRetain();
            if (v55)
              goto LABEL_50;
            v51[2] = v54;
          }
          swift_bridgeObjectRetain();
          v56 = v51[7];
          swift_bridgeObjectRelease();
          v57 = *(_QWORD *)(v56 + 8 * v44);
          v33 = __OFADD__(v57, 1);
          v58 = v57 + 1;
          if (v33)
            goto LABEL_49;
          ++v12;
          *(_QWORD *)(v56 + 8 * v44) = v58;
          swift_bridgeObjectRelease();
          v11 += 2;
          v9 = sub_1D5E0C484;
          v36 = v65;
          v35 = v71;
        }
        while (v65 != v12);
        swift_bridgeObjectRelease();
        v10 = v62;
        v12 = v62 + 1;
        v11 = v63 + 2;
        v8 = sub_1D5E0C47C;
        if (v62 < v64[2])
          continue;
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      swift_release();
      swift_bridgeObjectRelease();
      v59 = sub_1D5E0C47C;
LABEL_45:
      sub_1D5E1E258((uint64_t)v59);
      return sub_1D5E1E258((uint64_t)v9);
    }
    break;
  }
LABEL_55:
  result = sub_1D5E3795C();
  __break(1u);
  return result;
}

uint64_t sub_1D5E0C948(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  _QWORD *v39;
  double v40;
  uint64_t v41;

  v9 = *a2;
  v8 = a2[1];
  v10 = *(char **)a1;
  v11 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v11)
  {
    result = *((_QWORD *)v10 + 4);
    if (result == v9 && *((_QWORD *)v10 + 5) == v8)
      return result;
    result = sub_1D5E378FC();
    if ((result & 1) != 0)
      return result;
    if (v11 != 1)
    {
      result = *((_QWORD *)v10 + 6);
      if (result == v9 && *((_QWORD *)v10 + 7) == v8)
        return result;
      result = sub_1D5E378FC();
      if ((result & 1) != 0)
        return result;
      if (v11 != 2)
      {
        v33 = v10 + 72;
        v34 = 2;
        while (!__OFADD__(v34, 1))
        {
          result = *(v33 - 1);
          if (result == v9 && *v33 == v8)
            return result;
          v36 = v34 + 1;
          result = sub_1D5E378FC();
          if ((result & 1) != 0)
            return result;
          v33 += 2;
          ++v34;
          if (v36 == v11)
            goto LABEL_8;
        }
        __break(1u);
        goto LABEL_43;
      }
    }
  }
LABEL_8:
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_1D5D7DABC(0, v11 + 1, 1, v10);
  v15 = *((_QWORD *)v10 + 2);
  v14 = *((_QWORD *)v10 + 3);
  if (v15 >= v14 >> 1)
    v10 = sub_1D5D7DABC((char *)(v14 > 1), v15 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v15 + 1;
  v16 = &v10[16 * v15];
  *((_QWORD *)v16 + 4) = v9;
  *((_QWORD *)v16 + 5) = v8;
  *(_QWORD *)a1 = v10;
  v41 = MEMORY[0x1E0DEE9E0];
  v40 = *(double *)(a3 + 1384);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF868);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D5E38280;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v8;
  swift_bridgeObjectRetain();
  v18 = sub_1D5D81DA4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  if (*(_QWORD *)(v18 + 16))
  {
    v19 = MEMORY[0x1E0DEE9E8];
    v20 = a5;
    do
    {
      v39 = (_QWORD *)v19;
      swift_bridgeObjectRetain();
      sub_1D5E18838(v18, a4, a1, (uint64_t)&v40, (uint64_t)&v41, (uint64_t)&v39, (void (*)(uint64_t, uint64_t, double))sub_1D5E1E23C);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = v40 * v40;
      v18 = (uint64_t)v39;
    }
    while (v39[2]);
    swift_bridgeObjectRelease();
    v21 = v41;
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x1E0DEE9E0];
    v20 = a5;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v22 = sub_1D5D9E4D8(v21);
  swift_bridgeObjectRelease();
  v39 = v22;
  sub_1D5E1C578((uint64_t *)&v39, v20, (uint64_t (*)(uint64_t))sub_1D5E26064, (void (*)(_QWORD *, uint64_t))sub_1D5E19818);
  if (v5)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    result = swift_release();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = (uint64_t)v39;
  v24 = v39[2];
  if (v24)
  {
    v39 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1D5DB9AEC(0, v24, 0);
    v25 = (uint64_t)v39;
    v26 = (uint64_t *)(v23 + 40);
    do
    {
      v27 = *(v26 - 1);
      v28 = *v26;
      v39 = (_QWORD *)v25;
      v30 = *(_QWORD *)(v25 + 16);
      v29 = *(_QWORD *)(v25 + 24);
      swift_bridgeObjectRetain();
      if (v30 >= v29 >> 1)
      {
        sub_1D5DB9AEC((char *)(v29 > 1), v30 + 1, 1);
        v25 = (uint64_t)v39;
      }
      v26 += 3;
      *(_QWORD *)(v25 + 16) = v30 + 1;
      v31 = v25 + 16 * v30;
      *(_QWORD *)(v31 + 32) = v27;
      *(_QWORD *)(v31 + 40) = v28;
      --v24;
    }
    while (v24);
    swift_release();
  }
  else
  {
    swift_release();
    v25 = MEMORY[0x1E0DEE9D8];
  }
  sub_1D5D8BF20(v25);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5E0CD20(uint64_t a1, uint64_t a2, uint64_t a3, double *a4, uint64_t *a5, double a6)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  double v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  double v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v11 = *(_QWORD **)a3;
  v12 = *(_QWORD *)(*(_QWORD *)a3 + 16);
  if (!v12)
    goto LABEL_8;
  result = v11[4];
  if (result != a1 || v11[5] != a2)
  {
    result = sub_1D5E378FC();
    if ((result & 1) == 0)
    {
      if (v12 == 1)
        goto LABEL_8;
      result = v11[6];
      if (result != a1 || v11[7] != a2)
      {
        result = sub_1D5E378FC();
        if ((result & 1) == 0)
        {
          if (v12 != 2)
          {
            v23 = v11 + 9;
            v24 = 2;
            while (1)
            {
              v25 = v24 + 1;
              if (__OFADD__(v24, 1))
                break;
              result = *(v23 - 1);
              if (result == a1 && *v23 == a2)
                return result;
              result = sub_1D5E378FC();
              if ((result & 1) != 0)
                return result;
              v23 += 2;
              ++v24;
              if (v25 == v12)
                goto LABEL_8;
            }
            __break(1u);
            return result;
          }
LABEL_8:
          v15 = *a4 * a6;
          v16 = *a5;
          if (*(_QWORD *)(*a5 + 16))
          {
            swift_bridgeObjectRetain();
            v17 = sub_1D5D7FFCC(a1, a2);
            if ((v18 & 1) != 0)
            {
              v19 = *(double *)(*(_QWORD *)(v16 + 56) + 8 * v17);
              swift_bridgeObjectRelease();
              if (v19 > v15)
                v15 = v19;
              swift_bridgeObjectRetain();
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v27 = *a5;
              *a5 = 0x8000000000000000;
              sub_1D5D84094(a1, a2, isUniquelyReferenced_nonNull_native, v15);
              *a5 = v27;
              swift_bridgeObjectRelease();
              return swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRetain();
          v21 = swift_isUniquelyReferenced_nonNull_native();
          v27 = *a5;
          *a5 = 0x8000000000000000;
          sub_1D5D84094(a1, a2, v21, v15);
          *a5 = v27;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1D5D81E38(&v27, a1, a2);
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D5E0CF48(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t result;
  _QWORD *v34;
  BOOL v35;
  char isUniquelyReferenced_nonNull_native;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;

  v3 = v2;
  v6 = *v2;
  sub_1D5E379A4();
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D5E3744C();
  swift_bridgeObjectRelease();
  v9 = sub_1D5E379C8();
  v10 = -1 << *(_BYTE *)(v6 + 32);
  i = v9 & ~v10;
  v12 = v6 + 56;
  if (((*(_QWORD *)(v6 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v13 = 112 * i;
    v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 112 * i);
    v15 = *v14 == v7 && v14[1] == v8;
    if (v15 || (v40 = *(_QWORD *)(v6 + 48), (sub_1D5E378FC() & 1) != 0))
    {
LABEL_7:
      swift_bridgeObjectRelease();
      sub_1D5E17FB4(a2);
      v16 = *(_QWORD *)(*v3 + 48) + v13;
      v18 = *(_QWORD *)v16;
      v17 = *(_QWORD *)(v16 + 8);
      v19 = *(_QWORD *)(v16 + 16);
      v20 = *(_QWORD *)(v16 + 24);
      v21 = *(_QWORD *)(v16 + 32);
      v22 = *(_QWORD *)(v16 + 40);
      v23 = *(_QWORD *)(v16 + 48);
      v24 = *(_QWORD *)(v16 + 56);
      v25 = *(_BYTE *)(v16 + 64);
      v26 = *(_BYTE *)(v16 + 65);
      v27 = *(_BYTE *)(v16 + 66);
      v28 = *(_BYTE *)(v16 + 67);
      v29 = *(_QWORD *)(v16 + 72);
      v30 = *(_QWORD *)(v16 + 80);
      v31 = *(_BYTE *)(v16 + 88);
      v32 = *(_QWORD *)(v16 + 96);
      LOBYTE(v16) = *(_BYTE *)(v16 + 104);
      *(_QWORD *)a1 = v18;
      *(_QWORD *)(a1 + 8) = v17;
      *(_QWORD *)(a1 + 16) = v19;
      *(_QWORD *)(a1 + 24) = v20;
      *(_QWORD *)(a1 + 32) = v21;
      *(_QWORD *)(a1 + 40) = v22;
      *(_QWORD *)(a1 + 48) = v23;
      *(_QWORD *)(a1 + 56) = v24;
      *(_BYTE *)(a1 + 64) = v25;
      *(_BYTE *)(a1 + 65) = v26;
      *(_BYTE *)(a1 + 66) = v27;
      *(_BYTE *)(a1 + 67) = v28;
      *(_QWORD *)(a1 + 72) = v29;
      *(_QWORD *)(a1 + 80) = v30;
      *(_BYTE *)(a1 + 88) = v31;
      *(_QWORD *)(a1 + 96) = v32;
      *(_BYTE *)(a1 + 104) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D5DA2208(v29, v30);
      return 0;
    }
    for (i = (i + 1) & ~v10; ((*(_QWORD *)(v12 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & ~v10)
    {
      v13 = 112 * i;
      v34 = (_QWORD *)(v40 + 112 * i);
      v35 = *v34 == v7 && v34[1] == v8;
      if (v35 || (sub_1D5E378FC() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v41 = *v3;
  *v3 = 0x8000000000000000;
  sub_1D5DA2190(a2);
  sub_1D5E0D1E0(a2, i, isUniquelyReferenced_nonNull_native);
  *v3 = v41;
  swift_bridgeObjectRelease();
  v37 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v37;
  *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  v38 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v38;
  v39 = *(_OWORD *)(a2 + 48);
  result = 1;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v39;
  return result;
}

uint64_t sub_1D5E0D1E0(uint64_t result, unint64_t i, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_21;
  if ((a3 & 1) != 0)
  {
    sub_1D5DCB0BC();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1D5DCB720();
      goto LABEL_21;
    }
    sub_1D5DCBB3C();
  }
  v9 = *v3;
  sub_1D5E379A4();
  v10 = *(_QWORD *)v6;
  v11 = *(_QWORD *)(v6 + 8);
  swift_bridgeObjectRetain();
  sub_1D5E3744C();
  swift_bridgeObjectRelease();
  result = sub_1D5E379C8();
  v12 = -1 << *(_BYTE *)(v9 + 32);
  i = result & ~v12;
  v13 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v14 = *(_QWORD *)(v9 + 48);
    v15 = (_QWORD *)(v14 + 112 * i);
    if (*v15 == v10 && v15[1] == v11)
      goto LABEL_24;
    result = sub_1D5E378FC();
    if ((result & 1) != 0)
      goto LABEL_24;
    v17 = ~v12;
    for (i = (i + 1) & v17; ((*(_QWORD *)(v13 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v17)
    {
      v18 = (_QWORD *)(v14 + 112 * i);
      if (*v18 == v10 && v18[1] == v11)
        goto LABEL_24;
      result = sub_1D5E378FC();
      if ((result & 1) != 0)
        goto LABEL_24;
    }
  }
LABEL_21:
  v20 = *v4;
  *(_QWORD *)(*v4 + 8 * (i >> 6) + 56) |= 1 << i;
  v21 = (_OWORD *)(*(_QWORD *)(v20 + 48) + 112 * i);
  v22 = *(_OWORD *)(v6 + 16);
  *v21 = *(_OWORD *)v6;
  v21[1] = v22;
  *(_OWORD *)((char *)v21 + 89) = *(_OWORD *)(v6 + 89);
  v23 = *(_OWORD *)(v6 + 80);
  v21[4] = *(_OWORD *)(v6 + 64);
  v21[5] = v23;
  v24 = *(_OWORD *)(v6 + 48);
  v21[2] = *(_OWORD *)(v6 + 32);
  v21[3] = v24;
  v25 = *(_QWORD *)(v20 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (!v26)
  {
    *(_QWORD *)(v20 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_24:
  result = sub_1D5E37950();
  __break(1u);
  return result;
}

uint64_t sub_1D5E0D3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1D5D7FFCC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D5D97D04();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = type metadata accessor for ReadonlyAggregate(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_1D5E1E36C(v12 + *(_QWORD *)(v14 + 72) * v8, a3);
    sub_1D5E24A68(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for ReadonlyAggregate(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_1D5E0D4FC(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = v4;
  v9 = a3 & 0x101010101;
  swift_bridgeObjectRetain();
  v10 = sub_1D5D97A74(a1, a2, v9, a4);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v5;
  v16 = *v5;
  *v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D5D98B90();
    v13 = v16;
  }
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v10);
  sub_1D5E24E38(v10, v13);
  *v5 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1D5E0D5F0(char **a1, uint64_t (*a2)(_QWORD *))
{
  char *v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_1D5E26028((uint64_t)v4);
  v5 = *((_QWORD *)v4 + 2);
  v7[0] = v4 + 32;
  v7[1] = v5;
  result = a2(v7);
  *a1 = v4;
  return result;
}

uint64_t sub_1D5E0D65C(char **a1)
{
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D5E2603C((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  result = sub_1D5E0E718(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1D5E0D6C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  double v16;
  int v17;
  double *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  unint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  char v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  char v119;
  char v120;
  char v121;
  char v122;
  uint64_t v123;
  char v124;
  double *v125;
  uint64_t v126;
  uint64_t v127;

  v3 = a1[1];
  result = sub_1D5E378C0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_146;
    if (v3)
      return sub_1D5E0EE24(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v113 = result;
  v127 = v1;
  v110 = a1;
  if (v3 > 1)
  {
    v6 = v5 >> 1;
    result = sub_1D5E3753C();
    *(_QWORD *)(result + 16) = v6;
    v112 = result;
    v125 = (double *)(result + 32);
LABEL_13:
    v8 = 0;
    v9 = *a1;
    v111 = *a1 + 328;
    v109 = *a1 - 112;
    v10 = MEMORY[0x1E0DEE9D8];
    v114 = v3;
    v126 = *a1;
    while (1)
    {
      v12 = v8++;
      if (v8 >= v3)
        goto LABEL_39;
      v13 = v9 + 112 * v8;
      v14 = *(double *)(v13 + 96);
      v15 = v9 + 112 * v12;
      v16 = *(double *)(v15 + 96);
      v17 = *(unsigned __int8 *)(v15 + 104);
      if (*(_BYTE *)(v13 + 104))
        v14 = 0.0;
      if (v17)
        v16 = 0.0;
      v8 = v12 + 2;
      if (v12 + 2 >= v3)
        break;
      v18 = (double *)(v111 + 112 * v12);
      do
      {
        v19 = *(v18 - 1);
        if (*(_BYTE *)v18)
          v19 = 0.0;
        if ((*(_BYTE *)(v18 - 14) & 1) != 0)
        {
          if (v16 < v14 == v19 <= 0.0)
            goto LABEL_29;
        }
        else if (v16 < v14 == *(v18 - 15) >= v19)
        {
          goto LABEL_29;
        }
        ++v8;
        v18 += 14;
      }
      while (v3 != v8);
      v8 = v3;
      if (v16 < v14)
        goto LABEL_30;
LABEL_39:
      if (v8 < v3)
      {
        if (__OFSUB__(v8, v12))
          goto LABEL_144;
        if (v8 - v12 < v113)
        {
          v28 = v12 + v113;
          if (__OFADD__(v12, v113))
            goto LABEL_148;
          if (v28 >= v3)
            v28 = v3;
          if (v28 < v12)
          {
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
            return result;
          }
          if (v8 != v28)
          {
            v29 = v109 + 112 * v8;
            do
            {
              v30 = v12;
              v31 = v29;
              do
              {
                v32 = *(_QWORD *)(v31 + 208);
                v33 = *(_BYTE *)(v31 + 216);
                if (v33)
                  v34 = 0.0;
                else
                  v34 = *(double *)(v31 + 208);
                if ((*(_BYTE *)(v31 + 104) & 1) != 0)
                {
                  if (v34 <= 0.0)
                    break;
                }
                else if (*(double *)(v31 + 96) >= v34)
                {
                  break;
                }
                if (!v9)
                  goto LABEL_150;
                v35 = v31 + 112;
                v36 = *(_QWORD *)(v31 + 128);
                v37 = *(_QWORD *)(v31 + 168);
                v38 = *(_BYTE *)(v31 + 176);
                v39 = *(_BYTE *)(v31 + 177);
                v40 = *(_BYTE *)(v31 + 178);
                v41 = *(_BYTE *)(v31 + 179);
                result = *(unsigned __int8 *)(v31 + 200);
                v42 = *(_OWORD *)(v31 + 136);
                v43 = *(_OWORD *)(v31 + 152);
                v44 = *(_OWORD *)(v31 + 184);
                v45 = *(_OWORD *)(v31 + 80);
                v47 = *(_OWORD *)(v31 + 96);
                v46 = *(_OWORD *)(v31 + 112);
                *(_OWORD *)(v31 + 176) = *(_OWORD *)(v31 + 64);
                *(_OWORD *)(v31 + 192) = v45;
                *(_OWORD *)(v31 + 208) = v47;
                v48 = *(_OWORD *)(v31 + 16);
                *(_OWORD *)(v31 + 112) = *(_OWORD *)v31;
                *(_OWORD *)(v31 + 128) = v48;
                *(_OWORD *)v31 = v46;
                v50 = *(_OWORD *)(v31 + 32);
                v49 = *(_OWORD *)(v31 + 48);
                *(_QWORD *)(v31 + 16) = v36;
                *(_OWORD *)(v31 + 24) = v42;
                *(_OWORD *)(v31 + 40) = v43;
                *(_QWORD *)(v31 + 56) = v37;
                *(_BYTE *)(v31 + 64) = v38;
                *(_BYTE *)(v31 + 65) = v39;
                *(_BYTE *)(v31 + 66) = v40;
                *(_BYTE *)(v31 + 67) = v41;
                *(_OWORD *)(v31 + 72) = v44;
                *(_BYTE *)(v31 + 88) = result;
                *(_QWORD *)(v31 + 96) = v32;
                *(_BYTE *)(v31 + 104) = v33;
                v31 -= 112;
                ++v30;
                *(_OWORD *)(v35 + 32) = v50;
                *(_OWORD *)(v35 + 48) = v49;
              }
              while (v8 != v30);
              ++v8;
              v29 += 112;
            }
            while (v8 != v28);
            v8 = v28;
          }
        }
      }
      if (v8 < v12)
        goto LABEL_139;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1D5E258D0(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
        v10 = result;
      }
      v52 = *(_QWORD *)(v10 + 16);
      v51 = *(_QWORD *)(v10 + 24);
      v11 = v52 + 1;
      v9 = v126;
      if (v52 >= v51 >> 1)
      {
        result = (uint64_t)sub_1D5E258D0((char *)(v51 > 1), v52 + 1, 1, (char *)v10);
        v9 = v126;
        v10 = result;
      }
      *(_QWORD *)(v10 + 16) = v11;
      v53 = v10 + 32;
      v54 = (uint64_t *)(v10 + 32 + 16 * v52);
      *v54 = v12;
      v54[1] = v8;
      if (v52)
      {
        while (1)
        {
          v55 = v11 - 1;
          if (v11 >= 4)
          {
            v60 = v53 + 16 * v11;
            v61 = *(_QWORD *)(v60 - 64);
            v62 = *(_QWORD *)(v60 - 56);
            v66 = __OFSUB__(v62, v61);
            v63 = v62 - v61;
            if (v66)
              goto LABEL_128;
            v65 = *(_QWORD *)(v60 - 48);
            v64 = *(_QWORD *)(v60 - 40);
            v66 = __OFSUB__(v64, v65);
            v58 = v64 - v65;
            v59 = v66;
            if (v66)
              goto LABEL_129;
            v67 = v11 - 2;
            v68 = (uint64_t *)(v53 + 16 * (v11 - 2));
            v70 = *v68;
            v69 = v68[1];
            v66 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v66)
              goto LABEL_130;
            v66 = __OFADD__(v58, v71);
            v72 = v58 + v71;
            if (v66)
              goto LABEL_132;
            if (v72 >= v63)
            {
              v90 = (uint64_t *)(v53 + 16 * v55);
              v92 = *v90;
              v91 = v90[1];
              v66 = __OFSUB__(v91, v92);
              v93 = v91 - v92;
              if (v66)
                goto LABEL_138;
              v83 = v58 < v93;
              goto LABEL_98;
            }
          }
          else
          {
            if (v11 != 3)
            {
              v84 = *(_QWORD *)(v10 + 32);
              v85 = *(_QWORD *)(v10 + 40);
              v66 = __OFSUB__(v85, v84);
              v77 = v85 - v84;
              v78 = v66;
              goto LABEL_92;
            }
            v57 = *(_QWORD *)(v10 + 32);
            v56 = *(_QWORD *)(v10 + 40);
            v66 = __OFSUB__(v56, v57);
            v58 = v56 - v57;
            v59 = v66;
          }
          if ((v59 & 1) != 0)
            goto LABEL_131;
          v67 = v11 - 2;
          v73 = (uint64_t *)(v53 + 16 * (v11 - 2));
          v75 = *v73;
          v74 = v73[1];
          v76 = __OFSUB__(v74, v75);
          v77 = v74 - v75;
          v78 = v76;
          if (v76)
            goto LABEL_133;
          v79 = (uint64_t *)(v53 + 16 * v55);
          v81 = *v79;
          v80 = v79[1];
          v66 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          if (v66)
            goto LABEL_135;
          if (__OFADD__(v77, v82))
            goto LABEL_137;
          if (v77 + v82 >= v58)
          {
            v83 = v58 < v82;
LABEL_98:
            if (v83)
              v55 = v67;
            goto LABEL_100;
          }
LABEL_92:
          if ((v78 & 1) != 0)
            goto LABEL_134;
          v86 = (uint64_t *)(v53 + 16 * v55);
          v88 = *v86;
          v87 = v86[1];
          v66 = __OFSUB__(v87, v88);
          v89 = v87 - v88;
          if (v66)
            goto LABEL_136;
          if (v89 < v77)
            goto LABEL_15;
LABEL_100:
          v94 = v55 - 1;
          if (v55 - 1 >= v11)
          {
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
            goto LABEL_149;
          }
          if (!v9)
            goto LABEL_151;
          v95 = v10;
          v96 = (uint64_t *)(v53 + 16 * v94);
          v97 = *v96;
          v98 = (_QWORD *)(v53 + 16 * v55);
          v99 = v98[1];
          result = sub_1D5E0EF2C((double *)(v9 + 112 * *v96), (double *)(v9 + 112 * *v98), v9 + 112 * v99, v125);
          if (v127)
            goto LABEL_108;
          if (v99 < v97)
            goto LABEL_125;
          if (v55 > *(_QWORD *)(v95 + 16))
            goto LABEL_126;
          *v96 = v97;
          *(_QWORD *)(v53 + 16 * v94 + 8) = v99;
          v100 = *(_QWORD *)(v95 + 16);
          if (v55 >= v100)
            goto LABEL_127;
          v10 = v95;
          v11 = v100 - 1;
          result = (uint64_t)memmove((void *)(v53 + 16 * v55), v98 + 2, 16 * (v100 - 1 - v55));
          *(_QWORD *)(v95 + 16) = v100 - 1;
          v9 = v126;
          if (v100 <= 2)
            goto LABEL_15;
        }
      }
      v11 = 1;
LABEL_15:
      v3 = v114;
      if (v8 >= v114)
      {
        v7 = v112;
        goto LABEL_111;
      }
    }
LABEL_29:
    if (v16 >= v14)
      goto LABEL_39;
LABEL_30:
    if (v8 < v12)
      goto LABEL_147;
    if (v12 < v8)
    {
      v20 = 112 * v8;
      v21 = v8;
      v22 = v12;
      v108 = v12;
      v23 = 112 * v12;
      do
      {
        if (v22 != --v21)
        {
          if (!v9)
            goto LABEL_152;
          v118 = *(_OWORD *)(v9 + v23);
          v24 = v9 + v20;
          v25 = *(_QWORD *)(v9 + v23 + 16);
          v26 = *(_QWORD *)(v9 + v23 + 56);
          v27 = *(_BYTE *)(v9 + v23 + 64);
          v120 = *(_BYTE *)(v9 + v23 + 66);
          v121 = *(_BYTE *)(v9 + v23 + 65);
          v119 = *(_BYTE *)(v9 + v23 + 67);
          v124 = *(_BYTE *)(v9 + v23 + 88);
          v123 = *(_QWORD *)(v9 + v23 + 96);
          v122 = *(_BYTE *)(v9 + v23 + 104);
          v115 = *(_OWORD *)(v9 + v23 + 40);
          v116 = *(_OWORD *)(v9 + v23 + 24);
          v117 = *(_OWORD *)(v9 + v23 + 72);
          result = (uint64_t)memmove((void *)(v9 + v23), (const void *)(v9 + v20 - 112), 0x70uLL);
          v9 = v126;
          *(_OWORD *)(v24 - 112) = v118;
          *(_QWORD *)(v24 - 96) = v25;
          *(_OWORD *)(v24 - 88) = v116;
          *(_OWORD *)(v24 - 72) = v115;
          *(_QWORD *)(v24 - 56) = v26;
          *(_BYTE *)(v24 - 48) = v27;
          *(_BYTE *)(v24 - 47) = v121;
          *(_BYTE *)(v24 - 46) = v120;
          *(_BYTE *)(v24 - 45) = v119;
          *(_OWORD *)(v24 - 40) = v117;
          *(_BYTE *)(v24 - 24) = v124;
          *(_QWORD *)(v24 - 16) = v123;
          *(_BYTE *)(v24 - 8) = v122;
        }
        ++v22;
        v20 -= 112;
        v23 += 112;
      }
      while (v22 < v21);
      v3 = v114;
      v12 = v108;
    }
    goto LABEL_39;
  }
  v7 = MEMORY[0x1E0DEE9D8];
  v125 = (double *)(MEMORY[0x1E0DEE9D8] + 32);
  if (v3 == 1)
  {
    v112 = MEMORY[0x1E0DEE9D8];
    goto LABEL_13;
  }
  v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  v10 = MEMORY[0x1E0DEE9D8];
LABEL_111:
  result = v10;
  v112 = v7;
  if (v11 >= 2)
  {
    v101 = *v110;
    do
    {
      v102 = v11 - 2;
      if (v11 < 2)
        goto LABEL_140;
      if (!v101)
        goto LABEL_153;
      v103 = result;
      v104 = *(_QWORD *)(result + 32 + 16 * v102);
      v105 = *(_QWORD *)(result + 32 + 16 * (v11 - 1) + 8);
      result = sub_1D5E0EF2C((double *)(v101 + 112 * v104), (double *)(v101 + 112 * *(_QWORD *)(result + 32 + 16 * (v11 - 1))), v101 + 112 * v105, v125);
      if (v127)
        break;
      if (v105 < v104)
        goto LABEL_141;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1D5E259C8(v103);
        v103 = result;
      }
      if (v102 >= *(_QWORD *)(v103 + 16))
        goto LABEL_142;
      v106 = (_QWORD *)(v103 + 32 + 16 * v102);
      *v106 = v104;
      v106[1] = v105;
      v107 = *(_QWORD *)(v103 + 16);
      if (v11 > v107)
        goto LABEL_143;
      memmove((void *)(v103 + 32 + 16 * (v11 - 1)), (const void *)(v103 + 32 + 16 * v11), 16 * (v107 - v11));
      result = v103;
      *(_QWORD *)(v103 + 16) = v107 - 1;
      v11 = v107 - 1;
    }
    while (v107 > 2);
  }
LABEL_108:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v112 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5E0DEBC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  char v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  char v106;
  char v107;
  uint64_t v108;
  char v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  unint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  char v137;
  char v138;
  char v139;
  char v140;
  uint64_t v141;
  char v142;
  double *v143;
  uint64_t v144;
  uint64_t v145;

  v2 = a1;
  v3 = a1[1];
  result = sub_1D5E378C0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_140;
    if ((unint64_t)v3 >= 2)
    {
      v95 = *v2;
      v96 = -1;
      v97 = 1;
      v98 = *v2;
      do
      {
        v99 = v96;
        v100 = v98;
        do
        {
          v101 = *(double *)(v100 + 168);
          if (*(double *)(v100 + 56) >= v101)
            break;
          if (!v95)
            goto LABEL_144;
          v102 = v100 + 112;
          v103 = *(_QWORD *)(v100 + 128);
          v104 = *(_BYTE *)(v100 + 176);
          v105 = *(_BYTE *)(v100 + 177);
          v106 = *(_BYTE *)(v100 + 178);
          result = *(unsigned __int8 *)(v100 + 179);
          v107 = *(_BYTE *)(v100 + 200);
          v108 = *(_QWORD *)(v100 + 208);
          v109 = *(_BYTE *)(v100 + 216);
          v110 = *(_OWORD *)(v100 + 136);
          v111 = *(_OWORD *)(v100 + 152);
          v112 = *(_OWORD *)(v100 + 184);
          v113 = *(_OWORD *)(v100 + 80);
          v115 = *(_OWORD *)(v100 + 96);
          v114 = *(_OWORD *)(v100 + 112);
          *(_OWORD *)(v100 + 176) = *(_OWORD *)(v100 + 64);
          *(_OWORD *)(v100 + 192) = v113;
          *(_OWORD *)(v100 + 208) = v115;
          v116 = *(_OWORD *)(v100 + 16);
          *(_OWORD *)(v100 + 112) = *(_OWORD *)v100;
          *(_OWORD *)(v100 + 128) = v116;
          *(_OWORD *)v100 = v114;
          v118 = *(_OWORD *)(v100 + 32);
          v117 = *(_OWORD *)(v100 + 48);
          *(_QWORD *)(v100 + 16) = v103;
          *(_OWORD *)(v100 + 24) = v110;
          *(_OWORD *)(v100 + 40) = v111;
          *(double *)(v100 + 56) = v101;
          *(_BYTE *)(v100 + 64) = v104;
          *(_BYTE *)(v100 + 65) = v105;
          *(_BYTE *)(v100 + 66) = v106;
          *(_BYTE *)(v100 + 67) = result;
          *(_OWORD *)(v100 + 72) = v112;
          *(_BYTE *)(v100 + 88) = v107;
          *(_QWORD *)(v100 + 96) = v108;
          *(_BYTE *)(v100 + 104) = v109;
          v100 -= 112;
          *(_OWORD *)(v102 + 32) = v118;
          *(_OWORD *)(v102 + 48) = v117;
        }
        while (!__CFADD__(v99++, 1));
        ++v97;
        v98 += 112;
        --v96;
      }
      while (v97 != v3);
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_139;
    v131 = result;
    v145 = v1;
    if (v3 > 1)
    {
      v6 = v5 >> 1;
      result = sub_1D5E3753C();
      *(_QWORD *)(result + 16) = v6;
      v130 = result;
      v143 = (double *)(result + 32);
LABEL_13:
      v8 = 0;
      v128 = v2;
      v9 = *v2;
      v129 = v9 + 56;
      v144 = MEMORY[0x1E0DEE9D8];
      v132 = v3;
      while (1)
      {
        v11 = v8++;
        if (v8 < v3)
        {
          v12 = *(double *)(v129 + 112 * v8);
          v13 = *(double *)(v129 + 112 * v11);
          v8 = v11 + 2;
          if (v11 + 2 < v3)
          {
            v14 = (double *)(v9 + 168 + 112 * v11);
            while (v13 < v12 != *v14 >= v14[14])
            {
              ++v8;
              v14 += 14;
              if (v3 == v8)
              {
                v8 = v3;
                break;
              }
            }
          }
          if (v13 < v12)
          {
            if (v8 < v11)
              goto LABEL_141;
            if (v11 < v8)
            {
              v15 = 112 * v8;
              v16 = v8;
              v17 = v11;
              v127 = v11;
              v18 = 112 * v11;
              do
              {
                if (v17 != --v16)
                {
                  if (!v9)
                    goto LABEL_147;
                  v136 = *(_OWORD *)(v9 + v18);
                  v19 = v9 + v15;
                  v20 = *(_QWORD *)(v9 + v18 + 16);
                  v21 = *(_QWORD *)(v9 + v18 + 56);
                  v22 = *(_BYTE *)(v9 + v18 + 64);
                  v138 = *(_BYTE *)(v9 + v18 + 66);
                  v139 = *(_BYTE *)(v9 + v18 + 65);
                  v137 = *(_BYTE *)(v9 + v18 + 67);
                  v142 = *(_BYTE *)(v9 + v18 + 88);
                  v141 = *(_QWORD *)(v9 + v18 + 96);
                  v140 = *(_BYTE *)(v9 + v18 + 104);
                  v133 = *(_OWORD *)(v9 + v18 + 40);
                  v134 = *(_OWORD *)(v9 + v18 + 24);
                  v135 = *(_OWORD *)(v9 + v18 + 72);
                  result = (uint64_t)memmove((void *)(v9 + v18), (const void *)(v9 + v15 - 112), 0x70uLL);
                  *(_OWORD *)(v19 - 112) = v136;
                  *(_QWORD *)(v19 - 96) = v20;
                  *(_OWORD *)(v19 - 88) = v134;
                  *(_OWORD *)(v19 - 72) = v133;
                  *(_QWORD *)(v19 - 56) = v21;
                  *(_BYTE *)(v19 - 48) = v22;
                  *(_BYTE *)(v19 - 47) = v139;
                  *(_BYTE *)(v19 - 46) = v138;
                  *(_BYTE *)(v19 - 45) = v137;
                  *(_OWORD *)(v19 - 40) = v135;
                  *(_BYTE *)(v19 - 24) = v142;
                  *(_QWORD *)(v19 - 16) = v141;
                  *(_BYTE *)(v19 - 8) = v140;
                }
                ++v17;
                v15 -= 112;
                v18 += 112;
              }
              while (v17 < v16);
              v3 = v132;
              v11 = v127;
            }
          }
        }
        if (v8 >= v3)
          goto LABEL_39;
        if (__OFSUB__(v8, v11))
          goto LABEL_138;
        if (v8 - v11 >= v131)
          goto LABEL_39;
        v23 = v11 + v131;
        if (__OFADD__(v11, v131))
          goto LABEL_142;
        if (v23 >= v3)
          v23 = v3;
        if (v23 < v11)
        {
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          return result;
        }
        if (v8 == v23)
        {
LABEL_39:
          v24 = v144;
          if (v8 < v11)
            goto LABEL_133;
        }
        else
        {
          v74 = v9 - 112 + 112 * v8;
          v24 = v144;
          do
          {
            v75 = v11;
            v76 = v74;
            do
            {
              v77 = *(double *)(v76 + 168);
              if (*(double *)(v76 + 56) >= v77)
                break;
              if (!v9)
                goto LABEL_145;
              v78 = v76 + 112;
              v79 = *(_QWORD *)(v76 + 128);
              v80 = *(_BYTE *)(v76 + 176);
              v81 = *(_BYTE *)(v76 + 177);
              v82 = *(_BYTE *)(v76 + 178);
              v83 = *(_BYTE *)(v76 + 179);
              v84 = *(_BYTE *)(v76 + 200);
              result = *(_QWORD *)(v76 + 208);
              v85 = *(_BYTE *)(v76 + 216);
              v86 = *(_OWORD *)(v76 + 136);
              v87 = *(_OWORD *)(v76 + 152);
              v88 = *(_OWORD *)(v76 + 184);
              v89 = *(_OWORD *)(v76 + 80);
              v91 = *(_OWORD *)(v76 + 96);
              v90 = *(_OWORD *)(v76 + 112);
              *(_OWORD *)(v76 + 176) = *(_OWORD *)(v76 + 64);
              *(_OWORD *)(v76 + 192) = v89;
              *(_OWORD *)(v76 + 208) = v91;
              v92 = *(_OWORD *)(v76 + 16);
              *(_OWORD *)(v76 + 112) = *(_OWORD *)v76;
              *(_OWORD *)(v76 + 128) = v92;
              *(_OWORD *)v76 = v90;
              v94 = *(_OWORD *)(v76 + 32);
              v93 = *(_OWORD *)(v76 + 48);
              *(_QWORD *)(v76 + 16) = v79;
              *(_OWORD *)(v76 + 24) = v86;
              *(_OWORD *)(v76 + 40) = v87;
              *(double *)(v76 + 56) = v77;
              *(_BYTE *)(v76 + 64) = v80;
              *(_BYTE *)(v76 + 65) = v81;
              *(_BYTE *)(v76 + 66) = v82;
              *(_BYTE *)(v76 + 67) = v83;
              *(_OWORD *)(v76 + 72) = v88;
              *(_BYTE *)(v76 + 88) = v84;
              *(_QWORD *)(v76 + 96) = result;
              *(_BYTE *)(v76 + 104) = v85;
              v76 -= 112;
              ++v75;
              *(_OWORD *)(v78 + 32) = v94;
              *(_OWORD *)(v78 + 48) = v93;
            }
            while (v8 != v75);
            ++v8;
            v74 += 112;
          }
          while (v8 != v23);
          v8 = v23;
          if (v23 < v11)
            goto LABEL_133;
        }
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1D5E258D0(0, *(_QWORD *)(v24 + 16) + 1, 1, (char *)v24);
          v24 = result;
        }
        v26 = *(_QWORD *)(v24 + 16);
        v25 = *(_QWORD *)(v24 + 24);
        v10 = v26 + 1;
        if (v26 >= v25 >> 1)
        {
          result = (uint64_t)sub_1D5E258D0((char *)(v25 > 1), v26 + 1, 1, (char *)v24);
          v24 = result;
        }
        *(_QWORD *)(v24 + 16) = v10;
        v27 = v24 + 32;
        v28 = (uint64_t *)(v24 + 32 + 16 * v26);
        *v28 = v11;
        v28[1] = v8;
        v144 = v24;
        if (v26)
        {
          while (1)
          {
            v29 = v10 - 1;
            if (v10 >= 4)
            {
              v34 = v27 + 16 * v10;
              v35 = *(_QWORD *)(v34 - 64);
              v36 = *(_QWORD *)(v34 - 56);
              v40 = __OFSUB__(v36, v35);
              v37 = v36 - v35;
              if (v40)
                goto LABEL_122;
              v39 = *(_QWORD *)(v34 - 48);
              v38 = *(_QWORD *)(v34 - 40);
              v40 = __OFSUB__(v38, v39);
              v32 = v38 - v39;
              v33 = v40;
              if (v40)
                goto LABEL_123;
              v41 = v10 - 2;
              v42 = (uint64_t *)(v27 + 16 * (v10 - 2));
              v44 = *v42;
              v43 = v42[1];
              v40 = __OFSUB__(v43, v44);
              v45 = v43 - v44;
              if (v40)
                goto LABEL_124;
              v40 = __OFADD__(v32, v45);
              v46 = v32 + v45;
              if (v40)
                goto LABEL_126;
              if (v46 >= v37)
              {
                v64 = (uint64_t *)(v27 + 16 * v29);
                v66 = *v64;
                v65 = v64[1];
                v40 = __OFSUB__(v65, v66);
                v67 = v65 - v66;
                if (v40)
                  goto LABEL_132;
                v57 = v32 < v67;
                goto LABEL_76;
              }
            }
            else
            {
              if (v10 != 3)
              {
                v58 = *(_QWORD *)(v24 + 32);
                v59 = *(_QWORD *)(v24 + 40);
                v40 = __OFSUB__(v59, v58);
                v51 = v59 - v58;
                v52 = v40;
                goto LABEL_70;
              }
              v31 = *(_QWORD *)(v24 + 32);
              v30 = *(_QWORD *)(v24 + 40);
              v40 = __OFSUB__(v30, v31);
              v32 = v30 - v31;
              v33 = v40;
            }
            if ((v33 & 1) != 0)
              goto LABEL_125;
            v41 = v10 - 2;
            v47 = (uint64_t *)(v27 + 16 * (v10 - 2));
            v49 = *v47;
            v48 = v47[1];
            v50 = __OFSUB__(v48, v49);
            v51 = v48 - v49;
            v52 = v50;
            if (v50)
              goto LABEL_127;
            v53 = (uint64_t *)(v27 + 16 * v29);
            v55 = *v53;
            v54 = v53[1];
            v40 = __OFSUB__(v54, v55);
            v56 = v54 - v55;
            if (v40)
              goto LABEL_129;
            if (__OFADD__(v51, v56))
              goto LABEL_131;
            if (v51 + v56 >= v32)
            {
              v57 = v32 < v56;
LABEL_76:
              if (v57)
                v29 = v41;
              goto LABEL_78;
            }
LABEL_70:
            if ((v52 & 1) != 0)
              goto LABEL_128;
            v60 = (uint64_t *)(v27 + 16 * v29);
            v62 = *v60;
            v61 = v60[1];
            v40 = __OFSUB__(v61, v62);
            v63 = v61 - v62;
            if (v40)
              goto LABEL_130;
            if (v63 < v51)
              goto LABEL_15;
LABEL_78:
            v68 = v29 - 1;
            if (v29 - 1 >= v10)
            {
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
              goto LABEL_143;
            }
            if (!v9)
              goto LABEL_146;
            v69 = (uint64_t *)(v27 + 16 * v68);
            v70 = *v69;
            v71 = (_QWORD *)(v27 + 16 * v29);
            v72 = v71[1];
            result = sub_1D5E0F1BC((double *)(v9 + 112 * *v69), (double *)(v9 + 112 * *v71), v9 + 112 * v72, v143);
            if (v145)
              goto LABEL_95;
            if (v72 < v70)
              goto LABEL_119;
            if (v29 > *(_QWORD *)(v144 + 16))
              goto LABEL_120;
            *v69 = v70;
            *(_QWORD *)(v27 + 16 * v68 + 8) = v72;
            v73 = *(_QWORD *)(v144 + 16);
            if (v29 >= v73)
              goto LABEL_121;
            v24 = v144;
            v10 = v73 - 1;
            result = (uint64_t)memmove((void *)(v27 + 16 * v29), v71 + 2, 16 * (v73 - 1 - v29));
            *(_QWORD *)(v144 + 16) = v73 - 1;
            if (v73 <= 2)
              goto LABEL_15;
          }
        }
        v10 = 1;
LABEL_15:
        v3 = v132;
        if (v8 >= v132)
        {
          v7 = v130;
          result = v144;
          v2 = v128;
          goto LABEL_105;
        }
      }
    }
    v7 = MEMORY[0x1E0DEE9D8];
    v143 = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 == 1)
    {
      v130 = MEMORY[0x1E0DEE9D8];
      goto LABEL_13;
    }
    v10 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    result = MEMORY[0x1E0DEE9D8];
LABEL_105:
    v130 = v7;
    if (v10 >= 2)
    {
      v120 = *v2;
      do
      {
        v121 = v10 - 2;
        if (v10 < 2)
          goto LABEL_134;
        if (!v120)
          goto LABEL_148;
        v122 = result;
        v123 = *(_QWORD *)(result + 32 + 16 * v121);
        v124 = *(_QWORD *)(result + 32 + 16 * (v10 - 1) + 8);
        result = sub_1D5E0F1BC((double *)(v120 + 112 * v123), (double *)(v120 + 112 * *(_QWORD *)(result + 32 + 16 * (v10 - 1))), v120 + 112 * v124, v143);
        if (v145)
          break;
        if (v124 < v123)
          goto LABEL_135;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1D5E259C8(v122);
          v122 = result;
        }
        if (v121 >= *(_QWORD *)(v122 + 16))
          goto LABEL_136;
        v125 = (_QWORD *)(v122 + 32 + 16 * v121);
        *v125 = v123;
        v125[1] = v124;
        v126 = *(_QWORD *)(v122 + 16);
        if (v10 > v126)
          goto LABEL_137;
        memmove((void *)(v122 + 32 + 16 * (v10 - 1)), (const void *)(v122 + 32 + 16 * v10), 16 * (v126 - v10));
        result = v122;
        *(_QWORD *)(v122 + 16) = v126 - 1;
        v10 = v126 - 1;
      }
      while (v126 > 2);
    }
LABEL_95:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v130 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D5E0E718(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  unint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  char v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t i;
  double v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  double v107;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  double *v123;
  uint64_t v124;

  v3 = a1[1];
  result = sub_1D5E378C0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_138;
    if ((unint64_t)v3 >= 2)
    {
      v95 = *a1;
      v96 = *a1 + 32;
      v97 = -1;
      for (i = 1; i != v3; ++i)
      {
        v99 = *(double *)(v95 + 40 * i + 32);
        v100 = v97;
        v101 = v96;
        do
        {
          if (*(double *)v101 >= v99)
            break;
          if (!v95)
            goto LABEL_142;
          v102 = v101 + 8;
          v103 = *(_QWORD *)(v101 + 8);
          v104 = *(_QWORD *)(v101 + 16);
          result = *(unsigned __int8 *)(v101 + 24);
          v105 = *(_QWORD *)(v101 + 32);
          v106 = *(_OWORD *)(v101 - 16);
          *(_OWORD *)(v101 + 8) = *(_OWORD *)(v101 - 32);
          *(_OWORD *)(v101 + 24) = v106;
          v107 = *(double *)v101;
          *(_QWORD *)(v101 - 32) = v103;
          *(_QWORD *)(v101 - 24) = v104;
          *(_BYTE *)(v101 - 16) = result;
          *(_QWORD *)(v101 - 8) = v105;
          *(double *)v101 = v99;
          v101 -= 40;
          *(double *)(v102 + 32) = v107;
        }
        while (!__CFADD__(v100++, 1));
        v96 += 40;
        --v97;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_137;
    v6 = result;
    v124 = v1;
    v117 = a1;
    if (v3 > 1)
    {
      v7 = v5 >> 1;
      v8 = sub_1D5E3753C();
      *(_QWORD *)(v8 + 16) = v7;
      v119 = v8;
      v123 = (double *)(v8 + 32);
LABEL_13:
      v10 = 0;
      v11 = *a1;
      v118 = *a1 + 112;
      v116 = *a1 + 24;
      v12 = MEMORY[0x1E0DEE9D8];
      result = 40;
      v120 = v6;
      v121 = v3;
      v122 = v11;
      while (1)
      {
        v14 = v10++;
        if (v10 < v3)
        {
          v15 = *(double *)(v11 + 40 * v10 + 32);
          v16 = *(double *)(v11 + 40 * v14 + 32);
          v10 = v14 + 2;
          if (v14 + 2 < v3)
          {
            v17 = (double *)(v118 + 40 * v14);
            v18 = v15;
            while (1)
            {
              v19 = v18;
              v18 = *v17;
              if (v16 < v15 == v19 >= *v17)
                break;
              ++v10;
              v17 += 5;
              if (v3 == v10)
              {
                v10 = v3;
                break;
              }
            }
          }
          if (v16 < v15)
          {
            if (v10 < v14)
              goto LABEL_139;
            if (v14 < v10)
            {
              v20 = 40 * v10;
              v21 = 40 * v14;
              v22 = v10;
              v23 = v14;
              do
              {
                if (v23 != --v22)
                {
                  if (!v11)
                    goto LABEL_145;
                  v24 = v11 + v21;
                  v25 = v11 + v20;
                  v26 = *(_QWORD *)(v11 + v21);
                  v27 = *(_QWORD *)(v11 + v21 + 8);
                  v28 = *(_BYTE *)(v11 + v21 + 16);
                  v29 = *(_QWORD *)(v11 + v21 + 24);
                  v30 = *(_QWORD *)(v11 + v21 + 32);
                  v31 = *(_QWORD *)(v11 + v20 - 8);
                  v32 = *(_OWORD *)(v11 + v20 - 24);
                  *(_OWORD *)v24 = *(_OWORD *)(v11 + v20 - 40);
                  *(_OWORD *)(v24 + 16) = v32;
                  *(_QWORD *)(v24 + 32) = v31;
                  *(_QWORD *)(v25 - 40) = v26;
                  *(_QWORD *)(v25 - 32) = v27;
                  *(_BYTE *)(v25 - 24) = v28;
                  *(_QWORD *)(v25 - 16) = v29;
                  *(_QWORD *)(v25 - 8) = v30;
                }
                ++v23;
                v20 -= 40;
                v21 += 40;
              }
              while (v23 < v22);
            }
          }
        }
        if (v10 < v3)
        {
          if (__OFSUB__(v10, v14))
            goto LABEL_136;
          if (v10 - v14 < v6)
          {
            v33 = v14 + v6;
            if (__OFADD__(v14, v6))
              goto LABEL_140;
            if (v33 >= v3)
              v33 = v3;
            if (v33 < v14)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v10 != v33)
            {
              v34 = v116 + 40 * v10;
              do
              {
                v35 = *(double *)(v11 + 40 * v10 + 32);
                v36 = v14;
                v37 = v34;
                do
                {
                  if (*(double *)(v37 - 32) >= v35)
                    break;
                  if (!v11)
                    goto LABEL_143;
                  v38 = v37 - 24;
                  v39 = *(_QWORD *)(v37 - 32);
                  v41 = *(_OWORD *)(v37 - 64);
                  v40 = *(_OWORD *)(v37 - 48);
                  *(_QWORD *)(v37 - 40) = *(_QWORD *)v37;
                  v37 -= 40;
                  v42 = *(_QWORD *)(v37 + 16);
                  v43 = *(_QWORD *)(v37 + 24);
                  v44 = *(_BYTE *)(v37 + 32);
                  *(_OWORD *)v38 = v41;
                  *(_OWORD *)(v38 + 16) = v40;
                  *(_QWORD *)(v38 + 32) = v39;
                  *(_QWORD *)(v37 - 24) = v42;
                  *(_QWORD *)(v37 - 16) = v43;
                  *(_BYTE *)(v37 - 8) = v44;
                  *(double *)(v37 + 8) = v35;
                  ++v36;
                }
                while (v10 != v36);
                ++v10;
                v34 += 40;
              }
              while (v10 != v33);
              v10 = v33;
            }
          }
        }
        if (v10 < v14)
          goto LABEL_131;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1D5E258D0(0, *(_QWORD *)(v12 + 16) + 1, 1, (char *)v12);
          v12 = result;
        }
        v46 = *(_QWORD *)(v12 + 16);
        v45 = *(_QWORD *)(v12 + 24);
        v13 = v46 + 1;
        v11 = v122;
        if (v46 >= v45 >> 1)
        {
          result = (uint64_t)sub_1D5E258D0((char *)(v45 > 1), v46 + 1, 1, (char *)v12);
          v11 = v122;
          v12 = result;
        }
        *(_QWORD *)(v12 + 16) = v13;
        v47 = v12 + 32;
        v48 = (uint64_t *)(v12 + 32 + 16 * v46);
        *v48 = v14;
        v48[1] = v10;
        if (v46)
        {
          while (1)
          {
            v49 = v13 - 1;
            if (v13 >= 4)
            {
              v54 = v47 + 16 * v13;
              v55 = *(_QWORD *)(v54 - 64);
              v56 = *(_QWORD *)(v54 - 56);
              v60 = __OFSUB__(v56, v55);
              v57 = v56 - v55;
              if (v60)
                goto LABEL_120;
              v59 = *(_QWORD *)(v54 - 48);
              v58 = *(_QWORD *)(v54 - 40);
              v60 = __OFSUB__(v58, v59);
              v52 = v58 - v59;
              v53 = v60;
              if (v60)
                goto LABEL_121;
              v61 = v13 - 2;
              v62 = (uint64_t *)(v47 + 16 * (v13 - 2));
              v64 = *v62;
              v63 = v62[1];
              v60 = __OFSUB__(v63, v64);
              v65 = v63 - v64;
              if (v60)
                goto LABEL_122;
              v60 = __OFADD__(v52, v65);
              v66 = v52 + v65;
              if (v60)
                goto LABEL_124;
              if (v66 >= v57)
              {
                v84 = (uint64_t *)(v47 + 16 * v49);
                v86 = *v84;
                v85 = v84[1];
                v60 = __OFSUB__(v85, v86);
                v87 = v85 - v86;
                if (v60)
                  goto LABEL_130;
                v77 = v52 < v87;
                goto LABEL_83;
              }
            }
            else
            {
              if (v13 != 3)
              {
                v78 = *(_QWORD *)(v12 + 32);
                v79 = *(_QWORD *)(v12 + 40);
                v60 = __OFSUB__(v79, v78);
                v71 = v79 - v78;
                v72 = v60;
                goto LABEL_77;
              }
              v51 = *(_QWORD *)(v12 + 32);
              v50 = *(_QWORD *)(v12 + 40);
              v60 = __OFSUB__(v50, v51);
              v52 = v50 - v51;
              v53 = v60;
            }
            if ((v53 & 1) != 0)
              goto LABEL_123;
            v61 = v13 - 2;
            v67 = (uint64_t *)(v47 + 16 * (v13 - 2));
            v69 = *v67;
            v68 = v67[1];
            v70 = __OFSUB__(v68, v69);
            v71 = v68 - v69;
            v72 = v70;
            if (v70)
              goto LABEL_125;
            v73 = (uint64_t *)(v47 + 16 * v49);
            v75 = *v73;
            v74 = v73[1];
            v60 = __OFSUB__(v74, v75);
            v76 = v74 - v75;
            if (v60)
              goto LABEL_127;
            if (__OFADD__(v71, v76))
              goto LABEL_129;
            if (v71 + v76 >= v52)
            {
              v77 = v52 < v76;
LABEL_83:
              if (v77)
                v49 = v61;
              goto LABEL_85;
            }
LABEL_77:
            if ((v72 & 1) != 0)
              goto LABEL_126;
            v80 = (uint64_t *)(v47 + 16 * v49);
            v82 = *v80;
            v81 = v80[1];
            v60 = __OFSUB__(v81, v82);
            v83 = v81 - v82;
            if (v60)
              goto LABEL_128;
            if (v83 < v71)
              goto LABEL_15;
LABEL_85:
            v88 = v49 - 1;
            if (v49 - 1 >= v13)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v11)
              goto LABEL_144;
            v89 = v12;
            v90 = (uint64_t *)(v47 + 16 * v88);
            v91 = *v90;
            v92 = (_QWORD *)(v47 + 16 * v49);
            v93 = v92[1];
            result = sub_1D5E0F404((double *)(v11 + 40 * *v90), (double *)(v11 + 40 * *v92), v11 + 40 * v93, v123);
            if (v124)
              goto LABEL_93;
            if (v93 < v91)
              goto LABEL_117;
            if (v49 > *(_QWORD *)(v89 + 16))
              goto LABEL_118;
            *v90 = v91;
            *(_QWORD *)(v47 + 16 * v88 + 8) = v93;
            v94 = *(_QWORD *)(v89 + 16);
            if (v49 >= v94)
              goto LABEL_119;
            v12 = v89;
            v13 = v94 - 1;
            result = (uint64_t)memmove((void *)(v47 + 16 * v49), v92 + 2, 16 * (v94 - 1 - v49));
            *(_QWORD *)(v89 + 16) = v94 - 1;
            v11 = v122;
            if (v94 <= 2)
              goto LABEL_15;
          }
        }
        v13 = 1;
LABEL_15:
        v6 = v120;
        v3 = v121;
        result = 40;
        if (v10 >= v121)
        {
          v9 = v119;
          goto LABEL_103;
        }
      }
    }
    v9 = MEMORY[0x1E0DEE9D8];
    v123 = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 == 1)
    {
      v119 = MEMORY[0x1E0DEE9D8];
      goto LABEL_13;
    }
    v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v12 = MEMORY[0x1E0DEE9D8];
LABEL_103:
    result = v12;
    v119 = v9;
    if (v13 >= 2)
    {
      v109 = *v117;
      do
      {
        v110 = v13 - 2;
        if (v13 < 2)
          goto LABEL_132;
        if (!v109)
          goto LABEL_146;
        v111 = result;
        v112 = *(_QWORD *)(result + 32 + 16 * v110);
        v113 = *(_QWORD *)(result + 32 + 16 * (v13 - 1) + 8);
        result = sub_1D5E0F404((double *)(v109 + 40 * v112), (double *)(v109 + 40 * *(_QWORD *)(result + 32 + 16 * (v13 - 1))), v109 + 40 * v113, v123);
        if (v124)
          break;
        if (v113 < v112)
          goto LABEL_133;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1D5E259C8(v111);
          v111 = result;
        }
        if (v110 >= *(_QWORD *)(v111 + 16))
          goto LABEL_134;
        v114 = (_QWORD *)(v111 + 32 + 16 * v110);
        *v114 = v112;
        v114[1] = v113;
        v115 = *(_QWORD *)(v111 + 16);
        if (v13 > v115)
          goto LABEL_135;
        memmove((void *)(v111 + 32 + 16 * (v13 - 1)), (const void *)(v111 + 32 + 16 * v13), 16 * (v115 - v13));
        result = v111;
        *(_QWORD *)(v111 + 16) = v115 - 1;
        v13 = v115 - 1;
      }
      while (v115 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v119 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D5E0EE24(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 112 * a3 - 112;
LABEL_5:
    v6 = result;
    v7 = v5;
    while (1)
    {
      v8 = *(_QWORD *)(v7 + 208);
      v9 = *(_BYTE *)(v7 + 216);
      v10 = v9 ? 0.0 : *(double *)(v7 + 208);
      if ((*(_BYTE *)(v7 + 104) & 1) != 0)
      {
        if (v10 <= 0.0)
          goto LABEL_4;
      }
      else if (*(double *)(v7 + 96) >= v10)
      {
        goto LABEL_4;
      }
      if (!v4)
        break;
      v11 = v7 + 112;
      v12 = *(_QWORD *)(v7 + 128);
      v13 = *(_QWORD *)(v7 + 168);
      v14 = *(_BYTE *)(v7 + 176);
      v15 = *(_BYTE *)(v7 + 177);
      v16 = *(_BYTE *)(v7 + 178);
      v17 = *(_BYTE *)(v7 + 179);
      v18 = *(_BYTE *)(v7 + 200);
      v19 = *(_OWORD *)(v7 + 136);
      v20 = *(_OWORD *)(v7 + 152);
      v21 = *(_OWORD *)(v7 + 184);
      v22 = *(_OWORD *)(v7 + 80);
      v24 = *(_OWORD *)(v7 + 96);
      v23 = *(_OWORD *)(v7 + 112);
      *(_OWORD *)(v7 + 176) = *(_OWORD *)(v7 + 64);
      *(_OWORD *)(v7 + 192) = v22;
      *(_OWORD *)(v7 + 208) = v24;
      v25 = *(_OWORD *)(v7 + 16);
      *(_OWORD *)(v7 + 112) = *(_OWORD *)v7;
      *(_OWORD *)(v7 + 128) = v25;
      *(_OWORD *)v7 = v23;
      v27 = *(_OWORD *)(v7 + 32);
      v26 = *(_OWORD *)(v7 + 48);
      *(_QWORD *)(v7 + 16) = v12;
      *(_OWORD *)(v7 + 24) = v19;
      *(_OWORD *)(v7 + 40) = v20;
      *(_QWORD *)(v7 + 56) = v13;
      *(_BYTE *)(v7 + 64) = v14;
      *(_BYTE *)(v7 + 65) = v15;
      *(_BYTE *)(v7 + 66) = v16;
      *(_BYTE *)(v7 + 67) = v17;
      *(_OWORD *)(v7 + 72) = v21;
      *(_BYTE *)(v7 + 88) = v18;
      *(_QWORD *)(v7 + 96) = v8;
      *(_BYTE *)(v7 + 104) = v9;
      v7 -= 112;
      ++v6;
      *(_OWORD *)(v11 + 32) = v27;
      *(_OWORD *)(v11 + 48) = v26;
      if (a3 == v6)
      {
LABEL_4:
        ++a3;
        v5 += 112;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D5E0EF2C(double *__dst, double *__src, unint64_t a3, double *a4)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  double v14;
  char *v15;
  double *v16;
  double *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  double v21;
  double *v22;
  BOOL v23;
  size_t v24;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = ((char *)__src - (char *)__dst) / 112;
  v10 = a3 - (_QWORD)__src;
  v11 = (uint64_t)(a3 - (_QWORD)__src) / 112;
  if (v9 >= v11)
  {
    v18 = 14 * v11;
    if (a4 != __src || &__src[v18] <= a4)
      memmove(a4, __src, 112 * v11);
    v13 = (char *)&v4[v18];
    if (v7 >= v6 || v10 < 112)
      goto LABEL_47;
    v19 = (char *)(a3 - 112);
    while (1)
    {
      v20 = v19 + 112;
      v21 = *((double *)v13 - 2);
      if (*(v13 - 8))
        v21 = 0.0;
      if ((*(_BYTE *)(v6 - 1) & 1) != 0)
      {
        if (v21 <= 0.0)
          goto LABEL_33;
      }
      else if (*(v6 - 2) >= v21)
      {
LABEL_33:
        v22 = (double *)(v13 - 112);
        if (v20 != v13)
        {
          v13 -= 112;
LABEL_44:
          memmove(v19, v22, 0x70uLL);
          goto LABEL_45;
        }
        v23 = v19 >= v13;
        v13 -= 112;
        if (v23)
          goto LABEL_44;
        goto LABEL_45;
      }
      v22 = v6 - 14;
      if (v20 != (char *)v6)
      {
        v6 -= 14;
        goto LABEL_44;
      }
      v23 = v19 >= (char *)v6;
      v6 -= 14;
      if (v23)
        goto LABEL_44;
LABEL_45:
      if (v6 > v7)
      {
        v19 -= 112;
        if (v13 > (char *)v4)
          continue;
      }
      goto LABEL_47;
    }
  }
  v12 = 14 * v9;
  if (a4 != __dst || &__dst[v12] <= a4)
    memmove(a4, __dst, v12 * 8);
  v13 = (char *)&v4[v12];
  if ((unint64_t)v6 < a3 && v8 >= 112)
  {
    while (1)
    {
      v14 = v6[12];
      if (*((_BYTE *)v6 + 104))
        v14 = 0.0;
      if (((_BYTE)v4[13] & 1) != 0)
      {
        if (v14 > 0.0)
          goto LABEL_15;
      }
      else if (v4[12] < v14)
      {
LABEL_15:
        v17 = v6 + 14;
        v16 = v6;
        if (v7 == v6 && v7 < v17)
          goto LABEL_20;
        goto LABEL_19;
      }
      v15 = (char *)(v4 + 14);
      v16 = v4;
      v17 = v6;
      if (v7 == v4)
      {
        v4 += 14;
        if (v7 < (double *)v15)
          goto LABEL_20;
      }
      else
      {
        v4 += 14;
      }
LABEL_19:
      memmove(v7, v16, 0x70uLL);
LABEL_20:
      v7 += 14;
      if (v4 < (double *)v13)
      {
        v6 = v17;
        if ((unint64_t)v17 < a3)
          continue;
      }
      break;
    }
  }
  v6 = v7;
LABEL_47:
  v24 = 14 * ((v13 - (char *)v4) / 112);
  if (v6 != v4 || v6 >= &v4[v24])
    memmove(v6, v4, v24 * 8);
  return 1;
}

uint64_t sub_1D5E0F1BC(double *__dst, double *__src, unint64_t a3, double *a4)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  double *v13;
  double *v14;
  double *v15;
  double *v16;
  uint64_t v17;
  double *v18;
  double *v19;
  double *v20;
  BOOL v21;
  size_t v22;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = ((char *)__src - (char *)__dst) / 112;
  v10 = a3 - (_QWORD)__src;
  v11 = (uint64_t)(a3 - (_QWORD)__src) / 112;
  if (v9 >= v11)
  {
    v17 = 14 * v11;
    if (a4 != __src || &__src[v17] <= a4)
      memmove(a4, __src, 112 * v11);
    v13 = &v4[v17];
    if (v7 >= v6 || v10 < 112)
      goto LABEL_39;
    v18 = (double *)(a3 - 112);
    while (1)
    {
      v19 = v18 + 14;
      if (*(v6 - 7) >= *(v13 - 7))
      {
        v20 = v13 - 14;
        if (v19 != v13)
        {
          v13 -= 14;
          goto LABEL_36;
        }
        v21 = v18 >= v13;
        v13 -= 14;
        if (v21)
          goto LABEL_36;
      }
      else
      {
        v20 = v6 - 14;
        if (v19 != v6)
        {
          v6 -= 14;
LABEL_36:
          memmove(v18, v20, 0x70uLL);
          goto LABEL_37;
        }
        v21 = v18 >= v6;
        v6 -= 14;
        if (v21)
          goto LABEL_36;
      }
LABEL_37:
      if (v6 > v7)
      {
        v18 -= 14;
        if (v13 > v4)
          continue;
      }
      goto LABEL_39;
    }
  }
  v12 = 14 * v9;
  if (a4 != __dst || &__dst[v12] <= a4)
    memmove(a4, __dst, v12 * 8);
  v13 = &v4[v12];
  if ((unint64_t)v6 < a3 && v8 >= 112)
  {
    while (1)
    {
      if (v4[7] >= v6[7])
      {
        v16 = v4 + 14;
        v15 = v4;
        v14 = v6;
        if (v7 == v4)
        {
          v4 += 14;
          if (v7 < v16)
            goto LABEL_16;
        }
        else
        {
          v4 += 14;
        }
      }
      else
      {
        v14 = v6 + 14;
        v15 = v6;
        if (v7 == v6 && v7 < v14)
          goto LABEL_16;
      }
      memmove(v7, v15, 0x70uLL);
LABEL_16:
      v7 += 14;
      if (v4 < v13)
      {
        v6 = v14;
        if ((unint64_t)v14 < a3)
          continue;
      }
      break;
    }
  }
  v6 = v7;
LABEL_39:
  v22 = 14 * (((char *)v13 - (char *)v4) / 112);
  if (v6 != v4 || v6 >= &v4[v22])
    memmove(v6, v4, v22 * 8);
  return 1;
}

uint64_t sub_1D5E0F404(double *__dst, double *__src, unint64_t a3, double *a4)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double *v13;
  double *v14;
  double *v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  double *v19;
  double *v20;
  BOOL v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = ((char *)__src - (char *)__dst) / 40;
  v10 = a3 - (_QWORD)__src;
  v11 = (uint64_t)(a3 - (_QWORD)__src) / 40;
  if (v9 >= v11)
  {
    if (a4 != __src || &__src[5 * v11] <= a4)
      memmove(a4, __src, 40 * v11);
    v12 = &v4[5 * v11];
    if (v7 >= v6 || v10 < 40)
      goto LABEL_39;
    v18 = a3 - 40;
    while (1)
    {
      v19 = (double *)(v18 + 40);
      if (*(v6 - 1) >= *(v12 - 1))
      {
        v20 = v12 - 5;
        if (v19 != v12)
        {
          v12 -= 5;
          goto LABEL_36;
        }
        v21 = v18 >= (unint64_t)v12;
        v12 -= 5;
        if (v21)
          goto LABEL_36;
      }
      else
      {
        v20 = v6 - 5;
        if (v19 != v6)
        {
          v6 -= 5;
LABEL_36:
          v22 = *(_OWORD *)v20;
          v23 = *((_OWORD *)v20 + 1);
          *(double *)(v18 + 32) = v20[4];
          *(_OWORD *)v18 = v22;
          *(_OWORD *)(v18 + 16) = v23;
          goto LABEL_37;
        }
        v21 = v18 >= (unint64_t)v6;
        v6 -= 5;
        if (v21)
          goto LABEL_36;
      }
LABEL_37:
      if (v6 > v7)
      {
        v18 -= 40;
        if (v12 > v4)
          continue;
      }
      goto LABEL_39;
    }
  }
  if (a4 != __dst || &__dst[5 * v9] <= a4)
    memmove(a4, __dst, 40 * v9);
  v12 = &v4[5 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 40)
  {
    while (1)
    {
      if (v4[4] >= v6[4])
      {
        v15 = v4 + 5;
        v14 = v4;
        v13 = v6;
        if (v7 == v4)
        {
          v4 += 5;
          if (v7 < v15)
            goto LABEL_16;
        }
        else
        {
          v4 += 5;
        }
      }
      else
      {
        v13 = v6 + 5;
        v14 = v6;
        if (v7 == v6 && v7 < v13)
          goto LABEL_16;
      }
      v16 = *(_OWORD *)v14;
      v17 = *((_OWORD *)v14 + 1);
      v7[4] = v14[4];
      *(_OWORD *)v7 = v16;
      *((_OWORD *)v7 + 1) = v17;
LABEL_16:
      v7 += 5;
      if (v4 < v12)
      {
        v6 = v13;
        if ((unint64_t)v13 < a3)
          continue;
      }
      break;
    }
  }
  v6 = v7;
LABEL_39:
  v24 = (unsigned __int128)(((char *)v12 - (char *)v4) * (__int128)0x6666666666666667) >> 64;
  v25 = (v24 >> 4) + ((unint64_t)v24 >> 63);
  if (v6 != v4 || v6 >= &v4[5 * v25])
    memmove(v6, v4, 40 * v25);
  return 1;
}

uint64_t sub_1D5E0F658(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v4 = v2;
  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(isStackAllocationSafe + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, a2);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = a2((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2)
      swift_willThrow();
    else
      return v9;
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v4 = a2((char *)v10, v7, v5);
    MEMORY[0x1D827D988](v10, -1, -1);
  }
  return v4;
}

unint64_t *sub_1D5E0F7B4(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      return (unint64_t *)sub_1D5E25C74(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        return (unint64_t *)sub_1D5E25C74(result, a2, v4, a3);
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          return (unint64_t *)sub_1D5E25C74(result, a2, v4, a3);
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(_BYTE *)(*(_QWORD *)(a3 + 56) + 40 * v12 + 16) == 1)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1D5E25C74(result, a2, v4, a3);
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    return (unint64_t *)sub_1D5E25C74(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_1D5E25C74(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_1D5E0F908(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      return (unint64_t *)sub_1D5E25C74(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        return (unint64_t *)sub_1D5E25C74(result, a2, v4, a3);
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          return (unint64_t *)sub_1D5E25C74(result, a2, v4, a3);
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if ((*(_BYTE *)(*(_QWORD *)(a3 + 56) + 40 * v12 + 16) & 1) == 0)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1D5E25C74(result, a2, v4, a3);
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    return (unint64_t *)sub_1D5E25C74(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_1D5E25C74(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_1D5E0FA58(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x1D827D9A0](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x1D827D9A0](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1D5E0FAE0(uint64_t a1)
{
  return sub_1D5DAAFFC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D5E0FAF4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20[12];
  _OWORD v21[5];
  _BYTE v22[25];

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v7)
      return swift_release();
    v18 = *(_QWORD *)(v3 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v7)
        return swift_release();
      v18 = *(_QWORD *)(v3 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v7)
          return swift_release();
        v18 = *(_QWORD *)(v3 + 8 * v8);
        if (!v18)
        {
          v8 = v17 + 3;
          if (v17 + 3 >= v7)
            return swift_release();
          v18 = *(_QWORD *)(v3 + 8 * v8);
          if (!v18)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v18 - 1) & v18;
    v10 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_6:
    v11 = (_OWORD *)(*(_QWORD *)(v2 + 48) + 112 * v10);
    v13 = v11[1];
    v12 = v11[2];
    v21[0] = *v11;
    v21[1] = v13;
    v21[2] = v12;
    v15 = v11[4];
    v14 = v11[5];
    v16 = v11[3];
    *(_OWORD *)&v22[9] = *(_OWORD *)((char *)v11 + 89);
    v21[4] = v15;
    *(_OWORD *)v22 = v14;
    v21[3] = v16;
    sub_1D5DA2190((uint64_t)v21);
    sub_1D5E0FCC4((uint64_t *)v21, (uint64_t)v20);
    sub_1D5E1DB7C(v20[0], v20[1], v20[2], v20[3], v20[4], v20[5], v20[6], v20[7], v20[8], v20[9], v20[10]);
    result = sub_1D5E17FB4((uint64_t)v21);
  }
  v19 = v17 + 4;
  if (v19 >= v7)
    return swift_release();
  v18 = *(_QWORD *)(v3 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v18 = *(_QWORD *)(v3 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

double sub_1D5E0FCC4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  BOOL v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  double result;
  uint64_t v29;
  _QWORD *v30;
  BOOL v31;
  uint64_t v32;

  v3 = v2;
  v6 = *v3;
  sub_1D5E379A4();
  v7 = *a1;
  v8 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D5E3744C();
  swift_bridgeObjectRelease();
  v9 = sub_1D5E379C8();
  v10 = -1 << *(_BYTE *)(v6 + 32);
  i = v9 & ~v10;
  v12 = v6 + 56;
  if (((*(_QWORD *)(v6 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) == 0)
    goto LABEL_17;
  v13 = *(_QWORD *)(v6 + 48);
  v14 = (_QWORD *)(v13 + 112 * i);
  v15 = *v14 == v7 && v14[1] == v8;
  if (!v15 && (sub_1D5E378FC() & 1) == 0)
  {
    v29 = ~v10;
    for (i = (i + 1) & v29; ((*(_QWORD *)(v12 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v29)
    {
      v30 = (_QWORD *)(v13 + 112 * i);
      v31 = *v30 == v7 && v30[1] == v8;
      if (v31 || (sub_1D5E378FC() & 1) != 0)
        goto LABEL_7;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    result = 0.0;
    *(_OWORD *)(a2 + 89) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v3;
  v32 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D5DCB720();
    v17 = v32;
  }
  v18 = *(_QWORD *)(v17 + 48) + 112 * i;
  v19 = *(_QWORD *)(v18 + 16);
  v20 = *(_QWORD *)(v18 + 56);
  v21 = *(_BYTE *)(v18 + 64);
  v22 = *(_BYTE *)(v18 + 65);
  v23 = *(_BYTE *)(v18 + 66);
  v24 = *(_BYTE *)(v18 + 67);
  v25 = *(_BYTE *)(v18 + 88);
  v26 = *(_QWORD *)(v18 + 96);
  v27 = *(_BYTE *)(v18 + 104);
  *(_OWORD *)a2 = *(_OWORD *)v18;
  *(_QWORD *)(a2 + 16) = v19;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v18 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v18 + 40);
  *(_QWORD *)(a2 + 56) = v20;
  *(_BYTE *)(a2 + 64) = v21;
  *(_BYTE *)(a2 + 65) = v22;
  *(_BYTE *)(a2 + 66) = v23;
  *(_BYTE *)(a2 + 67) = v24;
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(v18 + 72);
  *(_BYTE *)(a2 + 88) = v25;
  *(_QWORD *)(a2 + 96) = v26;
  *(_BYTE *)(a2 + 104) = v27;
  sub_1D5E0FF10(i);
  *v3 = v32;
  swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1D5E0FF10(unint64_t result)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1D5E37620();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v22 = v4;
      v23 = v3;
      v24 = (v8 + 1) & v7;
      v25 = v7;
      do
      {
        v26 = v2;
        v9 = 112 * v6;
        v10 = *(_QWORD *)(v3 + 48) + 112 * v6;
        v12 = *(_QWORD *)(v10 + 72);
        v11 = *(_QWORD *)(v10 + 80);
        sub_1D5E379A4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v12, v11);
        swift_bridgeObjectRetain();
        sub_1D5E3744C();
        swift_bridgeObjectRelease();
        v13 = sub_1D5E379C8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = v11;
        v2 = v26;
        sub_1D5DA2260(v12, v14);
        v15 = v13 & v25;
        if (v26 >= (uint64_t)v24)
        {
          if (v15 < v24)
          {
            v4 = v22;
            v3 = v23;
          }
          else
          {
            v4 = v22;
            v3 = v23;
            if (v26 >= (uint64_t)v15)
              goto LABEL_12;
          }
        }
        else
        {
          v4 = v22;
          v3 = v23;
          if (v15 >= v24 || v26 >= (uint64_t)v15)
          {
LABEL_12:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = (char *)(v16 + 112 * v26);
            v18 = (char *)(v16 + v9);
            if (112 * v26 < v9 || v17 >= v18 + 112 || (v2 = v6, v26 != v6))
            {
              memmove(v17, v18, 0x70uLL);
              v2 = v6;
            }
          }
        }
        v6 = (v6 + 1) & v25;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v19 = *(_QWORD *)(v3 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void (*sub_1D5E10194(double ***a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5))(uint64_t a1)
{
  double **v10;
  char isUniquelyReferenced_nonNull_native;

  v10 = (double **)malloc(0x58uLL);
  *a1 = v10;
  v10[8] = (double *)a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v10[9] = (double *)sub_1D5E10450(v10);
  v10[10] = (double *)sub_1D5E1029C(v10 + 4, a2, a3, a4 & 0x101010101, isUniquelyReferenced_nonNull_native, a5);
  return sub_1D5E1024C;
}

void sub_1D5E1024C(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_1D5E1029C(double **a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6))(uint64_t **a1)
{
  uint64_t *v6;
  uint64_t *v7;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*result)(uint64_t **);

  v7 = v6;
  v14 = (double *)malloc(0x40uLL);
  *a1 = v14;
  *((_QWORD *)v14 + 4) = a4;
  *((_QWORD *)v14 + 5) = v7;
  v14[3] = a6;
  *((_QWORD *)v14 + 1) = a2;
  *((_QWORD *)v14 + 2) = a3;
  v15 = a4 & 0x101010101;
  v16 = *v7;
  v18 = sub_1D5D97A74(a2, a3, v15, a6);
  *((_BYTE *)v14 + 56) = v17 & 1;
  v19 = *(_QWORD *)(v16 + 16);
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
  }
  else
  {
    v22 = v17;
    v23 = *(_QWORD *)(v16 + 24);
    if (v23 >= v21 && (a5 & 1) != 0)
    {
LABEL_7:
      *((_QWORD *)v14 + 6) = v18;
      if ((v22 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(*(_QWORD *)(*v7 + 56) + 8 * v18);
LABEL_12:
        *(_QWORD *)v14 = v24;
        return sub_1D5E10400;
      }
LABEL_11:
      v24 = 0;
      goto LABEL_12;
    }
    if (v23 >= v21 && (a5 & 1) == 0)
    {
      sub_1D5D98B90();
      goto LABEL_7;
    }
    sub_1D5D9BBA4(v21, a5 & 1);
    v25 = sub_1D5D97A74(a2, a3, v15, a6);
    if ((v22 & 1) == (v26 & 1))
    {
      v18 = v25;
      *((_QWORD *)v14 + 6) = v25;
      if ((v22 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_1D5E3795C();
  __break(1u);
  return result;
}

void sub_1D5E10400(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_1D5E1047C(*a1, *((_BYTE *)*a1 + 56), (uint64_t *)(*a1)[5], (*a1)[6], (*a1)[1], (*a1)[2], (*a1)[4] & 0x101010101, *((double *)*a1 + 3));
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_1D5E10450(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1D5E10470;
}

uint64_t sub_1D5E10470(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_1D5E1047C(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v10;
  _QWORD *v12;

  v10 = *a1;
  if (*a1)
  {
    v12 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(v12[7] + 8 * a4) = v10;
    }
    else
    {
      sub_1D5D9DD1C(a4, a5, a6, a7 & 0x101010101, v10, v12, a8);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_1D5E24E38(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D5E10520(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  uint64_t v29;
  char v30;
  unint64_t v31;
  size_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  uint64_t v44;

  v2 = a2;
  v44 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 64);
    v38 = a1 + 64;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v36 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v37 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v37)
          goto LABEL_47;
        v13 = *(_QWORD *)(v38 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v37)
            goto LABEL_47;
          v13 = *(_QWORD *)(v38 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v37)
              goto LABEL_47;
            v13 = *(_QWORD *)(v38 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v37)
                goto LABEL_47;
              v13 = *(_QWORD *)(v38 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v37)
                {
LABEL_47:
                  sub_1D5DA2144();
                  return v2;
                }
                v13 = *(_QWORD *)(v38 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v37)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v38 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_1D5E379A4();
      swift_bridgeObjectRetain();
      sub_1D5E3744C();
      v19 = sub_1D5E379C8();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1D5E378FC() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v39 = a1;
      v40 = v38;
      v41 = v36;
      v42 = v9;
      v43 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1D5E378FC() & 1) == 0);
      v39 = a1;
      v40 = v38;
      v41 = v36;
      v42 = v9;
      v43 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v30 = *(_BYTE *)(v2 + 32);
    v31 = (unint64_t)((1 << v30) + 63) >> 6;
    v32 = 8 * v31;
    if ((v30 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe, v29);
      memcpy((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v32);
      v33 = sub_1D5E10C94((uint64_t)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), v31, v2, v21, &v39);
      swift_release();
      sub_1D5DA2144();
    }
    else
    {
      v34 = (void *)swift_slowAlloc();
      memcpy(v34, (const void *)(v2 + 56), v32);
      v33 = sub_1D5E10C94((uint64_t)v34, v31, v2, v21, &v39);
      swift_release();
      sub_1D5DA2144();
      MEMORY[0x1D827D988](v34, -1, -1);
    }
    return v33;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1D5E10988(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t isStackAllocationSafe;
  uint64_t v19;
  char v20;
  unint64_t v21;
  size_t v22;
  uint64_t v23;
  void *v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = a2;
  v29 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v27 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a2 + 56;
    v26[0] = a1 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v6 = (uint64_t *)(v26[0] + 16 * v5);
      v8 = *v6;
      v7 = v6[1];
      ++v5;
      sub_1D5E379A4();
      swift_bridgeObjectRetain();
      sub_1D5E3744C();
      v9 = sub_1D5E379C8();
      v10 = -1 << *(_BYTE *)(v2 + 32);
      v11 = v9 & ~v10;
      if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      {
        v12 = *(_QWORD *)(v2 + 48);
        v13 = (_QWORD *)(v12 + 16 * v11);
        v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_1D5E378FC() & 1) != 0)
        {
          isStackAllocationSafe = swift_bridgeObjectRelease();
          v28 = v5;
LABEL_19:
          v20 = *(_BYTE *)(v2 + 32);
          v21 = (unint64_t)((1 << v20) + 63) >> 6;
          v22 = 8 * v21;
          if ((v20 & 0x3Fu) < 0xE
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe, v19);
            memcpy((char *)v26 - ((v22 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v22);
            v23 = sub_1D5E10F70((uint64_t)v26 - ((v22 + 15) & 0x3FFFFFFFFFFFFFF0), v21, v2, v11, &v27);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            v24 = (void *)swift_slowAlloc();
            memcpy(v24, (const void *)(v2 + 56), v22);
            v23 = sub_1D5E10F70((uint64_t)v24, v21, v2, v11, &v27);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x1D827D988](v24, -1, -1);
          }
          return v23;
        }
        v15 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v15;
          if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
            break;
          v16 = (_QWORD *)(v12 + 16 * v11);
          v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_1D5E378FC() & 1) != 0)
          {
            v28 = v5;
            isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_1D5E10C94(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;

  v7 = *(_QWORD *)(a3 + 16);
  v38 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v39 = a3 + 56;
  while (2)
  {
    v37 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          v14 = (unint64_t)(a5[2] + 64) >> 6;
          v15 = a5[3];
          if (v13 >= v14)
            goto LABEL_43;
          v16 = a5[1];
          v17 = *(_QWORD *)(v16 + 8 * v13);
          if (!v17)
          {
            v15 = v9 + 1;
            if (v9 + 2 >= v14)
              goto LABEL_43;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              v13 = v9 + 2;
            }
            else
            {
              v15 = v9 + 2;
              if (v9 + 3 >= v14)
                goto LABEL_43;
              v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                v13 = v9 + 3;
              }
              else
              {
                v13 = v9 + 4;
                v15 = v9 + 3;
                if (v9 + 4 >= v14)
                  goto LABEL_43;
                v17 = *(_QWORD *)(v16 + 8 * v13);
                if (!v17)
                {
                  v15 = v14 - 1;
                  v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    v17 = *(_QWORD *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_1D5D810B4(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          v11 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v13 << 6);
          v9 = v13;
        }
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1D5E379A4();
        swift_bridgeObjectRetain();
        sub_1D5E3744C();
        v22 = sub_1D5E379C8();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v39 + 8 * (v24 >> 6))) != 0)
          break;
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      v27 = *(_QWORD *)(a3 + 48);
      v28 = (_QWORD *)(v27 + 16 * v24);
      v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_1D5E378FC() & 1) == 0)
      {
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1D5E378FC() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      result = swift_bridgeObjectRelease();
LABEL_29:
      v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1D5E10F70(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t i;
  unint64_t v26;
  _QWORD *v27;
  BOOL v28;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v30 = (unint64_t *)result;
  v31 = v6 - 1;
  v8 = *a5;
  v7 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_1D5D810B4(v30, a2, v31, a3);
  }
  v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9)
      goto LABEL_29;
    v11 = v8 + 16 * v7;
    v13 = *(_QWORD *)(v11 + 32);
    v12 = *(_QWORD *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_1D5E379A4();
    swift_bridgeObjectRetain();
    sub_1D5E3744C();
    v14 = sub_1D5E379C8();
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    v18 = 1 << v16;
    if (((1 << v16) & *(_QWORD *)(v32 + 8 * (v16 >> 6))) == 0)
      goto LABEL_4;
    v19 = *(_QWORD *)(a3 + 48);
    v20 = (_QWORD *)(v19 + 16 * v16);
    v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_1D5E378FC() & 1) == 0)
    {
      v24 = ~v15;
      for (i = v16 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v19 + 16 * v26);
        v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_1D5E378FC() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v17 = v26 >> 6;
          v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      result = swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    result = swift_bridgeObjectRelease();
LABEL_15:
    v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      v23 = v31 - 1;
      if (__OFSUB__(v31, 1))
        goto LABEL_30;
      --v31;
      if (!v23)
        return MEMORY[0x1E0DEE9E8];
    }
LABEL_5:
    v8 = *a5;
    v7 = a5[1];
    v9 = *(_QWORD *)(*a5 + 16);
    if (v7 == v9)
      goto LABEL_2;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D5E11198(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1D5E11238(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  double v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  int v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  char v45;
  char v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  int64_t v53;

  v10 = a2;
  v11 = a2 + 56;
  v12 = 1 << *(_BYTE *)(a2 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(a2 + 56);
  v53 = (unint64_t)(v12 + 63) >> 6;
  v15 = (double)a6;
  swift_bridgeObjectRetain();
  v16 = 0;
  v48 = v11;
  v49 = v10;
  while (v14)
  {
    v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v18 = v17 | (v16 << 6);
LABEL_24:
    v22 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    v23 = *v22;
    v24 = v22[1];
    v25 = *v22 == a3 && v24 == a4;
    if (!v25 && (sub_1D5E378FC() & 1) == 0)
    {
      if ((sub_1D5E378FC() & 1) != 0)
      {
        v50 = a3;
        v52 = a4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v50 = v23;
        v52 = v24;
        swift_bridgeObjectRetain_n();
      }
      sub_1D5E37458();
      if (!*(_QWORD *)(a5 + 16) || (v26 = sub_1D5D7FFCC(v50, v52), (v27 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      v28 = *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * v26);
      swift_bridgeObjectRelease();
      v29 = (double)v28 / v15;
      if (*(double *)(a7 + 1392) >= v29)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        v11 = v48;
        v10 = v49;
      }
      else
      {
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v51 = a1;
        v31 = sub_1D5D7FFCC(v23, v24);
        v32 = a1[2];
        v33 = (v30 & 1) == 0;
        v34 = v32 + v33;
        if (__OFADD__(v32, v33))
          goto LABEL_49;
        if (a1[3] >= v34)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v46 = v30;
            sub_1D5D989E4();
            v30 = v46;
          }
        }
        else
        {
          v45 = v30;
          sub_1D5D80370(v34, isUniquelyReferenced_nonNull_native);
          v35 = sub_1D5D7FFCC(v23, v24);
          v37 = v36 & 1;
          v30 = v45;
          if ((v45 & 1) != v37)
            goto LABEL_51;
          v31 = v35;
        }
        a1 = v51;
        if ((v30 & 1) != 0)
        {
          *(double *)(v51[7] + 8 * v31) = v29;
        }
        else
        {
          v51[(v31 >> 6) + 8] |= 1 << v31;
          v38 = (uint64_t *)(v51[6] + 16 * v31);
          *v38 = v23;
          v38[1] = v24;
          *(double *)(v51[7] + 8 * v31) = v29;
          v39 = v51[2];
          v40 = __OFADD__(v39, 1);
          v41 = v39 + 1;
          if (v40)
            goto LABEL_50;
          v51[2] = v41;
          swift_bridgeObjectRetain();
        }
        v11 = v48;
        v10 = v49;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
      }
    }
  }
  v19 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v19 >= v53)
    goto LABEL_46;
  v20 = *(_QWORD *)(v11 + 8 * v19);
  ++v16;
  if (v20)
    goto LABEL_23;
  v16 = v19 + 1;
  if (v19 + 1 >= v53)
    goto LABEL_46;
  v20 = *(_QWORD *)(v11 + 8 * v16);
  if (v20)
    goto LABEL_23;
  v16 = v19 + 2;
  if (v19 + 2 >= v53)
    goto LABEL_46;
  v20 = *(_QWORD *)(v11 + 8 * v16);
  if (v20)
    goto LABEL_23;
  v16 = v19 + 3;
  if (v19 + 3 >= v53)
    goto LABEL_46;
  v20 = *(_QWORD *)(v11 + 8 * v16);
  if (v20)
  {
LABEL_23:
    v14 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_24;
  }
  v21 = v19 + 4;
  if (v21 >= v53)
  {
LABEL_46:
    swift_release();
    return (uint64_t)a1;
  }
  v20 = *(_QWORD *)(v11 + 8 * v21);
  if (v20)
  {
    v16 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v16 >= v53)
      goto LABEL_46;
    v20 = *(_QWORD *)(v11 + 8 * v16);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  result = sub_1D5E3795C();
  __break(1u);
  return result;
}

uint64_t sub_1D5E11608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;

  v7 = a2 + 56;
  v8 = 1 << *(_BYTE *)(a2 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a2 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  while (1)
  {
    while (v10)
    {
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v15 = v14 | (v13 << 6);
      if (*(_QWORD *)(a3 + 16))
        goto LABEL_20;
    }
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v11)
      goto LABEL_27;
    v17 = *(_QWORD *)(v7 + 8 * v13);
    if (!v17)
      break;
LABEL_19:
    v10 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v13 << 6);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_20:
      v19 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      swift_bridgeObjectRetain();
      v22 = sub_1D5D7FFCC(v20, v21);
      if ((v23 & 1) != 0)
      {
        v25 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DBBE24(a5);
        v26 = sub_1D5E11238(MEMORY[0x1E0DEE9E0], a4, v20, v21, a3, v25, a5);
        sub_1D5DBE3F4(a5);
        swift_bridgeObjectRelease();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1D5D9DC28(v26, v20, v21, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease_n();
      }
      result = swift_bridgeObjectRelease();
    }
  }
  v18 = v13 + 1;
  if (v13 + 1 >= v11)
    goto LABEL_27;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_18;
  v18 = v13 + 2;
  if (v13 + 2 >= v11)
    goto LABEL_27;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_18;
  v18 = v13 + 3;
  if (v13 + 3 >= v11)
    goto LABEL_27;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_18;
  v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_27:
    swift_release();
    return a1;
  }
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_18:
    v13 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v11)
      goto LABEL_27;
    v17 = *(_QWORD *)(v7 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_19;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1D5E1185C(char *__dst, char *__src, char *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v8;
  char *v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  char *v16;
  double v17;
  double v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  unint64_t v22;
  double v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  BOOL v33;
  double v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  BOOL v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  BOOL v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  BOOL v50;
  char v51;
  double v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  double v58;
  double v59;
  uint64_t v60;
  double v61;
  unint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  BOOL v73;
  double v74;
  char v75;
  uint64_t v76;
  _QWORD *v77;
  BOOL v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  BOOL v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  BOOL v90;
  char v91;
  double v92;
  unint64_t v93;
  char *v94;
  char *v95;
  BOOL v96;
  size_t v97;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  void *__dsta;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v8 = a4;
  v9 = __src;
  v10 = __dst;
  v11 = __src - __dst;
  v12 = (__src - __dst) / 112;
  v115 = a3;
  v13 = a3 - __src;
  v14 = (a3 - __src) / 112;
  if (v12 >= v14)
  {
    v57 = 112 * v14;
    if (a4 != __src || &__src[v57] <= a4)
      memmove(a4, __src, 112 * v14);
    v16 = &v8[v57];
    if (v10 >= v9 || v13 < 112)
      goto LABEL_111;
    v58 = *(double *)(a7 + 912);
    v59 = *(double *)(a7 + 920);
    v109 = v10;
    v111 = v8;
    while (1)
    {
      v60 = *((_QWORD *)v16 - 8);
      v112 = *((_QWORD *)v16 - 9);
      v114 = v9;
      v61 = *((double *)v16 - 7);
      v107 = v16;
      v63 = *((_QWORD *)v16 - 5);
      v62 = *((_QWORD *)v16 - 4);
      v64 = *((double *)v9 - 7);
      v65 = *((_QWORD *)v9 - 5);
      v66 = *((_QWORD *)v9 - 4);
      v117 = v60;
      v119 = *((_QWORD *)v9 - 8);
      v101 = v63;
      v99 = v62;
      v105 = *((_QWORD *)v9 - 9);
      if (*(_QWORD *)(v60 + 16))
      {
        v67 = *((_QWORD *)v9 - 5);
        sub_1D5E379A4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v63, v62);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v67, v66);
        sub_1D5E3744C();
        v68 = sub_1D5E379C8();
        v69 = -1 << *(_BYTE *)(v117 + 32);
        v70 = v68 & ~v69;
        if (((*(_QWORD *)(v117 + 56 + ((v70 >> 3) & 0xFFFFFFFFFFFFF8)) >> v70) & 1) != 0)
        {
          v71 = *(_QWORD *)(v117 + 48);
          v72 = (_QWORD *)(v71 + 16 * v70);
          v73 = *v72 == a5 && v72[1] == a6;
          v74 = v59;
          if (v73)
            goto LABEL_81;
          v75 = sub_1D5E378FC();
          v74 = v59;
          if ((v75 & 1) != 0)
            goto LABEL_81;
          v76 = ~v69;
          while (1)
          {
            v70 = (v70 + 1) & v76;
            if (((*(_QWORD *)(v117 + 56 + ((v70 >> 3) & 0xFFFFFFFFFFFFF8)) >> v70) & 1) == 0)
              break;
            v77 = (_QWORD *)(v71 + 16 * v70);
            v78 = *v77 == a5 && v77[1] == a6;
            if (v78 || (sub_1D5E378FC() & 1) != 0)
            {
              v74 = v59;
              goto LABEL_81;
            }
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v63, v62);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v65, v66);
      }
      if ((sub_1D5D7E22C(a5, a6, v112) & 1) != 0)
        v74 = v58;
      else
        v74 = 1.0;
LABEL_81:
      v79 = v61 * v74;
      if (*(_QWORD *)(v119 + 16))
      {
        sub_1D5E379A4();
        sub_1D5E3744C();
        v80 = sub_1D5E379C8();
        v81 = -1 << *(_BYTE *)(v119 + 32);
        v82 = v80 & ~v81;
        v83 = v119 + 56;
        if (((*(_QWORD *)(v119 + 56 + ((v82 >> 3) & 0xFFFFFFFFFFFFF8)) >> v82) & 1) != 0)
        {
          v84 = *(_QWORD *)(v119 + 48);
          v85 = (_QWORD *)(v84 + 16 * v82);
          v86 = *v85 == a5 && v85[1] == a6;
          if (v86 || (sub_1D5E378FC() & 1) != 0)
            goto LABEL_101;
          v87 = ~v81;
          v88 = (v82 + 1) & v87;
          if (((*(_QWORD *)(v83 + ((v88 >> 3) & 0xFFFFFFFFFFFFF8)) >> v88) & 1) != 0)
          {
            while (1)
            {
              v89 = (_QWORD *)(v84 + 16 * v88);
              v90 = *v89 == a5 && v89[1] == a6;
              if (v90 || (sub_1D5E378FC() & 1) != 0)
                break;
              v88 = (v88 + 1) & v87;
              if (((*(_QWORD *)(v83 + ((v88 >> 3) & 0xFFFFFFFFFFFFF8)) >> v88) & 1) == 0)
                goto LABEL_95;
            }
LABEL_101:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1D5DA2260(v65, v66);
            swift_bridgeObjectRelease();
            v8 = v111;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1D5DA2260(v101, v99);
            v92 = v59;
            v93 = (unint64_t)v109;
            v94 = v115 - 112;
            goto LABEL_102;
          }
        }
      }
LABEL_95:
      v91 = sub_1D5D7E22C(a5, a6, v105);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D5DA2260(v65, v66);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D5DA2260(v101, v99);
      v92 = v58;
      v93 = (unint64_t)v109;
      v8 = v111;
      v94 = v115 - 112;
      if ((v91 & 1) == 0)
      {
        v16 = v107;
        if (v64 < v79)
          goto LABEL_103;
        goto LABEL_97;
      }
LABEL_102:
      v16 = v107;
      if (v64 * v92 < v79)
      {
LABEL_103:
        v95 = v9 - 112;
        if (v115 == v9)
        {
          v9 -= 112;
          if (v94 < v114)
            goto LABEL_109;
        }
        else
        {
          v9 -= 112;
        }
        goto LABEL_108;
      }
LABEL_97:
      v95 = v16 - 112;
      if (v115 != v16)
      {
        v16 -= 112;
LABEL_108:
        memmove(v94, v95, 0x70uLL);
        goto LABEL_109;
      }
      v96 = v94 >= v16;
      v16 -= 112;
      if (v96)
        goto LABEL_108;
LABEL_109:
      if (v16 > v8)
      {
        v115 = v94;
        if ((unint64_t)v9 > v93)
          continue;
      }
      goto LABEL_111;
    }
  }
  v15 = 112 * v12;
  if (a4 != __dst || &__dst[v15] <= a4)
    memmove(a4, __dst, v15);
  v16 = &v8[v15];
  if (v9 < v115 && v11 >= 112)
  {
    v17 = *(double *)(a7 + 912);
    v18 = *(double *)(a7 + 920);
    v106 = v16;
    while (1)
    {
      v108 = v10;
      v19 = *((_QWORD *)v9 + 6);
      v20 = *((double *)v9 + 7);
      v21 = *((_QWORD *)v9 + 9);
      v22 = *((_QWORD *)v9 + 10);
      v113 = v9;
      v110 = v8;
      v104 = *((_QWORD *)v8 + 5);
      v116 = *((_QWORD *)v9 + 5);
      v118 = *((_QWORD *)v8 + 6);
      v23 = *((double *)v8 + 7);
      v24 = *((_QWORD *)v8 + 9);
      v25 = *((_QWORD *)v8 + 10);
      __dsta = (void *)v22;
      v103 = v21;
      v100 = v25;
      if (*(_QWORD *)(v19 + 16))
      {
        sub_1D5E379A4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v21, v22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = v104;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v27 = v24;
        sub_1D5DA2208(v24, v25);
        sub_1D5E3744C();
        v28 = sub_1D5E379C8();
        v29 = -1 << *(_BYTE *)(v19 + 32);
        v30 = v28 & ~v29;
        if (((*(_QWORD *)(v19 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) != 0)
        {
          v31 = *(_QWORD *)(v19 + 48);
          v32 = (_QWORD *)(v31 + 16 * v30);
          v33 = *v32 == a5 && v32[1] == a6;
          v34 = v18;
          if (v33)
            goto LABEL_27;
          v35 = sub_1D5E378FC();
          v34 = v18;
          if ((v35 & 1) != 0)
            goto LABEL_27;
          v36 = ~v29;
          while (1)
          {
            v30 = (v30 + 1) & v36;
            if (((*(_QWORD *)(v19 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
              break;
            v37 = (_QWORD *)(v31 + 16 * v30);
            v38 = *v37 == a5 && v37[1] == a6;
            if (v38 || (sub_1D5E378FC() & 1) != 0)
            {
              v34 = v18;
              goto LABEL_27;
            }
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v21, v22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = v104;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v27 = v24;
        sub_1D5DA2208(v24, v25);
      }
      if ((sub_1D5D7E22C(a5, a6, v116) & 1) != 0)
        v34 = v17;
      else
        v34 = 1.0;
LABEL_27:
      v39 = v20 * v34;
      if (*(_QWORD *)(v118 + 16))
      {
        sub_1D5E379A4();
        sub_1D5E3744C();
        v40 = sub_1D5E379C8();
        v41 = -1 << *(_BYTE *)(v118 + 32);
        v42 = v40 & ~v41;
        v43 = v118 + 56;
        if (((*(_QWORD *)(v118 + 56 + ((v42 >> 3) & 0xFFFFFFFFFFFFF8)) >> v42) & 1) != 0)
        {
          v44 = *(_QWORD *)(v118 + 48);
          v45 = (_QWORD *)(v44 + 16 * v42);
          v46 = *v45 == a5 && v45[1] == a6;
          if (v46 || (sub_1D5E378FC() & 1) != 0)
            goto LABEL_46;
          v47 = ~v41;
          v48 = (v42 + 1) & v47;
          if (((*(_QWORD *)(v43 + ((v48 >> 3) & 0xFFFFFFFFFFFFF8)) >> v48) & 1) != 0)
          {
            while (1)
            {
              v49 = (_QWORD *)(v44 + 16 * v48);
              v50 = *v49 == a5 && v49[1] == a6;
              if (v50 || (sub_1D5E378FC() & 1) != 0)
                break;
              v48 = (v48 + 1) & v47;
              if (((*(_QWORD *)(v43 + ((v48 >> 3) & 0xFFFFFFFFFFFFF8)) >> v48) & 1) == 0)
                goto LABEL_41;
            }
LABEL_46:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1D5DA2260(v27, v100);
            swift_bridgeObjectRelease();
            v8 = v110;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1D5DA2260(v103, (unint64_t)__dsta);
            v52 = v18;
            v53 = v108;
            goto LABEL_47;
          }
        }
      }
LABEL_41:
      v51 = sub_1D5D7E22C(a5, a6, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D5DA2260(v27, v100);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D5DA2260(v103, (unint64_t)__dsta);
      v52 = v17;
      v53 = v108;
      v8 = v110;
      if ((v51 & 1) == 0)
      {
        v16 = v106;
        if (v23 < v39)
          goto LABEL_48;
        goto LABEL_43;
      }
LABEL_47:
      v16 = v106;
      if (v23 * v52 < v39)
      {
LABEL_48:
        v56 = v113 + 112;
        v55 = v113;
        if (v53 == v113 && v53 < v56)
          goto LABEL_53;
        goto LABEL_52;
      }
LABEL_43:
      v54 = v8 + 112;
      v55 = v8;
      v56 = v113;
      if (v53 == v8)
      {
        v8 += 112;
        if (v53 < v54)
          goto LABEL_53;
      }
      else
      {
        v8 += 112;
      }
LABEL_52:
      memmove(v53, v55, 0x70uLL);
LABEL_53:
      v10 = v53 + 112;
      if (v8 < v16)
      {
        v9 = v56;
        if (v56 < v115)
          continue;
      }
      break;
    }
  }
  v9 = v10;
LABEL_111:
  v97 = 112 * ((v16 - v8) / 112);
  if (v9 != v8 || v9 >= &v8[v97])
    memmove(v9, v8, v97);
  return 1;
}

uint64_t sub_1D5E123C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  double v8;
  double v9;
  uint64_t v10;
  __int128 *v11;
  double v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  double v22;
  uint64_t v23;
  unint64_t i;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  BOOL v33;
  uint64_t v34;
  _QWORD *v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  BOOL v42;
  double v43;
  uint64_t v44;
  _QWORD *v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  BOOL v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  BOOL v57;
  __int128 v58;
  __int128 *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  uint64_t v67;
  char v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v77 = result;
  if (a3 != a2)
  {
    v78 = *a4;
    v8 = *(double *)(a7 + 912);
    v9 = *(double *)(a7 + 920);
LABEL_5:
    v76 = a3;
    v10 = a3;
    while (1)
    {
      v79 = v10;
      v11 = (__int128 *)(v78 + 112 * v10);
      v12 = *((double *)v11 + 7);
      v13 = *((_QWORD *)v11 + 10);
      v14 = *((_QWORD *)v11 - 8);
      v82 = *((_QWORD *)v11 + 9);
      v83 = *((_QWORD *)v11 - 9);
      v15 = *((double *)v11 - 7);
      v80 = *((_QWORD *)v11 - 4);
      v81 = *((_QWORD *)v11 - 5);
      v84 = *((_QWORD *)v11 + 6);
      v85 = *((_QWORD *)v11 + 5);
      if (*(_QWORD *)(v84 + 16))
      {
        sub_1D5E379A4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v82, v13);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v81, v80);
        sub_1D5E3744C();
        v16 = sub_1D5E379C8();
        v17 = -1 << *(_BYTE *)(v84 + 32);
        v18 = v16 & ~v17;
        if (((*(_QWORD *)(v84 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
        {
          v19 = *(_QWORD *)(v84 + 48);
          v20 = (_QWORD *)(v19 + 16 * v18);
          v21 = *v20 == a5 && v20[1] == a6;
          v22 = v9;
          if (v21)
            goto LABEL_41;
          v22 = v9;
          if ((sub_1D5E378FC() & 1) != 0)
            goto LABEL_41;
          v23 = ~v17;
          for (i = v18 + 1; ; i = v25 + 1)
          {
            v25 = i & v23;
            if (((*(_QWORD *)(v84 + 56 + (((i & v23) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v23)) & 1) == 0)
              break;
            v26 = (_QWORD *)(v19 + 16 * v25);
            v27 = *v26 == a5 && v26[1] == a6;
            if (v27 || (sub_1D5E378FC() & 1) != 0)
            {
              v22 = v9;
              if (*(_QWORD *)(v14 + 16))
                goto LABEL_42;
              goto LABEL_58;
            }
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v82, v13);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v81, v80);
      }
      if (*(_QWORD *)(v85 + 16))
      {
        sub_1D5E379A4();
        sub_1D5E3744C();
        v28 = sub_1D5E379C8();
        v29 = -1 << *(_BYTE *)(v85 + 32);
        v30 = v28 & ~v29;
        if (((*(_QWORD *)(v85 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        {
          v22 = 1.0;
LABEL_41:
          if (!*(_QWORD *)(v14 + 16))
            goto LABEL_58;
          goto LABEL_42;
        }
        v31 = *(_QWORD *)(v85 + 48);
        v32 = (_QWORD *)(v31 + 16 * v30);
        v33 = *v32 == a5 && v32[1] == a6;
        v22 = v8;
        if (v33)
          goto LABEL_41;
        v22 = v8;
        if ((sub_1D5E378FC() & 1) != 0)
          goto LABEL_41;
        v34 = ~v29;
        while (1)
        {
          v30 = (v30 + 1) & v34;
          if (((*(_QWORD *)(v85 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
            break;
          v35 = (_QWORD *)(v31 + 16 * v30);
          v36 = *v35 == a5 && v35[1] == a6;
          if (v36 || (sub_1D5E378FC() & 1) != 0)
          {
            v22 = v8;
            if (*(_QWORD *)(v14 + 16))
              goto LABEL_42;
            goto LABEL_58;
          }
        }
      }
      v22 = 1.0;
      if (!*(_QWORD *)(v14 + 16))
        goto LABEL_58;
LABEL_42:
      sub_1D5E379A4();
      sub_1D5E3744C();
      v37 = sub_1D5E379C8();
      v38 = -1 << *(_BYTE *)(v14 + 32);
      v39 = v37 & ~v38;
      if (((*(_QWORD *)(v14 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) != 0)
      {
        v40 = *(_QWORD *)(v14 + 48);
        v41 = (_QWORD *)(v40 + 16 * v39);
        v42 = *v41 == a5 && v41[1] == a6;
        if (v42 || (sub_1D5E378FC() & 1) != 0)
        {
LABEL_48:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v43 = v9;
          goto LABEL_77;
        }
        v44 = ~v38;
        while (1)
        {
          v39 = (v39 + 1) & v44;
          if (((*(_QWORD *)(v14 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
            break;
          v45 = (_QWORD *)(v40 + 16 * v39);
          v46 = *v45 == a5 && v45[1] == a6;
          if (v46 || (sub_1D5E378FC() & 1) != 0)
            goto LABEL_48;
        }
      }
LABEL_58:
      if (!*(_QWORD *)(v83 + 16)
        || (sub_1D5E379A4(),
            sub_1D5E3744C(),
            v47 = sub_1D5E379C8(),
            v48 = -1 << *(_BYTE *)(v83 + 32),
            v49 = v47 & ~v48,
            v50 = v83 + 56,
            ((*(_QWORD *)(v83 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0))
      {
LABEL_75:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v43 = 1.0;
        goto LABEL_77;
      }
      v51 = *(_QWORD *)(v83 + 48);
      v52 = (_QWORD *)(v51 + 16 * v49);
      v53 = *v52 == a5 && v52[1] == a6;
      if (!v53 && (sub_1D5E378FC() & 1) == 0)
      {
        v54 = ~v48;
        v55 = (v49 + 1) & v54;
        if (((*(_QWORD *)(v50 + ((v55 >> 3) & 0xFFFFFFFFFFFFF8)) >> v55) & 1) == 0)
          goto LABEL_75;
        while (1)
        {
          v56 = (_QWORD *)(v51 + 16 * v55);
          v57 = *v56 == a5 && v56[1] == a6;
          if (v57 || (sub_1D5E378FC() & 1) != 0)
            break;
          v55 = (v55 + 1) & v54;
          if (((*(_QWORD *)(v50 + ((v55 >> 3) & 0xFFFFFFFFFFFFF8)) >> v55) & 1) == 0)
            goto LABEL_75;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v43 = v8;
LABEL_77:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D5DA2260(v81, v80);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_1D5DA2260(v82, v13);
      if (v15 * v43 >= v12 * v22)
        goto LABEL_4;
      if (!v78)
      {
        __break(1u);
        return result;
      }
      v10 = v79 - 1;
      v58 = *v11;
      v59 = v11 - 7;
      v60 = *((_QWORD *)v11 + 2);
      v61 = *((_QWORD *)v11 + 7);
      v62 = *((_BYTE *)v11 + 64);
      v63 = *((_BYTE *)v11 + 65);
      v64 = *((_BYTE *)v11 + 66);
      v65 = *((_BYTE *)v11 + 67);
      v66 = *((_BYTE *)v11 + 88);
      v67 = *((_QWORD *)v11 + 12);
      v68 = *((_BYTE *)v11 + 104);
      v69 = *(__int128 *)((char *)v11 + 24);
      v70 = *(__int128 *)((char *)v11 + 40);
      v71 = *(__int128 *)((char *)v11 + 72);
      v72 = *(v11 - 2);
      v11[4] = *(v11 - 3);
      v11[5] = v72;
      v11[6] = *(v11 - 1);
      v73 = *(v11 - 6);
      *v11 = *(v11 - 7);
      v11[1] = v73;
      v74 = *(v11 - 4);
      v11[2] = *(v11 - 5);
      v11[3] = v74;
      *v59 = v58;
      *((_QWORD *)v59 + 2) = v60;
      *(__int128 *)((char *)v59 + 24) = v69;
      *(__int128 *)((char *)v59 + 40) = v70;
      *((_QWORD *)v59 + 7) = v61;
      *((_BYTE *)v59 + 64) = v62;
      *((_BYTE *)v59 + 65) = v63;
      *((_BYTE *)v59 + 66) = v64;
      *((_BYTE *)v59 + 67) = v65;
      *(__int128 *)((char *)v59 + 72) = v71;
      *((_BYTE *)v59 + 88) = v66;
      *((_QWORD *)v59 + 12) = v67;
      *((_BYTE *)v59 + 104) = v68;
      if (v79 - 1 == v77)
      {
LABEL_4:
        a3 = v76 + 1;
        if (v76 + 1 == a2)
          return result;
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1D5E12B00(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  unint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  char v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  BOOL v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  BOOL v72;
  double v73;
  uint64_t v74;
  _QWORD *v75;
  BOOL v76;
  uint64_t v77;
  _QWORD *v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  BOOL v85;
  uint64_t v86;
  _QWORD *v87;
  BOOL v88;
  uint64_t v89;
  _QWORD *v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char v99;
  char v100;
  uint64_t v101;
  double v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double v107;
  uint64_t v108;
  unint64_t v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v118;
  double v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  _QWORD *v126;
  BOOL v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  _QWORD *v131;
  BOOL v132;
  uint64_t v133;
  unint64_t v134;
  _QWORD *v135;
  BOOL v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  BOOL v143;
  double v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  BOOL v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  char v158;
  char v159;
  char v160;
  char v161;
  uint64_t v162;
  char v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  uint64_t v170;
  unint64_t v171;
  _QWORD *v172;
  BOOL v173;
  uint64_t v174;
  unint64_t v175;
  _QWORD *v176;
  BOOL v177;
  char *v178;
  unint64_t v179;
  unint64_t v180;
  char *v181;
  char *v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  BOOL v194;
  unint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  BOOL v204;
  uint64_t v205;
  char v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  BOOL v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  char *v223;
  uint64_t v224;
  unint64_t v225;
  char *v226;
  uint64_t v227;
  char *v228;
  unint64_t v229;
  char *v230;
  uint64_t v231;
  unint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  unint64_t v238;
  uint64_t result;
  uint64_t *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  unint64_t v259;
  uint64_t v260;
  __int128 v261;
  __int128 v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  __int128 v266;
  uint64_t v267;
  __int128 v268;
  uint64_t v269;
  uint64_t v270;
  char v271;
  uint64_t v272;
  uint64_t v273;
  char v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  void *__srca;
  _QWORD *__src;
  char *__srcb;
  char *__srcc;
  uint64_t v282;
  char v283;
  unint64_t v284;
  char *v285;
  char *v286;
  uint64_t v287;

  v8 = a1[1];
  swift_bridgeObjectRetain();
  sub_1D5DBBE24(a4);
  swift_bridgeObjectRetain();
  sub_1D5DBBE24(a4);
  v287 = a3;
  swift_bridgeObjectRetain();
  sub_1D5DBBE24(a4);
  v9 = sub_1D5E378C0();
  if (v9 >= v8)
  {
    if (v8 < 0)
      goto LABEL_303;
    if (v8)
    {
      swift_bridgeObjectRetain();
      sub_1D5DBBE24(a4);
      sub_1D5E123C4(0, v8, 1, a1, a2, a3, a4);
      sub_1D5DBE3F4(a4);
      goto LABEL_277;
    }
LABEL_278:
    swift_bridgeObjectRelease();
    sub_1D5DBE3F4(a4);
    swift_bridgeObjectRelease();
    sub_1D5DBE3F4(a4);
    swift_bridgeObjectRelease();
    return sub_1D5DBE3F4(a4);
  }
  if (v8 >= 0)
    v10 = v8;
  else
    v10 = v8 + 1;
  if (v8 < -1)
    goto LABEL_302;
  v248 = a4;
  v254 = a2;
  v244 = v8;
  v242 = v9;
  v240 = a1;
  if (v8 <= 1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    v245 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v8 != 1)
    {
      v19 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v16 = (char *)MEMORY[0x1E0DEE9D8];
      goto LABEL_265;
    }
    v241 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v11 = v10 >> 1;
    v12 = sub_1D5E3753C();
    *(_QWORD *)(v12 + 16) = v11;
    v241 = v12;
    v245 = (char *)(v12 + 32);
  }
  v14 = 0;
  v15 = *a1;
  v16 = (char *)MEMORY[0x1E0DEE9D8];
  v17 = 1.0;
  v18 = v244;
  v253 = *a1;
LABEL_16:
  v20 = v14 + 1;
  v249 = v16;
  v252 = v14;
  if (v14 + 1 >= v18)
  {
    v37 = v248;
    goto LABEL_112;
  }
  v21 = v15 + 112 * v20;
  v22 = *(_QWORD *)(v21 + 48);
  v282 = *(_QWORD *)(v21 + 40);
  v23 = *(double *)(v21 + 56);
  v24 = *(_QWORD *)(v21 + 72);
  v25 = *(_QWORD *)(v21 + 80);
  v26 = v15 + 112 * v14;
  v27 = *(_QWORD *)(v26 + 40);
  v257 = *(_QWORD *)(v26 + 48);
  v28 = *(double *)(v26 + 56);
  v30 = *(_QWORD *)(v26 + 72);
  v29 = *(_QWORD *)(v26 + 80);
  v31 = *(double *)(v248 + 912);
  v32 = *(double *)(v248 + 920);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D5DA2208(v24, v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = v30;
  sub_1D5DA2208(v30, v29);
  v35 = v32;
  if ((sub_1D5D7E22C(v254, v287, v22) & 1) == 0)
  {
    if ((sub_1D5D7E22C(v254, v287, v282) & 1) != 0)
      v35 = v31;
    else
      v35 = v17;
  }
  if ((sub_1D5D7E22C(v254, v287, v257) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D5DA2260(v30, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D5DA2260(v24, v25);
    v36 = v32;
  }
  else
  {
    v38 = sub_1D5D7E22C(v254, v287, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D5DA2260(v34, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D5DA2260(v24, v25);
    if ((v38 & 1) != 0)
      v36 = v31;
    else
      v36 = v17;
  }
  v37 = v248;
  v16 = v249;
  v39 = v23 * v35;
  v40 = v28 * v36;
  v15 = v253;
  v41 = v14 + 2;
  v42 = v14 + 1;
  if (v14 + 2 >= v244)
    goto LABEL_102;
  while (1)
  {
    v263 = v41;
    v43 = v15 + 112 * v41;
    v45 = *(_QWORD *)(v43 + 40);
    v44 = *(_QWORD *)(v43 + 48);
    v46 = *(double *)(v43 + 56);
    v47 = *(_QWORD *)(v43 + 72);
    v48 = *(_QWORD *)(v43 + 80);
    v49 = v15 + 112 * v42;
    v273 = v45;
    v270 = *(_QWORD *)(v49 + 48);
    v50 = *(double *)(v49 + 56);
    v267 = *(_QWORD *)(v49 + 72);
    v265 = *(_QWORD *)(v49 + 80);
    v258 = v48;
    v255 = *(_QWORD *)(v49 + 40);
    if (*(_QWORD *)(v44 + 16))
    {
      sub_1D5E379A4();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D5DA2208(v47, v48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v51 = v270;
      swift_bridgeObjectRetain();
      v52 = v267;
      v53 = v265;
      sub_1D5DA2208(v267, v265);
      sub_1D5E3744C();
      v54 = sub_1D5E379C8();
      v55 = -1 << *(_BYTE *)(v44 + 32);
      v56 = v54 & ~v55;
      if (((*(_QWORD *)(v44 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFF8)) >> v56) & 1) != 0)
      {
        v57 = *(_QWORD *)(v44 + 48);
        v58 = (_QWORD *)(v57 + 16 * v56);
        v59 = *v58 == v254 && v58[1] == v287;
        if (v59 || (sub_1D5E378FC() & 1) != 0)
        {
LABEL_35:
          v60 = v32;
          goto LABEL_45;
        }
        v74 = ~v55;
        while (1)
        {
          v56 = (v56 + 1) & v74;
          if (((*(_QWORD *)(v44 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFF8)) >> v56) & 1) == 0)
            break;
          v75 = (_QWORD *)(v57 + 16 * v56);
          v76 = *v75 == v254 && v75[1] == v287;
          if (v76 || (sub_1D5E378FC() & 1) != 0)
            goto LABEL_35;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D5DA2208(v47, v48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v51 = v270;
      swift_bridgeObjectRetain();
      v52 = v267;
      v53 = v265;
      sub_1D5DA2208(v267, v265);
    }
    v60 = 1.0;
    if (*(_QWORD *)(v273 + 16))
    {
      sub_1D5E379A4();
      sub_1D5E3744C();
      v61 = sub_1D5E379C8();
      v62 = -1 << *(_BYTE *)(v273 + 32);
      v63 = v61 & ~v62;
      if (((*(_QWORD *)(v273 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFF8)) >> v63) & 1) != 0)
      {
        v64 = *(_QWORD *)(v273 + 48);
        v65 = (_QWORD *)(v64 + 16 * v63);
        v66 = *v65 == v254 && v65[1] == v287;
        if (v66 || (sub_1D5E378FC() & 1) != 0)
        {
LABEL_44:
          v60 = v31;
        }
        else
        {
          v86 = ~v62;
          while (1)
          {
            v63 = (v63 + 1) & v86;
            if (((*(_QWORD *)(v273 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFF8)) >> v63) & 1) == 0)
              break;
            v87 = (_QWORD *)(v64 + 16 * v63);
            v88 = *v87 == v254 && v87[1] == v287;
            if (v88 || (sub_1D5E378FC() & 1) != 0)
              goto LABEL_44;
          }
        }
      }
    }
LABEL_45:
    if (*(_QWORD *)(v51 + 16))
    {
      sub_1D5E379A4();
      sub_1D5E3744C();
      v67 = sub_1D5E379C8();
      v68 = -1 << *(_BYTE *)(v51 + 32);
      v69 = v67 & ~v68;
      if (((*(_QWORD *)(v51 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) != 0)
      {
        v70 = *(_QWORD *)(v51 + 48);
        v71 = (_QWORD *)(v70 + 16 * v69);
        v72 = *v71 == v254 && v71[1] == v287;
        if (v72 || (sub_1D5E378FC() & 1) != 0)
        {
LABEL_52:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v73 = v32;
          goto LABEL_80;
        }
        v77 = ~v68;
        while (1)
        {
          v69 = (v69 + 1) & v77;
          if (((*(_QWORD *)(v51 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) == 0)
            break;
          v78 = (_QWORD *)(v70 + 16 * v69);
          v79 = *v78 == v254 && v78[1] == v287;
          if (v79 || (sub_1D5E378FC() & 1) != 0)
            goto LABEL_52;
        }
      }
    }
    if (*(_QWORD *)(v255 + 16)
      && (sub_1D5E379A4(),
          sub_1D5E3744C(),
          v80 = sub_1D5E379C8(),
          v81 = -1 << *(_BYTE *)(v255 + 32),
          v82 = v80 & ~v81,
          ((*(_QWORD *)(v255 + 56 + ((v82 >> 3) & 0xFFFFFFFFFFFFF8)) >> v82) & 1) != 0))
    {
      v83 = *(_QWORD *)(v255 + 48);
      v84 = (_QWORD *)(v83 + 16 * v82);
      v85 = *v84 == v254 && v84[1] == v287;
      if (v85 || (sub_1D5E378FC() & 1) != 0)
      {
LABEL_78:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v73 = v31;
      }
      else
      {
        v89 = ~v81;
        while (1)
        {
          v82 = (v82 + 1) & v89;
          if (((*(_QWORD *)(v255 + 56 + ((v82 >> 3) & 0xFFFFFFFFFFFFF8)) >> v82) & 1) == 0)
            break;
          v90 = (_QWORD *)(v83 + 16 * v82);
          v91 = *v90 == v254 && v90[1] == v287;
          if (v91 || (sub_1D5E378FC() & 1) != 0)
            goto LABEL_78;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v73 = 1.0;
      }
      v52 = v267;
      v53 = v265;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v73 = 1.0;
    }
LABEL_80:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D5DA2260(v52, v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D5DA2260(v47, v258);
    v16 = v249;
    if (v40 < v39 == v50 * v73 >= v46 * v60)
      break;
    v42 = v41++;
    v37 = v248;
    v15 = v253;
    if (v263 + 1 == v244)
    {
      v41 = v244;
      goto LABEL_101;
    }
  }
  v37 = v248;
  v15 = v253;
LABEL_101:
  v17 = 1.0;
  v14 = v252;
LABEL_102:
  if (v40 >= v39)
    goto LABEL_110;
  if (v41 < v14)
    goto LABEL_304;
  if (v14 >= v41)
  {
LABEL_110:
    v20 = v41;
  }
  else
  {
    v92 = 112 * v41;
    v264 = v41;
    v93 = v14;
    v94 = 112 * v14;
    do
    {
      if (v93 != --v41)
      {
        if (!v15)
          goto LABEL_309;
        v268 = *(_OWORD *)(v15 + v94);
        v95 = v15 + v92;
        v96 = *(_QWORD *)(v15 + v94 + 16);
        v97 = *(_QWORD *)(v15 + v94 + 56);
        v98 = *(_BYTE *)(v15 + v94 + 64);
        v99 = *(_BYTE *)(v15 + v94 + 65);
        v100 = *(_BYTE *)(v15 + v94 + 66);
        v271 = *(_BYTE *)(v15 + v94 + 67);
        v283 = *(_BYTE *)(v15 + v94 + 88);
        __srca = *(void **)(v15 + v94 + 96);
        v274 = *(_BYTE *)(v15 + v94 + 104);
        v261 = *(_OWORD *)(v15 + v94 + 40);
        v262 = *(_OWORD *)(v15 + v94 + 24);
        v266 = *(_OWORD *)(v15 + v94 + 72);
        memmove((void *)(v15 + v94), (const void *)(v15 + v92 - 112), 0x70uLL);
        v15 = v253;
        *(_OWORD *)(v95 - 112) = v268;
        *(_QWORD *)(v95 - 96) = v96;
        *(_OWORD *)(v95 - 88) = v262;
        *(_OWORD *)(v95 - 72) = v261;
        *(_QWORD *)(v95 - 56) = v97;
        *(_BYTE *)(v95 - 48) = v98;
        *(_BYTE *)(v95 - 47) = v99;
        *(_BYTE *)(v95 - 46) = v100;
        *(_BYTE *)(v95 - 45) = v271;
        *(_OWORD *)(v95 - 40) = v266;
        *(_BYTE *)(v95 - 24) = v283;
        *(_QWORD *)(v95 - 16) = __srca;
        *(_BYTE *)(v95 - 8) = v274;
        v16 = v249;
      }
      ++v93;
      v92 -= 112;
      v94 += 112;
    }
    while (v93 < v41);
    v20 = v264;
    v37 = v248;
    v14 = v252;
  }
LABEL_112:
  if (v20 >= v244)
    goto LABEL_213;
  if (__OFSUB__(v20, v14))
    goto LABEL_301;
  if (v20 - v14 >= v242)
    goto LABEL_213;
  v101 = v14 + v242;
  if (__OFADD__(v14, v242))
    goto LABEL_305;
  if (v101 >= v244)
    v101 = v244;
  if (v101 >= v14)
  {
    if (v20 == v101)
      goto LABEL_213;
    v102 = *(double *)(v37 + 912);
    v103 = *(double *)(v37 + 920);
    v243 = v101;
LABEL_123:
    v246 = v20;
    v104 = v20;
    while (2)
    {
      v256 = v104;
      v105 = v15 + 112 * v104;
      v106 = *(_QWORD *)(v105 + 48);
      v107 = *(double *)(v105 + 56);
      v108 = *(_QWORD *)(v105 + 72);
      v109 = *(_QWORD *)(v105 + 80);
      v269 = *(_QWORD *)(v105 - 72);
      v110 = *(double *)(v105 - 56);
      v272 = *(_QWORD *)(v105 - 40);
      v275 = *(_QWORD *)(v105 - 64);
      v284 = *(_QWORD *)(v105 - 32);
      __src = *(_QWORD **)(v105 + 40);
      v260 = v108;
      v259 = v109;
      if (*(_QWORD *)(v106 + 16))
      {
        sub_1D5E379A4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v108, v109);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v272, v284);
        sub_1D5E3744C();
        v111 = sub_1D5E379C8();
        v112 = -1 << *(_BYTE *)(v106 + 32);
        v113 = v111 & ~v112;
        v114 = v106 + 56;
        if (((*(_QWORD *)(v106 + 56 + ((v113 >> 3) & 0xFFFFFFFFFFFFF8)) >> v113) & 1) != 0)
        {
          v115 = *(_QWORD *)(v106 + 48);
          v116 = (_QWORD *)(v115 + 16 * v113);
          if (*v116 != v254 || v116[1] != v287)
          {
            v118 = v254;
            if ((sub_1D5E378FC() & 1) != 0)
            {
              v119 = v103;
              goto LABEL_144;
            }
            v129 = ~v112;
            v130 = (v113 + 1) & v129;
            v120 = v284;
            if (((*(_QWORD *)(v114 + ((v130 >> 3) & 0xFFFFFFFFFFFFF8)) >> v130) & 1) == 0)
              break;
            while (1)
            {
              v131 = (_QWORD *)(v115 + 16 * v130);
              v132 = *v131 == v254 && v131[1] == v287;
              if (v132 || (sub_1D5E378FC() & 1) != 0)
                break;
              v130 = (v130 + 1) & v129;
              if (((*(_QWORD *)(v114 + ((v130 >> 3) & 0xFFFFFFFFFFFFF8)) >> v130) & 1) == 0)
                goto LABEL_134;
            }
            v119 = v103;
LABEL_164:
            v128 = v275;
LABEL_165:
            if (*(_QWORD *)(v128 + 16))
              goto LABEL_166;
LABEL_174:
            v145 = v272;
            if (!*(_QWORD *)(v269 + 16))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v144 = 1.0;
              goto LABEL_187;
            }
            sub_1D5E379A4();
            sub_1D5E3744C();
            v146 = sub_1D5E379C8();
            v147 = -1 << *(_BYTE *)(v269 + 32);
            v148 = v146 & ~v147;
            v149 = v269 + 56;
            if (((*(_QWORD *)(v269 + 56 + ((v148 >> 3) & 0xFFFFFFFFFFFFF8)) >> v148) & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v144 = 1.0;
              goto LABEL_186;
            }
            v150 = *(_QWORD *)(v269 + 48);
            v151 = (_QWORD *)(v150 + 16 * v148);
            v152 = *v151 == v118 && v151[1] == v287;
            if (!v152 && (sub_1D5E378FC() & 1) == 0)
            {
              v174 = ~v147;
              v175 = (v148 + 1) & v174;
              v120 = v284;
              if (((*(_QWORD *)(v149 + ((v175 >> 3) & 0xFFFFFFFFFFFFF8)) >> v175) & 1) != 0)
              {
                while (1)
                {
                  v176 = (_QWORD *)(v150 + 16 * v175);
                  v177 = *v176 == v118 && v176[1] == v287;
                  if (v177 || (sub_1D5E378FC() & 1) != 0)
                    break;
                  v175 = (v175 + 1) & v174;
                  if (((*(_QWORD *)(v149 + ((v175 >> 3) & 0xFFFFFFFFFFFFF8)) >> v175) & 1) == 0)
                    goto LABEL_206;
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v144 = v102;
              }
              else
              {
LABEL_206:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v144 = 1.0;
              }
LABEL_209:
              v145 = v272;
              goto LABEL_187;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v144 = v102;
LABEL_185:
            v145 = v272;
LABEL_186:
            v120 = v284;
LABEL_187:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1D5DA2260(v145, v120);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1D5DA2260(v260, v259);
            v14 = v252;
            if (v110 * v144 < v107 * v119)
            {
              v15 = v253;
              if (!v253)
                goto LABEL_307;
              --v104;
              v153 = *(_OWORD *)v105;
              v154 = v105 - 112;
              v155 = *(_QWORD *)(v105 + 16);
              v156 = *(_QWORD *)(v105 + 56);
              v157 = *(_BYTE *)(v105 + 64);
              v158 = *(_BYTE *)(v105 + 65);
              v159 = *(_BYTE *)(v105 + 66);
              v160 = *(_BYTE *)(v105 + 67);
              v161 = *(_BYTE *)(v105 + 88);
              v162 = *(_QWORD *)(v105 + 96);
              v163 = *(_BYTE *)(v105 + 104);
              v164 = *(_OWORD *)(v105 + 24);
              v165 = *(_OWORD *)(v105 + 40);
              v166 = *(_OWORD *)(v105 + 72);
              v167 = *(_OWORD *)(v105 - 32);
              *(_OWORD *)(v105 + 64) = *(_OWORD *)(v105 - 48);
              *(_OWORD *)(v105 + 80) = v167;
              *(_OWORD *)(v105 + 96) = *(_OWORD *)(v105 - 16);
              v168 = *(_OWORD *)(v105 - 96);
              *(_OWORD *)v105 = *(_OWORD *)(v105 - 112);
              *(_OWORD *)(v105 + 16) = v168;
              v169 = *(_OWORD *)(v105 - 64);
              *(_OWORD *)(v105 + 32) = *(_OWORD *)(v105 - 80);
              *(_OWORD *)(v105 + 48) = v169;
              *(_OWORD *)v154 = v153;
              *(_QWORD *)(v154 + 16) = v155;
              *(_OWORD *)(v154 + 24) = v164;
              *(_OWORD *)(v154 + 40) = v165;
              *(_QWORD *)(v154 + 56) = v156;
              *(_BYTE *)(v154 + 64) = v157;
              *(_BYTE *)(v154 + 65) = v158;
              *(_BYTE *)(v154 + 66) = v159;
              *(_BYTE *)(v154 + 67) = v160;
              *(_OWORD *)(v154 + 72) = v166;
              *(_BYTE *)(v154 + 88) = v161;
              *(_QWORD *)(v154 + 96) = v162;
              *(_BYTE *)(v154 + 104) = v163;
              if (v256 - 1 == v252)
                goto LABEL_122;
              continue;
            }
            v15 = v253;
LABEL_122:
            v20 = v246 + 1;
            if (v246 + 1 != v243)
              goto LABEL_123;
            v20 = v243;
            v16 = v249;
LABEL_213:
            if (v20 < v14)
              goto LABEL_296;
            v178 = v16;
            v247 = v20;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              v16 = v178;
            else
              v16 = sub_1D5E258D0(0, *((_QWORD *)v178 + 2) + 1, 1, v178);
            v180 = *((_QWORD *)v16 + 2);
            v179 = *((_QWORD *)v16 + 3);
            v19 = v180 + 1;
            v15 = v253;
            if (v180 >= v179 >> 1)
            {
              v230 = sub_1D5E258D0((char *)(v179 > 1), v180 + 1, 1, v16);
              v15 = v253;
              v16 = v230;
            }
            *((_QWORD *)v16 + 2) = v19;
            v276 = v16 + 32;
            v181 = &v16[16 * v180 + 32];
            *(_QWORD *)v181 = v14;
            *((_QWORD *)v181 + 1) = v247;
            if (v180)
            {
              v182 = v16 + 32;
              v250 = v16;
              while (1)
              {
                v183 = v19 - 1;
                if (v19 >= 4)
                {
                  v188 = &v182[16 * v19];
                  v189 = *((_QWORD *)v188 - 8);
                  v190 = *((_QWORD *)v188 - 7);
                  v194 = __OFSUB__(v190, v189);
                  v191 = v190 - v189;
                  if (v194)
                    goto LABEL_285;
                  v193 = *((_QWORD *)v188 - 6);
                  v192 = *((_QWORD *)v188 - 5);
                  v194 = __OFSUB__(v192, v193);
                  v186 = v192 - v193;
                  v187 = v194;
                  if (v194)
                    goto LABEL_286;
                  v195 = v19 - 2;
                  v196 = &v182[16 * v19 - 32];
                  v198 = *(_QWORD *)v196;
                  v197 = *((_QWORD *)v196 + 1);
                  v194 = __OFSUB__(v197, v198);
                  v199 = v197 - v198;
                  if (v194)
                    goto LABEL_287;
                  v194 = __OFADD__(v186, v199);
                  v200 = v186 + v199;
                  if (v194)
                    goto LABEL_289;
                  if (v200 >= v191)
                  {
                    v218 = &v182[16 * v183];
                    v220 = *(_QWORD *)v218;
                    v219 = *((_QWORD *)v218 + 1);
                    v194 = __OFSUB__(v219, v220);
                    v221 = v219 - v220;
                    if (v194)
                      goto LABEL_295;
                    v211 = v186 < v221;
                    goto LABEL_251;
                  }
                }
                else
                {
                  if (v19 != 3)
                  {
                    v212 = *((_QWORD *)v16 + 4);
                    v213 = *((_QWORD *)v16 + 5);
                    v194 = __OFSUB__(v213, v212);
                    v205 = v213 - v212;
                    v206 = v194;
                    goto LABEL_245;
                  }
                  v185 = *((_QWORD *)v16 + 4);
                  v184 = *((_QWORD *)v16 + 5);
                  v194 = __OFSUB__(v184, v185);
                  v186 = v184 - v185;
                  v187 = v194;
                }
                if ((v187 & 1) != 0)
                  goto LABEL_288;
                v195 = v19 - 2;
                v201 = &v182[16 * v19 - 32];
                v203 = *(_QWORD *)v201;
                v202 = *((_QWORD *)v201 + 1);
                v204 = __OFSUB__(v202, v203);
                v205 = v202 - v203;
                v206 = v204;
                if (v204)
                  goto LABEL_290;
                v207 = &v182[16 * v183];
                v209 = *(_QWORD *)v207;
                v208 = *((_QWORD *)v207 + 1);
                v194 = __OFSUB__(v208, v209);
                v210 = v208 - v209;
                if (v194)
                  goto LABEL_292;
                if (__OFADD__(v205, v210))
                  goto LABEL_294;
                if (v205 + v210 >= v186)
                {
                  v211 = v186 < v210;
LABEL_251:
                  if (v211)
                    v183 = v195;
                  goto LABEL_253;
                }
LABEL_245:
                if ((v206 & 1) != 0)
                  goto LABEL_291;
                v214 = &v182[16 * v183];
                v216 = *(_QWORD *)v214;
                v215 = *((_QWORD *)v214 + 1);
                v194 = __OFSUB__(v215, v216);
                v217 = v215 - v216;
                if (v194)
                  goto LABEL_293;
                if (v217 < v205)
                  goto LABEL_15;
LABEL_253:
                v222 = v183 - 1;
                if (v183 - 1 >= v19)
                {
                  __break(1u);
LABEL_282:
                  __break(1u);
LABEL_283:
                  __break(1u);
LABEL_284:
                  __break(1u);
LABEL_285:
                  __break(1u);
LABEL_286:
                  __break(1u);
LABEL_287:
                  __break(1u);
LABEL_288:
                  __break(1u);
LABEL_289:
                  __break(1u);
LABEL_290:
                  __break(1u);
LABEL_291:
                  __break(1u);
LABEL_292:
                  __break(1u);
LABEL_293:
                  __break(1u);
LABEL_294:
                  __break(1u);
LABEL_295:
                  __break(1u);
LABEL_296:
                  __break(1u);
LABEL_297:
                  __break(1u);
LABEL_298:
                  __break(1u);
LABEL_299:
                  __break(1u);
LABEL_300:
                  __break(1u);
LABEL_301:
                  __break(1u);
LABEL_302:
                  __break(1u);
LABEL_303:
                  __break(1u);
LABEL_304:
                  __break(1u);
LABEL_305:
                  __break(1u);
                  goto LABEL_306;
                }
                if (!v15)
                  goto LABEL_308;
                v223 = &v182[16 * v222];
                v224 = *(_QWORD *)v223;
                v225 = v183;
                v226 = &v182[16 * v183];
                v227 = *((_QWORD *)v226 + 1);
                v228 = (char *)(v15 + 112 * *(_QWORD *)v223);
                v285 = (char *)(v15 + 112 * *(_QWORD *)v226);
                __srcb = (char *)(v15 + 112 * v227);
                swift_bridgeObjectRetain();
                a4 = v248;
                sub_1D5DBBE24(v248);
                sub_1D5E1185C(v228, v285, __srcb, v245, v254, v287, v248);
                if (v251)
                {
LABEL_262:
                  sub_1D5DBE3F4(a4);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  *(_QWORD *)(v241 + 16) = 0;
                  goto LABEL_277;
                }
                sub_1D5DBE3F4(v248);
                swift_bridgeObjectRelease();
                if (v227 < v224)
                  goto LABEL_282;
                if (v225 > *((_QWORD *)v250 + 2))
                  goto LABEL_283;
                *(_QWORD *)v223 = v224;
                v182 = v276;
                *(_QWORD *)&v276[16 * v222 + 8] = v227;
                v229 = *((_QWORD *)v250 + 2);
                if (v225 >= v229)
                  goto LABEL_284;
                v19 = v229 - 1;
                memmove(v226, v226 + 16, 16 * (v229 - 1 - v225));
                v16 = v250;
                *((_QWORD *)v250 + 2) = v229 - 1;
                v15 = v253;
                if (v229 <= 2)
                  goto LABEL_15;
              }
            }
            v19 = 1;
LABEL_15:
            v18 = v244;
            v14 = v247;
            if (v247 < v244)
              goto LABEL_16;
            v13 = v241;
LABEL_265:
            v241 = v13;
            if (v19 >= 2)
            {
              v231 = *v240;
              v277 = *v240;
              do
              {
                v232 = v19 - 2;
                if (v19 < 2)
                  goto LABEL_297;
                if (!v231)
                  goto LABEL_310;
                v233 = v16;
                v234 = *(_QWORD *)&v16[16 * v232 + 32];
                v235 = *(_QWORD *)&v16[16 * v19 + 24];
                v286 = (char *)(v231 + 112 * v234);
                __srcc = (char *)(v231 + 112 * *(_QWORD *)&v16[16 * v19 + 16]);
                v236 = (char *)(v231 + 112 * v235);
                swift_bridgeObjectRetain();
                sub_1D5DBBE24(v248);
                sub_1D5E1185C(v286, __srcc, v236, v245, v254, v287, v248);
                if (v251)
                {
                  a4 = v248;
                  goto LABEL_262;
                }
                sub_1D5DBE3F4(v248);
                swift_bridgeObjectRelease();
                if (v235 < v234)
                  goto LABEL_298;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v233 = sub_1D5E259C8((uint64_t)v233);
                if (v232 >= *((_QWORD *)v233 + 2))
                  goto LABEL_299;
                v237 = &v233[16 * v232 + 32];
                *(_QWORD *)v237 = v234;
                *((_QWORD *)v237 + 1) = v235;
                v238 = *((_QWORD *)v233 + 2);
                if (v19 > v238)
                  goto LABEL_300;
                memmove(&v233[16 * v19 + 16], &v233[16 * v19 + 32], 16 * (v238 - v19));
                v16 = v233;
                *((_QWORD *)v233 + 2) = v238 - 1;
                v19 = v238 - 1;
                v231 = v277;
              }
              while (v238 > 2);
            }
            swift_bridgeObjectRelease();
            *(_QWORD *)(v241 + 16) = 0;
            a4 = v248;
LABEL_277:
            swift_bridgeObjectRelease();
            goto LABEL_278;
          }
          v119 = v103;
          v118 = v254;
LABEL_144:
          v120 = v284;
          goto LABEL_164;
        }
        v118 = v254;
        v120 = v284;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v108, v109);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v120 = v284;
        sub_1D5DA2208(v272, v284);
        v118 = v254;
      }
      break;
    }
LABEL_134:
    v119 = 1.0;
    if (!__src[2])
      goto LABEL_164;
    sub_1D5E379A4();
    sub_1D5E3744C();
    v121 = sub_1D5E379C8();
    v122 = -1 << *((_BYTE *)__src + 32);
    v123 = v121 & ~v122;
    v124 = (char *)(__src + 7);
    if (((*(_QWORD *)((char *)__src + ((v123 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v123) & 1) != 0)
    {
      v125 = __src[6];
      v126 = (_QWORD *)(v125 + 16 * v123);
      v127 = *v126 == v118 && v126[1] == v287;
      v128 = v275;
      if (v127)
      {
        v119 = v102;
        v120 = v284;
        if (*(_QWORD *)(v275 + 16))
          goto LABEL_166;
        goto LABEL_174;
      }
      if ((sub_1D5E378FC() & 1) != 0)
      {
        v119 = v102;
        v120 = v284;
        if (*(_QWORD *)(v275 + 16))
          goto LABEL_166;
        goto LABEL_174;
      }
      v133 = ~v122;
      v134 = (v123 + 1) & v133;
      v120 = v284;
      if (((*(_QWORD *)&v124[(v134 >> 3) & 0xFFFFFFFFFFFFF8] >> v134) & 1) == 0)
        goto LABEL_165;
      while (1)
      {
        v135 = (_QWORD *)(v125 + 16 * v134);
        v136 = *v135 == v118 && v135[1] == v287;
        if (v136 || (sub_1D5E378FC() & 1) != 0)
          break;
        v134 = (v134 + 1) & v133;
        if (((*(_QWORD *)&v124[(v134 >> 3) & 0xFFFFFFFFFFFFF8] >> v134) & 1) == 0)
          goto LABEL_165;
      }
      v119 = v102;
      if (!*(_QWORD *)(v275 + 16))
        goto LABEL_174;
LABEL_166:
      sub_1D5E379A4();
      sub_1D5E3744C();
      v137 = sub_1D5E379C8();
      v138 = -1 << *(_BYTE *)(v128 + 32);
      v139 = v137 & ~v138;
      v140 = v128 + 56;
      if (((*(_QWORD *)(v128 + 56 + ((v139 >> 3) & 0xFFFFFFFFFFFFF8)) >> v139) & 1) == 0)
      {
        v120 = v284;
        goto LABEL_174;
      }
      v141 = *(_QWORD *)(v128 + 48);
      v142 = (_QWORD *)(v141 + 16 * v139);
      v143 = *v142 == v118 && v142[1] == v287;
      if (v143 || (sub_1D5E378FC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v144 = v103;
        goto LABEL_185;
      }
      v170 = ~v138;
      v171 = (v139 + 1) & v170;
      v120 = v284;
      if (((*(_QWORD *)(v140 + ((v171 >> 3) & 0xFFFFFFFFFFFFF8)) >> v171) & 1) == 0)
        goto LABEL_174;
      while (1)
      {
        v172 = (_QWORD *)(v141 + 16 * v171);
        v173 = *v172 == v118 && v172[1] == v287;
        if (v173 || (sub_1D5E378FC() & 1) != 0)
          break;
        v171 = (v171 + 1) & v170;
        if (((*(_QWORD *)(v140 + ((v171 >> 3) & 0xFFFFFFFFFFFFF8)) >> v171) & 1) == 0)
          goto LABEL_174;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v144 = v103;
      goto LABEL_209;
    }
    goto LABEL_144;
  }
LABEL_306:
  __break(1u);
LABEL_307:
  swift_bridgeObjectRelease();
  sub_1D5DBE3F4(v248);
  swift_bridgeObjectRelease();
  sub_1D5DBE3F4(v248);
  swift_bridgeObjectRelease();
  sub_1D5DBE3F4(v248);
  __break(1u);
LABEL_308:
  swift_bridgeObjectRelease();
  sub_1D5DBE3F4(v248);
  swift_bridgeObjectRelease();
  sub_1D5DBE3F4(v248);
  swift_bridgeObjectRelease();
  sub_1D5DBE3F4(v248);
  __break(1u);
LABEL_309:
  swift_bridgeObjectRelease();
  sub_1D5DBE3F4(v248);
  swift_bridgeObjectRelease();
  sub_1D5DBE3F4(v248);
  swift_bridgeObjectRelease();
  sub_1D5DBE3F4(v248);
  __break(1u);
LABEL_310:
  swift_bridgeObjectRelease();
  sub_1D5DBE3F4(v248);
  swift_bridgeObjectRelease();
  sub_1D5DBE3F4(v248);
  swift_bridgeObjectRelease();
  result = sub_1D5DBE3F4(v248);
  __break(1u);
  return result;
}

uint64_t sub_1D5E14410(char **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v8;
  uint64_t v9;
  uint64_t v11[2];

  v8 = *a1;
  swift_bridgeObjectRetain();
  sub_1D5DBBE24(a4);
  swift_bridgeObjectRetain();
  sub_1D5DBBE24(a4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = sub_1D5E26028((uint64_t)v8);
  v9 = *((_QWORD *)v8 + 2);
  v11[0] = (uint64_t)(v8 + 32);
  v11[1] = v9;
  swift_bridgeObjectRetain();
  sub_1D5DBBE24(a4);
  sub_1D5E12B00(v11, a2, a3, a4);
  sub_1D5DBE3F4(a4);
  swift_bridgeObjectRelease();
  *a1 = v8;
  swift_bridgeObjectRelease();
  sub_1D5DBE3F4(a4);
  swift_bridgeObjectRelease();
  return sub_1D5DBE3F4(a4);
}

void sub_1D5E14500(uint64_t a1, uint64_t a2, double *a3, double (*a4)(char *, double, double))
{
  uint64_t v4;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
    goto LABEL_24;
  if (v4)
  {
    v8 = a1;
    v18 = MEMORY[0x1E0DEE9D8];
    v9 = sub_1D5DB9DF0(0, v4 & ~(v4 >> 63), 0);
    if (a2 < v8 || v4 < 0)
      goto LABEL_25;
    v10 = *a3;
    v11 = *((_QWORD *)a3 + 1);
    v12 = *(_QWORD *)(v11 + 16);
    v17 = v11 + 32;
    while (a2 != v8)
    {
      v13 = v10;
      if ((v8 & 0x8000000000000000) == 0)
      {
        v13 = v10;
        if (v8 < v12)
          v13 = *(double *)(v17 + 8 * v8);
      }
      if (v13 <= 0.0)
      {
        if (v13 < 0.0)
        {
          if (a4(v9, 0.0, 1.0) > -v13)
            v14 = 1;
          else
            v14 = 2;
        }
        else
        {
          v14 = 0;
        }
      }
      else if (a4(v9, 0.0, 1.0) <= v13)
      {
        v14 = 1;
      }
      else
      {
        v14 = 2;
      }
      v16 = *(_QWORD *)(v18 + 16);
      v15 = *(_QWORD *)(v18 + 24);
      if (v16 >= v15 >> 1)
        v9 = sub_1D5DB9DF0((char *)(v15 > 1), v16 + 1, 1);
      *(_QWORD *)(v18 + 16) = v16 + 1;
      *(_BYTE *)(v18 + v16 + 32) = v14;
      if (a2 == ++v8)
        return;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
}

uint64_t sub_1D5E14690(uint64_t a1, void (*a2)(uint64_t, uint64_t, char *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  int64_t v26;
  char v27[8];
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  uint64_t v32;
  char v33;
  int64_t v34;

  v3 = v2;
  v6 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v34 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    v20 = *(_QWORD *)(a1 + 56) + (i << 6);
    v21 = *(_QWORD *)(v20 + 8);
    v22 = *(_QWORD *)(v20 + 16);
    v23 = *(_BYTE *)(v20 + 40);
    v24 = *(_QWORD *)(v20 + 48);
    v25 = *(_BYTE *)(v20 + 56);
    v27[0] = *(_BYTE *)v20;
    v28 = v21;
    v29 = v22;
    v30 = *(_OWORD *)(v20 + 24);
    v31 = v23;
    v32 = v24;
    v33 = v25;
    swift_bridgeObjectRetain();
    a2(v18, v19, v27);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v34)
      return swift_release();
    v15 = *(_QWORD *)(v6 + 8 * v11);
    if (!v15)
    {
      v16 = v11 + 1;
      if (v11 + 1 >= v34)
        return swift_release();
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
        goto LABEL_14;
      v16 = v11 + 2;
      if (v11 + 2 >= v34)
        return swift_release();
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
        goto LABEL_14;
      v16 = v11 + 3;
      if (v11 + 3 >= v34)
        return swift_release();
      v15 = *(_QWORD *)(v6 + 8 * v16);
      if (v15)
      {
LABEL_14:
        v11 = v16;
        goto LABEL_15;
      }
      v26 = v11 + 4;
      if (v11 + 4 >= v34)
        return swift_release();
      v15 = *(_QWORD *)(v6 + 8 * v26);
      v11 += 4;
      if (!v15)
        break;
    }
LABEL_15:
    v9 = (v15 - 1) & v15;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v34)
      return swift_release();
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v26;
    if (v15)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1D5E148A4()
{
  __asm { BR              X11 }
}

void sub_1D5E14918(int a1@<W3>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  if (((a1 | a2) & 1) != 0)
    return;
  v4 = *(_QWORD *)(v2 + 16);
  if (!v4)
  {
    if (v3 > 0)
      return;
    goto LABEL_9;
  }
  v5 = 0;
  v6 = (_BYTE *)(v2 + 96);
  do
  {
    v7 = (*v6 & 1) == 0;
    v8 = __OFADD__(v5, v7);
    v5 += v7;
    if (v8)
    {
      __break(1u);
      JUMPOUT(0x1D5E154F8);
    }
    v6 += 112;
    --v4;
  }
  while (v4);
  if (v5 >= v3)
  {
LABEL_9:
    sub_1D5E1E2B0();
    swift_allocError();
    *(_QWORD *)v9 = v3;
    *(_OWORD *)(v9 + 8) = 0u;
    *(_OWORD *)(v9 + 24) = 0u;
    *(_BYTE *)(v9 + 40) = 0;
    swift_willThrow();
  }
}

uint64_t sub_1D5E155D4(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char **v13;
  uint64_t v14;
  char *v15;
  void *v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  char **v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t (*)());
  uint64_t v46;
  void (*v47)(uint64_t (*)());
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  char v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  unint64_t v72;
  char v73;
  char **v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  char v80;
  char **v81;
  uint64_t v82;
  char *v83;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _OWORD v93[2];

  v10 = a8;
  v11 = a7;
  v12 = a6;
  v13 = (char **)(a3 + 16);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = (char *)(a5 + 16);
  v81 = (char **)(a3 + 16);
  v83 = (char *)(a5 + 16);
  if (v14)
  {
    v72 = a8;
    v77 = a7;
    v74 = (char **)(a9 + 16);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    swift_beginAccess();
    v17 = 0;
    v75 = a1;
    v18 = (unsigned __int8 *)(a1 + 56);
    while (1)
    {
      v87 = v14;
      v20 = *((_QWORD *)v18 - 3);
      v19 = *((_QWORD *)v18 - 2);
      v21 = *((_QWORD *)v18 - 1);
      v22 = *v18;
      v23 = a2[5];
      v92 = a2[4];
      v93[0] = v23;
      *(_OWORD *)((char *)v93 + 9) = *(__int128 *)((char *)a2 + 89);
      v24 = a2[1];
      v88 = *a2;
      v89 = v24;
      v25 = a2[3];
      v90 = a2[2];
      v91 = v25;
      v26 = a4 + *(_QWORD *)v15;
      if (__OFADD__(a4, *(_QWORD *)v15))
        break;
      sub_1D5E1CE34(v20, v19, v21, v22);
      swift_bridgeObjectRetain();
      sub_1D5E148A4();
      v18 += 32;
      swift_bridgeObjectRelease();
      sub_1D5E01820(v20, v19, v21, v22);
      v14 = v87 - 1;
      v13 = v81;
      v15 = v83;
      if (v87 == 1)
      {
        swift_bridgeObjectRelease();
        v11 = v77;
        v12 = a6;
        v10 = v72;
        goto LABEL_6;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
LABEL_6:
  swift_beginAccess();
  *((_BYTE *)v12 + 88) = 0;
  if (v11)
  {
    swift_beginAccess();
    v27 = *v12;
    v28 = v12[1];
    v29 = v12[7];
    swift_beginAccess();
    v30 = *((_QWORD *)*v13 + 2);
    *(_QWORD *)&v88 = v27;
    *((_QWORD *)&v88 + 1) = v28;
    *(_QWORD *)&v89 = v29;
    *((_QWORD *)&v89 + 1) = v30;
    v90 = v10;
    v91 = 0uLL;
    LOBYTE(v92) = 0;
    swift_bridgeObjectRetain();
    ClusteringJournal.record(event:)((uint64_t)&v88);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v31 = v12[1];
  a4 = *v12;
  v17 = (void *)v12[3];
  v77 = v12[2];
  v19 = v12[4];
  v18 = (unsigned __int8 *)v12[5];
  v32 = v12;
  v22 = v12[6];
  v9 = v12[7];
  v75 = *((_BYTE *)v12 + 64);
  LODWORD(v74) = *((unsigned __int8 *)v12 + 65);
  LOBYTE(v72) = *((_BYTE *)v12 + 66);
  v33 = *((_BYTE *)v12 + 67);
  v34 = v12[9];
  v35 = v32[10];
  v68 = *((_BYTE *)v32 + 88);
  v70 = v33;
  v66 = v32[12];
  v64 = *((_BYTE *)v32 + 104);
  swift_beginAccess();
  v15 = *v13;
  v87 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36 = v13;
  v13 = (char **)v34;
  v37 = v34;
  v26 = v35;
  sub_1D5DA2208(v37, v35);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v36 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_25:
    v15 = sub_1D5DAAFFC(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
    *v81 = v15;
  }
  v40 = *((_QWORD *)v15 + 2);
  v39 = *((_QWORD *)v15 + 3);
  if (v40 >= v39 >> 1)
  {
    v15 = sub_1D5DAAFFC((char *)(v39 > 1), v40 + 1, 1, v15);
    *v81 = v15;
  }
  *((_QWORD *)v15 + 2) = v40 + 1;
  v41 = &v15[112 * v40];
  *((_QWORD *)v41 + 4) = a4;
  *((_QWORD *)v41 + 5) = v87;
  *((_QWORD *)v41 + 6) = v77;
  *((_QWORD *)v41 + 7) = v17;
  *((_QWORD *)v41 + 8) = v19;
  *((_QWORD *)v41 + 9) = v18;
  *((_QWORD *)v41 + 10) = v22;
  *((_QWORD *)v41 + 11) = v9;
  v41[96] = v75;
  v41[97] = (char)v74;
  v41[98] = v72;
  v41[99] = v70;
  *((_QWORD *)v41 + 13) = v13;
  *((_QWORD *)v41 + 14) = v26;
  v41[120] = v68;
  *((_QWORD *)v41 + 16) = v66;
  v41[136] = v64;
  v42 = swift_beginAccess();
  if (*((_BYTE *)a6 + 66) != 1)
    goto LABEL_15;
  v42 = swift_beginAccess();
  if ((a6[8] & 1) != 0)
    goto LABEL_15;
  v42 = swift_beginAccess();
  if (!__OFADD__(*(_QWORD *)v83, 1))
  {
    ++*(_QWORD *)v83;
LABEL_15:
    if (qword_1ED9ADB98 != -1)
      v42 = swift_once();
    MEMORY[0x1E0C80A78](v42, v43);
    v44(sub_1D5E1E364);
    return 1;
  }
  __break(1u);
  v62 = swift_once();
  MEMORY[0x1E0C80A78](v62, v46);
  v47(sub_1D5E1E31C);
  swift_beginAccess();
  v48 = *(_QWORD *)(v22 + 8);
  v82 = *(_QWORD *)v22;
  v49 = *(_QWORD *)(v22 + 24);
  v78 = *(_QWORD *)(v22 + 16);
  v50 = *(_QWORD *)(v22 + 32);
  v51 = *(_QWORD *)(v22 + 40);
  v52 = *(_QWORD *)(v22 + 48);
  v53 = *(_QWORD *)(v22 + 56);
  v76 = *(_BYTE *)(v22 + 64);
  v73 = *(_BYTE *)(v22 + 65);
  v69 = *(_BYTE *)(v22 + 67);
  v71 = *(_BYTE *)(v22 + 66);
  v54 = v22;
  v55 = *(_QWORD *)(v22 + 72);
  v56 = *(_QWORD *)(v22 + 80);
  v67 = *(_BYTE *)(v54 + 88);
  v63 = v52;
  v65 = *(_QWORD *)(v54 + 96);
  v80 = *(_BYTE *)(v54 + 104);
  swift_beginAccess();
  v57 = *v74;
  swift_bridgeObjectRetain();
  v86 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D5DA2208(v55, v56);
  v58 = swift_isUniquelyReferenced_nonNull_native();
  *v74 = v57;
  if ((v58 & 1) == 0)
  {
    v57 = sub_1D5DAAFFC(0, *((_QWORD *)v57 + 2) + 1, 1, v57);
    *v74 = v57;
  }
  v60 = *((_QWORD *)v57 + 2);
  v59 = *((_QWORD *)v57 + 3);
  if (v60 >= v59 >> 1)
  {
    v57 = sub_1D5DAAFFC((char *)(v59 > 1), v60 + 1, 1, v57);
    *v74 = v57;
  }
  *((_QWORD *)v57 + 2) = v60 + 1;
  v61 = &v57[112 * v60];
  *((_QWORD *)v61 + 4) = v82;
  *((_QWORD *)v61 + 5) = v48;
  *((_QWORD *)v61 + 6) = v78;
  *((_QWORD *)v61 + 7) = v86;
  *((_QWORD *)v61 + 8) = v50;
  *((_QWORD *)v61 + 9) = v51;
  *((_QWORD *)v61 + 10) = v63;
  *((_QWORD *)v61 + 11) = v53;
  v61[96] = v76;
  v61[97] = v73;
  v61[98] = v71;
  v61[99] = v69;
  *((_QWORD *)v61 + 13) = v55;
  *((_QWORD *)v61 + 14) = v56;
  v61[120] = v67;
  *((_QWORD *)v61 + 16) = v65;
  v61[136] = v80;

  return 1;
}

uint64_t sub_1D5E166F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v7 = a3 >> 1;
  result = swift_beginAccess();
  if (v7 == a2)
    return MEMORY[0x1E0DEE9D8];
  v37 = a4;
  v34 = MEMORY[0x1E0DEE9D8];
  v35 = a2;
  v9 = a2;
  v10 = a1;
  v38 = a1;
  v36 = v7;
  do
  {
    v47 = v9;
    while (1)
    {
      if (v47 < a2 || v9 >= v7)
      {
        __break(1u);
        return result;
      }
      v11 = (uint64_t *)(v10 + 112 * v9);
      v12 = *v11;
      v13 = v11[1];
      v39 = v11[2];
      v14 = v11[5];
      v15 = v11[6];
      v16 = v11[7];
      v45 = *((_BYTE *)v11 + 65);
      v46 = *((_BYTE *)v11 + 64);
      v43 = *((_BYTE *)v11 + 67);
      v44 = *((_BYTE *)v11 + 66);
      v18 = v11[9];
      v17 = v11[10];
      v42 = *((_BYTE *)v11 + 88);
      v41 = v11[12];
      v40 = *((_BYTE *)v11 + 104);
      v48 = v9 + 1;
      v49 = v11[4];
      v19 = *v37;
      v50 = v18;
      v51 = v17;
      v52 = v11[3];
      if (!*(_QWORD *)(*v37 + 16))
        break;
      sub_1D5E379A4();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D5DA2208(v18, v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D5E3744C();
      v20 = sub_1D5E379C8();
      v21 = -1 << *(_BYTE *)(v19 + 32);
      v22 = v20 & ~v21;
      if (((*(_QWORD *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
        goto LABEL_24;
      v23 = *(_QWORD *)(v19 + 48);
      v24 = (_QWORD *)(v23 + 16 * v22);
      v25 = *v24 == v12 && v24[1] == v13;
      if (!v25 && (sub_1D5E378FC() & 1) == 0)
      {
        v26 = ~v21;
        while (1)
        {
          v22 = (v22 + 1) & v26;
          if (((*(_QWORD *)(v19 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
            break;
          v27 = (_QWORD *)(v23 + 16 * v22);
          v28 = *v27 == v12 && v27[1] == v13;
          if (v28 || (sub_1D5E378FC() & 1) != 0)
            goto LABEL_6;
        }
LABEL_24:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v29 = v34;
        a2 = v35;
        goto LABEL_26;
      }
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a2 = v35;
      v7 = v36;
      v9 = v48;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_1D5DA2260(v50, v51);
      v10 = v38;
      if (v48 == v36)
        return v34;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D5DA2208(v18, v17);
    v29 = v34;
LABEL_26:
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = (uint64_t)sub_1D5DB9DD4(0, *(_QWORD *)(v29 + 16) + 1, 1);
    v30 = v52;
    v32 = *(_QWORD *)(v29 + 16);
    v31 = *(_QWORD *)(v29 + 24);
    v10 = v38;
    if (v32 >= v31 >> 1)
    {
      result = (uint64_t)sub_1D5DB9DD4((char *)(v31 > 1), v32 + 1, 1);
      v10 = v38;
      v30 = v52;
    }
    *(_QWORD *)(v29 + 16) = v32 + 1;
    v34 = v29;
    v33 = v29 + 112 * v32;
    *(_QWORD *)(v33 + 32) = v12;
    *(_QWORD *)(v33 + 40) = v13;
    *(_QWORD *)(v33 + 48) = v39;
    *(_QWORD *)(v33 + 56) = v30;
    *(_QWORD *)(v33 + 64) = v49;
    *(_QWORD *)(v33 + 72) = v14;
    *(_QWORD *)(v33 + 80) = v15;
    *(_QWORD *)(v33 + 88) = v16;
    *(_BYTE *)(v33 + 96) = v46;
    *(_BYTE *)(v33 + 97) = v45;
    *(_BYTE *)(v33 + 98) = v44;
    *(_BYTE *)(v33 + 99) = v43;
    *(_QWORD *)(v33 + 104) = v50;
    *(_QWORD *)(v33 + 112) = v51;
    *(_BYTE *)(v33 + 120) = v42;
    *(_QWORD *)(v33 + 128) = v41;
    *(_BYTE *)(v33 + 136) = v40;
    v7 = v36;
    v9 = v48;
  }
  while (v48 != v36);
  return v34;
}

uint64_t sub_1D5E16AE8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t (*)());
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  int v38;
  uint64_t v39;
  __int128 *v40;
  void (*v41)(uint64_t (*)());
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t (*)());
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char **v58;
  char *v59;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char **v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  void (*v89)(uint64_t (*)());
  uint64_t v90;
  unint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  __int128 *v97;
  char **v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  int v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _OWORD v111[4];
  __int128 v112;
  _OWORD v113[3];

  v101 = a5;
  v100 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v23 = *(_QWORD *)(a1 + 16);
  v24 = *(_QWORD *)a2;
  v25 = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_1D5D7E22C(v24, v25, v23);
  swift_bridgeObjectRelease();
  v27 = swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
  {
    if (qword_1ED9ADB98 != -1)
      v27 = swift_once();
    MEMORY[0x1E0C80A78](v27, v28);
    v29(sub_1D5E1E280);
    v30 = 1;
    return v30 & 1;
  }
  v31 = swift_beginAccess();
  v33 = *(_QWORD *)(a3[2] + 16);
  if (v33 < a4)
  {
    v96 = a6;
    v26 = a11;
    v34 = a12;
    v25 = a10;
    v35 = *(_OWORD *)(a2 + 80);
    v112 = *(_OWORD *)(a2 + 64);
    v113[0] = v35;
    *(_OWORD *)((char *)v113 + 9) = *(_OWORD *)(a2 + 89);
    v36 = *(_OWORD *)(a2 + 16);
    v111[0] = *(_OWORD *)a2;
    v111[1] = v36;
    v37 = *(_OWORD *)(a2 + 32);
    v111[3] = *(_OWORD *)(a2 + 48);
    v111[2] = v37;
    if ((unint64_t)v33 >= *(_QWORD *)(a15 + 16) || (v38 = *(unsigned __int8 *)(a15 + v33 + 32)) == 0)
    {
      sub_1D5DA2190(a2);
      v93 = a7;
      v39 = a10;
      v40 = (__int128 *)a2;
      v64 = (uint64_t)a3;
      v65 = a11;
      v66 = a12;
      v67 = a8;
LABEL_49:
      v30 = sub_1D5E155D4(v39, v40, v64, v65, v66, (uint64_t *)v111, v67, v96, v93);
      v90 = *((_QWORD *)&v112 + 1);
      v91 = *(_QWORD *)&v113[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D5DA2260(v90, v91);
      return v30 & 1;
    }
    v97 = (__int128 *)a2;
    v95 = a8;
    v110 = (_QWORD *)a16;
    LODWORD(v108) = a9;
    v109 = a13;
    if (v38 != 1)
    {
      swift_beginAccess();
      v83 = *(_BYTE *)(a14 + 16);
      v107 = a14;
      v84 = (uint64_t)v97;
      sub_1D5DA2190((uint64_t)v97);
      if ((v83 & 1) != 0)
      {
        v93 = a7;
        v39 = a10;
        v40 = v97;
        goto LABEL_48;
      }
      v88 = sub_1D5E063C0((char *)a1, a10, (uint64_t)a3, a11, a12, v101, v96, v95, a7, v107, (uint64_t)v97, a4, v108 & 1, v109, a15, (uint64_t)v110);
LABEL_45:
      v30 = v88;
      sub_1D5E17FB4(v84);
      return v30 & 1;
    }
    swift_beginAccess();
    if ((*(_BYTE *)(a13 + 16) & 1) != 0)
    {
      sub_1D5DA2190((uint64_t)v97);
      v93 = a7;
      v39 = a10;
      v40 = v97;
LABEL_48:
      v64 = (uint64_t)a3;
      v65 = v26;
      v66 = v34;
      v67 = v95;
      goto LABEL_49;
    }
    v107 = a14;
    swift_beginAccess();
    v85 = *(_QWORD *)(a12 + 16) + a11;
    if (!__OFADD__(*(_QWORD *)(a12 + 16), a11))
    {
      v84 = (uint64_t)v97;
      v86 = sub_1D5DA2190((uint64_t)v97);
      if (v85 < (uint64_t)v110)
      {
        v88 = sub_1D5E04644(v108 & 1, a1, a10, (uint64_t)a3, a11, a12, a7, v95, v101, v96, v109, (uint64_t)v97, a4, v107, a15, (uint64_t)v110);
        goto LABEL_45;
      }
      if (qword_1ED9ADB98 == -1)
      {
LABEL_47:
        MEMORY[0x1E0C80A78](v86, v87);
        v89(sub_1D5E1E278);
        v93 = a7;
        v39 = v25;
        v40 = v97;
        goto LABEL_48;
      }
LABEL_55:
      v86 = swift_once();
      goto LABEL_47;
    }
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (qword_1ED9ADB98 != -1)
    v31 = swift_once();
  a3 = &v94;
  MEMORY[0x1E0C80A78](v31, v32);
  v34 = v101;
  v41(sub_1D5E1E268);
  v42 = *(_QWORD *)(v34 + 16);
  if (v42 < a6)
  {
    __break(1u);
    goto LABEL_52;
  }
  if (a6 < 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v98 = (char **)(a7 + 16);
  a3 = (uint64_t *)(v42 - a6);
  if (v42 != a6)
  {
    v94 = v42;
    v97 = (__int128 *)a2;
    v95 = a8;
    if (v42 > (unint64_t)a6)
    {
      swift_bridgeObjectRetain();
      swift_beginAccess();
      swift_beginAccess();
      v96 = a6;
      v43 = 112 * a6;
      do
      {
        v110 = a3;
        v109 = v43;
        v47 = *(_QWORD *)(v101 + v43 + 32);
        v48 = *(_QWORD *)(v101 + v43 + 40);
        v49 = *(_QWORD *)(v101 + v43 + 56);
        v108 = *(_QWORD *)(v101 + v43 + 48);
        v50 = *(_QWORD *)(v101 + v43 + 64);
        v51 = *(_QWORD *)(v101 + v43 + 72);
        v52 = *(_QWORD *)(v101 + v43 + 80);
        v53 = *(_QWORD *)(v101 + v43 + 88);
        LODWORD(v107) = *(unsigned __int8 *)(v101 + v43 + 96);
        v106 = *(unsigned __int8 *)(v101 + v43 + 97);
        v105 = *(unsigned __int8 *)(v101 + v43 + 98);
        v104 = *(unsigned __int8 *)(v101 + v43 + 99);
        v55 = *(_QWORD *)(v101 + v43 + 104);
        v54 = *(_QWORD *)(v101 + v43 + 112);
        v103 = *(_QWORD *)(v101 + v43 + 128);
        v102 = *(unsigned __int8 *)(v101 + v43 + 136);
        v56 = *v100;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v55, v54);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D5DA2208(v55, v54);
        swift_bridgeObjectRetain();
        v57 = sub_1D5D7E22C(v47, v48, v56);
        swift_bridgeObjectRelease();
        if ((v57 & 1) != 0)
        {
          sub_1D5DA2260(v55, v54);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v44 = swift_bridgeObjectRelease();
          MEMORY[0x1E0C80A78](v44, v45);
          v46(sub_1D5E1E270);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1D5DA2260(v55, v54);
        }
        else
        {
          v99 = v47;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1D5DA2208(v55, v54);
          sub_1D5DA2260(v55, v54);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v58 = v98;
          v59 = *v98;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v58 = v59;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v59 = sub_1D5DAAFFC(0, *((_QWORD *)v59 + 2) + 1, 1, v59);
            *v98 = v59;
          }
          v62 = *((_QWORD *)v59 + 2);
          v61 = *((_QWORD *)v59 + 3);
          if (v62 >= v61 >> 1)
          {
            v59 = sub_1D5DAAFFC((char *)(v61 > 1), v62 + 1, 1, v59);
            *v98 = v59;
          }
          *((_QWORD *)v59 + 2) = v62 + 1;
          v63 = &v59[112 * v62];
          *((_QWORD *)v63 + 4) = v99;
          *((_QWORD *)v63 + 5) = v48;
          *((_QWORD *)v63 + 6) = v108;
          *((_QWORD *)v63 + 7) = v49;
          *((_QWORD *)v63 + 8) = v50;
          *((_QWORD *)v63 + 9) = v51;
          *((_QWORD *)v63 + 10) = v52;
          *((_QWORD *)v63 + 11) = v53;
          v63[96] = v107;
          v63[97] = v106;
          v63[98] = v105;
          v63[99] = v104;
          *((_QWORD *)v63 + 13) = v55;
          *((_QWORD *)v63 + 14) = v54;
          v63[120] = 2;
          *((_QWORD *)v63 + 16) = v103;
          v63[136] = v102;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1D5DA2260(v55, v54);
        }
        v43 = v109 + 112;
        a3 = (_QWORD *)((char *)v110 - 1);
      }
      while (v110 != (_QWORD *)1);
      swift_bridgeObjectRelease();
      a8 = v95;
      a6 = v96;
      v42 = v94;
      goto LABEL_29;
    }
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
LABEL_29:
  if (a8)
  {
    v68 = v101 + 32;
    v69 = (2 * v42) | 1;
    v70 = v98;
    swift_beginAccess();
    v71 = *v70;
    swift_bridgeObjectRetain();
    v72 = sub_1D5E166F8(v68, a6, v69, v100);
    *(_QWORD *)&v111[0] = v71;
    sub_1D5D8BE34(v72);
    v73 = *(_QWORD *)&v111[0];
    v74 = *(_QWORD *)(*(_QWORD *)&v111[0] + 16);
    if (v74)
    {
      v95 = a8;
      *(_QWORD *)&v111[0] = MEMORY[0x1E0DEE9D8];
      sub_1D5DB9DB8(0, v74, 0);
      v75 = *(_QWORD *)&v111[0];
      v76 = (uint64_t *)(v73 + 88);
      do
      {
        v78 = *(v76 - 7);
        v77 = *(v76 - 6);
        v79 = *v76;
        *(_QWORD *)&v111[0] = v75;
        v81 = *(_QWORD *)(v75 + 16);
        v80 = *(_QWORD *)(v75 + 24);
        swift_bridgeObjectRetain();
        if (v81 >= v80 >> 1)
        {
          sub_1D5DB9DB8((char *)(v80 > 1), v81 + 1, 1);
          v75 = *(_QWORD *)&v111[0];
        }
        v76 += 14;
        *(_QWORD *)(v75 + 16) = v81 + 1;
        v82 = (_QWORD *)(v75 + 24 * v81);
        v82[4] = v78;
        v82[5] = v77;
        v82[6] = v79;
        --v74;
      }
      while (v74);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v75 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)&v111[0] = v75;
    *(_OWORD *)((char *)v111 + 8) = 0u;
    *(_OWORD *)((char *)&v111[1] + 8) = 0u;
    *(_OWORD *)((char *)&v111[2] + 8) = 0u;
    *((_QWORD *)&v111[3] + 1) = 0;
    LOBYTE(v112) = -127;
    ClusteringJournal.record(event:)((uint64_t)v111);
    swift_bridgeObjectRelease();
    v30 = 0;
  }
  else
  {
    v30 = 0;
  }
  return v30 & 1;
}

char *sub_1D5E17674(char *a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *result;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD v41[3];
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  char *v48;

  v48 = a1;
  v33 = a2 + 64;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(a2 + 64);
  v34 = (unint64_t)(v14 + 63) >> 6;
  result = (char *)swift_bridgeObjectRetain();
  v18 = 0;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    v24 = *(_QWORD *)(a2 + 48) + 32 * i;
    v25 = *(_QWORD *)v24;
    v26 = *(_QWORD *)(v24 + 8);
    v27 = *(_QWORD *)(v24 + 16);
    v28 = *(_BYTE *)(v24 + 24);
    v29 = *(_BYTE *)(v24 + 25);
    v30 = *(_BYTE *)(v24 + 26);
    v31 = *(_BYTE *)(v24 + 27);
    LOBYTE(v24) = *(_BYTE *)(v24 + 28);
    v32 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * i);
    v41[0] = v25;
    v41[1] = v26;
    v41[2] = v27;
    v42 = v28;
    v43 = v29;
    v44 = v30;
    v45 = v31;
    v46 = v24;
    v47 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D5E09514(&v48, (uint64_t)v41, a3, a4, a5, a6, a7, a8, a9 & 1, a10, a11, a12);
    if (v12)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (char *)swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    result = (char *)swift_bridgeObjectRelease();
    if (v16)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v34)
      goto LABEL_26;
    v22 = *(_QWORD *)(v33 + 8 * v18);
    if (!v22)
      break;
LABEL_17:
    v16 = (v22 - 1) & v22;
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v34)
    goto LABEL_26;
  v22 = *(_QWORD *)(v33 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v18 + 2;
  if (v18 + 2 >= v34)
    goto LABEL_26;
  v22 = *(_QWORD *)(v33 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v18 + 3;
  if (v18 + 3 >= v34)
    goto LABEL_26;
  v22 = *(_QWORD *)(v33 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v18 + 4;
  if (v18 + 4 >= v34)
  {
LABEL_26:
    swift_release();
    return v48;
  }
  v22 = *(_QWORD *)(v33 + 8 * v23);
  if (v22)
  {
LABEL_16:
    v18 = v23;
    goto LABEL_17;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v34)
      goto LABEL_26;
    v22 = *(_QWORD *)(v33 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1D5E178F4(uint64_t a1)
{
  __asm { BR              X9 }
}

BOOL sub_1D5E1793C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;

  if (v7)
  {
    sub_1D5E1CE34(v0, v5, v2, v7);
    sub_1D5E01820(v1, v4, v3, v6);
    sub_1D5E01820(v0, v5, v2, v7);
    return 0;
  }
  else
  {
    sub_1D5E01820(v1, v4, v3, 0);
    sub_1D5E01820(v0, v5, v2, 0);
    return v1 == v0;
  }
}

unint64_t sub_1D5E17C5C()
{
  unint64_t result;

  result = qword_1ED9AEE78;
  if (!qword_1ED9AEE78)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44E08, &_s22HeadlineClusteringRuleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEE78);
  }
  return result;
}

unint64_t sub_1D5E17CA0()
{
  unint64_t result;

  result = qword_1ED9AEF08;
  if (!qword_1ED9AEF08)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44DB8, &_s22HeadlineClusteringRuleO31NoDuplicateThumbnailsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEF08);
  }
  return result;
}

unint64_t sub_1D5E17CE4()
{
  unint64_t result;

  result = qword_1EFFB8B08;
  if (!qword_1EFFB8B08)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44D68, &_s22HeadlineClusteringRuleO41HardPaywallNewsPlusArticleLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8B08);
  }
  return result;
}

unint64_t sub_1D5E17D28()
{
  unint64_t result;

  result = qword_1ED9AEED8;
  if (!qword_1ED9AEED8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44D18, &_s22HeadlineClusteringRuleO26QualitativeLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEED8);
  }
  return result;
}

unint64_t sub_1D5E17D6C()
{
  unint64_t result;

  result = qword_1ED9AEEC0;
  if (!qword_1ED9AEEC0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44CC8, &_s22HeadlineClusteringRuleO24TopicDiversityCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEEC0);
  }
  return result;
}

unint64_t sub_1D5E17DB0()
{
  unint64_t result;

  result = qword_1ED9AEEF0;
  if (!qword_1ED9AEEF0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44C78, &_s22HeadlineClusteringRuleO28PublisherDiversityCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEEF0);
  }
  return result;
}

unint64_t sub_1D5E17DF4()
{
  unint64_t result;

  result = qword_1ED9AF4E0;
  if (!qword_1ED9AF4E0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44C28, &_s22HeadlineClusteringRuleO19AigcLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AF4E0);
  }
  return result;
}

unint64_t sub_1D5E17E38()
{
  unint64_t result;

  result = qword_1ED9AEEA8;
  if (!qword_1ED9AEEA8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44BD8, &_s22HeadlineClusteringRuleO24EvergreenLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEEA8);
  }
  return result;
}

unint64_t sub_1D5E17E7C()
{
  unint64_t result;

  result = qword_1ED9AEE90;
  if (!qword_1ED9AEE90)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44B88, &_s22HeadlineClusteringRuleO23AccessibilityCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEE90);
  }
  return result;
}

uint64_t sub_1D5E17EC0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED9AEF98);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x1D827D8E0](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D5E17F34()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D5E17F58()
{
  uint64_t v0;

  return sub_1D5E03D10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1D5E17F8C()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E17F9C()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E17FAC()
{
  return sub_1D5E04358();
}

uint64_t sub_1D5E17FB4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D5DA2260(v2, v3);
  return a1;
}

uint64_t sub_1D5E1802C()
{
  uint64_t v0;

  return sub_1D5E09398(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D5E18034(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v34 = MEMORY[0x1E0DEE9D8];
  sub_1D5DB9E28(0, v2, 0);
  v6 = 0;
  v7 = v34;
  v8 = a1 + 32;
  v28 = v2;
  v29 = a2;
  v30 = a1 + 32;
  do
  {
    v9 = (uint64_t *)(v8 + 16 * v6);
    v11 = *v9;
    v10 = v9[1];
    v12 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    v32 = v11;
    v33 = v10;
    if (v12)
    {
      v31 = v7;
      swift_bridgeObjectRetain();
      v13 = sub_1D5D7FFCC(v11, v10);
      if ((v14 & 1) != 0)
      {
        v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 56) + 40 * v13 + 24) + 16);
        if (v15)
        {
          v16 = swift_bridgeObjectRetain();
          sub_1D5DB9AEC(0, v15, 0);
          v17 = v3;
          v18 = (uint64_t *)(v16 + 40);
          do
          {
            v20 = *(v18 - 1);
            v19 = *v18;
            v22 = *(_QWORD *)(v17 + 16);
            v21 = *(_QWORD *)(v17 + 24);
            swift_bridgeObjectRetain();
            if (v22 >= v21 >> 1)
            {
              sub_1D5DB9AEC((char *)(v21 > 1), v22 + 1, 1);
              v7 = v31;
            }
            v18 += 14;
            *(_QWORD *)(v17 + 16) = v22 + 1;
            v23 = v17 + 16 * v22;
            *(_QWORD *)(v23 + 32) = v20;
            *(_QWORD *)(v23 + 40) = v19;
            --v15;
          }
          while (v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v2 = v28;
          a2 = v29;
          v3 = MEMORY[0x1E0DEE9D8];
          v8 = v30;
        }
        else
        {
          swift_bridgeObjectRelease();
          v17 = v3;
          v8 = v30;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v17 = v3;
      }
    }
    else
    {
      v17 = v3;
    }
    v25 = *(_QWORD *)(v7 + 16);
    v24 = *(_QWORD *)(v7 + 24);
    if (v25 >= v24 >> 1)
      sub_1D5DB9E28((_QWORD *)(v24 > 1), v25 + 1, 1);
    ++v6;
    *(_QWORD *)(v7 + 16) = v25 + 1;
    v26 = (_QWORD *)(v7 + 24 * v25);
    v26[4] = v32;
    v26[5] = v33;
    v26[6] = v17;
  }
  while (v6 != v2);
  return v7;
}

char *sub_1D5E18260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  char v19;
  char v20;
  char v21;
  char v22;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (char *)MEMORY[0x1E0DEE9D8];
  v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v5 = (char *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = *(v4 - 1);
      v7 = *v4;
      swift_bridgeObjectRetain_n();
      v8 = sub_1D5D7FFCC(v6, v7);
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(a2 + 56) + 32 * v8;
        v12 = *(_QWORD *)v10;
        v11 = *(_QWORD *)(v10 + 8);
        v13 = *(_QWORD *)(v10 + 16);
        v14 = *(_BYTE *)(v10 + 25);
        v21 = *(_BYTE *)(v10 + 26);
        v22 = *(_BYTE *)(v10 + 24);
        v19 = *(_BYTE *)(v10 + 28);
        v20 = *(_BYTE *)(v10 + 27);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1D5DAB4E8(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
        v16 = *((_QWORD *)v5 + 2);
        v15 = *((_QWORD *)v5 + 3);
        if (v16 >= v15 >> 1)
          v5 = sub_1D5DAB4E8((char *)(v15 > 1), v16 + 1, 1, v5);
        *((_QWORD *)v5 + 2) = v16 + 1;
        v17 = &v5[32 * v16];
        *((_QWORD *)v17 + 4) = v12;
        *((_QWORD *)v17 + 5) = v11;
        *((_QWORD *)v17 + 6) = v13;
        v17[56] = v22;
        v17[57] = v14;
        v17[58] = v21;
        v17[59] = v20;
        v17[60] = v19;
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D5E18400(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D5E18428(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5E18450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD *);
  _QWORD *v30;
  uint64_t v31;
  int64_t v33;
  double ***v35[4];

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v33 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_23;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v11 >= v33)
      return swift_release();
    v12 = *(_QWORD *)(v31 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v33)
        return swift_release();
      v12 = *(_QWORD *)(v31 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v33)
          return swift_release();
        v12 = *(_QWORD *)(v31 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v33)
            return swift_release();
          v12 = *(_QWORD *)(v31 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_23:
    v14 = *(_QWORD *)(a1 + 48) + 32 * v10;
    v15 = *(_QWORD *)v14;
    v16 = *(_QWORD *)(v14 + 8);
    v17 = *(double *)(v14 + 16);
    v18 = *(unsigned __int8 *)(v14 + 24);
    v19 = *(unsigned __int8 *)(v14 + 25);
    v20 = *(unsigned __int8 *)(v14 + 26);
    v21 = *(unsigned __int8 *)(v14 + 27);
    v22 = *(unsigned __int8 *)(v14 + 28);
    swift_bridgeObjectRetain();
    v23 = 256;
    if (!v19)
      v23 = 0;
    v24 = v3 & 0xFFFFFF0000000000 | v18 | v23;
    v25 = 0x10000;
    if (!v20)
      v25 = 0;
    v26 = 0x1000000;
    if (!v21)
      v26 = 0;
    v27 = v24 | v25 | v26;
    v28 = 0x100000000;
    if (!v22)
      v28 = 0;
    v3 = v27 | v28;
    v29 = sub_1D5E0ADF0(v35, v15, v16, v27 | v28, v17);
    if (*v30)
      sub_1D5E0FAF4(a3);
    ((void (*)(double ****, _QWORD))v29)(v35, 0);
    result = swift_bridgeObjectRelease();
  }
  v13 = v11 + 4;
  if (v13 >= v33)
    return swift_release();
  v12 = *(_QWORD *)(v31 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v33)
      return swift_release();
    v12 = *(_QWORD *)(v31 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D5E186A8(uint64_t a1, void (*a2)(uint64_t, uint64_t, double))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v8)
        return swift_release();
      v18 = *(_QWORD *)(v4 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v8)
          return swift_release();
        v18 = *(_QWORD *)(v4 + 8 * v10);
        if (!v18)
        {
          v10 = v17 + 3;
          if (v17 + 3 >= v8)
            return swift_release();
          v18 = *(_QWORD *)(v4 + 8 * v10);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v18 - 1) & v18;
    v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(double *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    a2(v14, v15, v16);
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 4;
  if (v19 >= v8)
    return swift_release();
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D5E18838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, double))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v9 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  while (1)
  {
    while (v12)
    {
      v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v17 = v16 | (v15 << 6);
      if (*(_QWORD *)(a2 + 16))
        goto LABEL_21;
    }
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v15 >= v13)
      return swift_release();
    v19 = *(_QWORD *)(v9 + 8 * v15);
    if (!v19)
      break;
LABEL_20:
    v12 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v15 << 6);
    if (*(_QWORD *)(a2 + 16))
    {
LABEL_21:
      v21 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v17);
      v22 = *v21;
      v23 = v21[1];
      swift_bridgeObjectRetain();
      v24 = sub_1D5D7FFCC(v22, v23);
      if ((v25 & 1) != 0)
      {
        MEMORY[0x1E0C80A78](v24, v25);
        v26 = swift_bridgeObjectRetain();
        sub_1D5E186A8(v26, a7);
        swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
    }
  }
  v20 = v15 + 1;
  if (v15 + 1 >= v13)
    return swift_release();
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
    goto LABEL_19;
  v20 = v15 + 2;
  if (v15 + 2 >= v13)
    return swift_release();
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
    goto LABEL_19;
  v20 = v15 + 3;
  if (v15 + 3 >= v13)
    return swift_release();
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
    goto LABEL_19;
  v20 = v15 + 4;
  if (v15 + 4 >= v13)
    return swift_release();
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
  {
LABEL_19:
    v15 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v13)
      return swift_release();
    v19 = *(_QWORD *)(v9 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D5E18A50(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001D5E4B890)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D5E18AD4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001D5E4B850)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D5E18B58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6269737365636361 && a2 == 0xED00007974696C69;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6565726772657665 && a2 == 0xEE0074696D694C6ELL || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696D694C63676961 && a2 == 0xE900000000000074 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E47D90 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7669446369706F74 && a2 == 0xEE00797469737265 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5E4B7D0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D5E47DB0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4B7F0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1D5E18EF0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4B870)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D5E18F74(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E4B810)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D5E18FF8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000017 && a2 == 0x80000001D5E4B830)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

char *sub_1D5E1907C()
{
  uint64_t v0;
  char *v1;
  int64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  int64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;

  v0 = swift_bridgeObjectRetain();
  v26 = (char *)sub_1D5D9E2F0(v0);
  sub_1D5E0D65C(&v26);
  swift_bridgeObjectRelease();
  v1 = v26;
  v2 = *((_QWORD *)v26 + 2);
  if (v2)
  {
    v26 = (char *)MEMORY[0x1E0DEE9D8];
    sub_1D5DB9E28(0, v2, 0);
    v3 = 0;
    v4 = v26;
    v21 = v2;
    v22 = v1 + 32;
    do
    {
      v5 = &v22[40 * v3];
      v6 = *(_QWORD *)v5;
      v7 = *((_QWORD *)v5 + 1);
      v8 = *((_QWORD *)v5 + 3);
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        v23 = *(_QWORD *)v5;
        v24 = v4;
        v25 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_1D5DB9AEC(0, v9, 0);
        v10 = v25;
        v11 = (uint64_t *)(v8 + 40);
        do
        {
          v12 = *(v11 - 1);
          v13 = *v11;
          v15 = *(_QWORD *)(v25 + 16);
          v14 = *(_QWORD *)(v25 + 24);
          swift_bridgeObjectRetain();
          if (v15 >= v14 >> 1)
            sub_1D5DB9AEC((char *)(v14 > 1), v15 + 1, 1);
          v11 += 14;
          *(_QWORD *)(v25 + 16) = v15 + 1;
          v16 = v25 + 16 * v15;
          *(_QWORD *)(v16 + 32) = v12;
          *(_QWORD *)(v16 + 40) = v13;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v2 = v21;
        v6 = v23;
        v4 = v24;
      }
      else
      {
        swift_bridgeObjectRetain();
        v10 = MEMORY[0x1E0DEE9D8];
      }
      v26 = v4;
      v18 = *((_QWORD *)v4 + 2);
      v17 = *((_QWORD *)v4 + 3);
      if (v18 >= v17 >> 1)
      {
        sub_1D5DB9E28((_QWORD *)(v17 > 1), v18 + 1, 1);
        v4 = v26;
      }
      ++v3;
      *((_QWORD *)v4 + 2) = v18 + 1;
      v19 = &v4[24 * v18];
      *((_QWORD *)v19 + 4) = v6;
      *((_QWORD *)v19 + 5) = v7;
      *((_QWORD *)v19 + 6) = v10;
    }
    while (v3 != v2);
    swift_release();
  }
  else
  {
    swift_release();
    return (char *)MEMORY[0x1E0DEE9D8];
  }
  return v4;
}

uint64_t sub_1D5E1929C(uint64_t *__src, uint64_t *__dst, char *a3, uint64_t *a4, uint64_t a5)
{
  char *v6;
  uint64_t *v7;
  uint64_t *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  double v22;
  double v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  BOOL v28;
  __int128 v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  double v42;
  double v43;
  char v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  uint64_t *v55;

  v6 = a3;
  v7 = __dst;
  v8 = __src;
  v9 = (char *)__dst - (char *)__src;
  v10 = ((char *)__dst - (char *)__src) / 24;
  v11 = a3 - (char *)__dst;
  v12 = (a3 - (char *)__dst) / 24;
  v54 = a4;
  if (v10 < v12)
  {
    if (a4 != __src || &__src[3 * v10] <= a4)
    {
      memmove(a4, __src, 24 * v10);
      a4 = v54;
    }
    v13 = &a4[3 * v10];
    if (v7 >= (uint64_t *)v6 || v9 < 24)
    {
LABEL_54:
      v7 = v8;
      goto LABEL_55;
    }
    while (1)
    {
      v14 = *((double *)v7 + 2);
      v15 = *((double *)a4 + 2);
      if (v14 == v15)
      {
        v16 = *v7;
        v17 = v7[1];
        v18 = *a4;
        v19 = a4[1];
        v55 = a4;
        v20 = *(_QWORD *)(a5 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v20)
        {
          v21 = sub_1D5D7FFCC(v16, v17);
          v22 = 0.0;
          v23 = 0.0;
          if ((v24 & 1) != 0)
            v23 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v21 + 32);
          if (*(_QWORD *)(a5 + 16))
          {
            v25 = sub_1D5D7FFCC(v18, v19);
            if ((v26 & 1) != 0)
              v22 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v25 + 32);
          }
        }
        else
        {
          v23 = 0.0;
          v22 = 0.0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a4 = v55;
        if (v22 >= v23)
        {
LABEL_15:
          v27 = a4;
          v28 = v8 == a4;
          a4 += 3;
          if (v28)
            goto LABEL_17;
LABEL_16:
          v29 = *(_OWORD *)v27;
          v8[2] = v27[2];
          *(_OWORD *)v8 = v29;
          goto LABEL_17;
        }
      }
      else if (v15 >= v14)
      {
        goto LABEL_15;
      }
      v27 = v7;
      v28 = v8 == v7;
      v7 += 3;
      if (!v28)
        goto LABEL_16;
LABEL_17:
      v8 += 3;
      if (a4 >= v13 || v7 >= (uint64_t *)v6)
        goto LABEL_54;
    }
  }
  if (a4 != __dst || &__dst[3 * v12] <= a4)
  {
    memmove(a4, __dst, 24 * v12);
    a4 = v54;
  }
  v13 = &a4[3 * v12];
  if (v8 < v7 && v11 >= 24)
  {
    v30 = v7;
    while (1)
    {
      v32 = (char *)(v13 - 3);
      v31 = *(v13 - 3);
      v33 = *((double *)v13 - 1);
      v35 = *(v30 - 3);
      v30 -= 3;
      v34 = v35;
      v36 = *((double *)v30 + 2);
      if (v33 != v36)
      {
        v47 = (unint64_t)(v6 - 24);
        if (v36 >= v33)
          goto LABEL_39;
        goto LABEL_47;
      }
      v52 = v34;
      v53 = v6;
      v37 = v13;
      v38 = *(v13 - 2);
      v39 = v30[1];
      v40 = *(_QWORD *)(a5 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v40)
        break;
      v41 = sub_1D5D7FFCC(v31, v38);
      v42 = 0.0;
      v43 = 0.0;
      if ((v44 & 1) != 0)
        v43 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v41 + 32);
      v13 = v37;
      if (!*(_QWORD *)(a5 + 16))
        goto LABEL_45;
      v45 = sub_1D5D7FFCC(v52, v39);
      v6 = v53;
      if ((v46 & 1) != 0)
        v42 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v45 + 32);
LABEL_46:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v47 = (unint64_t)(v6 - 24);
      a4 = v54;
      if (v42 >= v43)
      {
LABEL_39:
        if (v6 < (char *)v13 || v47 >= (unint64_t)v13 || v6 != (char *)v13)
        {
          v48 = *(_OWORD *)v32;
          *(_QWORD *)(v47 + 16) = *((_QWORD *)v32 + 2);
          *(_OWORD *)v47 = v48;
        }
        v30 = v7;
        v13 = (uint64_t *)v32;
        goto LABEL_51;
      }
LABEL_47:
      if (v6 < (char *)v7 || v47 >= (unint64_t)v7 || v6 != (char *)v7)
      {
        v49 = *(_OWORD *)v30;
        *(_QWORD *)(v47 + 16) = v30[2];
        *(_OWORD *)v47 = v49;
      }
LABEL_51:
      if (v30 > v8)
      {
        v7 = v30;
        v6 = (char *)v47;
        if (v13 > a4)
          continue;
      }
      v7 = v30;
      goto LABEL_55;
    }
    v43 = 0.0;
    v42 = 0.0;
    v13 = v37;
LABEL_45:
    v6 = v53;
    goto LABEL_46;
  }
LABEL_55:
  v50 = ((char *)v13 - (char *)a4) / 24;
  if (v7 != a4 || v7 >= &a4[3 * v50])
    memmove(v7, a4, 24 * v50);
  return 1;
}

uint64_t sub_1D5E1967C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  double v18;
  double v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = result;
  if (a3 != a2)
  {
    v6 = a3;
    v26 = *a4;
    v7 = *a4 + 24 * a3;
LABEL_5:
    v8 = v26 + 24 * v6;
    v9 = *(_QWORD *)v8;
    v10 = *(_QWORD *)(v8 + 8);
    v11 = *(double *)(v8 + 16);
    v12 = v24;
    v25 = v7;
    while (1)
    {
      v13 = *(_QWORD *)(v7 - 24);
      v14 = *(double *)(v7 - 8);
      if (v11 == v14)
      {
        v15 = *(_QWORD *)(v7 - 16);
        v16 = *(_QWORD *)(a5 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v16)
        {
          v17 = sub_1D5D7FFCC(v9, v10);
          v18 = 0.0;
          v19 = 0.0;
          if ((v20 & 1) != 0)
            v19 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v17 + 32);
          if (*(_QWORD *)(a5 + 16))
          {
            v21 = sub_1D5D7FFCC(v13, v15);
            if ((v22 & 1) != 0)
              v18 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v21 + 32);
          }
        }
        else
        {
          v19 = 0.0;
          v18 = 0.0;
        }
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if (v18 >= v19)
        {
LABEL_4:
          ++v6;
          v7 = v25 + 24;
          if (v6 == a2)
            return result;
          goto LABEL_5;
        }
      }
      else if (v14 >= v11)
      {
        goto LABEL_4;
      }
      if (!v26)
        break;
      v9 = *(_QWORD *)v7;
      v10 = *(_QWORD *)(v7 + 8);
      v11 = *(double *)(v7 + 16);
      *(_OWORD *)v7 = *(_OWORD *)(v7 - 24);
      *(_QWORD *)(v7 + 16) = *(_QWORD *)(v7 - 8);
      *(_QWORD *)(v7 - 16) = v10;
      *(double *)(v7 - 8) = v11;
      *(_QWORD *)(v7 - 24) = v9;
      v7 -= 24;
      if (v6 == ++v12)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D5E19818(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  double v26;
  double v27;
  char v28;
  unint64_t v29;
  char v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  double v43;
  double v44;
  char v45;
  unint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  double v72;
  double v73;
  char v74;
  unint64_t v75;
  char v76;
  unint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  char v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t *v128;
  char *v129;
  unint64_t v130;
  uint64_t result;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  unint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;

  v5 = a1[1];
  swift_bridgeObjectRetain_n();
  v6 = sub_1D5E378C0();
  if (v6 >= v5)
  {
    if (v5 < 0)
      goto LABEL_164;
    if (!v5)
      return swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain();
    sub_1D5E1967C(0, v5, 1, a1, a2);
    if (!v2)
      return swift_bridgeObjectRelease_n();
LABEL_140:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_163;
  v152 = a2;
  v153 = v2;
  v147 = v5;
  v145 = v6;
  v142 = a1;
  if (v5 <= 1)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v150 = (uint64_t *)(MEMORY[0x1E0DEE9D8] + 32);
    v144 = MEMORY[0x1E0DEE9D8];
    if (v5 != 1)
    {
      v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_127:
      v155 = (uint64_t)v10;
      if (v14 >= 2)
      {
        v132 = *v142;
        do
        {
          v133 = v14 - 2;
          if (v14 < 2)
            goto LABEL_158;
          if (!v132)
            goto LABEL_171;
          v134 = *(_QWORD *)(v155 + 32 + 16 * v133);
          v135 = *(_QWORD *)(v155 + 32 + 16 * (v14 - 1) + 8);
          v136 = (uint64_t *)(v132 + 24 * *(_QWORD *)(v155 + 32 + 16 * (v14 - 1)));
          swift_bridgeObjectRetain();
          sub_1D5E1929C((uint64_t *)(v132 + 24 * v134), v136, (char *)(v132 + 24 * v135), v150, v152);
          if (v153)
            goto LABEL_139;
          swift_bridgeObjectRelease();
          if (v135 < v134)
            goto LABEL_159;
          v137 = (char *)v155;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v137 = sub_1D5E259C8(v155);
          if (v133 >= *((_QWORD *)v137 + 2))
            goto LABEL_160;
          v138 = v137 + 32;
          v139 = &v137[16 * v133 + 32];
          *(_QWORD *)v139 = v134;
          *((_QWORD *)v139 + 1) = v135;
          v140 = v137;
          v141 = *((_QWORD *)v137 + 2);
          if (v14 > v141)
            goto LABEL_161;
          memmove(&v138[16 * v14 - 16], &v138[16 * v14], 16 * (v141 - v14));
          v155 = (uint64_t)v140;
          *((_QWORD *)v140 + 2) = v141 - 1;
          v14 = v141 - 1;
        }
        while (v141 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)(v144 + 16) = 0;
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v8 = v7 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AD910);
    v9 = sub_1D5E3753C();
    *(_QWORD *)(v9 + 16) = v8;
    v144 = v9;
    v150 = (uint64_t *)(v9 + 32);
  }
  v11 = 0;
  v12 = *a1;
  v143 = *a1 + 32;
  v154 = (char *)MEMORY[0x1E0DEE9D8];
  v13 = v147;
  v156 = *a1;
  while (1)
  {
    v15 = v11++;
    if (v11 < v13)
    {
      v16 = v12 + 24 * v11;
      v17 = *(double *)(v16 + 16);
      v18 = v12 + 24 * v15;
      v19 = *(double *)(v18 + 16);
      if (v17 == v19)
      {
        v20 = *(_QWORD *)v16;
        v21 = *(_QWORD *)(v16 + 8);
        v23 = *(_QWORD *)v18;
        v22 = *(_QWORD *)(v18 + 8);
        v24 = *(_QWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v24)
        {
          v25 = sub_1D5D7FFCC(v20, v21);
          v26 = 0.0;
          v27 = 0.0;
          if ((v28 & 1) != 0)
            v27 = *(double *)(*(_QWORD *)(a2 + 56) + 40 * v25 + 32);
          if (*(_QWORD *)(a2 + 16))
          {
            v29 = sub_1D5D7FFCC(v23, v22);
            if ((v30 & 1) != 0)
              v26 = *(double *)(*(_QWORD *)(a2 + 56) + 40 * v29 + 32);
          }
        }
        else
        {
          v27 = 0.0;
          v26 = 0.0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31 = v26 < v27;
        v13 = v147;
        v12 = v156;
      }
      else
      {
        v31 = v19 < v17;
      }
      v11 = v15 + 2;
      if (v15 + 2 < v13)
      {
        v32 = v143 + 24 * v15;
        v33 = v32;
        while (1)
        {
          v35 = *(_QWORD *)(v33 + 24);
          v33 += 24;
          v34 = v35;
          v36 = *(double *)(v32 + 32);
          v37 = *(double *)(v32 + 8);
          if (v36 == v37)
          {
            v38 = *(_QWORD *)(v32 + 16);
            v40 = *(_QWORD *)(v32 - 8);
            v39 = *(_QWORD *)v32;
            v41 = *(_QWORD *)(a2 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v41)
            {
              v42 = sub_1D5D7FFCC(v38, v34);
              v43 = 0.0;
              v44 = 0.0;
              if ((v45 & 1) != 0)
                v44 = *(double *)(*(_QWORD *)(a2 + 56) + 40 * v42 + 32);
              if (*(_QWORD *)(a2 + 16))
              {
                v46 = sub_1D5D7FFCC(v40, v39);
                if ((v47 & 1) != 0)
                  v43 = *(double *)(*(_QWORD *)(a2 + 56) + 40 * v46 + 32);
              }
            }
            else
            {
              v44 = 0.0;
              v43 = 0.0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v48 = v43 < v44;
            v12 = v156;
          }
          else
          {
            v48 = v37 < v36;
          }
          v13 = v147;
          if (v31 != v48)
            break;
          ++v11;
          v32 = v33;
          if (v147 == v11)
          {
            v11 = v147;
            break;
          }
        }
      }
      if (v31)
      {
        if (v11 < v15)
          goto LABEL_165;
        if (v15 < v11)
        {
          v49 = 24 * v11;
          v50 = 24 * v15;
          v51 = v11;
          v52 = v15;
          do
          {
            if (v52 != --v51)
            {
              if (!v12)
                goto LABEL_170;
              v53 = v12 + v50;
              v54 = v12 + v49;
              v55 = *(_QWORD *)(v12 + v50);
              v56 = *(_QWORD *)(v12 + v50 + 8);
              v57 = *(_QWORD *)(v12 + v50 + 16);
              v58 = *(_QWORD *)(v12 + v49 - 8);
              *(_OWORD *)v53 = *(_OWORD *)(v12 + v49 - 24);
              *(_QWORD *)(v53 + 16) = v58;
              *(_QWORD *)(v54 - 24) = v55;
              *(_QWORD *)(v54 - 16) = v56;
              *(_QWORD *)(v54 - 8) = v57;
            }
            ++v52;
            v49 -= 24;
            v50 += 24;
          }
          while (v52 < v51);
        }
      }
    }
    if (v11 >= v13)
      goto LABEL_77;
    if (__OFSUB__(v11, v15))
      goto LABEL_162;
    if (v11 - v15 >= v145)
      goto LABEL_77;
    if (__OFADD__(v15, v145))
      goto LABEL_166;
    v59 = v15 + v145 >= v13 ? v13 : v15 + v145;
    if (v59 < v15)
      break;
    if (v11 != v59)
    {
      v60 = v12 + 24 * v11;
      v146 = v15;
      v148 = v59;
      do
      {
        v61 = v12 + 24 * v11;
        v62 = *(_QWORD *)v61;
        v63 = *(_QWORD *)(v61 + 8);
        v64 = *(double *)(v61 + 16);
        v65 = v15;
        v151 = v60;
        do
        {
          v66 = *(_QWORD *)(v60 - 24);
          v67 = *(double *)(v60 - 8);
          if (v64 == v67)
          {
            v68 = v11;
            v69 = *(_QWORD *)(v60 - 16);
            v70 = *(_QWORD *)(a2 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v70)
            {
              v71 = sub_1D5D7FFCC(v62, v63);
              v72 = 0.0;
              v73 = 0.0;
              if ((v74 & 1) != 0)
                v73 = *(double *)(*(_QWORD *)(a2 + 56) + 40 * v71 + 32);
              v11 = v68;
              if (*(_QWORD *)(a2 + 16))
              {
                v75 = sub_1D5D7FFCC(v66, v69);
                if ((v76 & 1) != 0)
                  v72 = *(double *)(*(_QWORD *)(a2 + 56) + 40 * v75 + 32);
              }
            }
            else
            {
              v73 = 0.0;
              v72 = 0.0;
              v11 = v68;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v12 = v156;
            if (v72 >= v73)
              break;
          }
          else if (v67 >= v64)
          {
            break;
          }
          if (!v12)
            goto LABEL_168;
          v62 = *(_QWORD *)v60;
          v63 = *(_QWORD *)(v60 + 8);
          v64 = *(double *)(v60 + 16);
          *(_OWORD *)v60 = *(_OWORD *)(v60 - 24);
          *(_QWORD *)(v60 + 16) = *(_QWORD *)(v60 - 8);
          *(_QWORD *)(v60 - 16) = v63;
          *(double *)(v60 - 8) = v64;
          *(_QWORD *)(v60 - 24) = v62;
          v60 -= 24;
          ++v65;
        }
        while (v11 != v65);
        ++v11;
        v60 = v151 + 24;
        v15 = v146;
      }
      while (v11 != v148);
      v11 = v148;
    }
LABEL_77:
    if (v11 < v15)
      goto LABEL_157;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v154 = sub_1D5E258D0(0, *((_QWORD *)v154 + 2) + 1, 1, v154);
    v78 = *((_QWORD *)v154 + 2);
    v77 = *((_QWORD *)v154 + 3);
    v14 = v78 + 1;
    v12 = v156;
    if (v78 >= v77 >> 1)
    {
      v154 = sub_1D5E258D0((char *)(v77 > 1), v78 + 1, 1, v154);
      v12 = v156;
    }
    *((_QWORD *)v154 + 2) = v14;
    v79 = &v154[16 * v78 + 32];
    *(_QWORD *)v79 = v15;
    *((_QWORD *)v79 + 1) = v11;
    if (v78)
    {
      v80 = v154 + 32;
      v149 = v11;
      while (1)
      {
        v81 = v14 - 1;
        if (v14 >= 4)
        {
          v86 = &v80[16 * v14];
          v87 = *((_QWORD *)v86 - 8);
          v88 = *((_QWORD *)v86 - 7);
          v92 = __OFSUB__(v88, v87);
          v89 = v88 - v87;
          if (v92)
            goto LABEL_146;
          v91 = *((_QWORD *)v86 - 6);
          v90 = *((_QWORD *)v86 - 5);
          v92 = __OFSUB__(v90, v91);
          v84 = v90 - v91;
          v85 = v92;
          if (v92)
            goto LABEL_147;
          v93 = v14 - 2;
          v94 = &v80[16 * v14 - 32];
          v96 = *(_QWORD *)v94;
          v95 = *((_QWORD *)v94 + 1);
          v92 = __OFSUB__(v95, v96);
          v97 = v95 - v96;
          if (v92)
            goto LABEL_148;
          v92 = __OFADD__(v84, v97);
          v98 = v84 + v97;
          if (v92)
            goto LABEL_150;
          if (v98 >= v89)
          {
            v116 = &v80[16 * v81];
            v118 = *(_QWORD *)v116;
            v117 = *((_QWORD *)v116 + 1);
            v92 = __OFSUB__(v117, v118);
            v119 = v117 - v118;
            if (v92)
              goto LABEL_156;
            v109 = v84 < v119;
            goto LABEL_115;
          }
        }
        else
        {
          if (v14 != 3)
          {
            v110 = *((_QWORD *)v154 + 4);
            v111 = *((_QWORD *)v154 + 5);
            v92 = __OFSUB__(v111, v110);
            v103 = v111 - v110;
            v104 = v92;
            goto LABEL_109;
          }
          v83 = *((_QWORD *)v154 + 4);
          v82 = *((_QWORD *)v154 + 5);
          v92 = __OFSUB__(v82, v83);
          v84 = v82 - v83;
          v85 = v92;
        }
        if ((v85 & 1) != 0)
          goto LABEL_149;
        v93 = v14 - 2;
        v99 = &v80[16 * v14 - 32];
        v101 = *(_QWORD *)v99;
        v100 = *((_QWORD *)v99 + 1);
        v102 = __OFSUB__(v100, v101);
        v103 = v100 - v101;
        v104 = v102;
        if (v102)
          goto LABEL_151;
        v105 = &v80[16 * v81];
        v107 = *(_QWORD *)v105;
        v106 = *((_QWORD *)v105 + 1);
        v92 = __OFSUB__(v106, v107);
        v108 = v106 - v107;
        if (v92)
          goto LABEL_153;
        if (__OFADD__(v103, v108))
          goto LABEL_155;
        if (v103 + v108 >= v84)
        {
          v109 = v84 < v108;
LABEL_115:
          if (v109)
            v81 = v93;
          goto LABEL_117;
        }
LABEL_109:
        if ((v104 & 1) != 0)
          goto LABEL_152;
        v112 = &v80[16 * v81];
        v114 = *(_QWORD *)v112;
        v113 = *((_QWORD *)v112 + 1);
        v92 = __OFSUB__(v113, v114);
        v115 = v113 - v114;
        if (v92)
          goto LABEL_154;
        if (v115 < v103)
          goto LABEL_15;
LABEL_117:
        v120 = v81 - 1;
        if (v81 - 1 >= v14)
        {
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
          goto LABEL_167;
        }
        if (!v12)
          goto LABEL_169;
        v121 = v80;
        v122 = &v80[16 * v120];
        v123 = *(_QWORD *)v122;
        v124 = v81;
        v125 = &v121[16 * v81];
        v126 = *((_QWORD *)v125 + 1);
        v127 = (uint64_t *)(v12 + 24 * *(_QWORD *)v122);
        v128 = (uint64_t *)(v12 + 24 * *(_QWORD *)v125);
        v129 = (char *)(v12 + 24 * v126);
        swift_bridgeObjectRetain();
        sub_1D5E1929C(v127, v128, v129, v150, v152);
        if (v153)
        {
LABEL_139:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v144 + 16) = 0;
          goto LABEL_140;
        }
        swift_bridgeObjectRelease();
        if (v126 < v123)
          goto LABEL_143;
        if (v124 > *((_QWORD *)v154 + 2))
          goto LABEL_144;
        *(_QWORD *)v122 = v123;
        v80 = v154 + 32;
        *(_QWORD *)&v154[16 * v120 + 40] = v126;
        v130 = *((_QWORD *)v154 + 2);
        if (v124 >= v130)
          goto LABEL_145;
        v153 = 0;
        v14 = v130 - 1;
        memmove(v125, v125 + 16, 16 * (v130 - 1 - v124));
        *((_QWORD *)v154 + 2) = v130 - 1;
        a2 = v152;
        v12 = v156;
        v11 = v149;
        if (v130 <= 2)
          goto LABEL_15;
      }
    }
    v14 = 1;
LABEL_15:
    v13 = v147;
    if (v11 >= v147)
    {
      v10 = v154;
      goto LABEL_127;
    }
  }
LABEL_167:
  __break(1u);
LABEL_168:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_169:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_170:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_171:
  result = swift_bridgeObjectRelease_n();
  __break(1u);
  return result;
}

uint64_t sub_1D5E1A1E0(uint64_t a1, uint64_t a2, void *__src)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  _QWORD v58[2];
  _BYTE __dst[1904];

  memcpy(__dst, __src, 0x768uLL);
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1D5D95E98(v5);
  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRetain();
  v8 = (char *)sub_1D5D9E030(v7);
  v40 = v6;
  swift_bridgeObjectRelease();
  v41 = v8;
  sub_1D5E1B4F0(&v41, a1);
  swift_bridgeObjectRelease();
  v9 = v41;
  v10 = MEMORY[0x1E0DEE9E0];
  v58[0] = MEMORY[0x1E0DEE9E0];
  v11 = *(_QWORD *)(a2 + 16);
  if (v11)
  {
    v37 = v41;
    v38 = a1;
    swift_bridgeObjectRetain();
    v12 = 0;
    v39 = a2;
    do
    {
      v13 = a2 + v12;
      v15 = *(_QWORD *)(a2 + v12 + 64);
      v14 = *(_QWORD *)(v13 + 72);
      v16 = *(_QWORD *)(v13 + 80);
      v17 = *(_QWORD *)(v13 + 104);
      v18 = *(_QWORD *)(v13 + 112);
      v19 = *(_BYTE *)(v13 + 136);
      v20 = *(_QWORD *)(v13 + 128);
      v21 = *(_BYTE *)(v13 + 120);
      v22 = *(_BYTE *)(v13 + 99);
      v23 = *(_BYTE *)(v13 + 98);
      v24 = *(_BYTE *)(v13 + 97);
      v25 = *(_BYTE *)(v13 + 96);
      v26 = *(_QWORD *)(v13 + 88);
      v27 = *(_QWORD *)(v13 + 48);
      v28 = *(_QWORD *)(v13 + 56);
      v29 = *(_QWORD *)(v13 + 40);
      v41 = *(char **)(v13 + 32);
      v42 = v29;
      v43 = v27;
      v44 = v28;
      v45 = v15;
      v46 = v14;
      v47 = v16;
      v48 = v26;
      v49 = v25;
      v50 = v24;
      v51 = v23;
      v52 = v22;
      v53 = v17;
      v54 = v18;
      v55 = v21;
      v56 = v20;
      v57 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D5DA2208(v17, v18);
      sub_1D5E0C49C(v58, (uint64_t)&v41, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D5DA2260(v17, v18);
      v12 += 112;
      --v11;
      a2 = v39;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v10 = v58[0];
    v9 = v37;
    a1 = v38;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D5DBBE24((uint64_t)__dst);
  v30 = sub_1D5E11608(MEMORY[0x1E0DEE9E0], v40, v10, v40, (uint64_t)__dst);
  sub_1D5DBE3F4((uint64_t)__dst);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v58[0] = MEMORY[0x1E0DEE9D8];
  v31 = *((_QWORD *)v9 + 2);
  if (v31)
  {
    swift_bridgeObjectRetain();
    v32 = (uint64_t *)(v9 + 40);
    do
    {
      v33 = *v32;
      v41 = (char *)*(v32 - 1);
      v42 = v33;
      swift_bridgeObjectRetain();
      sub_1D5E0C948((uint64_t)v58, (uint64_t *)&v41, (uint64_t)__dst, v30, a1);
      v32 += 2;
      swift_bridgeObjectRelease();
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    swift_release_n();
    v34 = v58[0];
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v34 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v35 = sub_1D5E18034(v34, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_1D5E1A558(uint64_t *__dst, uint64_t *__src, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  double v24;
  char v25;
  unint64_t v26;
  char v27;
  double v28;
  uint64_t *v29;
  BOOL v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  double v39;
  char v40;
  uint64_t *v41;
  unint64_t v42;
  char v43;
  double v44;
  uint64_t *v46;
  uint64_t *v47;
  char *v48;

  v7 = a3;
  v8 = __src;
  v9 = __dst;
  v10 = (char *)__src - (char *)__dst;
  v11 = (char *)__src - (char *)__dst + 15;
  if ((char *)__src - (char *)__dst >= 0)
    v11 = (char *)__src - (char *)__dst;
  v12 = v11 >> 4;
  v13 = (char *)a3 - (char *)__src;
  v14 = (char *)a3 - (char *)__src + 15;
  if ((char *)a3 - (char *)__src >= 0)
    v14 = (char *)a3 - (char *)__src;
  v15 = v14 >> 4;
  if (v12 >= v14 >> 4)
  {
    if (a4 != __src || &__src[2 * v15] <= a4)
      memmove(a4, __src, 16 * v15);
    v46 = a4;
    v17 = (char *)&a4[2 * v15];
    if (v9 >= v8 || v13 < 16)
    {
LABEL_62:
      v16 = v46;
      goto LABEL_63;
    }
    v32 = v8;
    while (1)
    {
      v33 = (uint64_t *)(v17 - 16);
      v48 = v17;
      v34 = *((_QWORD *)v17 - 1);
      v36 = *(v32 - 2);
      v35 = *(v32 - 1);
      v32 -= 2;
      v47 = v33;
      if (*(_QWORD *)(a5 + 16))
      {
        v37 = *v33;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v38 = sub_1D5D7FFCC(v37, v34);
        v39 = 0.0;
        if ((v40 & 1) != 0)
          v39 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v38 + 32);
        v41 = v7 - 2;
        if (*(_QWORD *)(a5 + 16))
        {
          swift_bridgeObjectRetain();
          v42 = sub_1D5D7FFCC(v36, v35);
          if ((v43 & 1) != 0)
          {
            v44 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v42 + 32);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v17 = v48;
            if (v44 < v39)
              goto LABEL_54;
            goto LABEL_44;
          }
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        v41 = v7 - 2;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v39 = 0.0;
      }
      v17 = v48;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v39 > 0.0)
      {
LABEL_54:
        if (v7 < v8 || v41 >= v8 || v7 != v8)
          *(_OWORD *)v41 = *(_OWORD *)v32;
        goto LABEL_58;
      }
LABEL_44:
      if (v7 < (uint64_t *)v17 || v41 >= (uint64_t *)v17)
      {
        v17 = (char *)v47;
      }
      else
      {
        v30 = v7 == (uint64_t *)v17;
        v17 = (char *)v47;
        if (v30)
        {
          v32 = v8;
          goto LABEL_58;
        }
      }
      *(_OWORD *)v41 = *(_OWORD *)v17;
      v32 = v8;
LABEL_58:
      if (v32 <= v9)
      {
        v8 = v32;
        goto LABEL_62;
      }
      v8 = v32;
      v7 = v41;
      v16 = v46;
      if (v17 <= (char *)v46)
      {
        v8 = v32;
        goto LABEL_63;
      }
    }
  }
  v16 = a4;
  if (a4 != __dst || &__dst[2 * v12] <= a4)
    memmove(a4, __dst, 16 * v12);
  v17 = (char *)&a4[2 * v12];
  if (v8 < v7 && v10 >= 16)
  {
    do
    {
      v18 = v8[1];
      v19 = v16[1];
      if (*(_QWORD *)(a5 + 16))
      {
        v20 = v17;
        v21 = *v16;
        v22 = *v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23 = sub_1D5D7FFCC(v22, v18);
        v24 = 0.0;
        if ((v25 & 1) != 0)
          v24 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v23 + 32);
        if (*(_QWORD *)(a5 + 16))
        {
          swift_bridgeObjectRetain();
          v26 = sub_1D5D7FFCC(v21, v19);
          if ((v27 & 1) != 0)
          {
            v28 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v26 + 32);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v17 = v20;
            if (v28 < v24)
              goto LABEL_24;
            goto LABEL_17;
          }
          swift_bridgeObjectRelease();
        }
        v17 = v20;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v24 = 0.0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v24 > 0.0)
      {
LABEL_24:
        v31 = v8 + 2;
        v29 = v8;
        if (v9 == v8)
        {
          v8 += 2;
          if (v9 < v31)
            goto LABEL_29;
        }
        else
        {
          v8 += 2;
        }
LABEL_28:
        *(_OWORD *)v9 = *(_OWORD *)v29;
        goto LABEL_29;
      }
LABEL_17:
      v29 = v16;
      v30 = v9 == v16;
      v16 += 2;
      if (!v30)
        goto LABEL_28;
LABEL_29:
      v9 += 2;
    }
    while (v16 < (uint64_t *)v17 && v8 < v7);
  }
  v8 = v9;
LABEL_63:
  if (v8 != v16
    || v8 >= (uint64_t *)((char *)v16
                       + ((v17 - (char *)v16 + (v17 - (char *)v16 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0)))
  {
    memmove(v8, v16, 16 * ((v17 - (char *)v16) / 16));
  }
  return 1;
}

uint64_t sub_1D5E1A95C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  char v16;
  unint64_t v17;
  char v18;
  double v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t *v23;

  v22 = result;
  if (a3 != a2)
  {
    v6 = a3;
    v7 = *a4;
    v8 = (uint64_t *)(*a4 + 16 * a3);
LABEL_5:
    v9 = *(_QWORD *)(v7 + 16 * v6 + 8);
    v10 = v22;
    v23 = v8;
    while (1)
    {
      v12 = *(v8 - 2);
      v11 = *(v8 - 1);
      if (*(_QWORD *)(a5 + 16))
      {
        v13 = *v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v14 = sub_1D5D7FFCC(v13, v9);
        v15 = 0.0;
        if ((v16 & 1) != 0)
          v15 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v14 + 32);
        if (*(_QWORD *)(a5 + 16))
        {
          swift_bridgeObjectRetain();
          v17 = sub_1D5D7FFCC(v12, v11);
          if ((v18 & 1) != 0)
          {
            v19 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v17 + 32);
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease_n();
            if (v19 >= v15)
              goto LABEL_4;
            goto LABEL_16;
          }
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v15 = 0.0;
      }
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v15 <= 0.0)
        goto LABEL_4;
LABEL_16:
      if (!v7)
      {
        __break(1u);
        return result;
      }
      v20 = *v8;
      v9 = v8[1];
      *(_OWORD *)v8 = *((_OWORD *)v8 - 1);
      *(v8 - 1) = v9;
      *(v8 - 2) = v20;
      v8 -= 2;
      if (v6 == ++v10)
      {
LABEL_4:
        ++v6;
        v8 = v23 + 2;
        if (v6 == a2)
          return result;
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1D5E1AAF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  double v22;
  double v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  double v57;
  char v58;
  unint64_t v59;
  char v60;
  double v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t *v113;
  unint64_t v114;
  uint64_t result;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t *v122;
  uint64_t *v123;
  char *v124;
  unint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v5 = a1[1];
  swift_bridgeObjectRetain_n();
  v6 = sub_1D5E378C0();
  if (v6 >= v5)
  {
    if (v5 < 0)
      goto LABEL_160;
    if (!v5)
      return swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain();
    sub_1D5E1A95C(0, v5, 1, a1, a2);
    if (!v2)
      return swift_bridgeObjectRelease_n();
LABEL_137:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_159;
  v141 = a2;
  v129 = v6;
  v130 = v5;
  v138 = v2;
  v126 = a1;
  if (v5 > 1)
  {
    v8 = v7 >> 1;
    v9 = sub_1D5E3753C();
    *(_QWORD *)(v9 + 16) = v8;
    v128 = v9;
    v133 = (uint64_t *)(v9 + 32);
LABEL_13:
    v11 = 0;
    v139 = *a1;
    v127 = *a1 + 24;
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v12 = v130;
    while (1)
    {
      v14 = v11++;
      if (v11 >= v12)
      {
        v27 = v139;
      }
      else
      {
        v15 = (uint64_t *)(v139 + 16 * v11);
        v16 = v15[1];
        v17 = (uint64_t *)(v139 + 16 * v14);
        v18 = v17[1];
        if (*(_QWORD *)(a2 + 16))
        {
          v19 = *v17;
          v20 = *v15;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v21 = sub_1D5D7FFCC(v20, v16);
          a2 = v141;
          v22 = 0.0;
          v23 = 0.0;
          if ((v24 & 1) != 0)
            v23 = *(double *)(*(_QWORD *)(v141 + 56) + 40 * v21 + 32);
          if (*(_QWORD *)(v141 + 16))
          {
            swift_bridgeObjectRetain();
            v25 = sub_1D5D7FFCC(v19, v18);
            if ((v26 & 1) != 0)
              v22 = *(double *)(*(_QWORD *)(v141 + 56) + 40 * v25 + 32);
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v23 = 0.0;
          v22 = 0.0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = v14 + 2;
        v12 = v130;
        if (v14 + 2 < v130)
        {
          v28 = (uint64_t *)(v127 + 16 * v14);
          v29 = v28;
          while (1)
          {
            v32 = v29[2];
            v29 += 2;
            v31 = v32;
            v33 = *v28;
            if (*(_QWORD *)(a2 + 16))
            {
              v34 = *(v28 - 1);
              v35 = v28[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v36 = sub_1D5D7FFCC(v35, v31);
              a2 = v141;
              v30 = 0.0;
              if ((v37 & 1) != 0)
                v30 = *(double *)(*(_QWORD *)(v141 + 56) + 40 * v36 + 32);
              if (*(_QWORD *)(v141 + 16))
              {
                swift_bridgeObjectRetain();
                v38 = sub_1D5D7FFCC(v34, v33);
                if ((v39 & 1) != 0)
                {
                  v40 = *(double *)(*(_QWORD *)(v141 + 56) + 40 * v38 + 32);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  if (v22 < v23 == v40 >= v30)
                  {
LABEL_39:
                    v12 = v130;
                    break;
                  }
                  goto LABEL_30;
                }
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v30 = 0.0;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v22 < v23 == v30 <= 0.0)
              goto LABEL_39;
LABEL_30:
            ++v11;
            v28 = v29;
            v12 = v130;
            if (v130 == v11)
            {
              v11 = v130;
              break;
            }
          }
        }
        v27 = v139;
        if (v22 < v23)
        {
          if (v11 < v14)
            goto LABEL_161;
          if (v14 < v11)
          {
            v41 = 16 * v11;
            v42 = 16 * v14;
            v43 = v11;
            v44 = v14;
            do
            {
              if (v44 != --v43)
              {
                if (!v139)
                  goto LABEL_166;
                v45 = v139 + v41;
                v46 = *(_QWORD *)(v139 + v42);
                v47 = *(_QWORD *)(v139 + v42 + 8);
                *(_OWORD *)(v139 + v42) = *(_OWORD *)(v139 + v41 - 16);
                *(_QWORD *)(v45 - 16) = v46;
                *(_QWORD *)(v45 - 8) = v47;
              }
              ++v44;
              v41 -= 16;
              v42 += 16;
            }
            while (v44 < v43);
          }
        }
      }
      if (v11 >= v12)
        goto LABEL_74;
      if (__OFSUB__(v11, v14))
        goto LABEL_158;
      if (v11 - v14 >= v129)
        goto LABEL_74;
      v48 = v14 + v129;
      if (__OFADD__(v14, v129))
        goto LABEL_162;
      if (v48 >= v12)
        v48 = v12;
      if (v48 < v14)
      {
LABEL_163:
        __break(1u);
LABEL_164:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_165:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_166:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_167:
        result = swift_bridgeObjectRelease_n();
        __break(1u);
        return result;
      }
      if (v11 == v48)
        goto LABEL_74;
      v136 = v14;
      v49 = (uint64_t *)(v27 + 16 * v11);
      v131 = v48;
      while (2)
      {
        v50 = *(_QWORD *)(v27 + 16 * v11 + 8);
        v51 = v136;
        v52 = v49;
        do
        {
          v54 = *(v52 - 2);
          v53 = *(v52 - 1);
          if (*(_QWORD *)(a2 + 16))
          {
            v55 = *v52;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v56 = sub_1D5D7FFCC(v55, v50);
            a2 = v141;
            v57 = 0.0;
            if ((v58 & 1) != 0)
              v57 = *(double *)(*(_QWORD *)(v141 + 56) + 40 * v56 + 32);
            if (*(_QWORD *)(v141 + 16))
            {
              swift_bridgeObjectRetain();
              v59 = sub_1D5D7FFCC(v54, v53);
              if ((v60 & 1) != 0)
              {
                v61 = *(double *)(*(_QWORD *)(v141 + 56) + 40 * v59 + 32);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                if (v61 >= v57)
                  break;
                goto LABEL_70;
              }
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v57 = 0.0;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v57 <= 0.0)
            break;
LABEL_70:
          if (!v139)
            goto LABEL_164;
          v62 = *v52;
          v50 = v52[1];
          *(_OWORD *)v52 = *((_OWORD *)v52 - 1);
          *(v52 - 1) = v50;
          *(v52 - 2) = v62;
          v52 -= 2;
          ++v51;
        }
        while (v11 != v51);
        ++v11;
        v49 += 2;
        v27 = v139;
        if (v11 != v131)
          continue;
        break;
      }
      v11 = v131;
      v14 = v136;
LABEL_74:
      if (v11 < v14)
        goto LABEL_153;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1D5E258D0(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v64 = *((_QWORD *)v10 + 2);
      v63 = *((_QWORD *)v10 + 3);
      v13 = v64 + 1;
      if (v64 >= v63 >> 1)
        v10 = sub_1D5E258D0((char *)(v63 > 1), v64 + 1, 1, v10);
      *((_QWORD *)v10 + 2) = v13;
      v65 = v10 + 32;
      v66 = &v10[16 * v64 + 32];
      *(_QWORD *)v66 = v14;
      *((_QWORD *)v66 + 1) = v11;
      if (v64)
      {
        v134 = v10;
        v137 = v10 + 32;
        v132 = v11;
        while (1)
        {
          v67 = v13 - 1;
          if (v13 >= 4)
          {
            v72 = &v65[16 * v13];
            v73 = *((_QWORD *)v72 - 8);
            v74 = *((_QWORD *)v72 - 7);
            v78 = __OFSUB__(v74, v73);
            v75 = v74 - v73;
            if (v78)
              goto LABEL_142;
            v77 = *((_QWORD *)v72 - 6);
            v76 = *((_QWORD *)v72 - 5);
            v78 = __OFSUB__(v76, v77);
            v70 = v76 - v77;
            v71 = v78;
            if (v78)
              goto LABEL_143;
            v79 = v13 - 2;
            v80 = &v65[16 * v13 - 32];
            v82 = *(_QWORD *)v80;
            v81 = *((_QWORD *)v80 + 1);
            v78 = __OFSUB__(v81, v82);
            v83 = v81 - v82;
            if (v78)
              goto LABEL_144;
            v78 = __OFADD__(v70, v83);
            v84 = v70 + v83;
            if (v78)
              goto LABEL_146;
            if (v84 >= v75)
            {
              v102 = &v65[16 * v67];
              v104 = *(_QWORD *)v102;
              v103 = *((_QWORD *)v102 + 1);
              v78 = __OFSUB__(v103, v104);
              v105 = v103 - v104;
              if (v78)
                goto LABEL_152;
              v95 = v70 < v105;
              goto LABEL_112;
            }
          }
          else
          {
            if (v13 != 3)
            {
              v96 = *((_QWORD *)v10 + 4);
              v97 = *((_QWORD *)v10 + 5);
              v78 = __OFSUB__(v97, v96);
              v89 = v97 - v96;
              v90 = v78;
              goto LABEL_106;
            }
            v69 = *((_QWORD *)v10 + 4);
            v68 = *((_QWORD *)v10 + 5);
            v78 = __OFSUB__(v68, v69);
            v70 = v68 - v69;
            v71 = v78;
          }
          if ((v71 & 1) != 0)
            goto LABEL_145;
          v79 = v13 - 2;
          v85 = &v65[16 * v13 - 32];
          v87 = *(_QWORD *)v85;
          v86 = *((_QWORD *)v85 + 1);
          v88 = __OFSUB__(v86, v87);
          v89 = v86 - v87;
          v90 = v88;
          if (v88)
            goto LABEL_147;
          v91 = &v65[16 * v67];
          v93 = *(_QWORD *)v91;
          v92 = *((_QWORD *)v91 + 1);
          v78 = __OFSUB__(v92, v93);
          v94 = v92 - v93;
          if (v78)
            goto LABEL_149;
          if (__OFADD__(v89, v94))
            goto LABEL_151;
          if (v89 + v94 >= v70)
          {
            v95 = v70 < v94;
LABEL_112:
            if (v95)
              v67 = v79;
            goto LABEL_114;
          }
LABEL_106:
          if ((v90 & 1) != 0)
            goto LABEL_148;
          v98 = &v65[16 * v67];
          v100 = *(_QWORD *)v98;
          v99 = *((_QWORD *)v98 + 1);
          v78 = __OFSUB__(v99, v100);
          v101 = v99 - v100;
          if (v78)
            goto LABEL_150;
          if (v101 < v89)
            goto LABEL_15;
LABEL_114:
          v106 = v67 - 1;
          if (v67 - 1 >= v13)
          {
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
            goto LABEL_163;
          }
          if (!v139)
            goto LABEL_165;
          v107 = &v65[16 * v106];
          v108 = *(_QWORD *)v107;
          v109 = v67;
          v110 = &v65[16 * v67];
          v111 = *((_QWORD *)v110 + 1);
          v112 = (uint64_t *)(v139 + 16 * *(_QWORD *)v107);
          v113 = (uint64_t *)(v139 + 16 * *(_QWORD *)v110);
          swift_bridgeObjectRetain();
          sub_1D5E1A558(v112, v113, (uint64_t *)(v139 + 16 * v111), v133, v141);
          if (v138)
          {
LABEL_136:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v128 + 16) = 0;
            goto LABEL_137;
          }
          swift_bridgeObjectRelease();
          if (v111 < v108)
            goto LABEL_139;
          if (v109 > *((_QWORD *)v134 + 2))
            goto LABEL_140;
          *(_QWORD *)v107 = v108;
          *(_QWORD *)&v137[16 * v106 + 8] = v111;
          v114 = *((_QWORD *)v134 + 2);
          if (v109 >= v114)
            goto LABEL_141;
          v10 = v134;
          v138 = 0;
          v13 = v114 - 1;
          memmove(v110, v110 + 16, 16 * (v114 - 1 - v109));
          v65 = v137;
          *((_QWORD *)v134 + 2) = v114 - 1;
          a2 = v141;
          v11 = v132;
          if (v114 <= 2)
            goto LABEL_15;
        }
      }
      v13 = 1;
LABEL_15:
      v12 = v130;
      if (v11 >= v130)
        goto LABEL_124;
    }
  }
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v133 = (uint64_t *)(MEMORY[0x1E0DEE9D8] + 32);
  v128 = MEMORY[0x1E0DEE9D8];
  if (v5 == 1)
    goto LABEL_13;
  v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_124:
  if (v13 >= 2)
  {
    v116 = *v126;
    v140 = *v126;
    do
    {
      v117 = v13 - 2;
      if (v13 < 2)
        goto LABEL_154;
      if (!v116)
        goto LABEL_167;
      v135 = v10;
      v118 = v10 + 32;
      v119 = *(_QWORD *)&v10[16 * v117 + 32];
      v120 = *(_QWORD *)&v118[16 * v13 - 8];
      v121 = (uint64_t *)(v116 + 16 * v119);
      v122 = (uint64_t *)(v116 + 16 * *(_QWORD *)&v118[16 * v13 - 16]);
      v123 = (uint64_t *)(v116 + 16 * v120);
      swift_bridgeObjectRetain();
      sub_1D5E1A558(v121, v122, v123, v133, v141);
      if (v138)
        goto LABEL_136;
      swift_bridgeObjectRelease();
      if (v120 < v119)
        goto LABEL_155;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v135 = sub_1D5E259C8((uint64_t)v135);
      if (v117 >= *((_QWORD *)v135 + 2))
        goto LABEL_156;
      v124 = &v135[16 * v117 + 32];
      *(_QWORD *)v124 = v119;
      *((_QWORD *)v124 + 1) = v120;
      v125 = *((_QWORD *)v135 + 2);
      if (v13 > v125)
        goto LABEL_157;
      v10 = v135;
      memmove(&v135[16 * v13 + 16], &v135[16 * v13 + 32], 16 * (v125 - v13));
      *((_QWORD *)v135 + 2) = v125 - 1;
      v13 = v125 - 1;
      v116 = v140;
    }
    while (v125 > 2);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v128 + 16) = 0;
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5E1B4F0(char **a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_1D5E26050((uint64_t)v4);
  v5 = *((_QWORD *)v4 + 2);
  v7[0] = (uint64_t)(v4 + 32);
  v7[1] = v5;
  swift_bridgeObjectRetain();
  sub_1D5E1AAF4(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D5E1B590(uint64_t *__src, char *__dst, unint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t *v6;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  char v24;
  double v25;
  unint64_t v26;
  char v27;
  double v28;
  uint64_t *v29;
  BOOL v30;
  char *v31;
  char *v32;
  _OWORD *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  double v42;
  unint64_t v43;
  char v44;
  double v45;
  BOOL v46;
  uint64_t v48;
  uint64_t *v49;
  char *v50;

  v6 = a4;
  v8 = (char *)__src;
  v9 = __dst - (char *)__src;
  v10 = __dst - (char *)__src + 15;
  if (__dst - (char *)__src >= 0)
    v10 = __dst - (char *)__src;
  v11 = v10 >> 4;
  v12 = a3 - (_QWORD)__dst;
  v13 = a3 - (_QWORD)__dst + 15;
  if ((uint64_t)(a3 - (_QWORD)__dst) >= 0)
    v13 = a3 - (_QWORD)__dst;
  v14 = v13 >> 4;
  if (v11 >= v13 >> 4)
  {
    if (a4 != (uint64_t *)__dst || &__dst[16 * v14] <= (char *)a4)
    {
      v32 = __dst;
      memmove(a4, __dst, 16 * v14);
      __dst = v32;
    }
    v16 = &v6[2 * v14];
    if (v8 >= __dst || v12 < 16)
      goto LABEL_58;
    v33 = (_OWORD *)(a3 - 16);
    while (1)
    {
      v34 = (uint64_t *)(v33 + 1);
      v35 = v16 - 2;
      if (*(_QWORD *)(a5 + 16))
      {
        v36 = *(v16 - 1);
        v50 = __dst;
        v38 = *((_QWORD *)__dst - 1);
        v37 = (uint64_t *)(__dst - 16);
        v48 = *((_QWORD *)__dst - 2);
        v49 = v16;
        v39 = *v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v40 = sub_1D5D7FFCC(v39, v36);
        if ((v41 & 1) != 0)
        {
          if (!*(_QWORD *)(a5 + 16))
            goto LABEL_51;
          v42 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v40 + 32);
          swift_bridgeObjectRetain();
          v43 = sub_1D5D7FFCC(v48, v38);
          if ((v44 & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_51:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            __dst = v50;
            v16 = v49;
            if (v34 != (uint64_t *)v50)
            {
LABEL_52:
              __dst = (char *)v37;
              goto LABEL_53;
            }
LABEL_41:
            v46 = v33 >= (_OWORD *)__dst;
            __dst = (char *)v37;
            if (v46)
              goto LABEL_53;
            goto LABEL_54;
          }
          v45 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v43 + 32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          __dst = v50;
          v16 = v49;
          if (v45 < v42)
          {
            if (v34 != (uint64_t *)v50)
              goto LABEL_52;
            goto LABEL_41;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __dst = v50;
          v16 = v49;
        }
      }
      v37 = v35;
      if (v34 != v16)
      {
        v16 = v35;
LABEL_53:
        *v33 = *(_OWORD *)v37;
        goto LABEL_54;
      }
      v46 = v33 >= (_OWORD *)v16;
      v16 = v35;
      if (v46)
        goto LABEL_53;
LABEL_54:
      if (__dst > v8)
      {
        --v33;
        if (v16 > v6)
          continue;
      }
      goto LABEL_58;
    }
  }
  if (a4 != __src || &__src[2 * v11] <= a4)
  {
    v15 = __dst;
    memmove(a4, __src, 16 * v11);
    __dst = v15;
  }
  v16 = &v6[2 * v11];
  if ((unint64_t)__dst < a3 && v9 >= 16)
  {
    while (1)
    {
      if (!*(_QWORD *)(a5 + 16))
        goto LABEL_18;
      v17 = v16;
      v19 = *v6;
      v18 = v6[1];
      v20 = *(_QWORD *)__dst;
      v21 = *((_QWORD *)__dst + 1);
      v22 = __dst;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = sub_1D5D7FFCC(v20, v21);
      if ((v24 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __dst = v22;
        v16 = v17;
LABEL_18:
        v29 = v6;
        v30 = v8 == (char *)v6;
        v6 += 2;
        if (v30)
          goto LABEL_20;
LABEL_19:
        *(_OWORD *)v8 = *(_OWORD *)v29;
        goto LABEL_20;
      }
      if (!*(_QWORD *)(a5 + 16))
        goto LABEL_24;
      v25 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v23 + 32);
      swift_bridgeObjectRetain();
      v26 = sub_1D5D7FFCC(v19, v18);
      if ((v27 & 1) == 0)
        break;
      v28 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v26 + 32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      __dst = v22;
      v16 = v17;
      if (v28 >= v25)
        goto LABEL_18;
LABEL_25:
      v31 = __dst + 16;
      v29 = (uint64_t *)__dst;
      if (v8 != __dst)
      {
        __dst += 16;
        goto LABEL_19;
      }
      __dst += 16;
      if (v8 >= v31)
        goto LABEL_19;
LABEL_20:
      v8 += 16;
      if (v6 >= v16 || (unint64_t)__dst >= a3)
        goto LABEL_57;
    }
    swift_bridgeObjectRelease();
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __dst = v22;
    v16 = v17;
    goto LABEL_25;
  }
LABEL_57:
  __dst = v8;
LABEL_58:
  if (__dst != (char *)v6
    || __dst >= (char *)v6
              + (((char *)v16 - (char *)v6 + ((char *)v16 - (char *)v6 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0))
  {
    memmove(__dst, v6, 16 * (((char *)v16 - (char *)v6) / 16));
  }
  return 1;
}

uint64_t sub_1D5E1B970(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  double v15;
  unint64_t v16;
  char v17;
  double v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;

  v21 = result;
  if (a3 != a2)
  {
    v6 = a3;
    v23 = *a4;
    v7 = (uint64_t *)(*a4 + 16 * a3);
LABEL_6:
    v8 = *(_QWORD *)(v23 + 16 * v6 + 8);
    v9 = v21;
    v22 = v7;
    while (1)
    {
      if (!*(_QWORD *)(a5 + 16))
        goto LABEL_5;
      v11 = *(v7 - 2);
      v10 = *(v7 - 1);
      v12 = *v7;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v13 = sub_1D5D7FFCC(v12, v8);
      if ((v14 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v6;
        v7 = v22 + 2;
        if (v6 == a2)
          return result;
        goto LABEL_6;
      }
      v15 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v13 + 32);
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(a5 + 16))
        goto LABEL_14;
      swift_bridgeObjectRetain();
      v16 = sub_1D5D7FFCC(v11, v10);
      if ((v17 & 1) == 0)
        break;
      v18 = *(double *)(*(_QWORD *)(a5 + 56) + 40 * v16 + 32);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease_n();
      if (v18 >= v15)
        goto LABEL_5;
LABEL_15:
      if (!v23)
      {
        __break(1u);
        return result;
      }
      v19 = *v7;
      v8 = v7[1];
      *(_OWORD *)v7 = *((_OWORD *)v7 - 1);
      *(v7 - 1) = v8;
      *(v7 - 2) = v19;
      v7 -= 2;
      if (v6 == ++v9)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_1D5E1BB10(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  double v24;
  unint64_t v25;
  char v26;
  double v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  double v40;
  unint64_t v41;
  char v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  double v59;
  unint64_t v60;
  char v61;
  double v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t *v113;
  char *v114;
  unint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t result;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  char *v125;
  unint64_t v126;
  char *v127;
  unint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t *v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  v5 = a1[1];
  swift_bridgeObjectRetain_n();
  v6 = sub_1D5E378C0();
  if (v6 >= v5)
  {
    if (v5 < 0)
      goto LABEL_169;
    if (!v5)
      return swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain();
    sub_1D5E1B970(0, v5, 1, a1, a2);
    if (!v2)
      return swift_bridgeObjectRelease_n();
LABEL_146:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_168;
  v145 = a2;
  v136 = v5;
  v132 = v6;
  v142 = v2;
  v129 = a1;
  if (v5 > 1)
  {
    v8 = v7 >> 1;
    v9 = sub_1D5E3753C();
    *(_QWORD *)(v9 + 16) = v8;
    v131 = v9;
    v137 = (uint64_t *)(v9 + 32);
LABEL_13:
    v11 = 0;
    v12 = *a1;
    v130 = *a1 + 8;
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v13 = v136;
    v143 = *a1;
    while (1)
    {
      v15 = v11 + 1;
      if (v11 + 1 < v13)
      {
        if (!*(_QWORD *)(a2 + 16))
        {
          v29 = v11 + 2;
          if (v11 + 2 < v13)
          {
            v28 = 0;
            goto LABEL_32;
          }
          goto LABEL_56;
        }
        v16 = (uint64_t *)(v12 + 16 * v15);
        v17 = (uint64_t *)(v12 + 16 * v11);
        v18 = *v17;
        v19 = v17[1];
        v20 = *v16;
        v21 = v16[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22 = sub_1D5D7FFCC(v20, v21);
        if ((v23 & 1) != 0)
        {
          if (!*(_QWORD *)(a2 + 16))
            goto LABEL_29;
          v24 = *(double *)(*(_QWORD *)(a2 + 56) + 40 * v22 + 32);
          swift_bridgeObjectRetain();
          v25 = sub_1D5D7FFCC(v18, v19);
          if ((v26 & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_29:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v29 = v11 + 2;
            v13 = v136;
            if (v11 + 2 < v136)
            {
              v28 = 1;
LABEL_31:
              v12 = v143;
LABEL_32:
              v30 = v11 + 1;
              v31 = (uint64_t *)(v130 + 16 * v29);
              v32 = v29;
              while (2)
              {
                v29 = v32;
                if (!*(_QWORD *)(v145 + 16))
                {
                  if (v28)
                    goto LABEL_48;
                  goto LABEL_34;
                }
                v33 = *(v31 - 1);
                v34 = *v31;
                v35 = (uint64_t *)(v12 + 16 * v30);
                v37 = *v35;
                v36 = v35[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v38 = sub_1D5D7FFCC(v33, v34);
                if ((v39 & 1) != 0)
                {
                  if (*(_QWORD *)(v145 + 16))
                  {
                    v40 = *(double *)(*(_QWORD *)(v145 + 56) + 40 * v38 + 32);
                    swift_bridgeObjectRetain();
                    v41 = sub_1D5D7FFCC(v37, v36);
                    if ((v42 & 1) != 0)
                    {
                      v43 = *(double *)(*(_QWORD *)(v145 + 56) + 40 * v41 + 32);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease_n();
                      v13 = v136;
                      v12 = v143;
                      if (((v28 ^ (v43 >= v40)) & 1) == 0)
                        goto LABEL_47;
                      goto LABEL_34;
                    }
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v13 = v136;
                  v12 = v143;
                  if (!v28)
                    goto LABEL_56;
                }
                else
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v13 = v136;
                  v12 = v143;
                  if (v28)
                    goto LABEL_48;
                }
LABEL_34:
                v32 = v29 + 1;
                v31 += 2;
                v30 = v29;
                if (v29 + 1 >= v13)
                {
                  ++v29;
                  goto LABEL_47;
                }
                continue;
              }
            }
            v12 = v143;
            if (v11 < v29)
              goto LABEL_50;
LABEL_56:
            v15 = v29;
            goto LABEL_57;
          }
          v27 = *(double *)(*(_QWORD *)(a2 + 56) + 40 * v25 + 32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v28 = v27 < v24;
          v29 = v11 + 2;
          v13 = v136;
          v12 = v143;
          if (v11 + 2 < v136)
            goto LABEL_32;
LABEL_47:
          v15 = v29;
          if (v28)
          {
LABEL_48:
            if (v29 < v11)
              goto LABEL_172;
            if (v11 < v29)
            {
LABEL_50:
              v44 = 16 * v29;
              v45 = 16 * v11;
              v46 = v29;
              v47 = v11;
              while (1)
              {
                if (v47 != --v46)
                {
                  if (!v12)
                    goto LABEL_175;
                  v48 = v12 + v44;
                  v49 = *(_QWORD *)(v12 + v45);
                  v50 = *(_QWORD *)(v12 + v45 + 8);
                  *(_OWORD *)(v12 + v45) = *(_OWORD *)(v12 + v44 - 16);
                  *(_QWORD *)(v48 - 16) = v49;
                  *(_QWORD *)(v48 - 8) = v50;
                }
                ++v47;
                v44 -= 16;
                v45 += 16;
                if (v47 >= v46)
                  goto LABEL_56;
              }
            }
            goto LABEL_56;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v29 = v11 + 2;
          v13 = v136;
          if (v11 + 2 < v136)
          {
            v28 = 0;
            goto LABEL_31;
          }
          v15 = v11 + 2;
          v12 = v143;
        }
      }
LABEL_57:
      if (v15 >= v13)
        goto LABEL_80;
      if (__OFSUB__(v15, v11))
        goto LABEL_167;
      if (v15 - v11 >= v132)
      {
LABEL_80:
        a2 = v145;
LABEL_81:
        if (v15 < v11)
          goto LABEL_162;
        goto LABEL_82;
      }
      v51 = v11 + v132;
      if (__OFADD__(v11, v132))
        goto LABEL_170;
      if (v51 >= v13)
        v51 = v13;
      a2 = v145;
      if (v51 < v11)
      {
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_174:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_175:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_176:
        result = swift_bridgeObjectRelease_n();
        __break(1u);
        return result;
      }
      if (v15 == v51)
        goto LABEL_81;
      v52 = (uint64_t *)(v12 + 16 * v15);
      v133 = v51;
      v135 = v11;
      while (2)
      {
        v53 = *(_QWORD *)(v12 + 16 * v15 + 8);
        v138 = v52;
        while (*(_QWORD *)(a2 + 16))
        {
          v55 = *(v52 - 2);
          v54 = *(v52 - 1);
          v56 = *v52;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          a2 = v145;
          v57 = sub_1D5D7FFCC(v56, v53);
          if ((v58 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v12 = v143;
            break;
          }
          v59 = *(double *)(*(_QWORD *)(v145 + 56) + 40 * v57 + 32);
          swift_bridgeObjectRelease();
          if (!*(_QWORD *)(v145 + 16))
            goto LABEL_76;
          swift_bridgeObjectRetain();
          v60 = sub_1D5D7FFCC(v55, v54);
          if ((v61 & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_76:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_77;
          }
          v62 = *(double *)(*(_QWORD *)(v145 + 56) + 40 * v60 + 32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          if (v62 >= v59)
          {
            v12 = v143;
            break;
          }
LABEL_77:
          v12 = v143;
          if (!v143)
            goto LABEL_173;
          v63 = *v52;
          v53 = v52[1];
          *(_OWORD *)v52 = *((_OWORD *)v52 - 1);
          *(v52 - 1) = v53;
          *(v52 - 2) = v63;
          v52 -= 2;
          if (v15 == ++v11)
            break;
        }
        ++v15;
        v52 = v138 + 2;
        v11 = v135;
        if (v15 != v133)
          continue;
        break;
      }
      v15 = v133;
      if (v133 < v135)
        goto LABEL_162;
LABEL_82:
      v134 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1D5E258D0(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v65 = *((_QWORD *)v10 + 2);
      v64 = *((_QWORD *)v10 + 3);
      v14 = v65 + 1;
      v12 = v143;
      if (v65 >= v64 >> 1)
      {
        v117 = sub_1D5E258D0((char *)(v64 > 1), v65 + 1, 1, v10);
        v12 = v143;
        v10 = v117;
      }
      *((_QWORD *)v10 + 2) = v14;
      v139 = v10 + 32;
      v66 = &v10[16 * v65 + 32];
      *(_QWORD *)v66 = v11;
      *((_QWORD *)v66 + 1) = v134;
      if (v65)
      {
        v67 = v10 + 32;
        v140 = v10;
        while (1)
        {
          v68 = v14 - 1;
          if (v14 >= 4)
          {
            v73 = &v67[16 * v14];
            v74 = *((_QWORD *)v73 - 8);
            v75 = *((_QWORD *)v73 - 7);
            v79 = __OFSUB__(v75, v74);
            v76 = v75 - v74;
            if (v79)
              goto LABEL_151;
            v78 = *((_QWORD *)v73 - 6);
            v77 = *((_QWORD *)v73 - 5);
            v79 = __OFSUB__(v77, v78);
            v71 = v77 - v78;
            v72 = v79;
            if (v79)
              goto LABEL_152;
            v80 = v14 - 2;
            v81 = &v67[16 * v14 - 32];
            v83 = *(_QWORD *)v81;
            v82 = *((_QWORD *)v81 + 1);
            v79 = __OFSUB__(v82, v83);
            v84 = v82 - v83;
            if (v79)
              goto LABEL_153;
            v79 = __OFADD__(v71, v84);
            v85 = v71 + v84;
            if (v79)
              goto LABEL_155;
            if (v85 >= v76)
            {
              v103 = &v67[16 * v68];
              v105 = *(_QWORD *)v103;
              v104 = *((_QWORD *)v103 + 1);
              v79 = __OFSUB__(v104, v105);
              v106 = v104 - v105;
              if (v79)
                goto LABEL_161;
              v96 = v71 < v106;
              goto LABEL_119;
            }
          }
          else
          {
            if (v14 != 3)
            {
              v97 = *((_QWORD *)v10 + 4);
              v98 = *((_QWORD *)v10 + 5);
              v79 = __OFSUB__(v98, v97);
              v90 = v98 - v97;
              v91 = v79;
              goto LABEL_113;
            }
            v70 = *((_QWORD *)v10 + 4);
            v69 = *((_QWORD *)v10 + 5);
            v79 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            v72 = v79;
          }
          if ((v72 & 1) != 0)
            goto LABEL_154;
          v80 = v14 - 2;
          v86 = &v67[16 * v14 - 32];
          v88 = *(_QWORD *)v86;
          v87 = *((_QWORD *)v86 + 1);
          v89 = __OFSUB__(v87, v88);
          v90 = v87 - v88;
          v91 = v89;
          if (v89)
            goto LABEL_156;
          v92 = &v67[16 * v68];
          v94 = *(_QWORD *)v92;
          v93 = *((_QWORD *)v92 + 1);
          v79 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          if (v79)
            goto LABEL_158;
          if (__OFADD__(v90, v95))
            goto LABEL_160;
          if (v90 + v95 >= v71)
          {
            v96 = v71 < v95;
LABEL_119:
            if (v96)
              v68 = v80;
            goto LABEL_121;
          }
LABEL_113:
          if ((v91 & 1) != 0)
            goto LABEL_157;
          v99 = &v67[16 * v68];
          v101 = *(_QWORD *)v99;
          v100 = *((_QWORD *)v99 + 1);
          v79 = __OFSUB__(v100, v101);
          v102 = v100 - v101;
          if (v79)
            goto LABEL_159;
          if (v102 < v90)
            goto LABEL_15;
LABEL_121:
          v107 = v68 - 1;
          if (v68 - 1 >= v14)
          {
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
            goto LABEL_171;
          }
          if (!v12)
            goto LABEL_174;
          v108 = v67;
          v109 = &v67[16 * v107];
          v110 = *(_QWORD *)v109;
          v111 = &v108[16 * v68];
          v112 = *((_QWORD *)v111 + 1);
          v113 = (uint64_t *)(v12 + 16 * *(_QWORD *)v109);
          v114 = (char *)(v12 + 16 * *(_QWORD *)v111);
          v115 = v12 + 16 * v112;
          swift_bridgeObjectRetain();
          sub_1D5E1B590(v113, v114, v115, v137, v145);
          if (v142)
          {
LABEL_145:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v131 + 16) = 0;
            goto LABEL_146;
          }
          swift_bridgeObjectRelease();
          if (v112 < v110)
            goto LABEL_148;
          if (v68 > *((_QWORD *)v140 + 2))
            goto LABEL_149;
          *(_QWORD *)v109 = v110;
          v67 = v139;
          *(_QWORD *)&v139[16 * v107 + 8] = v112;
          v116 = *((_QWORD *)v140 + 2);
          if (v68 >= v116)
            goto LABEL_150;
          v10 = v140;
          v142 = 0;
          v14 = v116 - 1;
          memmove(v111, v111 + 16, 16 * (v116 - 1 - v68));
          *((_QWORD *)v140 + 2) = v116 - 1;
          a2 = v145;
          v12 = v143;
          if (v116 <= 2)
            goto LABEL_15;
        }
      }
      v14 = 1;
LABEL_15:
      v13 = v136;
      v11 = v134;
      if (v134 >= v136)
        goto LABEL_133;
    }
  }
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v137 = (uint64_t *)(MEMORY[0x1E0DEE9D8] + 32);
  v131 = MEMORY[0x1E0DEE9D8];
  if (v5 == 1)
    goto LABEL_13;
  v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_133:
  if (v14 >= 2)
  {
    v119 = *v129;
    v144 = *v129;
    do
    {
      v120 = v14 - 2;
      if (v14 < 2)
        goto LABEL_163;
      if (!v119)
        goto LABEL_176;
      v141 = v10;
      v121 = v10 + 32;
      v122 = *(_QWORD *)&v10[16 * v120 + 32];
      v123 = *(_QWORD *)&v121[16 * v14 - 8];
      v124 = (uint64_t *)(v119 + 16 * v122);
      v125 = (char *)(v119 + 16 * *(_QWORD *)&v121[16 * v14 - 16]);
      v126 = v119 + 16 * v123;
      swift_bridgeObjectRetain();
      sub_1D5E1B590(v124, v125, v126, v137, v145);
      if (v142)
        goto LABEL_145;
      swift_bridgeObjectRelease();
      if (v123 < v122)
        goto LABEL_164;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v141 = sub_1D5E259C8((uint64_t)v141);
      if (v120 >= *((_QWORD *)v141 + 2))
        goto LABEL_165;
      v127 = &v141[16 * v120 + 32];
      *(_QWORD *)v127 = v122;
      *((_QWORD *)v127 + 1) = v123;
      v128 = *((_QWORD *)v141 + 2);
      if (v14 > v128)
        goto LABEL_166;
      v10 = v141;
      memmove(&v141[16 * v14 + 16], &v141[16 * v14 + 32], 16 * (v128 - v14));
      *((_QWORD *)v141 + 2) = v128 - 1;
      v14 = v128 - 1;
      v119 = v144;
    }
    while (v128 > 2);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v131 + 16) = 0;
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5E1C578(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(_QWORD *, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v8 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = a3(v8);
  v9 = *(_QWORD *)(v8 + 16);
  v11[0] = v8 + 32;
  v11[1] = v9;
  swift_bridgeObjectRetain();
  a4(v11, a2);
  swift_bridgeObjectRelease();
  *a1 = v8;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D5E1C628(uint64_t a1, uint64_t a2, void *__src)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char **v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v16[2];
  uint64_t v17;
  _BYTE __dst[1896];

  memcpy(__dst, __src, sizeof(__dst));
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1D5D95E98(v5);
  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRetain();
  v8 = (char *)sub_1D5D9E030(v7);
  swift_bridgeObjectRelease();
  v16[0] = v8;
  sub_1D5E1B4F0(v16, a1);
  swift_bridgeObjectRelease();
  v9 = v16[0];
  v17 = MEMORY[0x1E0DEE9D8];
  v10 = *((_QWORD *)v16[0] + 2);
  if (v10)
  {
    swift_bridgeObjectRetain();
    v11 = (char **)(v9 + 40);
    do
    {
      v12 = *v11;
      v16[0] = *(v11 - 1);
      v16[1] = v12;
      swift_bridgeObjectRetain();
      sub_1D5E0B76C((uint64_t)&v17, (uint64_t)v16, a2, v6, (uint64_t)__dst, a1);
      v11 += 2;
      swift_bridgeObjectRelease();
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    swift_release_n();
    v13 = v17;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v14 = sub_1D5E18034(v13, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

char *sub_1D5E1C7C8(uint64_t a1, uint64_t a2, char *__src)
{
  char *v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  int64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *__dst[109];
  char v34;
  _BYTE v35[1023];

  v5 = __src + 873;
  if (!__src[872])
  {
    memcpy(__dst, __src, sizeof(__dst));
    v34 = 0;
    memcpy(v35, v5, sizeof(v35));
    return (char *)sub_1D5E1A1E0(a1, a2, __dst);
  }
  if (__src[872] != 1)
  {
    memcpy(__dst, __src, sizeof(__dst));
    v34 = 2;
    memcpy(v35, v5, sizeof(v35));
    return (char *)sub_1D5E1C628(a1, a2, __dst);
  }
  v6 = swift_bridgeObjectRetain();
  __dst[0] = (char *)sub_1D5D9E2F0(v6);
  sub_1D5E0D65C(__dst);
  swift_bridgeObjectRelease();
  v7 = __dst[0];
  v8 = *((_QWORD *)__dst[0] + 2);
  if (v8)
  {
    __dst[0] = (char *)MEMORY[0x1E0DEE9D8];
    sub_1D5DB9E28(0, v8, 0);
    v9 = 0;
    v10 = __dst[0];
    v28 = v8;
    v29 = v7 + 32;
    do
    {
      v11 = &v29[40 * v9];
      v12 = *(_QWORD *)v11;
      v13 = *((_QWORD *)v11 + 1);
      v14 = *((_QWORD *)v11 + 3);
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        v30 = *(_QWORD *)v11;
        v31 = v10;
        v32 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_1D5DB9AEC(0, v15, 0);
        v16 = v32;
        v17 = (uint64_t *)(v14 + 40);
        do
        {
          v18 = *(v17 - 1);
          v19 = *v17;
          v21 = *(_QWORD *)(v32 + 16);
          v20 = *(_QWORD *)(v32 + 24);
          swift_bridgeObjectRetain();
          if (v21 >= v20 >> 1)
            sub_1D5DB9AEC((char *)(v20 > 1), v21 + 1, 1);
          v17 += 14;
          *(_QWORD *)(v32 + 16) = v21 + 1;
          v22 = v32 + 16 * v21;
          *(_QWORD *)(v22 + 32) = v18;
          *(_QWORD *)(v22 + 40) = v19;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v8 = v28;
        v12 = v30;
        v10 = v31;
      }
      else
      {
        swift_bridgeObjectRetain();
        v16 = MEMORY[0x1E0DEE9D8];
      }
      __dst[0] = v10;
      v24 = *((_QWORD *)v10 + 2);
      v23 = *((_QWORD *)v10 + 3);
      if (v24 >= v23 >> 1)
      {
        sub_1D5DB9E28((_QWORD *)(v23 > 1), v24 + 1, 1);
        v10 = __dst[0];
      }
      ++v9;
      *((_QWORD *)v10 + 2) = v24 + 1;
      v25 = &v10[24 * v24];
      *((_QWORD *)v25 + 4) = v12;
      *((_QWORD *)v25 + 5) = v13;
      *((_QWORD *)v25 + 6) = v16;
    }
    while (v9 != v8);
    swift_release();
  }
  else
  {
    swift_release();
    return (char *)MEMORY[0x1E0DEE9D8];
  }
  return v10;
}

unint64_t sub_1D5E1CA84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED9AF518;
  if (!qword_1ED9AF518)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED9AF510);
    result = MEMORY[0x1D827D8E0](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED9AF518);
  }
  return result;
}

uint64_t sub_1D5E1CAD0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5E1CB04(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D5E1CB30()
{
  uint64_t v0;

  return sub_1D5E0A884(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D5E1CB44(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D5E1CB74(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D5E1CBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if (a6 == 5)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t _s23HeadlineClusteringErrorOwxx(uint64_t a1)
{
  return sub_1D5E1CBD4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t sub_1D5E1CBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if (a6 == 5)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s23HeadlineClusteringErrorOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1D5E1CBA4(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t _s23HeadlineClusteringErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1D5E1CBA4(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1D5E1CBD4(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s23HeadlineClusteringErrorOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_1D5E1CBD4(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t _s23HeadlineClusteringErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 7)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s23HeadlineClusteringErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D5E1CDE4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 6u)
    return *(unsigned __int8 *)(a1 + 40);
  else
    return (*(_DWORD *)a1 + 7);
}

uint64_t sub_1D5E1CE00(uint64_t result, unsigned int a2)
{
  if (a2 >= 7)
  {
    *(_QWORD *)result = a2 - 7;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 7;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *_s23HeadlineClusteringErrorOMa()
{
  return &_s23HeadlineClusteringErrorON;
}

uint64_t sub_1D5E1CE34(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 4 || a4 == 5)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t _s22HeadlineClusteringRuleOwxx(uint64_t a1)
{
  return sub_1D5E01820(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t _s22HeadlineClusteringRuleOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1D5E1CE34(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s22HeadlineClusteringRuleOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1D5E1CE34(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1D5E01820(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s22HeadlineClusteringRuleOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1D5E01820(v5, v7, v6, v8);
  return a1;
}

uint64_t _s22HeadlineClusteringRuleOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 7)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s22HeadlineClusteringRuleOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D5E1D024(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1D5E1D030(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *_s22HeadlineClusteringRuleOMa()
{
  return &_s22HeadlineClusteringRuleON;
}

ValueMetadata *_s17HeadlineClustererVMa()
{
  return &_s17HeadlineClustererVN;
}

uint64_t _s22HeadlineClusteringRuleO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s22HeadlineClusteringRuleO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D5E1D134 + 4 * byte_1D5E44255[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D5E1D168 + 4 * byte_1D5E44250[v4]))();
}

uint64_t sub_1D5E1D168(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E1D170(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5E1D178);
  return result;
}

uint64_t sub_1D5E1D184(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5E1D18CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D5E1D190(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E1D198(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E1D1A4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D5E1D1B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s22HeadlineClusteringRuleO10CodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO10CodingKeysON;
}

uint64_t sub_1D5E1D1D0()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO23AccessibilityCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO23AccessibilityCodingKeysON;
}

uint64_t sub_1D5E1D1F8()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO24EvergreenLimitCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO24EvergreenLimitCodingKeysON;
}

uint64_t sub_1D5E1D220()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO19AigcLimitCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO19AigcLimitCodingKeysON;
}

uint64_t sub_1D5E1D248()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO28PublisherDiversityCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO28PublisherDiversityCodingKeysON;
}

uint64_t sub_1D5E1D270()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO24TopicDiversityCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO24TopicDiversityCodingKeysON;
}

uint64_t sub_1D5E1D298()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO26QualitativeLimitCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO26QualitativeLimitCodingKeysON;
}

uint64_t sub_1D5E1D2C0()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO41HardPaywallNewsPlusArticleLimitCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO41HardPaywallNewsPlusArticleLimitCodingKeysON;
}

uint64_t _s22HeadlineClusteringRuleO23AccessibilityCodingKeysOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s22HeadlineClusteringRuleO23AccessibilityCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D5E1D378 + 4 * byte_1D5E4425A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D5E1D398 + 4 * byte_1D5E4425F[v4]))();
}

_BYTE *sub_1D5E1D378(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D5E1D398(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5E1D3A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5E1D3A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D5E1D3B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D5E1D3B8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D5E1D3C4()
{
  return 0;
}

ValueMetadata *_s22HeadlineClusteringRuleO31NoDuplicateThumbnailsCodingKeysOMa()
{
  return &_s22HeadlineClusteringRuleO31NoDuplicateThumbnailsCodingKeysON;
}

unint64_t sub_1D5E1D3E8()
{
  unint64_t result;

  result = qword_1EFFB8B58;
  if (!qword_1EFFB8B58)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E445A0, &_s22HeadlineClusteringRuleO31NoDuplicateThumbnailsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8B58);
  }
  return result;
}

unint64_t sub_1D5E1D430()
{
  unint64_t result;

  result = qword_1EFFB8B60;
  if (!qword_1EFFB8B60)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44658, &_s22HeadlineClusteringRuleO41HardPaywallNewsPlusArticleLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8B60);
  }
  return result;
}

unint64_t sub_1D5E1D478()
{
  unint64_t result;

  result = qword_1EFFB8B68;
  if (!qword_1EFFB8B68)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44710, &_s22HeadlineClusteringRuleO26QualitativeLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8B68);
  }
  return result;
}

unint64_t sub_1D5E1D4C0()
{
  unint64_t result;

  result = qword_1EFFB8B70;
  if (!qword_1EFFB8B70)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E447C8, &_s22HeadlineClusteringRuleO24TopicDiversityCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8B70);
  }
  return result;
}

unint64_t sub_1D5E1D508()
{
  unint64_t result;

  result = qword_1EFFB8B78;
  if (!qword_1EFFB8B78)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44880, &_s22HeadlineClusteringRuleO28PublisherDiversityCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8B78);
  }
  return result;
}

unint64_t sub_1D5E1D550()
{
  unint64_t result;

  result = qword_1EFFB8B80;
  if (!qword_1EFFB8B80)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44938, &_s22HeadlineClusteringRuleO19AigcLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8B80);
  }
  return result;
}

unint64_t sub_1D5E1D598()
{
  unint64_t result;

  result = qword_1EFFB8B88;
  if (!qword_1EFFB8B88)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E449F0, &_s22HeadlineClusteringRuleO24EvergreenLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8B88);
  }
  return result;
}

unint64_t sub_1D5E1D5E0()
{
  unint64_t result;

  result = qword_1EFFB8B90;
  if (!qword_1EFFB8B90)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44AA8, &_s22HeadlineClusteringRuleO23AccessibilityCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8B90);
  }
  return result;
}

unint64_t sub_1D5E1D628()
{
  unint64_t result;

  result = qword_1EFFB8B98;
  if (!qword_1EFFB8B98)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44B60, &_s22HeadlineClusteringRuleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8B98);
  }
  return result;
}

unint64_t sub_1D5E1D670()
{
  unint64_t result;

  result = qword_1ED9AEEA0;
  if (!qword_1ED9AEEA0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44A18, &_s22HeadlineClusteringRuleO23AccessibilityCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEEA0);
  }
  return result;
}

unint64_t sub_1D5E1D6B8()
{
  unint64_t result;

  result = qword_1ED9AEE98;
  if (!qword_1ED9AEE98)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44A40, &_s22HeadlineClusteringRuleO23AccessibilityCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEE98);
  }
  return result;
}

unint64_t sub_1D5E1D700()
{
  unint64_t result;

  result = qword_1ED9AEEB8;
  if (!qword_1ED9AEEB8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44960, &_s22HeadlineClusteringRuleO24EvergreenLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEEB8);
  }
  return result;
}

unint64_t sub_1D5E1D748()
{
  unint64_t result;

  result = qword_1ED9AEEB0;
  if (!qword_1ED9AEEB0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44988, &_s22HeadlineClusteringRuleO24EvergreenLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEEB0);
  }
  return result;
}

unint64_t sub_1D5E1D790()
{
  unint64_t result;

  result = qword_1ED9AF4F0;
  if (!qword_1ED9AF4F0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E448A8, &_s22HeadlineClusteringRuleO19AigcLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AF4F0);
  }
  return result;
}

unint64_t sub_1D5E1D7D8()
{
  unint64_t result;

  result = qword_1ED9AF4E8;
  if (!qword_1ED9AF4E8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E448D0, &_s22HeadlineClusteringRuleO19AigcLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AF4E8);
  }
  return result;
}

unint64_t sub_1D5E1D820()
{
  unint64_t result;

  result = qword_1ED9AEF00;
  if (!qword_1ED9AEF00)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E447F0, &_s22HeadlineClusteringRuleO28PublisherDiversityCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEF00);
  }
  return result;
}

unint64_t sub_1D5E1D868()
{
  unint64_t result;

  result = qword_1ED9AEEF8;
  if (!qword_1ED9AEEF8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44818, &_s22HeadlineClusteringRuleO28PublisherDiversityCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEEF8);
  }
  return result;
}

unint64_t sub_1D5E1D8B0()
{
  unint64_t result;

  result = qword_1ED9AEED0;
  if (!qword_1ED9AEED0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44738, &_s22HeadlineClusteringRuleO24TopicDiversityCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEED0);
  }
  return result;
}

unint64_t sub_1D5E1D8F8()
{
  unint64_t result;

  result = qword_1ED9AEEC8;
  if (!qword_1ED9AEEC8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44760, &_s22HeadlineClusteringRuleO24TopicDiversityCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEEC8);
  }
  return result;
}

unint64_t sub_1D5E1D940()
{
  unint64_t result;

  result = qword_1ED9AEEE8;
  if (!qword_1ED9AEEE8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44680, &_s22HeadlineClusteringRuleO26QualitativeLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEEE8);
  }
  return result;
}

unint64_t sub_1D5E1D988()
{
  unint64_t result;

  result = qword_1ED9AEEE0;
  if (!qword_1ED9AEEE0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E446A8, &_s22HeadlineClusteringRuleO26QualitativeLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEEE0);
  }
  return result;
}

unint64_t sub_1D5E1D9D0()
{
  unint64_t result;

  result = qword_1ED9AEE70;
  if (!qword_1ED9AEE70)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E445C8, &_s22HeadlineClusteringRuleO41HardPaywallNewsPlusArticleLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEE70);
  }
  return result;
}

unint64_t sub_1D5E1DA18()
{
  unint64_t result;

  result = qword_1ED9AEE68;
  if (!qword_1ED9AEE68)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E445F0, &_s22HeadlineClusteringRuleO41HardPaywallNewsPlusArticleLimitCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEE68);
  }
  return result;
}

unint64_t sub_1D5E1DA60()
{
  unint64_t result;

  result = qword_1ED9AEF18;
  if (!qword_1ED9AEF18)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44510, &_s22HeadlineClusteringRuleO31NoDuplicateThumbnailsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEF18);
  }
  return result;
}

unint64_t sub_1D5E1DAA8()
{
  unint64_t result;

  result = qword_1ED9AEF10;
  if (!qword_1ED9AEF10)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44538, &_s22HeadlineClusteringRuleO31NoDuplicateThumbnailsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEF10);
  }
  return result;
}

unint64_t sub_1D5E1DAF0()
{
  unint64_t result;

  result = qword_1ED9AEE88;
  if (!qword_1ED9AEE88)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44AD0, &_s22HeadlineClusteringRuleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEE88);
  }
  return result;
}

unint64_t sub_1D5E1DB38()
{
  unint64_t result;

  result = qword_1ED9AEE80;
  if (!qword_1ED9AEE80)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44AF8, &_s22HeadlineClusteringRuleO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED9AEE80);
  }
  return result;
}

uint64_t sub_1D5E1DB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1D5DA2260(a10, a11);
  }
  return result;
}

uint64_t sub_1D5E1DBF0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_1D5E1DC2C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[24] = 0u;
  a1[25] = 0u;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  *(_OWORD *)((char *)a1 + 410) = 0u;
  return result;
}

uint64_t sub_1D5E1DC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF458);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D5E1DCBC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 296);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1D5E1DCDC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 16))(a1, 0);
}

uint64_t sub_1D5E1DD00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t result;

  result = a38;
  if (a38)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D5E1DD58(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int16 v15;

  v15 = *(_WORD *)(a1 + 424);
  v13 = *(_OWORD *)(a1 + 384);
  v14 = *(_OWORD *)(a1 + 400);
  v11 = *(_OWORD *)(a1 + 352);
  v12 = *(_OWORD *)(a1 + 368);
  v9 = *(_OWORD *)(a1 + 320);
  v10 = *(_OWORD *)(a1 + 336);
  v7 = *(_OWORD *)(a1 + 288);
  v8 = *(_OWORD *)(a1 + 304);
  v5 = *(_OWORD *)(a1 + 256);
  v6 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    v12,
    *((_QWORD *)&v12 + 1),
    v13,
    *((_QWORD *)&v13 + 1),
    v14,
    *((_QWORD *)&v14 + 1),
    *(_QWORD *)(a1 + 416),
    v15);
  return a1;
}

uint64_t sub_1D5E1DE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t result;

  result = a38;
  if (a38)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D5E1DE6C(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
    return *(_QWORD *)(v2 + 208);
  else
    return sub_1D5DD2A68(*(_QWORD *)(v2 + 208), a1);
}

uint64_t sub_1D5E1DED8(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
    return *(_QWORD *)(v2 + 256);
  else
    return sub_1D5DD2A68(*(_QWORD *)(v2 + 256), a1);
}

uint64_t sub_1D5E1DF34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D5DD1E18(a1, a2);
}

uint64_t sub_1D5E1DF6C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D5E1DFA4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t objectdestroy_15Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D5E1E034(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
    return *(_QWORD *)(v2 + 112);
  else
    return sub_1D5DD2A68(*(_QWORD *)(v2 + 112), a1);
}

uint64_t sub_1D5E1E0A8(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
    return *(_QWORD *)(v2 + 160);
  else
    return sub_1D5DD2A68(*(_QWORD *)(v2 + 160), a1);
}

uint64_t sub_1D5E1E104()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D5E1E140(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
    return *(_QWORD *)(v2 + 16);
  else
    return sub_1D5DD2A68(*(_QWORD *)(v2 + 16), a1);
}

uint64_t objectdestroy_18Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D5E1E1E8(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
    return *(_QWORD *)(v2 + 64);
  else
    return sub_1D5DD2A68(*(_QWORD *)(v2 + 64), a1);
}

uint64_t sub_1D5E1E23C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;

  return sub_1D5E0CD20(a1, a2, *(_QWORD *)(v3 + 16), *(double **)(v3 + 24), *(uint64_t **)(v3 + 32), a3);
}

uint64_t sub_1D5E1E258(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1D5E1E268()
{
  uint64_t v0;

  return sub_1D5E044D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D5E1E270()
{
  return sub_1D5E045A8();
}

uint64_t sub_1D5E1E278()
{
  return sub_1D5E07BBC();
}

uint64_t sub_1D5E1E280()
{
  return sub_1D5E04438();
}

uint64_t sub_1D5E1E288()
{
  return sub_1D5E0631C();
}

uint64_t sub_1D5E1E290()
{
  return sub_1D5E0629C();
}

uint64_t sub_1D5E1E298()
{
  return sub_1D5E0621C();
}

uint64_t sub_1D5E1E2A0()
{
  return sub_1D5E0619C();
}

uint64_t sub_1D5E1E2A8()
{
  return sub_1D5E0611C();
}

unint64_t sub_1D5E1E2B0()
{
  unint64_t result;

  result = qword_1ED9AD900;
  if (!qword_1ED9AD900)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44270, &_s23HeadlineClusteringErrorON);
    atomic_store(result, (unint64_t *)&qword_1ED9AD900);
  }
  return result;
}

uint64_t sub_1D5E1E2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1D5E01134(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1D5E1E30C()
{
  return sub_1D5E0751C();
}

uint64_t sub_1D5E1E314()
{
  return sub_1D5E0749C();
}

uint64_t sub_1D5E1E31C()
{
  return sub_1D5E07B20();
}

uint64_t sub_1D5E1E324()
{
  return sub_1D5E07A84();
}

uint64_t sub_1D5E1E32C()
{
  return sub_1D5E079E4();
}

uint64_t sub_1D5E1E334()
{
  return sub_1D5E07944();
}

uint64_t sub_1D5E1E33C()
{
  return sub_1D5E078A8();
}

uint64_t sub_1D5E1E344()
{
  return sub_1D5E0780C();
}

uint64_t sub_1D5E1E34C()
{
  return sub_1D5E07770();
}

uint64_t sub_1D5E1E354()
{
  return sub_1D5E076D4();
}

uint64_t sub_1D5E1E35C()
{
  return sub_1D5E07638();
}

uint64_t sub_1D5E1E364()
{
  return sub_1D5E075B8();
}

uint64_t sub_1D5E1E36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReadonlyAggregate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s24BundleArticleQuotaResultOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s24BundleArticleQuotaResultOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5E1E48C + 4 * byte_1D5E44269[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5E1E4C0 + 4 * byte_1D5E44264[v4]))();
}

uint64_t sub_1D5E1E4C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E1E4C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5E1E4D0);
  return result;
}

uint64_t sub_1D5E1E4DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5E1E4E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5E1E4E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E1E4F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s24BundleArticleQuotaResultOMa()
{
  return &_s24BundleArticleQuotaResultON;
}

uint64_t _s14CandidateGroupVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s14CandidateGroupVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14CandidateGroupVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14CandidateGroupVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t _s14CandidateGroupVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t _s14CandidateGroupVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14CandidateGroupVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s14CandidateGroupVMa()
{
  return &_s14CandidateGroupVN;
}

unint64_t sub_1D5E1E718()
{
  unint64_t result;

  result = qword_1EFFB8BA0;
  if (!qword_1EFFB8BA0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E44EC8, &_s24BundleArticleQuotaResultON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8BA0);
  }
  return result;
}

uint64_t sub_1D5E1E7C8(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD *);
  unint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD v24[6];
  char v25;
  uint64_t v26;

  v20 = (uint64_t (*)(_QWORD *))result;
  v19 = *(_QWORD *)(a3 + 16);
  if (v19)
  {
    v3 = 0;
    v4 = (char *)(a3 + 80);
    v5 = MEMORY[0x1E0DEE9D8];
    v18 = a3;
    while (v3 < *(_QWORD *)(a3 + 16))
    {
      v21 = v3;
      v7 = *((_QWORD *)v4 - 6);
      v6 = *((_QWORD *)v4 - 5);
      v9 = *((_QWORD *)v4 - 4);
      v8 = *((_QWORD *)v4 - 3);
      v11 = *((_QWORD *)v4 - 2);
      v10 = *((_QWORD *)v4 - 1);
      v12 = *v4;
      v24[0] = v7;
      v24[1] = v6;
      v24[2] = v9;
      v24[3] = v8;
      v24[4] = v11;
      v24[5] = v10;
      v25 = v12;
      v22 = v12;
      sub_1D5D801B0(v7, v6, v9, v8, v11, v10, v12);
      v13 = v20(v24);
      if (v23)
      {
        sub_1D5D8014C(v7, v6, v9, v8, v11, v10, v22);
        swift_release();
        swift_bridgeObjectRelease();
        return v5;
      }
      v23 = 0;
      if ((v13 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v26 = v5;
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1D5D7FB7C(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v26;
        }
        v15 = *(_QWORD *)(v5 + 16);
        v14 = *(_QWORD *)(v5 + 24);
        v16 = v15 + 1;
        if (v15 >= v14 >> 1)
        {
          result = (uint64_t)sub_1D5D7FB7C((char *)(v14 > 1), v15 + 1, 1);
          v16 = v15 + 1;
          v5 = v26;
        }
        *(_QWORD *)(v5 + 16) = v16;
        v17 = v5 + 56 * v15;
        *(_QWORD *)(v17 + 32) = v7;
        *(_QWORD *)(v17 + 40) = v6;
        *(_QWORD *)(v17 + 48) = v9;
        *(_QWORD *)(v17 + 56) = v8;
        *(_QWORD *)(v17 + 64) = v11;
        *(_QWORD *)(v17 + 72) = v10;
        *(_BYTE *)(v17 + 80) = v22;
      }
      else
      {
        result = sub_1D5D8014C(v7, v6, v9, v8, v11, v10, v22);
      }
      v3 = v21 + 1;
      v4 += 56;
      a3 = v18;
      if (v19 == v21 + 1)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t ClassicAggregateContextType.updateBaseline(with:updateBlock:)(uint64_t (**a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v9)();
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t (*v12)();
  uint64_t (*v14)();
  uint64_t (*v15)();
  char v16;
  uint64_t (*v17[2])();

  v9 = *a1;
  v10 = a1[1];
  v11 = sub_1D5D81DA4((uint64_t)&unk_1E9A85350);
  swift_arrayDestroy();
  v14 = v9;
  v15 = v10;
  v16 = 0;
  sub_1D5D8ACD0((uint64_t)&v14, a4, a5, v17);
  v12 = v17[0];
  v14 = v17[0];
  v15 = v17[1];
  (*(void (**)(uint64_t, uint64_t (**)(), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 + 8) + 56))(v11, &v14, a2, a3, a4);
  swift_bridgeObjectRelease();
  return sub_1D5D8B00C((uint64_t)v12);
}

uint64_t ClassicAggregateContextType.update(with:using:updateBlock:)(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  __int128 v13;
  char v14;
  __int128 v15;

  v13 = *a2;
  v14 = 0;
  sub_1D5D8ACD0((uint64_t)&v13, a5, a6, (uint64_t (**)())&v15);
  v11 = v15;
  v13 = v15;
  (*(void (**)(uint64_t, __int128 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 + 8) + 56))(a1, &v13, a3, a4, a5);
  return sub_1D5D8B00C(v11);
}

uint64_t ClassicAggregateContextType.lookup(with:using:)(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  char v12;
  __int128 v13;

  v7 = *((_BYTE *)a2 + 16);
  v11 = *a2;
  v12 = v7;
  sub_1D5D8ACD0((uint64_t)&v11, a3, a4, (uint64_t (**)())&v13);
  v8 = v13;
  v11 = v13;
  v9 = (*(uint64_t (**)(uint64_t, __int128 *, uint64_t))(*(_QWORD *)(a4 + 8) + 48))(a1, &v11, a3);
  sub_1D5D8B00C(v8);
  return v9;
}

uint64_t ClassicAggregateContextType.lookupBaseline(and:baselinePrior:featurePrior:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v13;
  char v14;

  v9 = *a4;
  v10 = a4[1];
  v11 = *((_BYTE *)a4 + 16);
  v13 = *a3;
  ClassicAggregateContextType.lookupBaseline(with:)(&v13, a5, a6, a1);
  *(_QWORD *)&v13 = v9;
  *((_QWORD *)&v13 + 1) = v10;
  v14 = v11;
  return ClassicAggregateContextType.lookup(with:using:)(a2, &v13, a5, a6);
}

uint64_t ClassicAggregateContextType.validate(features:publisherTopicMinimumEventCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[8];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];

  v4 = a4;
  v6 = a2;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v23 = a4;
    v24 = a2;
    v25[0] = MEMORY[0x1E0DEE9D8];
    sub_1D5DB9AEC(0, v8, 0);
    v9 = v25[0];
    v10 = (uint64_t *)(a1 + 40);
    do
    {
      v11 = *(v10 - 1);
      v12 = *v10;
      v25[0] = v9;
      v14 = *(_QWORD *)(v9 + 16);
      v13 = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1)
      {
        sub_1D5DB9AEC((char *)(v13 > 1), v14 + 1, 1);
        v9 = v25[0];
      }
      v10 += 7;
      *(_QWORD *)(v9 + 16) = v14 + 1;
      v15 = v9 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v11;
      *(_QWORD *)(v15 + 40) = v12;
      --v8;
    }
    while (v8);
    v4 = v23;
    v6 = v24;
    a3 = v22[7];
  }
  v16 = sub_1D5D81DA4(v9);
  swift_bridgeObjectRelease();
  v25[0] = 0;
  v25[1] = 0;
  v17 = (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(*(_QWORD *)(v4 + 8) + 48))(v16, v25, a3);
  v18 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v18, v19);
  v22[2] = a3;
  v22[3] = v4;
  v22[4] = v17;
  v22[5] = v6;
  swift_bridgeObjectRetain();
  v20 = sub_1D5E1E7C8((uint64_t)sub_1D5E1F914, (uint64_t)v22, a1);
  swift_bridgeObjectRelease();
  return v20;
}

BOOL sub_1D5E1EDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  _BOOL8 result;
  void (*v28)(char *, char *, uint64_t);
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v30)(uint64_t, uint64_t);
  unint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_1D5E37614();
  MEMORY[0x1E0C80A78](v7, v8);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v37 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  MEMORY[0x1E0C80A78](v16, v17);
  v23 = (char *)&v37 - v22;
  if (*(_BYTE *)(a1 + 48) != 3)
    return 1;
  v43 = v20;
  v44 = a3;
  v45 = v19;
  v46 = v18;
  v24 = *(_QWORD *)(a1 + 32);
  v25 = *(_QWORD *)(a1 + 40);
  v41 = v21;
  v42 = v24;
  v47 = 2831206;
  v48 = 0xE300000000000000;
  sub_1D5E37458();
  MEMORY[0x1D827CFA4](&v47, a2, MEMORY[0x1E0DEA968], AssociatedTypeWitness, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v26(v12, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v12, v46);
    return 0;
  }
  v39 = v26;
  v40 = v25;
  v28 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v28(v23, v12, AssociatedTypeWitness);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v30 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  v31 = v30(AssociatedTypeWitness, AssociatedConformanceWitness);
  v32 = v44;
  if (v44 >= 1 && v31 < v44)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v23, AssociatedTypeWitness);
    return 0;
  }
  v38 = v28;
  v47 = 2831206;
  v48 = 0xE300000000000000;
  sub_1D5E37458();
  v33 = v43;
  MEMORY[0x1D827CFA4](&v47, a2, MEMORY[0x1E0DEA968], AssociatedTypeWitness, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  if (v39(v33, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v23, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v46);
    return 0;
  }
  else
  {
    v34 = v41;
    v38(v41, v33, AssociatedTypeWitness);
    v35 = v30(AssociatedTypeWitness, AssociatedConformanceWitness);
    v36 = *(void (**)(char *, uint64_t))(v13 + 8);
    v36(v34, AssociatedTypeWitness);
    v36(v23, AssociatedTypeWitness);
    result = 1;
    if (v32 >= 1)
      return v35 >= v32;
  }
  return result;
}

uint64_t AggregateContext.createAggregate(for:clicks:impressions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t result;

  type metadata accessor for Aggregate(0);
  swift_bridgeObjectRetain();
  result = sub_1D5E3735C();
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

uint64_t sub_1D5E1F16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t result;

  type metadata accessor for Aggregate(0);
  swift_bridgeObjectRetain();
  result = sub_1D5E3735C();
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

uint64_t ClassicAggregateContext.baseline.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;

  v3 = *v1;
  (*(void (**)(__int128 *__return_ptr))((char *)v1 + *(_QWORD *)(*v1 + 104)))(&v7);
  v6 = v7;
  v4 = MEMORY[0x1D827D8E0](&protocol conformance descriptor for ClassicAggregateContext<A>, v3);
  return ClassicAggregateContextType.lookupBaseline(with:)(&v6, v3, v4, a1);
}

uint64_t ClassicAggregateContext.baselinePrior.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104)))();
}

uint64_t ClassicAggregateContext.featurePrior.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t, double);
  uint64_t AssociatedConformanceWitness;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v4);
  v6 = (char *)&v13 - v5;
  v7 = *(uint64_t (**)(uint64_t, double))((char *)v0 + *(_QWORD *)(v1 + 112));
  ClassicAggregateContext.baseline.getter((uint64_t)&v13 - v5);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  ReadonlyAggregateType.personalizationValue.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
  v10 = v9;
  v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, AssociatedTypeWitness);
  return v7(v11, v10);
}

__n128 ClassicAggregateContext.priors.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double v3;
  double v4;
  __n128 result;
  __int128 v6;
  __n128 v7;
  _QWORD v8[2];

  (*(void (**)(_QWORD *__return_ptr))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 104)))(v8);
  v3 = *(double *)v8;
  v4 = *(double *)&v8[1];
  ClassicAggregateContext.featurePrior.getter();
  *(double *)&v6 = v3;
  *((double *)&v6 + 1) = v4;
  sub_1D5D89870(v3, v4);
  sub_1D5D8988C(v7.n128_f64[0], v7.n128_f64[1]);
  result = v7;
  *a1 = v6;
  a1[1] = v7;
  return result;
}

uint64_t ClassicAggregateContext.lookup(with:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(__int128 *__return_ptr, uint64_t, double);
  uint64_t AssociatedConformanceWitness;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  __int128 v19;
  uint64_t *v20;

  v16 = a1;
  v2 = *v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v5);
  v7 = (char *)&v15 - v6;
  v20 = v1;
  v8 = *(void (**)(__int128 *__return_ptr, uint64_t, double))((char *)v1 + *(_QWORD *)(v2 + 112));
  ClassicAggregateContext.baseline.getter((uint64_t)&v15 - v6);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  ReadonlyAggregateType.personalizationValue.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
  v11 = v10;
  v12 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, AssociatedTypeWitness);
  v8(&v19, v12, v11);
  v17 = v19;
  v18 = 0;
  v13 = MEMORY[0x1D827D8E0](&protocol conformance descriptor for ClassicAggregateContext<A>, v2);
  return ClassicAggregateContextType.lookup(with:using:)(v16, &v17, v2, v13);
}

uint64_t ClassicAggregateContext.lookup(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  _QWORD v10[2];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF868);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D5E38280;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1D5E1F934(inited);
  swift_setDeallocating();
  v6 = MEMORY[0x1E0DEA968];
  swift_arrayDestroy();
  v7 = ClassicAggregateContext.lookup(with:)(v5);
  swift_bridgeObjectRelease();
  v10[0] = a1;
  v10[1] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_bridgeObjectRetain();
  MEMORY[0x1D827CFA4](v10, v7, v6, AssociatedTypeWitness, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ClassicAggregateContext.__allocating_init(context:baselinePriorProvider:featurePriorProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v10 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v10 + 80) - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)v10 + 96), a1);
  v11 = (_QWORD *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 104));
  *v11 = a2;
  v11[1] = a3;
  v12 = (_QWORD *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 112));
  *v12 = a4;
  v12[1] = a5;
  return v10;
}

uint64_t ClassicAggregateContext.update(with:option:updateBlock:)(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  __int128 v7;

  v5 = *v4;
  v7 = *a2;
  return (*(uint64_t (**)(uint64_t, __int128 *, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v5 + 88)
                                                                                              + 8)
                                                                                  + 56))(a1, &v7, a3, a4, *(_QWORD *)(v5 + 80));
}

uint64_t ClassicAggregateContext.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_release();
  swift_release();
  return v0;
}

uint64_t ClassicAggregateContext.__deallocating_deinit()
{
  ClassicAggregateContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D5E1F7E0(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  return ClassicAggregateContext.update(with:option:updateBlock:)(a1, a2, a3, a4);
}

Swift::Double __swiftcall ClassicAggregateContext.decayedPublisherDiversificationPenalty(initialValue:finalValue:halfLife:)(Swift::Double initialValue, Swift::Double finalValue, Swift::Double halfLife)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedConformanceWitness;
  unint64_t v12;
  uint64_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v8);
  v10 = (char *)&v14 - v9;
  if (halfLife != 0.0)
  {
    ClassicAggregateContext.baseline.getter((uint64_t)&v14 - v9);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
    return (initialValue - finalValue) / exp2((double)v12) / halfLife + finalValue;
  }
  return finalValue;
}

BOOL sub_1D5E1F914(uint64_t a1)
{
  uint64_t v1;

  return sub_1D5E1EDC4(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1D5E1F934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF840);
    v3 = sub_1D5E37644();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1D5E379A4();
      swift_bridgeObjectRetain();
      sub_1D5E3744C();
      result = sub_1D5E379C8();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1D5E378FC(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1D5E378FC();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1D5E1FAD4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t dispatch thunk of ClassicAggregateContextType.createAggregate(for:clicks:impressions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for ClassicAggregateContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClassicAggregateContext.__allocating_init(context:baselinePriorProvider:featurePriorProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1D5E1FB10()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1D5E1FB74(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v23 = *(_QWORD *)(a1 + 16);
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1D5DB9D9C(0, v1, 0);
  v2 = v24;
  result = sub_1D5E25F78(a1);
  v6 = result;
  v7 = v23;
  v8 = 0;
  v9 = a1 + 64;
  v10 = a1 + 80;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v12 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_24;
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + (v6 << 6) + 32);
    v15 = *(_QWORD *)(v24 + 16);
    v14 = *(_QWORD *)(v24 + 24);
    if (v15 >= v14 >> 1)
    {
      v21 = v10;
      v22 = v5;
      result = (uint64_t)sub_1D5DB9D9C((char *)(v14 > 1), v15 + 1, 1);
      v10 = v21;
      v5 = v22;
      v7 = v23;
    }
    *(_QWORD *)(v24 + 16) = v15 + 1;
    *(_QWORD *)(v24 + 8 * v15 + 32) = v13;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v11)
      goto LABEL_25;
    v16 = *(_QWORD *)(v9 + 8 * v12);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v11 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v18 = v12 + 1;
      v19 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v19)
      {
        v20 = *(_QWORD *)(v9 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v11 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v12)
          {
            v20 = *(_QWORD *)(v10 + 8 * v12++);
            if (v20)
            {
              v18 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v8;
    v6 = v11;
    if (v8 == v7)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1D5E1FD68(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v23 = *(_QWORD *)(a1 + 16);
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1D5DB9D9C(0, v1, 0);
  v2 = v24;
  result = sub_1D5E25F78(a1);
  v6 = result;
  v7 = v23;
  v8 = 0;
  v9 = a1 + 64;
  v10 = a1 + 80;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v12 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_24;
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + (v6 << 6) + 8);
    v15 = *(_QWORD *)(v24 + 16);
    v14 = *(_QWORD *)(v24 + 24);
    if (v15 >= v14 >> 1)
    {
      v21 = v10;
      v22 = v5;
      result = (uint64_t)sub_1D5DB9D9C((char *)(v14 > 1), v15 + 1, 1);
      v10 = v21;
      v5 = v22;
      v7 = v23;
    }
    *(_QWORD *)(v24 + 16) = v15 + 1;
    *(_QWORD *)(v24 + 8 * v15 + 32) = v13;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v11)
      goto LABEL_25;
    v16 = *(_QWORD *)(v9 + 8 * v12);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v5)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v11 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v18 = v12 + 1;
      v19 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v19)
      {
        v20 = *(_QWORD *)(v9 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v11 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v12)
          {
            v20 = *(_QWORD *)(v10 + 8 * v12++);
            if (v20)
            {
              v18 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v8;
    v6 = v11;
    if (v8 == v7)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1D5E1FF5C(uint64_t a1, char **a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t v6;
  unint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  int64_t v21;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v21 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v7 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v7 | (v6 << 6); ; i = __clz(__rbit64(v10)) + (v6 << 6))
  {
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v14 = *v12;
    v13 = v12[1];
    swift_bridgeObjectRetain();
    sub_1D5E37458();
    v15 = *a2;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v15 = sub_1D5D7F978(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
      *a2 = v15;
    }
    v18 = *((_QWORD *)v15 + 2);
    v17 = *((_QWORD *)v15 + 3);
    if (v18 >= v17 >> 1)
    {
      v15 = sub_1D5D7F978((char *)(v17 > 1), v18 + 1, 1, v15);
      *a2 = v15;
    }
    *((_QWORD *)v15 + 2) = v18 + 1;
    v19 = &v15[56 * v18];
    *((_QWORD *)v19 + 4) = 2831206;
    *((_QWORD *)v19 + 5) = 0xE300000000000000;
    *((_QWORD *)v19 + 6) = v14;
    *((_QWORD *)v19 + 7) = v13;
    *((_QWORD *)v19 + 8) = 0;
    *((_QWORD *)v19 + 9) = 0;
    v19[80] = 4;
    result = swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_4;
LABEL_5:
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v9 >= v21)
      return swift_release();
    v10 = *(_QWORD *)(v20 + 8 * v9);
    ++v6;
    if (!v10)
    {
      v6 = v9 + 1;
      if (v9 + 1 >= v21)
        return swift_release();
      v10 = *(_QWORD *)(v20 + 8 * v6);
      if (!v10)
      {
        v6 = v9 + 2;
        if (v9 + 2 >= v21)
          return swift_release();
        v10 = *(_QWORD *)(v20 + 8 * v6);
        if (!v10)
        {
          v6 = v9 + 3;
          if (v9 + 3 >= v21)
            return swift_release();
          v10 = *(_QWORD *)(v20 + 8 * v6);
          if (!v10)
            break;
        }
      }
    }
LABEL_20:
    v4 = (v10 - 1) & v10;
  }
  v11 = v9 + 4;
  if (v11 >= v21)
    return swift_release();
  v10 = *(_QWORD *)(v20 + 8 * v11);
  if (v10)
  {
    v6 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v6 >= v21)
      return swift_release();
    v10 = *(_QWORD *)(v20 + 8 * v6);
    ++v11;
    if (v10)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1D5E201D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1D5D7B598(a2, a4, a5, a6);
}

uint64_t sub_1D5E201E8(uint64_t a1, _QWORD *a2, uint64_t a3, _OWORD *a4, const void *a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  double v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  double v36[3];
  uint64_t v37;
  _OWORD v38[4];
  uint64_t v39;
  _OWORD v40[3];

  v16 = *(_QWORD *)(a6 + 64);
  v17 = *a8;
  v18 = *(_BYTE *)a10;
  v19 = a10[1];
  v20 = a10[2];
  v21 = a4[1];
  v40[0] = *a4;
  v40[1] = v21;
  v22 = *(_OWORD *)(a6 + 16);
  v38[0] = *(_OWORD *)a6;
  v38[1] = v22;
  v23 = *(_OWORD *)(a6 + 48);
  v38[2] = *(_OWORD *)(a6 + 32);
  v38[3] = v23;
  v39 = v16;
  v36[2] = v20;
  v37 = v17;
  LOBYTE(v36[0]) = v18;
  v36[1] = v19;
  v24 = MEMORY[0x1E0DEE9D8];
  v25 = sub_1D5DC6240(MEMORY[0x1E0DEE9D8]);
  v26 = sub_1D5D85858(v24);
  v27 = (uint64_t *)sub_1D5D85858(v24);
  v28 = sub_1D5D85858(v24);
  v29 = sub_1D5DC6350(v24);
  v30 = sub_1D5E20340(a1, a2, a3, (uint64_t)v40, a5, (uint64_t)v38, a7, (double *)&v37, a9, 0.0, v36, a11, a12, 0, v25, v26, v27, v28, v29,
          a13,
          a14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1D5E20340(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, const void *a5, uint64_t a6, uint64_t a7, double *a8, double a9, float a10, double *a11, uint64_t a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, uint64_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t AssociatedTypeWitness;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  double v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  unint64_t v65;
  int64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  uint64_t v78;
  _BOOL8 v79;
  uint64_t v80;
  char v81;
  unint64_t v82;
  char v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t result;
  _QWORD v123[4];
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  double v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int64_t v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  __int128 v175;
  uint64_t v176;
  uint64_t AssociatedConformanceWitness;
  _QWORD v178[126];
  __int128 v179[4];
  uint64_t v180;

  v144 = a7;
  v174 = a4;
  v147 = a2;
  v129 = a1;
  v145 = type metadata accessor for ClassicArticleData();
  v173 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145, v27);
  v148 = (uint64_t)&v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = *(_QWORD *)(a21 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v128 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v30);
  v32 = (char *)&v124 - v31;
  memcpy(v178, a5, 0x3EBuLL);
  v33 = *(_OWORD *)(a6 + 48);
  v179[2] = *(_OWORD *)(a6 + 32);
  v179[3] = v33;
  v180 = *(_QWORD *)(a6 + 64);
  v34 = *(_OWORD *)(a6 + 16);
  v179[0] = *(_OWORD *)a6;
  v179[1] = v34;
  v141 = *a8;
  v142 = a20;
  v138 = *(unsigned __int8 *)a11;
  v35 = a11[1];
  v137 = *((_QWORD *)a11 + 2);
  v175 = *(_OWORD *)v174;
  v143 = a21;
  v127 = a3;
  ClassicAggregateContextType.lookupBaseline(with:)(&v175, a20, a21, (uint64_t)v32);
  if (qword_1ED9AF888 != -1)
    goto LABEL_54;
  while (1)
  {
    v36 = (void *)qword_1ED9AF898;
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF878);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1D5E38FE0;
    *(_QWORD *)&v175 = *(_QWORD *)(v129 + 16);
    v39 = v175;
    v40 = v36;
    v41 = sub_1D5E378CC();
    v43 = v42;
    *(_QWORD *)(v38 + 56) = MEMORY[0x1E0DEA968];
    v44 = sub_1D5D889BC();
    *(_QWORD *)(v38 + 64) = v44;
    *(_QWORD *)(v38 + 32) = v41;
    *(_QWORD *)(v38 + 40) = v43;
    *(_QWORD *)&v175 = 0;
    *((_QWORD *)&v175 + 1) = 0xE000000000000000;
    v149 = v32;
    sub_1D5E378E4();
    v45 = v175;
    *(_QWORD *)(v38 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v38 + 104) = v44;
    v125 = v44;
    *(_OWORD *)(v38 + 72) = v45;
    sub_1D5E375FC();
    sub_1D5E373A4();

    swift_bridgeObjectRelease();
    v155 = v39;
    if (!v39)
      break;
    v124 = v37;
    v136 = a14;
    v135 = a19;
    v134 = a18;
    v133 = a17;
    v132 = a16;
    v131 = a15;
    v139 = a13;
    v130 = a12;
    v146 = v129 + ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80));
    v154 = *(_QWORD *)(v173 + 72);
    swift_bridgeObjectRetain();
    v46 = 0;
    v47 = MEMORY[0x1E0DEE9E0];
    v140 = AssociatedTypeWitness;
    v48 = v148;
    while (1)
    {
      v153 = v46 + 1;
      sub_1D5D819C0(v146 + v154 * v46, v48);
      v49 = *(_QWORD *)(v48 + *(int *)(v145 + 92));
      swift_bridgeObjectRetain();
      v50 = (_QWORD *)v47;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v175 = v47;
      v52 = *(_QWORD *)(v49 + 64);
      v157 = v49 + 64;
      v53 = -1 << *(_BYTE *)(v49 + 32);
      v152 = ~v53;
      v54 = -v53 < 64 ? ~(-1 << -(char)v53) : -1;
      v55 = v54 & v52;
      v56 = (unint64_t)(63 - v53) >> 6;
      swift_bridgeObjectRetain();
      v57 = 0;
      v156 = v56;
      v158 = v49;
      v150 = v49 + 112;
      v151 = v56 - 6;
      LODWORD(v174) = isUniquelyReferenced_nonNull_native;
      if (v55)
        break;
LABEL_12:
      v66 = v57 + 1;
      if (__OFADD__(v57, 1))
        goto LABEL_52;
      if (v66 < v156)
      {
        v67 = *(_QWORD *)(v157 + 8 * v66);
        v68 = v57 + 1;
        if (v67)
          goto LABEL_27;
        v68 = v57 + 2;
        if (v57 + 2 < v156)
        {
          v67 = *(_QWORD *)(v157 + 8 * v68);
          if (v67)
            goto LABEL_27;
          v68 = v57 + 3;
          if (v57 + 3 < v156)
          {
            v67 = *(_QWORD *)(v157 + 8 * v68);
            if (v67)
              goto LABEL_27;
            v68 = v57 + 4;
            if (v57 + 4 < v156)
            {
              v67 = *(_QWORD *)(v157 + 8 * v68);
              if (v67)
                goto LABEL_27;
              v68 = v57 + 5;
              if (v57 + 5 < v156)
              {
                v67 = *(_QWORD *)(v157 + 8 * v68);
                if (!v67)
                {
                  v69 = v57;
                  do
                  {
                    if (v151 == v69)
                      goto LABEL_4;
                    v67 = *(_QWORD *)(v150 + 8 * v69++);
                  }
                  while (!v67);
                  v68 = v69 + 5;
                }
LABEL_27:
                v172 = (v67 - 1) & v67;
                v173 = v68;
                v65 = __clz(__rbit64(v67)) + (v68 << 6);
                goto LABEL_28;
              }
            }
          }
        }
      }
LABEL_4:
      v47 = (uint64_t)v50;
      swift_bridgeObjectRelease();
      sub_1D5E2701C();
      swift_bridgeObjectRelease();
      v48 = v148;
      sub_1D5D7D008(v148);
      v46 = v153;
      AssociatedTypeWitness = v140;
      if (v153 == v155)
      {
        v89 = v129;
        v90 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v90, v91);
        v123[2] = v147;
        v174 = sub_1D5D85968(MEMORY[0x1E0DEE9E8], (void (*)(uint64_t *, _QWORD *))sub_1D5E27024, (uint64_t)v123, v47);
        swift_bridgeObjectRelease();
        v92 = v127;
        v93 = v142;
        v94 = v143;
        v95 = sub_1D5D88BBC(v89, v127, (uint64_t)&v178[52], v142, v143);
        v96 = sub_1D5D7B598(v92, (uint64_t)&v175, v93, v94);
        v176 = AssociatedTypeWitness;
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v175);
        v98 = (uint64_t)v149;
        (*(void (**)(uint64_t *, char *, uint64_t))(v128 + 16))(boxed_opaque_existential_1, v149, AssociatedTypeWitness);
        v99 = sub_1D5D88AB4(v96, &v175, (uint64_t)&v178[20], v93, v94, a9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v175);
        *(double *)&v175 = v141;
        v32 = (char *)sub_1D5D7BF14(v129, v96, (uint64_t)v147, v98, (uint64_t)&v178[113], v179, v144, (uint64_t *)&v175, v139, v93, v94);
        if ((v178[12] & 1) != 0 && (v136 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(qword_1EFFB8BE8);
          v100 = swift_allocObject();
          *(_OWORD *)(v100 + 16) = xmmword_1D5E44EF0;
          v101 = v178[13];
          *(_QWORD *)(v100 + 48) = v178[11];
          *(_QWORD *)(v100 + 72) = v101;
          v102 = v178[15];
          *(_QWORD *)(v100 + 96) = v178[14];
          v103 = v178[16];
          *(_QWORD *)(v100 + 120) = v178[17];
          *(_QWORD *)(v100 + 144) = v178[18];
          *(_QWORD *)(v100 + 168) = v102;
          *(_QWORD *)(v100 + 32) = 0xD000000000000025;
          *(_QWORD *)(v100 + 40) = 0x80000001D5E4A620;
          *(_QWORD *)(v100 + 56) = 0xD000000000000032;
          *(_QWORD *)(v100 + 64) = 0x80000001D5E4A680;
          *(_QWORD *)(v100 + 80) = 0xD00000000000003ALL;
          *(_QWORD *)(v100 + 88) = 0x80000001D5E4A6C0;
          *(_QWORD *)(v100 + 104) = 0xD000000000000033;
          *(_QWORD *)(v100 + 112) = 0x80000001D5E4A760;
          *(_QWORD *)(v100 + 128) = 0xD00000000000002DLL;
          *(_QWORD *)(v100 + 136) = 0x80000001D5E4A7A0;
          *(_QWORD *)(v100 + 152) = 0xD000000000000029;
          *(_QWORD *)(v100 + 160) = 0x80000001D5E4A700;
          *(_QWORD *)(v100 + 176) = 0xD000000000000029;
          *(_QWORD *)(v100 + 184) = 0x80000001D5E4A730;
          *(_QWORD *)(v100 + 192) = v103;
          sub_1D5D85858(v100);
          v104 = (void *)qword_1ED9AF898;
          v105 = swift_allocObject();
          *(_OWORD *)(v105 + 16) = xmmword_1D5E38280;
          v106 = v104;
          v107 = MEMORY[0x1E0DEA968];
          v108 = sub_1D5E373C8();
          v172 = v109;
          v173 = v108;
          swift_bridgeObjectRelease();
          v110 = v125;
          *(_QWORD *)(v105 + 56) = v107;
          *(_QWORD *)(v105 + 64) = v110;
          v111 = v172;
          *(_QWORD *)(v105 + 32) = v173;
          *(_QWORD *)(v105 + 40) = v111;
          sub_1D5E375FC();
          sub_1D5E373A4();

          AssociatedTypeWitness = v140;
          swift_bridgeObjectRelease();
        }
        sub_1D5D88838(MEMORY[0x1E0DEE9D8]);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v175 = MEMORY[0x1E0DEE9E0];
        swift_bridgeObjectRetain();
        v117 = 0;
        v118 = (uint64_t)v149;
        v119 = v146;
        while (1)
        {
          v120 = v117 + 1;
          if (__OFADD__(v117, 1))
            goto LABEL_53;
          sub_1D5E2703C(&v175, v119, v147, v96, v118, v178, (uint64_t)v179, v144, v35, a9, a10, v112, v113, v114, v115, v116, v141, v138, v137,
            v130,
            v139,
            v95,
            v99,
            v174,
            (uint64_t)v32,
            v136 & 1,
            v131,
            v132,
            v133,
            v134,
            v135,
            v142,
            v143);
          ++v117;
          v119 += v154;
          v118 = (uint64_t)v149;
          if (v120 == v155)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v121 = v175;
            goto LABEL_49;
          }
        }
      }
    }
    while (1)
    {
      v172 = (v55 - 1) & v55;
      v173 = v57;
      v65 = __clz(__rbit64(v55)) | (v57 << 6);
LABEL_28:
      v70 = *(_QWORD *)(v158 + 48) + 16 * v65;
      v32 = *(char **)v70;
      v71 = *(_QWORD *)(v70 + 8);
      v72 = *(_QWORD *)(v158 + 56) + 80 * v65;
      v73 = *(_QWORD *)v72;
      v74 = *(_BYTE *)(v72 + 8);
      AssociatedTypeWitness = *(_QWORD *)(v72 + 16);
      LODWORD(v171) = *(unsigned __int8 *)(v72 + 24);
      v75 = *(_QWORD *)(v72 + 32);
      v170 = *(unsigned __int8 *)(v72 + 40);
      v169 = *(_QWORD *)(v72 + 48);
      v168 = *(unsigned __int8 *)(v72 + 56);
      v167 = *(_DWORD *)(v72 + 60);
      v166 = *(unsigned __int8 *)(v72 + 64);
      v165 = *(_DWORD *)(v72 + 68);
      v164 = *(unsigned __int8 *)(v72 + 72);
      v163 = *(unsigned __int8 *)(v72 + 73);
      v162 = *(unsigned __int8 *)(v72 + 74);
      v161 = *(unsigned __int8 *)(v72 + 75);
      v160 = *(unsigned __int8 *)(v72 + 76);
      v159 = *(unsigned __int8 *)(v72 + 77);
      swift_bridgeObjectRetain();
      if (!v71)
        goto LABEL_4;
      v77 = sub_1D5D7FFCC((uint64_t)v32, v71);
      v78 = v50[2];
      v79 = (v76 & 1) == 0;
      v80 = v78 + v79;
      if (__OFADD__(v78, v79))
        break;
      v81 = v76;
      if (v50[3] >= v80)
      {
        if ((v174 & 1) != 0)
        {
          v50 = (_QWORD *)v175;
          if ((v76 & 1) == 0)
            goto LABEL_36;
        }
        else
        {
          sub_1D5D99480();
          v50 = (_QWORD *)v175;
          if ((v81 & 1) == 0)
            goto LABEL_36;
        }
LABEL_10:
        v58 = 80 * v77;
        v59 = v50[7] + v58;
        v60 = *(_QWORD *)v59;
        v61 = *(_BYTE *)(v59 + 8);
        v62 = *(_QWORD *)(v59 + 16);
        v63 = *(_BYTE *)(v59 + 24);
        v32 = *(char **)(v59 + 32);
        AssociatedTypeWitness = *(unsigned __int8 *)(v59 + 40);
        v171 = *(_QWORD *)(v59 + 48);
        v170 = *(unsigned __int8 *)(v59 + 56);
        LODWORD(v169) = *(_DWORD *)(v59 + 60);
        v168 = *(unsigned __int8 *)(v59 + 64);
        v167 = *(_DWORD *)(v59 + 68);
        v166 = *(unsigned __int8 *)(v59 + 72);
        v165 = *(unsigned __int8 *)(v59 + 73);
        v164 = *(unsigned __int8 *)(v59 + 74);
        v163 = *(unsigned __int8 *)(v59 + 75);
        v162 = *(unsigned __int8 *)(v59 + 76);
        LODWORD(v174) = *(unsigned __int8 *)(v59 + 77);
        swift_bridgeObjectRelease();
        v64 = v50[7] + v58;
        *(_QWORD *)v64 = v60;
        *(_BYTE *)(v64 + 8) = v61;
        *(_QWORD *)(v64 + 16) = v62;
        *(_BYTE *)(v64 + 24) = v63;
        *(_QWORD *)(v64 + 32) = v32;
        *(_BYTE *)(v64 + 40) = AssociatedTypeWitness;
        *(_QWORD *)(v64 + 48) = v171;
        *(_BYTE *)(v64 + 56) = v170;
        *(_DWORD *)(v64 + 60) = v169;
        *(_BYTE *)(v64 + 64) = v168;
        *(_DWORD *)(v64 + 68) = v167;
        *(_BYTE *)(v64 + 72) = v166;
        *(_BYTE *)(v64 + 73) = v165;
        *(_BYTE *)(v64 + 74) = v164;
        *(_BYTE *)(v64 + 75) = v163;
        *(_BYTE *)(v64 + 76) = v162;
        v55 = v172;
        v57 = v173;
        *(_BYTE *)(v64 + 77) = v174;
        LODWORD(v174) = 1;
        if (!v55)
          goto LABEL_12;
      }
      else
      {
        sub_1D5D7C8C8(v80, v174 & 1);
        v82 = sub_1D5D7FFCC((uint64_t)v32, v71);
        if ((v81 & 1) != (v83 & 1))
        {
          sub_1D5E3795C();
          __break(1u);
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
        v77 = v82;
        v50 = (_QWORD *)v175;
        if ((v81 & 1) != 0)
          goto LABEL_10;
LABEL_36:
        v50[(v77 >> 6) + 8] |= 1 << v77;
        v84 = (_QWORD *)(v50[6] + 16 * v77);
        *v84 = v32;
        v84[1] = v71;
        v85 = v50[7] + 80 * v77;
        *(_QWORD *)v85 = v73;
        *(_BYTE *)(v85 + 8) = v74;
        *(_QWORD *)(v85 + 16) = AssociatedTypeWitness;
        *(_BYTE *)(v85 + 24) = v171;
        *(_QWORD *)(v85 + 32) = v75;
        *(_BYTE *)(v85 + 40) = v170;
        *(_QWORD *)(v85 + 48) = v169;
        *(_BYTE *)(v85 + 56) = v168;
        *(_DWORD *)(v85 + 60) = v167;
        *(_BYTE *)(v85 + 64) = v166;
        *(_DWORD *)(v85 + 68) = v165;
        *(_BYTE *)(v85 + 72) = v164;
        *(_BYTE *)(v85 + 73) = v163;
        *(_BYTE *)(v85 + 74) = v162;
        *(_BYTE *)(v85 + 75) = v161;
        *(_BYTE *)(v85 + 76) = v160;
        *(_BYTE *)(v85 + 77) = v159;
        v86 = v50[2];
        v87 = __OFADD__(v86, 1);
        v88 = v86 + 1;
        if (v87)
          goto LABEL_51;
        v50[2] = v88;
        v55 = v172;
        v57 = v173;
        LODWORD(v174) = 1;
        if (!v172)
          goto LABEL_12;
      }
    }
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    swift_once();
  }
  v121 = sub_1D5D88838(MEMORY[0x1E0DEE9D8]);
LABEL_49:
  (*(void (**)(char *, uint64_t))(v128 + 8))(v149, AssociatedTypeWitness);
  return v121;
}

uint64_t sub_1D5E21040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a1;
  v5 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v6 = *(unsigned __int8 *)(a2 + 91);
  v7 = *(unsigned __int8 *)(a2 + 92);
  v8 = *(unsigned __int8 *)(a2 + 93);
  sub_1D5D85BBC(a3, (uint64_t)v28);
  if (v7 == 1)
  {
    v9 = v29;
    v10 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    swift_bridgeObjectRetain();
    v12 = v11(v9, v10);
    v13 = sub_1D5D7E22C(v5, v4, v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    v13 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  sub_1D5D85BBC(a3, (uint64_t)v25);
  if (!v8)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    if (((v6 | v13) & 1) == 0)
      return swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v14 = v26;
  v15 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  LOBYTE(v14) = sub_1D5D7E22C(v5, v4, v16);
  swift_bridgeObjectRelease();
  sub_1D5D85BBC((uint64_t)v25, (uint64_t)&v22);
  if ((v14 & 1) != 0)
  {
    v17 = 1;
  }
  else
  {
    v18 = v23;
    v19 = v24;
    __swift_project_boxed_opaque_existential_1(&v22, v23);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19);
    v17 = sub_1D5D7E22C(v5, v4, v20);
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  if (((v6 | v13) & 1) != 0 || (v17 & 1) != 0)
LABEL_13:
    sub_1D5D81E38(&v22, v5, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5E2121C(_QWORD *a1, unint64_t a2, uint64_t a3, double a4, double a5, uint64_t a6, uint64_t a7, const void *a8, uint64_t a9, uint64_t a10, double *a11, unsigned __int8 *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned __int8 a19, uint64_t a20,uint64_t a21,char a22,uint64_t *a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  double v53;
  __int128 v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char isUniquelyReferenced_nonNull_native;
  char v75;
  unint64_t v76;
  uint64_t v77;
  _BOOL8 v78;
  uint64_t v79;
  char v80;
  unint64_t v81;
  char v82;
  _QWORD *v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  unint64_t v91;
  uint64_t v92;
  _BOOL8 v93;
  uint64_t v94;
  char v95;
  unint64_t v96;
  char v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  unint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  unint64_t v111;
  char v112;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  double v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  double v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  unint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  char v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  long double v147;
  double v148;
  uint64_t v149;
  uint64_t v150;
  double v151;
  double v152;
  double *v153;
  double v154;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v156)(uint64_t, uint64_t);
  uint64_t v157;
  unint64_t v158;
  char *v159;
  double v160;
  double v161;
  uint64_t v162;
  double v163;
  double v164;
  double v165;
  long double v166;
  double v167;
  double v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  double v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t (*v176)(uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  double v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int v197;
  double v198;
  double v199;
  double v200;
  long double v201;
  double v202;
  double v203;
  double v204;
  double v205;
  double v206;
  double v207;
  BOOL v208;
  double v209;
  double v210;
  double v211;
  int v212;
  char *v213;
  char *v214;
  double v215;
  char v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  long double v220;
  double v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  double v225;
  double v226;
  double v227;
  double v228;
  double v229;
  double v230;
  double v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t (*v234)(uint64_t, uint64_t);
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  double v239;
  double v240;
  double v241;
  double v242;
  uint64_t v243;
  double v244;
  double v245;
  double v246;
  double v247;
  double v248;
  double v249;
  double v250;
  double v251;
  double v252;
  long double v253;
  double v254;
  double v255;
  char v256;
  double v257;
  uint64_t v258;
  char v259;
  long double v260;
  double v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t (*v264)(uint64_t, uint64_t);
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  double v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  double v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  double v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char v284;
  double v285;
  double v286;
  double v287;
  double v288;
  double v289;
  long double v290;
  long double v291;
  double v292;
  uint64_t v293;
  double *v294;
  uint64_t v295;
  double v296;
  double v297;
  double v298;
  double v299;
  uint64_t *v300;
  double v301;
  double v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  unint64_t v307;
  _QWORD *v308;
  unint64_t v309;
  char v310;
  char v311;
  unint64_t v312;
  unint64_t i;
  uint64_t v314;
  char v315;
  uint64_t v316;
  unint64_t v317;
  uint64_t v318;
  uint64_t *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  unint64_t v323;
  char v324;
  uint64_t v325;
  char v326;
  char v327;
  unint64_t v328;
  uint64_t v329;
  _BOOL8 v330;
  uint64_t v331;
  char v332;
  unint64_t v333;
  char v334;
  uint64_t v335;
  unint64_t v336;
  char v337;
  uint64_t v338;
  char v339;
  char v340;
  char v341;
  uint64_t v342;
  _BOOL8 v343;
  uint64_t v344;
  char v345;
  unint64_t v346;
  char v347;
  unint64_t v348;
  char v349;
  char v350;
  char v351;
  uint64_t *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t *v355;
  uint64_t v356;
  unint64_t v357;
  char v358;
  uint64_t v359;
  uint64_t v360;
  char v361;
  char v362;
  unint64_t v363;
  uint64_t v364;
  _BOOL8 v365;
  uint64_t v366;
  char v367;
  unint64_t v368;
  char v369;
  _QWORD *v370;
  uint64_t *v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  double v376;
  uint64_t v377;
  char v378;
  uint64_t v379;
  uint64_t v380;
  char v381;
  double v382;
  double v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  double v410;
  long double v411;
  double v412;
  double v413;
  double v414;
  uint64_t v415;
  double v416;
  uint64_t v417;
  double v418;
  long double v419;
  _QWORD *v420;
  double v421;
  double v422;
  double v423;
  double v424;
  double v425;
  double v426;
  double v427;
  double v428;
  double v429;
  double v430;
  double v431;
  uint64_t v432;
  double v433;
  double v434;
  double v435;
  double v436;
  double v437;
  double v438;
  double v439;
  uint64_t v440;
  uint64_t v441;
  char *v442;
  char *v443;
  unint64_t v444;
  double v445;
  double v446;
  __int128 v447;
  double v448;
  double v449;
  uint64_t v450;
  unint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  double v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t *v461;
  double v462;
  uint64_t v463;
  char v464;
  double v465;
  __int128 v466;
  __int128 v467;
  __int128 v468;
  __int128 v469;
  _OWORD v470[2];
  _BYTE v471[99];
  uint64_t v472[5];
  char v473;
  _QWORD v474[3];
  uint64_t v475;
  uint64_t v476;
  _QWORD v477[126];
  _OWORD v478[63];
  _BYTE v479[56];
  _OWORD v480[3];
  __int128 v481;
  uint64_t v482;
  _QWORD v483[7];
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  char v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  uint64_t v501;

  v455 = a10;
  v456 = *(double *)&a1;
  v450 = a7;
  v444 = a2;
  v454 = a26;
  v463 = a15;
  v462 = *(double *)&a17;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF698);
  MEMORY[0x1E0C80A78](v30, v31);
  *(_QWORD *)&v446 = (char *)&v405 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1D5E37368();
  *(_QWORD *)&v447 = *(_QWORD *)(v33 - 8);
  *((_QWORD *)&v447 + 1) = v33;
  MEMORY[0x1E0C80A78](v33, v34);
  v442 = (char *)&v405 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36, v37);
  v443 = (char *)&v405 - v38;
  v39 = COERCE_DOUBLE(type metadata accessor for ClassicArticleData());
  MEMORY[0x1E0C80A78](*(_QWORD *)&v39, v40);
  v441 = (uint64_t)&v405 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v478, a8, 0x3EBuLL);
  v482 = *(_QWORD *)(a9 + 64);
  v42 = *(_OWORD *)(a9 + 48);
  v480[2] = *(_OWORD *)(a9 + 32);
  v481 = v42;
  v43 = *(_OWORD *)(a9 + 16);
  v480[0] = *(_OWORD *)a9;
  v480[1] = v43;
  v445 = *a11;
  LODWORD(v409) = *a12;
  v44 = *((_QWORD *)a12 + 1);
  v408 = *((_QWORD *)a12 + 2);
  *(_QWORD *)&v426 = *(int *)(*(_QWORD *)&v39 + 64);
  v45 = swift_bridgeObjectRetain();
  *(double *)&v46 = COERCE_DOUBLE(sub_1D5D81DA4(v45));
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF868);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1D5E38280;
  v48 = (uint64_t *)(a3 + *(int *)(*(_QWORD *)&v39 + 56));
  v49 = *v48;
  v50 = v48[1];
  v461 = v48;
  *(_QWORD *)(v47 + 32) = v49;
  *(_QWORD *)(v47 + 40) = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v449 = *(double *)&v46;
  v457 = sub_1D5D8217C(v47, v46);
  swift_setDeallocating();
  v51 = a3;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  memcpy(v477, a8, 0x3EBuLL);
  v453 = a25;
  sub_1D5D82928(*(_QWORD **)&v456, v477, &v490);
  v434 = *((double *)&v490 + 1);
  v52 = *(double *)&v490;
  v53 = *((double *)&v491 + 1);
  v416 = *(double *)&v491;
  v54 = v492;
  v498 = v478[34];
  v499 = v478[35];
  v500 = v478[36];
  v501 = *(_QWORD *)&v478[37];
  v494 = v478[30];
  v495 = v478[31];
  v496 = v478[32];
  v497 = v478[33];
  v490 = v478[26];
  v491 = v478[27];
  v492 = v478[28];
  v493 = v478[29];
  v451 = sub_1D5D83870(a3, v463, *(uint64_t *)&v462, (uint64_t)&v478[26]);
  v55 = sub_1D5D7EEE8(a3, 75, (uint64_t)v480);
  v56 = *((uint64_t *)v55 + 2);
  v57 = MEMORY[0x1E0DEE9E0];
  v458 = a3;
  v448 = v39;
  if (*(double *)&v56 == 0.0)
  {
    v59 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  else
  {
    v460 = *(int *)(*(_QWORD *)&v39 + 92);
    swift_bridgeObjectRetain();
    v440 = (uint64_t)v55;
    v58 = v55 + 72;
    v59 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v463 = MEMORY[0x1E0DEE9E0];
    while (2)
    {
      v462 = *(double *)&v56;
      v60 = v59;
      sub_1D5D7FF90((uint64_t)(v58 - 40), (uint64_t)v479);
      v62 = *v461;
      v61 = v461[1];
      v63 = *(_QWORD *)(v458 + v460);
      sub_1D5D7FF90((uint64_t)v479, (uint64_t)&v484);
      switch(v489)
      {
        case 1:
          swift_bridgeObjectRetain();
          v64 = 0.0;
          goto LABEL_17;
        case 2:
          v64 = *(double *)v480;
          swift_bridgeObjectRetain();
          goto LABEL_17;
        case 3:
          v459 = v63;
          v65 = v487;
          v66 = v488;
          v67 = v455;
          v68 = *(_QWORD *)(v455 + 16);
          v452 = v487;
          if (v68)
          {
            sub_1D5D80110((uint64_t)v479, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5D801B0);
            swift_bridgeObjectRetain();
            v69 = sub_1D5D7FFCC(v65, v66);
            v70 = v60;
            if ((v71 & 1) != 0)
            {
              v64 = *(double *)(*(_QWORD *)(v67 + 56) + (v69 << 6) + 24);
              goto LABEL_10;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v70 = v60;
          }
          v73 = v463;
          v101 = v459;
          v64 = 1.0;
          if (!*(_QWORD *)(v459 + 16))
            goto LABEL_19;
          swift_bridgeObjectRetain();
          v102 = v452;
          goto LABEL_49;
        case 4:
          v459 = v63;
          v72 = v485;
          v66 = v486;
          if (v485 == v62 && v486 == v61 || (sub_1D5E378FC() & 1) != 0)
          {
            v64 = *((double *)&v481 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_17:
            v70 = v60;
LABEL_18:
            v73 = v463;
            goto LABEL_19;
          }
          v103 = v455;
          if (*(_QWORD *)(v455 + 16))
          {
            sub_1D5D80110((uint64_t)v479, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5D801B0);
            swift_bridgeObjectRetain();
            v104 = sub_1D5D7FFCC(v72, v66);
            v70 = v60;
            if ((v105 & 1) != 0)
            {
              v64 = *(double *)(*(_QWORD *)(v103 + 56) + (v104 << 6) + 48);
LABEL_10:
              swift_bridgeObjectRelease();
              goto LABEL_18;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v70 = v60;
          }
          v73 = v463;
          v101 = v459;
          v64 = 1.0;
          if (*(_QWORD *)(v459 + 16))
          {
            swift_bridgeObjectRetain();
            v102 = v72;
LABEL_49:
            v106 = sub_1D5D7FFCC(v102, v66);
            if ((v107 & 1) != 0)
            {
              v108 = *(_QWORD *)(v101 + 56) + 80 * v106;
              v109 = *(_QWORD *)(v108 + 48);
              v110 = *(_BYTE *)(v108 + 56);
              swift_bridgeObjectRelease();
              if ((v110 & 1) == 0)
              {
                if (*(_QWORD *)(*(_QWORD *)&v445 + 16))
                {
                  v111 = sub_1D5D979D0(v109);
                  if ((v112 & 1) != 0)
                    v64 = *(double *)(*(_QWORD *)(*(_QWORD *)&v445 + 56) + 8 * v111);
                }
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
LABEL_19:
          sub_1D5D80110((uint64_t)v479, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5D801B0);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v477[0] = v73;
          v76 = sub_1D5D80214((uint64_t)v479);
          v77 = *(_QWORD *)(v73 + 16);
          v78 = (v75 & 1) == 0;
          v79 = v77 + v78;
          if (__OFADD__(v77, v78))
          {
            __break(1u);
LABEL_277:
            __break(1u);
LABEL_278:
            __break(1u);
LABEL_279:
            __break(1u);
LABEL_280:
            __break(1u);
LABEL_281:
            __break(1u);
LABEL_282:
            __break(1u);
LABEL_283:
            __break(1u);
LABEL_284:
            __break(1u);
LABEL_285:
            __break(1u);
LABEL_286:
            __break(1u);
LABEL_287:
            __break(1u);
LABEL_288:
            sub_1D5E3795C();
            __break(1u);
LABEL_289:
            sub_1D5E3795C();
            __break(1u);
            JUMPOUT(0x1D5E233A0);
          }
          v80 = v75;
          if (*(_QWORD *)(v73 + 24) >= v79)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1D5D998F8();
          }
          else
          {
            sub_1D5D80674(v79, isUniquelyReferenced_nonNull_native);
            v81 = sub_1D5D80214((uint64_t)v479);
            if ((v80 & 1) != (v82 & 1))
              goto LABEL_289;
            v76 = v81;
          }
          v83 = (_QWORD *)v477[0];
          v463 = v477[0];
          if ((v80 & 1) != 0)
          {
            *(double *)(*(_QWORD *)(v477[0] + 56) + 8 * v76) = v64;
          }
          else
          {
            *(_QWORD *)(v477[0] + 8 * (v76 >> 6) + 64) |= 1 << v76;
            sub_1D5D7FF90((uint64_t)v479, v83[6] + 56 * v76);
            *(double *)(v83[7] + 8 * v76) = v64;
            v84 = v83[2];
            v85 = __OFADD__(v84, 1);
            v86 = v84 + 1;
            if (v85)
              goto LABEL_279;
            v83[2] = v86;
            sub_1D5D80110((uint64_t)v479, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5D801B0);
          }
          swift_bridgeObjectRelease();
          sub_1D5D7FF90((uint64_t)v479, (uint64_t)v483);
          v88 = v483[0];
          v87 = v483[1];
          swift_bridgeObjectRetain();
          sub_1D5D80110((uint64_t)v479, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5D8014C);
          v89 = swift_isUniquelyReferenced_nonNull_native();
          v477[0] = v70;
          v91 = sub_1D5D7FFCC(v88, v87);
          v92 = v70[2];
          v93 = (v90 & 1) == 0;
          v94 = v92 + v93;
          if (__OFADD__(v92, v93))
            goto LABEL_277;
          v95 = v90;
          if (v70[3] >= v94)
          {
            if ((v89 & 1) != 0)
            {
              v59 = (_QWORD *)v477[0];
              if ((v90 & 1) != 0)
                goto LABEL_3;
            }
            else
            {
              sub_1D5D989E4();
              v59 = (_QWORD *)v477[0];
              if ((v95 & 1) != 0)
                goto LABEL_3;
            }
          }
          else
          {
            sub_1D5D80370(v94, v89);
            v96 = sub_1D5D7FFCC(v88, v87);
            if ((v95 & 1) != (v97 & 1))
              goto LABEL_288;
            v91 = v96;
            v59 = (_QWORD *)v477[0];
            if ((v95 & 1) != 0)
            {
LABEL_3:
              *(double *)(v59[7] + 8 * v91) = v64;
              goto LABEL_4;
            }
          }
          v59[(v91 >> 6) + 8] |= 1 << v91;
          v98 = (uint64_t *)(v59[6] + 16 * v91);
          *v98 = v88;
          v98[1] = v87;
          *(double *)(v59[7] + 8 * v91) = v64;
          v99 = v59[2];
          v85 = __OFADD__(v99, 1);
          v100 = v99 + 1;
          if (v85)
            goto LABEL_280;
          v59[2] = v100;
          swift_bridgeObjectRetain();
LABEL_4:
          v58 += 56;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1D5D80110((uint64_t)v479, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5D8014C);
          v56 = *(_QWORD *)&v462 - 1;
          if (*(_QWORD *)&v462 != 1)
            continue;
          swift_bridgeObjectRelease();
          v51 = v458;
          v39 = v448;
          v57 = v463;
          break;
        default:
          sub_1D5D80110((uint64_t)v479, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5D801B0);
          v64 = 1.0;
          goto LABEL_17;
      }
      break;
    }
  }
  swift_bridgeObjectRelease();
  *(double *)&v467 = v39;
  *((_QWORD *)&v467 + 1) = sub_1D5D81BD0();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v465);
  sub_1D5D819C0(v51, (uint64_t)boxed_opaque_existential_1);
  memcpy(v477, v478, 0x3EBuLL);
  v463 = v57;
  v114 = v444;
  sub_1D5D836E0((uint64_t)&v465, v57, v444, (uint64_t)v474, v450, (uint64_t)v477, (uint64_t)v471, a14, v453, v454);
  v445 = v115;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v465);
  v116 = *v461;
  v117 = v461[1];
  v118 = sub_1D5E23F2C(*v461, v117, *(uint64_t *)&v449, v114);
  v119 = *(_BYTE *)(v51 + 59);
  sub_1D5D85BBC(*(uint64_t *)&v456, (uint64_t)v474);
  if ((v119 & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v474);
    v125 = *(_QWORD *)(v51 + *(int *)(*(_QWORD *)&v39 + 68));
    v124 = v39;
LABEL_69:
    v132 = 0;
    goto LABEL_70;
  }
  v120 = v475;
  v121 = v476;
  __swift_project_boxed_opaque_existential_1(v474, v475);
  v122 = (*(uint64_t (**)(uint64_t, uint64_t))(v121 + 64))(v120, v121);
  LOBYTE(v120) = sub_1D5D7E22C(v116, v117, v122);
  swift_bridgeObjectRelease();
  sub_1D5D85BBC((uint64_t)v474, (uint64_t)v477);
  if ((v120 & 1) != 0)
  {
    v123 = 1;
    v124 = v448;
  }
  else
  {
    v126 = v477[3];
    v127 = v477[4];
    __swift_project_boxed_opaque_existential_1(v477, v477[3]);
    (*(void (**)(_BYTE *__return_ptr, uint64_t, uint64_t))(v127 + 48))(v471, v126, v127);
    v128 = v471[0];
    sub_1D5D85BBC((uint64_t)v477, (uint64_t)v471);
    if (v128 == 1)
    {
      v123 = 0;
    }
    else
    {
      v129 = *(_QWORD *)&v471[24];
      v130 = *(_QWORD *)&v471[32];
      __swift_project_boxed_opaque_existential_1(v471, *(uint64_t *)&v471[24]);
      v131 = (*(uint64_t (**)(uint64_t, uint64_t))(v130 + 56))(v129, v130);
      v123 = sub_1D5D7E22C(v116, v117, v131);
      swift_bridgeObjectRelease();
    }
    v124 = v448;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v471);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v477);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v474);
  v125 = *(_QWORD *)(v51 + *(int *)(*(_QWORD *)&v124 + 68));
  if ((v123 & 1) == 0)
    goto LABEL_69;
  v132 = 1;
LABEL_70:
  if (*(_QWORD *)(v125 + 16) && (v133 = sub_1D5D81C38(v132), (v134 & 1) != 0))
  {
    v444 = *(_QWORD *)(*(_QWORD *)(v125 + 56) + 8 * v133);
    swift_bridgeObjectRetain();
  }
  else
  {
    v444 = sub_1D5DC6468(MEMORY[0x1E0DEE9D8]);
  }
  LODWORD(v439) = a19;
  v473 = v132;
  v135 = *(_QWORD *)(v51 + 16);
  v452 = *(uint64_t *)(v51 + 8);
  v136 = v461[1];
  v440 = *v461;
  memcpy(v477, v478, 0x3EBuLL);
  v137 = *(unsigned __int8 *)(v51 + 58);
  v462 = *(double *)&a18;
  v420 = v59;
  v428 = *(double *)&v54;
  v429 = v52;
  v459 = v117;
  v460 = v116;
  if (v137 == 2)
  {
    v138 = v441;
    sub_1D5D819C0(v51, v441);
LABEL_77:
    LODWORD(v438) = 0;
    goto LABEL_79;
  }
  v138 = v441;
  sub_1D5D819C0(v51, v441);
  if ((v137 & 1) == 0)
    goto LABEL_77;
  LODWORD(v438) = *(unsigned __int8 *)(v138 + *(int *)(*(_QWORD *)&v124 + 100)) ^ 1;
LABEL_79:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D5D7D008(v138);
  v139 = *(int *)(*(_QWORD *)&v124 + 84);
  *(_QWORD *)&v423 = *(int *)(*(_QWORD *)&v124 + 80);
  v140 = *(_BYTE *)(v51 + *(_QWORD *)&v423);
  v141 = *(_BYTE *)(v51 + v139);
  v142 = v51;
  v143 = *(_BYTE *)(v51 + *(int *)(*(_QWORD *)&v124 + 96));
  v406 = *(int *)(*(_QWORD *)&v124 + 92);
  v144 = sub_1D5E241D8(*(_QWORD *)(v142 + v406));
  _s14CohortProviderCMa();
  swift_allocObject();
  v145 = swift_bridgeObjectRetain();
  v146 = sub_1D5D84738(v145, &v473, v452, v135, v440, v136, v477, LOBYTE(v438) & 1, v140, v141, v143, v144, LOBYTE(v439) & 1);
  v468 = v478[59];
  v469 = v478[60];
  v470[0] = v478[61];
  *(_OWORD *)((char *)v470 + 11) = *(_OWORD *)((char *)&v478[61] + 11);
  v466 = v478[57];
  v467 = v478[58];
  *(_OWORD *)&v471[40] = v478[59];
  *(_OWORD *)&v471[56] = v478[60];
  *(_OWORD *)&v471[72] = v478[61];
  *(_OWORD *)&v471[83] = *(_OWORD *)((char *)&v478[61] + 11);
  v147 = *((double *)&v478[47] + 1);
  *(_OWORD *)&v471[8] = v478[57];
  v148 = *((double *)&v478[56] + 1);
  *(_QWORD *)v471 = *((_QWORD *)&v478[56] + 1);
  *(_OWORD *)&v471[24] = v478[58];
  v149 = *(_QWORD *)&v462;
  v150 = v451;
  v151 = v456;
  *(double *)&v452 = sub_1D5D81348(v146, v118, *((long double *)&v478[47] + 1), *(uint64_t *)&v462, v451, *(uint64_t *)&v456, (uint64_t)v472, (double *)v471);
  v465 = v148;
  v419 = v147;
  v152 = sub_1D5D81348(v146, v118, v147, v149, v150, *(uint64_t *)&v151, (uint64_t)v471, &v465);
  if (*(_BYTE *)(v142 + 59))
    v153 = (double *)&v478[47];
  else
    v153 = (double *)&v478[45] + 1;
  v154 = *v153;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v156 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  v157 = swift_checkMetadataState();
  v158 = v156(v157, AssociatedConformanceWitness);
  v417 = v146;
  v427 = *((double *)&v54 + 1);
  if (*((double *)&v478[46] + 1) <= 0.0)
  {
    v159 = v442;
  }
  else
  {
    v159 = v442;
    if (*(double *)&v478[46] > 0.0)
    {
      v160 = v53;
      v161 = a5;
      v162 = v44;
      v163 = v154;
      v164 = v152;
      v165 = *((double *)&v478[46] + 1) + -1.0;
      v166 = v165 * exp2(-(double)v158 / *(double *)&v478[46]);
      v152 = v164;
      v167 = v163;
      v44 = v162;
      a5 = v161;
      v53 = v160;
      v154 = v167 * (v166 + 1.0);
    }
  }
  v168 = v456;
  v169 = *(_QWORD *)(*(_QWORD *)&v456 + 24);
  v170 = *(_QWORD *)(*(_QWORD *)&v456 + 32);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v456, v169);
  v171 = (*(uint64_t (**)(uint64_t, uint64_t))(v170 + 8))(v169, v170);
  v172 = sub_1D5D7E22C(v460, v459, v171);
  swift_bridgeObjectRelease();
  if ((v172 & 1) != 0)
    v173 = *((double *)&v478[19] + 1);
  else
    v173 = 0.0;
  v174 = *(_QWORD *)(*(_QWORD *)&v168 + 24);
  v175 = *(_QWORD *)(*(_QWORD *)&v168 + 32);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v168, v174);
  v176 = *(uint64_t (**)(uint64_t, uint64_t))(v175 + 8);
  v177 = *(_QWORD *)&v449;
  swift_bridgeObjectRetain();
  v178 = v176(v174, v175);
  v179 = sub_1D5D809F8(v178, v177);
  swift_bridgeObjectRelease();
  v180 = *(_QWORD *)(v179 + 16);
  swift_release();
  if (v180)
  {
    if (v180 == 2)
    {
      v181 = *(char **)&v478[52];
    }
    else if (v180 == 1)
    {
      v181 = *(char **)&v478[51];
    }
    else
    {
      v181 = *((char **)&v478[51] + 1);
    }
  }
  else
  {
    v181 = *((char **)&v478[52] + 1);
  }
  v442 = v181;
  v182 = v456;
  v183 = *(_QWORD *)(*(_QWORD *)&v456 + 24);
  v184 = *(_QWORD *)(*(_QWORD *)&v456 + 32);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v456, v183);
  v185 = (*(uint64_t (**)(uint64_t, uint64_t))(v184 + 16))(v183, v184);
  v186 = sub_1D5D809F8(v185, *(uint64_t *)&v449);
  swift_bridgeObjectRelease();
  v187 = *(_QWORD *)(v186 + 16);
  swift_release();
  sub_1D5D85BBC(*(uint64_t *)&v182, (uint64_t)&v465);
  if ((v172 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v465);
  }
  else
  {
    v189 = *((_QWORD *)&v467 + 1);
    v188 = v467;
    __swift_project_boxed_opaque_existential_1(&v465, v467);
    v190 = (*(uint64_t (**)(uint64_t, uint64_t))(v189 + 16))(v188, v189);
    LOBYTE(v188) = sub_1D5D7E22C(v460, v459, v190);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v465);
    v187 += v188 & 1;
  }
  v191 = *(int **)&v448;
  v192 = *(_QWORD *)&v446;
  v193 = a20;
  if (v187)
  {
    if (v187 == 2)
    {
      v194 = *(uint64_t *)&v478[3];
    }
    else if (v187 == 1)
    {
      v194 = *(uint64_t *)&v478[2];
    }
    else
    {
      v194 = *((uint64_t *)&v478[2] + 1);
    }
  }
  else
  {
    v194 = *((uint64_t *)&v478[3] + 1);
  }
  v441 = v194;
  v195 = *((_QWORD *)&v447 + 1);
  v196 = v447;
  v197 = a22 & 1;
  v432 = a20;
  LODWORD(v440) = v197;
  v418 = v152;
  v198 = *(float *)&a20;
  if (v152 <= 0.0)
  {
    if ((a20 & 0x100000000) != 0)
      v198 = 0.0;
  }
  else
  {
    v199 = v152;
    if ((a20 & 0x100000000) != 0)
      v200 = 0.0;
    else
      v200 = *(float *)&a20;
    v201 = pow(*(double *)&v452 / v199, *(long double *)&v478[1]);
    v197 = v440;
    v193 = v432;
    v198 = v200 * v201;
  }
  v425 = v198;
  v439 = *(double *)&a21;
  v202 = *(double *)&v478[4];
  if ((v193 & 0x100000000) != 0)
    v203 = 0.0;
  else
    v203 = *((double *)v478 + 1);
  v449 = 0.0;
  if (v197)
    v204 = 0.0;
  else
    v204 = *(double *)&v478[53];
  v438 = *(double *)&v478[49];
  v437 = *((double *)&v478[48] + 1);
  v436 = *((double *)&v478[1] + 1);
  v205 = *((double *)&v478[49] + 1)
       + v204
       + v203
       + v154
       + *(double *)&v478[4]
       + *(double *)&v478[49]
       + *((double *)&v478[48] + 1)
       + *((double *)&v478[1] + 1);
  if (v205 > 0.0)
  {
    v206 = *(double *)(v458 + v191[26]);
    v207 = *(double *)&v478[50] * v206;
    v208 = v206 <= 0.0;
    v209 = 0.0;
    v210 = 1.0;
    if (v208)
      v210 = 0.0;
    v211 = v207 + *((double *)&v478[50] + 1) * v210;
    if (!v197)
      v209 = v439;
    v449 = (v209 * *(double *)&v478[53]
          + v425 * *((double *)v478 + 1)
          + *(double *)&v452 * v154
          + v445 * *(double *)&v478[4]
          + *(double *)&v442 * v438
          + v173 * v437
          + *(double *)&v441 * v436
          + *((double *)&v478[49] + 1) * v211)
         / v205;
  }
  v424 = v205;
  sub_1D5D849E0(v458 + v191[13], v192);
  (*(void (**)(char *, uint64_t, uint64_t))(v196 + 16))(v159, a13, v195);
  v212 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v196 + 48))(v192, 1, v195);
  v431 = v202;
  if (v212 == 1)
  {
    v213 = v159;
    v214 = v443;
    (*(void (**)(char *, char *, uint64_t))(v196 + 32))(v443, v213, v195);
    sub_1D5E274A0(v192, &qword_1ED9AF698);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v196 + 8))(v159, v195);
    v214 = v443;
    (*(void (**)(char *, uint64_t, uint64_t))(v196 + 32))(v443, v192, v195);
  }
  sub_1D5E37338();
  v422 = v215;
  (*(void (**)(char *, uint64_t))(v196 + 8))(v214, v195);
  v216 = v478[25];
  v217 = v191[18];
  v218 = *(_QWORD *)(v458 + v217);
  swift_allocObject();
  v219 = sub_1D5D846D0(v218);
  *(_OWORD *)&v471[64] = v478[17];
  *(_OWORD *)&v471[80] = v478[18];
  *(_DWORD *)&v471[95] = *(_DWORD *)((char *)&v478[18] + 15);
  *(_OWORD *)v471 = v478[13];
  *(_OWORD *)&v471[16] = v478[14];
  *(_OWORD *)&v471[32] = v478[15];
  *(_OWORD *)&v471[48] = v478[16];
  v220 = *(double *)&v478[5];
  swift_bridgeObjectRetain();
  v221 = sub_1D5D81348(v219, v118, v220, *(uint64_t *)&v462, v451, *(uint64_t *)&v456, (uint64_t)v472, (double *)v471);
  swift_release();
  v435 = 1.0;
  if ((v216 & 1) != 0)
    v435 = sub_1D5D843C0(v457, v451, *(uint64_t *)&v462, (uint64_t)&v490, v148);
  v430 = sub_1D5D82B00(v457);
  v222 = *(_QWORD *)(*(_QWORD *)&v456 + 24);
  v223 = *(_QWORD *)(*(_QWORD *)&v456 + 32);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v456, v222);
  v224 = (*(uint64_t (**)(uint64_t, uint64_t))(v223 + 56))(v222, v223);
  LOBYTE(v222) = sub_1D5D7E22C(v460, v459, v224);
  swift_bridgeObjectRelease();
  v225 = 1.0;
  v226 = 1.0;
  v448 = 1.0;
  if ((v222 & 1) != 0)
  {
    if (*(_BYTE *)(v458 + 59))
      v225 = 1.0;
    else
      v225 = v434;
    if (*(_BYTE *)(v458 + 59))
      v226 = v416;
    v448 = v226;
  }
  v434 = v225;
  v416 = v221;
  v227 = v53 * v221;
  v228 = 1.0;
  if (*(_BYTE *)(v458 + *(_QWORD *)&v423))
    v229 = v427;
  else
    v229 = 1.0;
  v230 = v428;
  if (!*(_BYTE *)(v458 + v191[22]))
    v230 = 1.0;
  *(double *)&v447 = v230;
  *((double *)&v447 + 1) = v229;
  v231 = v429;
  if (!*(_BYTE *)(v458 + v191[19]))
    v231 = 1.0;
  v446 = v231;
  v232 = *(_QWORD *)(*(_QWORD *)&v456 + 24);
  v233 = *(_QWORD *)(*(_QWORD *)&v456 + 32);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v456, v232);
  v234 = *(uint64_t (**)(uint64_t, uint64_t))(v233 + 104);
  v235 = v457;
  swift_bridgeObjectRetain();
  v236 = v234(v232, v233);
  v237 = sub_1D5D809F8(v236, v235);
  swift_bridgeObjectRelease();
  v238 = *(_QWORD *)(v237 + 16);
  swift_release();
  *(double *)&v443 = v154;
  v407 = v44;
  v433 = v173;
  if (v238)
  {
    if (v448 >= 1.0)
      v239 = v448;
    else
      v239 = 1.0;
    v240 = fmin(v448, 1.0);
    v241 = v434;
    v228 = *(double *)&v478[44];
    if (v434 < 1.0)
    {
LABEL_150:
      v242 = v445;
      v240 = v241 * v240;
      goto LABEL_156;
    }
  }
  else
  {
    if (v448 >= 1.0)
      v239 = v448;
    else
      v239 = 1.0;
    v240 = fmin(v448, 1.0);
    v241 = v434;
    if (v434 < 1.0)
      goto LABEL_150;
  }
  v242 = v445;
  v239 = v241 * v239;
LABEL_156:
  v243 = v458;
  v244 = v227 + 1.0;
  v245 = 1.0;
  v246 = *((double *)&v447 + 1);
  if (*((double *)&v447 + 1) < 1.0)
    v246 = 1.0;
  v247 = v246 * v239;
  v248 = *(double *)&v447;
  if (*(double *)&v447 < 1.0)
    v248 = 1.0;
  v249 = v248 * v247;
  v250 = v446;
  if (v446 < 1.0)
    v250 = 1.0;
  v251 = v250 * v249;
  if (v228 >= 1.0)
    v252 = v228;
  else
    v252 = 1.0;
  v253 = v251 * v252;
  v254 = sub_1D5E244C8(v216 & 1, (long double *)v478, v449);
  v411 = v253;
  v413 = v254;
  v255 = pow(v253, v254);
  v256 = *(_BYTE *)(v243 + 58);
  v421 = v53;
  v415 = v217;
  v257 = 1.0;
  if ((v256 & 1) != 0)
  {
    v258 = MEMORY[0x1E0DEE9E0];
    if ((v216 & 1) == 0)
      goto LABEL_171;
    v257 = *(double *)v478;
    goto LABEL_170;
  }
  v258 = MEMORY[0x1E0DEE9E0];
  if ((v216 & 1) != 0)
LABEL_170:
    v257 = v244 * v435 * v430 * v255 * v257 * a5;
LABEL_171:
  v412 = v255;
  v414 = v244;
  v423 = a5;
  v259 = BYTE8(v478[9]);
  v472[0] = v258;
  *(double *)&v450 = sub_1D5E245DC(BYTE8(v478[9]) & 1, (uint64_t)v478, v472, v463, a16);
  swift_bridgeObjectRelease();
  v260 = *((double *)&v478[25] + 1);
  v261 = v456;
  v262 = *(_QWORD *)(*(_QWORD *)&v456 + 24);
  v263 = *(_QWORD *)(*(_QWORD *)&v456 + 32);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v456, v262);
  v264 = *(uint64_t (**)(uint64_t, uint64_t))(v263 + 24);
  v265 = v457;
  swift_bridgeObjectRetain();
  v266 = v264(v262, v263);
  v267 = sub_1D5D809F8(v266, v265);
  swift_bridgeObjectRelease();
  v268 = *(_QWORD *)(v267 + 16);
  swift_release();
  v269 = pow(v260, (double)v268);
  v270 = v458;
  v271 = *(_QWORD *)(v458 + 8);
  v272 = *(_QWORD *)(v458 + 16);
  v273 = *(_QWORD *)(*(_QWORD *)&v261 + 24);
  v274 = *(_QWORD *)(*(_QWORD *)&v261 + 32);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v261, v273);
  v275 = (*(uint64_t (**)(uint64_t, uint64_t))(v274 + 88))(v273, v274);
  LOBYTE(v273) = sub_1D5D7E22C(v271, v272, v275);
  swift_bridgeObjectRelease();
  v276 = *(double *)&v478[45];
  if ((v273 & 1) == 0)
    v276 = 0.0;
  v429 = v276;
  v277 = *(_QWORD *)(*(_QWORD *)&v261 + 24);
  v278 = *(_QWORD *)(*(_QWORD *)&v261 + 32);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v261, v277);
  v279 = (*(uint64_t (**)(uint64_t, uint64_t))(v278 + 72))(v277, v278);
  LOBYTE(v277) = sub_1D5D7E22C(v271, v272, v279);
  swift_bridgeObjectRelease();
  v280 = *(double *)&v478[43];
  if ((v277 & 1) == 0)
    v280 = 0.0;
  v428 = v280;
  v281 = *(_QWORD *)(*(_QWORD *)&v261 + 24);
  v282 = *(_QWORD *)(*(_QWORD *)&v261 + 32);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)&v261, v281);
  v283 = (*(uint64_t (**)(uint64_t, uint64_t))(v282 + 80))(v281, v282);
  v284 = sub_1D5D7E22C(v271, v272, v283);
  swift_bridgeObjectRelease();
  if ((v284 & 1) != 0)
    v285 = *((double *)&v478[24] + 1);
  else
    v285 = 0.0;
  v286 = *(double *)&v478[48];
  if (*(_QWORD *)(*(_QWORD *)(v270 + *(_QWORD *)&v426) + 16))
    v286 = 0.0;
  v426 = v286;
  v427 = v285;
  v287 = 1.0;
  v288 = 1.0;
  if ((v259 & 1) != 0)
  {
    v289 = fmin(v446, 1.0)
         * (fmin(*(double *)&v447, 1.0)
          * (fmin(*((double *)&v447 + 1), 1.0)
           * v240))
         * fmin(v228, 1.0);
    v290 = *((double *)&v478[42] + 1);
    sub_1D5D82304(v409);
    v288 = pow(v291, v290);
    v287 = v289 * (*(double *)&v450 * v269) * (1.0 - v429) * (1.0 - v428) * (1.0 - v427) * (1.0 - v426) * v288;
  }
  v292 = v422 * 1000.0;
  v293 = *(_QWORD *)&v462;
  v409 = *(_QWORD *)&v288;
  v410 = v269;
  if ((BYTE8(v478[44]) & 1) != 0 && (*(_BYTE *)(v458 + 56) & 1) == 0)
    v294 = (double *)(v458 + 48);
  else
    v294 = (double *)(v458 + 40);
  v295 = v457;
  v296 = *v294;
  v297 = sub_1D5E246E8(v458, (uint64_t)v478, v457);
  v456 = 1.0;
  v298 = *(double *)&v443;
  if (v292 > 0.0 && v296 > 0.0)
  {
    v299 = v292 / v296;
    v245 = exp2(-(v297 * v299));
    v456 = exp2(-(*(double *)&v478[24] * v299));
  }
  v455 = a24;
  v300 = a23;
  v301 = 0.0;
  if (v424 > 0.0)
  {
    v302 = v439;
    if ((_DWORD)v440)
      v302 = 0.0;
    v301 = (*(double *)&v452 * (v298 * v456)
          + v245
          * (v242 * v431
           + *(double *)&v442 * v438
           + v433 * v437
           + *(double *)&v441 * v436
           + v425 * *((double *)v478 + 1)
           + v302 * *(double *)&v478[53]))
         / v424;
  }
  v303 = 0;
  v304 = *(_QWORD *)(v295 + 56);
  v459 = v295 + 56;
  v305 = 1 << *(_BYTE *)(v295 + 32);
  v306 = -1;
  if (v305 < 64)
    v306 = ~(-1 << v305);
  v307 = v306 & v304;
  v460 = (unint64_t)(v305 + 63) >> 6;
  v308 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v463 = MEMORY[0x1E0DEE9E0];
  v461 = a23;
  if ((v306 & v304) != 0)
    goto LABEL_200;
LABEL_204:
  v316 = v303 + 1;
  if (__OFADD__(v303, 1))
    goto LABEL_278;
  if (v316 < v460)
  {
    v317 = *(_QWORD *)(v459 + 8 * v316);
    ++v303;
    if (v317)
      goto LABEL_217;
    v303 = v316 + 1;
    if (v316 + 1 >= v460)
      goto LABEL_269;
    v317 = *(_QWORD *)(v459 + 8 * v303);
    if (v317)
      goto LABEL_217;
    v303 = v316 + 2;
    if (v316 + 2 >= v460)
      goto LABEL_269;
    v317 = *(_QWORD *)(v459 + 8 * v303);
    if (v317)
    {
LABEL_217:
      v307 = (v317 - 1) & v317;
      for (i = __clz(__rbit64(v317)) + (v303 << 6); ; i = v312 | (v303 << 6))
      {
        v319 = (uint64_t *)(*(_QWORD *)(v295 + 48) + 16 * i);
        v321 = *v319;
        v320 = v319[1];
        if (v300)
        {
          v322 = v300[2];
          swift_bridgeObjectRetain_n();
          if (v322)
          {
            v323 = sub_1D5D7FFCC(v321, v320);
            if ((v324 & 1) != 0)
            {
              v325 = *(_QWORD *)(v300[7] + 8 * v323);
              v326 = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)v471 = v308;
              v328 = sub_1D5D7FFCC(v321, v320);
              v329 = v308[2];
              v330 = (v327 & 1) == 0;
              v331 = v329 + v330;
              if (__OFADD__(v329, v330))
                goto LABEL_281;
              v332 = v327;
              if (v308[3] >= v331)
              {
                if ((v326 & 1) != 0)
                {
                  v308 = *(_QWORD **)v471;
                  if ((v327 & 1) != 0)
                    goto LABEL_248;
                }
                else
                {
                  sub_1D5D989E4();
                  v308 = *(_QWORD **)v471;
                  if ((v332 & 1) != 0)
                    goto LABEL_248;
                }
              }
              else
              {
                sub_1D5D80370(v331, v326);
                v333 = sub_1D5D7FFCC(v321, v320);
                if ((v332 & 1) != (v334 & 1))
                  goto LABEL_288;
                v328 = v333;
                v308 = *(_QWORD **)v471;
                if ((v332 & 1) != 0)
                  goto LABEL_248;
              }
              v308[(v328 >> 6) + 8] |= 1 << v328;
              v352 = (uint64_t *)(v308[6] + 16 * v328);
              *v352 = v321;
              v352[1] = v320;
              *(_QWORD *)(v308[7] + 8 * v328) = v325;
              v353 = v308[2];
              v85 = __OFADD__(v353, 1);
              v354 = v353 + 1;
              if (v85)
                goto LABEL_283;
LABEL_253:
              v308[2] = v354;
              swift_bridgeObjectRetain();
LABEL_254:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v295 = v457;
              goto LABEL_255;
            }
          }
        }
        else
        {
          v335 = *(_QWORD *)(v293 + 16);
          swift_bridgeObjectRetain();
          if (v335)
          {
            swift_bridgeObjectRetain();
            v336 = sub_1D5D7FFCC(v321, v320);
            if ((v337 & 1) != 0)
            {
              v338 = *(_QWORD *)(v293 + 56) + 24 * v336;
              v325 = *(_QWORD *)(v338 + 8);
              v339 = *(_BYTE *)(v338 + 16);
              swift_bridgeObjectRelease();
              if ((v339 & 1) == 0)
              {
                swift_bridgeObjectRetain();
                v340 = swift_isUniquelyReferenced_nonNull_native();
                *(_QWORD *)v471 = v308;
                v328 = sub_1D5D7FFCC(v321, v320);
                v342 = v308[2];
                v343 = (v341 & 1) == 0;
                v344 = v342 + v343;
                if (__OFADD__(v342, v343))
                  goto LABEL_284;
                v345 = v341;
                if (v308[3] >= v344)
                {
                  if ((v340 & 1) != 0)
                  {
                    v308 = *(_QWORD **)v471;
                    if ((v341 & 1) != 0)
                      goto LABEL_248;
                  }
                  else
                  {
                    sub_1D5D989E4();
                    v308 = *(_QWORD **)v471;
                    if ((v345 & 1) != 0)
                      goto LABEL_248;
                  }
                }
                else
                {
                  sub_1D5D80370(v344, v340);
                  v346 = sub_1D5D7FFCC(v321, v320);
                  if ((v345 & 1) != (v347 & 1))
                    goto LABEL_288;
                  v328 = v346;
                  v308 = *(_QWORD **)v471;
                  if ((v345 & 1) != 0)
                  {
LABEL_248:
                    *(_QWORD *)(v308[7] + 8 * v328) = v325;
                    goto LABEL_254;
                  }
                }
                v308[(v328 >> 6) + 8] |= 1 << v328;
                v355 = (uint64_t *)(v308[6] + 16 * v328);
                *v355 = v321;
                v355[1] = v320;
                *(_QWORD *)(v308[7] + 8 * v328) = v325;
                v356 = v308[2];
                v85 = __OFADD__(v356, 1);
                v354 = v356 + 1;
                if (v85)
                  goto LABEL_285;
                goto LABEL_253;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRetain();
        v348 = sub_1D5D7FFCC(v321, v320);
        v350 = v349;
        swift_bridgeObjectRelease();
        if ((v350 & 1) != 0)
        {
          v351 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)v471 = v308;
          if ((v351 & 1) == 0)
          {
            sub_1D5D989E4();
            v308 = *(_QWORD **)v471;
          }
          swift_bridgeObjectRelease();
          sub_1D5E24C64(v348, (uint64_t)v308);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
LABEL_255:
        v293 = *(_QWORD *)&v462;
        if (!*(_QWORD *)(*(_QWORD *)&v462 + 16))
          goto LABEL_198;
        swift_bridgeObjectRetain();
        v357 = sub_1D5D7FFCC(v321, v320);
        if ((v358 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_198:
          swift_bridgeObjectRetain();
          v309 = sub_1D5D7FFCC(v321, v320);
          v311 = v310;
          swift_bridgeObjectRelease();
          if ((v311 & 1) != 0)
          {
            v314 = v463;
            v315 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)v471 = v314;
            if ((v315 & 1) == 0)
            {
              sub_1D5D989E4();
              v314 = *(_QWORD *)v471;
            }
            swift_bridgeObjectRelease();
            v463 = v314;
            sub_1D5E24C64(v309, v314);
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          v300 = v461;
          if (!v307)
            goto LABEL_204;
          goto LABEL_200;
        }
        v359 = *(_QWORD *)(*(_QWORD *)(v293 + 56) + 24 * v357);
        swift_bridgeObjectRelease();
        v360 = v463;
        v361 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)v471 = v360;
        v363 = sub_1D5D7FFCC(v321, v320);
        v364 = *(_QWORD *)(v360 + 16);
        v365 = (v362 & 1) == 0;
        v366 = v364 + v365;
        if (__OFADD__(v364, v365))
          goto LABEL_286;
        v367 = v362;
        if (*(_QWORD *)(v360 + 24) >= v366)
        {
          if ((v361 & 1) == 0)
            sub_1D5D989E4();
        }
        else
        {
          sub_1D5D80370(v366, v361);
          v368 = sub_1D5D7FFCC(v321, v320);
          if ((v367 & 1) != (v369 & 1))
            goto LABEL_288;
          v363 = v368;
        }
        v300 = v461;
        v370 = *(_QWORD **)v471;
        v463 = *(_QWORD *)v471;
        if ((v367 & 1) != 0)
        {
          *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v471 + 56) + 8 * v363) = v359;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)v471 + 8 * (v363 >> 6) + 64) |= 1 << v363;
          v371 = (uint64_t *)(v370[6] + 16 * v363);
          *v371 = v321;
          v371[1] = v320;
          *(_QWORD *)(v370[7] + 8 * v363) = v359;
          v372 = v370[2];
          v85 = __OFADD__(v372, 1);
          v373 = v372 + 1;
          if (v85)
            goto LABEL_287;
          v370[2] = v373;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v295 = v457;
        v293 = *(_QWORD *)&v462;
        if (!v307)
          goto LABEL_204;
LABEL_200:
        v312 = __clz(__rbit64(v307));
        v307 &= v307 - 1;
      }
    }
    v318 = v316 + 3;
    if (v318 < v460)
    {
      v317 = *(_QWORD *)(v459 + 8 * v318);
      if (!v317)
      {
        while (1)
        {
          v303 = v318 + 1;
          if (__OFADD__(v318, 1))
            goto LABEL_282;
          if (v303 >= v460)
            goto LABEL_269;
          v317 = *(_QWORD *)(v459 + 8 * v303);
          ++v318;
          if (v317)
            goto LABEL_217;
        }
      }
      v303 = v318;
      goto LABEL_217;
    }
  }
LABEL_269:
  v462 = v297;
  swift_release();
  swift_release();
  v374 = *(_QWORD *)(v458 + v415);
  v461 = (uint64_t *)v472[0];
  v375 = v455;
  v376 = v245;
  if (v455)
  {
    v377 = *(_QWORD *)(v455 + 352);
    v378 = *(_BYTE *)(v455 + 360);
    swift_beginAccess();
    v379 = *(_QWORD *)(v375 + 304);
  }
  else
  {
    v379 = 0;
    v377 = 0;
    v378 = 1;
  }
  v380 = (uint64_t)v420;
  v381 = v375 == 0;
  v382 = v449;
  v383 = v287 * (v257 * v301);
  v384 = v432;
  v385 = v432;
  v386 = *((_QWORD *)&v478[0] + 1);
  v387 = *(_QWORD *)&v478[53];
  _s20HeadlineScoreProfileCMa();
  swift_allocObject();
  v464 = 0;
  if ((v384 & 0x100000000) != 0)
    v388 = 0;
  else
    v388 = v385;
  *((double *)&v404 + 1) = v257;
  *(_QWORD *)&v404 = v387;
  *((double *)&v403 + 1) = v437;
  *(double *)&v403 = v438;
  *(_QWORD *)&v402 = v386;
  *((double *)&v402 + 1) = v431;
  *((double *)&v401 + 1) = v436;
  *(double *)&v401 = v423;
  *((double *)&v400 + 1) = v376;
  *(_QWORD *)&v400 = v442;
  *((double *)&v399 + 1) = v433;
  *(long double *)&v399 = v411;
  *((double *)&v398 + 1) = v426;
  *(_QWORD *)&v398 = v443;
  *((double *)&v397 + 1) = v418;
  *(_QWORD *)&v397 = v452;
  *((double *)&v396 + 1) = v429;
  *(double *)&v396 = v427;
  *(double *)&v395 = v382;
  *((double *)&v395 + 1) = v428;
  *(double *)&v394 = v382 * v257 * v287;
  *((double *)&v394 + 1) = v430;
  *((double *)&v393 + 1) = v410;
  *(double *)&v393 = v413;
  *((double *)&v392 + 1) = v435;
  *(double *)&v392 = v462;
  *((long double *)&v391 + 1) = v419;
  *(double *)&v391 = v412;
  v389 = sub_1D5D821F8(v444, v374, v451, (uint64_t)v461, (uint64_t)v308, v463, v380, v388, v446, *(double *)&v441, v434, v448, v445, v421, v414, v416, v391, v447, v392,
           v393,
           v450,
           v394,
           v395,
           v396,
           v397,
           v398,
           v399,
           v400,
           *(uint64_t *)&v456,
           *(uint64_t *)&v383,
           v409,
           *(uint64_t *)&v439,
           v440,
           v401,
           v402,
           v403,
           v404,
           *(uint64_t *)&v287,
           v377,
           v378,
           v379,
           v381);
  swift_bridgeObjectRetain();
  return v389;
}

uint64_t sub_1D5E233B0(uint64_t a1, double *a2)
{
  long double v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  double v15;
  char isUniquelyReferenced_nonNull_native;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  double v26;
  char v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t result;
  char *v44;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  v12 = (char *)MEMORY[0x1E0DEE9E8];
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_5;
    }
    v17 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      sub_1D5E3795C();
      __break(1u);
      result = swift_release();
      __break(1u);
      return result;
    }
    if (v17 >= v10)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v11;
    if (!v18)
    {
      v11 = v17 + 1;
      if (v17 + 1 >= v10)
        goto LABEL_25;
      v18 = *(_QWORD *)(v6 + 8 * v11);
      if (!v18)
      {
        v11 = v17 + 2;
        if (v17 + 2 >= v10)
          goto LABEL_25;
        v18 = *(_QWORD *)(v6 + 8 * v11);
        if (!v18)
        {
          v11 = v17 + 3;
          if (v17 + 3 >= v10)
            goto LABEL_25;
          v18 = *(_QWORD *)(v6 + 8 * v11);
          if (!v18)
          {
            v11 = v17 + 4;
            if (v17 + 4 >= v10)
              goto LABEL_25;
            v18 = *(_QWORD *)(v6 + 8 * v11);
            if (!v18)
              break;
          }
        }
      }
    }
LABEL_24:
    v9 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_5:
    v15 = *(double *)(*(_QWORD *)(a1 + 56) + 8 * v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44 = v12;
    sub_1D5DCCDE4(isUniquelyReferenced_nonNull_native, v15);
    swift_bridgeObjectRelease();
  }
  v19 = v17 + 5;
  if (v19 < v10)
  {
    v18 = *(_QWORD *)(v6 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v11 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_44;
        if (v11 >= v10)
          goto LABEL_25;
        v18 = *(_QWORD *)(v6 + 8 * v11);
        ++v19;
        if (v18)
          goto LABEL_24;
      }
    }
    v11 = v19;
    goto LABEL_24;
  }
LABEL_25:
  swift_release();
  v20 = swift_bridgeObjectRetain();
  v21 = (char *)sub_1D5D9E5CC(v20);
  swift_bridgeObjectRelease();
  v44 = v21;
  sub_1D5E2501C(&v44);
  swift_bridgeObjectRelease();
  v22 = v44;
  v23 = *((_QWORD *)v44 + 2);
  if (v23)
  {
    swift_retain();
    v24 = 0;
    v25 = (char *)MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v26 = *(double *)&v22[8 * v24 + 32];
      v27 = swift_isUniquelyReferenced_nonNull_native();
      v44 = v25;
      v29 = sub_1D5D97B10(v26);
      v30 = *((_QWORD *)v25 + 2);
      v31 = (v28 & 1) == 0;
      v32 = v30 + v31;
      if (__OFADD__(v30, v31))
        goto LABEL_42;
      v33 = v28;
      if (*((_QWORD *)v25 + 3) >= v32)
      {
        if ((v27 & 1) == 0)
          sub_1D5D992F4();
      }
      else
      {
        sub_1D5D9C8F4(v32, v27);
        v34 = sub_1D5D97B10(v26);
        if ((v33 & 1) != (v35 & 1))
          goto LABEL_45;
        v29 = v34;
      }
      v36 = (double)v24;
      v25 = v44;
      if ((v33 & 1) != 0)
      {
        *(double *)(*((_QWORD *)v44 + 7) + 8 * v29) = v36;
      }
      else
      {
        *(_QWORD *)&v44[8 * (v29 >> 6) + 64] |= 1 << v29;
        v37 = 8 * v29;
        *(double *)(*((_QWORD *)v25 + 6) + v37) = v26;
        *(double *)(*((_QWORD *)v25 + 7) + v37) = v36;
        v38 = *((_QWORD *)v25 + 2);
        v39 = __OFADD__(v38, 1);
        v40 = v38 + 1;
        if (v39)
          goto LABEL_43;
        *((_QWORD *)v25 + 2) = v40;
      }
      ++v24;
      swift_bridgeObjectRelease();
      if (v23 == v24)
      {
        swift_release();
        goto LABEL_40;
      }
    }
  }
  v25 = (char *)MEMORY[0x1E0DEE9E0];
LABEL_40:
  swift_release();
  v41 = (double)(*((_QWORD *)v25 + 2) - 1);
  swift_bridgeObjectRetain();
  v42 = sub_1D5E2608C(MEMORY[0x1E0DEE9E0], a1, (uint64_t)v25, v3, v4, v5, v41);
  swift_bridgeObjectRelease_n();
  return v42;
}

uint64_t sub_1D5E23738(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v23)(uint64_t, uint64_t);
  double v24;
  char v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];

  v27 = a3;
  v26[1] = *(_QWORD *)(a5 + 8);
  v26[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_1D5E37614();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v26 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)v26 - v16;
  v18 = *a2;
  v19 = a2[1];
  v29[0] = 2831206;
  v29[1] = 0xE300000000000000;
  v28 = v18;
  sub_1D5E37458();
  MEMORY[0x1D827CFA4](v29, v27, MEMORY[0x1E0DEA968], AssociatedTypeWitness, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29[0] = *a1;
    *a1 = 0x8000000000000000;
    sub_1D5D84094(v28, v19, isUniquelyReferenced_nonNull_native, 0.0);
    *a1 = v29[0];
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v12, AssociatedTypeWitness);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v23 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
    swift_bridgeObjectRetain();
    v24 = (double)(unint64_t)v23(AssociatedTypeWitness, AssociatedConformanceWitness);
    v25 = swift_isUniquelyReferenced_nonNull_native();
    v29[0] = *a1;
    *a1 = 0x8000000000000000;
    sub_1D5D84094(v28, v19, v25, v24);
    *a1 = v29[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v17, AssociatedTypeWitness);
  }
}

uint64_t sub_1D5E239AC(uint64_t *a1, uint64_t *a2, _QWORD *a3, Swift::Double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  __int128 v25[2];
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v12 = *a2;
  v11 = a2[1];
  sub_1D5D85BBC((uint64_t)(a2 + 2), (uint64_t)v25);
  sub_1D5E274DC(v25, (uint64_t)v26);
  v13 = v27;
  v14 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 32);
  swift_bridgeObjectRetain();
  v16 = v15(v13, v14);
  v17 = v27;
  v18 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  v19 = ReadonlyAggregateType.personalizationValue(baseline:decayRate:)(a3, v17, v18, a4);
  v20 = 1.0;
  if (v19 < a5)
  {
    v21 = (double)v16;
    if ((double)v16 > a6)
      v21 = a6;
    v20 = 1.0 - v21 / a6 * (1.0 - v19 / a5);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = *a1;
  *a1 = 0x8000000000000000;
  sub_1D5D84094(v12, v11, isUniquelyReferenced_nonNull_native, v20);
  *a1 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

void sub_1D5E23B14(char **a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v12;
  uint64_t v13;
  unint64_t v15;
  double v16;
  char v17;
  double v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  int v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  long double v27;
  unint64_t v28;

  v13 = *a2;
  v12 = a2[1];
  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    v15 = sub_1D5D7FFCC(v13, v12);
    v16 = 0.0;
    if ((v17 & 1) != 0)
      v16 = *(double *)(*(_QWORD *)(a3 + 56) + 8 * v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0.0;
  }
  v18 = a6;
  if (!*(_QWORD *)(a4 + 16))
  {
LABEL_10:
    if ((*(_BYTE *)(a5 + 112) & 1) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v19 = sub_1D5D7FFCC(v13, v12);
  if ((v20 & 1) != 0)
  {
    v21 = *(_QWORD *)(a4 + 56) + 24 * v19;
    v18 = *(double *)(v21 + 8);
    v22 = *(unsigned __int8 *)(v21 + 16);
    swift_bridgeObjectRelease();
    if (v22)
      v18 = a6;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  v18 = a6;
  if ((*(_BYTE *)(a5 + 112) & 1) == 0)
  {
LABEL_14:
    v23 = *a1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v23 = sub_1D5DAB714(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
    v25 = *((_QWORD *)v23 + 2);
    v24 = *((_QWORD *)v23 + 3);
    v26 = v25 + 1;
    if (v25 >= v24 >> 1)
      v23 = sub_1D5DAB714((char *)(v24 > 1), v25 + 1, 1, v23);
    v27 = pow(v16 * a7 + 1.0, v18);
    goto LABEL_23;
  }
LABEL_13:
  if (*(double *)(a5 + 96) * a6 < v18)
    goto LABEL_14;
  v23 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v23 = sub_1D5DAB714(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
  v25 = *((_QWORD *)v23 + 2);
  v28 = *((_QWORD *)v23 + 3);
  v26 = v25 + 1;
  v27 = 1.0;
  if (v25 >= v28 >> 1)
    v23 = sub_1D5DAB714((char *)(v28 > 1), v25 + 1, 1, v23);
LABEL_23:
  *((_QWORD *)v23 + 2) = v26;
  *(long double *)&v23[8 * v25 + 32] = v27;
  *a1 = v23;
}

uint64_t sub_1D5E23D20(_QWORD *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const void *a6, uint64_t a7, uint64_t a8, double a9, float a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t *a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  unsigned __int8 v32[8];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[4];
  uint64_t v37;

  v24 = *(_QWORD *)(a7 + 64);
  v25 = *a11;
  v26 = *(_BYTE *)a12;
  v27 = *(_QWORD *)(a12 + 8);
  v28 = *(_QWORD *)(a12 + 16);
  v29 = *(_OWORD *)(a7 + 16);
  v36[0] = *(_OWORD *)a7;
  v36[1] = v29;
  v30 = *(_OWORD *)(a7 + 48);
  v36[2] = *(_OWORD *)(a7 + 32);
  v36[3] = v30;
  v37 = v24;
  v34 = v28;
  v35 = v25;
  v32[0] = v26;
  v33 = v27;
  return sub_1D5E2121C(a1, a2, a3, a9, 1.0, a4, a5, a6, (uint64_t)v36, a8, (double *)&v35, v32, a13, a14, a15, a16, a17, a18, 0,
           LODWORD(a10),
           a19,
           a20 & 1,
           a21,
           a22,
           a23,
           a24);
}

double sub_1D5E23DD8(uint64_t a1, uint64_t a2, uint64_t a3, double *a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v9 = *a4;
  v10 = *((_QWORD *)a4 + 1);
  v12 = *((_QWORD *)a4 + 2);
  v11 = *((_QWORD *)a4 + 3);
  v14 = *((_QWORD *)a4 + 4);
  v13 = *((_QWORD *)a4 + 5);
  v16 = *((_QWORD *)a4 + 6);
  v15 = *((_QWORD *)a4 + 7);
  v17 = *((_QWORD *)a4 + 8);
  v18 = *a6;
  switch(*(_BYTE *)(a1 + 48))
  {
    case 1:
      v9 = 0.0;
      break;
    case 2:
      return v9;
    case 3:
      v21 = a1 + 32;
      v19 = *(_QWORD *)(a1 + 32);
      v20 = *(_QWORD *)(v21 + 8);
      v29 = *a4;
      v30 = v10;
      v31 = v12;
      v32 = v11;
      v33 = v14;
      v34 = v13;
      v35 = v16;
      v36 = v15;
      v37 = v17;
      v28 = v18;
      v22 = 0;
      v23 = 1;
      goto LABEL_10;
    case 4:
      v24 = *(_QWORD *)(a1 + 16);
      v25 = *(_QWORD *)(a1 + 24);
      if (v24 == a2 && v25 == a3)
        v26 = 1;
      else
        v26 = sub_1D5E378FC();
      v29 = v9;
      v30 = v10;
      v31 = v12;
      v32 = v11;
      v33 = v14;
      v34 = v13;
      v35 = v16;
      v36 = v15;
      v37 = v17;
      v28 = v18;
      v22 = v26 & 1;
      v19 = v24;
      v20 = v25;
      v23 = 0;
LABEL_10:
      v9 = sub_1D5D7E4F4(v19, v20, v22, v23, (uint64_t)&v29, a5, &v28, a7);
      break;
    default:
      v9 = 1.0;
      break;
  }
  return v9;
}

double sub_1D5E23F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  double (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  char *v51;

  v48[0] = 2831206;
  v48[1] = 0xE300000000000000;
  sub_1D5E37458();
  swift_bridgeObjectRetain();
  v7 = sub_1D5D7F978(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v9 = *((_QWORD *)v7 + 2);
  v8 = *((_QWORD *)v7 + 3);
  if (v9 >= v8 >> 1)
    v7 = sub_1D5D7F978((char *)(v8 > 1), v9 + 1, 1, v7);
  *((_QWORD *)v7 + 2) = v9 + 1;
  v10 = &v7[56 * v9];
  *((_QWORD *)v10 + 4) = 2831206;
  *((_QWORD *)v10 + 5) = 0xE300000000000000;
  *((_QWORD *)v10 + 6) = a1;
  *((_QWORD *)v10 + 7) = a2;
  *((_QWORD *)v10 + 8) = 0;
  *((_QWORD *)v10 + 9) = 0;
  v10[80] = 4;
  v51 = v7;
  sub_1D5E1FF5C(a3, &v51);
  v11 = v51;
  v12 = *((_QWORD *)v51 + 2);
  if (!v12)
  {
    v14 = 0.0;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v13 = v11 + 80;
  v14 = 0.0;
  v15 = a4;
  do
  {
    v27 = *((_QWORD *)v13 - 6);
    v28 = *((_QWORD *)v13 - 5);
    v30 = *((_QWORD *)v13 - 4);
    v29 = *((_QWORD *)v13 - 3);
    v31 = *((_QWORD *)v13 - 2);
    v32 = *((_QWORD *)v13 - 1);
    v33 = *v13;
    if (!*(_QWORD *)(v15 + 16))
    {
      v47 = 0;
      v45 = 0u;
      v46 = 0u;
      v16 = v29;
      v17 = v31;
      v18 = v32;
      v19 = v33;
      sub_1D5D801B0(v27, v28, v30, v29, v31, v32, v33);
LABEL_6:
      sub_1D5E274A0((uint64_t)&v45, qword_1ED9AF7A8);
      v20 = v27;
      v21 = v28;
      v22 = v30;
      v23 = v16;
      v24 = v17;
      v25 = v18;
      v26 = v19;
      goto LABEL_7;
    }
    v44 = *((_QWORD *)v13 - 3);
    v17 = *((_QWORD *)v13 - 2);
    v18 = *((_QWORD *)v13 - 1);
    v34 = *v13;
    sub_1D5D801B0(*((_QWORD *)v13 - 6), *((_QWORD *)v13 - 5), *((_QWORD *)v13 - 4), v29, v31, v32, v33);
    swift_bridgeObjectRetain();
    v35 = sub_1D5D7FFCC(v27, v28);
    if ((v36 & 1) != 0)
    {
      sub_1D5D85BBC(*(_QWORD *)(v15 + 56) + 40 * v35, (uint64_t)&v45);
    }
    else
    {
      v47 = 0;
      v45 = 0u;
      v46 = 0u;
    }
    swift_bridgeObjectRelease();
    v19 = v34;
    v16 = v44;
    if (!*((_QWORD *)&v46 + 1))
      goto LABEL_6;
    sub_1D5E274DC(&v45, (uint64_t)v48);
    v43 = v30;
    v37 = v49;
    v38 = v50;
    __swift_project_boxed_opaque_existential_1(v48, v49);
    v39 = *(double (**)(uint64_t, uint64_t))(v38 + 24);
    v40 = v38;
    v15 = a4;
    v14 = v14 + v39(v37, v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    v20 = v27;
    v21 = v28;
    v22 = v43;
    v23 = v44;
    v24 = v17;
    v25 = v18;
    v26 = v19;
LABEL_7:
    sub_1D5D8014C(v20, v21, v22, v23, v24, v25, v26);
    v13 += 56;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
LABEL_16:
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1D5E241D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v2 = MEMORY[0x1E0DEE9E0];
  v3 = a1 + 64;
  v33 = MEMORY[0x1E0DEE9E0];
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v6)
    goto LABEL_8;
LABEL_5:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v11 = v10 | (v9 << 6);
  while (1)
  {
    v12 = *(_QWORD *)(a1 + 56) + 80 * v11;
    if ((*(_BYTE *)(v12 + 40) & 1) != 0)
    {
      if (v6)
        goto LABEL_5;
    }
    else
    {
      v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = v17[1];
      v32 = *v17;
      v19 = *(_QWORD *)(v12 + 32);
      v20 = *(_QWORD *)(v2 + 16);
      if (*(_QWORD *)(v2 + 24) <= v20)
      {
        v21 = v20 + 1;
        swift_bridgeObjectRetain();
        sub_1D5D80370(v21, 1);
        v2 = v33;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_1D5E379A4();
      sub_1D5E3744C();
      result = sub_1D5E379C8();
      v22 = v2 + 64;
      v23 = -1 << *(_BYTE *)(v2 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v2 + 64 + 8 * (v24 >> 6))) == 0)
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          v29 = v25 == v28;
          if (v25 == v28)
            v25 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v22 + 8 * v25);
          if (v30 != -1)
          {
            v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v2 + 64 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_37:
      *(_QWORD *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      v31 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v26);
      *v31 = v32;
      v31[1] = v18;
      *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v26) = v19;
      ++*(_QWORD *)(v2 + 16);
      if (v6)
        goto LABEL_5;
    }
LABEL_8:
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v13 >= v7)
      goto LABEL_39;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    v15 = v9 + 1;
    if (!v14)
    {
      v15 = v9 + 2;
      if (v9 + 2 >= v7)
        goto LABEL_39;
      v14 = *(_QWORD *)(v3 + 8 * v15);
      if (!v14)
      {
        v15 = v9 + 3;
        if (v9 + 3 >= v7)
          goto LABEL_39;
        v14 = *(_QWORD *)(v3 + 8 * v15);
        if (!v14)
        {
          v15 = v9 + 4;
          if (v9 + 4 >= v7)
            goto LABEL_39;
          v14 = *(_QWORD *)(v3 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v15 << 6);
    v9 = v15;
  }
  v16 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_39:
    sub_1D5E2701C();
    return v2;
  }
  v14 = *(_QWORD *)(v3 + 8 * v16);
  if (v14)
  {
    v15 = v9 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v7)
      goto LABEL_39;
    v14 = *(_QWORD *)(v3 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_23;
  }
LABEL_42:
  __break(1u);
  return result;
}

double sub_1D5E244C8(char a1, long double *a2, double a3)
{
  long double v4;
  long double v5;
  long double v6;
  long double v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  double v10;

  if ((a1 & 1) == 0)
    return 1.0;
  v4 = a2[81];
  v5 = a2[82];
  v6 = a2[83];
  v7 = a2[84];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  ReadonlyAggregateType.personalizationValue.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
  if (v10 >= a3)
  {
    if (v10 != 0.0)
      v4 = v4 * pow(a3 / v10, v7);
  }
  else if (v10 != 1.0)
  {
    v4 = 1.0 - (1.0 - v4) * pow((1.0 - a3) / (1.0 - v10), v6);
  }
  return pow(v4, v5);
}

double sub_1D5E245DC(char a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  double v5;
  __int128 v9;
  long double v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _OWORD v15[2];
  uint64_t v16;
  long double v17;

  v5 = 1.0;
  if ((a1 & 1) != 0)
  {
    v9 = *(_OWORD *)(a2 + 176);
    v15[0] = *(_OWORD *)(a2 + 160);
    v15[1] = v9;
    v16 = *(_QWORD *)(a2 + 192);
    v10 = *(double *)(a2 + 200);
    swift_bridgeObjectRetain();
    v11 = sub_1D5E265A4(MEMORY[0x1E0DEE9E0], a4, a5, v10);
    swift_bridgeObjectRelease();
    *a3 = v11;
    swift_bridgeObjectRelease();
    v12 = swift_bridgeObjectRetain();
    v13 = sub_1D5D827BC(v12);
    swift_bridgeObjectRelease();
    v17 = v10;
    v5 = sub_1D5D82A20((uint64_t)v13, (uint64_t)v15);
    swift_release();
  }
  return v5;
}

double sub_1D5E246AC(long double a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  long double v6;

  sub_1D5D82304(*a5);
  return pow(v6, a1);
}

double sub_1D5E246E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;

  if (*(_BYTE *)(a1 + *(int *)(type metadata accessor for ClassicArticleData() + 88)) == 1)
    return *(double *)(a2 + 320);
  v6 = sub_1D5D82BB8(a3);
  if ((v7 & 1) != 0)
    return *(double *)(a2 + 376);
  else
    return *(double *)&v6;
}

uint64_t sub_1D5E24754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _BYTE v17[40];
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_1D5D7FF90(a1, (uint64_t)v18);
  if (v21 != 4 || !*(_QWORD *)(a2 + 16))
    goto LABEL_12;
  v8 = v19;
  v7 = v20;
  swift_bridgeObjectRetain();
  sub_1D5D7FFCC(v8, v7);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF5C0);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1D5E38280;
    sub_1D5D85BBC(a4, v12 + 32);
    return v12;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v14 = 2831206;
  *((_QWORD *)&v14 + 1) = 0xE300000000000000;
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a3 + 16) && (v10 = sub_1D5D7FFCC(v14, *((uint64_t *)&v14 + 1)), (v11 & 1) != 0))
  {
    sub_1D5D85BBC(*(_QWORD *)(a3 + 56) + 40 * v10, (uint64_t)&v14);
  }
  else
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v15 + 1))
  {
    sub_1D5E274A0((uint64_t)&v14, qword_1ED9AF7A8);
    goto LABEL_12;
  }
  sub_1D5E274DC(&v14, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF5C0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1D5E38FE0;
  sub_1D5D85BBC((uint64_t)v17, v12 + 32);
  sub_1D5D85BBC(a4, v12 + 72);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v12;
}

uint64_t sub_1D5E24910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  char v9;
  char v10;
  uint64_t v11;

  v5 = *(unsigned int *)(a3 + 60);
  v6 = *(unsigned int *)(a3 + 68);
  if (a1 == a4 && a2 == a5)
    return 0;
  v8 = *(_BYTE *)(a3 + 72);
  v9 = *(_BYTE *)(a3 + 64);
  v10 = sub_1D5E378FC();
  v11 = v5 | (v6 << 32);
  if ((v8 & 1) != 0)
    v11 = 0;
  if ((v9 & 1) != 0)
    v11 = 0;
  if ((v10 & 1) != 0)
    return 0;
  else
    return v11;
}

uint64_t sub_1D5E24998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v10 = sub_1D5E378CC();
  v11 = v5;
  sub_1D5E378CC();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a4 + 16) && (v6 = sub_1D5D7FFCC(v10, v11), (v7 & 1) != 0))
    v8 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v6);
  else
    v8 = 0;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1D5E24A68(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1D5E37620();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_1D5E379A4();
        swift_bridgeObjectRetain();
        sub_1D5E3744C();
        v9 = sub_1D5E379C8();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ReadonlyAggregate(0) - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D5E24C64(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1D5E37620();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1D5E379A4();
        swift_bridgeObjectRetain();
        sub_1D5E3744C();
        v9 = sub_1D5E379C8();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D5E24E38(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1D5E37620();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = 32 * v6;
        sub_1D5E379A4();
        swift_bridgeObjectRetain();
        sub_1D5E3744C();
        v10 = sub_1D5E379C8();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 32 * v3);
          v14 = (_OWORD *)(v12 + v9);
          if (32 * v3 != v9 || v13 >= v14 + 2)
          {
            v15 = v14[1];
            *v13 = *v14;
            v13[1] = v15;
          }
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_QWORD *)(v16 + 8 * v3);
          v18 = (_QWORD *)(v16 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1D5E2501C(char **a1)
{
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D5E26078((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1D5E25084(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1D5E25084(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  double v24;
  uint64_t v25;
  double *v26;
  double v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double *v98;

  v2 = a1;
  v3 = a1[1];
  result = sub_1D5E378C0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(double *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = v79 + 8 * v82;
          if (v81 >= *(double *)v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v83 + 8) = *(_QWORD *)v83;
          *(double *)(v79 + 8 * v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_136;
    v95 = result;
    v96 = v3;
    if (v3 > 1)
    {
      v6 = v5 >> 1;
      result = sub_1D5E3753C();
      *(_QWORD *)(result + 16) = v6;
      v3 = v96;
      v94 = result;
      v98 = (double *)(result + 32);
LABEL_13:
      v8 = 0;
      v9 = *v2;
      v92 = v2;
      v93 = *v2 - 8;
      v10 = MEMORY[0x1E0DEE9D8];
      v97 = *v2;
      while (1)
      {
        v12 = v8++;
        if (v8 < v3)
        {
          v13 = *(double *)(v9 + 8 * v8);
          v14 = *(double *)(v9 + 8 * v12);
          v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            v15 = v13;
            while (1)
            {
              v16 = v15;
              v15 = *(double *)(v9 + 8 * v8);
              if (v13 < v14 == v15 >= v16)
                break;
              if (v3 == ++v8)
              {
                v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12)
              goto LABEL_138;
            if (v12 < v8)
            {
              v17 = (uint64_t *)(v93 + 8 * v8);
              v18 = v8;
              v19 = v12;
              v20 = (uint64_t *)(v9 + 8 * v12);
              do
              {
                if (v19 != --v18)
                {
                  if (!v9)
                    goto LABEL_144;
                  v21 = *v20;
                  *v20 = *v17;
                  *v17 = v21;
                }
                ++v19;
                --v17;
                ++v20;
              }
              while (v19 < v18);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12))
            goto LABEL_135;
          if (v8 - v12 < v95)
          {
            v22 = v12 + v95;
            if (__OFADD__(v12, v95))
              goto LABEL_139;
            if (v22 >= v3)
              v22 = v3;
            if (v22 < v12)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v8 != v22)
            {
              v23 = (double *)(v93 + 8 * v8);
              do
              {
                v24 = *(double *)(v9 + 8 * v8);
                v25 = v12;
                v26 = v23;
                do
                {
                  v27 = *v26;
                  if (v24 >= *v26)
                    break;
                  if (!v9)
                    goto LABEL_142;
                  *v26 = v24;
                  v26[1] = v27;
                  --v26;
                  ++v25;
                }
                while (v8 != v25);
                ++v8;
                ++v23;
              }
              while (v8 != v22);
              v8 = v22;
            }
          }
        }
        if (v8 < v12)
          goto LABEL_130;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1D5E258D0(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
          v10 = result;
        }
        v29 = *(_QWORD *)(v10 + 16);
        v28 = *(_QWORD *)(v10 + 24);
        v11 = v29 + 1;
        v9 = v97;
        if (v29 >= v28 >> 1)
        {
          result = (uint64_t)sub_1D5E258D0((char *)(v28 > 1), v29 + 1, 1, (char *)v10);
          v9 = v97;
          v10 = result;
        }
        *(_QWORD *)(v10 + 16) = v11;
        v30 = v10 + 32;
        v31 = (uint64_t *)(v10 + 32 + 16 * v29);
        *v31 = v12;
        v31[1] = v8;
        if (v29)
        {
          while (1)
          {
            v32 = v11 - 1;
            if (v11 >= 4)
            {
              v37 = v30 + 16 * v11;
              v38 = *(_QWORD *)(v37 - 64);
              v39 = *(_QWORD *)(v37 - 56);
              v43 = __OFSUB__(v39, v38);
              v40 = v39 - v38;
              if (v43)
                goto LABEL_119;
              v42 = *(_QWORD *)(v37 - 48);
              v41 = *(_QWORD *)(v37 - 40);
              v43 = __OFSUB__(v41, v42);
              v35 = v41 - v42;
              v36 = v43;
              if (v43)
                goto LABEL_120;
              v44 = v11 - 2;
              v45 = (uint64_t *)(v30 + 16 * (v11 - 2));
              v47 = *v45;
              v46 = v45[1];
              v43 = __OFSUB__(v46, v47);
              v48 = v46 - v47;
              if (v43)
                goto LABEL_121;
              v43 = __OFADD__(v35, v48);
              v49 = v35 + v48;
              if (v43)
                goto LABEL_123;
              if (v49 >= v40)
              {
                v67 = (uint64_t *)(v30 + 16 * v32);
                v69 = *v67;
                v68 = v67[1];
                v43 = __OFSUB__(v68, v69);
                v70 = v68 - v69;
                if (v43)
                  goto LABEL_129;
                v60 = v35 < v70;
                goto LABEL_83;
              }
            }
            else
            {
              if (v11 != 3)
              {
                v61 = *(_QWORD *)(v10 + 32);
                v62 = *(_QWORD *)(v10 + 40);
                v43 = __OFSUB__(v62, v61);
                v54 = v62 - v61;
                v55 = v43;
                goto LABEL_77;
              }
              v34 = *(_QWORD *)(v10 + 32);
              v33 = *(_QWORD *)(v10 + 40);
              v43 = __OFSUB__(v33, v34);
              v35 = v33 - v34;
              v36 = v43;
            }
            if ((v36 & 1) != 0)
              goto LABEL_122;
            v44 = v11 - 2;
            v50 = (uint64_t *)(v30 + 16 * (v11 - 2));
            v52 = *v50;
            v51 = v50[1];
            v53 = __OFSUB__(v51, v52);
            v54 = v51 - v52;
            v55 = v53;
            if (v53)
              goto LABEL_124;
            v56 = (uint64_t *)(v30 + 16 * v32);
            v58 = *v56;
            v57 = v56[1];
            v43 = __OFSUB__(v57, v58);
            v59 = v57 - v58;
            if (v43)
              goto LABEL_126;
            if (__OFADD__(v54, v59))
              goto LABEL_128;
            if (v54 + v59 >= v35)
            {
              v60 = v35 < v59;
LABEL_83:
              if (v60)
                v32 = v44;
              goto LABEL_85;
            }
LABEL_77:
            if ((v55 & 1) != 0)
              goto LABEL_125;
            v63 = (uint64_t *)(v30 + 16 * v32);
            v65 = *v63;
            v64 = v63[1];
            v43 = __OFSUB__(v64, v65);
            v66 = v64 - v65;
            if (v43)
              goto LABEL_127;
            if (v66 < v54)
              goto LABEL_15;
LABEL_85:
            v71 = v32 - 1;
            if (v32 - 1 >= v11)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v9)
              goto LABEL_143;
            v72 = (uint64_t *)(v30 + 16 * v71);
            v73 = *v72;
            v74 = v30;
            v75 = (_QWORD *)(v30 + 16 * v32);
            v76 = v75[1];
            result = sub_1D5E256D0((double *)(v9 + 8 * *v72), (double *)(v9 + 8 * *v75), v9 + 8 * v76, v98);
            if (v1)
              goto LABEL_113;
            if (v76 < v73)
              goto LABEL_116;
            if (v32 > *(_QWORD *)(v10 + 16))
              goto LABEL_117;
            *v72 = v73;
            *(_QWORD *)(v74 + 16 * v71 + 8) = v76;
            v77 = *(_QWORD *)(v10 + 16);
            if (v32 >= v77)
              goto LABEL_118;
            v11 = v77 - 1;
            result = (uint64_t)memmove(v75, v75 + 2, 16 * (v77 - 1 - v32));
            v30 = v74;
            *(_QWORD *)(v10 + 16) = v77 - 1;
            v9 = v97;
            if (v77 <= 2)
              goto LABEL_15;
          }
        }
        v11 = 1;
LABEL_15:
        v3 = v96;
        if (v8 >= v96)
        {
          v7 = v94;
          v2 = v92;
          goto LABEL_102;
        }
      }
    }
    v7 = MEMORY[0x1E0DEE9D8];
    v98 = (double *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 == 1)
    {
      v94 = MEMORY[0x1E0DEE9D8];
      goto LABEL_13;
    }
    v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v10 = MEMORY[0x1E0DEE9D8];
LABEL_102:
    v94 = v7;
    if (v11 >= 2)
    {
      v84 = *v2;
      do
      {
        v85 = v11 - 2;
        if (v11 < 2)
          goto LABEL_131;
        if (!v84)
          goto LABEL_145;
        v86 = v10;
        v87 = v10 + 32;
        v88 = *(_QWORD *)(v10 + 32 + 16 * v85);
        v89 = *(_QWORD *)(v10 + 32 + 16 * (v11 - 1) + 8);
        result = sub_1D5E256D0((double *)(v84 + 8 * v88), (double *)(v84 + 8 * *(_QWORD *)(v87 + 16 * (v11 - 1))), v84 + 8 * v89, v98);
        if (v1)
          break;
        if (v89 < v88)
          goto LABEL_132;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1D5E259C8(v86);
          v86 = result;
        }
        if (v85 >= *(_QWORD *)(v86 + 16))
          goto LABEL_133;
        v90 = (_QWORD *)(v86 + 32 + 16 * v85);
        *v90 = v88;
        v90[1] = v89;
        v91 = *(_QWORD *)(v86 + 16);
        if (v11 > v91)
          goto LABEL_134;
        result = (uint64_t)memmove((void *)(v86 + 32 + 16 * (v11 - 1)), (const void *)(v86 + 32 + 16 * v11), 16 * (v91 - v11));
        v10 = v86;
        *(_QWORD *)(v86 + 16) = v91 - 1;
        v11 = v91 - 1;
      }
      while (v91 > 2);
    }
LABEL_113:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v94 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D5E256D0(double *__dst, double *__src, unint64_t a3, double *a4)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double v15;
  BOOL v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  double v21;
  int64_t v23;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = (char *)__src - (char *)__dst + 7;
  if ((char *)__src - (char *)__dst >= 0)
    v9 = (char *)__src - (char *)__dst;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[v13] <= a4)
      memmove(a4, __src, 8 * v13);
    v14 = &v4[v13];
    if (v7 >= v6 || v11 < 8)
      goto LABEL_39;
    v17 = (double *)(a3 - 8);
    v18 = v6;
    while (1)
    {
      v19 = v17 + 1;
      v20 = *--v18;
      v21 = v20;
      if (*(v14 - 1) < v20)
        break;
      v21 = *(v14 - 1);
      v18 = v6;
      if (v19 != v14)
      {
        --v14;
LABEL_35:
        *v17 = v21;
        goto LABEL_36;
      }
      if (v17 >= v14--)
        goto LABEL_35;
LABEL_36:
      if (v18 > v7)
      {
        --v17;
        v6 = v18;
        if (v14 > v4)
          continue;
      }
      v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6)
      goto LABEL_36;
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[v10] <= a4)
    memmove(a4, __dst, 8 * v10);
  v14 = &v4[v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v15 = *v6;
      if (*v6 >= *v4)
        break;
      v16 = v7 == v6++;
      if (!v16)
        goto LABEL_16;
LABEL_17:
      ++v7;
      if (v4 >= v14 || (unint64_t)v6 >= a3)
        goto LABEL_19;
    }
    v15 = *v4;
    v16 = v7 == v4++;
    if (v16)
      goto LABEL_17;
LABEL_16:
    *v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  v6 = v7;
LABEL_39:
  v23 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= (double *)((char *)v4 + (v23 & 0xFFFFFFFFFFFFFFF8)))
    memmove(v6, v4, 8 * (v23 >> 3));
  return 1;
}

char *sub_1D5E258D0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AD7F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_2(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1D5E259C8(uint64_t a1)
{
  return sub_1D5E258D0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D5E259DC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t *v32;
  uint64_t v33;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF028);
  result = sub_1D5E37710();
  v9 = result;
  v32 = a1;
  v33 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v33)
        return v9;
      v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v33)
          return v9;
        v16 = v32[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v33)
            return v9;
          v16 = v32[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v33)
              return v9;
            v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v33)
                  return v9;
                v16 = v32[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v14);
    sub_1D5E379A4();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1D5E3744C();
    result = sub_1D5E379C8();
    v22 = -1 << *(_BYTE *)(v9 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v25);
    *v30 = v20;
    v30[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v25) = v21;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D5E25C74(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char v41;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF030);
  result = sub_1D5E37710();
  v8 = result;
  v37 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  v39 = v4;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v40 = v10;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v37)
        return v8;
      v15 = a1[v14];
      v16 = v10 + 1;
      if (!v15)
      {
        v16 = v10 + 2;
        if (v10 + 2 >= v37)
          return v8;
        v15 = a1[v16];
        if (!v15)
        {
          v16 = v10 + 3;
          if (v10 + 3 >= v37)
            return v8;
          v15 = a1[v16];
          if (!v15)
          {
            v17 = v10 + 4;
            if (v10 + 4 >= v37)
              return v8;
            v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                v16 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v16 >= v37)
                  return v8;
                v15 = a1[v16];
                ++v17;
                if (v15)
                  goto LABEL_24;
              }
            }
            v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v40 = v16;
      v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(v4 + 56) + 40 * v13;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v41 = *(_BYTE *)(v21 + 16);
    v24 = *(_QWORD *)(v21 + 24);
    v25 = *(_QWORD *)(v21 + 32);
    sub_1D5E379A4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D5E3744C();
    result = sub_1D5E379C8();
    v26 = -1 << *(_BYTE *)(v8 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    v34 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v29);
    *v34 = v20;
    v34[1] = v19;
    v35 = *(_QWORD *)(v8 + 56) + 40 * v29;
    *(_QWORD *)v35 = v22;
    *(_QWORD *)(v35 + 8) = v23;
    *(_BYTE *)(v35 + 16) = v41;
    *(_QWORD *)(v35 + 24) = v24;
    *(_QWORD *)(v35 + 32) = v25;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v39;
    v10 = v40;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D5E25F78(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

size_t sub_1D5E26000(_QWORD *a1)
{
  return sub_1D5DB9F94(0, a1[2], 0, a1);
}

char *sub_1D5E26014(uint64_t a1)
{
  return sub_1D5DBA428(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1D5E26028(uint64_t a1)
{
  return sub_1D5DBA74C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1D5E2603C(uint64_t a1)
{
  return sub_1D5DBA94C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1D5E26050(uint64_t a1)
{
  return sub_1D5DBA108(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_1D5E26064(_QWORD *a1)
{
  return sub_1D5DBACD0(0, a1[2], 0, a1);
}

char *sub_1D5E26078(uint64_t a1)
{
  return sub_1D5DBA53C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D5E2608C(_QWORD *a1, uint64_t a2, uint64_t a3, long double a4, double a5, double a6, double a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  double v15;
  double v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  BOOL v25;
  unint64_t v26;
  int64_t v27;
  double v28;
  uint64_t v29;
  char v30;
  _BOOL8 v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  double v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  unint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  char v43;

  v10 = a2 + 64;
  v11 = 1 << *(_BYTE *)(a2 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a2 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  v15 = a5 * a6;
  v16 = a5 + a7;
  swift_bridgeObjectRetain();
  v17 = 0;
  while (1)
  {
    while (v13)
    {
      v23 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v24 = v23 | (v17 << 6);
      if (*(_QWORD *)(a3 + 16))
      {
LABEL_4:
        v18 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v24);
        v20 = *v18;
        v19 = v18[1];
        v21 = sub_1D5D97B10(*(double *)(*(_QWORD *)(a2 + 56) + 8 * v24));
        if ((v22 & 1) != 0)
        {
          v28 = *(double *)(*(_QWORD *)(a3 + 56) + 8 * v21);
          swift_bridgeObjectRetain_n();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v41 = sub_1D5D7FFCC(v20, v19);
          v29 = a1[2];
          v43 = v30;
          v31 = (v30 & 1) == 0;
          v32 = v29 + v31;
          if (__OFADD__(v29, v31))
            goto LABEL_41;
          if (a1[3] >= v32)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1D5D989E4();
            v35 = v41;
          }
          else
          {
            sub_1D5D80370(v32, isUniquelyReferenced_nonNull_native);
            v33 = sub_1D5D7FFCC(v20, v19);
            if ((v43 & 1) != (v34 & 1))
              goto LABEL_43;
            v35 = v33;
          }
          v36 = 1.0 - pow((v15 + v28) / v16, a4);
          if ((v43 & 1) != 0)
          {
            *(double *)(a1[7] + 8 * v35) = v36;
          }
          else
          {
            a1[(v35 >> 6) + 8] |= 1 << v35;
            v37 = (uint64_t *)(a1[6] + 16 * v35);
            *v37 = v20;
            v37[1] = v19;
            *(double *)(a1[7] + 8 * v35) = v36;
            v38 = a1[2];
            v25 = __OFADD__(v38, 1);
            v39 = v38 + 1;
            if (v25)
              goto LABEL_42;
            a1[2] = v39;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
      }
    }
    v25 = __OFADD__(v17++, 1);
    if (v25)
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_38;
    v26 = *(_QWORD *)(v10 + 8 * v17);
    if (!v26)
      break;
LABEL_20:
    v13 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v17 << 6);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_4;
  }
  v27 = v17 + 1;
  if (v17 + 1 >= v14)
    goto LABEL_38;
  v26 = *(_QWORD *)(v10 + 8 * v27);
  if (v26)
    goto LABEL_19;
  v27 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_38;
  v26 = *(_QWORD *)(v10 + 8 * v27);
  if (v26)
    goto LABEL_19;
  v27 = v17 + 3;
  if (v17 + 3 >= v14)
    goto LABEL_38;
  v26 = *(_QWORD *)(v10 + 8 * v27);
  if (v26)
    goto LABEL_19;
  v27 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_38:
    swift_release();
    return (uint64_t)a1;
  }
  v26 = *(_QWORD *)(v10 + 8 * v27);
  if (v26)
  {
LABEL_19:
    v17 = v27;
    goto LABEL_20;
  }
  while (1)
  {
    v17 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v17 >= v14)
      goto LABEL_38;
    v26 = *(_QWORD *)(v10 + 8 * v17);
    ++v27;
    if (v26)
      goto LABEL_20;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  result = sub_1D5E3795C();
  __break(1u);
  return result;
}

char *sub_1D5E263A0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *result;
  int64_t v19;
  unint64_t v20;
  unint64_t i;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28[2];
  char *v29;

  v29 = a1;
  v14 = a2 + 56;
  v15 = 1 << *(_BYTE *)(a2 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a2 + 56);
  v27 = (unint64_t)(v15 + 63) >> 6;
  result = (char *)swift_bridgeObjectRetain();
  v19 = 0;
  if (!v17)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v20 | (v19 << 6); ; i = __clz(__rbit64(v23)) + (v19 << 6))
  {
    v25 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * i);
    v26 = v25[1];
    v28[0] = *v25;
    v28[1] = v26;
    swift_bridgeObjectRetain();
    sub_1D5E23B14(&v29, v28, a3, a4, a5, a6, a7);
    if (v7)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return (char *)swift_bridgeObjectRelease();
    }
    result = (char *)swift_bridgeObjectRelease();
    if (v17)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v19++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v27)
      goto LABEL_26;
    v23 = *(_QWORD *)(v14 + 8 * v19);
    if (!v23)
      break;
LABEL_17:
    v17 = (v23 - 1) & v23;
  }
  v24 = v19 + 1;
  if (v19 + 1 >= v27)
    goto LABEL_26;
  v23 = *(_QWORD *)(v14 + 8 * v24);
  if (v23)
    goto LABEL_16;
  v24 = v19 + 2;
  if (v19 + 2 >= v27)
    goto LABEL_26;
  v23 = *(_QWORD *)(v14 + 8 * v24);
  if (v23)
    goto LABEL_16;
  v24 = v19 + 3;
  if (v19 + 3 >= v27)
    goto LABEL_26;
  v23 = *(_QWORD *)(v14 + 8 * v24);
  if (v23)
    goto LABEL_16;
  v24 = v19 + 4;
  if (v19 + 4 >= v27)
  {
LABEL_26:
    swift_release();
    return v29;
  }
  v23 = *(_QWORD *)(v14 + 8 * v24);
  if (v23)
  {
LABEL_16:
    v19 = v24;
    goto LABEL_17;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v27)
      goto LABEL_26;
    v23 = *(_QWORD *)(v14 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1D5E265A4(_QWORD *a1, uint64_t a2, uint64_t a3, long double a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  long double v23;
  unint64_t v24;
  char v25;
  long double v26;
  long double v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  double v34;
  uint64_t *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t result;
  unint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  char v42;
  uint64_t v44;
  int64_t v45;
  int64_t v47;

  v44 = a2 + 64;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 64);
  v45 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    while (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v9 << 6);
      if (*(_QWORD *)(a3 + 16))
        goto LABEL_23;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v12 >= v45)
      goto LABEL_39;
    v13 = *(_QWORD *)(v44 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v45)
        goto LABEL_39;
      v13 = *(_QWORD *)(v44 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v45)
          goto LABEL_39;
        v13 = *(_QWORD *)(v44 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v45)
            goto LABEL_39;
          v13 = *(_QWORD *)(v44 + 8 * v9);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_23:
      v47 = v9;
      v15 = *(_QWORD *)(a2 + 48) + 56 * v11;
      v16 = *(_QWORD *)v15;
      v17 = *(_QWORD *)(v15 + 8);
      v18 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      v21 = *(_QWORD *)(v15 + 32);
      v20 = *(_QWORD *)(v15 + 40);
      v22 = *(_BYTE *)(v15 + 48);
      v23 = *(double *)(*(_QWORD *)(a2 + 56) + 8 * v11);
      sub_1D5D801B0(*(_QWORD *)v15, v17, v18, v19, v21, v20, v22);
      swift_bridgeObjectRetain();
      v24 = sub_1D5D7FFCC(v16, v17);
      if ((v25 & 1) != 0)
      {
        v26 = *(double *)(*(_QWORD *)(a3 + 56) + 8 * v24);
        v27 = 1.0;
        if (a4 > 0.0)
          v27 = pow(v23, a4);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v28 = sub_1D5D7FFCC(v16, v17);
        v29 = a1[2];
        v42 = v30;
        v31 = (v30 & 1) == 0;
        v32 = v29 + v31;
        if (__OFADD__(v29, v31))
          goto LABEL_42;
        if (a1[3] >= v32)
        {
          v40 = v28;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1D5D989E4();
        }
        else
        {
          sub_1D5D80370(v32, isUniquelyReferenced_nonNull_native);
          v40 = sub_1D5D7FFCC(v16, v17);
          if ((v42 & 1) != (v33 & 1))
            goto LABEL_44;
        }
        v34 = pow(v26, v27);
        if ((v42 & 1) != 0)
        {
          *(double *)(a1[7] + 8 * v40) = v34;
        }
        else
        {
          a1[(v40 >> 6) + 8] |= 1 << v40;
          v35 = (uint64_t *)(a1[6] + 16 * v40);
          *v35 = v16;
          v35[1] = v17;
          *(double *)(a1[7] + 8 * v40) = v34;
          v36 = a1[2];
          v37 = __OFADD__(v36, 1);
          v38 = v36 + 1;
          if (v37)
            goto LABEL_43;
          a1[2] = v38;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D5D8014C(v16, v17, v18, v19, v21, v20, v22);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1D5D8014C(v16, v17, v18, v19, v21, v20, v22);
      }
      v9 = v47;
    }
  }
  v14 = v12 + 4;
  if (v14 >= v45)
  {
LABEL_39:
    swift_release();
    return (uint64_t)a1;
  }
  v13 = *(_QWORD *)(v44 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v45)
      goto LABEL_39;
    v13 = *(_QWORD *)(v44 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_1D5E3795C();
  __break(1u);
  return result;
}

uint64_t sub_1D5E26978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v23 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v10 >= v8)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v10);
    if (!v14)
      break;
LABEL_19:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_20:
    v16 = *(_QWORD *)(a1 + 56) + 80 * v12;
    if ((*(_BYTE *)(v16 + 64) & 1) == 0 && (*(_BYTE *)(v16 + 72) & 1) == 0)
    {
      v25 = sub_1D5E378CC();
      v26 = v17;
      sub_1D5E378CC();
      sub_1D5E37458();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a3 + 16) && (v18 = sub_1D5D7FFCC(v25, v26), (v19 & 1) != 0))
      {
        v20 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v18);
        swift_bridgeObjectRelease();
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1D5DAB714(0, *(_QWORD *)(v23 + 16) + 1, 1, (char *)v23);
          v23 = result;
        }
        v22 = *(_QWORD *)(v23 + 16);
        v21 = *(_QWORD *)(v23 + 24);
        if (v22 >= v21 >> 1)
        {
          result = (uint64_t)sub_1D5DAB714((char *)(v21 > 1), v22 + 1, 1, (char *)v23);
          v23 = result;
        }
        *(_QWORD *)(v23 + 16) = v22 + 1;
        *(_QWORD *)(v23 + 8 * v22 + 32) = v20;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
    }
  }
  v15 = v10 + 1;
  if (v10 + 1 >= v8)
    goto LABEL_33;
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
    goto LABEL_18;
  v15 = v10 + 2;
  if (v10 + 2 >= v8)
    goto LABEL_33;
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
    goto LABEL_18;
  v15 = v10 + 3;
  if (v10 + 3 >= v8)
    goto LABEL_33;
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
    goto LABEL_18;
  v15 = v10 + 4;
  if (v10 + 4 >= v8)
  {
LABEL_33:
    swift_release();
    return v23;
  }
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1D5E26C30(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  int v26;
  char v27;
  int v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  int v49;
  char v50;
  int v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t *);

  v58 = a2;
  v39 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v40 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = MEMORY[0x1E0DEE9D8];
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v7 << 6);
LABEL_22:
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    v17 = *(_QWORD *)(a1 + 56) + 80 * v10;
    v18 = *(_QWORD *)v17;
    v19 = *(_BYTE *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(_BYTE *)(v17 + 24);
    v22 = *(_QWORD *)(v17 + 32);
    v23 = *(_BYTE *)(v17 + 40);
    v24 = *(_QWORD *)(v17 + 48);
    v25 = *(_BYTE *)(v17 + 56);
    v26 = *(_DWORD *)(v17 + 60);
    v27 = *(_BYTE *)(v17 + 64);
    v28 = *(_DWORD *)(v17 + 68);
    v29 = *(_BYTE *)(v17 + 72);
    v30 = *(_BYTE *)(v17 + 73);
    v31 = *(_BYTE *)(v17 + 74);
    v32 = *(_BYTE *)(v17 + 75);
    v33 = *(_BYTE *)(v17 + 76);
    LOBYTE(v17) = *(_BYTE *)(v17 + 77);
    v41 = v18;
    v42 = v19;
    v43 = v20;
    v44 = v21;
    v45 = v22;
    v46 = v23;
    v47 = v24;
    v48 = v25;
    v49 = v26;
    v50 = v27;
    v51 = v28;
    v52 = v29;
    v53 = v30;
    v54 = v31;
    v55 = v32;
    v56 = v33;
    v57 = v17;
    swift_bridgeObjectRetain();
    v34 = v58(v15, v16, &v41);
    v36 = v35;
    result = swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1D5DAB80C(0, *(_QWORD *)(v8 + 16) + 1, 1, (char *)v8);
        v8 = result;
      }
      v38 = *(_QWORD *)(v8 + 16);
      v37 = *(_QWORD *)(v8 + 24);
      if (v38 >= v37 >> 1)
      {
        result = (uint64_t)sub_1D5DAB80C((char *)(v37 > 1), v38 + 1, 1, (char *)v8);
        v8 = result;
      }
      *(_QWORD *)(v8 + 16) = v38 + 1;
      *(_QWORD *)(v8 + 8 * v38 + 32) = v34;
    }
  }
  v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v11 >= v40)
    goto LABEL_28;
  v12 = *(_QWORD *)(v39 + 8 * v11);
  ++v7;
  if (v12)
    goto LABEL_21;
  v7 = v11 + 1;
  if (v11 + 1 >= v40)
    goto LABEL_28;
  v12 = *(_QWORD *)(v39 + 8 * v7);
  if (v12)
    goto LABEL_21;
  v7 = v11 + 2;
  if (v11 + 2 >= v40)
    goto LABEL_28;
  v12 = *(_QWORD *)(v39 + 8 * v7);
  if (v12)
    goto LABEL_21;
  v7 = v11 + 3;
  if (v11 + 3 >= v40)
    goto LABEL_28;
  v12 = *(_QWORD *)(v39 + 8 * v7);
  if (v12)
  {
LABEL_21:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 4;
  if (v13 >= v40)
  {
LABEL_28:
    swift_release();
    return v8;
  }
  v12 = *(_QWORD *)(v39 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v40)
      goto LABEL_28;
    v12 = *(_QWORD *)(v39 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

char *sub_1D5E26F18(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  uint64_t v2;
  unsigned int *v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (char *)MEMORY[0x1E0DEE9D8];
  v4 = (unsigned int *)(swift_bridgeObjectRetain() + 36);
  v5 = (char *)MEMORY[0x1E0DEE9D8];
  do
  {
    v6 = a2(*(v4 - 1), *v4);
    if ((v7 & 1) == 0)
    {
      v8 = v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1D5DAB714(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
      v10 = *((_QWORD *)v5 + 2);
      v9 = *((_QWORD *)v5 + 3);
      if (v10 >= v9 >> 1)
        v5 = sub_1D5DAB714((char *)(v9 > 1), v10 + 1, 1, v5);
      *((_QWORD *)v5 + 2) = v10 + 1;
      *(_QWORD *)&v5[8 * v10 + 32] = v8;
    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D5E2701C()
{
  return swift_release();
}

uint64_t sub_1D5E27024(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D5E21040(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1D5E2703C(_QWORD *a1, uint64_t a2, _QWORD *a3, unint64_t a4, uint64_t a5, const void *a6, uint64_t a7, uint64_t a8, double a9, double a10, float a11, double a12, double a13, double a14, double a15, double a16, double a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  double v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  unint64_t v74;
  uint64_t v75;
  const void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  BOOL v82;
  _QWORD v83[3];
  double v84[2];

  v81 = a1;
  v77 = a7;
  v78 = a8;
  v75 = a5;
  v76 = a6;
  v73 = a3;
  v74 = a4;
  v32 = type metadata accessor for ClassicArticleData();
  MEMORY[0x1E0C80A78](v32, v33);
  v80 = (uint64_t)&v65 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83[2] = a19;
  v84[0] = a17;
  LOBYTE(v83[0]) = a18;
  *(double *)&v83[1] = a9;
  v35 = *(_QWORD *)(a2 + 8);
  v36 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a25 + 16))
  {
    swift_bridgeObjectRetain();
    v37 = sub_1D5D7FFCC(v35, v36);
    if ((v38 & 1) != 0)
    {
      v72 = *(_QWORD *)(*(_QWORD *)(a25 + 56) + 8 * v37);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  v72 = sub_1D5DC6598(MEMORY[0x1E0DEE9D8]);
LABEL_6:
  v71 = *(_QWORD *)(a27 + 16);
  if (v71)
  {
    swift_bridgeObjectRetain();
    v40 = sub_1D5D7FFCC(v35, v36);
    if ((v41 & 1) != 0)
      a11 = *(float *)(*(_QWORD *)(a27 + 56) + 4 * v40);
    swift_bridgeObjectRelease();
    v70 = LODWORD(a11);
  }
  else
  {
    v70 = 0;
  }
  if (*(_QWORD *)(a28 + 16))
  {
    swift_bridgeObjectRetain();
    v42 = sub_1D5D7FFCC(v35, v36);
    if ((v43 & 1) != 0)
      v69 = *(_QWORD *)(*(_QWORD *)(a28 + 56) + 8 * v42);
    else
      v69 = 0;
    v68 = v43 ^ 1;
    swift_bridgeObjectRelease();
  }
  else
  {
    v69 = 0;
    v68 = 1;
  }
  v44 = *(_QWORD *)(a30 + 16);
  v79 = a2;
  if (v44)
  {
    v45 = (uint64_t *)(a2 + *(int *)(v32 + 56));
    v46 = *v45;
    v47 = v45[1];
    swift_bridgeObjectRetain();
    v48 = sub_1D5D7FFCC(v46, v47);
    v49 = 1.0;
    if ((v50 & 1) != 0)
      v49 = *(double *)(*(_QWORD *)(a30 + 56) + 8 * v48);
    v51 = v35;
    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = v35;
    v49 = 1.0;
  }
  v52 = a23;
  v53 = a24;
  v54 = a21;
  v55 = a20;
  if (*(_QWORD *)(a31 + 16))
  {
    v65 = a24;
    v66 = a20;
    v67 = a21;
    swift_bridgeObjectRetain();
    v56 = sub_1D5D7FFCC(v51, v36);
    if ((v57 & 1) != 0)
    {
      v58 = *(_QWORD *)(*(_QWORD *)(a31 + 56) + 8 * v56);
      swift_retain();
    }
    else
    {
      v58 = 0;
    }
    swift_bridgeObjectRelease();
    v52 = a23;
    v54 = v67;
    v55 = v66;
    v53 = v65;
  }
  else
  {
    v58 = 0;
  }
  v82 = v71 == 0;
  v59 = v79;
  v60 = sub_1D5E2121C(v73, v74, v79, a10, v49, v39, v75, v76, v77, v78, v84, (unsigned __int8 *)v83, v55, v54, a22, v52, v53, v72, a26 & 1,
          v70 | ((unint64_t)(v71 == 0) << 32),
          v69,
          v68 & 1,
          a29,
          v58,
          a32,
          a33);
  swift_bridgeObjectRelease();
  swift_release();
  v61 = v80;
  sub_1D5D819C0(v59, v80);
  swift_retain();
  v62 = v81;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v83[0] = *v62;
  *v62 = 0x8000000000000000;
  sub_1D5D7CCC8(v60, v61, isUniquelyReferenced_nonNull_native);
  *v62 = v83[0];
  swift_bridgeObjectRelease();
  sub_1D5D7D008(v61);
  return swift_release();
}

uint64_t _s20UserCohortMembershipVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s20UserCohortMembershipVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_1D5E27454()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t _s17HeadlineEvaluatorVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s17HeadlineEvaluatorVMn);
}

uint64_t sub_1D5E27468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1D5E24910(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1D5E27480(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D5E24998(a1, a2, *(unsigned __int8 *)(v2 + 16), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1D5E274A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D5E274DC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1D5E274F4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D5E27518(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1D5E239AC(a1, a2, *(_QWORD **)(v2 + 32), *(Swift::Double *)(v2 + 40), *(double *)(v2 + 48), *(double *)(v2 + 56));
}

uint64_t sub_1D5E2753C(_QWORD *a1, uint64_t *a2)
{
  uint64_t *v2;

  return sub_1D5E23738(a1, a2, v2[4], v2[2], v2[3]);
}

uint64_t sub_1D5E27560()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_1D5E3756C();
  MEMORY[0x1D827D8E0](MEMORY[0x1E0DEAF38], v0);
  sub_1D5E3747C();
  return v2;
}

uint64_t sub_1D5E275EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;

  v5 = *a1;
  result = (*(uint64_t (**)(uint64_t))(v3 + 24))(a2);
  if (__OFADD__(v5, result & 1))
    __break(1u);
  else
    *a3 = v5 + (result & 1);
  return result;
}

uint64_t sub_1D5E2763C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D5E27644(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(double *)(v1 + 128) = a1;
  return result;
}

uint64_t (*sub_1D5E27680())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_1;
}

double sub_1D5E276BC()
{
  uint64_t v0;

  return *(double *)(v0 + 296);
}

uint64_t sub_1D5E276C4(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(double *)(v1 + 304) = a1;
  return result;
}

uint64_t (*sub_1D5E27700())()
{
  swift_beginAccess();
  return j__swift_endAccess_1;
}

double sub_1D5E27740()
{
  uint64_t v0;

  return *(double *)(v0 + 432);
}

uint64_t sub_1D5E27748()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 440);
}

uint64_t sub_1D5E27758(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D5E27798 + 4 * word_1D5E45080[a1]))(0x43656C6369747261, 0xEE007374726F686FLL);
}

uint64_t sub_1D5E27798()
{
  return 0x6C754D6F69647561;
}

unint64_t sub_1D5E277BC()
{
  return 0xD000000000000012;
}

BOOL sub_1D5E27CC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D5E27CDC()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

uint64_t sub_1D5E27D20()
{
  return sub_1D5E379B0();
}

uint64_t sub_1D5E27D48()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

uint64_t sub_1D5E27D88()
{
  unsigned __int8 *v0;

  return sub_1D5E27758(*v0);
}

uint64_t sub_1D5E27D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5E29AF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5E27DB4()
{
  return 0;
}

void sub_1D5E27DC0(_BYTE *a1@<X8>)
{
  *a1 = 54;
}

uint64_t sub_1D5E27DCC()
{
  sub_1D5E28878();
  return sub_1D5E37A04();
}

uint64_t sub_1D5E27DF4()
{
  sub_1D5E28878();
  return sub_1D5E37A10();
}

uint64_t sub_1D5E27E1C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB8C70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E28878();
  sub_1D5E379F8();
  v15 = *(_QWORD *)(v3 + 16);
  LOBYTE(v14) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB5540);
  sub_1D5E2973C(&qword_1EFFB5538, (uint64_t (*)(void))sub_1D5DA6C3C, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
  sub_1D5E3789C();
  if (!v2)
  {
    LOBYTE(v15) = 1;
    sub_1D5E37884();
    LOBYTE(v15) = 2;
    sub_1D5E37884();
    LOBYTE(v15) = 3;
    sub_1D5E37884();
    LOBYTE(v15) = 4;
    sub_1D5E37884();
    LOBYTE(v15) = 5;
    sub_1D5E37884();
    LOBYTE(v15) = 6;
    sub_1D5E37884();
    v15 = *(_QWORD *)(v3 + 72);
    LOBYTE(v14) = 7;
    sub_1D5E3789C();
    LOBYTE(v15) = 8;
    sub_1D5E37884();
    LOBYTE(v15) = 9;
    sub_1D5E37884();
    LOBYTE(v15) = 10;
    sub_1D5E37884();
    LOBYTE(v15) = 11;
    sub_1D5E37884();
    LOBYTE(v15) = 12;
    sub_1D5E37884();
    LOBYTE(v15) = 13;
    sub_1D5E37884();
    swift_beginAccess();
    LOBYTE(v14) = 14;
    sub_1D5E37884();
    LOBYTE(v14) = 15;
    sub_1D5E37884();
    LOBYTE(v14) = 16;
    sub_1D5E37884();
    LOBYTE(v14) = 17;
    sub_1D5E37884();
    LOBYTE(v14) = 18;
    sub_1D5E37884();
    v14 = *(_QWORD *)(v3 + 168);
    LOBYTE(v13) = 19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AD908);
    sub_1D5E297B0(&qword_1EFFB5D08, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB080], MEMORY[0x1E0DEA0B8]);
    sub_1D5E3789C();
    v14 = *(_QWORD *)(v3 + 176);
    LOBYTE(v13) = 20;
    sub_1D5E3789C();
    LOBYTE(v14) = 21;
    sub_1D5E37884();
    LOBYTE(v14) = 22;
    sub_1D5E37884();
    LOBYTE(v14) = 23;
    sub_1D5E37884();
    LOBYTE(v14) = 24;
    sub_1D5E37884();
    LOBYTE(v14) = 25;
    sub_1D5E37884();
    LOBYTE(v14) = 26;
    sub_1D5E37884();
    LOBYTE(v14) = 27;
    sub_1D5E37884();
    LOBYTE(v14) = 28;
    sub_1D5E37884();
    LOBYTE(v14) = 29;
    sub_1D5E37884();
    LOBYTE(v14) = 30;
    sub_1D5E37884();
    LOBYTE(v14) = 31;
    sub_1D5E37884();
    LOBYTE(v14) = 32;
    sub_1D5E37884();
    LOBYTE(v14) = 33;
    sub_1D5E37884();
    LOBYTE(v14) = 34;
    sub_1D5E37884();
    LOBYTE(v14) = 35;
    sub_1D5E37884();
    swift_beginAccess();
    LOBYTE(v13) = 36;
    sub_1D5E37884();
    v13 = *(_QWORD *)(v3 + 312);
    BYTE4(v12) = 37;
    sub_1D5E3789C();
    v13 = *(_QWORD *)(v3 + 320);
    BYTE4(v12) = 38;
    sub_1D5E3789C();
    v13 = *(_QWORD *)(v3 + 328);
    BYTE4(v12) = 39;
    sub_1D5E3789C();
    v10 = *(_BYTE *)(v3 + 340);
    LOBYTE(v13) = 40;
    BYTE4(v12) = v10;
    sub_1D5E37830();
    LOBYTE(v13) = 41;
    sub_1D5E37884();
    LOBYTE(v13) = 42;
    sub_1D5E37824();
    LOBYTE(v13) = 43;
    sub_1D5E37884();
    LOBYTE(v13) = 44;
    sub_1D5E37884();
    LOBYTE(v13) = 45;
    sub_1D5E37884();
    LOBYTE(v13) = 46;
    sub_1D5E37884();
    LOBYTE(v13) = 47;
    sub_1D5E37884();
    LOBYTE(v13) = 48;
    sub_1D5E37884();
    LOBYTE(v13) = 49;
    sub_1D5E37884();
    LOBYTE(v13) = 50;
    sub_1D5E37884();
    LOBYTE(v13) = 51;
    sub_1D5E37884();
    LOBYTE(v13) = 52;
    sub_1D5E37824();
    LOBYTE(v13) = 53;
    sub_1D5E37824();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_1D5E28878()
{
  unint64_t result;

  result = qword_1EFFB8C78;
  if (!qword_1EFFB8C78)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E454BC, &_s20HeadlineScoreProfileC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8C78);
  }
  return result;
}

uint64_t sub_1D5E288BC(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1D5E28908(a1);
  return v2;
}

uint64_t *sub_1D5E28908(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;

  v3 = v1;
  v60 = *v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB8C80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E28878();
  sub_1D5E379E0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB5540);
    v61 = 0;
    sub_1D5E2973C(&qword_1EFFB5588, (uint64_t (*)(void))sub_1D5DA7A24, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    sub_1D5E377D0();
    v1[2] = v62;
    LOBYTE(v62) = 1;
    sub_1D5E377B8();
    v1[3] = v11;
    LOBYTE(v62) = 2;
    sub_1D5E377B8();
    v1[4] = v12;
    LOBYTE(v62) = 3;
    sub_1D5E377B8();
    v1[5] = v13;
    LOBYTE(v62) = 4;
    sub_1D5E377B8();
    v1[6] = v14;
    LOBYTE(v62) = 5;
    sub_1D5E377B8();
    v1[7] = v15;
    LOBYTE(v62) = 6;
    sub_1D5E377B8();
    v1[8] = v16;
    v61 = 7;
    sub_1D5E377D0();
    v1[9] = v62;
    LOBYTE(v62) = 8;
    sub_1D5E377B8();
    v1[10] = v17;
    LOBYTE(v62) = 9;
    sub_1D5E377B8();
    v1[11] = v18;
    LOBYTE(v62) = 10;
    sub_1D5E377B8();
    v1[12] = v19;
    LOBYTE(v62) = 11;
    sub_1D5E377B8();
    v1[13] = v20;
    LOBYTE(v62) = 12;
    sub_1D5E377B8();
    v1[14] = v21;
    LOBYTE(v62) = 13;
    sub_1D5E377B8();
    v1[15] = v22;
    LOBYTE(v62) = 14;
    sub_1D5E377B8();
    v1[16] = v23;
    LOBYTE(v62) = 15;
    sub_1D5E377B8();
    v1[17] = v24;
    LOBYTE(v62) = 16;
    sub_1D5E377B8();
    v1[18] = v25;
    LOBYTE(v62) = 17;
    sub_1D5E377B8();
    v1[19] = v26;
    LOBYTE(v62) = 18;
    sub_1D5E377B8();
    v1[20] = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AD908);
    v61 = 19;
    sub_1D5E297B0(&qword_1EFFB5D20, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEA0D8]);
    sub_1D5E377D0();
    v1[21] = v62;
    v61 = 20;
    sub_1D5E377D0();
    v1[22] = v62;
    LOBYTE(v62) = 21;
    sub_1D5E377B8();
    v1[23] = v28;
    LOBYTE(v62) = 22;
    sub_1D5E377B8();
    v1[24] = v29;
    LOBYTE(v62) = 23;
    sub_1D5E377B8();
    v1[25] = v30;
    LOBYTE(v62) = 24;
    sub_1D5E377B8();
    v1[26] = v31;
    LOBYTE(v62) = 25;
    sub_1D5E377B8();
    v1[27] = v32;
    LOBYTE(v62) = 26;
    sub_1D5E377B8();
    v1[28] = v33;
    LOBYTE(v62) = 27;
    sub_1D5E377B8();
    v1[29] = v34;
    LOBYTE(v62) = 28;
    sub_1D5E377B8();
    v1[30] = v35;
    LOBYTE(v62) = 29;
    sub_1D5E377B8();
    v1[31] = v36;
    LOBYTE(v62) = 30;
    sub_1D5E377B8();
    v1[32] = v37;
    LOBYTE(v62) = 31;
    sub_1D5E377B8();
    v1[33] = v38;
    LOBYTE(v62) = 32;
    sub_1D5E377B8();
    v1[34] = v39;
    LOBYTE(v62) = 33;
    sub_1D5E377B8();
    v1[35] = v40;
    LOBYTE(v62) = 34;
    sub_1D5E377B8();
    v1[36] = v41;
    LOBYTE(v62) = 35;
    sub_1D5E377B8();
    v1[37] = v42;
    LOBYTE(v62) = 36;
    sub_1D5E377B8();
    v1[38] = v43;
    v61 = 37;
    sub_1D5E377D0();
    v1[39] = v62;
    v61 = 38;
    sub_1D5E377D0();
    v1[40] = v62;
    v61 = 39;
    sub_1D5E377D0();
    v1[41] = v62;
    LOBYTE(v62) = 40;
    v44 = sub_1D5E37764();
    *((_DWORD *)v1 + 84) = v44;
    *((_BYTE *)v1 + 340) = BYTE4(v44) & 1;
    LOBYTE(v62) = 41;
    sub_1D5E377B8();
    v1[43] = v45;
    LOBYTE(v62) = 42;
    v1[44] = sub_1D5E37758();
    *((_BYTE *)v1 + 360) = v46 & 1;
    LOBYTE(v62) = 43;
    sub_1D5E377B8();
    v1[46] = v47;
    LOBYTE(v62) = 44;
    sub_1D5E377B8();
    v1[47] = v48;
    LOBYTE(v62) = 45;
    sub_1D5E377B8();
    v1[48] = v49;
    LOBYTE(v62) = 46;
    sub_1D5E377B8();
    v1[49] = v50;
    LOBYTE(v62) = 47;
    sub_1D5E377B8();
    v1[50] = v51;
    LOBYTE(v62) = 48;
    sub_1D5E377B8();
    v1[51] = v52;
    LOBYTE(v62) = 49;
    sub_1D5E377B8();
    v1[52] = v53;
    LOBYTE(v62) = 50;
    sub_1D5E377B8();
    v1[53] = v54;
    LOBYTE(v62) = 51;
    sub_1D5E377B8();
    v1[54] = v55;
    LOBYTE(v62) = 52;
    v1[55] = sub_1D5E37758();
    *((_BYTE *)v1 + 448) = v56 & 1;
    LOBYTE(v62) = 53;
    v57 = sub_1D5E37758();
    v59 = v58;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v3[57] = v57;
    *((_BYTE *)v3 + 464) = v59 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1D5E2973C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFFB5540);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x1D827D8E0](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D5E297B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED9AD908);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x1D827D8E0](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1D5E29814@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *result;

  v5 = swift_allocObject();
  result = sub_1D5E28908(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1D5E29868(_QWORD *a1)
{
  return sub_1D5E27E1C(a1);
}

uint64_t sub_1D5E29888()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D5E29894()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 520))();
}

uint64_t _s20HeadlineScoreProfileC10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xCB)
    goto LABEL_17;
  if (a2 + 53 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 53) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 53;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 53;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 53;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x36;
  v8 = v6 - 54;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s20HeadlineScoreProfileC10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 53 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 53) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xCB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xCA)
    return ((uint64_t (*)(void))((char *)&loc_1D5E29988 + 4 * byte_1D5E450F1[v4]))();
  *a1 = a2 + 53;
  return ((uint64_t (*)(void))((char *)sub_1D5E299BC + 4 * byte_1D5E450EC[v4]))();
}

uint64_t sub_1D5E299BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E299C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5E299CCLL);
  return result;
}

uint64_t sub_1D5E299D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5E299E0);
  *(_BYTE *)result = a2 + 53;
  return result;
}

uint64_t sub_1D5E299E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E299EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E299F8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D5E29A04(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s20HeadlineScoreProfileC10CodingKeysOMa()
{
  return &_s20HeadlineScoreProfileC10CodingKeysON;
}

unint64_t sub_1D5E29A20()
{
  unint64_t result;

  result = qword_1EFFB8C88;
  if (!qword_1EFFB8C88)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E45494, &_s20HeadlineScoreProfileC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8C88);
  }
  return result;
}

unint64_t sub_1D5E29A68()
{
  unint64_t result;

  result = qword_1EFFB8C90;
  if (!qword_1EFFB8C90)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E45404, &_s20HeadlineScoreProfileC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8C90);
  }
  return result;
}

unint64_t sub_1D5E29AB0()
{
  unint64_t result;

  result = qword_1EFFB8C98;
  if (!qword_1EFFB8C98)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E4542C, &_s20HeadlineScoreProfileC10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8C98);
  }
  return result;
}

uint64_t sub_1D5E29AF4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x43656C6369747261 && a2 == 0xEE007374726F686FLL;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C754D6F69647561 && a2 == 0xEF7265696C706974 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E4C350 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4AEA0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4AEC0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6353746E65696C63 && a2 == 0xEB0000000065726FLL || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4AEE0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5E4C380 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4C3A0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x69737265766E6F63 && a2 == 0xEF65726F63536E6FLL || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5E4C3D0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5E4AAB0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5E4AF00 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E4AF20 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5E4A890 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5E4C3F0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E4C410 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5E4A8F0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5E4C430 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E4C450 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D5E4C470 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5E475D0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4C490 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4C4B0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x616E655064616572 && a2 == 0xEB0000000079746CLL || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x64656E657473696CLL && a2 == 0xEF79746C616E6550 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x616E65506E656573 && a2 == 0xEB0000000079746CLL || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x6353726576726573 && a2 == 0xEB0000000065726FLL || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x6576726553776172 && a2 == 0xEE0065726F635372 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5E4C510 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5E4AAE0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5E4C530 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5E4C550 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4C570 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5E4C590 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5E4C5B0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D5E4C5D0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4C5F0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0x6867696557676174 && a2 == 0xEE00444979427374 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D5E4C620 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0x6E69646465626D65 && a2 == 0xEE0065726F635367 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D5E4C650 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0x726F635369626174 && a2 == 0xE900000000000065 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4C670 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D5E4A560 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 44;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5E4A500 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 45;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5E4A5A0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 46;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D5E4AB30 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 47;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D5E4AB00 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4ABF0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 49;
  }
  else if (a1 == 0x696C7069746C756DLL && a2 == 0xEA00000000007265 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 50;
  }
  else if (a1 == 0x72656E65706D6164 && a2 == 0xE800000000000000 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 51;
  }
  else if (a1 == 0x6154776F64616873 && a2 == 0xEF65726F63536962 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 52;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5E4C6C0)
  {
    swift_bridgeObjectRelease();
    return 53;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 53;
    else
      return 54;
  }
}

uint64_t ClassicEventData.articleData.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ClassicEventData.groupBackingTagID.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_1D5E2B9E4(a1);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClassicEventData.init(articleData:groupType:groupBackingTagID:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  v12 = *a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7, a1, a5);
  result = type metadata accessor for ClassicEventData(0, a5, a6, v13);
  *(_BYTE *)(a7 + *(int *)(result + 36)) = v12;
  v15 = (_QWORD *)(a7 + *(int *)(result + 40));
  *v15 = a3;
  v15[1] = a4;
  return result;
}

uint64_t sub_1D5E2AFE0()
{
  unint64_t v0;

  v0 = sub_1D5E3771C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1D5E2B02C(char a1)
{
  if (!a1)
    return 0x44656C6369747261;
  if (a1 == 1)
    return 0x70795470756F7267;
  return 0xD000000000000011;
}

uint64_t sub_1D5E2B094(char a1)
{
  if (!a1)
    return 0x44656C6369747261;
  if (a1 == 1)
    return 0x70795470756F7267;
  return 0xD000000000000011;
}

uint64_t sub_1D5E2B0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D827D8E0](&unk_1D5E45708, a3);
  return sub_1D5E37938();
}

uint64_t sub_1D5E2B150(uint64_t a1)
{
  MEMORY[0x1D827D8E0](&unk_1D5E45708, a1);
  return sub_1D5E374B8();
}

uint64_t sub_1D5E2B19C()
{
  MEMORY[0x1D827D8E0](&unk_1D5E45708);
  return sub_1D5E374D0();
}

uint64_t sub_1D5E2B1EC()
{
  MEMORY[0x1D827D8E0](&unk_1D5E45708);
  return sub_1D5E374C4();
}

uint64_t sub_1D5E2B23C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D5E2AFE0();
  *a1 = result;
  return result;
}

uint64_t sub_1D5E2B270@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1D5E2B02C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D5E2B29C()
{
  char *v0;

  return sub_1D5E2B094(*v0);
}

uint64_t sub_1D5E2B2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_1D5E2B028(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_1D5E2B2D4()
{
  return 0;
}

uint64_t sub_1D5E2B2E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D5E2C24C();
  *a1 = result;
  return result;
}

uint64_t sub_1D5E2B308(uint64_t a1)
{
  MEMORY[0x1D827D8E0](&unk_1D5E457A8, a1);
  return sub_1D5E37A04();
}

uint64_t sub_1D5E2B33C(uint64_t a1)
{
  MEMORY[0x1D827D8E0](&unk_1D5E457A8, a1);
  return sub_1D5E37A10();
}

uint64_t ClassicEventData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  unsigned __int8 v36;
  char v37;

  v29 = a3;
  v30 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v7;
  v10 = type metadata accessor for ClassicEventData.CodingKeys(255, v8, v7, v9);
  MEMORY[0x1D827D8E0](&unk_1D5E457A8, v10);
  v32 = sub_1D5E377F4();
  v11 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32, v12);
  v14 = (char *)&v28 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = v33;
  sub_1D5E379E0();
  if (!v15)
  {
    v16 = v11;
    v17 = v30;
    v37 = 0;
    sub_1D5E377D0();
    v35 = 1;
    sub_1D5E2BA0C();
    sub_1D5E377D0();
    v18 = v6;
    LODWORD(v33) = v36;
    v34 = 2;
    v19 = v17;
    v21 = sub_1D5E37740();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v32);
    v24 = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v29, v18, a2);
    v26 = type metadata accessor for ClassicEventData(0, a2, v31, v25);
    *(_BYTE *)(v24 + *(int *)(v26 + 36)) = v33;
    v27 = (uint64_t *)(v24 + *(int *)(v26 + 40));
    *v27 = v21;
    v27[1] = v23;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t ClassicEventData.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v15[0] = a2;
  v5 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for ClassicEventData.CodingKeys(255, v16, v5, a4);
  MEMORY[0x1D827D8E0](&unk_1D5E457A8, v6);
  v7 = sub_1D5E378B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)v15 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = v15[1];
  sub_1D5E379F8();
  v21 = 0;
  v13 = v17;
  sub_1D5E3789C();
  if (!v13)
  {
    v20 = *(_BYTE *)(v12 + *(int *)(v15[0] + 36));
    v19 = 1;
    sub_1D5E2BA50();
    sub_1D5E3789C();
    v18 = 2;
    sub_1D5E3780C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1D5E2B76C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ClassicEventData.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

uint64_t sub_1D5E2B788(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ClassicEventData.encode(to:)(a1, a2, a3, a4);
}

uint64_t ClassicEventData.isAudio.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 80))(*(_QWORD *)(a1 + 16));
}

uint64_t ClassicEventData.isEvergreen.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 88))(*(_QWORD *)(a1 + 16));
}

uint64_t ClassicEventData.featured.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 96))(*(_QWORD *)(a1 + 16));
}

uint64_t ClassicEventData.isFeatureCandidate.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 104))(*(_QWORD *)(a1 + 16));
}

uint64_t ClassicEventData.adCategories.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 24))(*(_QWORD *)(a1 + 16));
}

uint64_t ClassicEventData.articleID.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 32))(*(_QWORD *)(a1 + 16));
}

uint64_t ClassicEventData.articleLength.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 40))(*(_QWORD *)(a1 + 16));
}

uint64_t ClassicEventData.hasVideo.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 48))(*(_QWORD *)(a1 + 16));
}

uint64_t ClassicEventData.isANF.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 56))(*(_QWORD *)(a1 + 16));
}

uint64_t ClassicEventData.isPaid.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 64))(*(_QWORD *)(a1 + 16));
}

uint64_t ClassicEventData.isBundlePaid.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 72))(*(_QWORD *)(a1 + 16));
}

uint64_t ClassicEventData.publisherID.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 112))(*(_QWORD *)(a1 + 16));
}

uint64_t ClassicEventData.topicIDs.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 120))(*(_QWORD *)(a1 + 16));
}

void ClassicEventData.viewAction.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t ClassicEventData.group.getter@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 36));
  return result;
}

uint64_t sub_1D5E2B86C(uint64_t a1)
{
  return ClassicEventData.articleLength.getter(a1);
}

void sub_1D5E2B8B0(_BYTE *a1@<X8>)
{
  ClassicEventData.viewAction.getter(a1);
}

void sub_1D5E2B8C4(_BYTE *a1@<X8>)
{
  ClassicEventData.viewAction.getter(a1);
}

uint64_t sub_1D5E2B8D8(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_1D5E2B9E4(a1);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClassicEventData.debugDescription.getter(uint64_t a1)
{
  uint64_t v1;
  __int128 v4;

  BYTE8(v4) = 0;
  sub_1D5E37650();
  sub_1D5E37458();
  sub_1D5E378E4();
  sub_1D5E37458();
  *(_QWORD *)&v4 = *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
  sub_1D5E376B0();
  return *(_QWORD *)((char *)&v4 + 1);
}

uint64_t sub_1D5E2B9E4(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 40));
}

uint64_t type metadata accessor for ClassicEventData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ClassicEventData);
}

uint64_t type metadata accessor for ClassicEventData.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ClassicEventData.CodingKeys);
}

unint64_t sub_1D5E2BA0C()
{
  unint64_t result;

  result = qword_1EFFB8CA0;
  if (!qword_1EFFB8CA0)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E388D8, &_s9GroupTypeON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8CA0);
  }
  return result;
}

unint64_t sub_1D5E2BA50()
{
  unint64_t result;

  result = qword_1EFFB8CA8;
  if (!qword_1EFFB8CA8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E38900, &_s9GroupTypeON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8CA8);
  }
  return result;
}

uint64_t sub_1D5E2BA94(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_1D5E2BAA4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x1D827D8E0](&protocol conformance descriptor for ClassicEventData<A>);
  result = MEMORY[0x1D827D8E0](&protocol conformance descriptor for ClassicEventData<A>, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t dispatch thunk of ClassicEventDataType.articleData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ClassicEventDataType.groupType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1D5E2BAF8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D5E2BB00()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1D5E2BB80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) != 0 && (v6 & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFE8)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
    v10 = ((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
    *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1D5E2BC38(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5E2BC74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D5E2BCE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5E2BD58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  *(_OWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_1D5E2BDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5E2BE28(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFE)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFE)
    {
      v12 = *(_QWORD *)(((v7 + a1) & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      if ((v12 + 1) >= 2)
        return v12;
      else
        return 0;
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if ((((v7 & 0xFFFFFFFFFFFFFFF8) + 24) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D5E2BEA0 + 4 * byte_1D5E45510[v10]))();
  }
}

void sub_1D5E2BF28(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if ((*(_DWORD *)(v5 + 64) & 0xFFFFFFF8) == 0xFFFFFFE8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if ((*(_DWORD *)(v5 + 64) & 0xFFFFFFF8) != 0xFFFFFFE8)
  {
    v10 = ~v6 + a2;
    bzero(a1, (*(_QWORD *)(v5 + 64) & 0xFFFFFFFFFFFFFFF8) + 24);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1D5E2C018()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1D5E2C09CLL);
}

void sub_1D5E2C020(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1D5E2C028);
  JUMPOUT(0x1D5E2C09CLL);
}

void sub_1D5E2C070()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1D5E2C09CLL);
}

void sub_1D5E2C078()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1D5E2C09CLL);
}

uint64_t sub_1D5E2C080(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFE)
  {
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x1D5E2C08CLL);
    *(_QWORD *)(((v5 + v6) & 0xFFFFFFFFFFFFFFF8) + 16) = a2;
LABEL_6:
    JUMPOUT(0x1D5E2C09CLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_1D5E2C0B4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D5E2C0BC(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1D5E2C14C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5E2C198 + 4 * byte_1D5E45524[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5E2C1CC + 4 * byte_1D5E4551F[v4]))();
}

uint64_t sub_1D5E2C1CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E2C1D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5E2C1DCLL);
  return result;
}

uint64_t sub_1D5E2C1E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5E2C1F0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5E2C1F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E2C1FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E2C208(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D5E2C214(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void sub_1D5E2C21C()
{
  JUMPOUT(0x1D827D8E0);
}

void sub_1D5E2C22C()
{
  JUMPOUT(0x1D827D8E0);
}

void sub_1D5E2C23C()
{
  JUMPOUT(0x1D827D8E0);
}

uint64_t sub_1D5E2C24C()
{
  return 3;
}

uint64_t sub_1D5E2C25C(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1D5D7FE54(0, v5, 0);
    v6 = v17;
    v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v10 = *v9;
      v15[0] = *(v9 - 1);
      v15[1] = v10;
      swift_bridgeObjectRetain();
      a1(&v16, v15);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease();
      v11 = v16;
      v17 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1D5D7FE54((_QWORD *)(v12 > 1), v13 + 1, 1);
        v6 = v17;
      }
      v9 += 2;
      *(_QWORD *)(v6 + 16) = v13 + 1;
      *(_QWORD *)(v6 + 8 * v13 + 32) = v11;
      if (!--v5)
        return v6;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1D5E2C380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1D5E37458();
  *(_QWORD *)a3 = 2831206;
  *(_QWORD *)(a3 + 8) = 0xE300000000000000;
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  *(_BYTE *)(a3 + 48) = 4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D5E2C3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_1D5E37458();
  sub_1D5E37458();
  sub_1D5E37458();
  *(_QWORD *)a5 = 2831462;
  *(_QWORD *)(a5 + 8) = 0xE300000000000000;
  *(_QWORD *)(a5 + 16) = a1;
  *(_QWORD *)(a5 + 24) = a2;
  *(_QWORD *)(a5 + 32) = a3;
  *(_QWORD *)(a5 + 40) = a4;
  *(_BYTE *)(a5 + 48) = 3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL sub_1D5E2C488(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D5E2C49C()
{
  return sub_1D5E379B0();
}

uint64_t sub_1D5E2C4C4()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

BOOL sub_1D5E2C508(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D5E2C51C()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

uint64_t sub_1D5E2C560()
{
  return sub_1D5E379B0();
}

uint64_t sub_1D5E2C588()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

double sub_1D5E2C5C8@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 12646;
  *(_OWORD *)a1 = xmmword_1D5E44FF0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

double sub_1D5E2C5E4@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 12902;
  *(_OWORD *)a1 = xmmword_1D5E45000;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

double sub_1D5E2C600@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 13926;
  *(_OWORD *)a1 = xmmword_1D5E45810;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

double sub_1D5E2C61C@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 14182;
  *(_OWORD *)a1 = xmmword_1D5E45010;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

double sub_1D5E2C638@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 0x732B306166;
  *(_OWORD *)a1 = xmmword_1D5E44FC0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

double sub_1D5E2C654@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 0x6D2B306166;
  *(_OWORD *)a1 = xmmword_1D5E44FD0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

double sub_1D5E2C670@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 0x6C2B306166;
  *(_OWORD *)a1 = xmmword_1D5E44FE0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

double sub_1D5E2C68C@<D0>(uint64_t a1@<X8>)
{
  double result;

  sub_1D5E37458();
  *(_QWORD *)a1 = 724656486;
  *(_QWORD *)(a1 + 8) = 0xE400000000000000;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 48) = 1;
  return result;
}

double sub_1D5E2C6E0@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)a2 = *(_QWORD *)&aFa0S[8 * *a1];
  *(_QWORD *)(a2 + 8) = 0xE500000000000000;
  result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_BYTE *)(a2 + 48) = 0;
  return result;
}

double sub_1D5E2C708@<D0>(uint64_t a1@<X8>)
{
  double result;

  sub_1D5E37458();
  *(_QWORD *)a1 = 2831718;
  *(_QWORD *)(a1 + 8) = 0xE300000000000000;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

unsigned __int8 *sub_1D5E2C758@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X8>)
{
  int v3;
  char v4;

  v3 = *result;
  if (v3 == 25 || v3 == 5)
  {
    sub_1D5E37458();
    result = (unsigned __int8 *)swift_bridgeObjectRelease();
    *(_QWORD *)a2 = 2831974;
    *(_QWORD *)(a2 + 8) = 0xE300000000000000;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    v4 = 5;
  }
  else
  {
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    v4 = -1;
  }
  *(_BYTE *)(a2 + 48) = v4;
  return result;
}

uint64_t sub_1D5E2C82C()
{
  swift_bridgeObjectRetain();
  sub_1D5E3744C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5E2C870()
{
  sub_1D5E379A4();
  swift_bridgeObjectRetain();
  sub_1D5E3744C();
  swift_bridgeObjectRelease();
  return sub_1D5E379C8();
}

uint64_t sub_1D5E2C8C8()
{
  sub_1D5E379A4();
  swift_bridgeObjectRetain();
  sub_1D5E3744C();
  swift_bridgeObjectRelease();
  return sub_1D5E379C8();
}

uint64_t sub_1D5E2C920()
{
  swift_bridgeObjectRetain();
  sub_1D5E3744C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5E2C964()
{
  sub_1D5E379A4();
  swift_bridgeObjectRetain();
  sub_1D5E3744C();
  swift_bridgeObjectRelease();
  return sub_1D5E379C8();
}

char *sub_1D5E2C9C0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  int64_t v11;
  double v12;
  double v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  ValueMetadata *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v38;
  uint64_t v39;
  BOOL v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  __int128 v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  __int128 v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  char *v94;
  _QWORD v96[5];
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101[3];
  char *v102;
  uint64_t v103;

  v9 = 2831206;
  v102 = (char *)a4;
  v103 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v101);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  LODWORD(v11) = *a2;
  v12 = *(double *)(a3 + 8);
  v13 = *(double *)(a3 + 16);
  v14 = (char *)MEMORY[0x1E0DEE9D8];
  v100 = (char *)MEMORY[0x1E0DEE9D8];
  v15 = (uint64_t)v102;
  v16 = v103;
  __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
  v17 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 112))(v15, v16);
  v19 = v18;
  v98 = 2831206;
  v99 = 0xE300000000000000;
  sub_1D5E37458();
  v20 = 2831206;
  v21 = 0xE300000000000000;
  v22 = (uint64_t)sub_1D5D7F978(0, 1, 1, v14);
  v24 = *(_QWORD *)(v22 + 16);
  v23 = *(_QWORD *)(v22 + 24);
  v25 = (ValueMetadata *)(v24 + 1);
  if (v24 >= v23 >> 1)
    goto LABEL_97;
  while (1)
  {
    *(_QWORD *)(v22 + 16) = v25;
    v26 = v22 + 56 * v24;
    *(_QWORD *)(v26 + 32) = v20;
    *(_QWORD *)(v26 + 40) = v21;
    *(_QWORD *)(v26 + 48) = v17;
    *(_QWORD *)(v26 + 56) = v19;
    *(_QWORD *)(v26 + 64) = 0;
    *(_QWORD *)(v26 + 72) = 0;
    *(_BYTE *)(v26 + 80) = 4;
    v100 = (char *)v22;
    if ((_DWORD)v11 == 25 || (_DWORD)v11 == 5)
    {
      v98 = v9 + 768;
      v99 = 0xE300000000000000;
      sub_1D5E37458();
      swift_bridgeObjectRelease();
      v27 = v98;
      v28 = v99;
      v30 = *(_QWORD *)(v22 + 16);
      v29 = *(_QWORD *)(v22 + 24);
      if (v30 >= v29 >> 1)
        v22 = (uint64_t)sub_1D5D7F978((char *)(v29 > 1), v30 + 1, 1, (char *)v22);
      *(_QWORD *)(v22 + 16) = v30 + 1;
      v31 = v22 + 56 * v30;
      *(_QWORD *)(v31 + 32) = v27;
      *(_QWORD *)(v31 + 40) = v28;
      *(_OWORD *)(v31 + 48) = 0u;
      *(_OWORD *)(v31 + 64) = 0u;
      *(_BYTE *)(v31 + 80) = 5;
      v100 = (char *)v22;
    }
    v32 = (uint64_t)v102;
    v33 = v103;
    __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 120))(v32, v33);
    MEMORY[0x1E0C80A78](v34, v35);
    v96[2] = v101;
    v22 = sub_1D5E2C25C((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1D5D7FCCC, (uint64_t)v96, v34);
    swift_bridgeObjectRelease();
    v21 = *(_QWORD *)(v22 + 16);
    v36 = MEMORY[0x1E0DEE9D8];
    if (!v21)
      break;
    swift_bridgeObjectRetain();
    v24 = 0;
    v17 = (char *)MEMORY[0x1E0DEE9D8];
    v25 = &_s7FeatureON;
    while (1)
    {
      v23 = v22 + 8 * v24;
      v19 = *(_QWORD *)(v23 + 32);
      v11 = *(_QWORD *)(v19 + 16);
      v20 = *((_QWORD *)v17 + 2);
      v9 = v20 + v11;
      if (__OFADD__(v20, v11))
        break;
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      if ((_DWORD)isUniquelyReferenced_nonNull_native && v9 <= *((_QWORD *)v17 + 3) >> 1)
      {
        v23 = *(_QWORD *)(v19 + 16);
        if (v23)
          goto LABEL_20;
      }
      else
      {
        if (v20 <= v9)
          v38 = v20 + v11;
        else
          v38 = v20;
        v17 = sub_1D5D7F978(isUniquelyReferenced_nonNull_native, v38, 1, v17);
        v23 = *(_QWORD *)(v19 + 16);
        if (v23)
        {
LABEL_20:
          v23 = *((_QWORD *)v17 + 2);
          if ((uint64_t)((*((_QWORD *)v17 + 3) >> 1) - v23) < v11)
            goto LABEL_95;
          swift_arrayInitWithCopy();
          if (v11)
          {
            v39 = *((_QWORD *)v17 + 2);
            v40 = __OFADD__(v39, v11);
            v23 = v39 + v11;
            if (v40)
              goto LABEL_96;
            *((_QWORD *)v17 + 2) = v23;
          }
          goto LABEL_10;
        }
      }
      if (v11)
        goto LABEL_94;
LABEL_10:
      swift_bridgeObjectRelease();
      if (v21 == ++v24)
      {
        swift_bridgeObjectRelease();
        v9 = 2831206;
        v36 = MEMORY[0x1E0DEE9D8];
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    v22 = (uint64_t)sub_1D5D7F978((char *)(v23 > 1), (int64_t)v25, 1, (char *)v22);
  }
  v17 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_26:
  swift_bridgeObjectRelease();
  sub_1D5D7FA90((uint64_t)v17);
  v41 = v102;
  v42 = v103;
  __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
  v43 = (*(uint64_t (**)(char *, uint64_t))(v42 + 40))(v41, v42);
  if ((v44 & 1) != 0)
    goto LABEL_59;
  v45 = *(_QWORD *)&v13 & 0x7FF0000000000000;
  if (v43 < 1)
  {
    if (v45 != 0x7FF0000000000000)
      goto LABEL_37;
    __break(1u);
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  if (v45 == 0x7FF0000000000000)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  if (v43 <= (uint64_t)v13)
  {
    v41 = v100;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_33;
    goto LABEL_111;
  }
LABEL_37:
  if (v13 <= -9.22337204e18)
    goto LABEL_99;
  if (v13 >= 9.22337204e18)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  v50 = *(_QWORD *)&v12 & 0x7FF0000000000000;
  if (v43 <= (uint64_t)v13)
  {
    if (v50 != 0x7FF0000000000000)
      goto LABEL_50;
    goto LABEL_104;
  }
  if (v50 == 0x7FF0000000000000)
  {
    __break(1u);
    goto LABEL_109;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  if (v12 < 9.22337204e18)
  {
    if (v43 <= (uint64_t)v12)
    {
      v41 = v100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v41 = sub_1D5D7F978(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
      v52 = *((_QWORD *)v41 + 2);
      v51 = *((_QWORD *)v41 + 3);
      if (v52 >= v51 >> 1)
        v41 = sub_1D5D7F978((char *)(v51 > 1), v52 + 1, 1, v41);
      *((_QWORD *)v41 + 2) = v52 + 1;
      v48 = &v41[56 * v52];
      v49 = xmmword_1D5E44FD0;
      goto LABEL_58;
    }
LABEL_50:
    if (v12 > -9.22337204e18)
    {
      if (v12 < 9.22337204e18)
      {
        if (v43 > (uint64_t)v12)
        {
          v41 = v100;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v41 = sub_1D5D7F978(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
          v54 = *((_QWORD *)v41 + 2);
          v53 = *((_QWORD *)v41 + 3);
          if (v54 >= v53 >> 1)
            v41 = sub_1D5D7F978((char *)(v53 > 1), v54 + 1, 1, v41);
          *((_QWORD *)v41 + 2) = v54 + 1;
          v48 = &v41[56 * v54];
          v49 = xmmword_1D5E44FE0;
          goto LABEL_58;
        }
        goto LABEL_59;
      }
LABEL_106:
      __break(1u);
LABEL_107:
      v41 = sub_1D5D7F978(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
LABEL_62:
      v61 = *((_QWORD *)v41 + 2);
      v60 = *((_QWORD *)v41 + 3);
      if (v61 >= v60 >> 1)
        v41 = sub_1D5D7F978((char *)(v60 > 1), v61 + 1, 1, v41);
      *((_QWORD *)v41 + 2) = v61 + 1;
      v62 = &v41[56 * v61];
      v63 = xmmword_1D5E45000;
      goto LABEL_70;
    }
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
LABEL_110:
  __break(1u);
LABEL_111:
  v41 = sub_1D5D7F978(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
LABEL_33:
  v47 = *((_QWORD *)v41 + 2);
  v46 = *((_QWORD *)v41 + 3);
  if (v47 >= v46 >> 1)
    v41 = sub_1D5D7F978((char *)(v46 > 1), v47 + 1, 1, v41);
  *((_QWORD *)v41 + 2) = v47 + 1;
  v48 = &v41[56 * v47];
  v49 = xmmword_1D5E44FC0;
LABEL_58:
  *((_OWORD *)v48 + 2) = v49;
  *((_OWORD *)v48 + 3) = 0u;
  *((_OWORD *)v48 + 4) = 0u;
  v48[80] = 0;
  v100 = v41;
LABEL_59:
  v55 = (uint64_t)v102;
  v56 = v103;
  __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
  v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 56))(v55, v56);
  if (v57 != 2)
  {
    v58 = v57;
    v41 = v100;
    v59 = swift_isUniquelyReferenced_nonNull_native();
    if ((v58 & 1) == 0)
    {
      if ((v59 & 1) == 0)
        goto LABEL_107;
      goto LABEL_62;
    }
    if ((v59 & 1) == 0)
      v41 = sub_1D5D7F978(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
    v65 = *((_QWORD *)v41 + 2);
    v64 = *((_QWORD *)v41 + 3);
    if (v65 >= v64 >> 1)
      v41 = sub_1D5D7F978((char *)(v64 > 1), v65 + 1, 1, v41);
    *((_QWORD *)v41 + 2) = v65 + 1;
    v62 = &v41[56 * v65];
    v63 = xmmword_1D5E44FF0;
LABEL_70:
    *((_OWORD *)v62 + 2) = v63;
    *((_OWORD *)v62 + 3) = 0u;
    *((_OWORD *)v62 + 4) = 0u;
    v62[80] = 0;
    v100 = v41;
  }
  v66 = (uint64_t)v102;
  v67 = v103;
  __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v67 + 64))(v66, v67) & 1) != 0)
  {
    v68 = (uint64_t)v102;
    v69 = v103;
    __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
    (*(void (**)(uint64_t, uint64_t))(v69 + 112))(v68, v69);
    v98 = v9 + 512;
    v99 = 0xE300000000000000;
    sub_1D5E37458();
    swift_bridgeObjectRelease();
    v70 = v98;
    v71 = v99;
    v72 = v100;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v72 = sub_1D5D7F978(0, *((_QWORD *)v72 + 2) + 1, 1, v72);
    v74 = *((_QWORD *)v72 + 2);
    v73 = *((_QWORD *)v72 + 3);
    if (v74 >= v73 >> 1)
      v72 = sub_1D5D7F978((char *)(v73 > 1), v74 + 1, 1, v72);
    *((_QWORD *)v72 + 2) = v74 + 1;
    v75 = &v72[56 * v74];
    *((_QWORD *)v75 + 4) = v70;
    *((_QWORD *)v75 + 5) = v71;
    *((_OWORD *)v75 + 3) = 0u;
    *((_OWORD *)v75 + 4) = 0u;
    v75[80] = 0;
    v100 = v72;
  }
  v76 = (uint64_t)v102;
  v77 = v103;
  __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v77 + 48))(v76, v77) & 1) != 0)
  {
    v78 = v100;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v78 = sub_1D5D7F978(0, *((_QWORD *)v78 + 2) + 1, 1, v78);
    v80 = *((_QWORD *)v78 + 2);
    v79 = *((_QWORD *)v78 + 3);
    if (v80 >= v79 >> 1)
      v78 = sub_1D5D7F978((char *)(v79 > 1), v80 + 1, 1, v78);
    *((_QWORD *)v78 + 2) = v80 + 1;
    v81 = &v78[56 * v80];
    *((_OWORD *)v81 + 2) = xmmword_1D5E45010;
    *((_OWORD *)v81 + 3) = 0u;
    *((_OWORD *)v81 + 4) = 0u;
    v81[80] = 0;
    v100 = v78;
  }
  v82 = (uint64_t)v102;
  v83 = v103;
  __swift_project_boxed_opaque_existential_1(v101, (uint64_t)v102);
  v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 24))(v82, v83);
  if (v84)
  {
    v85 = v84;
    v86 = *(_QWORD *)(v84 + 16);
    if (v86)
    {
      v97 = v36;
      sub_1D5D7FB7C(0, v86, 0);
      v87 = v97;
      v96[4] = v85;
      v88 = v85 + 40;
      do
      {
        v98 = 724656486;
        v99 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        sub_1D5E37458();
        swift_bridgeObjectRelease();
        v89 = v98;
        v90 = v99;
        v97 = v87;
        v92 = *(_QWORD *)(v87 + 16);
        v91 = *(_QWORD *)(v87 + 24);
        if (v92 >= v91 >> 1)
        {
          sub_1D5D7FB7C((char *)(v91 > 1), v92 + 1, 1);
          v87 = v97;
        }
        v88 += 16;
        *(_QWORD *)(v87 + 16) = v92 + 1;
        v93 = v87 + 56 * v92;
        *(_QWORD *)(v93 + 32) = v89;
        *(_QWORD *)(v93 + 40) = v90;
        *(_OWORD *)(v93 + 48) = 0u;
        *(_OWORD *)(v93 + 64) = 0u;
        *(_BYTE *)(v93 + 80) = 1;
        --v86;
      }
      while (v86);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v87 = MEMORY[0x1E0DEE9D8];
    }
    sub_1D5D7FA90(v87);
  }
  v94 = v100;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
  return v94;
}

uint64_t sub_1D5E2D44C(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1D5E378FC();
}

unint64_t sub_1D5E2D480()
{
  unint64_t result;

  result = qword_1EFFB8DE8;
  if (!qword_1EFFB8DE8)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E45838, &_s17ArticleLengthTypeON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8DE8);
  }
  return result;
}

uint64_t _s17ArticleLengthTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s17ArticleLengthTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5E2D5A0 + 4 * byte_1D5E45825[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5E2D5D4 + 4 * byte_1D5E45820[v4]))();
}

uint64_t sub_1D5E2D5D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E2D5DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5E2D5E4);
  return result;
}

uint64_t sub_1D5E2D5F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5E2D5F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5E2D5FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E2D604(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E2D610(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D5E2D61C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s17ArticleLengthTypeOMa()
{
  return &_s17ArticleLengthTypeON;
}

uint64_t _s7FeatureOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s7FeatureOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1D5D801B0(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_1D5D8014C(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s7FeatureOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1D5D8014C(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t _s7FeatureOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s7FeatureOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D5E2D7E0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_1D5E2D7EC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = a2;
  return result;
}

uint64_t Classic.AllowListTag.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double Classic.AllowListTag.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t Classic.AllowListTag.init(identifier:score:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  return result;
}

uint64_t sub_1D5E2D834()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D5E2D83C()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1D5E2D844@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  unint64_t result;

  v2 = MEMORY[0x1E0DEE9D8];
  result = sub_1D5DC66D8(MEMORY[0x1E0DEE9D8]);
  *a1 = v2;
  a1[1] = v2;
  a1[2] = result;
  return result;
}

uint64_t sub_1D5E2D878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
  {
    v25 = swift_bridgeObjectRetain();
    v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v26 = *(_QWORD *)(v25 + 16);
    if (!v26)
      goto LABEL_33;
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = (uint64_t *)(a2 + 48);
  v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v9 = *(v5 - 2);
    v8 = *(v5 - 1);
    v10 = *v5;
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = sub_1D5D7FFCC(v9, v8);
    v14 = v6[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      break;
    v17 = v12;
    if (v6[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v12 & 1) == 0)
          goto LABEL_12;
      }
      else
      {
        sub_1D5D99E34();
        if ((v17 & 1) == 0)
          goto LABEL_12;
      }
    }
    else
    {
      sub_1D5D9CBA0(v16, isUniquelyReferenced_nonNull_native);
      v18 = sub_1D5D7FFCC(v9, v8);
      if ((v17 & 1) != (v19 & 1))
        goto LABEL_38;
      v13 = v18;
      if ((v17 & 1) == 0)
      {
LABEL_12:
        v6[(v13 >> 6) + 8] |= 1 << v13;
        v20 = (uint64_t *)(v6[6] + 16 * v13);
        *v20 = v9;
        v20[1] = v8;
        v21 = (uint64_t *)(v6[7] + 24 * v13);
        *v21 = v9;
        v21[1] = v8;
        v21[2] = v10;
        v22 = v6[2];
        v23 = __OFADD__(v22, 1);
        v24 = v22 + 1;
        if (v23)
          goto LABEL_36;
        v6[2] = v24;
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    v7 = (uint64_t *)(v6[7] + 24 * v13);
    swift_bridgeObjectRelease();
    *v7 = v9;
    v7[1] = v8;
    v7[2] = v10;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 += 3;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      v25 = a1;
      v26 = *(_QWORD *)(a1 + 16);
      if (!v26)
      {
LABEL_33:
        result = swift_bridgeObjectRelease();
        *a3 = a1;
        a3[1] = a2;
        a3[2] = (uint64_t)v6;
        return result;
      }
LABEL_19:
      v27 = (uint64_t *)(v25 + 48);
      while (2)
      {
        v30 = *(v27 - 2);
        v29 = *(v27 - 1);
        v31 = *v27;
        swift_bridgeObjectRetain_n();
        v32 = swift_isUniquelyReferenced_nonNull_native();
        v34 = sub_1D5D7FFCC(v30, v29);
        v35 = v6[2];
        v36 = (v33 & 1) == 0;
        v37 = v35 + v36;
        if (__OFADD__(v35, v36))
          goto LABEL_35;
        v38 = v33;
        if (v6[3] >= v37)
        {
          if ((v32 & 1) != 0)
          {
            if ((v33 & 1) == 0)
              goto LABEL_29;
          }
          else
          {
            sub_1D5D99E34();
            if ((v38 & 1) == 0)
              goto LABEL_29;
          }
        }
        else
        {
          sub_1D5D9CBA0(v37, v32);
          v39 = sub_1D5D7FFCC(v30, v29);
          if ((v38 & 1) != (v40 & 1))
            goto LABEL_38;
          v34 = v39;
          if ((v38 & 1) == 0)
          {
LABEL_29:
            v6[(v34 >> 6) + 8] |= 1 << v34;
            v41 = (uint64_t *)(v6[6] + 16 * v34);
            *v41 = v30;
            v41[1] = v29;
            v42 = (uint64_t *)(v6[7] + 24 * v34);
            *v42 = v30;
            v42[1] = v29;
            v42[2] = v31;
            v43 = v6[2];
            v23 = __OFADD__(v43, 1);
            v44 = v43 + 1;
            if (v23)
              goto LABEL_37;
            v6[2] = v44;
            swift_bridgeObjectRetain();
            goto LABEL_21;
          }
        }
        v28 = (uint64_t *)(v6[7] + 24 * v34);
        swift_bridgeObjectRelease();
        *v28 = v30;
        v28[1] = v29;
        v28[2] = v31;
LABEL_21:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 += 3;
        if (!--v26)
          goto LABEL_33;
        continue;
      }
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_1D5E3795C();
  __break(1u);
  return result;
}

uint64_t sub_1D5E2DBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  char v6;

  if (*(_QWORD *)(*(_QWORD *)(v2 + 16) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1D5D7FFCC(a1, a2);
    v6 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1D5E2DC40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v3 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v6 = sub_1D5D7FFCC(a1, a2);
  if ((v7 & 1) != 0)
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 24 * v6 + 16);
  else
    v8 = 0;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t Classic.AllowListTag.debugDescription.getter()
{
  sub_1D5E37650();
  sub_1D5E37458();
  swift_bridgeObjectRetain();
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  sub_1D5E37584();
  return 0;
}

uint64_t sub_1D5E2DDA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];

  sub_1D5E37650();
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "Default Tags: ");
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x1D827D0A0](v0, &type metadata for Classic.AllowListTag);
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D5E37458();
  v1 = swift_bridgeObjectRetain();
  MEMORY[0x1D827D0A0](v1, &type metadata for Classic.AllowListTag);
  sub_1D5E37458();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3[0];
}

uint64_t _s12AllowListTagVwxx()
{
  return swift_bridgeObjectRelease();
}

_QWORD *_s12AllowListTagVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s12AllowListTagVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *_s12AllowListTagVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t _s12AllowListTagVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12AllowListTagVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Classic.AllowListTag()
{
  return &type metadata for Classic.AllowListTag;
}

uint64_t _s9AllowListVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9AllowListVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s9AllowListVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9AllowListVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9AllowListVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s9AllowListVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s9AllowListVMa()
{
  return &_s9AllowListVN;
}

BOOL static TagGroupingReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TagGroupingReason.hash(into:)()
{
  return sub_1D5E379B0();
}

uint64_t TagGroupingReason.hashValue.getter()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

BOOL sub_1D5E2E264(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D5E2E278()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

uint64_t sub_1D5E2E2BC()
{
  return sub_1D5E379B0();
}

uint64_t sub_1D5E2E2E4()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

unint64_t sub_1D5E2E328()
{
  unint64_t result;

  result = qword_1EFFB8DF0;
  if (!qword_1EFFB8DF0)
  {
    result = MEMORY[0x1D827D8E0](&protocol conformance descriptor for TagGroupingReason, &type metadata for TagGroupingReason);
    atomic_store(result, (unint64_t *)&qword_1EFFB8DF0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TagGroupingReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TagGroupingReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D5E2E448 + 4 * byte_1D5E459F5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D5E2E47C + 4 * asc_1D5E459F0[v4]))();
}

uint64_t sub_1D5E2E47C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E2E484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5E2E48CLL);
  return result;
}

uint64_t sub_1D5E2E498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5E2E4A0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D5E2E4A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E2E4AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E2E4B8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D5E2E4C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TagGroupingReason()
{
  return &type metadata for TagGroupingReason;
}

double sub_1D5E2E4DC()
{
  uint64_t v0;

  return *(double *)v0;
}

double sub_1D5E2E4E4()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double sub_1D5E2E4EC()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double sub_1D5E2E4F4()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double sub_1D5E2E4FC()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t sub_1D5E2E504()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

double sub_1D5E2E50C()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

double sub_1D5E2E514()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

double sub_1D5E2E51C()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

double sub_1D5E2E524()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

uint64_t sub_1D5E2E52C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>, uint64_t a11)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(double *)(a2 + 24) = a6;
  *(double *)(a2 + 32) = a7;
  *(_QWORD *)(a2 + 40) = result;
  *(double *)(a2 + 48) = a8;
  *(double *)(a2 + 56) = a9;
  *(double *)(a2 + 64) = a10;
  *(_QWORD *)(a2 + 72) = a11;
  return result;
}

uint64_t sub_1D5E2E550(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D5E2E58C + 4 * byte_1D5E45AA0[a1]))(0xD000000000000019, 0x80000001D5E4C700);
}

uint64_t sub_1D5E2E58C()
{
  uint64_t v0;

  return v0 + 1;
}

BOOL sub_1D5E2E640(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D5E2E654()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

uint64_t sub_1D5E2E698()
{
  return sub_1D5E379B0();
}

uint64_t sub_1D5E2E6C0()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

uint64_t sub_1D5E2E700()
{
  unsigned __int8 *v0;

  return sub_1D5E2E550(*v0);
}

uint64_t sub_1D5E2E708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D5E2F120(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D5E2E72C()
{
  return 0;
}

void sub_1D5E2E738(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1D5E2E744()
{
  sub_1D5E2EDD8();
  return sub_1D5E37A04();
}

uint64_t sub_1D5E2E76C()
{
  sub_1D5E2EDD8();
  return sub_1D5E37A10();
}

uint64_t sub_1D5E2E794(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB8DF8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E2EDD8();
  sub_1D5E379F8();
  v20 = 0;
  sub_1D5E37884();
  if (!v2)
  {
    v19 = 1;
    sub_1D5E37884();
    v18 = 2;
    sub_1D5E37884();
    v17 = 3;
    sub_1D5E37884();
    v16 = 4;
    sub_1D5E37884();
    v15 = 5;
    sub_1D5E37890();
    v14 = 6;
    sub_1D5E37884();
    v13 = 7;
    sub_1D5E37884();
    v12 = 8;
    sub_1D5E37884();
    v11 = 9;
    sub_1D5E37884();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1D5E2EA28@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB8E08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D5E2EDD8();
  sub_1D5E379E0();
  if (!v2)
  {
    v40 = 0;
    sub_1D5E377B8();
    v11 = v10;
    v39 = 1;
    sub_1D5E377B8();
    v13 = v12;
    v38 = 2;
    sub_1D5E377B8();
    v15 = v14;
    v37 = 3;
    sub_1D5E377B8();
    v17 = v16;
    v36 = 4;
    sub_1D5E377B8();
    v19 = v18;
    v35 = 5;
    v20 = sub_1D5E377C4();
    v34 = 6;
    sub_1D5E377B8();
    v22 = v21;
    v33 = 7;
    sub_1D5E377B8();
    v24 = v23;
    v32 = 8;
    sub_1D5E377B8();
    v27 = v26;
    v31 = 9;
    sub_1D5E377B8();
    v30 = v28;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v15;
    a2[3] = v17;
    a2[4] = v19;
    a2[5] = v20;
    a2[6] = v22;
    a2[7] = v24;
    v29 = v30;
    a2[8] = v27;
    a2[9] = v29;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D5E2ECEC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D5E2EA28(a1, a2);
}

uint64_t sub_1D5E2ED00(_QWORD *a1)
{
  return sub_1D5E2E794(a1);
}

__n128 sub_1D5E2ED18@<Q0>(uint64_t a1@<X8>)
{
  __n128 result;

  __asm { FMOV            V0.2D, #1.0 }
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = xmmword_1D5E45C90;
  *(_QWORD *)(a1 + 32) = 0x408F400000000000;
  *(_QWORD *)(a1 + 40) = 10;
  *(_OWORD *)(a1 + 48) = xmmword_1D5E45CA0;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

BOOL sub_1D5E2ED48(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  float64x2_t v4;
  float64x2_t v5;

  result = 0;
  v4.f64[0] = *(float64_t *)(a1 + 32);
  v5.f64[0] = *(float64_t *)(a2 + 32);
  v4.f64[1] = *(float64_t *)(a1 + 48);
  v5.f64[1] = *(float64_t *)(a2 + 48);
  if ((vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL), (float64x2_t)vextq_s8(*(int8x16_t *)a2, *(int8x16_t *)a2, 8uLL)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v4, v5), (int32x4_t)vceqq_f64(
                                                              *(float64x2_t *)(a1 + 56),
                                                              *(float64x2_t *)(a2 + 56))))),
                                7uLL))) & 1) != 0
    && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40))
  {
    return *(double *)(a1 + 72) == *(double *)(a2 + 72);
  }
  return result;
}

unint64_t sub_1D5E2EDD8()
{
  unint64_t result;

  result = qword_1EFFB8E00;
  if (!qword_1EFFB8E00)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E45C3C, &_s23TagScoringConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8E00);
  }
  return result;
}

uint64_t _s23TagScoringConfigurationVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t _s23TagScoringConfigurationVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s23TagScoringConfigurationVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 80) = v3;
  return result;
}

ValueMetadata *_s23TagScoringConfigurationVMa()
{
  return &_s23TagScoringConfigurationVN;
}

uint64_t _s23TagScoringConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s23TagScoringConfigurationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D5E2EFB4 + 4 * byte_1D5E45AAF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D5E2EFE8 + 4 * byte_1D5E45AAA[v4]))();
}

uint64_t sub_1D5E2EFE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E2EFF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5E2EFF8);
  return result;
}

uint64_t sub_1D5E2F004(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5E2F00CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D5E2F010(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E2F018(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E2F024(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D5E2F030(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s23TagScoringConfigurationV10CodingKeysOMa()
{
  return &_s23TagScoringConfigurationV10CodingKeysON;
}

unint64_t sub_1D5E2F04C()
{
  unint64_t result;

  result = qword_1EFFB8E10;
  if (!qword_1EFFB8E10)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E45C14, &_s23TagScoringConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8E10);
  }
  return result;
}

unint64_t sub_1D5E2F094()
{
  unint64_t result;

  result = qword_1EFFB8E18;
  if (!qword_1EFFB8E18)
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E45B84, &_s23TagScoringConfigurationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EFFB8E18);
  }
  return result;
}

unint64_t sub_1D5E2F0DC()
{
  unint64_t result;

  result = qword_1EFFB8E20[0];
  if (!qword_1EFFB8E20[0])
  {
    result = MEMORY[0x1D827D8E0](&unk_1D5E45BAC, &_s23TagScoringConfigurationV10CodingKeysON);
    atomic_store(result, qword_1EFFB8E20);
  }
  return result;
}

uint64_t sub_1D5E2F120(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000019 && a2 == 0x80000001D5E4C700 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D5E4C720 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D5E4C740 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEE00746867696557 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4C760 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D5E4C780 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D5E4C7A0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001D5E4C7C0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D5E4C7E0 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D5E4C800)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v5 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1D5E2F4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double *a5, __int128 *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  char v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  _QWORD *v45;
  unint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  int64_t v59;
  __int128 v60;
  char v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;

  v10 = *(_QWORD *)(a4 + 40);
  v11 = *(_QWORD *)(a4 + 48);
  v12 = *a5;
  v58 = *a6;
  v60 = *(_OWORD *)(a4 + 24);
  v13 = *((_QWORD *)a6 + 2);
  v14 = *((_QWORD *)a6 + 3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF868);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D5E38280;
  sub_1D5E37458();
  *(_QWORD *)(inited + 32) = 2831206;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  v51 = sub_1D5D81DA4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v65 = v60;
  v66 = v10;
  v67 = v11;
  v62 = v58;
  v63 = v13;
  v64 = v14;
  v54 = a7 + 64;
  v16 = 1 << *(_BYTE *)(a7 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(a7 + 64);
  v55 = (unint64_t)(v16 + 63) >> 6;
  v56 = a7;
  swift_bridgeObjectRetain();
  v19 = 0;
  v20 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    if (v18)
    {
      v57 = (v18 - 1) & v18;
      v59 = v19;
      v22 = __clz(__rbit64(v18)) | (v19 << 6);
    }
    else
    {
      v23 = v19 + 1;
      if (__OFADD__(v19, 1))
        goto LABEL_40;
      if (v23 >= v55)
      {
LABEL_37:
        swift_release();
        sub_1D5E2F984(v12, 1.0, a1, v51, (uint64_t *)&v65, (uint64_t *)&v62, (uint64_t)v20, a8, a9);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v24 = *(_QWORD *)(v54 + 8 * v23);
      v25 = v19 + 1;
      if (!v24)
      {
        v25 = v19 + 2;
        if (v19 + 2 >= v55)
          goto LABEL_37;
        v24 = *(_QWORD *)(v54 + 8 * v25);
        if (!v24)
        {
          v25 = v19 + 3;
          if (v19 + 3 >= v55)
            goto LABEL_37;
          v24 = *(_QWORD *)(v54 + 8 * v25);
          if (!v24)
          {
            v25 = v19 + 4;
            if (v19 + 4 >= v55)
              goto LABEL_37;
            v24 = *(_QWORD *)(v54 + 8 * v25);
            if (!v24)
            {
              v25 = v19 + 5;
              if (v19 + 5 >= v55)
                goto LABEL_37;
              v24 = *(_QWORD *)(v54 + 8 * v25);
              if (!v24)
              {
                v26 = v19 + 6;
                if (v19 + 6 >= v55)
                  goto LABEL_37;
                v24 = *(_QWORD *)(v54 + 8 * v26);
                if (!v24)
                {
                  while (1)
                  {
                    v25 = v26 + 1;
                    if (__OFADD__(v26, 1))
                      goto LABEL_41;
                    if (v25 >= v55)
                      goto LABEL_37;
                    v24 = *(_QWORD *)(v54 + 8 * v25);
                    ++v26;
                    if (v24)
                      goto LABEL_25;
                  }
                }
                v25 = v19 + 6;
              }
            }
          }
        }
      }
LABEL_25:
      v57 = (v24 - 1) & v24;
      v59 = v25;
      v22 = __clz(__rbit64(v24)) + (v25 << 6);
    }
    v27 = *(_QWORD *)(v56 + 56) + (v22 << 6);
    v61 = *(_BYTE *)v27;
    v28 = *(_QWORD *)(v27 + 8);
    v29 = *(_QWORD *)(v27 + 16);
    v31 = *(_QWORD *)(v27 + 24);
    v30 = *(_QWORD *)(v27 + 32);
    v32 = *(_BYTE *)(v27 + 40);
    v33 = *(_QWORD *)(v27 + 48);
    v34 = *(_BYTE *)(v27 + 56);
    swift_bridgeObjectRetain();
    sub_1D5E37458();
    v35 = v20;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = sub_1D5D7FFCC(2831206, 0xE300000000000000);
    v39 = v35[2];
    v40 = (v37 & 1) == 0;
    v41 = v39 + v40;
    if (__OFADD__(v39, v40))
      break;
    v42 = v37;
    if (v35[3] >= v41)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v20 = v35;
        if ((v37 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1D5D99FFC();
        v20 = v35;
        if ((v42 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1D5D9CEC4(v41, isUniquelyReferenced_nonNull_native);
      v43 = sub_1D5D7FFCC(2831206, 0xE300000000000000);
      if ((v42 & 1) != (v44 & 1))
        goto LABEL_42;
      v38 = v43;
      v20 = v35;
      if ((v42 & 1) != 0)
      {
LABEL_4:
        v21 = v20[7] + (v38 << 6);
        *(_BYTE *)v21 = v61;
        *(_QWORD *)(v21 + 8) = v28;
        *(_QWORD *)(v21 + 16) = v29;
        *(_QWORD *)(v21 + 24) = v31;
        *(_QWORD *)(v21 + 32) = v30;
        *(_BYTE *)(v21 + 40) = v32;
        *(_QWORD *)(v21 + 48) = v33;
        *(_BYTE *)(v21 + 56) = v34;
        goto LABEL_5;
      }
    }
    v20[(v38 >> 6) + 8] |= 1 << v38;
    v45 = (_QWORD *)(v20[6] + 16 * v38);
    *v45 = 2831206;
    v45[1] = 0xE300000000000000;
    v46 = v20[7] + (v38 << 6);
    *(_BYTE *)v46 = v61;
    *(_QWORD *)(v46 + 8) = v28;
    *(_QWORD *)(v46 + 16) = v29;
    *(_QWORD *)(v46 + 24) = v31;
    *(_QWORD *)(v46 + 32) = v30;
    *(_BYTE *)(v46 + 40) = v32;
    *(_QWORD *)(v46 + 48) = v33;
    *(_BYTE *)(v46 + 56) = v34;
    v47 = v20[2];
    v48 = __OFADD__(v47, 1);
    v49 = v47 + 1;
    if (v48)
      goto LABEL_39;
    v20[2] = v49;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = v57;
    v19 = v59;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  result = sub_1D5E3795C();
  __break(1u);
  return result;
}

uint64_t sub_1D5E2F984(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;

  v42 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v43 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v44 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v17);
  v19 = (char *)&v39 - v18;
  v20 = *a5;
  v21 = a5[1];
  v22 = a5[2];
  v40 = a5[3];
  v41 = v22;
  v23 = *a6;
  v24 = a6[1];
  v25 = a6[2];
  v26 = a6[3];
  if (qword_1ED9AD7D8 != -1)
    swift_once();
  v27 = (void *)qword_1ED9AD7D0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF878);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1D5E38280;
  v29 = v27;
  v30 = MEMORY[0x1E0DEA968];
  v31 = sub_1D5E37590();
  v33 = v32;
  *(_QWORD *)(v28 + 56) = v30;
  *(_QWORD *)(v28 + 64) = sub_1D5D889BC();
  *(_QWORD *)(v28 + 32) = v31;
  *(_QWORD *)(v28 + 40) = v33;
  sub_1D5E375FC();
  sub_1D5E373A4();

  v34 = swift_bridgeObjectRelease();
  *(_QWORD *)&v45 = v20;
  *((_QWORD *)&v45 + 1) = v21;
  MEMORY[0x1E0C80A78](v34, v35);
  *(&v39 - 8) = a8;
  *(&v39 - 7) = a9;
  *((double *)&v39 - 6) = a1;
  *((double *)&v39 - 5) = a2;
  *(&v39 - 4) = v23;
  *(&v39 - 3) = v24;
  *(&v39 - 2) = v25;
  *(&v39 - 1) = v26;
  ClassicAggregateContextType.updateBaseline(with:updateBlock:)((uint64_t (**)())&v45, (uint64_t)sub_1D5E316CC, (uint64_t)(&v39 - 10), a8, a9);
  *(_QWORD *)&v45 = v20;
  *((_QWORD *)&v45 + 1) = v21;
  v36 = ClassicAggregateContextType.lookupBaseline(with:)(&v45, a8, a9, (uint64_t)v19);
  *(_QWORD *)&v45 = v41;
  *((_QWORD *)&v45 + 1) = v40;
  MEMORY[0x1E0C80A78](v36, v37);
  *(&v39 - 10) = a8;
  *(&v39 - 9) = a9;
  *(&v39 - 8) = v42;
  *(&v39 - 7) = (uint64_t)v19;
  *((double *)&v39 - 6) = a1;
  *((double *)&v39 - 5) = a2;
  *(&v39 - 4) = v23;
  *(&v39 - 3) = v24;
  *(&v39 - 2) = v25;
  *(&v39 - 1) = v26;
  ClassicAggregateContextType.update(with:using:updateBlock:)(a4, &v45, (uint64_t)sub_1D5E316E0, (uint64_t)(&v39 - 12), a8, a9);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v44);
}

void sub_1D5E2FC14(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[6];

  v30 = *(_QWORD *)(a3 + 64);
  v11 = a2[3];
  v12 = a2[4];
  v13 = __swift_project_boxed_opaque_existential_2(a2, v11);
  *(uint64_t *)((char *)&v37[3] + 1) = v11;
  *(uint64_t *)((char *)&v37[4] + 1) = v12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)((char *)v37 + 1));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_1, v13, v11);
  v15 = a2[3];
  v16 = a2[5];
  __swift_project_boxed_opaque_existential_2(a2, v15);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v16 + 8))(v37, v15, v16);
  sub_1D5D89870(1.0, 60.0);
  sub_1D5D8988C(0.0, 0.0);
  sub_1D5D89A88(1.0);
  sub_1D5D89AA4(5000.0);
  sub_1D5D898C4(2000.0);
  sub_1D5D89C68(1.0);
  v31[0] = 0x3FF0000000000000;
  v31[1] = 0x40B3880000000000;
  v31[2] = 0x409F400000000000;
  v32 = xmmword_1D5E3D890;
  v33 = 0;
  v34 = 0;
  v35 = 0x3FF0000000000000;
  v36 = 5;
  v17 = sub_1D5E2C9C0((uint64_t)boxed_opaque_existential_1, (unsigned __int8 *)v37, (uint64_t)v31, v11, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37 + 1);
  v18 = ClassicAggregateContextType.validate(features:publisherTopicMinimumEventCount:)((uint64_t)v17, v30, a7, a8);
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v31[0] = MEMORY[0x1E0DEE9D8];
    sub_1D5DB9AEC(0, v19, 0);
    v20 = v31[0];
    v21 = (uint64_t *)(v18 + 40);
    do
    {
      v23 = *(v21 - 1);
      v22 = *v21;
      v31[0] = v20;
      v25 = *(_QWORD *)(v20 + 16);
      v24 = *(_QWORD *)(v20 + 24);
      v26 = v20;
      swift_bridgeObjectRetain();
      v20 = v26;
      if (v25 >= v24 >> 1)
      {
        sub_1D5DB9AEC((char *)(v24 > 1), v25 + 1, 1);
        v20 = v31[0];
      }
      v21 += 7;
      *(_QWORD *)(v20 + 16) = v25 + 1;
      v27 = v20 + 16 * v25;
      *(_QWORD *)(v27 + 32) = v23;
      *(_QWORD *)(v27 + 40) = v22;
      --v19;
    }
    while (v19);
  }
  swift_bridgeObjectRelease();
  v28 = a2[3];
  v29 = a2[5];
  __swift_project_boxed_opaque_existential_2(a2, v28);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v29 + 8))(v31, v28, v29);
  __asm { BR              X10 }
}

uint64_t sub_1D5E2FF14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  char v55;
  _QWORD *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v50 = v52 + 64;
  v1 = 1 << *(_BYTE *)(v52 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(v52 + 64);
  v51 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  v4 = 0;
  v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    if (v3)
    {
      v53 = (v3 - 1) & v3;
      v54 = v4;
      v7 = __clz(__rbit64(v3)) | (v4 << 6);
      goto LABEL_26;
    }
    v8 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_40;
    if (v8 >= v51)
      break;
    v9 = *(_QWORD *)(v50 + 8 * v8);
    v10 = v4 + 1;
    if (!v9)
    {
      v10 = v4 + 2;
      if (v4 + 2 >= v51)
        break;
      v9 = *(_QWORD *)(v50 + 8 * v10);
      if (!v9)
      {
        v10 = v4 + 3;
        if (v4 + 3 >= v51)
          break;
        v9 = *(_QWORD *)(v50 + 8 * v10);
        if (!v9)
        {
          v10 = v4 + 4;
          if (v4 + 4 >= v51)
            break;
          v9 = *(_QWORD *)(v50 + 8 * v10);
          if (!v9)
          {
            v10 = v4 + 5;
            if (v4 + 5 >= v51)
              break;
            v9 = *(_QWORD *)(v50 + 8 * v10);
            if (!v9)
            {
              v11 = v4 + 6;
              if (v4 + 6 >= v51)
                break;
              v9 = *(_QWORD *)(v50 + 8 * v11);
              if (!v9)
              {
                while (1)
                {
                  v10 = v11 + 1;
                  if (__OFADD__(v11, 1))
                    break;
                  if (v10 >= v51)
                    goto LABEL_37;
                  v9 = *(_QWORD *)(v50 + 8 * v10);
                  ++v11;
                  if (v9)
                    goto LABEL_25;
                }
LABEL_41:
                __break(1u);
LABEL_42:
                sub_1D5E3795C();
                __break(1u);
                JUMPOUT(0x1D5E30310);
              }
              v10 = v4 + 6;
            }
          }
        }
      }
    }
LABEL_25:
    v53 = (v9 - 1) & v9;
    v54 = v10;
    v7 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_26:
    v12 = *(_QWORD *)(v52 + 56) + (v7 << 6);
    v13 = *(_BYTE *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_QWORD *)(v12 + 16);
    v17 = *(_QWORD *)(v12 + 24);
    v16 = *(_QWORD *)(v12 + 32);
    v18 = *(_BYTE *)(v12 + 40);
    v19 = *(_QWORD *)(v12 + 48);
    v55 = *(_BYTE *)(v12 + 56);
    v57 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    sub_1D5E37458();
    v20 = (uint64_t)v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v56 = (_QWORD *)v20;
    v23 = sub_1D5D7FFCC(2831206, 0xE300000000000000);
    v24 = *(_QWORD *)(v20 + 16);
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
      __break(1u);
      JUMPOUT(0x1D5E302ECLL);
    }
    v27 = v22;
    if (*(_QWORD *)(v20 + 24) >= v26)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v5 = v56;
        if ((v22 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1D5D99FFC();
        v5 = v56;
        if ((v27 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1D5D9CEC4(v26, isUniquelyReferenced_nonNull_native);
      v28 = sub_1D5D7FFCC(2831206, 0xE300000000000000);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_42;
      v23 = v28;
      v5 = v56;
      if ((v27 & 1) != 0)
      {
LABEL_4:
        v6 = v5[7] + (v23 << 6);
        *(_BYTE *)v6 = v13;
        *(_QWORD *)(v6 + 8) = v14;
        *(_QWORD *)(v6 + 16) = v15;
        *(_QWORD *)(v6 + 24) = v17;
        *(_QWORD *)(v6 + 32) = v16;
        *(_BYTE *)(v6 + 40) = v18;
        *(_QWORD *)(v6 + 48) = v19;
        *(_BYTE *)(v6 + 56) = v55;
        goto LABEL_5;
      }
    }
    v5[(v23 >> 6) + 8] |= 1 << v23;
    v30 = (_QWORD *)(v5[6] + 16 * v23);
    *v30 = 2831206;
    v30[1] = 0xE300000000000000;
    v31 = v5[7] + (v23 << 6);
    *(_BYTE *)v31 = v13;
    *(_QWORD *)(v31 + 8) = v14;
    *(_QWORD *)(v31 + 16) = v15;
    *(_QWORD *)(v31 + 24) = v17;
    *(_QWORD *)(v31 + 32) = v16;
    *(_BYTE *)(v31 + 40) = v18;
    *(_QWORD *)(v31 + 48) = v19;
    *(_BYTE *)(v31 + 56) = v55;
    v32 = v5[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    v5[2] = v34;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v53;
    v4 = v54;
  }
LABEL_37:
  swift_release();
  v35 = sub_1D5D81DA4(v37);
  swift_bridgeObjectRelease();
  v56 = (_QWORD *)v45;
  v57 = v44;
  v58 = v43;
  v59 = v42;
  *(_QWORD *)(v0 - 192) = v41;
  *(_QWORD *)(v0 - 184) = v40;
  *(_QWORD *)(v0 - 176) = v39;
  *(_QWORD *)(v0 - 168) = v38;
  sub_1D5E2F984(v46, 1.0, v47, v35, (uint64_t *)&v56, (uint64_t *)(v0 - 192), (uint64_t)v5, v48, v49);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D5E3043C(uint64_t a1, uint64_t a2, _QWORD *a3, double *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t *__return_ptr, uint64_t, uint64_t);
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedConformanceWitness;
  char *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t *v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  double v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  int64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  __int128 v62;
  _QWORD *v63;
  char isUniquelyReferenced_nonNull_native;
  char v65;
  unint64_t v66;
  uint64_t v67;
  _BOOL8 v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  char v72;
  unint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t result;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  uint64_t v98;
  double v99;
  uint64_t v100;
  uint64_t v101[4];
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;

  v94 = a7;
  v97 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v90 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v17);
  v19 = (char *)&v79 - v18;
  v88 = a3[3];
  v87 = a3[4];
  v86 = a3[5];
  v85 = a3[6];
  v20 = a3[8];
  v99 = *a4;
  v98 = *((_QWORD *)a4 + 2);
  v84 = *a5;
  v83 = a5[1];
  v82 = a5[2];
  v81 = a5[3];
  (*(void (**)(uint64_t, uint64_t))(a10 + 40))(a8, a10);
  v21 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a10 + 48);
  v100 = a2;
  v21(v101, a8, a10);
  v102 = xmmword_1D5E3D890;
  sub_1D5D89870(1.0, 60.0);
  v22 = v102;
  v102 = 0uLL;
  sub_1D5D8988C(0.0, 0.0);
  v23 = v102;
  *(_QWORD *)&v102 = 0x3FF0000000000000;
  sub_1D5D89A88(1.0);
  v24 = v102;
  *(_QWORD *)&v102 = 0x40B3880000000000;
  sub_1D5D89AA4(5000.0);
  v25 = v102;
  *(_QWORD *)&v102 = 0x409F400000000000;
  sub_1D5D898C4(2000.0);
  v26 = v102;
  *(_QWORD *)&v102 = 0x3FF0000000000000;
  sub_1D5D89C68(1.0);
  v27 = v102;
  *(_QWORD *)&v102 = v24;
  *((_QWORD *)&v102 + 1) = v25;
  v103 = v26;
  v104 = v22;
  v105 = v23;
  v106 = v27;
  v107 = 5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v89 = v19;
  v92 = AssociatedTypeWitness;
  v29 = sub_1D5E2C9C0((uint64_t)v19, (unsigned __int8 *)v101, (uint64_t)&v102, AssociatedTypeWitness, AssociatedConformanceWitness);
  v93 = a9;
  v91 = a1;
  v30 = ClassicAggregateContextType.validate(features:publisherTopicMinimumEventCount:)((uint64_t)v29, v20, v94, a9);
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    v96 = a8;
    *(_QWORD *)&v102 = MEMORY[0x1E0DEE9D8];
    sub_1D5DB9AEC(0, v31, 0);
    v32 = v102;
    v33 = (uint64_t *)(v30 + 40);
    v34 = v99;
    do
    {
      v36 = *(v33 - 1);
      v35 = *v33;
      *(_QWORD *)&v102 = v32;
      v38 = *(_QWORD *)(v32 + 16);
      v37 = *(_QWORD *)(v32 + 24);
      swift_bridgeObjectRetain();
      if (v38 >= v37 >> 1)
      {
        sub_1D5DB9AEC((char *)(v37 > 1), v38 + 1, 1);
        v32 = v102;
      }
      v33 += 7;
      *(_QWORD *)(v32 + 16) = v38 + 1;
      v39 = v32 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v36;
      *(_QWORD *)(v39 + 40) = v35;
      --v31;
    }
    while (v31);
    v80 = v32;
    swift_bridgeObjectRelease();
    a8 = v96;
  }
  else
  {
    swift_bridgeObjectRelease();
    v80 = MEMORY[0x1E0DEE9D8];
    v34 = v99;
  }
  sub_1D5E30CA4(v100, v94, a8, v93, a10);
  v41 = v40;
  v42 = *(_QWORD *)(v97 + 64);
  v95 = v97 + 64;
  v43 = 1 << *(_BYTE *)(v97 + 32);
  v44 = -1;
  if (v43 < 64)
    v44 = ~(-1 << v43);
  v45 = v44 & v42;
  v96 = (unint64_t)(v43 + 63) >> 6;
  swift_bridgeObjectRetain();
  v46 = 0.0;
  v47 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    if (v45)
    {
      v98 = (v45 - 1) & v45;
      v99 = v46;
      v49 = __clz(__rbit64(v45)) | (*(_QWORD *)&v46 << 6);
    }
    else
    {
      v50 = *(_QWORD *)&v46 + 1;
      if (__OFADD__(*(_QWORD *)&v46, 1))
        goto LABEL_47;
      if (v50 >= v96)
      {
LABEL_44:
        swift_release();
        v77 = sub_1D5D81DA4(v80);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v102 = v88;
        *((_QWORD *)&v102 + 1) = v87;
        v103 = v86;
        *(_QWORD *)&v104 = v85;
        v101[0] = v84;
        v101[1] = v83;
        v101[2] = v82;
        v101[3] = v81;
        sub_1D5E2F984(v34, v41, v91, v77, (uint64_t *)&v102, v101, (uint64_t)v47, v94, v93);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v89, v92);
      }
      v51 = *(_QWORD *)(v95 + 8 * v50);
      v52 = *(_QWORD *)&v46 + 1;
      if (!v51)
      {
        v52 = *(_QWORD *)&v46 + 2;
        if (*(_QWORD *)&v46 + 2 >= v96)
          goto LABEL_44;
        v51 = *(_QWORD *)(v95 + 8 * v52);
        if (!v51)
        {
          v52 = *(_QWORD *)&v46 + 3;
          if (*(_QWORD *)&v46 + 3 >= v96)
            goto LABEL_44;
          v51 = *(_QWORD *)(v95 + 8 * v52);
          if (!v51)
          {
            v52 = *(_QWORD *)&v46 + 4;
            if (*(_QWORD *)&v46 + 4 >= v96)
              goto LABEL_44;
            v51 = *(_QWORD *)(v95 + 8 * v52);
            if (!v51)
            {
              v52 = *(_QWORD *)&v46 + 5;
              if (*(_QWORD *)&v46 + 5 >= v96)
                goto LABEL_44;
              v51 = *(_QWORD *)(v95 + 8 * v52);
              if (!v51)
              {
                v53 = *(_QWORD *)&v46 + 6;
                if (*(_QWORD *)&v46 + 6 >= v96)
                  goto LABEL_44;
                v51 = *(_QWORD *)(v95 + 8 * v53);
                if (!v51)
                {
                  while (1)
                  {
                    v52 = v53 + 1;
                    if (__OFADD__(v53, 1))
                      goto LABEL_48;
                    if (v52 >= v96)
                      goto LABEL_44;
                    v51 = *(_QWORD *)(v95 + 8 * v52);
                    ++v53;
                    if (v51)
                      goto LABEL_32;
                  }
                }
                v52 = *(_QWORD *)&v46 + 6;
              }
            }
          }
        }
      }
LABEL_32:
      v98 = (v51 - 1) & v51;
      v99 = *(double *)&v52;
      v49 = __clz(__rbit64(v51)) + (v52 << 6);
    }
    v54 = *(_QWORD *)(v97 + 56) + (v49 << 6);
    v55 = *(_BYTE *)v54;
    v56 = *(_QWORD *)(v54 + 8);
    v57 = *(_QWORD *)(v54 + 16);
    v58 = *(_QWORD *)(v54 + 24);
    v59 = *(_QWORD *)(v54 + 32);
    v60 = *(_BYTE *)(v54 + 40);
    v61 = *(_QWORD *)(v54 + 48);
    LODWORD(v100) = *(unsigned __int8 *)(v54 + 56);
    *(_QWORD *)&v102 = 2831206;
    *((_QWORD *)&v102 + 1) = 0xE300000000000000;
    swift_bridgeObjectRetain();
    sub_1D5E37458();
    v62 = v102;
    v63 = v47;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v102 = v63;
    v66 = sub_1D5D7FFCC(v62, *((uint64_t *)&v62 + 1));
    v67 = v63[2];
    v68 = (v65 & 1) == 0;
    v69 = v67 + v68;
    if (__OFADD__(v67, v68))
      break;
    v70 = v65;
    if (v63[3] >= v69)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v47 = (_QWORD *)v102;
        if ((v65 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        sub_1D5D99FFC();
        v47 = (_QWORD *)v102;
        if ((v70 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_1D5D9CEC4(v69, isUniquelyReferenced_nonNull_native);
      v71 = sub_1D5D7FFCC(v62, *((uint64_t *)&v62 + 1));
      if ((v70 & 1) != (v72 & 1))
        goto LABEL_49;
      v66 = v71;
      v47 = (_QWORD *)v102;
      if ((v70 & 1) != 0)
      {
LABEL_11:
        v48 = v47[7] + (v66 << 6);
        *(_BYTE *)v48 = v55;
        *(_QWORD *)(v48 + 8) = v56;
        *(_QWORD *)(v48 + 16) = v57;
        *(_QWORD *)(v48 + 24) = v58;
        *(_QWORD *)(v48 + 32) = v59;
        *(_BYTE *)(v48 + 40) = v60;
        *(_QWORD *)(v48 + 48) = v61;
        *(_BYTE *)(v48 + 56) = v100;
        goto LABEL_12;
      }
    }
    v47[(v66 >> 6) + 8] |= 1 << v66;
    *(_OWORD *)(v47[6] + 16 * v66) = v62;
    v73 = v47[7] + (v66 << 6);
    *(_BYTE *)v73 = v55;
    *(_QWORD *)(v73 + 8) = v56;
    *(_QWORD *)(v73 + 16) = v57;
    *(_QWORD *)(v73 + 24) = v58;
    *(_QWORD *)(v73 + 32) = v59;
    *(_BYTE *)(v73 + 40) = v60;
    *(_QWORD *)(v73 + 48) = v61;
    *(_BYTE *)(v73 + 56) = v100;
    v74 = v47[2];
    v75 = __OFADD__(v74, 1);
    v76 = v74 + 1;
    if (v75)
      goto LABEL_46;
    v47[2] = v76;
    swift_bridgeObjectRetain();
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = v99;
    v45 = v98;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  result = sub_1D5E3795C();
  __break(1u);
  return result;
}

_QWORD *sub_1D5E30CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  return (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 48))(&v6, a3, a5);
}

uint64_t sub_1D5E30D24(uint64_t a1, uint64_t a2, long double a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  double v22[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = sub_1D5E37614();
  v16 = *(_QWORD *)(v15 - 8);
  v18 = MEMORY[0x1E0C80A78](v15, v17);
  v20 = (char *)v22 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))((char *)v22 - v19, 1, 1, AssociatedTypeWitness, v18);
  v22[0] = a7;
  v22[1] = a8;
  sub_1D5E30E38(a1, (uint64_t)v20, v22, 0, a2, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v20, v15);
}

void (*sub_1D5E30E38(uint64_t a1, uint64_t a2, double *a3, int a4, uint64_t a5, long double a6, double a7))(uint64_t *, _QWORD)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  double v27;
  double v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  double v33;
  double v34;
  uint64_t AssociatedConformanceWitness;
  uint64_t v36;
  double v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  char *v49;
  double v50;
  double v51;
  void (*result)(uint64_t *, _QWORD);
  _QWORD *v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  __int128 v70;
  void (*v71)(char *, uint64_t);
  void (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;

  v66 = a4;
  v60 = a2;
  v12 = sub_1D5E37368();
  MEMORY[0x1E0C80A78](v12, v13);
  v62 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = sub_1D5E37614();
  v64 = *(_QWORD *)(v16 - 8);
  v65 = v16;
  MEMORY[0x1E0C80A78](v16, v17);
  v63 = (char *)&v60 - v18;
  v67 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v19, v20);
  v61 = (char *)&v60 - v21;
  v68 = a5;
  v22 = swift_getAssociatedTypeWitness();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22, v24);
  v26 = (char *)&v60 - v25;
  v27 = *a3;
  v28 = a3[1];
  if (qword_1ED9AD7D8 != -1)
    swift_once();
  v29 = (id)qword_1ED9AD7D0;
  sub_1D5E375D8();
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9AF878);
  v30 = swift_allocObject();
  v70 = xmmword_1D5E38280;
  *(_OWORD *)(v30 + 16) = xmmword_1D5E38280;
  v74 = 0;
  v75 = 0xE000000000000000;
  v72 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v72(v26, a1, v22);
  sub_1D5E378E4();
  v71 = *(void (**)(char *, uint64_t))(v23 + 8);
  v71(v26, v22);
  v31 = v74;
  v32 = v75;
  *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
  v69 = sub_1D5D889BC();
  *(_QWORD *)(v30 + 64) = v69;
  *(_QWORD *)(v30 + 32) = v31;
  *(_QWORD *)(v30 + 40) = v32;
  sub_1D5E373A4();

  swift_bridgeObjectRelease();
  v33 = v27 * a7;
  v34 = v28 * a7;
  if (v33 <= 0.0 && v34 <= 0.0)
    goto LABEL_25;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v36 = *(_QWORD *)(AssociatedConformanceWitness + 8);
  v37 = (*(double (**)(uint64_t, uint64_t))(v36 + 16))(v22, v36);
  if (a6 == 1.0)
  {
    v38 = v64;
  }
  else
  {
    v38 = v64;
    if (v33 != 1.0)
      v33 = (1.0 - pow(a6, v33)) / (1.0 - a6);
  }
  v39 = pow(a6, v34);
  v40 = v37 * v39;
  (*(void (**)(uint64_t, uint64_t))(v36 + 24))(v22, v36);
  if (a6 == 1.0)
  {
    v42 = v67;
    v43 = v65;
    v44 = v63;
  }
  else
  {
    v42 = v67;
    v43 = v65;
    v44 = v63;
    if (v34 != 1.0)
      v34 = (1.0 - v39) / (1.0 - a6);
  }
  v45 = v33 + v40;
  v46 = v39 * v41 + v34;
  if ((v66 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v44, v60, v43);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v44, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v38 + 8))(v44, v43);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v61, v44, AssociatedTypeWitness);
      v47 = 0.0;
      if (v46 > 0.0 && v45 / v46 > 0.0)
      {
        if (v45 / v46 <= 1.0)
          v47 = v45 / v46;
        else
          v47 = 1.0;
      }
      v48 = swift_getAssociatedConformanceWitness();
      v49 = v61;
      ReadonlyAggregateType.personalizationValue.getter(AssociatedTypeWitness, v48);
      v51 = v50;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v49, AssociatedTypeWitness);
      if (v51 < v47)
        v45 = v46 * v51;
    }
  }
  (*(void (**)(uint64_t, uint64_t, double))(AssociatedConformanceWitness + 16))(v22, AssociatedConformanceWitness, v45);
  (*(void (**)(uint64_t, uint64_t, double))(AssociatedConformanceWitness + 32))(v22, AssociatedConformanceWitness, v46);
  result = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(&v74, v22, AssociatedConformanceWitness);
  if (*v53 != -1)
  {
    ++*v53;
    result(&v74, 0);
    v54 = v62;
    sub_1D5E3735C();
    (*(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v54, v22, AssociatedConformanceWitness);
LABEL_25:
    v55 = (id)qword_1ED9AD7D0;
    sub_1D5E375D8();
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = v70;
    v74 = 0;
    v75 = 0xE000000000000000;
    v72(v26, a1, v22);
    sub_1D5E378E4();
    v71(v26, v22);
    v57 = v74;
    v58 = v75;
    v59 = v69;
    *(_QWORD *)(v56 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v56 + 64) = v59;
    *(_QWORD *)(v56 + 32) = v57;
    *(_QWORD *)(v56 + 40) = v58;
    sub_1D5E373A4();

    return (void (*)(uint64_t *, _QWORD))swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1D5E3141C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long double a5, double a6, double a7, double a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v24[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = sub_1D5E37614();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19);
  v21 = (char *)v24 - v20;
  LOBYTE(a2) = sub_1D5E3156C(a2, a1);
  v22 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v21, a3, AssociatedTypeWitness);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v21, 0, 1, AssociatedTypeWitness);
  v24[0] = a7;
  v24[1] = a8;
  sub_1D5E30E38(a1, (uint64_t)v21, v24, a2 & 1, a4, a5, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, v17);
}

uint64_t sub_1D5E3156C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v6);
  v9 = (char *)&v18 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v18 - v8, a2, AssociatedTypeWitness, v7);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(AssociatedConformanceWitness + 8) + 8))(AssociatedTypeWitness);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, AssociatedTypeWitness);
  if (*(_QWORD *)(a1 + 16) && (v14 = sub_1D5D7FFCC(v11, v13), (v15 & 1) != 0))
    v16 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 56) + (v14 << 6));
  else
    v16 = 0;
  swift_bridgeObjectRelease();
  return v16;
}

_QWORD *__swift_project_boxed_opaque_existential_2(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1D5E316B8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t _s14ArticleTrainerVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s14ArticleTrainerVMn);
}

uint64_t sub_1D5E316CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1D5E30D24(a1, *(_QWORD *)(v1 + 16), *(long double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72));
}

uint64_t sub_1D5E316E0(uint64_t a1)
{
  uint64_t v1;

  return sub_1D5E3141C(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(long double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72));
}

uint64_t sub_1D5E316F8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  void (*v25)(char *, _QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char v41[32];
  uint64_t v42;

  v30 = a5;
  v31 = a8;
  v36 = a1;
  v37 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v38 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v12);
  v34 = (char *)&v27 - v13;
  v39 = a4;
  MEMORY[0x1E0C80A78](v14, v15);
  v33 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v27 - v19;
  v21 = sub_1D5E375B4();
  if (!v21)
    return sub_1D5E37530();
  v22 = v21;
  v28 = v17;
  v42 = sub_1D5E373BC();
  v35 = sub_1D5E376A4();
  sub_1D5E37680();
  v39 = v20;
  result = sub_1D5E375A8();
  if (v22 < 0)
  {
    __break(1u);
  }
  else
  {
    v24 = v34;
    while (1)
    {
      v25 = (void (*)(char *, _QWORD))sub_1D5E375CC();
      (*(void (**)(char *))(v11 + 16))(v24);
      v25(v41, 0);
      v26 = v40;
      v36(v24, v38);
      if (v26)
        break;
      v40 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v24, AssociatedTypeWitness);
      sub_1D5E3768C();
      sub_1D5E375C0();
      if (!--v22)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v39, v28);
        return v42;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v39, v28);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v38, v30);
  }
  return result;
}

void Classic.TagMappings.sourceTags.getter()
{
  type metadata accessor for Classic.TagMapping();
}

uint64_t sub_1D5E31A10()
{
  uint64_t v0;

  sub_1D5E3756C();
  v0 = sub_1D5E373E0();
  swift_bridgeObjectRetain();
  MEMORY[0x1D827D8E0](MEMORY[0x1E0DE9ED0], v0);
  return sub_1D5E37578();
}

void Classic.TagMappings.count.getter()
{
  type metadata accessor for Classic.TagMapping();
}

void Classic.TagMappings.mappings(to:)()
{
  type metadata accessor for Classic.TagMapping();
}

uint64_t sub_1D5E31B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v3 = sub_1D5E3756C();
  MEMORY[0x1D827CFA4](&v6, v1, v0, v5, v3, v2);
  result = v6;
  if (!v6)
    return sub_1D5E37530();
  return result;
}

uint64_t Classic.TagMapping.description.getter()
{
  sub_1D5E37458();
  sub_1D5E378E4();
  sub_1D5E37458();
  sub_1D5E378E4();
  sub_1D5E37458();
  sub_1D5E37584();
  sub_1D5E37458();
  return 0;
}

BOOL sub_1D5E31C40(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1D5E31C50()
{
  return sub_1D5E379B0();
}

uint64_t sub_1D5E31C74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6154656372756F73 && a2 == 0xE900000000000067;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEE006761546E6F69 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D5E31DF0(char a1)
{
  if (!a1)
    return 0x6154656372756F73;
  if (a1 == 1)
    return 0x74616E6974736564;
  return 0x65726F6373;
}

uint64_t sub_1D5E31E54(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_1D5E33748(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E31C40);
}

uint64_t sub_1D5E31E64(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1D5E337D0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E31C50);
}

uint64_t sub_1D5E31E70(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1D5E33814(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E31C50);
}

uint64_t sub_1D5E31E7C(_QWORD *a1, uint64_t a2)
{
  return sub_1D5E33880(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E31DF0);
}

uint64_t sub_1D5E31E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1D5E338C4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E31C74, a4);
}

uint64_t sub_1D5E31E94()
{
  return 0;
}

uint64_t sub_1D5E31EA0@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_1D5E33924(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E34E58, a2);
}

uint64_t sub_1D5E31EAC(uint64_t a1)
{
  MEMORY[0x1D827D8E0](&unk_1D5E46028, a1);
  return sub_1D5E37A04();
}

uint64_t sub_1D5E31EE0(uint64_t a1)
{
  MEMORY[0x1D827D8E0](&unk_1D5E46028, a1);
  return sub_1D5E37A10();
}

void Classic.TagMapping.encode(to:)()
{
  _s10TagMappingV10CodingKeysOMa();
}

uint64_t sub_1D5E31F84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  MEMORY[0x1D827D8E0](&unk_1D5E46028, a1);
  v3 = sub_1D5E378B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v10 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1D5E379F8();
  *(_BYTE *)(v2 - 144) = 0;
  v8 = *(_QWORD *)(v2 - 72);
  sub_1D5E3789C();
  if (!v8)
  {
    *(_BYTE *)(v2 - 144) = 1;
    sub_1D5E3789C();
    *(_BYTE *)(v2 - 144) = 2;
    sub_1D5E37884();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void Classic.TagMapping.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[24];

  v18[12] = a5;
  v18[11] = a4;
  v18[14] = a1;
  v18[1] = a6;
  v18[2] = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v18[5] = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[3] = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v9, v8);
  v18[10] = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[15] = v11;
  v18[16] = v12;
  v18[17] = v13;
  v18[18] = v14;
  v18[19] = v15;
  v18[20] = v16;
  v18[21] = v17;
  v18[22] = a7;
  _s10TagMappingV10CodingKeysOMa();
}

void sub_1D5E321A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  MEMORY[0x1D827D8E0](&unk_1D5E46028, a1);
  v8 = sub_1D5E377F4();
  *(_QWORD *)(v7 - 208) = v8;
  *(_QWORD *)(v7 - 240) = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v9);
  *(_QWORD *)(v7 - 200) = v3;
  *(_QWORD *)(v7 - 152) = v3;
  *(_QWORD *)(v7 - 144) = v2;
  *(_QWORD *)(v7 - 224) = v2;
  *(_QWORD *)(v7 - 216) = v6;
  *(_QWORD *)(v7 - 136) = v6;
  *(_QWORD *)(v7 - 128) = v5;
  *(_QWORD *)(v7 - 120) = *(_QWORD *)(v7 - 184);
  *(_QWORD *)(v7 - 112) = v4;
  *(_QWORD *)(v7 - 184) = v4;
  *(_QWORD *)(v7 - 104) = *(_QWORD *)(v7 - 176);
  *(_QWORD *)(v7 - 96) = v1;
  type metadata accessor for Classic.TagMapping();
}

uint64_t sub_1D5E32234(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v4 - 176) = v3;
  v9 = *(_QWORD *)(v4 - 168);
  sub_1D5E379E0();
  if (v9)
    return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v4 - 160));
  *(_QWORD *)(v4 - 168) = v6;
  v10 = v8;
  v11 = *(_QWORD *)(v4 - 232);
  v12 = *(_QWORD *)(v4 - 224);
  *(_BYTE *)(v4 - 152) = 0;
  v13 = *(_QWORD *)(v4 - 208);
  v14 = *(_QWORD *)(v4 - 200);
  sub_1D5E377D0();
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v4 - 248) + 32))(v10, *(_QWORD *)(v4 - 192), v14);
  *(_BYTE *)(v4 - 152) = 1;
  sub_1D5E377D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 256) + 32))(&v10[*(int *)(a1 + 84)], v11, v12);
  *(_BYTE *)(v4 - 152) = 2;
  sub_1D5E377B8();
  v16 = v15;
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 240) + 8))(*(_QWORD *)(v4 - 176), v13);
  *(_QWORD *)&v10[*(int *)(a1 + 88)] = v16;
  v17 = *(_QWORD *)(v4 - 168);
  (*(void (**)(_QWORD, char *, uint64_t))(v17 + 16))(*(_QWORD *)(v4 - 264), v10, a1);
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v4 - 160));
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v10, a1);
}

void sub_1D5E32478(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  Classic.TagMapping.init(from:)(a1, a2[2], a2[3], a2[6], a2[8], a3, a2[9]);
}

void sub_1D5E324AC()
{
  Classic.TagMapping.encode(to:)();
}

void Classic.TagMappings.init(scoredMappings:)()
{
  type metadata accessor for Classic.TagMapping();
}

uint64_t sub_1D5E32538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  v1 = sub_1D5E3756C();
  *(_QWORD *)(v0 - 168) = sub_1D5E373B0();
  swift_getTupleTypeMetadata2();
  sub_1D5E3756C();
  v2 = sub_1D5E373F8();
  sub_1D5E373F8();
  MEMORY[0x1D827D8E0](MEMORY[0x1E0DEA0D0], v2);
  sub_1D5E37470();
  v8 = *(_QWORD *)(v0 - 160);
  *(_QWORD *)(v0 - 96) = v9;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 - 168) = sub_1D5E373B0();
  sub_1D5E373F8();
  sub_1D5E37470();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v0 - 160);
  *(_QWORD *)(v0 - 160) = v8;
  v4 = sub_1D5E373EC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1D827D8E0](MEMORY[0x1E0DE9F98], v4);
  MEMORY[0x1D827D8E0](MEMORY[0x1E0DEAF38], v1);
  v5 = sub_1D5E37488();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 - 160) = v5;
  v6 = sub_1D5E37578();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *v10 = v6;
  v10[1] = v8;
  v10[2] = v3;
  return result;
}

void sub_1D5E327A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[24];

  v20[14] = a8;
  v20[11] = a6;
  v20[3] = a3;
  v20[8] = a2;
  v20[5] = a11;
  v20[6] = a1;
  v20[12] = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v20[13] = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[15] = v12;
  v20[16] = v13;
  v20[17] = v14;
  v20[18] = v15;
  v20[10] = v15;
  v20[19] = v16;
  v20[20] = v17;
  v20[4] = v17;
  v20[21] = v19;
  v20[22] = v18;
  type metadata accessor for Classic.TagMapping();
}

void sub_1D5E32858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  void (*v25)(double);
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  *(_QWORD *)(v14 - 272) = a1;
  MEMORY[0x1E0C80A78](a1, a2);
  *(_QWORD *)(v14 - 216) = (char *)&a9 - v15;
  v16 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21, v22);
  *(_QWORD *)(v14 - 232) = (char *)&a9 - v24;
  v25 = *(void (**)(double))(v16 + 16);
  v25(v23);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = v12;
  v26[3] = v9;
  v27 = *(_QWORD *)(v14 - 200);
  v26[4] = v27;
  v26[5] = v13;
  v28 = *(_QWORD *)(v14 - 176);
  v26[6] = v28;
  v26[7] = v11;
  v29 = v10;
  v26[8] = v10;
  v30 = *(_QWORD *)(v14 - 248);
  v26[9] = v30;
  v31 = *(_QWORD *)(v14 - 264);
  *(_QWORD *)(v14 - 280) = v25;
  ((void (*)(char *, uint64_t, uint64_t))v25)(v20, v31, v12);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v14 - 192) + 16))(*(_QWORD *)(v14 - 184), *(_QWORD *)(v14 - 240), v9);
  *(_QWORD *)(v14 - 240) = v16;
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 32);
  v33 = *(_QWORD *)(v14 - 216);
  *(_QWORD *)(v14 - 264) = v20;
  v32(v33, v20, v12);
  *(_QWORD *)(v14 - 168) = v12;
  *(_QWORD *)(v14 - 160) = v9;
  v34 = *(_QWORD *)(v14 - 208);
  *(_QWORD *)(v14 - 152) = v27;
  *(_QWORD *)(v14 - 144) = v34;
  v35 = *(_QWORD *)(v14 - 256);
  *(_QWORD *)(v14 - 136) = v28;
  *(_QWORD *)(v14 - 128) = v35;
  *(_QWORD *)(v14 - 120) = v29;
  *(_QWORD *)(v14 - 112) = v30;
  type metadata accessor for Classic.TagMapping();
}

uint64_t sub_1D5E329A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t result;

  v11 = v7;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 192) + 32))(v3 + *(int *)(a1 + 84), *(_QWORD *)(v8 - 184), v7);
  *(_QWORD *)(v3 + *(int *)(a1 + 88)) = v9;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v1;
  v12[3] = v11;
  v13 = *(_QWORD *)(v8 - 208);
  v12[4] = *(_QWORD *)(v8 - 200);
  v12[5] = v13;
  v14 = *(_QWORD *)(v8 - 176);
  v12[6] = v14;
  v12[7] = v4;
  v15 = *(uint64_t **)(v8 - 224);
  v12[8] = v5;
  v12[9] = v2;
  v12[10] = sub_1D5E34F70;
  v12[11] = v6;
  *(_QWORD *)(v8 - 184) = v6;
  swift_isUniquelyReferenced_nonNull_native();
  v16 = *v15;
  *(_QWORD *)(v8 - 168) = *v15;
  *v15 = 0x8000000000000000;
  v17 = *(_QWORD *)(v8 - 232);
  sub_1D5E340E8(v17, v1, v14);
  if (__OFADD__(*(_QWORD *)(v16 + 16), (v18 & 1) == 0))
  {
    __break(1u);
LABEL_9:
    result = sub_1D5E3795C();
    __break(1u);
    return result;
  }
  v19 = v18;
  sub_1D5E3756C();
  sub_1D5E376D4();
  v20 = sub_1D5E376BC();
  v21 = *(_QWORD *)(v8 - 168);
  if ((v20 & 1) != 0)
  {
    sub_1D5E340E8(v17, v1, *(_QWORD *)(v8 - 176));
    if ((v19 & 1) != (v22 & 1))
      goto LABEL_9;
  }
  *v15 = v21;
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = swift_bridgeObjectRetain();
    *(_QWORD *)(v8 - 168) = ((uint64_t (*)(uint64_t))v12[10])(v23);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v8 - 280))(*(_QWORD *)(v8 - 264), v17, v1);
    sub_1D5E376C8();
  }
  swift_bridgeObjectRelease();
  sub_1D5E37560();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 240) + 8))(v17, v1);
  swift_release();
  return swift_release();
}

uint64_t sub_1D5E32BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v36 = a8;
  v35 = a7;
  v33 = a6;
  v32 = a5;
  v34 = a1;
  v38 = a12;
  v37 = a11;
  v31 = a10;
  swift_getTupleTypeMetadata2();
  v15 = sub_1D5E3756C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2, v17);
  v19 = (char *)&v30 - v18;
  v20 = *(_QWORD *)(a3 - 8);
  v23 = MEMORY[0x1E0C80A78](v21, v22);
  v25 = (char *)&v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(int *)(v26 + 48);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16))(v19, a2, a3, v23);
  v28 = *(_QWORD *)(a2 + v27);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v19, a3);
  v60 = v28;
  v50 = a3;
  v51 = a4;
  v52 = v32;
  v53 = v33;
  v54 = v35;
  v55 = v36;
  v56 = a9;
  v57 = v31;
  v58 = v34;
  v59 = v25;
  v39 = a3;
  v40 = a4;
  v41 = v32;
  v42 = v33;
  v43 = v35;
  v44 = v36;
  v45 = a9;
  v46 = v31;
  v47 = v37;
  v48 = &v49;
  swift_bridgeObjectRetain();
  MEMORY[0x1D827D8E0](MEMORY[0x1E0DEAF38], v15);
  sub_1D5E37494();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v25, a3);
  return swift_bridgeObjectRelease();
}

void sub_1D5E32E00(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1E0C80A78](a1, a2);
  type metadata accessor for Classic.TagMapping();
}

void sub_1D5E32EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(double);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)(v16 - 280) = a1;
  MEMORY[0x1E0C80A78](a1, a2);
  *(_QWORD *)(v16 - 208) = (char *)&a9 - v17;
  *(_QWORD *)(v16 - 200) = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v18, v19);
  *(_QWORD *)(v16 - 176) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21, v22);
  *(_QWORD *)(v16 - 224) = (char *)&a9 - v24;
  v26 = *(void (**)(double))(v25 + 16);
  v26(v23);
  v27 = (_QWORD *)swift_allocObject();
  v28 = v9;
  v27[2] = v9;
  v27[3] = v12;
  v29 = v14;
  *(_QWORD *)(v16 - 248) = v14;
  v27[4] = v14;
  v30 = *(_QWORD *)(v16 - 184);
  v27[5] = v30;
  v27[6] = v10;
  v27[7] = v11;
  v31 = *(_QWORD *)(v16 - 192);
  v33 = *(_QWORD *)(v16 - 240);
  v32 = *(_QWORD *)(v16 - 232);
  v27[8] = v31;
  v27[9] = v33;
  v34 = v28;
  (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v13, v32);
  v35 = *(_QWORD *)(v16 - 176);
  v36 = *(_QWORD *)(v16 - 256);
  *(_QWORD *)(v16 - 232) = v26;
  ((void (*)(uint64_t, uint64_t, uint64_t))v26)(v35, v36, v12);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v15 + 32))(*(_QWORD *)(v16 - 208), v13, v34);
  *(_QWORD *)(v16 - 168) = v34;
  *(_QWORD *)(v16 - 160) = v12;
  *(_QWORD *)(v16 - 152) = v29;
  *(_QWORD *)(v16 - 144) = v30;
  v37 = *(_QWORD *)(v16 - 264);
  *(_QWORD *)(v16 - 136) = *(_QWORD *)(v16 - 272);
  *(_QWORD *)(v16 - 128) = v37;
  *(_QWORD *)(v16 - 120) = v31;
  *(_QWORD *)(v16 - 112) = v33;
  type metadata accessor for Classic.TagMapping();
}

uint64_t sub_1D5E33000(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t result;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 200) + 32))(v8 + *(int *)(a1 + 84), *(_QWORD *)(v9 - 176), v4);
  *(_QWORD *)(v8 + *(int *)(a1 + 88)) = v10;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v2;
  v12[3] = v4;
  v13 = *(_QWORD *)(v9 - 184);
  v12[4] = *(_QWORD *)(v9 - 248);
  v12[5] = v13;
  v12[6] = v5;
  v12[7] = v7;
  v12[8] = *(_QWORD *)(v9 - 192);
  v12[9] = v3;
  v14 = *(uint64_t **)(v9 - 216);
  v12[10] = sub_1D5E34E90;
  v12[11] = v6;
  *(_QWORD *)(v9 - 184) = v6;
  swift_isUniquelyReferenced_nonNull_native();
  v15 = *v14;
  *(_QWORD *)(v9 - 168) = *v14;
  *v14 = 0x8000000000000000;
  v16 = *(_QWORD *)(v9 - 224);
  sub_1D5E340E8(v16, v4, v3);
  if (__OFADD__(*(_QWORD *)(v15 + 16), (v17 & 1) == 0))
  {
    __break(1u);
LABEL_9:
    result = sub_1D5E3795C();
    __break(1u);
    return result;
  }
  v18 = v17;
  *(_QWORD *)(v9 - 192) = sub_1D5E3756C();
  sub_1D5E376D4();
  v19 = sub_1D5E376BC();
  v20 = *(_QWORD *)(v9 - 168);
  if ((v19 & 1) != 0)
  {
    sub_1D5E340E8(v16, v1, v3);
    if ((v18 & 1) != (v21 & 1))
      goto LABEL_9;
  }
  *v14 = v20;
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = swift_bridgeObjectRetain();
    *(_QWORD *)(v9 - 168) = ((uint64_t (*)(uint64_t))v12[10])(v22);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v9 - 232))(*(_QWORD *)(v9 - 176), v16, v1);
    sub_1D5E376C8();
  }
  swift_bridgeObjectRelease();
  sub_1D5E37560();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 200) + 8))(v16, v1);
  swift_release();
  return swift_release();
}

void Classic.TagMappings.mappings(for:)()
{
  type metadata accessor for Classic.TagMapping();
}

uint64_t sub_1D5E3324C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1D5E3756C();
  MEMORY[0x1D827CFA4](&v5, v1, v0, v4, v2);
  result = v5;
  if (!v5)
    return sub_1D5E37530();
  return result;
}

void Classic.TagMappings.description.getter()
{
  swift_bridgeObjectRetain();
  type metadata accessor for Classic.TagMapping();
}

uint64_t sub_1D5E3330C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[30];

  sub_1D5E3756C();
  v0 = sub_1D5E373F8();
  v1 = MEMORY[0x1D827D8E0](MEMORY[0x1E0DEA0E0], v0);
  v3 = sub_1D5E316F8((void (*)(char *, char *))sub_1D5E34300, (uint64_t)v6, v0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v1, MEMORY[0x1E0DEDD18], v2);
  swift_bridgeObjectRelease();
  v6[10] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFFB5510);
  sub_1D5E34334();
  v4 = sub_1D5E3741C();
  swift_bridgeObjectRelease();
  return v4;
}

void sub_1D5E333E8()
{
  sub_1D5E378E4();
  sub_1D5E37458();
  type metadata accessor for Classic.TagMapping();
}

uint64_t sub_1D5E33470()
{
  uint64_t v0;
  uint64_t result;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1D5E3756C();
  swift_getTupleTypeMetadata2();
  MEMORY[0x1D827D8E0](MEMORY[0x1E0DEAF68], v0);
  result = sub_1D5E378F0();
  *v2 = v3;
  v2[1] = v4;
  return result;
}

uint64_t sub_1D5E334FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x697070614D776172 && a2 == 0xEB0000000073676ELL;
  if (v2 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614D656372756F73 && a2 == 0xEE0073676E697070 || (sub_1D5E378FC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D5E4C880)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1D5E378FC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1D5E33688()
{
  sub_1D5E379A4();
  sub_1D5E379B0();
  return sub_1D5E379C8();
}

uint64_t sub_1D5E336CC(char a1)
{
  if (!a1)
    return 0x697070614D776172;
  if (a1 == 1)
    return 0x614D656372756F73;
  return 0xD000000000000013;
}

uint64_t sub_1D5E3373C(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_1D5E33748(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E34FC0);
}

uint64_t sub_1D5E33748(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, *a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9]) & 1;
}

uint64_t sub_1D5E33790()
{
  return sub_1D5E33688();
}

uint64_t sub_1D5E337C4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1D5E337D0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E34FD0);
}

uint64_t sub_1D5E337D0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;

  return a4(a1, *v4, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a2[9]);
}

uint64_t sub_1D5E33808(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1D5E33814(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E34FD0);
}

uint64_t sub_1D5E33814(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_1D5E379A4();
  a4(v8, *v4, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a2[9]);
  return sub_1D5E379C8();
}

uint64_t sub_1D5E33874(_QWORD *a1, uint64_t a2)
{
  return sub_1D5E33880(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E336CC);
}

uint64_t sub_1D5E33880(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v3;

  return a3(*v3, a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
}

uint64_t sub_1D5E338B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1D5E338C4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E334FC, a4);
}

uint64_t sub_1D5E338C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X4>, _BYTE *a5@<X8>)
{
  uint64_t result;

  result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9]);
  *a5 = result;
  return result;
}

uint64_t sub_1D5E3390C()
{
  return 0;
}

uint64_t sub_1D5E33918@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_1D5E33924(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E34FCC, a2);
}

uint64_t sub_1D5E33924@<X0>(_QWORD *a1@<X1>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  *a3 = result;
  return result;
}

uint64_t sub_1D5E33960(uint64_t a1)
{
  MEMORY[0x1D827D8E0](&unk_1D5E45FD8, a1);
  return sub_1D5E37A04();
}

uint64_t sub_1D5E33994(uint64_t a1)
{
  MEMORY[0x1D827D8E0](&unk_1D5E45FD8, a1);
  return sub_1D5E37A10();
}

void Classic.TagMappings.encode(to:)()
{
  _s11TagMappingsV10CodingKeysOMa();
}

void sub_1D5E33A3C(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  MEMORY[0x1D827D8E0](&unk_1D5E45FD8, a1);
  v4 = sub_1D5E378B4();
  *(_QWORD *)(v3 - 280) = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5);
  v6 = *v1;
  *(_QWORD *)(v3 - 288) = v1[1];
  *(_QWORD *)(v3 - 296) = v1[2];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1D5E379F8();
  *(_QWORD *)(v3 - 72) = v6;
  *(_BYTE *)(v3 - 153) = 0;
  v7 = *(_QWORD *)(v3 - 240);
  *(_QWORD *)(v3 - 152) = *(_QWORD *)(v3 - 216);
  *(_QWORD *)(v3 - 144) = v7;
  v8 = *(_QWORD *)(v3 - 208);
  *(_QWORD *)(v3 - 136) = *(_QWORD *)(v3 - 256);
  *(_QWORD *)(v3 - 128) = v8;
  *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 272);
  v9 = *(_QWORD *)(v3 - 232);
  *(_QWORD *)(v3 - 112) = *(_QWORD *)(v3 - 264);
  *(_QWORD *)(v3 - 104) = v9;
  *(_QWORD *)(v3 - 96) = *(_QWORD *)(v3 - 224);
  type metadata accessor for Classic.TagMapping();
}

uint64_t sub_1D5E33B34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = sub_1D5E3756C();
  *(_QWORD *)(v3 - 168) = MEMORY[0x1D827D8E0](&protocol conformance descriptor for Classic.TagMapping<A, B>, a1);
  v6 = MEMORY[0x1D827D8E0](MEMORY[0x1E0DEAF10], v5, v3 - 168);
  v7 = *(_QWORD *)(v3 - 248);
  sub_1D5E3789C();
  if (!v7)
  {
    *(_QWORD *)(v3 - 152) = *(_QWORD *)(v3 - 288);
    *(_BYTE *)(v3 - 72) = 1;
    v8 = sub_1D5E373F8();
    *(_QWORD *)(v3 - 184) = *(_QWORD *)(v3 - 208);
    *(_QWORD *)(v3 - 176) = v6;
    MEMORY[0x1D827D8E0](MEMORY[0x1E0DEA0B8], v8, v3 - 184);
    sub_1D5E3789C();
    *(_QWORD *)(v3 - 152) = *(_QWORD *)(v3 - 296);
    *(_BYTE *)(v3 - 72) = 2;
    v10 = sub_1D5E373F8();
    *(_QWORD *)(v3 - 200) = *(_QWORD *)(v3 - 232);
    *(_QWORD *)(v3 - 192) = v6;
    MEMORY[0x1D827D8E0](MEMORY[0x1E0DEA0B8], v10, v3 - 200);
    sub_1D5E3789C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 280) + 8))(v2, v1);
}

void Classic.TagMappings.init(from:)()
{
  _s11TagMappingsV10CodingKeysOMa();
}

uint64_t sub_1D5E33D44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  MEMORY[0x1D827D8E0](&unk_1D5E45FD8, a1);
  v5 = sub_1D5E377F4();
  *(_QWORD *)(v4 - 232) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v8 = v1[3];
  *(_QWORD *)(v4 - 200) = v1;
  __swift_project_boxed_opaque_existential_1(v1, v8);
  sub_1D5E379E0();
  if (!v2)
  {
    *(_QWORD *)(v4 - 280) = v6;
    v9 = *(_QWORD *)(v4 - 256);
    v10 = *(_QWORD *)(v4 - 248);
    *(_QWORD *)(v4 - 152) = *(_QWORD *)(v4 - 216);
    *(_QWORD *)(v4 - 144) = v9;
    *(_QWORD *)(v4 - 136) = *(_QWORD *)(v4 - 208);
    *(_QWORD *)(v4 - 128) = v3;
    *(_QWORD *)(v4 - 120) = *(_QWORD *)(v4 - 240);
    *(_QWORD *)(v4 - 112) = v10;
    v11 = *(_QWORD *)(v4 - 224);
    *(_QWORD *)(v4 - 104) = *(_QWORD *)(v4 - 264);
    *(_QWORD *)(v4 - 96) = v11;
    type metadata accessor for Classic.TagMapping();
  }
  return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v4 - 200));
}

void sub_1D5E3409C()
{
  Classic.TagMappings.init(from:)();
}

void sub_1D5E340D0()
{
  Classic.TagMappings.encode(to:)();
}

unint64_t sub_1D5E340E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D5E37410();
  return sub_1D5E34130(a1, v6, a2, a3);
}

unint64_t sub_1D5E34130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t, __n128);
  char v17;
  _QWORD v19[2];

  v5 = v4;
  v19[0] = a1;
  v19[1] = a4;
  v7 = *(_QWORD *)(a3 - 8);
  v8.n128_f64[0] = MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = -1 << *(_BYTE *)(v5 + 32);
  v13 = v12 & ~v11;
  if (((*(_QWORD *)(v5 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v11;
    v15 = *(_QWORD *)(v7 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
    do
    {
      v16(v10, *(_QWORD *)(v5 + 48) + v15 * v13, a3, v8);
      v17 = sub_1D5E37428();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a3);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

void type metadata accessor for Classic.TagMapping()
{
  JUMPOUT(0x1D827D88CLL);
}

void _s10TagMappingV10CodingKeysOMa()
{
  JUMPOUT(0x1D827D88CLL);
}

uint64_t sub_1D5E34260(uint64_t a1, uint64_t a2)
{
  return sub_1D5E342A8(a1, a2, (uint64_t)sub_1D5E34EA4, (uint64_t)sub_1D5E34EF0);
}

uint64_t sub_1D5E34284(uint64_t a1, uint64_t a2)
{
  return sub_1D5E342A8(a1, a2, (uint64_t)sub_1D5E34E60, (uint64_t)sub_1D5E34E6C);
}

uint64_t sub_1D5E342A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1D5E32BC0(a1, a2, v4[2], v4[3], v4[4], v4[5], v4[6], v4[7], v4[8], v4[9], a3, a4);
}

uint64_t sub_1D5E342E4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

void sub_1D5E34300()
{
  sub_1D5E333E8();
}

unint64_t sub_1D5E34334()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFFB8EA8[0];
  if (!qword_1EFFB8EA8[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFFB5510);
    result = MEMORY[0x1D827D8E0](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, qword_1EFFB8EA8);
  }
  return result;
}

void _s11TagMappingsV10CodingKeysOMa()
{
  JUMPOUT(0x1D827D88CLL);
}

uint64_t sub_1D5E3438C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D5E34394()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D5E3442C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain();
  }
  else
  {
    v15 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v16 = ((unint64_t)a2 + v9) & v15;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v15, v16, v5);
    *(_QWORD *)((v10 + (((unint64_t)v4 + v9) & v15)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v10 + v16) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1D5E34538(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_1D5E34590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D5E34624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D5E346B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D5E3474C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D5E347E0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  if (v8 >= a2)
  {
    if (v8)
    {
      if (v5 >= v7)
        return (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 48))(a1, *(unsigned int *)(v4 + 84));
      else
        return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
    }
    return 0;
  }
  if (((((*(_QWORD *)(v6 + 64) + (v10 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v11 = 2;
  else
    v11 = a2 - v8 + 1;
  if (v11 >= 0x10000)
    v12 = 4;
  else
    v12 = 2;
  if (v11 < 0x100)
    v12 = 1;
  if (v11 >= 2)
    v13 = v12;
  else
    v13 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1D5E3487C + 4 * byte_1D5E45CD0[v13]))();
}

void sub_1D5E34900(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v11 = 0u;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64) + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X16 }
  }
  if (((*(_DWORD *)(v6 + 64) + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + ((*(_QWORD *)(v5 + 64) + v8) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1D5E34A18()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1D5E34A20(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1D5E34A28);
}

void sub_1D5E34A64()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1D5E34A6C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_1D5E34A74(uint64_t a1, int a2, unsigned int a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_WORD *)(v9 + v10) = 0;
  if (!a2)
    JUMPOUT(0x1D5E34A7CLL);
  if (v4 >= a3)
    return (*(uint64_t (**)(uint64_t))(v7 + 56))(v9);
  else
    return (*(uint64_t (**)(uint64_t))(v6 + 56))((v8 + v9) & v5);
}

uint64_t sub_1D5E34A94()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D5E34AA0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1D5E34AD4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1D5E34B20(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5E34B94(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D5E34BE0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1D5E34C28(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Classic.TagMappings()
{
  JUMPOUT(0x1D827D88CLL);
}

uint64_t sub_1D5E34C74()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D5E34C88()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D5E34C94(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1D5E34D28(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D5E34D74 + 4 * byte_1D5E45CE4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D5E34DA8 + 4 * byte_1D5E45CDF[v4]))();
}

uint64_t sub_1D5E34DA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E34DB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D5E34DB8);
  return result;
}

uint64_t sub_1D5E34DC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D5E34DCCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D5E34DD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E34DD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D5E34DE4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D5E34DF0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void sub_1D5E34DF8()
{
  JUMPOUT(0x1D827D8E0);
}

void sub_1D5E34E08()
{
  JUMPOUT(0x1D827D8E0);
}

void sub_1D5E34E18()
{
  JUMPOUT(0x1D827D8E0);
}

void sub_1D5E34E28()
{
  JUMPOUT(0x1D827D8E0);
}

void sub_1D5E34E38()
{
  JUMPOUT(0x1D827D8E0);
}

void sub_1D5E34E48()
{
  JUMPOUT(0x1D827D8E0);
}

uint64_t sub_1D5E34E58()
{
  return 3;
}

void sub_1D5E34E60(uint64_t a1)
{
  sub_1D5E34EB0(a1, (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E32E00);
}

uint64_t sub_1D5E34E6C(uint64_t a1)
{
  return sub_1D5E34F04(a1);
}

uint64_t sub_1D5E34E80()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E34E94()
{
  return swift_deallocObject();
}

void sub_1D5E34EA4(uint64_t a1)
{
  sub_1D5E34EB0(a1, (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D5E327A0);
}

void sub_1D5E34EB0(uint64_t a1, void (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  a2(a1, v2[10], v2[11], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9]);
  JUMPOUT(0x1D5E34EE4);
}

uint64_t sub_1D5E34EF0(uint64_t a1)
{
  return sub_1D5E34F04(a1);
}

uint64_t sub_1D5E34F04(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, double);
  uint64_t TupleTypeMetadata2;

  v3 = *(uint64_t (**)(uint64_t, double))(v1 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, *(double *)(a1 + *(int *)(TupleTypeMetadata2 + 48)));
}

uint64_t sub_1D5E34F60()
{
  return swift_deallocObject();
}

void sub_1D5E34F74()
{
  type metadata accessor for Classic.TagMapping();
}

uint64_t sub_1D5E34F9C()
{
  return sub_1D5E373BC();
}

uint64_t sub_1D5E34FAC()
{
  return swift_deallocObject();
}

BOOL sub_1D5E34FC0(char a1, char a2)
{
  return sub_1D5E31C40(a1, a2);
}

uint64_t sub_1D5E34FD0()
{
  return sub_1D5E31C50();
}

uint64_t (*sub_1D5E34FE0(uint64_t a1, uint64_t a2))()
{
  uint64_t (**v4)();
  uint64_t (**v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)();
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)();
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)();
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)();
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)();
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)();
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)();
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)();
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)();
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)();
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)();
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v100;

  swift_getFunctionTypeMetadata3();
  sub_1D5E378D8();
  swift_allocObject();
  sub_1D5E37518();
  v5 = v4;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v7 = sub_1D5E37398();
  v9 = v8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v10 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v10 + 2) = a1;
  *((_QWORD *)v10 + 3) = a2;
  *((_QWORD *)v10 + 4) = v7;
  *((_QWORD *)v10 + 5) = v9;
  *v5 = sub_1D5E36A50;
  v5[1] = v10;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v12 = sub_1D5E37398();
  v14 = v13;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v15 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v15 + 2) = a1;
  *((_QWORD *)v15 + 3) = a2;
  *((_QWORD *)v15 + 4) = v12;
  *((_QWORD *)v15 + 5) = v14;
  v5[2] = sub_1D5E36CC4;
  v5[3] = v15;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v17 = sub_1D5E37398();
  v19 = v18;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v20 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v20 + 2) = a1;
  *((_QWORD *)v20 + 3) = a2;
  *((_QWORD *)v20 + 4) = v17;
  *((_QWORD *)v20 + 5) = v19;
  v5[4] = sub_1D5E36CC8;
  v5[5] = v20;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v22 = sub_1D5E37398();
  v24 = v23;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v25 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v25 + 2) = a1;
  *((_QWORD *)v25 + 3) = a2;
  *((_QWORD *)v25 + 4) = v22;
  *((_QWORD *)v25 + 5) = v24;
  v5[6] = sub_1D5E36CCC;
  v5[7] = v25;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a1;
  *(_QWORD *)(v26 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v27 = sub_1D5E37398();
  v29 = v28;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v30 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v30 + 2) = a1;
  *((_QWORD *)v30 + 3) = a2;
  *((_QWORD *)v30 + 4) = v27;
  *((_QWORD *)v30 + 5) = v29;
  v5[8] = sub_1D5E36CD0;
  v5[9] = v30;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = a1;
  *(_QWORD *)(v31 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v32 = sub_1D5E37398();
  v34 = v33;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v35 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v35 + 2) = a1;
  *((_QWORD *)v35 + 3) = a2;
  *((_QWORD *)v35 + 4) = v32;
  *((_QWORD *)v35 + 5) = v34;
  v5[10] = sub_1D5E36CD4;
  v5[11] = v35;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = a1;
  *(_QWORD *)(v36 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v37 = sub_1D5E37398();
  v39 = v38;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v40 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v40 + 2) = a1;
  *((_QWORD *)v40 + 3) = a2;
  *((_QWORD *)v40 + 4) = v37;
  *((_QWORD *)v40 + 5) = v39;
  v5[12] = sub_1D5E36CD8;
  v5[13] = v40;
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = a1;
  *(_QWORD *)(v41 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v42 = sub_1D5E37398();
  v44 = v43;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v45 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v45 + 2) = a1;
  *((_QWORD *)v45 + 3) = a2;
  *((_QWORD *)v45 + 4) = v42;
  *((_QWORD *)v45 + 5) = v44;
  v5[14] = sub_1D5E36CDC;
  v5[15] = v45;
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = a1;
  *(_QWORD *)(v46 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v47 = sub_1D5E37398();
  v49 = v48;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v50 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v50 + 2) = a1;
  *((_QWORD *)v50 + 3) = a2;
  *((_QWORD *)v50 + 4) = v47;
  *((_QWORD *)v50 + 5) = v49;
  v5[16] = sub_1D5E36CE0;
  v5[17] = v50;
  v51 = swift_allocObject();
  *(_QWORD *)(v51 + 16) = a1;
  *(_QWORD *)(v51 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v52 = sub_1D5E37398();
  v54 = v53;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v55 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v55 + 2) = a1;
  *((_QWORD *)v55 + 3) = a2;
  *((_QWORD *)v55 + 4) = v52;
  *((_QWORD *)v55 + 5) = v54;
  v5[18] = sub_1D5E36CE4;
  v5[19] = v55;
  v56 = swift_allocObject();
  *(_QWORD *)(v56 + 16) = a1;
  *(_QWORD *)(v56 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v57 = sub_1D5E37398();
  v59 = v58;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v60 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v60 + 2) = a1;
  *((_QWORD *)v60 + 3) = a2;
  *((_QWORD *)v60 + 4) = v57;
  *((_QWORD *)v60 + 5) = v59;
  v5[20] = sub_1D5E36CE8;
  v5[21] = v60;
  v61 = swift_allocObject();
  *(_QWORD *)(v61 + 16) = a1;
  *(_QWORD *)(v61 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v62 = sub_1D5E37398();
  v64 = v63;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v65 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v65 + 2) = a1;
  *((_QWORD *)v65 + 3) = a2;
  *((_QWORD *)v65 + 4) = v62;
  *((_QWORD *)v65 + 5) = v64;
  v5[22] = sub_1D5E36CEC;
  v5[23] = v65;
  v66 = swift_allocObject();
  *(_QWORD *)(v66 + 16) = a1;
  *(_QWORD *)(v66 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v67 = sub_1D5E37398();
  v69 = v68;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v70 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v70 + 2) = a1;
  *((_QWORD *)v70 + 3) = a2;
  *((_QWORD *)v70 + 4) = v67;
  *((_QWORD *)v70 + 5) = v69;
  v5[24] = sub_1D5E36CF0;
  v5[25] = v70;
  v71 = swift_allocObject();
  *(_QWORD *)(v71 + 16) = a1;
  *(_QWORD *)(v71 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v72 = sub_1D5E37398();
  v74 = v73;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v75 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v75 + 2) = a1;
  *((_QWORD *)v75 + 3) = a2;
  *((_QWORD *)v75 + 4) = v72;
  *((_QWORD *)v75 + 5) = v74;
  v5[26] = sub_1D5E36CF4;
  v5[27] = v75;
  v76 = swift_allocObject();
  *(_QWORD *)(v76 + 16) = a1;
  *(_QWORD *)(v76 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v77 = sub_1D5E37398();
  v79 = v78;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v80 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v80 + 2) = a1;
  *((_QWORD *)v80 + 3) = a2;
  *((_QWORD *)v80 + 4) = v77;
  *((_QWORD *)v80 + 5) = v79;
  v5[28] = sub_1D5E36CF8;
  v5[29] = v80;
  v81 = swift_allocObject();
  *(_QWORD *)(v81 + 16) = a1;
  *(_QWORD *)(v81 + 24) = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  v82 = sub_1D5E37398();
  v84 = v83;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v85 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v85 + 2) = a1;
  *((_QWORD *)v85 + 3) = a2;
  *((_QWORD *)v85 + 4) = v82;
  *((_QWORD *)v85 + 5) = v84;
  v5[30] = sub_1D5E36CFC;
  v5[31] = v85;
  sub_1D5E3756C();
  v86 = sub_1D5E37380();
  v88 = v87;
  swift_bridgeObjectRelease();
  v89 = (_QWORD *)swift_allocObject();
  v89[2] = a1;
  v89[3] = a2;
  v89[4] = v86;
  v89[5] = v88;
  v90 = qword_1ED9AD7D8;
  swift_retain();
  if (v90 != -1)
    swift_once();
  v91 = (id)qword_1ED9AD7D0;
  v92 = sub_1D5E3738C();
  v94 = v93;

  v95 = (_QWORD *)swift_allocObject();
  v95[2] = a1;
  v95[3] = a2;
  v95[4] = v92;
  v95[5] = v94;
  MEMORY[0x1E0C80A78](v95, v96);
  sub_1D5E37374();
  swift_release();
  swift_release();
  swift_release();
  v97 = swift_allocObject();
  *(_QWORD *)(v97 + 16) = a1;
  *(_QWORD *)(v97 + 24) = a2;
  *(_OWORD *)(v97 + 32) = v100;
  return sub_1D5E36CA4;
}

double sub_1D5E36190@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4[3];
  char v5;

  sub_1D5DA5304(a1, (uint64_t)v4);
  if (v5 == 9)
  {
    sub_1D5DA5EE0(v4, a2);
  }
  else
  {
    sub_1D5DA5338((uint64_t)v4);
    result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1D5E361E8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4[3];
  char v5;

  sub_1D5DA5304(a1, (uint64_t)v4);
  if (v5 == 10)
  {
    sub_1D5DA5EE0(v4, a2);
  }
  else
  {
    sub_1D5DA5338((uint64_t)v4);
    result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1D5E36240@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4[3];
  char v5;

  sub_1D5DA5304(a1, (uint64_t)v4);
  if (v5 == 11)
  {
    sub_1D5DA5EE0(v4, a2);
  }
  else
  {
    sub_1D5DA5338((uint64_t)v4);
    result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1D5E36298@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4[3];
  char v5;

  sub_1D5DA5304(a1, (uint64_t)v4);
  if (v5 == 16)
  {
    sub_1D5DA5EE0(v4, a2);
  }
  else
  {
    sub_1D5DA5338((uint64_t)v4);
    result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1D5E362F0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4[3];
  char v5;

  sub_1D5DA5304(a1, (uint64_t)v4);
  if (v5 == 17)
  {
    sub_1D5DA5EE0(v4, a2);
  }
  else
  {
    sub_1D5DA5338((uint64_t)v4);
    result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1D5E36348@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4[3];
  char v5;

  sub_1D5DA5304(a1, (uint64_t)v4);
  if (v5 == 12)
  {
    sub_1D5DA5EE0(v4, a2);
  }
  else
  {
    sub_1D5DA5338((uint64_t)v4);
    result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1D5E363A0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4[3];
  char v5;

  sub_1D5DA5304(a1, (uint64_t)v4);
  if (v5 == 14)
  {
    sub_1D5DA5EE0(v4, a2);
  }
  else
  {
    sub_1D5DA5338((uint64_t)v4);
    result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

uint64_t sub_1D5E363F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[7];
  char v7;

  result = sub_1D5DA5304(a1, (uint64_t)v6);
  if (v7 == 2)
  {
    v4 = v6[0];
    v5 = v6[1];
  }
  else
  {
    result = sub_1D5DA5338((uint64_t)v6);
    v4 = 0;
    v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1D5E3644C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[7];
  char v7;

  result = sub_1D5DA5304(a1, (uint64_t)v6);
  if (v7 == 3)
  {
    v4 = v6[0];
    v5 = v6[1];
  }
  else
  {
    result = sub_1D5DA5338((uint64_t)v6);
    v4 = 0;
    v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1D5E364A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[7];
  char v7;

  result = sub_1D5DA5304(a1, (uint64_t)v6);
  if (v7 == 4)
  {
    v4 = v6[0];
    v5 = v6[1];
  }
  else
  {
    result = sub_1D5DA5338((uint64_t)v6);
    v4 = 0;
    v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1D5E364F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[7];
  char v7;

  result = sub_1D5DA5304(a1, (uint64_t)v6);
  if (v7 == 5)
  {
    v4 = v6[0];
    v5 = v6[1];
  }
  else
  {
    result = sub_1D5DA5338((uint64_t)v6);
    v4 = 0;
    v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1D5E36548@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[7];
  char v7;

  result = sub_1D5DA5304(a1, (uint64_t)v6);
  if (v7 == 7)
  {
    v4 = v6[0];
    v5 = v6[1];
  }
  else
  {
    result = sub_1D5DA5338((uint64_t)v6);
    v4 = 0;
    v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1D5E3659C(uint64_t a1, uint64_t *a2, uint64_t a3, __int128 *a4, __int128 *a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v19[2];
  __int128 v20;
  uint64_t v21;
  _OWORD v22[4];
  uint64_t v23;

  v9 = *a2;
  v10 = a2[1];
  v11 = *(_QWORD *)(a3 + 64);
  v12 = *((_QWORD *)a4 + 2);
  v13 = *a6;
  v14 = *(_OWORD *)(a3 + 16);
  v22[0] = *(_OWORD *)a3;
  v22[1] = v14;
  v15 = *(_OWORD *)(a3 + 48);
  v22[2] = *(_OWORD *)(a3 + 32);
  v22[3] = v15;
  v23 = v11;
  v16 = *a4;
  v21 = v12;
  v17 = a5[1];
  v19[0] = *a5;
  v19[1] = v17;
  v20 = v16;
  return sub_1D5E2F4EC(a1, v9, v10, (uint64_t)v22, (double *)&v20, v19, v13, a7, a8);
}

uint64_t sub_1D5E36610@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[7];
  char v7;

  result = sub_1D5DA5304(a1, (uint64_t)v6);
  if (v7 == 8)
  {
    v4 = v6[0];
    v5 = v6[1];
  }
  else
  {
    result = sub_1D5DA5338((uint64_t)v6);
    v4 = 0;
    v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

double sub_1D5E36664@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4[3];
  char v5;

  sub_1D5DA5304(a1, (uint64_t)v4);
  if (v5 == 19)
  {
    sub_1D5DA5EE0(v4, a2);
  }
  else
  {
    sub_1D5DA5338((uint64_t)v4);
    result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1D5E366BC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4[3];
  char v5;

  sub_1D5DA5304(a1, (uint64_t)v4);
  if (v5 == 20)
  {
    sub_1D5DA5EE0(v4, a2);
  }
  else
  {
    sub_1D5DA5338((uint64_t)v4);
    result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

double sub_1D5E36714(uint64_t a1, _QWORD *a2, uint64_t a3, __int128 *a4, _OWORD *a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  double result;
  _OWORD v16[2];
  __int128 v17;
  uint64_t v18;
  _OWORD v19[4];
  uint64_t v20;

  v8 = *(_QWORD *)(a3 + 64);
  v9 = *((_QWORD *)a4 + 2);
  v10 = *a6;
  v11 = *(_OWORD *)(a3 + 16);
  v19[0] = *(_OWORD *)a3;
  v19[1] = v11;
  v12 = *(_OWORD *)(a3 + 48);
  v19[2] = *(_OWORD *)(a3 + 32);
  v19[3] = v12;
  v20 = v8;
  v13 = *a4;
  v18 = v9;
  v14 = a5[1];
  v16[0] = *a5;
  v16[1] = v14;
  v17 = v13;
  sub_1D5E2FC14(a1, a2, (uint64_t)v19, (uint64_t)&v17, (uint64_t)v16, v10, a7, a8);
  return result;
}

double sub_1D5E36770@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4[3];
  char v5;

  sub_1D5DA5304(a1, (uint64_t)v4);
  if (v5 == 21)
  {
    sub_1D5DA5EE0(v4, a2);
  }
  else
  {
    sub_1D5DA5338((uint64_t)v4);
    result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

uint64_t (*sub_1D5E367C8@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t (*)(), _QWORD *)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t (**a5)()@<X8>))()
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*result)();

  v11 = *a1;
  v10 = a1[1];
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = v11;
  v12[5] = v10;
  swift_retain();
  v13 = a2(sub_1D5E36D58, v12);
  v15 = v14;
  result = (uint64_t (*)())swift_release();
  if (!v5)
  {
    result = (uint64_t (*)())swift_allocObject();
    *((_QWORD *)result + 2) = a3;
    *((_QWORD *)result + 3) = a4;
    *((_QWORD *)result + 4) = v13;
    *((_QWORD *)result + 5) = v15;
    *a5 = sub_1D5E36D04;
    a5[1] = result;
  }
  return result;
}

uint64_t (*sub_1D5E3689C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>))()
{
  uint64_t (*result)();
  uint64_t (*v5)();

  result = sub_1D5E34FE0(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1D5E368C0(uint64_t a1, uint64_t a2, void *__src)
{
  uint64_t (**v3)(uint64_t, uint64_t, _BYTE *);
  _BYTE v7[3600];

  memcpy(v7, __src, sizeof(v7));
  return (*v3)(a1, a2, v7);
}

_QWORD *sub_1D5E36914(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_1D5E36940()
{
  return swift_release();
}

_QWORD *sub_1D5E36948(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1D5E36980(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1D5E369B0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1D5E369F8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1D5E36A34()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36A50()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1D5E36A70()
{
  return swift_deallocObject();
}

double sub_1D5E36A80(uint64_t a1, _QWORD *a2, uint64_t a3, __int128 *a4, _OWORD *a5, uint64_t *a6)
{
  uint64_t v6;

  return sub_1D5E36714(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
}

uint64_t sub_1D5E36AA4()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36AC0()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36ADC()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36AF8()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36B14()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36B30()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36B4C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D5E36B70()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36B8C()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36BA8()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36BC4()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36BD4(uint64_t a1, uint64_t *a2, uint64_t a3, __int128 *a4, __int128 *a5, uint64_t *a6)
{
  uint64_t v6;

  return sub_1D5E3659C(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
}

uint64_t sub_1D5E36BF8()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36C14()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36C30()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36C4C()
{
  return swift_deallocObject();
}

uint64_t sub_1D5E36C68()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t (*sub_1D5E36C88@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>))()
{
  uint64_t v2;

  return sub_1D5E367C8(a1, *(uint64_t (**)(uint64_t (*)(), _QWORD *))(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1D5E36CA4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

long double sub_1D5E36D98(double a1, double a2, long double a3, double a4)
{
  long double v7;
  double v9;
  double v10;
  double v11;

  v7 = 0.0;
  if (a3 != 0.0)
  {
    v7 = 555.0;
    v9 = (1.0 - pow(a3, 555.0)) / (1.0 - a3);
    if (v9 >= a2)
      v9 = a2;
    v10 = 1.0 - (1.0 - a3) * v9;
    if (v10 != 0.0)
    {
      v11 = log(v10);
      v7 = v11 / log(a3);
    }
  }
  return pow(a3, v7) * a1 + a4;
}

double sub_1D5E36E44(double a1, double a2, double a3, double a4)
{
  double v4;

  v4 = a4;
  if (a2 > 0.0 && a3 > 0.0)
    return ((a2 + -1.0) * exp2(-a1 / a3) + 1.0) * a4;
  return v4;
}

double sub_1D5E36E98(double a1, double a2, long double a3, long double a4, double a5)
{
  double v5;

  v5 = a2;
  if (a5 <= a1)
  {
    if (a1 != 0.0)
      return pow(a5 / a1, a3) * a2;
  }
  else if (a1 != 1.0)
  {
    return 1.0 - (1.0 - a2) * pow((1.0 - a5) / (1.0 - a1), a4);
  }
  return v5;
}

double sub_1D5E36F08(double a1, double a2, double a3)
{
  if (a3 <= 0.0 || a1 <= 0.0)
    return 1.0;
  else
    return exp2(-a3 / a1 * a2);
}

long double sub_1D5E36F30(long double a1, long double a2, long double a3, double a4)
{
  double v7;

  v7 = a1;
  if (a3 != 1.0 && a1 != 1.0)
    v7 = (1.0 - pow(a3, a1)) / (1.0 - a3);
  return v7 + pow(a3, a2) * a4;
}

void sub_1D5E36FA4(long double a1, long double a2, double a3)
{
  double v5;
  double v6;

  if (a1 != 0.0)
  {
    v5 = (1.0 - pow(a1, a2)) / (1.0 - a1);
    if (v5 >= a3)
      v5 = a3;
    v6 = 1.0 - (1.0 - a1) * v5;
    if (v6 != 0.0)
    {
      log(v6);
      log(a1);
    }
  }
}

long double sub_1D5E37028(char a1, double a2, double a3, long double a4, double a5, long double a6, double a7, long double a8, long double a9, double a10)
{
  long double v25;
  BOOL v26;
  double v27;
  double v28;
  double v29;
  double v30;
  long double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  long double v37;
  double v38;
  double v39;
  long double v40;
  double v42;
  double v43;
  double v44;

  v43 = sub_1D5E371F4(a1, a3, a4, a8, a5, a6, a9);
  v44 = a7;
  v25 = sub_1D5E371F4(a1, a2, a4, a8, a10, a6, a9) * a7;
  v26 = a6 == 1.0 || v25 == 1.0;
  v27 = 1.0 - a6;
  if (!v26)
    v25 = (1.0 - pow(a6, v25)) / (1.0 - a6);
  v28 = pow(a6, a9);
  v29 = 1.0;
  v30 = 0.0;
  v31 = 0.0;
  if (a6 == 0.0)
  {
LABEL_17:
    if (a6 == v29)
      goto LABEL_20;
    goto LABEL_18;
  }
  v32 = 1.0 - v28;
  v33 = v32 / v27;
  if (v32 / v27 >= a10)
    v34 = a10;
  else
    v34 = v32 / v27;
  v35 = 1.0 - v27 * v34;
  v30 = a9;
  if (v35 != 0.0)
  {
    v36 = log(v35);
    v37 = log(a6);
    v29 = 1.0;
    v30 = v36 / v37;
  }
  if (v33 >= a5)
    v38 = a5;
  else
    v38 = v33;
  v39 = 1.0 - v27 * v38;
  if (v39 == 0.0)
  {
    v31 = a9;
    goto LABEL_17;
  }
  v42 = log(v39);
  v31 = v42 / log(a6);
  if (a6 == 1.0)
    goto LABEL_20;
LABEL_18:
  if (v30 != 1.0)
    v30 = (1.0 - pow(a6, v30)) / v27;
LABEL_20:
  v40 = v25 + pow(a6, v43 * v44) * 0.0;
  return v30 + pow(a6, v31) * v40;
}

long double sub_1D5E371F4(char a1, double a2, long double a3, long double a4, double a5, long double a6, long double a7)
{
  double v11;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;

  v11 = 0.0;
  if (a3 == 0.0)
    goto LABEL_5;
  v15 = (1.0 - pow(a3, a4)) / (1.0 - a3);
  if (v15 >= a2)
    v15 = a2;
  v16 = 1.0 - (1.0 - a3) * v15;
  v11 = a4;
  if (v16 == 0.0)
  {
LABEL_5:
    if ((a1 & 1) == 0)
      return v11;
  }
  else
  {
    v20 = log(v16);
    v11 = v20 / log(a3);
    if ((a1 & 1) == 0)
      return v11;
  }
  if (a6 == 0.0)
  {
    if (v11 < 0.0)
      return 0.0;
  }
  else
  {
    v17 = (1.0 - pow(a6, a7)) / (1.0 - a6);
    if (v17 >= a5)
      v17 = a5;
    v18 = 1.0 - (1.0 - a6) * v17;
    if (v18 != 0.0)
    {
      v19 = log(v18);
      a7 = v19 / log(a6);
    }
    if (v11 - a7 < 0.0)
      return 0.0;
    else
      return v11 - a7;
  }
  return v11;
}

uint64_t sub_1D5E37320()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1D5E3732C()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1D5E37338()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1D5E37344()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1D5E37350()
{
  return MEMORY[0x1E0CB0820]();
}

uint64_t sub_1D5E3735C()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1D5E37368()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1D5E37374()
{
  return MEMORY[0x1E0DDA148]();
}

uint64_t sub_1D5E37380()
{
  return MEMORY[0x1E0DDA150]();
}

uint64_t sub_1D5E3738C()
{
  return MEMORY[0x1E0DDA158]();
}

uint64_t sub_1D5E37398()
{
  return MEMORY[0x1E0DDA160]();
}

uint64_t sub_1D5E373A4()
{
  return MEMORY[0x1E0DF2078]();
}

uint64_t sub_1D5E373B0()
{
  return MEMORY[0x1E0DE9D60]();
}

uint64_t sub_1D5E373BC()
{
  return MEMORY[0x1E0DE9D70]();
}

uint64_t sub_1D5E373C8()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1D5E373D4()
{
  return MEMORY[0x1E0DE9E90]();
}

uint64_t sub_1D5E373E0()
{
  return MEMORY[0x1E0DE9EC0]();
}

uint64_t sub_1D5E373EC()
{
  return MEMORY[0x1E0DE9F78]();
}

uint64_t sub_1D5E373F8()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1D5E37404()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t sub_1D5E37410()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1D5E3741C()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1D5E37428()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1D5E37434()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1D5E37440()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1D5E3744C()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1D5E37458()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1D5E37464()
{
  return MEMORY[0x1E0DEAAA0]();
}

uint64_t sub_1D5E37470()
{
  return MEMORY[0x1E0DEAB20]();
}

uint64_t sub_1D5E3747C()
{
  return MEMORY[0x1E0DEAB28]();
}

uint64_t sub_1D5E37488()
{
  return MEMORY[0x1E0DEAB38]();
}

uint64_t sub_1D5E37494()
{
  return MEMORY[0x1E0DEAB40]();
}

uint64_t sub_1D5E374A0()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1D5E374AC()
{
  return MEMORY[0x1E0DEACC0]();
}

uint64_t sub_1D5E374B8()
{
  return MEMORY[0x1E0DEAD00]();
}

uint64_t sub_1D5E374C4()
{
  return MEMORY[0x1E0DEAD08]();
}

uint64_t sub_1D5E374D0()
{
  return MEMORY[0x1E0DEAD10]();
}

uint64_t sub_1D5E374DC()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1D5E374E8()
{
  return MEMORY[0x1E0DEAD38]();
}

uint64_t sub_1D5E374F4()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1D5E37500()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1D5E3750C()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1D5E37518()
{
  return MEMORY[0x1E0DEADC0]();
}

uint64_t sub_1D5E37524()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1D5E37530()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1D5E3753C()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1D5E37548()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1D5E37554()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t sub_1D5E37560()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_1D5E3756C()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1D5E37578()
{
  return MEMORY[0x1E0DEAF00]();
}

uint64_t sub_1D5E37584()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1D5E37590()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1D5E3759C()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1D5E375A8()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1D5E375B4()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1D5E375C0()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1D5E375CC()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1D5E375D8()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1D5E375E4()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1D5E375F0()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1D5E375FC()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1D5E37608()
{
  return MEMORY[0x1E0DF22E0]();
}

uint64_t sub_1D5E37614()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1D5E37620()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1D5E3762C()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1D5E37638()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1D5E37644()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1D5E37650()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1D5E3765C()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1D5E37668()
{
  return MEMORY[0x1E0DEC488]();
}

uint64_t sub_1D5E37674()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1D5E37680()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1D5E3768C()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1D5E37698()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1D5E376A4()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1D5E376B0()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1D5E376BC()
{
  return MEMORY[0x1E0DECAE0]();
}

uint64_t sub_1D5E376C8()
{
  return MEMORY[0x1E0DECB08]();
}

uint64_t sub_1D5E376D4()
{
  return MEMORY[0x1E0DECB20]();
}

uint64_t sub_1D5E376E0()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1D5E376EC()
{
  return MEMORY[0x1E0DECC00]();
}

uint64_t sub_1D5E376F8()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1D5E37704()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1D5E37710()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1D5E3771C()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1D5E37728()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1D5E37734()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1D5E37740()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1D5E3774C()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1D5E37758()
{
  return MEMORY[0x1E0DECF68]();
}

uint64_t sub_1D5E37764()
{
  return MEMORY[0x1E0DECF70]();
}

uint64_t sub_1D5E37770()
{
  return MEMORY[0x1E0DECF78]();
}

uint64_t sub_1D5E3777C()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1D5E37788()
{
  return MEMORY[0x1E0DECF98]();
}

uint64_t sub_1D5E37794()
{
  return MEMORY[0x1E0DECFA0]();
}

uint64_t sub_1D5E377A0()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1D5E377AC()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1D5E377B8()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1D5E377C4()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1D5E377D0()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1D5E377DC()
{
  return MEMORY[0x1E0DED030]();
}

uint64_t sub_1D5E377E8()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1D5E377F4()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_1D5E37800()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1D5E3780C()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1D5E37818()
{
  return MEMORY[0x1E0DED098]();
}

uint64_t sub_1D5E37824()
{
  return MEMORY[0x1E0DED0A0]();
}

uint64_t sub_1D5E37830()
{
  return MEMORY[0x1E0DED0A8]();
}

uint64_t sub_1D5E3783C()
{
  return MEMORY[0x1E0DED0B0]();
}

uint64_t sub_1D5E37848()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1D5E37854()
{
  return MEMORY[0x1E0DED0C8]();
}

uint64_t sub_1D5E37860()
{
  return MEMORY[0x1E0DED0D0]();
}

uint64_t sub_1D5E3786C()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1D5E37878()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1D5E37884()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1D5E37890()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1D5E3789C()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1D5E378A8()
{
  return MEMORY[0x1E0DED160]();
}

uint64_t sub_1D5E378B4()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_1D5E378C0()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1D5E378CC()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1D5E378D8()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1D5E378E4()
{
  return MEMORY[0x1E0DED548]();
}

uint64_t sub_1D5E378F0()
{
  return MEMORY[0x1E0DED550]();
}

uint64_t sub_1D5E378FC()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1D5E37908()
{
  return MEMORY[0x1E0DED628]();
}

uint64_t sub_1D5E37914()
{
  return MEMORY[0x1E0DED658]();
}

uint64_t sub_1D5E37920()
{
  return MEMORY[0x1E0DED6C8]();
}

uint64_t sub_1D5E3792C()
{
  return MEMORY[0x1E0DED6F8]();
}

uint64_t sub_1D5E37938()
{
  return MEMORY[0x1E0DED788]();
}

uint64_t sub_1D5E37944()
{
  return MEMORY[0x1E0DED998]();
}

uint64_t sub_1D5E37950()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1D5E3795C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1D5E37968()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1D5E37974()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1D5E37980()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1D5E3798C()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1D5E37998()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1D5E379A4()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1D5E379B0()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1D5E379BC()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1D5E379C8()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1D5E379D4()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_1D5E379E0()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1D5E379EC()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_1D5E379F8()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1D5E37A04()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1D5E37A10()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1D5E37A1C()
{
  return MEMORY[0x1E0DEE978]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

long double exp(long double __x)
{
  long double result;

  MEMORY[0x1E0C83280](__x);
  return result;
}

long double exp2(long double __x)
{
  long double result;

  MEMORY[0x1E0C83288](__x);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

long double log(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BB8](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

long double pow(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C84BB8](__x, __y);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getFunctionTypeMetadata3()
{
  return MEMORY[0x1E0DEECA8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1E0DEEE90]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

