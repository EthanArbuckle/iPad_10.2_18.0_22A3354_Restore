void sub_18CA0CD70()
{
  int v0;
  int v1;
  int v2;
  int v3;

  LODWORD(STACK[0x65C]) = v1;
  LODWORD(STACK[0x700]) = v3;
  LODWORD(STACK[0x690]) = v0;
  LODWORD(STACK[0x6C0]) = STACK[0x6F4];
  LODWORD(STACK[0x6DC]) = STACK[0x6E0];
  LODWORD(STACK[0x6F4]) = STACK[0x708];
  LODWORD(STACK[0x708]) = v2;
  LODWORD(STACK[0x6E0]) = STACK[0x660];
  JUMPOUT(0x18CA09654);
}

uint64_t sub_18CA0CDBC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  int v85;
  int v86;

  LODWORD(STACK[0x668]) = LODWORD(STACK[0x5AC]) + LODWORD(STACK[0x560]);
  LODWORD(STACK[0x680]) = v13 + LODWORD(STACK[0x548]);
  LODWORD(STACK[0x678]) = LODWORD(STACK[0x6C8]) + LODWORD(STACK[0x530]);
  LODWORD(STACK[0x658]) = LODWORD(STACK[0x5B0]) + LODWORD(STACK[0x54C]);
  LODWORD(STACK[0x65C]) = LODWORD(STACK[0x558]) + LODWORD(STACK[0x5A0]);
  v22 = v10 - 245654742;
  v23 = v22 ^ v9 ^ (a3 + 1628441922);
  LODWORD(STACK[0x6C8]) = a1 - 426;
  LODWORD(STACK[0x6DC]) = v21;
  v24 = (a1 - 901) | 0x800;
  LODWORD(STACK[0x6F8]) = v24;
  v25 = a6 - 774011107;
  v26 = (a3 - ((2 * a3 - 1038083452) & 0xE489E3CE) + 1398079273) ^ a5;
  v27 = v18
      + (((v15 ^ 0x9E69D2B8) + (v15 ^ v20 ^ 0xC022B945) + 1) ^ (774011107 - a6 + ((a6 - 774011107) ^ v12 ^ v19 ^ 0x78)) ^ ((v23 ^ 0x96528B47) + (v23 ^ v19 ^ 0x78 ^ v24 ^ 0x1D4589A2) + 1))
      + 1;
  LODWORD(STACK[0x690]) = ((2 * v27) & 0x35DF742C) + (v27 ^ 0x9AEFBA16);
  v28 = (a3 - ((2 * a3 + 35658372) & 0x39E92E66) + 2114233461) ^ a2;
  v29 = v25 + v16;
  v30 = ((v28 + 1853583613) ^ (v22 + a7)) + 1324208980 - ((2 * ((v28 + 1853583613) ^ (v22 + a7))) & 0x9DDBA6A8);
  v31 = a4 ^ v15 ^ 0xBEE5DFE7;
  v32 = (v15 ^ v14) - v31 - ((2 * ((v15 ^ v14) - v31) + 944198988) & 0x6FDB05E0);
  v33 = ((v31 + 1853583613) ^ v29) - 1255644586 - ((2 * ((v31 + 1853583613) ^ v29)) & 0x6A50C4AC);
  v34 = a3 - v28 - ((2 * (a3 - v28) + 979857360) & 0x385DEEE6) + 425897819;
  LODWORD(STACK[0x670]) = ((v33 ^ 0x4AD79DA9) + (LODWORD(STACK[0x6B8]) ^ 0xDC8516EE ^ v33) + 1) ^ (((v32 + 1410411926) ^ 0x48127D0F)
                                                                                                 + (LODWORD(STACK[0x6B8]) ^ 0xDE40F648 ^ (v32 + 1410411926))
                                                                                                 + 1) ^ ((v34 ^ LODWORD(STACK[0x708]) ^ v30 ^ 0xC884FDA) + (LODWORD(STACK[0x6B8]) ^ 0x9ADAC49D ^ v34 ^ LODWORD(STACK[0x708]) ^ v30) + 1);
  v35 = v28 + v26;
  v30 ^= 0x4EEDD354u;
  v36 = -1853583613 - (v28 + v26) + v30 + (v34 ^ 0x167A64EF);
  v37 = (v17 ^ v15 ^ 0x2EB4130B) + v31;
  v38 = v33 ^ 0xB5286256;
  v39 = ((2 * ((v33 ^ 0xB5286256) + v31 + 1853583613)) & 0xFEBDEFF6)
      + (((v33 ^ 0xB5286256) + v31 + 1853583613) ^ 0xFF5EF7FB);
  v40 = -1853583613 - v37 + ((v32 + 1410411926) ^ 0xBDB9116C) + (v33 ^ 0xB5286256);
  v41 = ((2 * (v38 + 1016870156)) & 0xFECFF8FA) + ((v38 + 1016870156) ^ 0xFF67FC7D);
  v42 = v30 - ((2 * v30 + 2033740312) & 0x6CD41560) + 1929789372;
  v43 = ((2 * (v30 + v28 + 1853583613 + v36)) & 0xB6BFBBCC) + ((v30 + v28 + 1853583613 + v36) ^ 0xDB5FDDE6);
  v44 = (-9962371 - v41 + (LODWORD(STACK[0x5A4]) ^ (v41 + 9962371))) ^ ((LODWORD(STACK[0x5A4]) ^ v40) - v40) ^ ((v36 ^ LODWORD(STACK[0x660]) ^ v42 ^ 0xA03881F7) + (LODWORD(STACK[0x6F4]) ^ 0xFE73EA0A ^ v36 ^ LODWORD(STACK[0x660]) ^ v42) + 1);
  LODWORD(STACK[0x6C0]) = ((2 * (LODWORD(STACK[0x5A8]) + 614474266 + v43)) & 0x6FBDE6F6)
                        + ((LODWORD(STACK[0x5A8]) + 614474266 + v43) ^ 0x37DEF37B);
  v45 = ((2 * (v36 - 1842597616 + (v42 ^ 0x366A0AB0))) & 0x6DF9DBE6)
      + ((v36 - 1842597616 + (v42 ^ 0x366A0AB0)) ^ 0x36FCEDF3);
  v46 = v36 - ((2 * v36 + 1025046130) & 0xDE4F63F0) + 229911857;
  v47 = v46 ^ LODWORD(STACK[0x6B4]) ^ (v45 - ((2 * v45 + 184670402) & 0xDE4F63F0) + 1957207641);
  v48 = v43 - v36;
  v49 = v35 - v43;
  v50 = v40 + v41 + 1916385129;
  v51 = (v40 + v41 - 1891496217) & 0x3FBD728D ^ v50 & 1;
  v52 = (((v50 - 2 * v51 - 1664759286) ^ 0x40428D73)
       + (LODWORD(STACK[0x6E0]) ^ 0xD6100634 ^ (v50 - 2 * v51 - 1664759286))
       + 1) ^ ((LODWORD(STACK[0x5F0]) ^ (v40 + 512523065)) - v40 - 512523065) ^ ((v47 ^ 0x5E4B6BFD)
                                                                               + (LODWORD(STACK[0x6E0]) ^ 0xC819E0BA ^ v47)
                                                                               + 1);
  v53 = (v40 + v41 - 1777467435) ^ (v37 - v40 - v39 - 472159673);
  v54 = ((2 * v53) & 0xACBBDFBC) + (v53 ^ 0xD65DEFDE);
  v55 = v45 - ((2 * v45 + 412727966) & 0x63F4043C) - 28909715;
  v56 = v55 ^ (v49 - 1076080590);
  v57 = ((2 * (v48 + 27030104 + (v55 ^ 0x31FA021E))) & 0xAAF5FFEE)
      + ((v48 + 27030104 + (v55 ^ 0x31FA021E)) ^ 0x557AFFF7);
  v58 = v40 + v41 - 546940371 + (~(2 * v50 + 165656396) | 0xAF8671C5);
  v59 = v40 - v54;
  LODWORD(STACK[0x6B8]) = ((2 * ((v8 ^ 0x3E01935) - 1434124279 + v57)) & 0xFE6EEE7E)
                        + (((v8 ^ 0x3E01935) - 1434124279 + v57) ^ 0x7F37773F);
  v60 = (v58 ^ 0x283CC71D ^ (v40 - v54 - 185963753))
      - ((2 * (v58 ^ 0x283CC71D ^ (v40 - v54 - 185963753))) & 0xED0C9070)
      + 1988511800;
  v61 = (v60 ^ 0x8979B7C7) + (LODWORD(STACK[0x6D0]) ^ v60 ^ 0xBDB0E6A8);
  v62 = v45 - ((2 * v45 + 449896722) & 0x140AB1FE) - 143799928;
  v63 = (v46 ^ 0xEF27B1F8)
      + (v56 ^ 0xCE05FDE1)
      + 1
      - ((2 * ((v46 ^ 0xEF27B1F8) + (v56 ^ 0xCE05FDE1) + 1)) & 0x44B460A)
      - 2111462651;
  v64 = v45 - ((2 * v45 - 623845102) & 0x9F4E85B2) + 1024439138;
  v65 = (v61 + 1) ^ ((v58 ^ 0xD7C338E2) + (v58 ^ 0xE30A698D ^ LODWORD(STACK[0x6D0])) + 1) ^ ((v64 ^ a8 ^ v63 ^ v62 ^ 0xDD8062CA)
                                                                                           + (LODWORD(STACK[0x6D0]) ^ v64 ^ a8 ^ v63 ^ v62 ^ 0xE94933A5)
                                                                                           + 1);
  v66 = (v63 ^ 0x7DDA5CFA) + 1;
  v67 = v66 + (v56 ^ 0x31FA021E);
  v68 = ((((v66 + (v63 ^ v62 ^ 0x8820FBFA)) ^ (311922551 - v45))
        - ((2 * ((v66 + (v63 ^ v62 ^ 0x8820FBFA)) ^ (311922551 - v45))) & 0x140AB1FE)
        + 168122623) ^ v62)
      + (v63 ^ v62 ^ 0x8820FBFA);
  v69 = (v64 ^ 0xB058BD26)
      - 1434124279
      + (v62 ^ 0x6B56CB8A)
      + v57
      - 980703349
      - ((2 * ((v64 ^ 0xB058BD26) - 1434124279 + (v62 ^ 0x6B56CB8A) + v57 + 1)) & 0x8B174F14);
  v70 = v50 + v39;
  v71 = v50 + v39 + (v58 ^ 0xD7C338E2) + (v58 ^ 0x496F5468) + 24223920;
  v72 = ((2 * v71) & 0xFDE4FF7C) + (v71 ^ 0xFEF27FBE);
  v73 = (v54 - (v40 - v54) + 1629118285 - ((2 * (v54 - (v40 - v54)) + 1768901142) & 0x58C564A6) - 2031) ^ v58;
  v74 = (v69 ^ 0xC58BA78A) - 1632619788 + ((2 * v68) & 0xFFFBFCCE) + (v68 ^ 0x7FFDFE67);
  v75 = v74 + ((v67 - ((2 * v67) & 0x23D1807A) - 1847017411) ^ v62 ^ 0xD5C9951E) + 1842597616;
  v76 = v75 + (v62 ^ 0xF36B688F) + 1 - ((2 * (v75 + (v62 ^ 0xF36B688F) + 1)) & 0x80079C36) + 1073991195;
  v77 = v75 + (v62 ^ 0xC91F30FA ^ v69);
  v78 = ((2 * (v72 + v59 - 2105939036 + (v73 ^ 0x4A7A7892))) & 0xFBFFFEF4)
      + ((v72 + v59 - 2105939036 + (v73 ^ 0x4A7A7892)) ^ 0x7DFFFF7A);
  v79 = v78 + (v58 ^ 0x2EAD0892 ^ (v72 + 17662018));
  v80 = v78 + (v58 ^ 0xD152F76D) - ((2 * (v78 + (v58 ^ 0xD152F76D)) + 67109134) & 0x9962E1D2) - 827231888;
  v81 = (v74 + (v76 ^ 0xBFFC31E4) - ((2 * (v74 + (v76 ^ 0xBFFC31E4)) + 463969762) & 0x1A45CBDA) + 2062988510) ^ v76;
  v82 = (v80 ^ 0xB34E8F16) + v72 + v59 - ((2 * ((v80 ^ 0xB34E8F16) + v72 + v59) + 83089226) & 0xBB3ECCF0) - 535211491;
  v83 = ((v82 ^ 0xA2609987) + (LODWORD(STACK[0x698]) ^ 0xB7023D1A ^ v82) + 1) ^ ((v80 ^ 0xB34E8F16)
                                                                               + (LODWORD(STACK[0x698]) ^ 0xA62C2B8B ^ v80)
                                                                               + 1) ^ ((v81 ^ LODWORD(STACK[0x6A8]) ^ 0x5726F01F)
                                                                                     + (LODWORD(STACK[0x698]) ^ 0x42445482 ^ v81 ^ LODWORD(STACK[0x6A8]))
                                                                                     + 1);
  v84 = v79 - ((2 * v79 + 624017034) & 0x3465173E) - 859084060;
  LODWORD(STACK[0x708]) = ((2 * (v82 ^ v80 ^ v84)) & 0xE75DFFEC ^ 0x6193A0C) + (v82 ^ v80 ^ v84 ^ 0x78B262F8);
  v85 = STACK[0x6C8];
  LODWORD(STACK[0x700]) = v84;
  LODWORD(STACK[0x55C]) = LODWORD(STACK[0x55C]) + 952353854 - v39 + v52;
  LODWORD(STACK[0x56C]) = LODWORD(STACK[0x56C])
                        + v39
                        + v40
                        - 1824596201
                        - 2 * (v39 + v40 - 1824596201)
                        - 1835149550
                        + v44;
  LODWORD(STACK[0x564]) = LODWORD(STACK[0x564]) + 2113929082 - v79 + v83;
  v86 = LODWORD(STACK[0x6DC]) ^ 0x98CA008;
  LODWORD(STACK[0x570]) = LODWORD(STACK[0x570]) - v70 - 24223919 + v65;
  LODWORD(STACK[0x560]) = LODWORD(STACK[0x668]) + v77;
  LODWORD(STACK[0x558]) = LODWORD(STACK[0x65C]) - 348432937 + v48;
  LODWORD(STACK[0x568]) += v86 + (v11 ^ 0xA90EB47F);
  return (*(uint64_t (**)(void))(STACK[0x6E8] + 8 * (v85 ^ (2334 * ((STACK[0x554] & 1) == 0)))))();
}

uint64_t sub_18CA0DC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;
  unsigned int v9;
  _BOOL4 v10;
  BOOL v11;

  LODWORD(STACK[0x6F8]) = v7 + 1573;
  v8 = LODWORD(STACK[0x514]) - 84399665;
  v9 = ((391 * (v7 ^ 0x23F)) ^ 0x19A4CB40) + LODWORD(STACK[0x524]);
  v10 = v8 < 0x588FD5E0;
  v11 = v8 > v9;
  if (v10 != v9 < 0x588FD5E0)
    v11 = v10;
  return (*(uint64_t (**)(void))(a7 + 8 * ((119 * (((v7 + 38) ^ v11) & 1)) ^ v7)))();
}

void sub_18CA0DCC4(int a1@<W4>, int a2@<W5>, int a3@<W8>)
{
  int v3;
  int v4;

  LODWORD(STACK[0x538]) = a2;
  LODWORD(STACK[0x53C]) = a1;
  LODWORD(STACK[0x54C]) = v4;
  LODWORD(STACK[0x540]) += 1695565290 + LODWORD(STACK[0x690]);
  LODWORD(STACK[0x544]) = LODWORD(STACK[0x544]) - 937358203 + LODWORD(STACK[0x6C0]);
  LODWORD(STACK[0x550]) = LODWORD(STACK[0x550]) - 2134341439 + LODWORD(STACK[0x6B8]);
  LODWORD(STACK[0x514]) += (v3 + 573) ^ 0x819;
  LODWORD(STACK[0x548]) = LODWORD(STACK[0x680]) - 1557253105;
  LODWORD(STACK[0x534]) = a3 - 17662018;
  LODWORD(STACK[0x530]) = LODWORD(STACK[0x678]) - 907176065;
  JUMPOUT(0x18CA0DE14);
}

uint64_t sub_18CA11524@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v2;
  int v3;

  LODWORD(STACK[0x6D0]) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((a2 - 1220) ^ (1119
                                                        * (LODWORD(STACK[0x508]) - v3 + LODWORD(STACK[0x528]) != -860677828))))
                            - (((a2 - 2133) | 0x4C8u)
                             + 909)
                            + 2133))();
}

uint64_t sub_18CA11598@<X0>(int a1@<W8>)
{
  unsigned int v1;
  int v2;
  _BOOL4 v3;

  v3 = v1 < 0xF2EDBE3B;
  *(_BYTE *)(STACK[0x718] + (826979246 * ((a1 + 166643617) & 0xF6113BBE ^ 0x983) + 54341309) % 0x3BD) = *(_BYTE *)(STACK[0x498] + (v2 - 346047168)) ^ 0x6B;
  if (v1 >= 0xF2EDBE3B)
    v3 = v1 > 0xF2EDBE3C;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6E8] + 8 * ((7891 * !v3) ^ (a1 + 2548))) - 8))(826979246);
}

void sub_18CA11668()
{
  JUMPOUT(0x18CA115E4);
}

void sub_18CA11678(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  int v137;
  unsigned int v138;
  int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  unsigned int v204;
  int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  int v211;
  int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  unsigned int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  unsigned int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  unsigned int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  int v260;
  unsigned int v261;
  int v262;
  int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  int v276;
  unsigned int v277;
  int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  int v296;
  int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  int v330;
  unsigned int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  int v338;
  int v339;
  unsigned int v340;
  int v341;
  int v342;
  int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  int v348;
  unsigned int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  int v358;
  int v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  int v363;
  int v364;
  unsigned int v365;
  int v366;
  unsigned int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  int v377;
  int v378;
  int v379;
  unsigned int v380;
  unsigned int v381;
  int v382;
  int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  int v404;
  int v405;
  int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  int v433;
  int v434;
  unsigned int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  unsigned int v440;
  unsigned int v441;
  int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  int v446;
  unsigned int v447;
  int v448;
  int v449;
  int v450;
  unsigned int v451;
  int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  int v457;
  int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  int v463;
  unsigned int v464;
  unsigned int v465;
  unsigned int v466;
  int v467;
  int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  int v474;
  unsigned int v475;
  int v476;
  int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  int v481;
  unsigned int v482;
  unsigned int v483;
  int v484;
  unsigned int v485;
  unsigned int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  int v490;
  unsigned int v491;
  int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  unsigned int v497;
  int v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;
  unsigned int v503;
  int v504;
  unsigned int v505;
  unsigned int v506;
  unsigned int v507;
  unsigned int v508;
  unsigned int v509;
  unsigned int v510;
  unsigned int v511;
  unsigned int v512;
  int v513;
  unsigned int v514;
  unsigned int v515;
  unsigned int v516;
  unsigned int v517;
  unsigned int v518;
  unsigned int v519;
  unsigned int v520;
  unsigned int v521;
  unsigned int v522;
  unsigned int v523;
  int v524;
  unsigned int v525;
  unsigned int v526;
  int v527;
  int v528;
  unsigned int v529;
  unsigned int v530;
  unsigned int v531;
  unsigned int v532;
  unsigned int v533;
  unsigned int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  unsigned int v540;
  unsigned int v541;
  unsigned int v542;
  int v543;
  int v544;
  unsigned int v545;
  int v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  int v551;
  int v552;
  int v553;
  unsigned int v554;
  int v555;
  int v556;
  unsigned int v557;
  unsigned int v558;
  unsigned int v559;
  unsigned int v560;
  int v561;
  int v562;
  unsigned int v563;
  int v564;
  unint64_t v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  unsigned int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  unsigned int v573;
  int v574;
  int v575;
  unsigned int v576;
  unsigned int v577;
  unsigned int v578;
  unsigned int v579;
  unsigned int v580;
  unsigned int v581;
  int v582;
  int v583;
  unsigned int v584;
  int v585;
  unsigned int v586;
  int v587;
  unsigned int v588;
  unsigned int v589;
  int v590;
  int v591;
  unsigned int v592;
  unsigned int v593;
  int v594;
  unsigned int v595;
  unsigned int v596;
  unsigned int v597;
  unsigned int v598;
  unsigned int v599;
  unsigned int v600;
  unsigned int v601;
  unsigned int v602;
  unsigned int v603;
  unsigned int v604;
  int v605;
  unsigned int v606;
  unsigned int v607;
  int v608;
  unsigned int v609;
  unsigned int v610;
  unsigned int v611;
  unsigned int v612;
  unsigned int v613;
  unsigned int v614;
  int v615;
  int v616;
  int v617;
  int v618;
  int v619;
  unsigned int v620;
  unsigned int v621;
  unsigned int v622;
  unsigned int v623;
  int v624;
  unsigned int v625;
  unsigned int v626;
  unsigned int v627;
  unsigned int v628;
  unsigned int v629;
  unsigned int v630;
  int v631;
  unsigned int v632;
  unsigned int v633;
  int v634;
  int v635;
  int v636;
  int v637;
  unsigned int v638;
  unsigned int v639;
  unsigned int v640;
  unsigned int v641;
  unsigned int v642;
  unsigned int v643;
  unsigned int v644;
  unsigned int v645;
  unsigned int v646;
  unsigned int v647;
  unsigned int v648;
  unsigned int v649;
  int v650;
  int v651;
  int v652;
  unsigned int v653;
  unsigned int v654;
  unsigned int v655;
  unsigned int v656;
  unsigned int v657;
  unsigned int v658;
  int v659;
  unsigned int v660;
  unsigned int v661;
  int v662;
  unsigned int v663;
  int v664;
  unsigned int v665;
  unsigned int v666;
  int v667;
  unsigned int v668;
  unsigned int v669;
  unsigned int v670;
  int v671;
  int v672;
  int v673;
  int v674;
  unsigned int v675;
  unsigned int v676;
  int v677;
  unsigned int v678;
  int v679;
  int v680;
  unsigned int v681;
  unsigned int v682;
  int v683;
  unsigned int v684;
  unsigned int v685;
  int v686;
  unsigned int v687;
  unsigned int v688;
  unsigned int v689;
  unsigned int v690;
  unsigned int v691;
  unsigned int v692;
  int v693;
  int v694;
  unsigned int v695;
  int v696;
  int v697;
  int v698;
  int v699;
  unsigned int v700;
  unsigned int v701;
  unsigned int v702;
  unsigned int v703;
  int v704;
  int v705;
  unsigned int v706;
  unsigned int v707;
  unsigned int v708;
  unsigned int v709;
  int v710;
  unsigned int v711;
  int v712;
  int v713;
  unsigned int v714;
  int v715;
  unsigned int v716;
  unsigned int v717;
  unsigned int v718;
  int v719;
  unsigned int v720;
  int v721;
  unsigned int v722;
  unsigned int v723;
  unsigned int v724;
  int v725;
  unsigned int v726;
  unsigned int v727;
  int v728;
  unsigned int v729;
  int v730;
  unsigned int v731;
  unsigned int v732;
  int v733;
  unsigned int v734;
  unsigned int v735;
  int v736;
  int v737;
  unsigned int v738;
  unsigned int v739;
  unsigned int v740;
  unsigned int v741;
  int v742;
  unsigned int v743;
  unsigned int v744;
  int v745;
  unsigned int v746;
  int v747;
  unsigned int v748;
  int v749;
  int v750;
  unsigned int v751;
  int v752;
  int v753;
  int v754;
  int v755;
  unsigned int v756;
  int v757;
  int v758;
  unsigned int v759;
  unsigned int v760;
  unsigned int v761;
  unsigned int v762;
  unsigned int v763;
  unsigned int v764;
  unsigned int v765;
  unsigned int v766;
  unsigned int v767;
  unsigned int v768;
  unsigned int v769;
  int v770;
  unsigned int v771;
  unsigned int v772;
  unsigned int v773;
  int v774;
  int v775;
  unsigned int v776;
  unsigned int v777;
  unsigned int v778;
  unsigned int v779;
  int v780;
  unsigned int v781;
  unsigned int v782;
  unsigned int v783;
  unsigned int v784;
  unsigned int v785;
  unsigned int v786;
  unsigned int v787;
  int v788;
  unsigned int v789;
  unsigned int v790;
  unsigned int v791;
  unsigned int v792;
  unsigned int v793;
  int v794;
  unsigned int v795;
  int v796;
  int v797;
  unsigned int v798;
  unsigned int v799;
  unsigned int v800;
  unsigned int v801;
  int v802;
  unsigned int v803;
  int v804;
  unsigned int v805;
  unsigned int v806;
  unsigned int v807;
  unsigned int v808;
  unsigned int v809;
  unsigned int v810;
  unsigned int v811;
  unsigned int v812;
  unsigned int v813;
  unsigned int v814;
  unsigned int v815;
  unsigned int v816;
  unsigned int v817;
  unsigned int v818;
  unsigned int v819;
  unsigned int v820;
  int v821;
  int v822;
  int v823;
  int v824;
  unsigned int v825;
  int v826;
  int v827;
  unsigned int v828;
  int v829;
  unsigned int v830;
  unsigned int v831;
  unsigned int v832;
  unsigned int v833;
  int v834;
  unsigned int v835;

  v12 = (LODWORD(STACK[0x700]) ^ 0x65CD7460) - 508067712 + v4 - v11;
  v13 = (STACK[0x4C0] & (2 * v12)) + (v12 ^ 0xFFBF7BDF);
  LODWORD(STACK[0x644]) = v9;
  v14 = v7 - v9;
  v15 = v7 - v9 - a1;
  v16 = v15 + v9;
  v17 = v15 + v9 + a3 - ((2 * (v15 + v9 + a3) + 1946095244) & 0x7D28CF02) - 124522809;
  LODWORD(STACK[0x6A8]) = v17;
  v18 = 431 * (HIBYTE(v17) & 0xF ^ 0xE) + 279719;
  LODWORD(STACK[0x6B4]) = v10;
  v19 = STACK[0x718];
  v20 = ((*(unsigned __int8 *)(STACK[0x718] + (v18 - 957 * ((4487950 * (unint64_t)v18) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (431 * ((v17 >> 28) ^ 0xB) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v17 >> 28) ^ 0xB) + 279719)) >> 32))) ^ 0x78) << 12);
  v21 = 431 * ((v17 >> 20) & 0xF ^ 9) + 279719;
  v22 = 431 * (HIWORD(v17) & 0xF ^ 4) + 279719;
  v23 = v20 | *(unsigned __int8 *)(STACK[0x718] + (v22 - 957 * ((4487950 * (unint64_t)v22) >> 32))) ^ 0x78;
  v24 = 431 * ((v17 >> 8) & 0xF ^ 7) + 279719;
  v25 = (v23 << 8) ^ ((*(unsigned __int8 *)(STACK[0x718]
                                          + (v21 - 957 * ((4487950 * (unint64_t)v21) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(STACK[0x718] + (v24 - 957 * ((4487950 * (unint64_t)v24) >> 32))) ^ 0x78;
  v26 = (v25 << 8) + 710637345 - ((v25 << 9) & 0x54B6EE00);
  LODWORD(STACK[0x5AC]) = v11;
  v27 = v11 + 1885156076 + v13;
  v28 = a2 - v27 + 808612609;
  LODWORD(STACK[0x688]) = v28;
  v29 = v28 - ((2 * (a2 - v27) - 883259230) & 0x950A5D60);
  v30 = 431 * (HIBYTE(v29) & 0xF ^ 0xA) + 279719;
  v31 = 431 * ((v29 >> 20) & 0xF ^ 8) + 279719;
  v32 = ((*(unsigned __int8 *)(v19 + (v30 - 957 * ((4487950 * (unint64_t)v30) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (431 * ((v29 >> 28) ^ 0xC) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v29 >> 28) ^ 0xC) + 279719)) >> 32))) ^ 0x78) << 12);
  LODWORD(STACK[0x670]) = v29;
  v33 = 431 * (HIWORD(v29) & 0xF ^ 5) + 279719;
  v34 = v32 | *(unsigned __int8 *)(v19 + (v33 - 957 * ((4487950 * (unint64_t)v33) >> 32))) ^ 0x78;
  v35 = 431 * ((v29 >> 8) & 0xF ^ 0xE) + 279719;
  v36 = (v34 << 8) ^ ((*(unsigned __int8 *)(v19 + (v31 - 957 * ((4487950 * (unint64_t)v31) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (v35 - 957 * ((4487950 * (unint64_t)v35) >> 32))) ^ 0x78;
  v37 = (v36 << 8) + 1872573206 - ((v36 << 9) & 0xDF3A6600);
  LODWORD(STACK[0x698]) = v37;
  LODWORD(STACK[0x640]) = v26;
  v38 = (HIWORD(v37) & 0xF0 | (v26 >> 20) & 0xF) ^ 0x95;
  v39 = (v38 + 1725725859 - ((2 * v38) & 0x146)) ^ 0x66DC7CA3;
  LODWORD(STACK[0x660]) = 431 * v39;
  v40 = 431 * v39 + 534777639 - ((862 * v39) & 0x3FC01E4E);
  LODWORD(STACK[0x668]) = (v40 ^ 0x1FE00F27u) % (v40 & 0x280 ^ 0x1BD | v40 & 0x280 ^ 0x200u);
  v41 = ((2 * (v6 - v14 + 555778352)) & 0xED5FDFF8) + ((v6 - v14 + 555778352) ^ 0xF6AFEFFC);
  LODWORD(STACK[0x6A0]) = v41;
  v42 = v14 + v5;
  v43 = LODWORD(STACK[0x708]) - (v4 - v11) - ((2 * (LODWORD(STACK[0x708]) - (v4 - v11)) + 471055924) & 0x27063B66);
  v44 = v4 + v13;
  v45 = v42 + v15 + v9 - ((2 * (v42 + v15 + v9) - 1414139230) & 0xABE2B20C) + 734810711;
  v46 = ((v26 >> 20) & 0xC45 ^ 0xD42D8C40 | (v26 >> 20) & 0xC45 ^ 5) ^ (v44 + v27 + 177835490);
  LODWORD(STACK[0x65C]) = v43 + 1099758797;
  v47 = ((v43 + 1099758797) ^ 0x13831DB3)
      - v46
      - ((2 * (((v43 + 1099758797) ^ 0x13831DB3) - v46) + 412554984) & 0x26B9F266);
  v48 = v45 ^ (-813858566 - v15 - ((-216510488 - 2 * v15) & 0xABE2B20C));
  v49 = (v45 ^ 0x81DCD543) - ((2 * (v45 ^ 0x81DCD543) + 383748446) & 0x18C28A26);
  v50 = (v45 ^ 0x7E232ABC) + v41 - ((2 * ((v45 ^ 0x7E232ABC) + v41) + 1914172944) & 0xCD861C1E) - 1613821673;
  LODWORD(STACK[0x650]) = v50;
  v51 = (v48 ^ 0x2BD273BA)
      + (v50 ^ 0xE6C30E0F)
      + 1279959670
      - ((2 * ((v48 ^ 0x2BD273BA) + (v50 ^ 0xE6C30E0F) + 1)) & 0x989544EA);
  v52 = v27 - ((2 * v27 + 51219140) & 0x4D1FEAEE);
  LODWORD(STACK[0x648]) = v47 - 1079475033;
  v53 = v46 ^ (v11 - v27 + 401569488);
  v54 = ((v47 - 1079475033) ^ 0x135CF933)
      - v53
      - 392128660
      - ((2 * (((v47 - 1079475033) ^ 0x135CF933) - v53)) & 0xD1412ED8);
  LODWORD(STACK[0x638]) = v16;
  v55 = v16 - ((2 * v16 + 521427860) & 0x8AFE9842) - 720799253;
  v49 += 1473317314;
  v56 = ((2 * ((v55 ^ 0xC57F4C21) + (v49 ^ 0xF39EBAEC) + 1)) & 0xFC6FD9F6)
      + (((v55 ^ 0xC57F4C21) + (v49 ^ 0xF39EBAEC) + 1) ^ 0xFE37ECFB);
  LODWORD(STACK[0x618]) = v52 + 672578265;
  v57 = ((2 * (v52 + 672578265)) & 0xDD9030C6 ^ 0x4D1020C6) + ((v52 + 672578265) ^ 0xC847ED14);
  v58 = v57 + 928986583 - ((2 * v57) & 0x6EBE6BAE);
  v59 = (v51 ^ 0x4C4AA275) + v56 + 29889285 + 2002705231 - ((2 * ((v51 ^ 0x4C4AA275) + v56 + 29889285)) & 0xEEBDB69E);
  v60 = v46 - ((2 * v46 - 1763735202) & 0xEB6C4762) - 1054480288;
  v61 = ((2 * ((v58 ^ 0x375F35D7) + (v60 ^ 0x8A49DC4E) + 1)) & 0x66BFF8FC)
      + (((v58 ^ 0x375F35D7) + (v60 ^ 0x8A49DC4E) + 1) ^ 0x335FFC7E);
  v62 = v54 ^ v60;
  LODWORD(STACK[0x700]) = v54 ^ v60;
  v63 = (v54 ^ 0xE8A0976C) + v61 - 861928574 + 1842562214 - ((2 * ((v54 ^ 0xE8A0976C) + v61 - 861928574)) & 0xDBA6894C);
  v64 = v55 ^ v48;
  LODWORD(STACK[0x654]) = v59;
  v65 = v51 ^ v49 ^ v59;
  LODWORD(STACK[0x6DC]) = v65;
  v65 ^= 0x37753C29u;
  LODWORD(STACK[0x6F4]) = v65;
  v66 = v65 + (v64 ^ 0x3F840C18 ^ (v56 + 29889285)) - ((2 * (v65 + (v64 ^ 0x3F840C18 ^ (v56 + 29889285)))) & 0x9121706A);
  LODWORD(STACK[0x658]) = v63;
  v67 = (v63 ^ 0x6DD344A6) + v61 - 861928574;
  v68 = v62 ^ 0xF0C5F07B ^ v63;
  LODWORD(STACK[0x6D0]) = v68;
  v69 = v68 + (v58 ^ v53 ^ 0x1989F9AB ^ (v61 - 861928574));
  v70 = ((2 * v69) & 0x37DBBCE2) + (v69 ^ 0x1BEDDE71);
  LODWORD(STACK[0x628]) = v59 ^ 0x775EDB4F;
  v71 = (v59 ^ 0x775EDB4F) + v56 + 29889285;
  LODWORD(STACK[0x5D8]) = v66 - 930039755;
  v72 = (v66 - 930039755) ^ 0x9F2E4DAE;
  LODWORD(STACK[0x5E0]) = v72;
  v73 = v71 + 447330876 + ((v66 - 930039755) ^ 0x376F47CA) + v72 + 1;
  v74 = ((2 * v73) & 0xF5DECEFA) + (v73 ^ 0xFAEF677D);
  LODWORD(STACK[0x5F8]) = v74;
  v75 = v74 + v8 + 1327938672 + (~(2 * (v74 + v8) + 1250933702) | 0xAC4242E7);
  v76 = ((v70 - 468573809) ^ 0x57BEF59B) - 1306279078 - ((2 * ((v70 - 468573809) ^ 0x57BEF59B)) & 0x644786B4);
  v77 = v76 ^ 0xB223C35A;
  v78 = ((2 * (v67 - v70 + 915904685 + (v76 ^ 0xB223C35A))) & 0xFFA57778)
      + ((v67 - v70 + 915904685 + (v76 ^ 0xB223C35A)) ^ 0xFFD2BBBC);
  v79 = 431 * (HIBYTE(v75) & 0xF ^ 9) + 279719;
  v80 = a4 - 717026081 - v78 - ((2 * (a4 - 717026081 - v78) + 1323493692) & 0x4D378246);
  LODWORD(STACK[0x6E0]) = v75;
  v81 = 431 * ((v75 >> 20) & 0xF ^ 0xD) + 279719;
  v82 = ((*(unsigned __int8 *)(v19 + (v79 - 957 * ((4487950 * (unint64_t)v79) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (431 * ((v75 >> 28) ^ 0xA) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v75 >> 28) ^ 0xA) + 279719)) >> 32))) ^ 0x78) << 12);
  v83 = 431 * (HIWORD(v75) & 0xF ^ 0xE) + 279719;
  v84 = v82 | *(unsigned __int8 *)(v19 + (v83 - 957 * ((4487950 * (unint64_t)v83) >> 32))) ^ 0x78;
  v85 = 431 * (((unsigned __int16)v75 >> 12) ^ 0xD) + 279719;
  v86 = 431 * ((v75 >> 8) & 0xF ^ 0xE) + 279719;
  v87 = (v84 << 8) ^ ((*(unsigned __int8 *)(v19 + (v81 - 957 * ((4487950 * (unint64_t)v81) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (v86 - 957 * ((4487950 * (unint64_t)v86) >> 32))) ^ 0x78;
  v88 = 431 * (((v80 + 235746753) >> 28) ^ 2) + 279719;
  v89 = 431 * (((v80 + 235746753) >> 24) & 0xF ^ 6) + 279719;
  v90 = 431 * (((v80 + 235746753) >> 20) & 0xF ^ 9) + 279719;
  v91 = 431 * (((v80 + 235746753) >> 16) & 0xF ^ 0xB) + 279719;
  v92 = ((((*(unsigned __int8 *)(v19 + (v89 - 957 * ((4487950 * (unint64_t)v89) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (v88 - 957 * ((4487950 * (unint64_t)v88) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (v91 - 957 * ((4487950 * (unint64_t)v91) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (v90 - 957 * ((4487950 * (unint64_t)v90) >> 32))) ^ 0x78) << 12);
  LODWORD(STACK[0x624]) = v80 + 235746753;
  v93 = 431 * (((unsigned __int16)(a4 + 3295 - v78 - ((2 * (a4 + 3295 - v78) - 5828) & 0x8246) + 13761) >> 12) ^ 0xC)
      + 279719;
  v94 = 431 * (((v80 + 235746753) >> 8) & 0xF ^ 1) + 279719;
  v95 = v92 | *(unsigned __int8 *)(v19 + (v94 - 957 * ((4487950 * (unint64_t)v94) >> 32))) ^ 0x78;
  v96 = (v95 << 8) - 1058786544 - ((v95 << 9) & 0x81C86600);
  LODWORD(STACK[0x62C]) = v96;
  v97 = *(unsigned __int8 *)(v19 + (v85 - 957 * ((4487950 * (unint64_t)v85) >> 32))) ^ 0x78;
  v98 = (v87 << 8) - ((v87 << 9) & 0x54090E00) + 704939810;
  LODWORD(STACK[0x634]) = v98;
  v99 = v98 ^ (v97 << 12);
  v100 = v96 ^ ((*(unsigned __int8 *)(v19 + (v93 - 957 * ((4487950 * (unint64_t)v93) >> 32))) ^ 0x78) << 12);
  LODWORD(STACK[0x614]) = v100;
  v101 = ((v100 >> 8) & 0xF0 | ((unsigned __int16)v99 >> 12)) ^ 0x38;
  v102 = (v101 + 1256475221 - ((2 * v101) & 0xAAAAAAAA)) ^ 0x4AE44A55;
  LODWORD(STACK[0x60C]) = 431 * v102;
  v103 = 431 * v102 - 1910179294 - ((862 * v102) & 0x1C49F444);
  LODWORD(STACK[0x610]) = (v103 ^ 0x8E24FA22) % ((v103 & 0x3BD ^ 0x19D) + (v103 & 0x3BD ^ 0x220u));
  LODWORD(STACK[0x630]) = v99;
  v104 = ((v100 >> 12) & 0xF0 | HIWORD(v99) & 0xF) ^ 0x44;
  v105 = (v104 - 769720154 - 2 * (v104 & 0xA7 ^ HIWORD(v99) & 1)) ^ 0xD21F00A6;
  LODWORD(STACK[0x608]) = 431 * v105;
  v106 = ((431 * v105) ^ 0xDF5E9FFF) + ((862 * v105) & 0xBEBD3FFE);
  LODWORD(STACK[0x600]) = (v106 + 547737710) % (((913 - v106) | (v106 + 110)) & 0x2B4 | 0x109);
  v107 = *(unsigned __int8 *)(STACK[0x710] + 1459) ^ 0x78;
  v108 = 16 * v107 + 1886168545 - ((32 * v107) & 0xBC0);
  v109 = v56 + LODWORD(STACK[0x55C]) - ((2 * (v56 + LODWORD(STACK[0x55C])) + 626262534) & 0x982646B4) + 1589453917;
  v110 = (v109 ^ 0xCC13235A) >> ((v51 & 0xBB ^ 0x31 | v51 & 0xBB ^ 0x8A) + 93);
  v111 = LODWORD(STACK[0x558]) - v61 - ((2 * (LODWORD(STACK[0x558]) - v61) - 1360233364) & 0x93C894B6);
  v112 = (2 * v110) & 0xF0;
  v110 += 1603003384;
  v113 = 431 * (~((v110 - v112) >> 4) & 0xF) + 279719;
  LODWORD(STACK[0x5DC]) = v109;
  v114 = 431 * ((v109 >> 20) & 0xF ^ 1) + 279719;
  v115 = 431 * (HIWORD(v109) & 0xF ^ 3) + 279719;
  v116 = ((*(unsigned __int8 *)(v19
                              + (431 * (v110 & 0xF ^ 8)
                                             + 279719
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * (v110 & 0xF ^ 8) + 279719)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (v113 - 957 * ((4487950 * (unint64_t)v113) >> 32))) ^ 0x78) << 12);
  v117 = 431 * (((unsigned __int16)v109 >> 12) ^ 2) + 279719;
  v118 = v116 | *(unsigned __int8 *)(v19 + (v115 - 957 * ((4487950 * (unint64_t)v115) >> 32))) ^ 0x78;
  v119 = 431 * ((v109 >> 8) & 0xF ^ 3) + 279719;
  v120 = (v118 << 8) ^ ((*(unsigned __int8 *)(v19
                                            + (v114 - 957 * ((4487950 * (unint64_t)v114) >> 32))) ^ 0x78) << 12);
  v121 = 431 * ((v109 >> 4) ^ 5) + 279719;
  v122 = v120 | *(unsigned __int8 *)(v19 + (v119 - 957 * ((4487950 * (unint64_t)v119) >> 32))) ^ 0x78;
  v123 = (v122 << 8) + 1076027713 - ((v122 << 9) & 0x8045C200);
  LODWORD(STACK[0x5B0]) = v123;
  v124 = *(unsigned __int8 *)(v19
                            + (431 * (v109 & 0xF ^ 0xA)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v109 & 0xF ^ 0xA) + 279719)) >> 32))) ^ 0x78;
  v125 = v124 - 2091014151 - ((2 * v124) & 0xFFFFFFF3);
  v126 = v123 ^ ((*(unsigned __int8 *)(v19 + (v117 - 957 * ((4487950 * (unint64_t)v117) >> 32))) ^ 0x78) << 12);
  LODWORD(STACK[0x5A0]) = v126;
  v111 += 559581329;
  v127 = 431 * (HIBYTE(v111) & 0xF ^ 9) + 279719;
  v128 = (v126 ^ 0x4022E141 | v125 ^ 0x835DA7F9) ^ (16
                                                  * (*(unsigned __int8 *)(v19
                                                                        + (v121
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v121) >> 32))) ^ 0x78));
  v129 = 431 * ((v111 >> 20) & 0xF ^ 0xE) + 279719;
  v130 = 431 * (HIWORD(v111) & 0xF ^ 4) + 279719;
  v131 = ((*(unsigned __int8 *)(v19 + (v127 - 957 * ((4487950 * (unint64_t)v127) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (431 * ((v111 >> 28) ^ 4) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v111 >> 28) ^ 4) + 279719)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (v130 - 957 * ((4487950 * (unint64_t)v130) >> 32))) ^ 0x78;
  v132 = 431 * (((unsigned __int16)v111 >> 12) ^ 4) + 279719;
  v133 = 431 * ((v111 >> 8) & 0xF ^ 0xA) + 279719;
  v134 = *(unsigned __int8 *)(v19 + (v133 - 957 * ((4487950 * (unint64_t)v133) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v132 - 957 * ((4487950 * (unint64_t)v132) >> 32))) ^ 0x78));
  LODWORD(STACK[0x528]) = v134;
  v135 = 431 * ((v111 >> 4) ^ 5) + 279719;
  v136 = (v131 << 8) ^ ((*(unsigned __int8 *)(v19
                                            + (v129 - 957 * ((4487950 * (unint64_t)v129) >> 32))) ^ 0x78) << 12);
  v137 = v134 ^ 0x5F79EFFC ^ (v136 - ((2 * v136) & 0xF3DE00) + 24768388);
  v138 = (v137 << 8) + 1744239321 - ((v137 << 9) & 0xCFEDF400);
  LODWORD(STACK[0x538]) = v138;
  v139 = *(unsigned __int8 *)(v19
                            + (431 * (v111 & 0xF ^ 0xB)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v111 & 0xF ^ 0xB) + 279719)) >> 32))) ^ 0x78;
  v140 = v139 - 1611857132 - ((2 * v139) & 0x28);
  v141 = (v138 ^ 0x67F6FAD9 | v140 ^ 0x9FED0314) ^ (16
                                                  * (*(unsigned __int8 *)(v19
                                                                        + (v135
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v135) >> 32))) ^ 0x78));
  LODWORD(STACK[0x53C]) = v125 & 0xF;
  v142 = 431
       * ((((v125 & 0xF | (16 * (v140 & 0xF))) ^ 0x49)
         - 218739227
         - 2 * (((v125 & 0xF | (16 * (v140 & 0xF))) ^ 0x49) & 0xFFFFFFE7 ^ ((_BYTE)v125 + 20) & 2)) ^ 0xF2F64DE5);
  v143 = *(unsigned __int8 *)(v19 + (v142 + 290925) % 0x3BD) ^ v108 ^ 0x706CA5E1;
  LODWORD(STACK[0x6C8]) = v108 ^ 0x706CA5E1;
  v144 = 431 * (v143 ^ 0x78);
  LODWORD(STACK[0x524]) = v144;
  v145 = 431
       * ((((*(_BYTE *)(v19 + v144 % 0x3BD) >> 4) ^ 7)
                          - ((*(_BYTE *)(v19 + v144 % 0x3BD) >> 3) & 0x10)
                          + 120) ^ *(unsigned __int8 *)(v19 + v142 % 0x3BD))
       + 290925;
  v146 = *(unsigned __int8 *)(v19 + (v145 - 957 * ((4487950 * (unint64_t)v145) >> 32))) ^ 0x78;
  v147 = 16 * v146 - 672550023 - ((32 * v146) & 0x6E0);
  v148 = 431
       * (((v141 & 0xF0 | (v128 >> 4))
         + 577682597
         - 2 * ((v141 & 0xA0 | (v128 >> 4) & 0xA7) ^ (v128 >> 4) & 2)) ^ 0x226EBCA5);
  v149 = 431 * (*(unsigned __int8 *)(v19 + (v148 + 290925) % 0x3BD) ^ 0xD7E9B379 ^ v147 ^ 0x78);
  v150 = v149 % (v147 & 0x3B0 ^ 0x8D | v147 & 0x3B0 ^ 0x330u);
  v151 = *(unsigned __int8 *)(v19 + (v149 + 290925) % 0x3BD) ^ 0x78;
  v152 = 16 * v151 + 664790047 - ((32 * v151) & 0x820);
  LODWORD(STACK[0x534]) = v152;
  v153 = 431
       * ((((*(_BYTE *)(v19 + v150) >> 4) ^ 7) - ((*(_BYTE *)(v19 + v150) >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v148 % 0x3BD))
       + 290925;
  LODWORD(STACK[0x548]) = v128;
  v154 = (v141 >> 4) & 0xF0 | (v128 >> 8) & 0xF;
  v155 = 431 * ((v154 - 1776060643 - ((2 * v154) & 0x3A)) ^ 0x9623771D);
  LODWORD(STACK[0x518]) = v155;
  v156 = 431
       * (*(unsigned __int8 *)(v19 + (v155 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v153 - 957 * ((4487950 * (unint64_t)v153) >> 32))) ^ 0x78)) ^ 0x78);
  LODWORD(STACK[0x514]) = v156;
  v157 = *(unsigned __int8 *)(v19
                            + (v156
                                           + 290925
                                           - 957 * ((4487950 * (unint64_t)(v156 + 290925)) >> 32))) ^ 0x78;
  v158 = (v157 << 8) - (STACK[0x4BC] & (v157 << 9)) - 1222984619;
  LODWORD(STACK[0x52C]) = v158;
  v159 = ((((v158 ^ v152) >> 4) & 0xF0 | (v128 >> 8) & 0xF) ^ 0x80)
       + 1574520362
       - 2
       * ((((v158 ^ v152) >> 4) & 0x30 | (v128 >> 8) & 0xA) ^ ((v158 ^ v152) >> 4) & 0x10);
  LODWORD(STACK[0x530]) = v159;
  v160 = LODWORD(STACK[0x628])
       - 1341789993
       + (((v159 & 0x21 ^ 0x20) + (v159 & 0x21 ^ 0x66DC1501)) & 0x46481121 | 0x9B20608);
  v161 = (v160 - ((2 * v160) & 0x7E137960) + 1057602736) ^ LODWORD(STACK[0x6DC]);
  v162 = ((2 * ((v161 ^ 0x3E73C96C) - v71 - 447330876)) & 0xFF15BF96)
       + (((v161 ^ 0x3E73C96C) - v71 - 447330876) ^ 0xFF8ADFCB);
  LODWORD(STACK[0x5C0]) = v67;
  v163 = v76 ^ (LODWORD(STACK[0x6D0]) - v67 - ((2 * (LODWORD(STACK[0x6D0]) - v67) + 961755942) & 0x644786B4) + 1322082541);
  LODWORD(STACK[0x5FC]) = v163;
  v164 = (LODWORD(STACK[0x700]) ^ 0xAB19FD28) - v67;
  LODWORD(STACK[0x5F0]) = v164;
  v165 = ((2 * (v77 - v164 + 447330876)) & 0x9CECD52E) + ((v77 - v164 + 447330876) ^ 0x4E766A97);
  v166 = v165 + 2 * v163 - ((2 * (v165 + 2 * v163) + 861881794) & 0x6D82FBBC) + 275849407;
  LODWORD(STACK[0x628]) = v166;
  v167 = ((2 * (v166 ^ (v78 - 1313416787 + v165))) & 0xF7DFBED6 ^ 0x6582BA94)
       + (v166 ^ (v78 - 1313416787 + v165) ^ 0xCD2EA2B5);
  LODWORD(STACK[0x5F4]) = v162;
  v168 = LODWORD(STACK[0x560]) - v167;
  LODWORD(STACK[0x6DC]) = v167;
  v169 = v168 + 312753708;
  v170 = (2 * v168 + 967707280) & 0xEB9A71C6;
  v171 = ~v170 + v168 + 312753708;
  LODWORD(STACK[0x5EC]) = (431 * ((v171 >> 4) ^ 0xEu) + 279719)
                        % (((194 - v162) | (v162 + 829)) & 0x3BD);
  v172 = v71;
  v173 = LODWORD(STACK[0x5D8]) ^ 0x637359D5 ^ (LODWORD(STACK[0x6F4])
                                             - v71
                                             - ((2 * (LODWORD(STACK[0x6F4]) - v71) + 961755942) & 0xF8BA28F6)
                                             - 1727614450);
  v174 = ((2 * (LODWORD(STACK[0x5E0]) - 7675957 - v162)) & 0xFBFFFBEE)
       + ((LODWORD(STACK[0x5E0]) - 7675957 - v162) ^ 0xFDFFFDF7);
  v175 = STACK[0x6E0] & 0xF ^ 0xC;
  LODWORD(STACK[0x508]) = 278762;
  v176 = ((2 * (((_BYTE)v80 - 31) & 0xF)) ^ 6) + (((_BYTE)v80 - 31) & 0xF ^ 0x5FFFBC3C);
  v177 = (((v176 + 74) & 0x8F ^ (437 - v176) & 0x12F) & (((536852917 - v176) & 0x2550A96F) + ((v176 + 74) & 0x8F)))
       * (v176 - 1610594742);
  v178 = *(unsigned __int8 *)(v19 + (431 * v175 + 278762) % 0x3BDu) ^ 0x78;
  v179 = v178 - ((2 * v178) & 0x142);
  v180 = *(unsigned __int8 *)(v19 + (v177 - 957 * ((4487950 * (unint64_t)v177) >> 32))) ^ 0x78;
  v181 = v179 + 1632101025;
  LODWORD(STACK[0x560]) = v179 + 1632101025;
  v182 = (v179 + 1632101025) & 0xD | ((_BYTE)v179 - 75) & 2;
  v183 = v180 + 1633011382 + (~(2 * v180) | 0xFFFFFE93) + 1;
  LODWORD(STACK[0x558]) = v183;
  v184 = 431
       * ((((v182 & 0xFFFFFF0F | (16 * (v183 & 0xF))) ^ 0x61)
         - 1438868229
         + ((2 * ((v182 & 0xFFFFFF0F | (16 * (v183 & 0xF))) ^ (v181 | 0x7FFFFFFB))) ^ 0xCB)
         + 1) ^ 0xAA3C9CFB);
  LODWORD(STACK[0x54C]) = v184;
  v185 = 431 * (*(unsigned __int8 *)(v19 + (v184 + 290925) % 0x3BD) ^ v108 ^ 0x706CA5E1 ^ 0x78);
  LODWORD(STACK[0x55C]) = v185;
  v186 = *(unsigned __int8 *)(v19 + (v185 + 290925) % 0x3BDu) ^ 0x78;
  v187 = v186 - ((2 * v186) & 0xCE) + 2020815207;
  LODWORD(STACK[0x5A4]) = v187;
  v188 = 431 * ((v182 & 0xFFFFFF0F | (16 * (v187 & 0xF))) ^ 0x71) + 168952;
  v189 = *(unsigned __int8 *)(v19 + (v188 - 957 * ((4487950 * (unint64_t)v188) >> 32)));
  LODWORD(STACK[0x5A8]) = v189;
  v190 = 431 * (v189 & 0xF ^ 8)
       + 404709
       - 957 * ((4487950 * (unint64_t)(431 * (v189 & 0xF ^ 8u) + 404709)) >> 32);
  LODWORD(STACK[0x5D4]) = v190 - 1531227261 - ((2 * v190) & 0x706);
  v191 = (((_WORD)v190 + 21379 - ((2 * (_WORD)v190) & 0x706)) & 0x2BC ^ 0x5413043C | ((_WORD)v190
                                                                                    + 21379
                                                                                    - ((2 * (_WORD)v190) & 0x706)) & 0x2BC ^ 0x280)
       + v173;
  LODWORD(STACK[0x5D0]) = v191;
  v192 = LODWORD(STACK[0x5F8]) + 118528652 + v174;
  v193 = v174 + 33554452 + 2 * v191 + 501 - ((2 * (v174 + 33554452 + 2 * v191 + 501)) & 0x88679C24) + 1144245778;
  LODWORD(STACK[0x5F8]) = v193;
  v194 = ((2 * (v193 ^ v192)) & 0x9FFFF5F4 ^ 0x88679424) + (v193 ^ v192 ^ 0xBCC34E8);
  v195 = v194 + LODWORD(STACK[0x564]);
  LODWORD(STACK[0x6D0]) = v194;
  v196 = v195 - ((2 * v195 + 1937403094) & 0x5001D1EA) - 507633824;
  LODWORD(STACK[0x6F4]) = v196;
  v197 = 431 * ((v196 >> 28) ^ 2)
       + 279719
       - 957 * ((4487950 * (unint64_t)(431 * ((v196 >> 28) ^ 2) + 279719)) >> 32);
  v198 = 431 * (HIBYTE(v196) & 0xF ^ 8) + 279719;
  v199 = 431 * (HIWORD(v196) & 0xF)
       + 279719
       - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v196) & 0xF) + 279719)) >> 32);
  v200 = *(unsigned __int8 *)(v19
                            + (431 * ((v196 >> 20) & 0xF)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * ((v196 >> 20) & 0xF) + 279719)) >> 32)));
  LODWORD(STACK[0x5CC]) = v200;
  v201 = (v200 ^ 0x78) - 1048944704 - ((2 * (v200 ^ 0x78)) & 0x180);
  LODWORD(STACK[0x5C8]) = v201;
  v202 = ((*(unsigned __int8 *)(v19 + (v198 - 957 * ((4487950 * (unint64_t)v198) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + v197) ^ 0x78) << 12);
  v203 = *(unsigned __int8 *)(v19 + v199) ^ 0x78;
  v204 = v170 - v169;
  v205 = ((16 * v201) ^ 0x17A5FC00) - 2 * (((16 * v201) ^ 0x17A5FC00) & 0x7FA70 ^ (16 * v201) & 0x10) + 2104490603;
  LODWORD(STACK[0x5C4]) = v205;
  v206 = v205 ^ ((v202 | v203) + 127173 - 2 * ((v202 | v203) & 0xFFA7B ^ v203 & 0x10) + 2470);
  v207 = (v206 << 16) - 2055833406 - ((v206 << 17) & 0xAEC0000);
  LODWORD(STACK[0x5D8]) = v207;
  v208 = 431 * (HIBYTE(v171) & 0xF ^ 5) + 279719;
  LODWORD(STACK[0x5E8]) = v171;
  v209 = 431 * ((v171 >> 20) & 0xF ^ 0xC) + 279719;
  v210 = v209 - 957 * ((4487950 * (unint64_t)v209) >> 32);
  v211 = v210 - 1428822200 - ((2 * v210) & 0x690);
  v212 = ((*(unsigned __int8 *)(v19 + (v208 - 957 * ((4487950 * (unint64_t)v208) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (431 * (v204 >> 28) + 279719 - 957 * ((4487950 * (unint64_t)(431 * (v204 >> 28) + 279719)) >> 32))) ^ 0x78) << 12);
  v213 = 431 * ((v211 & 0x289 ^ 0x81 | v211 & 0x289 ^ 0x208) + (HIWORD(v171) & 0xF ^ 0xD));
  v214 = ((v212 | *(unsigned __int8 *)(v19 + (v213 - 957 * ((4487950 * (unint64_t)v213) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (v211 ^ 0xAAD5E748)) ^ 0x78) << 12);
  v215 = 431 * ((v171 >> 8) & 0xF ^ 8) + 279719;
  v216 = v214 | *(unsigned __int8 *)(v19 + (v215 - 957 * ((4487950 * (unint64_t)v215) >> 32))) ^ 0x78;
  v217 = (v216 << 8) + 1935273080 - ((v216 << 9) & 0xE6B3D800);
  LODWORD(STACK[0x5E0]) = v217;
  v218 = v217 >> 20;
  v219 = (v217 >> 20) & 0xF0 | HIBYTE(v207) & 0xF;
  v220 = 431 * (((v219 ^ 0x35) + 1159731695 + ((2 * ((v219 ^ 0x35 | 0x7FFFFFEF) ^ v219)) ^ 0x4B) + 1) ^ 0x452019EF);
  LODWORD(STACK[0x5B8]) = v220;
  LODWORD(STACK[0x5B4]) = (v220 + 290925) % ((v218 & 0xB0 ^ 0x30) + (v218 & 0xB0 ^ 0x38D));
  v221 = LODWORD(STACK[0x550]) + LODWORD(STACK[0x6B8]) - 889457160 + v172;
  v222 = LODWORD(STACK[0x678])
       - v167
       - 2 * ((LODWORD(STACK[0x678]) - v167 + 120432256) & 0x4AC75C0C ^ (LODWORD(STACK[0x678]) - v167) & 8);
  v223 = v221 - ((2 * v221) & 0x92A431DC) - 917366546;
  LODWORD(STACK[0x4EC]) = v223;
  v224 = v161 ^ v223;
  LODWORD(STACK[0x6B8]) = v224;
  v225 = v222 - 772472188;
  v226 = (431 * ((v222 - 772472188) & 0xF ^ 4u) + 279719) % ((v224 & 0x3BD ^ 0x180) + (v224 & 0x3BD ^ 0x23Du));
  v227 = v194 + LODWORD(STACK[0x680]) - ((2 * (v194 + LODWORD(STACK[0x680])) + 1581589062) & 0xF9039CCC) - 1415290999;
  LODWORD(STACK[0x680]) = v227;
  v228 = 431 * (HIBYTE(v227) & 0xF ^ 0xC) + 279719;
  v229 = 431 * ((v227 >> 20) & 0xF ^ 8) + 279719;
  v230 = ((*(unsigned __int8 *)(v19 + (v228 - 957 * ((4487950 * (unint64_t)v228) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (431 * ((v227 >> 28) ^ 7) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v227 >> 28) ^ 7) + 279719)) >> 32))) ^ 0x78) << 12);
  v231 = 431 * (HIWORD(v227) & 0xF ^ 1) + 279719;
  v232 = v230 | *(unsigned __int8 *)(v19 + (v231 - 957 * ((4487950 * (unint64_t)v231) >> 32))) ^ 0x78;
  v233 = *(unsigned __int8 *)(v19 + (v229 - 957 * ((4487950 * (unint64_t)v229) >> 32)));
  v234 = v232 - ((2 * v232) & 0x1567FC) + 1159377918;
  v235 = (v234 << 8) ^ ((v233 ^ 0x78) << 12);
  v236 = 431 * (((unsigned __int16)v227 >> 12) ^ 0xC) + 279719;
  v237 = 431 * ((v227 >> 8) & 0xF ^ 0xE) + 279719;
  v238 = 431 * ((v227 >> 4) ^ 6) + 279719;
  v239 = v235 | *(unsigned __int8 *)(v19 + (v237 - 957 * ((4487950 * (unint64_t)v237) >> 32))) ^ 0x78;
  v240 = 431 * (v227 & 0xF ^ 6) + 279719 - 957 * ((4487950 * (unint64_t)(431 * (v227 & 0xF ^ 6) + 279719)) >> 32);
  v241 = 431 * ((v225 >> 28) ^ 0xC)
       + 279719
       - 957 * ((4487950 * (unint64_t)(431 * ((v225 >> 28) ^ 0xC) + 279719)) >> 32);
  v242 = v241 + 1145508428 - ((2 * v241) & 0x498);
  v243 = v239 ^ (16
               * (*(unsigned __int8 *)(v19 + (v236 - 957 * ((4487950 * (unint64_t)v236) >> 32))) ^ 0x78));
  v244 = ((v243 << 8) ^ 0xB3FE0000) - 1233975135 - ((2 * ((v243 << 8) ^ 0xB3FE0000)) & 0x6CE61000);
  v245 = (*(unsigned __int8 *)(v19 + v240) ^ 0x78) - 496396155 - ((2 * *(unsigned __int8 *)(v19 + v240)) & 0x10A);
  v246 = 431 * ((v242 & 0x289 ^ 0x208 | v242 & 0x289 ^ 0x81) + (HIBYTE(v225) & 0xF ^ 0xA));
  v247 = 431 * ((v225 >> 20) & 0xF ^ 0xC) + 279719;
  v248 = (v244 ^ 0xB67308A1 | v245 ^ 0xE2699885) ^ (16
                                                  * (*(unsigned __int8 *)(v19
                                                                        + (v238
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v238) >> 32))) ^ 0x78));
  v249 = ((*(unsigned __int8 *)(v19 + (v246 - 957 * ((4487950 * (unint64_t)v246) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (v242 ^ 0x4447124Cu)) ^ 0x78) << 12);
  v250 = 431 * (HIWORD(v225) & 0xF ^ 7) + 279719;
  v251 = ((v243 & 0x1AF ^ 0x1AF) + (v243 & 0x1AF)) * ((((unsigned __int16)v225 >> 12) ^ 5) + 649);
  v252 = v251 - 957 * ((4487950 * (unint64_t)v251) >> 32);
  v253 = ((v249 | *(unsigned __int8 *)(v19 + (v250 - 957 * ((4487950 * (unint64_t)v250) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (v247 - 957 * ((4487950 * (unint64_t)v247) >> 32))) ^ 0x78) << 12);
  v254 = 431 * ((v225 >> 8) & 0xF ^ 0xC) + 279719;
  v255 = 1651147298 - (v245 & 0xF ^ 0x900C8009 | 0x626A8222) + (v245 & 0xF ^ 0x900C8009 | 0x9D957DDD);
  v256 = v253 | *(unsigned __int8 *)(v19 + (v254 - 957 * ((4487950 * (unint64_t)v254) >> 32))) ^ 0x78;
  v257 = (v256 << 8) - 1078985866 - ((v256 << 9) & 0x7F5FF600);
  v258 = v257 ^ ((*(unsigned __int8 *)(v19 + v252) ^ 0x78) << 12);
  v259 = *(unsigned __int8 *)(v19 + v226) ^ 0x78;
  v260 = (2 * v259) & 0x1B0;
  v259 += 1441951960;
  v261 = (v258 ^ 0xBFAFFB76 | (v259 - v260) ^ 0x55F270D8) ^ (16
                                                           * (*(unsigned __int8 *)(v19
                                                                                 + (431
                                                                                                * (v225 >> 4)
                                                                                                + 279719
                                                                                                - 957
                                                                                                * ((4487950
                                                                                                  * (unint64_t)(431 * (v225 >> 4) + 279719)) >> 32))) ^ 0x78));
  v262 = 16 * (v259 & 0xF);
  v263 = v255 ^ 0xD99FDD1;
  v264 = (((v262 | v255 ^ 0xD99FDD1) ^ 0x80) + 250928070 - ((2 * ((v262 | v255 ^ 0xD99FDD1) ^ 0x80)) & 0x1DE9B78C)) ^ 0xEF4DBC6;
  v265 = v264 * (v234 & 0x1AF ^ 0x1AE | v234 & 0x1AF ^ 1);
  v266 = ((((v248 >> 4) ^ 0xCCCD294D) & 0x48BF3912) - ((2 * ((v248 >> 4) ^ 0xCCCD294D)) & 0x91721024) + 1610172535) ^ ((v248 >> 4) ^ 0xCCCD294D) & 0x48BF391D;
  v267 = 431 * (*(unsigned __int8 *)(v19 + (431 * v264 + 290925) % 0x3BDu) ^ v108 ^ 0x706CA599);
  v268 = (v267 + 290925) % 0x3BD;
  v269 = v267 % 0x3BD;
  v270 = ((v266 & 0x8C37D6F6 ^ 0x88039680) + (v266 ^ 0x17746177) - ((v266 ^ 0x17746177) & 0x8C37D6F6)) ^ 0xC4BAFFFB;
  v271 = 431
       * ((((*(_BYTE *)(v19 + v269) >> 4) ^ 7) - ((*(_BYTE *)(v19 + v269) >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v265 % 0x3BD))
       + 290925;
  v272 = 431 * (((v270 | v261 & 0xF0) + 851178865 - 2 * ((v270 & 0x32BBF573 | v261 & 0x70) ^ v270 & 2)) ^ 0x32BBF571);
  v273 = 431
       * (*(unsigned __int8 *)(v19 + (v272 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v271 - 957 * ((4487950 * (unint64_t)v271) >> 32))) ^ 0x78)) ^ 0x78);
  v274 = v273 + 290925 - 957 * ((4487950 * (unint64_t)(v273 + 290925)) >> 32);
  v275 = ((v248 >> 8) ^ 0x3FF9EDA9) & 0x2050F486 ^ 0x4C6E04 ^ (((2 * ((v248 >> 8) ^ 0x3FF9EDA9)) & 0x3680E800)
                                                             - (((v248 >> 8) ^ 0x3FF9EDA9) & 0x3B50F489)
                                                             + 538741389);
  v276 = (((2 * v275) | 0x330C9406) - v275 - 428231171) ^ 0x22D6AE83;
  v277 = *(unsigned __int8 *)(v19 + (v273 - 957 * ((4487950 * (unint64_t)v273) >> 32)));
  v278 = *(unsigned __int8 *)(v19 + v268) ^ 0x78;
  v279 = 431
       * ((((v277 >> 4) ^ 7) - ((v277 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v272 % 0x3BD))
       + 290925;
  v280 = 431
       * (((v276 | (v261 >> 4) & 0xF0) - 1664927007 - 2 * ((v276 & 0x1CC33AEF | (v261 >> 4) & 0xE0) ^ v276 & 0xE)) ^ 0x9CC33AE1);
  v281 = 431
       * (*(unsigned __int8 *)(v19 + (v280 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v279 - 957 * ((4487950 * (unint64_t)v279) >> 32))) ^ 0x78)) ^ 0x78);
  v282 = v281 + 290925 - 957 * ((4487950 * (unint64_t)(v281 + 290925)) >> 32);
  v283 = *(unsigned __int8 *)(v19 + (v281 - 957 * ((4487950 * (unint64_t)v281) >> 32)));
  v284 = (((v283 >> 4) ^ 7) - ((v283 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v280 % 0x3BD);
  v285 = ((v258 >> 8) & 0xF0 | ((unsigned __int16)v244 >> 12)) ^ 0xF0;
  v286 = 431 * ((v285 - 1869613752 - 2 * (v285 & 0x4A ^ (v244 >> 12) & 2)) ^ 0x908FF548);
  v287 = 431
       * (*(unsigned __int8 *)(v19 + (v286 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (431 * v284 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v284 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v288 = v287 + 290925 - 957 * ((4487950 * (unint64_t)(v287 + 290925)) >> 32);
  v289 = *(unsigned __int8 *)(v19 + (v287 - 957 * ((4487950 * (unint64_t)v287) >> 32)));
  v290 = 431
       * ((((v289 >> 4) ^ 7) + (~(v289 >> 3) | 0xEF) + 121) ^ *(unsigned __int8 *)(v19 + v286 % 0x3BD))
       + 290925;
  v291 = 431
       * ((-1089485809 - 2 * (HIWORD(v244) & 0xF ^ 3) + (((v258 >> 12) & 0xF0 | HIWORD(v244) & 0xF ^ 3) ^ 0xF0)) ^ 0xBF0FC40F);
  v292 = ((*(unsigned __int8 *)(v19 + v288) ^ 0x78) << 12) ^ ((*(unsigned __int8 *)(v19 + v282) ^ 0x78) << 8);
  v293 = 431
       * (*(unsigned __int8 *)(v19 + (v291 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v290 - 957 * ((4487950 * (unint64_t)v290) >> 32))) ^ 0x78)) ^ 0x78);
  v294 = v293 + 290925 - 957 * ((4487950 * (unint64_t)(v293 + 290925)) >> 32);
  v295 = *(unsigned __int8 *)(v19 + (v293 - 957 * ((4487950 * (unint64_t)v293) >> 32)));
  v296 = (((v295 >> 4) ^ 0x87) - ((v295 >> 3) & 0x10) - 8) ^ *(unsigned __int8 *)(v19 + v291 % 0x3BD);
  v297 = (HIWORD(v257) & 0xF0 | (v244 >> 20) & 0xF) ^ 0xA7;
  v298 = 431 * ((v297 - 1795372332 - ((2 * v297) & 0x1A8)) ^ 0x94FCCAD4);
  v299 = v298 % 0x3BD;
  v300 = 431
       * (*(unsigned __int8 *)(v19 + (v298 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (431 * v296 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v296 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v301 = *(unsigned __int8 *)(v19 + (v300 - 957 * ((4487950 * (unint64_t)v300) >> 32)));
  v302 = v300 + 290925 - 957 * ((4487950 * (unint64_t)(v300 + 290925)) >> 32);
  v303 = 431 * ((((v301 >> 4) ^ 7) - ((v301 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v299))
       + 290925;
  v304 = ((v257 >> 20) & 0xF0 | HIBYTE(v244) & 0xF) ^ 0xF6;
  v305 = 431 * ((v304 - 1860735089 - ((2 * v304) & 0xFFFFFF1F)) ^ 0x91176F8F);
  v306 = *(unsigned __int8 *)(v19 + (v305 + 290925) % 0x3BD) ^ (16
                                                              * (*(unsigned __int8 *)(v19
                                                                                    + (v303 - 957 * ((4487950 * (unint64_t)v303) >> 32))) ^ 0x78));
  v307 = 431 * (((2 * v306) & 0x546 ^ 0x40) + (v306 ^ 0x2DBu)) % 0x3BD;
  v308 = *(unsigned __int8 *)(v19
                            + (431 * (v306 ^ 0x78)
                                           - 957 * ((4487950 * (unint64_t)(431 * (v306 ^ 0x78u))) >> 32)));
  v309 = 431
       * ((((v308 >> 4) ^ 7) - ((v308 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v305 % 0x3BD))
       + 290925;
  v310 = 431 * ((HIBYTE(v257) & 0xF0 | (v244 >> 28)) ^ 0xBB) + 290925;
  v311 = 431
       * (*(unsigned __int8 *)(v19 + (v310 - 957 * ((4487950 * (unint64_t)v310) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v309 - 957 * ((4487950 * (unint64_t)v309) >> 32))) ^ 0x78)) ^ 0x78)
       + 290925;
  v312 = v311 - 957 * ((4487950 * (unint64_t)v311) >> 32);
  v313 = v278 - ((2 * v278) & 0x94) + 1121899338;
  v314 = v313 ^ (16 * (*(unsigned __int8 *)(v19 + v274) ^ 0x78));
  v315 = v292 ^ v314 ^ ((*(unsigned __int8 *)(v19 + v294) ^ 0x78) << 16) ^ 0x2753B07B;
  v316 = v315 ^ ((*(unsigned __int8 *)(v19 + v302) ^ 0x78) << 20);
  v317 = *(unsigned __int8 *)(v19 + v312) ^ 8;
  v318 = v316 ^ ((*(unsigned __int8 *)(v19 + v307) ^ 0x78) << 24);
  LODWORD(STACK[0x564]) = v318;
  v319 = ((v318 ^ (v317 << 28)) >> 24) & 0xF0 | (v244 >> 28);
  v320 = ((2 * v319) & 0x1D4 ^ 0xD4) + (v319 ^ 0xFF3EDF81);
  v321 = (((97 - v320) | (v320 + 414)) & 0x1AF) * (v320 + 12657054);
  LODWORD(STACK[0x504]) = ((v321 + 674708300 - ((2 * v321) & 0x506E7698)) ^ 0x28373B4Cu)
                        % (((v321 + 674708300 - ((2 * v321) & 0x506E7698)) & 0x3BD ^ 0xB1)
                         + ((v321 + 674708300 - ((2 * v321) & 0x506E7698)) & 0x3BD ^ 0x30Cu));
  v322 = (431 * ((16 * (v313 & 0xF)) ^ 0xA0 | v263) + 168952) % 0x3BD;
  v323 = (431 * (v270 | v314 & 0xF0 ^ 0x40) + 168952) % 0x3BD;
  v324 = (431 * (((v292 ^ v314) >> 4) & 0xF0 ^ 0x30 | v276) + 168952) % 0x3BD;
  LODWORD(STACK[0x678]) = v244;
  v325 = 431 * ((v292 >> 8) & 0xF0 | ((unsigned __int16)v244 >> 12)) + 168952;
  v326 = v325 - 957 * ((4487950 * (unint64_t)v325) >> 32);
  v327 = 431 * (((v315 >> 12) & 0xF0 | HIWORD(v244) & 0xF) ^ 0xD3) + 168952;
  v328 = v327 - 957 * ((4487950 * (unint64_t)v327) >> 32);
  v329 = 431 * ((HIWORD(v316) & 0xF0 | (v244 >> 20) & 0xF) ^ 0x87) + 168952;
  v330 = v329 - 1914 * ((2243975 * (unint64_t)v329) >> 32);
  v331 = ((2 * v330) & 0x77E) + (v330 ^ 0xF7B2FBBF);
  if (v331 + 139265089 >= 0x3BD)
    v332 = 1509794755;
  else
    v332 = 1509795712;
  v333 = *(unsigned __int8 *)(v19 + v322);
  LODWORD(STACK[0x550]) = v333;
  v334 = v333 ^ (16 * (*(unsigned __int8 *)(v19 + v323) ^ 0x78));
  LODWORD(STACK[0x510]) = v334;
  v335 = *(unsigned __int8 *)(v19 + v326);
  v336 = v334 ^ ((*(unsigned __int8 *)(v19 + v324) ^ 0x78) << 8);
  LODWORD(STACK[0x500]) = v336;
  v337 = v336 ^ ((v335 ^ 0x78) << 12);
  LODWORD(STACK[0x4FC]) = v337;
  v338 = *(unsigned __int8 *)(v19 + v331 - 1370530623 + v332);
  v339 = v337 ^ ((*(unsigned __int8 *)(v19 + v328) ^ 0x78) << 16);
  LODWORD(STACK[0x4F8]) = v339;
  v340 = v339 ^ ((v338 ^ 0x78) << 20);
  LODWORD(STACK[0x4F4]) = v340;
  LODWORD(STACK[0x4F0]) = (431 * ((v340 >> 20) & 0xF) + 404709)
                        % (((431 * ((v340 >> 20) & 0xF) + 5) | (((v340 >> 20) & 0xF | (16 * ((v340 >> 20) & 0xF))) + 26)) & 0x15 | 0x3A8);
  v341 = LODWORD(STACK[0x644]) + LODWORD(STACK[0x568]);
  v342 = STACK[0x6F8];
  v343 = 24 * (LODWORD(STACK[0x6F8]) ^ 0x82F);
  LODWORD(STACK[0x644]) = v343;
  v344 = v341 - (((v341 << (v343 - 103)) + 977557994) & 0x3E64BD3A) - 1135309934;
  v345 = 431 * (~(v344 >> (v342 ^ 0x78)) & 0xF) + 279719;
  v346 = LODWORD(STACK[0x540]) - LODWORD(STACK[0x5AC]) - 1467288591 + LODWORD(STACK[0x690]);
  v347 = v346 - ((2 * v346) & 0xA848688E);
  v348 = ((*(unsigned __int8 *)(v19 + (v345 - 957 * ((4487950 * (unint64_t)v345) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (431 * ((v344 >> 28) ^ 9) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v344 >> 28) ^ 9) + 279719)) >> 32))) ^ 0x78) << 12);
  v349 = 431 * ((v344 >> 20) & 0xF ^ 3) + 279719;
  v350 = 431 * (HIWORD(v344) & 0xF ^ 2) + 279719;
  v351 = *(unsigned __int8 *)(v19 + (v350 - 957 * ((4487950 * (unint64_t)v350) >> 32)));
  v352 = 431 * (((unsigned __int16)v344 >> 12) ^ 5) + 279719;
  v353 = ((v348 | v351 ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19
                                                            + (v349
                                                                           - 957
                                                                           * ((4487950 * (unint64_t)v349) >> 32))) ^ 0x78) << 12);
  v354 = 431 * ((BYTE1(v344) ^ 0x5E) & (((v351 & 0xBF ^ 0x87) + (v351 & 0xBF ^ 0x38)) ^ 0xB0)) + 279719;
  v355 = 431 * ((v344 >> 4) ^ 9) + 279719;
  v356 = *(unsigned __int8 *)(v19 + (v354 - 957 * ((4487950 * (unint64_t)v354) >> 32))) ^ v353 ^ (16 * (*(unsigned __int8 *)(v19 + (v352 - 957 * ((4487950 * (unint64_t)v352) >> 32))) ^ 0x78));
  v357 = 431 * (((v347 - 735824825) >> 28) ^ 0xD) + 279719;
  v358 = *(unsigned __int8 *)(v19
                            + (431 * (v344 & 0xF ^ 0xD)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v344 & 0xF ^ 0xD) + 279719)) >> 32))) ^ 0x78;
  v359 = v358 - 1807034322 - ((2 * v358) & 0x5C);
  v360 = ((v356 ^ 0x78) << 8) + 19841744 + (~((v356 ^ 0x78) << 9) | 0xFDA27BFF) + 1;
  v361 = (v360 ^ 0x12EC2D0 | v359 ^ 0x944AD82E) ^ (16
                                                 * (*(unsigned __int8 *)(v19
                                                                       + (v355
                                                                                      - 957
                                                                                      * ((4487950
                                                                                        * (unint64_t)v355) >> 32))) ^ 0x78));
  v362 = 431 * (((v347 - 735824825) >> 24) & 0xF ^ 4) + 279719;
  v363 = v362 - 957 * ((4487950 * (unint64_t)v362) >> 32);
  v364 = v363 - 530788311 - ((2 * v363) & 0x52);
  v365 = ((v364 & 0x40404020 | ~v364 & 0x20 | 0x11A0A241) ^ (v364 & 0xE8 ^ 0x28 | v364 & 0x4040E0E8 ^ 0x11A020C0))
       + (((v347 - 735824825) >> 20) & 0xF ^ 2);
  v366 = ((*(unsigned __int8 *)(v19 + (v364 ^ 0xE05CD029)) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19
                                                                                                + (v357 - 957 * ((4487950 * (unint64_t)v357) >> 32))) ^ 0x78) << 12);
  v367 = 431 * v365 % 0x3BD;
  v368 = 431 * (((v347 - 735824825) >> 16) & 0xF ^ 4) + 279719;
  v369 = v366 | *(unsigned __int8 *)(v19 + (v368 - 957 * ((4487950 * (unint64_t)v368) >> 32))) ^ 0x78;
  v370 = 431 * (((unsigned __int16)(v347 + 13383) >> 12) ^ 3) + 279719;
  v371 = (v369 << 8) ^ ((*(unsigned __int8 *)(v19 + v367) ^ 0x78) << 12);
  v372 = 431 * (((v347 - 735824825) >> 8) & 0xF ^ 4) + 279719;
  v373 = v372 - 957 * ((4487950 * (unint64_t)v372) >> 32);
  v374 = 431 * (((v347 + 71) >> 4) ^ 4) + 279719;
  v375 = (v371 | *(unsigned __int8 *)(v19 + ((v373 - 2121146252 - ((2 * v373) & 0xE8)) ^ 0x8191E074)) ^ 0x78) ^ ((*(unsigned __int8 *)(v19 + (v370 - 957 * ((4487950 * (unint64_t)v370) >> 32))) ^ 0x78) << (((3 - v373) & 4 ^ 4) + ((3 - v373) & 4)));
  v376 = 431 * (((_BYTE)v347 + 103) & 0xF ^ 7) + 279719;
  v377 = ((2 * (v359 & 0xF ^ 0x20C742B)) | 0x7A732EAE) - (v359 & 0xF ^ 0x20C742B);
  v378 = *(unsigned __int8 *)(v19 + (v376 - 957 * ((4487950 * (unint64_t)v376) >> 32))) ^ 0x78;
  v379 = v378 + 1716026315 - ((2 * v378) & 0x196);
  v380 = (v375 << 8) - 1851210185 + (~(v375 << 9) | 0xDCAE73FF) + 1;
  v381 = (v380 ^ 0x91A8C637 | v379 ^ 0x66487BCB) ^ ((16
                                                   * (*(unsigned __int8 *)(v19
                                                                         + (v374
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v374) >> 32))) ^ 0x78)) | 0x84B0C00B);
  v382 = v377 + 1120299177;
  v383 = (16 * (v379 & 0xF)) ^ 0xB0;
  v384 = v382 ^ 0xBF35E372;
  v385 = 431
       * (((v383 | v382 ^ 0xBF35E372)
         + 1874437628
         - 2 * ((v383 | v382 ^ 0xBF35E372) & 0x6FB9A5FE ^ (v382 ^ 0xBF35E372) & 2)) ^ 0x6FB9A5FC);
  v386 = 431 * (*(unsigned __int8 *)(v19 + (v385 + 290925) % 0x3BD) ^ v108 ^ 0x706CA5E1 ^ 0x78);
  LOBYTE(v342) = *(_BYTE *)(v19 + (v386 + 290925) % 0x3BD);
  v387 = ((v361 >> 4) ^ 0xAD4EBD76) & 0xAA166275 ^ 0x194E9ABA ^ (((2 * ((v361 >> 4) ^ 0xAD4EBD76)) & 0x142C8064)
                                                               - (((v361 >> 4) ^ 0xAD4EBD76) & 0xAA16627A)
                                                               - 1320633656);
  v388 = *(unsigned __int8 *)(v19 + v386 % 0x3BD);
  v389 = 431
       * ((((v388 >> 4) ^ 7) - ((v388 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v385 % 0x3BD))
       + 290925;
  v390 = v389 - 957 * ((4487950 * (unint64_t)v389) >> 32);
  v391 = (v387 | 0x14666AB0) - (v387 | 0xEB99954F) - 342256305;
  v392 = v391 ^ 0xBC604AC4;
  v393 = 431
       * (((v391 ^ 0xBC604AC4 | v381 & 0xF0)
         + 924874884
         - 2 * (((v391 ^ 0xBC604AC4) & 0x37207887 | v381 & 0x80) ^ v391 & 3)) ^ 0x37207884);
  v394 = 431
       * (*(unsigned __int8 *)(v19 + (v393 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v19 + v390) ^ 0x78)) ^ 0x78);
  v395 = v394 + 290925 - 957 * ((4487950 * (unint64_t)(v394 + 290925)) >> 32);
  v396 = *(unsigned __int8 *)(v19 + (v394 - 957 * ((4487950 * (unint64_t)v394) >> 32)));
  v397 = 431
       * ((((v396 >> 4) ^ 7) - ((v396 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v393 % 0x3BD))
       + 290925;
  v398 = (v381 >> 4) & 0xF0 | (v361 >> 8) & 0xF;
  v399 = 431 * ((v398 - 1655074119 - ((2 * v398) & 0x172)) ^ 0x9D5992B9);
  v400 = 431
       * (*(unsigned __int8 *)(v19 + (v399 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v397 - 957 * ((4487950 * (unint64_t)v397) >> 32))) ^ 0x78)) ^ 0x78);
  v401 = v400 + 290925 - 957 * ((4487950 * (unint64_t)(v400 + 290925)) >> 32);
  v402 = *(unsigned __int8 *)(v19 + (v400 - 957 * ((4487950 * (unint64_t)v400) >> 32)));
  v403 = 431
       * ((((v402 >> 4) ^ 7) + (~(v402 >> 3) | 0xEF) + 121) ^ *(unsigned __int8 *)(v19 + v399 % 0x3BD))
       + 290925;
  v404 = (v375 & 0xF0 | ((unsigned __int16)v360 >> 12)) ^ 0xC;
  v405 = v404 + 580522348 - 2 * (v404 & 0x7C ^ v375 & 0x10);
  v406 = *(unsigned __int8 *)(v19 + v395) ^ 0x78;
  v407 = 431 * (v405 ^ 0x229A116C);
  v408 = *(unsigned __int8 *)(v19 + (v407 + 290925) % 0x3BD) ^ (16
                                                              * (*(unsigned __int8 *)(v19
                                                                                    + (v403 - 957 * ((4487950 * (unint64_t)v403) >> 32))) ^ 0x78));
  v409 = (v408 & 0x345 ^ 0xECB81305 | v408 & 0x345 ^ 0x40) + 323481194;
  v408 ^= 0x78u;
  v410 = *(unsigned __int8 *)(v19 + v409 * v408 % 0x3BD);
  v411 = 431
       * ((((v410 >> 4) ^ 7) + (~(v410 >> 3) | 0xEF) + 121) ^ *(unsigned __int8 *)(v19 + v407 % 0x3BD))
       + 290925;
  v412 = ((v380 >> 12) & 0xF0 | HIWORD(v360) & 0xF) ^ 0x8E;
  v413 = 431 * ((v412 + 2010274413 - ((2 * v412) & 0xDA)) ^ 0x77D25A6D);
  v414 = 431
       * (*(unsigned __int8 *)(v19 + (v413 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v411 - 957 * ((4487950 * (unint64_t)v411) >> 32))) ^ 0x78)) ^ 0x78);
  v415 = v414 + 290925 - 957 * ((4487950 * (unint64_t)(v414 + 290925)) >> 32);
  v416 = *(unsigned __int8 *)(v19 + (v414 - 957 * ((4487950 * (unint64_t)v414) >> 32)));
  v417 = 431
       * ((((v416 >> 4) ^ 0x87) - ((v416 >> 3) & 0x10) - 8) ^ *(unsigned __int8 *)(v19 + v413 % 0x3BD))
       + 290925;
  v418 = (HIWORD(v380) & 0xF0 | (v360 >> 20) & 0xF) ^ 0xA2;
  v419 = 431 * ((v418 + 1451457424 - ((2 * v418) & 0x120)) ^ 0x56837B90);
  v420 = 431
       * (*(unsigned __int8 *)(v19 + (v419 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v417 - 957 * ((4487950 * (unint64_t)v417) >> 32))) ^ 0x78)) ^ 0x78);
  v421 = v420 + 290925 - 957 * ((4487950 * (unint64_t)(v420 + 290925)) >> 32);
  v422 = *(unsigned __int8 *)(v19 + (v420 - 957 * ((4487950 * (unint64_t)v420) >> 32)));
  v423 = 431
       * ((((v422 >> 4) ^ 7) - ((v422 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v419 % 0x3BD))
       + 290925;
  v424 = ((v380 >> 20) & 0xF0 | HIBYTE(v360) & 0xF) ^ 0x11;
  v425 = 431 * ((v424 - 2085002734 - ((2 * v424) & 0x24)) ^ 0x83B96212);
  v426 = ((*(unsigned __int8 *)(v19 + v421) ^ 0x78) << 20) ^ ((*(unsigned __int8 *)(v19 + v415) ^ 0x78) << 16);
  v427 = 431
       * (*(unsigned __int8 *)(v19 + (v425 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v423 - 957 * ((4487950 * (unint64_t)v423) >> 32))) ^ 0x78)) ^ 0x78);
  v428 = v427 + 290925 - 957 * ((4487950 * (unint64_t)(v427 + 290925)) >> 32);
  v429 = *(unsigned __int8 *)(v19 + (v427 - 957 * ((4487950 * (unint64_t)v427) >> 32)));
  v430 = 431
       * ((((v429 >> 4) ^ 7) - ((v429 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v425 % 0x3BD))
       + 290925;
  v431 = 431 * ((HIBYTE(v380) & 0xF0 | (v360 >> 28)) ^ 0x90) + 290925;
  v432 = 431
       * (*(unsigned __int8 *)(v19 + (v431 - 957 * ((4487950 * (unint64_t)v431) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v430 - 957 * ((4487950 * (unint64_t)v430) >> 32))) ^ 0x78)) ^ 0x78)
       + 290925;
  v433 = ((*(unsigned __int8 *)(v19 + (v432 - 957 * ((4487950 * (unint64_t)v432) >> 32))) ^ 8) << 28) ^ ((*(unsigned __int8 *)(v19 + v428) ^ 0x78) << 24);
  LOBYTE(v342) = (v342 ^ 0x78) - 2 * (v342 & 3) + 3;
  v434 = 16 * v406 - ((32 * v406) & 0x1B80) + 1487457734;
  v435 = v434 ^ ((*(unsigned __int8 *)(v19 + v401) ^ 0x78) << 8);
  LOBYTE(v434) = v434 ^ v342;
  v436 = (16 * (v342 & 0xF)) ^ 0x30 | v384;
  v437 = 431 * (v434 & 0xF0 ^ 0xC0 | v392) + 168952;
  v438 = v435 ^ ((*(unsigned __int8 *)(v19 + (431 * v408 + 290925) % 0x3BDu) ^ 0x78) << 12);
  v439 = (v435 >> 4) & 0xF0 | (v361 >> 8) & 0xF;
  v440 = v438 ^ 0xED2FA5AB ^ v426;
  v441 = (((v433 - ((2 * v433) & 0x64000000) + 852166955) ^ v440) >> 24) ^ 0x87;
  v442 = v441 + 1265494741 - ((2 * v441) & 0x1AA);
  v443 = 431 * (((v438 >> 8) & 0xF0 | ((unsigned __int16)v360 >> 12)) ^ 0xCC) + 168952;
  v444 = 431 * (((v440 >> 12) & 0xF0 | HIWORD(v360) & 0xF) ^ 0x7E) + 168952;
  v445 = 431 * ((HIWORD(v426) & 0xF0 | (v360 >> 20) & 0xF) ^ 2) + 168952;
  v446 = HIBYTE(v360) & 0xF | (16 * (v442 & 0xF));
  v447 = 431
       * ((v360 >> 28) & 0xFFFFFF0F | (16
                                     * (((v442 ^ 0x4B6DEAD5u) >> ((HIBYTE(v360) & 4 ^ 4) + (HIBYTE(v360) & 4))) & 0xF)))
       + 168952;
  v448 = *(unsigned __int8 *)(v19 + (v447 - 957 * ((4487950 * (unint64_t)v447) >> 32)));
  v449 = *(unsigned __int8 *)(v19 + (431 * v436 + 168952) % 0x3BDu);
  v450 = v449 ^ (16 * (*(unsigned __int8 *)(v19 + v437 % 0x3BD) ^ 0x78));
  v451 = v450 ^ ((*(unsigned __int8 *)(v19
                                     + (431 * (v439 ^ 0xD0)
                                                    + 168952
                                                    - 957
                                                    * ((4487950 * (unint64_t)(431 * (v439 ^ 0xD0u) + 168952)) >> 32))) ^ 0x78) << 8);
  v452 = v451 ^ ((*(unsigned __int8 *)(v19 + (v443 - 957 * ((4487950 * (unint64_t)v443) >> 32))) ^ 0x78) << 12);
  v453 = v452 ^ ((*(unsigned __int8 *)(v19 + (v444 - 957 * ((4487950 * (unint64_t)v444) >> 32))) ^ 0x78) << 16);
  v454 = v453 ^ ((*(unsigned __int8 *)(v19 + (v445 - 957 * ((4487950 * (unint64_t)v445) >> 32))) ^ 0x78) << 20);
  v455 = v454 ^ ((*(unsigned __int8 *)(v19
                                     + (431 * (v446 ^ 0x51)
                                                    + 168952
                                                    - 957
                                                    * ((4487950 * (unint64_t)(431 * (v446 ^ 0x51u) + 168952)) >> 32))) ^ 0x78) << 24);
  v456 = (((v448 ^ 8) << 28) - ((v448 << 29) & 0x40000000) + 771874384) ^ v455;
  v457 = *(unsigned __int8 *)(v19
                            + (431 * (HIBYTE(v455) & 0xF)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (HIBYTE(v455) & 0xF) + 404709)) >> 32))) ^ 0x78;
  v458 = *(unsigned __int8 *)(v19
                            + (431 * ((v456 >> 28) ^ 2)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * ((v456 >> 28) ^ 2) + 404709)) >> 32))) ^ 0x78;
  v459 = (((-256 * v457) & 0x100 ^ 0x1AF) + ((-256 * v457) & 0x100)) * (((v454 >> 20) & 0xF) + 939);
  v460 = (((((((v457 << 8) + 1866235719 - ((v457 & 0x7F) << 9)) ^ ((v458 << 12)
                                                                 + 1866235719
                                                                 - ((v458 << 13) & 0xFFF8FFFF)))
           + (*(unsigned __int8 *)(v19
                                 + (431 * (HIWORD(v453) & 0xF)
                                                + 404709
                                                - 957
                                                * ((4487950 * (unint64_t)(431 * (HIWORD(v453) & 0xF) + 404709)) >> 32))) ^ 0x78)) << 8) ^ ((*(unsigned __int8 *)(v19 + (v459 - 957 * ((4487950 * (unint64_t)v459) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (431 * ((v451 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v451 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (431 * ((unsigned __int16)v452 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v452 >> 12) + 404709)) >> 32))) ^ 0x78) << 12);
  v461 = 431 * ((v450 >> 4) ^ 7) + 404709;
  v462 = ((2 * (v449 ^ 8)) & 0x1C) + (v449 & 0xF ^ 0xBAFDF7C6);
  v463 = ((*(unsigned __int8 *)(v19 + (v461 - 957 * ((4487950 * (unint64_t)v461) >> 32))) ^ 0x78) << (((v462 + 5) | (2 - v462)) & 4)) ^ (LODWORD(STACK[0x708]) + 206635018) ^ (v460 | *(unsigned __int8 *)(v19 + (431 * v462 + 779221267) % 0x3BD) ^ 0x78);
  LODWORD(STACK[0x690]) = v463 - ((2 * v463) & 0x4A925356);
  LODWORD(STACK[0x6B4]) ^= v344;
  v464 = 431 * (((unsigned __int16)LODWORD(STACK[0x6A8]) >> 12) ^ 6) + 279719;
  v465 = 431 * ((LODWORD(STACK[0x6A8]) >> 4) ^ 8) + 279719;
  v466 = 431 * (STACK[0x6A8] & 0xF ^ 1) + 279719;
  v467 = *(unsigned __int8 *)(v19 + (v466 - 957 * ((4487950 * (unint64_t)v466) >> 32))) ^ 0x78;
  v468 = v467 - 11627117 - ((2 * v467) & 0x126);
  v469 = LODWORD(STACK[0x640]) ^ ((*(unsigned __int8 *)(v19
                                                      + (v464
                                                                     - 957 * ((4487950 * (unint64_t)v464) >> 32))) ^ 0x78) << 12);
  v470 = (v469 ^ 0x2A5B7721 | v468 ^ 0xFF4E9593) ^ (16
                                                  * (*(unsigned __int8 *)(v19
                                                                        + (v465
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v465) >> 32))) ^ 0x78));
  v471 = 431 * (((unsigned __int16)LODWORD(STACK[0x670]) >> 12) ^ 2) + 279719;
  v472 = 431 * ((LODWORD(STACK[0x670]) >> 4) ^ 0xB) + 279719;
  v473 = ((v468 & 0xF ^ 6) - ((2 * (v468 & 0xF ^ 6)) & 4) - 173821678) ^ 0x93B3F907;
  v474 = STACK[0x688] & 0xF;
  v475 = LODWORD(STACK[0x698]) ^ ((*(unsigned __int8 *)(v19
                                                      + (v471
                                                                     - 957 * ((4487950 * (unint64_t)v471) >> 32))) ^ 0x78) << 12);
  v476 = *(unsigned __int8 *)(v19
                            + (431 * v474
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * v474 + 279719)) >> 32))) ^ 0x78;
  v477 = (2 * v476) & 0x130;
  v476 -= 675171176;
  v478 = (v475 ^ 0x6F9D3316 | (v476 - v477) ^ 0xD7C1B498) ^ (16
                                                           * (*(unsigned __int8 *)(v19
                                                                                 + (v472
                                                                                                - 957
                                                                                                * ((4487950
                                                                                                  * (unint64_t)v472) >> 32))) ^ 0x78));
  v479 = (((2 * v473) & 0x88008060) - v473 - 1548547121) ^ 0xC5A343DF;
  v480 = 431
       * (((v479 | (16 * (v476 & 0xF)) ^ 0x80)
         + 582921826
         - 2 * ((v479 | (16 * (v476 & 0xF)) ^ 0x80) & 0x22BEAE63 ^ v479 & 1)) ^ 0x22BEAE62);
  v481 = STACK[0x6C8];
  v482 = 431 * (*(unsigned __int8 *)(v19 + (v480 + 290925) % 0x3BD) ^ LODWORD(STACK[0x6C8]) ^ 0x78);
  v483 = (v482 + 290925) % 0x3BD;
  v484 = *(unsigned __int8 *)(v19 + v482 % 0x3BD) >> 4;
  v485 = 431
       * (((v484 ^ 7) + 2 * ((v484 ^ 7 | 0x78) ^ v484) + 122) ^ *(unsigned __int8 *)(v19 + v480 % 0x3BD))
       + 290925;
  v486 = 431
       * (((v478 & 0xF0 | (v470 >> 4))
         - 918503892
         - ((2 * (v478 & 0xF0 | (v470 >> 4))) & 0x58)) ^ 0xC940BE2C);
  v487 = 431
       * (*(unsigned __int8 *)(v19 + (v486 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v485 - 957 * ((4487950 * (unint64_t)v485) >> 32))) ^ 0x78)) ^ 0x78);
  v488 = v487 + 290925 - 957 * ((4487950 * (unint64_t)(v487 + 290925)) >> 32);
  v489 = *(unsigned __int8 *)(v19 + (v487 - 957 * ((4487950 * (unint64_t)v487) >> 32)));
  v490 = (((v489 >> 4) ^ 7) + (~(v489 >> 3) | 0xEF) + 121) ^ *(unsigned __int8 *)(v19 + v486 % 0x3BD);
  v491 = (v478 >> 4) & 0xF0 ^ ((v474 ^ 0xF) + v474) & (v470 >> 8);
  v492 = *(unsigned __int8 *)(v19 + v488) ^ 0x78;
  LOBYTE(v478) = *(_BYTE *)(v19 + v483) ^ 0x78;
  v491 *= 431;
  v493 = v491 - 957 * ((4487950 * (unint64_t)v491) >> 32);
  v494 = 431
       * (*(unsigned __int8 *)(v19 + (v491 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (431 * v490 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v490 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v495 = v494 + 290925 - 957 * ((4487950 * (unint64_t)(v494 + 290925)) >> 32);
  v496 = *(unsigned __int8 *)(v19 + (v494 - 957 * ((4487950 * (unint64_t)v494) >> 32)));
  v497 = 431 * ((((v496 >> 4) ^ 7) - ((v496 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v493))
       + 290925;
  v498 = ((v475 >> 8) & 0xF0 | ((unsigned __int16)v469 >> 12)) ^ 0x37;
  v499 = 431 * ((v498 + 1708520203 - ((2 * v498) & 0x16)) ^ 0x65D5F30B);
  v500 = 431
       * (*(unsigned __int8 *)(v19 + (v499 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v497 - 957 * ((4487950 * (unint64_t)v497) >> 32))) ^ 0x78)) ^ 0x78);
  v501 = v500 + 290925 - 957 * ((4487950 * (unint64_t)(v500 + 290925)) >> 32);
  v502 = *(unsigned __int8 *)(v19 + (v500 - 957 * ((4487950 * (unint64_t)v500) >> 32)));
  v503 = 431
       * ((((v502 >> 4) ^ 0x87) - ((v502 >> 3) & 0x10) - 8) ^ *(unsigned __int8 *)(v19 + v499 % 0x3BD))
       + 290925;
  v504 = ((v475 >> 12) & 0xF0 | HIWORD(v469) & 0xF) ^ 0xDB;
  v505 = 431 * ((v504 - 1478030937 - ((2 * v504) & 0x14E)) ^ 0xA7E709A7);
  v506 = 431
       * (*(unsigned __int8 *)(v19 + (v505 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v503 - 957 * ((4487950 * (unint64_t)v503) >> 32))) ^ 0x78)) ^ 0x78);
  v507 = v505 % 0x3BD;
  v508 = (((*(unsigned __int8 *)(v19
                               + (v506
                                              + 290925
                                              - 957 * ((4487950 * (unint64_t)(v506 + 290925)) >> 32))) ^ 0x78) << 16) | 0x1A008AD6) ^ ((*(unsigned __int8 *)(v19 + v501) ^ 0x78) << 12);
  v509 = *(unsigned __int8 *)(v19 + (v506 - 957 * ((4487950 * (unint64_t)v506) >> 32)));
  v510 = 431 * ((((v509 >> 4) ^ 7) - ((v509 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v507))
       + 290925;
  v511 = 431
       * (*(unsigned __int8 *)(v19 + (LODWORD(STACK[0x660]) + 290925) % 0x3BDu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v19 + (v510 - 957 * ((4487950 * (unint64_t)v510) >> 32))) ^ 0x78)) ^ 0x78);
  v512 = v511 + 290925 - 957 * ((4487950 * (unint64_t)(v511 + 290925)) >> 32);
  v513 = ((LODWORD(STACK[0x698]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x640])) & 0xF) ^ 0xFA;
  v514 = *(unsigned __int8 *)(v19 + (v511 - 957 * ((4487950 * (unint64_t)v511) >> 32)));
  v515 = 431
       * ((((v514 >> 4) ^ 7) + (~(v514 >> 3) | 0xEF) + 121) ^ *(unsigned __int8 *)(v19 + LODWORD(STACK[0x668])))
       + 290925;
  v516 = 431 * ((v513 + 1398910422 - 2 * (v513 & 0xD7 ^ HIBYTE(LODWORD(STACK[0x640])) & 1)) ^ 0x5361ADD6);
  v517 = v516 % 0x3BD;
  v518 = 431
       * (*(unsigned __int8 *)(v19 + (v516 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v515 - 957 * ((4487950 * (unint64_t)v515) >> 32))) ^ 0x78)) ^ 0x78);
  v519 = v518 - 957 * ((4487950 * (unint64_t)v518) >> 32);
  v520 = 431
       * ((((*(_BYTE *)(v19 + v519) >> 4) ^ 7) - ((*(_BYTE *)(v19 + v519) >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v517))
       + 290925;
  v521 = 431 * ((HIBYTE(LODWORD(STACK[0x698])) & 0xF0 | (LODWORD(STACK[0x640]) >> 28)) ^ 0x62) + 290925;
  v522 = 431
       * (*(unsigned __int8 *)(v19 + (v521 - 957 * ((4487950 * (unint64_t)v521) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v520 - 957 * ((4487950 * (unint64_t)v520) >> 32))) ^ 0x78)) ^ 0x78)
       + 290925;
  v523 = *(unsigned __int8 *)(v19 + (v522 - 957 * ((4487950 * (unint64_t)v522) >> 32)));
  v524 = 16 * v492 - ((32 * v492) & 0xD80) + 1951606467;
  LOBYTE(v478) = v478 - ((2 * v478) & 0xD0) + 104;
  v525 = v524 ^ ((*(unsigned __int8 *)(v19 + v495) ^ 0x78) << 8);
  v526 = 431 * ((16 * (v478 & 0xF)) ^ 0x80 | v479) + 168952;
  v527 = (v524 ^ v478) & 0xF0 | (v470 >> 4);
  v528 = (v525 >> 4) & 0xF0 | (v470 >> 8) & 0xF;
  v529 = 431 * (v527 ^ 0xA0) + 168952 - 957 * ((4487950 * (unint64_t)(431 * (v527 ^ 0xA0u) + 168952)) >> 32);
  v530 = 431 * (v528 ^ 0x60) + 168952 - 957 * ((4487950 * (unint64_t)(431 * (v528 ^ 0x60u) + 168952)) >> 32);
  v531 = v525 ^ 0x37AEC3C8 ^ v508;
  v532 = v531 ^ ((*(unsigned __int8 *)(v19 + v512) ^ 0x78) << 20);
  v533 = 431 * (((v531 >> 8) & 0xF0 | ((unsigned __int16)v469 >> 12)) ^ 0x67) + 168952;
  v534 = v533 - 957 * ((4487950 * (unint64_t)v533) >> 32);
  v535 = v508 >> 12;
  v536 = 431 * (((v508 >> 12) & 0xF0 | HIWORD(v469) & 0xF) ^ 0xB) + 168952;
  v537 = v532 ^ ((*(unsigned __int8 *)(v19
                                     + (v518
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v518 + 290925)) >> 32))) ^ 0x78) << 24);
  v538 = 431 * ((HIWORD(v532) & 0xF0 | (LODWORD(STACK[0x640]) >> 20) & 0xF) ^ 0xF5) + 168952;
  v539 = (((v523 ^ 8) << 28) + (v523 >> 2 << 31) - 920619473) ^ v537;
  v540 = 431 * (((v537 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x640])) & 0xF) ^ 0x9A) + 168952;
  v541 = 431 * ((HIBYTE(v539) & 0xF0 | (LODWORD(STACK[0x640]) >> 28)) ^ 0x92) + 168952;
  v542 = *(unsigned __int8 *)(v19 + (v541 - 957 * ((4487950 * (unint64_t)v541) >> 32)));
  v543 = *(unsigned __int8 *)(v19 + v526 % 0x3BD);
  v544 = v543 ^ (16 * (*(unsigned __int8 *)(v19 + v529) ^ 0x78));
  v545 = v544 ^ ((*(unsigned __int8 *)(v19 + v530) ^ 0x78) << 8);
  v546 = v545 ^ ((*(unsigned __int8 *)(v19 + v534) ^ 0x78) << 12);
  v547 = v546 ^ ((*(unsigned __int8 *)(v19 + (v536 - 957 * ((4487950 * (unint64_t)v536) >> 32))) ^ 0x78) << 16);
  v548 = v547 ^ ((*(unsigned __int8 *)(v19 + (v538 - 957 * ((4487950 * (unint64_t)v538) >> 32))) ^ 0x78) << 20);
  v549 = v548 ^ ((*(unsigned __int8 *)(v19 + (v540 - 957 * ((4487950 * (unint64_t)v540) >> 32))) ^ 0x78) << 24);
  v550 = 431 * ((((((v542 ^ 8) << 28) - (v542 >> 1 << 30) - 345863282) ^ v549) >> 28) ^ 0xE) + 404709;
  v551 = HIBYTE(v549) & 0xF;
  LOBYTE(v523) = v551 ^ 0xEF;
  v552 = (v551 ^ 0x7BD5F7EF) + 2 * v551;
  v553 = (*(unsigned __int8 *)(v19
                             + (431 * (HIWORD(v547) & 0xF)
                                            + 404709
                                            - 957
                                            * ((4487950 * (unint64_t)(431 * (HIWORD(v547) & 0xF) + 404709)) >> 32))) ^ 0x78 | ((*(unsigned __int8 *)(v19 + (431 * v552 - 2100706940) % 0x3BDu) ^ ((*(unsigned __int8 *)(v19 + (v550 - 957 * ((4487950 * (unint64_t)v550) >> 32))) ^ 0x78) << (v523 & 1 ^ 0x45 ^ (67 - v552) & 0x41)) ^ 0x78) << 8)) ^ (16 * (*(unsigned __int8 *)(v19 + (431 * ((v548 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v548 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x78));
  v554 = 431 * ((v544 >> 4) ^ 7) + 404709;
  LODWORD(STACK[0x6A8]) ^= LODWORD(STACK[0x6A0]) + 213938067;
  v555 = (((*(unsigned __int8 *)(v19
                               + (431 * ((v545 >> 8) & 0xF)
                                              + 404709
                                              - 957
                                              * ((4487950 * (unint64_t)(431 * ((v545 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8) | (v553 << 16)) ^ ((*(unsigned __int8 *)(v19 + (431 * ((unsigned __int16)v546 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v546 >> 12) + 404709)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (431 * (v543 & 0xF ^ 8) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v543 & 0xF ^ 8u) + 404709)) >> 32))) ^ 0x78;
  v556 = LODWORD(STACK[0x638])
       + LODWORD(STACK[0x56C])
       - 2
       * ((LODWORD(STACK[0x638]) + LODWORD(STACK[0x56C]) + 409754720) & 0x1E216F8E ^ (LODWORD(STACK[0x638])
                                                                                    + LODWORD(STACK[0x56C])) & 4);
  LODWORD(STACK[0x6A0]) = LODWORD(STACK[0x65C]) ^ (16
                                                 * (*(unsigned __int8 *)(v19
                                                                       + (v554
                                                                                      - 957
                                                                                      * ((4487950
                                                                                        * (unint64_t)v554) >> 32))) ^ 0x78)) ^ v555;
  v557 = v556 - 158479382;
  v558 = 431 * (((v556 - 158479382) >> 28) ^ 1) + 279719;
  v559 = LODWORD(STACK[0x544]) + LODWORD(STACK[0x6C0]) - 472034548 + (LODWORD(STACK[0x618]) ^ 0xD9700A88);
  v560 = 431 * (HIBYTE(v557) & 0xF ^ 0xE) + 279719;
  v561 = *(unsigned __int8 *)(v19 + (v558 - 957 * ((4487950 * (unint64_t)v558) >> 32))) ^ 0x78;
  v562 = *(unsigned __int8 *)(v19 + (v560 - 957 * ((4487950 * (unint64_t)v560) >> 32))) ^ 0x78;
  v563 = 431 * ((v553 & 0x289) + (HIWORD(v557) & 0xF ^ 1) + (v553 & 0x289 ^ 0x289));
  v564 = 16 * v561 - ((32 * v561) & 0x460) - 1051192781;
  HIDWORD(v565) = (v562 - ((2 * v562) & 0x66666666) + 563) ^ v564;
  LODWORD(v565) = v564 ^ 0xC1581000;
  HIDWORD(v565) = (v565 >> 10) - ((2 * (v565 >> 10)) & 0xFEA8CB22) + 2136237457;
  LODWORD(v565) = HIDWORD(v565) ^ 0x7F544000 | ((*(unsigned __int8 *)(v19
                                                                    + (v563
                                                                                   - 957
                                                                                   * ((4487950 * (unint64_t)v563) >> 32))) ^ 0x78) << 14);
  v566 = v559 - 1025112299 - ((2 * v559) & 0x85CC0E2A);
  v567 = 431 * ((v557 >> 20) & 0xF ^ 2) + 279719;
  v568 = 431 * (((unsigned __int16)v557 >> 12) ^ 6) + 279719;
  v569 = 431 * (~(v557 >> 8) & 0xF) + 279719;
  v570 = ((v565 >> 14) << 8) ^ ((*(unsigned __int8 *)(v19
                                                                  + (v567
                                                                                 - 957
                                                                                 * ((4487950 * (unint64_t)v567) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (v569 - 957 * ((4487950 * (unint64_t)v569) >> 32))) ^ 0x78;
  v571 = 431 * ((v557 >> 4) ^ 8) + 279719;
  v572 = v571 - 957 * ((4487950 * (unint64_t)v571) >> 32);
  v573 = (v570 << 8) - 1619972604 - ((v570 << 9) & 0x3EE25C00);
  v574 = *(unsigned __int8 *)(v19
                            + (431 * (v557 & 0xF ^ 0xA)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v557 & 0xF ^ 0xA) + 279719)) >> 32))) ^ 0x78;
  v575 = v574 + 284989367 - ((2 * v574) & 0x16E);
  v576 = v573 ^ ((*(unsigned __int8 *)(v19 + (v568 - 957 * ((4487950 * (unint64_t)v568) >> 32))) ^ 0x78) << 12);
  v577 = (v566 ^ 0xC2E60715) >> (v535 & 0x10) >> (v535 & 0x10 ^ 0x18);
  LOBYTE(v577) = v577 - ((2 * v577) & 0x28) + 20;
  v578 = 431 * ((v577 >> 4) ^ 1) + 279719;
  v579 = 431 * ((v566 >> 20) & 0xF ^ 0xE) + 279719;
  v580 = (v576 ^ 0x9F712E04 | v575 ^ 0x10FC97B7) ^ (16 * (*(unsigned __int8 *)(v19 + v572) ^ 0x78));
  v581 = 431 * (HIWORD(v566) & 0xF ^ 6) + 279719;
  v582 = v581 - 957 * ((4487950 * (unint64_t)v581) >> 32);
  v583 = v582 + 921134442 - ((2 * v582) & 0x2D4);
  v584 = (v566 ^ 0xC2E60715) >> (((v583 & 0x30 ^ 0x20 | v583 & 0x30 ^ 0x10) + (v583 & 0xD0 ^ 0x90 | v583 & 0xD0 ^ 0x40)) | 8);
  v585 = ((*(unsigned __int8 *)(v19
                              + (431 * (v577 & 0xF ^ 4)
                                             + 279719
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * (v577 & 0xF ^ 4) + 279719)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (v578 - 957 * ((4487950 * (unint64_t)v578) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (v583 ^ 0x36E7656Au)) ^ 0x78;
  LOBYTE(v583) = v584 - ((2 * v584) & 2) + 1;
  v586 = 431 * (v583 >> 4)
       + 279719
       - 957 * ((4487950 * (unint64_t)(431 * (v583 >> 4) + 279719)) >> 32);
  v587 = (v585 << 8) ^ ((*(unsigned __int8 *)(v19
                                            + (v579 - 957 * ((4487950 * (unint64_t)v579) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (431 * (v583 & 0xF ^ 1) + 279719 - 957 * ((4487950 * (unint64_t)(431 * (v583 & 0xF ^ 1u) + 279719)) >> 32))) ^ 0x78;
  v588 = (v587 << 8) - 1929924306 - ((v587 << 9) & 0x19EF6200);
  v589 = 431 * ((v566 >> 4) ^ 1) + 279719;
  v590 = *(unsigned __int8 *)(v19
                            + (431 * (v566 & 0xF ^ 5)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v566 & 0xF ^ 5) + 279719)) >> 32))) ^ 0x78;
  v591 = v590 - 776203831 - ((2 * v590) & 0x192);
  v592 = v588 ^ ((*(unsigned __int8 *)(v19 + v586) ^ 0x78) << 12);
  v593 = (v592 ^ 0x8CF7B12E | v591 ^ 0xD1BC11C9) ^ (16
                                                  * (*(unsigned __int8 *)(v19
                                                                        + (v589
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v589) >> 32))) ^ 0x78));
  v594 = (16 * (v591 & 0xF)) ^ 0x90;
  v595 = (((2 * (v575 & 0xF ^ 0xE03408F7)) & 0x80281186) - (v575 & 0xF ^ 0xE03408F7) - 1599551940) ^ 0x409CCECC;
  v596 = 431 * (((v594 | v595) + 95106466 - ((2 * (v594 | v595)) & 0x1506344)) ^ 0x5AB35A2);
  v597 = v596 % 0x3BD;
  v598 = 431 * (*(unsigned __int8 *)(v19 + (v596 + 290925) % 0x3BD) ^ v481 ^ 0x78);
  v599 = (v598 + 290925) % 0x3BD;
  v600 = *(unsigned __int8 *)(v19 + v598 % 0x3BD);
  v601 = 431 * ((((v600 >> 4) ^ 7) - ((v600 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v597))
       + 290925;
  v602 = 431
       * (((v593 & 0xF0 | (v580 >> 4))
         - 1672989392
         - 2 * ((v593 & 0x30 | (v580 >> 4) & 0x3A) ^ (v580 >> 4) & 0xA)) ^ 0x9C483530);
  v603 = 431
       * (*(unsigned __int8 *)(v19 + (v602 + 289968) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v601 - 957 * ((4487950 * (unint64_t)v601) >> 32))) ^ 0x78)) ^ 0x78);
  v604 = v603 + 290925 - 957 * ((4487950 * (unint64_t)(v603 + 290925)) >> 32);
  v605 = v603 - 957 * ((4487950 * (unint64_t)v603) >> 32);
  v606 = (*(unsigned __int8 *)(v19 + ((v605 - 349405831 - ((2 * v605) & 0x2F2)) ^ 0xEB2C7D79)) ^ 0x78u) >> ((-47 * ((v605 + 121 - ((2 * v605) & 0xF2)) & 0xC4 ^ 0x40 | (v605 + 121 - ((2 * v605) & 0xF2)) & 0xC4 ^ 0x84)) & 0xFC);
  v607 = 431 * ((v606 - ((2 * v606) & 0xF0) + 120) ^ *(unsigned __int8 *)(v19 + v602 % 0x3BD)) + 290925;
  v608 = (v593 >> 4) & 0xF0 | (v580 >> 8) & 0xF;
  v609 = 431 * ((v608 + 1548047939 - 2 * (v608 & 0x47 ^ (v580 >> 8) & 4)) ^ 0x5C455643);
  v610 = 431
       * (*(unsigned __int8 *)(v19 + (v609 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v607 - 957 * ((4487950 * (unint64_t)v607) >> 32))) ^ 0x78)) ^ 0x78);
  v611 = v610 + 290925 - 957 * ((4487950 * (unint64_t)(v610 + 290925)) >> 32);
  v612 = *(unsigned __int8 *)(v19 + (v610 - 957 * ((4487950 * (unint64_t)v610) >> 32)));
  v613 = 431
       * ((((v612 >> 4) ^ 7) - ((v612 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v609 % 0x3BD))
       + 290925;
  v614 = v613 - 957 * ((4487950 * (unint64_t)v613) >> 32);
  v615 = *(unsigned __int8 *)(v19 + v604);
  v616 = ((v592 >> 8) & 0xF0 | ((unsigned __int16)v576 >> 12)) ^ 0xB2;
  v617 = v615 ^ 0x78;
  v618 = *(unsigned __int8 *)(v19 + v599) ^ 0x78;
  v619 = v618 ^ (16 * v617) ^ ((*(unsigned __int8 *)(v19 + v611) ^ 0x78) << 8);
  v620 = 431 * ((v616 - 1615631119 - ((2 * v616) & 0xFFFFFFE3)) ^ 0x9FB36CF1);
  v621 = 431
       * (*(unsigned __int8 *)(v19 + (v620 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v19 + v614) ^ 0x78)) ^ 0x78);
  v622 = v621 + 290925 - 957 * ((4487950 * (unint64_t)(v621 + 290925)) >> 32);
  v623 = *(unsigned __int8 *)(v19 + (v621 - 957 * ((4487950 * (unint64_t)v621) >> 32)));
  v624 = ((v592 >> 12) & 0xF0 | HIWORD(v576) & 0xF) ^ 0x71;
  v625 = 431
       * ((((v623 >> 4) ^ 7) - ((v623 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v620 % 0x3BD))
       + 290925;
  v626 = 431 * ((v624 - 1803947094 - ((2 * v624) & 0x55555555)) ^ 0x9479F3AA);
  v627 = 431
       * (*(unsigned __int8 *)(v19 + (v626 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v625 - 957 * ((4487950 * (unint64_t)v625) >> 32))) ^ 0x78)) ^ 0x78);
  v628 = v627 + 290925 - 957 * ((4487950 * (unint64_t)(v627 + 290925)) >> 32);
  v629 = *(unsigned __int8 *)(v19 + (v627 - 957 * ((4487950 * (unint64_t)v627) >> 32)));
  v630 = 431
       * ((((v629 >> 4) ^ 7) - ((v629 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v626 % 0x3BD))
       + 290925;
  v631 = (HIWORD(v588) & 0xF0 | (v573 >> 20) & 0xF) ^ 0xF7;
  v632 = 431 * ((v631 + 1558206752 - ((2 * v631) & 0x40)) ^ 0x5CE05920);
  v633 = 431
       * (*(unsigned __int8 *)(v19 + (v632 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v630 - 957 * ((4487950 * (unint64_t)v630) >> 32))) ^ 0x78)) ^ 0x78);
  v634 = *(unsigned __int8 *)(v19 + (v633 - 957 * ((4487950 * (unint64_t)v633) >> 32))) >> 4;
  v635 = ((v634 ^ 7) + 2 * ((v634 ^ 7 | 0x78) ^ v634) + 122) ^ *(unsigned __int8 *)(v19 + v632 % 0x3BD);
  v636 = ((v588 >> 20) & 0xF0 | HIBYTE(v573) & 0xF) ^ 0xCF;
  v637 = ((*(unsigned __int8 *)(v19
                              + (v633
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v633 + 290925)) >> 32))) ^ 0x78) << 20) ^ ((*(unsigned __int8 *)(v19 + v628) ^ 0x78) << 16);
  v638 = 431 * ((v636 + 241324242 - ((2 * v636) & 0x1A4)) ^ 0xE6250D2);
  v639 = 431
       * (*(unsigned __int8 *)(v19 + (v638 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (431 * v635 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v635 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v640 = v639 - 957 * ((4487950 * (unint64_t)v639) >> 32);
  v641 = 431
       * ((((*(_BYTE *)(v19 + v640) >> 4) ^ 7) + (~(*(_BYTE *)(v19 + v640) >> 3) | 0xEF) + 121) ^ *(unsigned __int8 *)(v19 + v638 % 0x3BD))
       + 290925;
  v642 = 431 * ((HIBYTE(v588) & 0xF0 | (v573 >> 28)) ^ 0x89) + 290925;
  v643 = 431
       * (*(unsigned __int8 *)(v19 + (v642 - 957 * ((4487950 * (unint64_t)v642) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v641 - 957 * ((4487950 * (unint64_t)v641) >> 32))) ^ 0x78)) ^ 0x78)
       + 290925;
  v644 = v619 ^ ((*(unsigned __int8 *)(v19 + v622) ^ 0x78) << 12);
  v645 = (v637 - ((2 * v637) & 0x97E0000) + 884993354) ^ v644;
  v646 = v645 ^ ((*(unsigned __int8 *)(v19
                                     + (v639
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v639 + 290925)) >> 32))) ^ 0x78) << 24) ^ ((*(unsigned __int8 *)(v19 + (v643 - 957 * ((4487950 * (unint64_t)v643) >> 32))) ^ 8) << 28);
  v647 = 431 * (v619 & 0xF0 | (v580 >> 4)) + 168952;
  v648 = 431 * (((v644 >> 8) & 0xF0 | ((unsigned __int16)v576 >> 12)) ^ 2) + 168952;
  v649 = 431 * (((v645 >> 12) & 0xF0 | HIWORD(v576) & 0xF) ^ 0xF1) + 168952;
  v650 = v649 - 957 * ((4487950 * (unint64_t)v649) >> 32);
  v651 = v650 - 1327803148 - ((2 * v650) & 0x1E8);
  v652 = *(unsigned __int8 *)(v19 + (431 * ((16 * (v618 & 0xF)) | v595) + 168952) % 0x3BD) ^ (16
                                                                                            * (*(unsigned __int8 *)(v19 + (v647 - 957 * ((4487950 * (unint64_t)v647) >> 32))) ^ 0x78)) ^ ((*(unsigned __int8 *)(v19 + (431 * (((v646 >> 4) ^ 0xD4) & 0x30 | (v580 >> 8) & 7 | (v580 >> 8) & 8 | ((v646 >> 4) ^ 0xD4) & 0xC0) + 167995) % 0x3BD) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (v648 - 957 * ((4487950 * (unint64_t)v648) >> 32))) ^ 0x78) << 12) ^ ((*(unsigned __int8 *)(v19 + (v651 ^ 0xB0DB54F4)) ^ 0x78) << 16);
  v653 = (HIWORD(v646) ^ 0x34BF) >> ((115 * (v651 & 0xEC ^ 0xE4 | v651 & 0xEC ^ 8)) & 0xFC);
  v654 = v653 - ((2 * v653) & 0x129E2);
  v655 = v654 - 558459663;
  v656 = 431 * (((v573 >> 20) & 0xF | (16 * ((v654 - 558459663) & 0xF))) ^ 0x17) + 168952;
  v657 = 431 * (((14 - (_BYTE)v654) & 0xF0 | HIBYTE(v573) & 0xF) ^ 0xF) + 168952;
  v658 = 431 * (((v655 >> 4) & 0xF0 | (v573 >> 28)) ^ 0x49) + 168952;
  v659 = v658 - 957 * ((4487950 * (unint64_t)v658) >> 32);
  v660 = v652 ^ ((*(unsigned __int8 *)(v19 + (v656 - 957 * ((4487950 * (unint64_t)v656) >> 32))) ^ 0x78) << 20) ^ ((*(unsigned __int8 *)(v19 + (v657 - 957 * ((4487950 * (unint64_t)v657) >> 32))) ^ 0x78) << 24) ^ ((unint64_t)(*(unsigned __int8 *)(v19 + ((v659 + 718181071 - ((2 * v659) & 0x59E)) ^ 0x2ACE92CFu)) ^ 0x78u) << (((v659 - 49 - ((2 * v659) & 0x9E)) & 0x55 ^ 0xEF) + ((v659 - 49 - ((2 * v659) & 0x9E)) & 0x55 ^ 0xBAu) + 115));
  v661 = 431 * ((BYTE2(v660) ^ 0xF0) + (BYTE2(v660) | 0xF) + 1) + 404709;
  v662 = ((*(unsigned __int8 *)(v19
                              + (431 * (HIBYTE(v660) & 0xF)
                                             + 404709
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * (HIBYTE(v660) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (431 * (v660 >> 28) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v660 >> 28) + 404709)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (v661 - 957 * ((4487950 * (unint64_t)v661) >> 32))) ^ 0x78;
  v663 = ((v660 >> 8) & 0xF ^ 0x97FBAF7C) + ((v660 >> 7) & 0x18);
  v664 = (v662 << 8) ^ ((*(unsigned __int8 *)(v19
                                            + (431 * ((v660 >> 20) & 0xF)
                                                           + 404709
                                                           - 957
                                                           * ((4487950
                                                             * (unint64_t)(431 * ((v660 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x78) << 12);
  v665 = 431
       * (((unsigned __int16)v660 >> 12) + (((v664 & 0x38D04B00 ^ 0x38D04BFF) + (v664 & 0x38D04B00)) & 0x412003AB));
  LOBYTE(v660) = v660 ^ 0x78;
  LODWORD(STACK[0x698]) = LODWORD(STACK[0x648]) ^ (16
                                                 * (*(unsigned __int8 *)(v19
                                                                       + (431
                                                                                      * (v660 >> 4)
                                                                                      + 404709
                                                                                      - 957
                                                                                      * ((4487950
                                                                                        * (unint64_t)(431 * (v660 >> 4) + 404709)) >> 32))) ^ 0x78)) ^ (((v664 | *(unsigned __int8 *)(v19 + ((((v663 + 47) & 0x135) + ((-1745114160 - v663) & 0xBEA60015) + 1096417263) | 0x1AB) * (v663 + 1745114159) % 0x3BD) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + v665 % 0x3BD) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (431 * (v660 & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v660 & 0xF) + 404709)) >> 32))) ^ 0x78);
  LODWORD(STACK[0x6C0]) = LODWORD(STACK[0x650]) ^ v557;
  LOBYTE(v557) = *(_BYTE *)(v19 + (LODWORD(STACK[0x524]) + 290925) % 0x3BDu) ^ 0x78;
  v666 = 431
       * ((((*(_BYTE *)(v19
                                       + (LODWORD(STACK[0x514])
                                                      - 957
                                                      * ((4487950 * (unint64_t)LODWORD(STACK[0x514])) >> 32))) >> 4) ^ 7)
                          - ((*(_BYTE *)(v19
                                       + (LODWORD(STACK[0x514])
                                                      - 957
                                                      * ((4487950 * (unint64_t)LODWORD(STACK[0x514])) >> 32))) >> 3) & 0x10)
                          + 120) ^ *(unsigned __int8 *)(v19 + LODWORD(STACK[0x518]) % 0x3BD))
       + 290925;
  v667 = (STACK[0x528] & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x5A0]) >> 12)) ^ 0x7E;
  v668 = 431 * ((v667 + 472349847 - ((2 * v667) & 0x12E)) ^ 0x1C277C97);
  v669 = 431
       * (*(unsigned __int8 *)(v19 + (v668 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v666 - 957 * ((4487950 * (unint64_t)v666) >> 32))) ^ 0x78)) ^ 0x78);
  v670 = v669 + 290925 - 957 * ((4487950 * (unint64_t)(v669 + 290925)) >> 32);
  v671 = *(unsigned __int8 *)(v19 + (v669 - 957 * ((4487950 * (unint64_t)v669) >> 32))) >> 4;
  v672 = ((v671 ^ 7) + 2 * ((v671 ^ 7 | 0x78) ^ v671) + 122) ^ *(unsigned __int8 *)(v19 + v668 % 0x3BD);
  v673 = *(unsigned __int8 *)(v19 + v670) ^ 0x78;
  v674 = ((LODWORD(STACK[0x538]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x5A0])) & 0xF) ^ 0x62;
  v675 = 431 * ((v674 + 1052633308 - ((2 * v674) & 0x1B8)) ^ 0x3EBDE8DC);
  v676 = 431
       * (*(unsigned __int8 *)(v19 + (v675 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (431 * v672 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v672 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v677 = *(unsigned __int8 *)(v19
                            + (v676 + 290925 - 957 * ((4487950 * (unint64_t)(v676 + 290925)) >> 32))) ^ 0x78;
  v678 = *(unsigned __int8 *)(v19 + (v676 - 957 * ((4487950 * (unint64_t)v676) >> 32)));
  v679 = (((v678 >> 4) ^ 7) - ((v678 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v675 % 0x3BD);
  v680 = (HIWORD(LODWORD(STACK[0x538])) & 0xF0 | (LODWORD(STACK[0x5B0]) >> 20) & 0xF) ^ 0xF2;
  v681 = 431 * ((v680 - 1578595374 - 2 * (v680 & 0xD7 ^ (LODWORD(STACK[0x5B0]) >> 20) & 5)) ^ 0xA1E88BD2);
  v682 = 431
       * (*(unsigned __int8 *)(v19 + (v681 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (431 * v679 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v679 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v683 = *(unsigned __int8 *)(v19
                            + (v682 + 290925 - 957 * ((4487950 * (unint64_t)(v682 + 290925)) >> 32))) ^ 0x78;
  v684 = *(unsigned __int8 *)(v19 + (v682 - 957 * ((4487950 * (unint64_t)v682) >> 32)));
  v685 = 431
       * ((((v684 >> 4) ^ 7) - ((v684 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v681 % 0x3BD))
       + 290925;
  v686 = ((LODWORD(STACK[0x538]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x5B0])) & 0xF) ^ 0x70;
  v687 = 431 * ((v686 + 1137150519 - ((2 * v686) & 0x6E)) ^ 0x43C78A37);
  v688 = 431
       * (*(unsigned __int8 *)(v19 + (v687 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v685 - 957 * ((4487950 * (unint64_t)v685) >> 32))) ^ 0x78)) ^ 0x78);
  v689 = v688 + 290925 - 957 * ((4487950 * (unint64_t)(v688 + 290925)) >> 32);
  v690 = *(unsigned __int8 *)(v19 + (v688 - 957 * ((4487950 * (unint64_t)v688) >> 32)));
  v691 = 431
       * ((((v690 >> 4) ^ 7) - ((v690 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v687 % 0x3BD))
       + 290925;
  v692 = 431 * ((HIBYTE(LODWORD(STACK[0x538])) & 0xF0 | (LODWORD(STACK[0x5B0]) >> 28)) ^ 0x64) + 290925;
  v693 = *(unsigned __int8 *)(v19 + v689) ^ 0x78;
  v694 = (v693 << 24) - 1449609701 - ((v693 << 25) & 0x52000000);
  v695 = 431
       * (*(unsigned __int8 *)(v19 + (v692 - 957 * ((4487950 * (unint64_t)v692) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v691 - 957 * ((4487950 * (unint64_t)v691) >> 32))) ^ 0x78)) ^ 0x78)
       + 290925;
  v696 = *(unsigned __int8 *)(v19 + (v695 - 957 * ((4487950 * (unint64_t)v695) >> 32)));
  v697 = (v673 << 12) - ((v673 << 13) & 0x1F4000) + 2089789934;
  v698 = (v677 << 16) - ((v677 << 17) & 0xDE0000) + 342882160;
  v699 = (v683 << 20) - ((v683 << 21) & 0xC800000) + 105580370;
  v700 = (((v696 ^ 8) << 28) - 1449609701 - ((v696 << 29) & 0x40000000)) ^ v694;
  LOBYTE(v557) = v557 - ((2 * v557) & 0xEC) + 118;
  v701 = STACK[0x53C] & 0xFFFFFF0F | (16 * (v557 & 0xF));
  v702 = 431
       * (((LODWORD(STACK[0x534]) ^ v557) & 0xF0 | (LODWORD(STACK[0x548]) >> 4)) ^ 0x60)
       + 168952;
  v703 = 431
       * ((((v697 ^ LODWORD(STACK[0x52C])) >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x5A0]) >> 12)) ^ 0x1E)
       + 168952;
  v704 = v703 - 957 * ((4487950 * (unint64_t)v703) >> 32);
  v705 = v704 - 1670108439 - ((2 * v704) & 0x5D2);
  v706 = (((v705 ^ 7) + (v705 & 0x11111111 ^ 0xFE) + (v705 & 0xEEEEEEEE ^ 0xE8) + 1) & 0xF4 ^ 0xEB) & (HIWORD(LODWORD(STACK[0x5A0])) ^ 0x22) ^ ((v698 ^ v697) >> 12) & 0xF0;
  v707 = ((2 * (v706 + 392)) & 0x57E) + ((v706 + 392) ^ 0xD37DEEBF);
  v708 = 431 * ((((v699 ^ v698) >> 16) & 0xF0 | (LODWORD(STACK[0x5B0]) >> 20) & 0xF) ^ 0x22) + 168952;
  v709 = 431 * ((((v694 ^ v699) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x5B0])) & 0xF) ^ 0xF0) + 168952;
  v710 = *(unsigned __int8 *)(v19
                            + (431 * (v701 ^ 0x69)
                                           + 168952
                                           - 957 * ((4487950 * (unint64_t)(431 * (v701 ^ 0x69) + 168952)) >> 32)));
  v711 = 431 * ((HIBYTE(v700) & 0xF0 | (LODWORD(STACK[0x5B0]) >> 28)) ^ 4) + 168952;
  v712 = ((*(unsigned __int8 *)(v19 + (v711 - 957 * ((4487950 * (unint64_t)v711) >> 32))) ^ 8) << 28) ^ ((*(unsigned __int8 *)(v19 + (v709 - 957 * ((4487950 * (unint64_t)v709) >> 32))) ^ 0x78) << 24);
  v713 = v710 ^ (16
               * (*(unsigned __int8 *)(v19 + (v702 - 957 * ((4487950 * (unint64_t)v702) >> 32))) ^ 0x78));
  v714 = v713 ^ ((*(unsigned __int8 *)(v19 + (431 * (LODWORD(STACK[0x530]) ^ 0x5DD9462Au) + 168952) % 0x3BD) ^ 0x78) << 8);
  v715 = v714 ^ ((*(unsigned __int8 *)(v19 + (v705 ^ 0x9C742AE9)) ^ 0x78) << 12);
  v716 = v715 ^ ((*(unsigned __int8 *)(v19
                                     + (((v707 + 321) & 0x1AF) + ((119 - v706) & 0x1AF)) * (v707 + 746721601) % 0x3BD) ^ 0x78) << 16);
  v717 = v716 ^ ((*(unsigned __int8 *)(v19 + (v708 - 957 * ((4487950 * (unint64_t)v708) >> 32))) ^ 0x78) << 20);
  v718 = v712 ^ v717;
  v719 = *(unsigned __int8 *)(v19
                            + (431 * (HIBYTE(v718) & 0xF)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (HIBYTE(v718) & 0xF) + 404709)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (431 * (v718 >> 28) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v718 >> 28) + 404709)) >> 32))) ^ 0x78));
  v720 = (v719 & 0x1AF ^ 0x28 | v719 & 0x1AF ^ 0x187) * ((HIWORD(v716) & 0xF) + 939);
  v721 = ((v719 << 16) | ((*(unsigned __int8 *)(v19
                                              + (v720 - 957 * ((4487950 * (unint64_t)v720) >> 32))) ^ 0x78) << 8)) ^ ((*(unsigned __int8 *)(v19 + (431 * ((v717 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v717 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (431 * ((v714 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v714 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x78;
  LODWORD(STACK[0x688]) = LODWORD(STACK[0x654]) ^ LODWORD(STACK[0x5DC]);
  v722 = 431 * ((v714 & 0x3AB ^ 0x383 | v714 & 0x3AB ^ 0x28) + ((v713 >> 4) ^ 7));
  LODWORD(STACK[0x670]) = LODWORD(STACK[0x658]) ^ (16
                                                 * (*(unsigned __int8 *)(v19
                                                                       + (v722
                                                                                      - 957
                                                                                      * ((4487950
                                                                                        * (unint64_t)v722) >> 32))) ^ 0x78)) ^ ((v721 << 8) ^ ((*(unsigned __int8 *)(v19 + (431 * ((unsigned __int16)v715 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v715 >> 12) + 404709)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (431 * (v710 & 0xF ^ 8) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v710 & 0xF ^ 8u) + 404709)) >> 32))) ^ 0x78);
  v723 = 431 * ((LODWORD(STACK[0x4EC]) >> 28) ^ 0xC) + 279719;
  v724 = 431 * (HIBYTE(LODWORD(STACK[0x4EC])) & 0xF ^ 9) + 279719;
  v725 = ((*(unsigned __int8 *)(v19 + (v724 - 957 * ((4487950 * (unint64_t)v724) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (v723 - 957 * ((4487950 * (unint64_t)v723) >> 32))) ^ 0x78) << 12);
  v726 = 431 * ((LODWORD(STACK[0x4EC]) >> 20) & 0xF ^ 5) + 279719;
  v727 = 431 * (HIWORD(LODWORD(STACK[0x4EC])) & 0xF ^ 2) + 279719;
  v728 = v725 | *(unsigned __int8 *)(v19 + (v727 - 957 * ((4487950 * (unint64_t)v727) >> 32))) ^ 0x78;
  v729 = 431 * (((unsigned __int16)LODWORD(STACK[0x4EC]) >> 12) ^ 1) + 279719;
  v730 = (v728 << 8) ^ ((*(unsigned __int8 *)(v19
                                            + (v726 - 957 * ((4487950 * (unint64_t)v726) >> 32))) ^ 0x78) << 12);
  v731 = 431 * ((LODWORD(STACK[0x4EC]) >> 4) ^ 0xE) + 279719;
  v732 = v731 - 957 * ((4487950 * (unint64_t)v731) >> 32);
  v733 = v730 | *(unsigned __int8 *)(v19
                                   + (LODWORD(STACK[0x508]) + 431 * ((LODWORD(STACK[0x4EC]) >> 8) & 0xF ^ 8)) % 0x3BD) ^ 0x78;
  v734 = (v733 << 8) + 1819420057 - ((v733 << 9) & 0xD8E44A00);
  v735 = 431 * (STACK[0x4EC] & 0xF ^ 0xE) + 279719;
  v736 = *(unsigned __int8 *)(v19 + (v735 - 957 * ((4487950 * (unint64_t)v735) >> 32))) ^ 0x78;
  v737 = v736 - 814910647 - ((2 * v736) & 0x92);
  v738 = v734 ^ ((*(unsigned __int8 *)(v19 + (v729 - 957 * ((4487950 * (unint64_t)v729) >> 32))) ^ 0x78) << 12);
  v739 = LODWORD(STACK[0x570])
       - LODWORD(STACK[0x5C0])
       - ((2 * (LODWORD(STACK[0x570]) - LODWORD(STACK[0x5C0])) + 993739396) & 0x3B8963B8)
       + 1533170462;
  v740 = 431 * (HIBYTE(v739) & 0xF ^ 0xD) + 279719;
  v741 = (v738 ^ 0x6C722599 | v737 ^ 0xCF6D7349) ^ (16 * (*(unsigned __int8 *)(v19 + v732) ^ 0x78));
  v742 = ((*(unsigned __int8 *)(v19 + (v740 - 957 * ((4487950 * (unint64_t)v740) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (431 * ((v739 >> 28) ^ 9) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v739 >> 28) ^ 9) + 279719)) >> 32))) ^ 0x78) << 12);
  v743 = 431 * (HIWORD(v739) & 0xF ^ 4) + 279719;
  v744 = 431 * ((v739 >> 20) & 0xF ^ 0xC) + 279719;
  v745 = v742 | *(unsigned __int8 *)(v19 + (v743 - 957 * ((4487950 * (unint64_t)v743) >> 32))) ^ 0x78;
  v746 = 431 * (((unsigned __int16)v739 >> 12) ^ 0xB) + 279719;
  v747 = (v745 << 8) ^ ((*(unsigned __int8 *)(v19
                                            + (v744 - 957 * ((4487950 * (unint64_t)v744) >> 32))) ^ 0x78) << 12);
  v748 = 431 * ((v739 >> 8) & 0xF ^ 1) + 279719;
  v749 = v748 - 957 * ((4487950 * (unint64_t)v748) >> 32);
  v750 = v747 | *(unsigned __int8 *)(v19 + ((v749 + 1795687623 - ((2 * v749) & 0x18E)) ^ 0x6B0804C7u)) ^ 0x78;
  v751 = 431
       * (((LOBYTE(STACK[0x570])
                           - LOBYTE(STACK[0x5C0])
                           - ((2 * (LOBYTE(STACK[0x570]) - LOBYTE(STACK[0x5C0])) - 124) & 0xB8)
                           + 30) >> 4) ^ 0xD)
       + 279719;
  v752 = (v750 << 8) ^ ((*(unsigned __int8 *)(v19
                                            + (v746 - 957 * ((4487950 * (unint64_t)v746) >> 32))) ^ 0x78) << 12);
  v753 = *(unsigned __int8 *)(v19
                            + (431 * (v739 & 0xF ^ 0xC)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v739 & 0xF ^ 0xC) + 279719)) >> 32)));
  v754 = (v737 & 0xF ^ 3) + ((v737 + 24) & 5 ^ 0xB4) - ((v737 & 0xF ^ 3) & 0x55555555);
  v755 = (v753 ^ 0x78) + 86803208 - ((2 * (v753 ^ 0x78)) & 0x10);
  v756 = (v755 ^ 0x52C8308 | v752) ^ (16
                                    * (*(unsigned __int8 *)(v19
                                                          + (v751
                                                                         - 957
                                                                         * ((4487950 * (unint64_t)v751) >> 32))) ^ 0x78));
  v757 = v754 ^ 0xBF;
  v758 = (16 * (v755 & 0xF)) ^ 0x80 | v754 ^ 0xBF;
  v759 = ((2 * v758) & 0x106E) + (v758 ^ 0xFAE77D37);
  v760 = 431
       * (*(unsigned __int8 *)(v19
                             + ((~(-85493101 - v759) & 0xC4ACC5D1) - ((v759 + 364) & 0x1D1) + 431) * (v759 + 85493100)
                             % 0x3BD) ^ v481 ^ 0x78);
  v761 = v760 + 290925;
  v762 = *(unsigned __int8 *)(v19 + v760 % 0x3BD);
  v763 = 431
       * ((((v762 >> 4) ^ 7) + (~(v762 >> 3) | 0xEF) + 121) ^ *(unsigned __int8 *)(v19 + (431 * v759 - 1807470489) % 0x3BD))
       + 290925;
  v764 = ((((v741 >> 4) ^ 0x976E28AC) & 0x8E39684D)
        - (((v741 >> 4) ^ 0x976E28AC) & 0x8A392044)
        + (((v741 >> 4) ^ 0x976E28AC) & 0xA392044 ^ 0x4A7FA264)) ^ ((v741 >> 4) ^ 0x976E28AC) & 0x8E396842;
  v765 = ((v764 & 0xD66782BC ^ 0x92201095) + (v764 & STACK[0x4B8]) - 1) ^ 0x585FB2FC;
  v766 = 431 * (((v765 | v756 & 0xF0) - 1241397984 - 2 * ((v765 & 0x3601C52E | v756 & 0x20) ^ v765 & 0xE)) ^ 0xB601C520);
  v767 = 431
       * (*(unsigned __int8 *)(v19 + (v766 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v763 - 957 * ((4487950 * (unint64_t)v763) >> 32))) ^ 0x78)) ^ 0x78);
  v768 = v767 + 290925 - 957 * ((4487950 * (unint64_t)(v767 + 290925)) >> 32);
  v769 = *(unsigned __int8 *)(v19 + (v767 - 957 * ((4487950 * (unint64_t)v767) >> 32)));
  v770 = (((v769 >> 4) ^ 7) + (~(v769 >> 3) | 0xEF) + 121) ^ *(unsigned __int8 *)(v19 + v766 % 0x3BD);
  v771 = 431
       * ((((v756 >> 4) & 0xF0 | (v741 >> 8) & 0xF)
         + 410230310
         - 2 * (((v756 >> 4) & 0x20 | (v741 >> 8) & 7) ^ (v741 >> 8) & 1)) ^ 0x18739E26);
  v772 = (v771 + 290925) % 0x3BD;
  v773 = v771 % 0x3BD;
  v774 = *(unsigned __int8 *)(v19 + v761 % 0x3BD) ^ 0x78;
  LOBYTE(v771) = v774 + 104;
  v775 = (v774 - 1124194456 - ((2 * v774) & 0xD0)) ^ (16 * (*(unsigned __int8 *)(v19 + v768) ^ 0x78));
  v776 = 431
       * (*(unsigned __int8 *)(v19 + v772) ^ (16
                                            * (*(unsigned __int8 *)(v19
                                                                  + (431 * v770
                                                                                 + 290925
                                                                                 - 957
                                                                                 * ((4487950
                                                                                   * (unint64_t)(431 * v770 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v777 = v776 + 290925 - 957 * ((4487950 * (unint64_t)(v776 + 290925)) >> 32);
  v778 = *(unsigned __int8 *)(v19 + (v776 - 957 * ((4487950 * (unint64_t)v776) >> 32)));
  v779 = 431 * ((((v778 >> 4) ^ 7) - ((v778 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v773))
       + 290925;
  v780 = *(unsigned __int8 *)(v19 + (v779 - 957 * ((4487950 * (unint64_t)v779) >> 32)));
  v781 = v756 >> 8 >> ((v780 & 4 ^ 4) + (v780 & 4));
  v782 = v781 - ((2 * v781) & 0xC1B75A) + 492886957;
  v783 = (((unsigned __int16)v738 >> 12) & 0xFFFFFF0F | (16 * (v782 & 0xF))) ^ 0xD2;
  v784 = 431 * ((v783 - 1172080016 - ((2 * v783) & 0xE0)) ^ 0xBA237A70);
  v785 = 431 * (*(unsigned __int8 *)(v19 + (v784 + 290925) % 0x3BD) ^ (16 * (v780 ^ 0x78)) ^ 0x78);
  v786 = v785 + 290925 - 957 * ((4487950 * (unint64_t)(v785 + 290925)) >> 32);
  v787 = *(unsigned __int8 *)(v19 + (v785 - 957 * ((4487950 * (unint64_t)v785) >> 32)));
  v788 = (((v787 >> 4) ^ 7) - ((v787 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v784 % 0x3BD);
  v789 = ((*(unsigned __int8 *)(v19 + v786) ^ 0x78) << 12) ^ ((*(unsigned __int8 *)(v19 + v777) ^ 0x78) << 8);
  v790 = 431 * v788 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v788 + 290925)) >> 32);
  v791 = 431
       * ((((v782 & 0xF0 | HIWORD(v738) & 0xF) ^ 0xA2)
         - 1884952125
         - 2 * (((v782 & 0xF0 | HIWORD(v738) & 0xF) ^ 0xA2) & 0xFFFFFFDF ^ (v782 & 0x10 | HIWORD(v738) & 0xC))) ^ 0x8FA5E9C3);
  v792 = 431
       * (*(unsigned __int8 *)(v19 + (v791 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v19 + v790) ^ 0x78)) ^ 0x78);
  v793 = v792 + 290925 - 957 * ((4487950 * (unint64_t)(v792 + 290925)) >> 32);
  v794 = *(unsigned __int8 *)(v19 + (v792 - 957 * ((4487950 * (unint64_t)v792) >> 32))) ^ 0x78;
  v795 = (v794 - 1228360096 - ((2 * v794) & 0xC0)) ^ 0xB6C8B660;
  v796 = ((v795 >> 4) - ((v795 >> 3) & 0xF0) + 120) ^ *(unsigned __int8 *)(v19 + v791 % 0x3BD);
  v797 = ((v782 >> 4) & 0xF0 | (v734 >> 20) & 0xF) ^ 0xB7;
  v798 = 431 * ((v797 - 930322126 - 2 * (v797 & 0x3A ^ (v734 >> 20) & 8)) ^ 0xC88C6932);
  v799 = v798 % 0x3BD;
  v800 = 431
       * (*(unsigned __int8 *)(v19 + (v798 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (431 * v796 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v796 + 290925)) >> 32))) ^ 0x78)) ^ 0x78);
  v801 = ((*(unsigned __int8 *)(v19
                              + (v800
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v800 + 290925)) >> 32))) ^ 0x78) << 20) ^ ((*(unsigned __int8 *)(v19 + v793) ^ 0x78) << 16);
  v802 = *(unsigned __int8 *)(v19 + (v800 - 957 * ((4487950 * (unint64_t)v800) >> 32))) >> 4;
  v803 = 431 * (((v802 ^ 7) + 2 * ((v802 ^ 7 | 0x78) ^ v802) + 122) ^ *(unsigned __int8 *)(v19 + v799))
       + 290925;
  v804 = ((v782 >> 8) & 0xF0 | HIBYTE(v734) & 0xF) ^ 0xDC;
  v805 = 431 * ((v804 - 508603877 - ((2 * v804) & 0x36)) ^ 0xE1AF521B);
  v806 = 431
       * (*(unsigned __int8 *)(v19 + (v805 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v19
                                                                                     + (v803 - 957 * ((4487950 * (unint64_t)v803) >> 32))) ^ 0x78)) ^ 0x78);
  v807 = v806 - 957 * ((4487950 * (unint64_t)v806) >> 32);
  v808 = 431
       * ((((*(_BYTE *)(v19 + v807) >> 4) ^ 7) - ((*(_BYTE *)(v19 + v807) >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(v19 + v805 % 0x3BD))
       + 290925;
  v809 = 431 * (((v782 >> 12) & 0xF0 | (v734 >> 28)) ^ 6) + 290925;
  v810 = 431
       * (*(unsigned __int8 *)(v19 + (v809 - 957 * ((4487950 * (unint64_t)v809) >> 32))) ^ (16 * (*(unsigned __int8 *)(v19 + (v808 - 957 * ((4487950 * (unint64_t)v808) >> 32))) ^ 0x78)) ^ 0x78)
       + 290925;
  v811 = (431 * (v775 & 0xF0 ^ 0x60 | v765) + 168952) % 0x3BD;
  v812 = v789 ^ v775;
  v813 = 431 * (((v812 >> 4) & 0xF0 | (v741 >> 8) & 0xF) ^ 0x70) + 168952;
  v814 = (431 * (((v789 >> 8) & 0xF0 | ((unsigned __int16)v738 >> 12)) ^ 2) + 167995) % 0x3BD;
  v815 = v812 ^ 0x6842F454 ^ v801;
  v816 = v815 ^ ((*(unsigned __int8 *)(v19
                                     + (v806
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v806 + 290925)) >> 32))) ^ 0x78) << 24);
  v817 = 431 * (((v815 >> 12) & 0xF0 | HIWORD(v738) & 0xF) ^ 0xC2) + 168952;
  v818 = 431 * ((HIWORD(v801) & 0xF0 | (v734 >> 20) & 0xF) ^ 7) + 168952;
  v819 = v816 ^ ((*(unsigned __int8 *)(v19 + (v810 - 957 * ((4487950 * (unint64_t)v810) >> 32))) ^ 8) << 28);
  v820 = 431 * (((v816 >> 20) & 0xF0 | HIBYTE(v734) & 0xF) ^ 0x4C) + 168952;
  v821 = v820 - 957 * ((4487950 * (unint64_t)v820) >> 32);
  v822 = HIBYTE(v819) & 0xF0 | (v734 >> 28);
  v823 = (2 * v821) & 0x3A0;
  v821 += 360730064;
  v824 = v821 - v823;
  v825 = 431 * ((v822 ^ 0xD6) - 1015160005 * (v821 & 0x18 ^ LODWORD(STACK[0x4B4]) | v821 & 0x18 ^ 0x10));
  v826 = *(unsigned __int8 *)(v19 + (431 * ((16 * (v771 & 0xF)) ^ 0x80 | v757) + 168952) % 0x3BD);
  v827 = v826 ^ (16 * (*(unsigned __int8 *)(v19 + v811) ^ 0x78));
  v828 = v827 ^ ((*(unsigned __int8 *)(v19 + (v813 - 957 * ((4487950 * (unint64_t)v813) >> 32))) ^ 0x78) << 8);
  v829 = v828 ^ ((*(unsigned __int8 *)(v19 + v814) ^ 0x78) << 12);
  v830 = v829 ^ ((*(unsigned __int8 *)(v19 + (v817 - 957 * ((4487950 * (unint64_t)v817) >> 32))) ^ 0x78) << 16);
  v831 = v830 ^ ((*(unsigned __int8 *)(v19 + (v818 - 957 * ((4487950 * (unint64_t)v818) >> 32))) ^ 0x78) << 20);
  v832 = v831 ^ ((*(unsigned __int8 *)(v19 + (v824 ^ 0x15804DD0u)) ^ 0x78) << 24);
  v833 = 431 * ((v832 ^ ((*(unsigned __int8 *)(v19 + v825 % 0x3BD) ^ 8) << 28)) >> 28) + 404709;
  v834 = ((*(unsigned __int8 *)(v19
                              + (431 * (HIBYTE(v832) & 0xF)
                                             + 404709
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * (HIBYTE(v832) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(v19 + (v833 - 957 * ((4487950 * (unint64_t)v833) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (431 * (HIWORD(v830) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v830) & 0xF) + 404709)) >> 32))) ^ 0x78;
  v835 = 431 * ((v827 >> 4) ^ 7) + 404709;
  LODWORD(STACK[0x700]) ^= *(unsigned __int8 *)(v19
                                              + (431 * (v826 & 0xF ^ 8)
                                                             + 404709
                                                             - 957
                                                             * ((4487950
                                                               * (unint64_t)(431 * (v826 & 0xF ^ 8u) + 404709)) >> 32))) ^ (((*(unsigned __int8 *)(v19 + (431 * ((unsigned __int16)v829 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v829 >> 12) + 404709)) >> 32))) ^ 0x78) << 12) | (16 * (*(unsigned __int8 *)(v19 + (v835 - 957 * ((4487950 * (unint64_t)v835) >> 32))) ^ 0x78))) ^ (((v834 << 8) ^ ((*(unsigned __int8 *)(v19 + (431 * ((v831 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v831 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(v19 + (431 * ((v828 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v828 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8);
  JUMPOUT(0x18CA185B4);
}

void sub_18CA19C48(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  _BYTE *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  char v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  char v29;
  int v30;
  unsigned int v31;
  int v32;

  LODWORD(STACK[0x52C]) = 0;
  v15 = LODWORD(STACK[0x644]) + 2161;
  LODWORD(STACK[0x658]) = a4;
  LODWORD(STACK[0x6F4]) = a4 + a3;
  LODWORD(STACK[0x700]) = v15;
  v16 = (v14 & 0x43801 ^ 0x2800 | (v15 ^ 0x609) & v14 | 0x844201D4) + ((a4 + a3 - 781071535) ^ (v8 - 1126808428));
  LODWORD(STACK[0x6C8]) = v16 - 659010957 - ((2 * v16) & 0xB17094E6);
  LODWORD(STACK[0x690]) = v6;
  v17 = LODWORD(STACK[0x708]) + a2;
  LODWORD(STACK[0x6DC]) = a3 - v8;
  LODWORD(STACK[0x680]) = (v17 + 788450182) ^ (a1 - 389666555);
  LODWORD(STACK[0x6D0]) = a2 - a1;
  v18 = STACK[0x6B4];
  v19 = (_BYTE *)STACK[0x710];
  v19[2144] = HIBYTE(LODWORD(STACK[0x6B4])) ^ 0x88;
  v20 = STACK[0x6A0];
  v19[2148] = HIBYTE(LODWORD(STACK[0x6A0])) ^ 0xBC;
  v21 = STACK[0x698];
  v19[2152] = HIBYTE(LODWORD(STACK[0x698])) ^ 0xBC;
  v22 = STACK[0x688];
  v19[2156] = HIBYTE(LODWORD(STACK[0x688])) ^ 0x14;
  v23 = STACK[0x668];
  v19[2164] = HIBYTE(LODWORD(STACK[0x668])) ^ 6;
  v19[2168] = HIBYTE(a5) ^ 0x72;
  v24 = STACK[0x670];
  v25 = (HIBYTE(LODWORD(STACK[0x670])) ^ 0x15) - ((2 * (HIBYTE(LODWORD(STACK[0x670])) ^ 0x15)) & 0xF0);
  v19[2160] = HIBYTE(v7) ^ 4;
  v19[2172] = HIBYTE(a6) ^ 0x52;
  v19[1104] = (HIBYTE(v11) ^ 0xA5) - ((2 * (HIBYTE(v11) ^ 0xA5)) & 0xF0) + 120;
  v26 = STACK[0x6A8];
  v19[1108] = (HIBYTE(LODWORD(STACK[0x6A8])) ^ 0xBE) + (~(2 * (HIBYTE(LODWORD(STACK[0x6A8])) ^ 0xBE)) | 0xF) + 121;
  v27 = STACK[0x6C0];
  v19[1112] = (HIBYTE(LODWORD(STACK[0x6C0])) ^ 0xF8)
            - 2 * ((HIBYTE(LODWORD(STACK[0x6C0])) ^ 0xF8) & 0xFD ^ HIBYTE(LODWORD(STACK[0x6C0])) & 5)
            + 120;
  LODWORD(STACK[0x678]) = v9;
  v28 = STACK[0x6E0];
  v29 = (HIBYTE(LODWORD(STACK[0x6E0])) ^ 0xC3) - ((2 * (HIBYTE(LODWORD(STACK[0x6E0])) ^ 0xC3)) & 0xF0);
  v19[1132] = (~(~v10 >> 23) | 0xF) + (~v10 >> 24) + 121;
  v19[1124] = v29 + 120;
  v19[1116] = v25 + 120;
  v19[1128] = (HIBYTE(v12) ^ 0xE7) + (~(2 * (HIBYTE(v12) ^ 0xE7)) | 0xF) + 121;
  v30 = STACK[0x6B8];
  v31 = (LODWORD(STACK[0x6B8]) ^ 0xF721D182) >> ((8 * (v14 & 0x63 | (-1 - v14) & 0x60)) & 0x18);
  v19[1120] = v31 - ((2 * v31) & 0xF0) + 120;
  v19[2145] = BYTE2(v18) ^ 0xFD;
  v19[2161] = BYTE2(v7) ^ 0xB6;
  v19[2149] = BYTE2(v20) ^ 0x2C;
  v19[2165] = BYTE2(v23) ^ 0x71;
  v19[2153] = BYTE2(v21) ^ 0xF3;
  v19[2169] = BYTE2(a5) ^ 0xCC;
  v19[2173] = BYTE2(a6) ^ 0xB5;
  v19[2157] = BYTE2(v22) ^ 0xE2;
  v19[1109] = (BYTE2(v26) ^ 0x94) + (~(2 * (BYTE2(v26) ^ 0x94)) | 0xF) + 121;
  v19[1105] = (BYTE2(v11) ^ 0x49) + (~(2 * (BYTE2(v11) ^ 0x49)) | 0xF) + 121;
  v19[1117] = (BYTE2(v24) ^ 0xD3) + (~(2 * (BYTE2(v24) ^ 0xD3)) | 0xF) + 121;
  v19[1129] = (BYTE2(v12) ^ 0x9E) - ((2 * (BYTE2(v12) ^ 0x9E)) & 0xF0) + 120;
  v19[1133] = (BYTE2(v10) ^ 0xD1) + (~(2 * (BYTE2(v10) ^ 0xD1)) | 0xF) + 121;
  v19[1121] = (BYTE2(v30) ^ 0x21) + ~(2 * ((BYTE2(v30) ^ 0x21) & 0x7A ^ BYTE2(v30) & 2)) + 121;
  v19[1113] = (BYTE2(v27) ^ 0xE2) - ((2 * (BYTE2(v27) ^ 0xE2)) & 0xF0) + 120;
  v19[1125] = (BYTE2(v28) ^ 0x93) - ((2 * (BYTE2(v28) ^ 0x93)) & 0xF0) + 120;
  v19[2146] = BYTE1(v18) ^ 0x17;
  v19[2154] = BYTE1(v21) ^ 0x56;
  v19[2150] = BYTE1(v20) ^ 0xB2;
  *(_BYTE *)(STACK[0x4D0] + (((-v13 & 0x10 ^ 0x14) + (-v13 & 0x10u)) | 0x12)) = BYTE1(v23) ^ 0x71;
  v19[2162] = BYTE1(v7) ^ 0x52;
  v19[2158] = BYTE1(v22) ^ 0x57;
  v19[2170] = BYTE1(a5) ^ 4;
  v19[2174] = ((a6 ^ 0xFD1A7F4A) >> ((v18 & 8 ^ 8) + (v18 & 8))) ^ 0xAF;
  v19[1114] = (BYTE1(v27) ^ 0x61) - ((2 * (BYTE1(v27) ^ 0x61)) & 0xF0) + 120;
  v19[1126] = (BYTE1(v28) ^ 6) - ((v28 >> 7) & 0xF0) + 120;
  v19[1122] = (BYTE1(v30) ^ 0xD1) - ((2 * (BYTE1(v30) ^ 0xD1)) & 0xF0) + 120;
  v19[1110] = BYTE1(v26) ^ 0x1F;
  v19[1106] = (BYTE1(v11) ^ 0x29) - ((2 * (BYTE1(v11) ^ 0x29)) & 0xF0) + 120;
  v19[1118] = (BYTE1(v24) ^ 0x44) - 2 * ((BYTE1(v24) ^ 0x44) & 0x7A ^ BYTE1(v24) & 2) + 120;
  v19[1134] = (BYTE1(v10) ^ 0x21) - 2 * ((BYTE1(v10) ^ 0x21) & 0x7E ^ BYTE1(v10) & 6) + 120;
  v19[2151] = v20 ^ 0x1C;
  v19[2147] = v18 ^ 0x8F;
  v19[2155] = v21 ^ 0x9C;
  v19[2163] = v7 ^ 0x87;
  v32 = STACK[0x6F4];
  LODWORD(STACK[0x6F8]) = LODWORD(STACK[0x6F4]) + 2034604091;
  v19[2159] = v22 ^ 0xBA;
  LODWORD(STACK[0x6F4]) = LODWORD(STACK[0x6DC]) - v32 - 34429700;
  v19[2171] = a5 ^ 0xC4;
  v19[2167] = v23 ^ 0x23;
  v19[2175] = a6 ^ 0xE5;
  *(_BYTE *)(STACK[0x4D8] + ((v26 >> 8) & 0x1A ^ 0x18 | (v26 >> 8) & 0x1A ^ 2)) = (BYTE1(v12) ^ 0x2C)
                                                                                - 2
                                                                                * ((BYTE1(v12) ^ 0x2C) & 0xF9 ^ BYTE1(v12) & 1)
                                                                                + 120;
  v19[1107] = v11 ^ 0xD3;
  v19[1115] = v27 ^ 0xFD;
  v19[1119] = v24 ^ 0xDE;
  v19[1111] = v26 ^ 0xF9;
  v19[1131] = v12 ^ 0x78;
  v19[1123] = v30 ^ 0xFA;
  v19[1135] = v10 ^ 0x4F;
  v19[1127] = v28 ^ 0x41;
  LODWORD(STACK[0x554]) = 1;
  JUMPOUT(0x18CA01BA0);
}

uint64_t sub_18CA1A330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  int v8;
  unint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD);

  v9 = (LODWORD(STACK[0x6F4]) - 1280);
  v10 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v6 + 8 * (((v8 - LODWORD(STACK[0x524]) + v7 != 860677773) * (LODWORD(STACK[0x6F4]) - 2463)) ^ LODWORD(STACK[0x6F4]))) - (v9 ^ 0x4C4));
  STACK[0x6C8] = v9;
  return v10(153053306, 113, LODWORD(STACK[0x6C0]), LODWORD(STACK[0x708]), a5, a6, LODWORD(STACK[0x6E0]), LODWORD(STACK[0x6DC]));
}

uint64_t sub_18CA1A3C8@<X0>(int a1@<W0>, __int16 a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  __int16 v15;
  int v16;
  unsigned int v17;
  int v18;
  unint64_t v19;
  unsigned int v20;
  _BYTE *v21;
  char v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unint64_t v28;
  unint64_t v30;
  int v31;
  __int16 v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  unint64_t v39;
  int v40;
  int v41;
  unint64_t v42;
  unsigned int v43;
  int v44;
  unint64_t v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned __int16 v62;
  unsigned __int16 v63;
  int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  unint64_t v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  unint64_t v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  uint64_t v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  int v110;
  int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  int v118;
  int v119;
  unsigned int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  unint64_t v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  int v133;
  int v134;
  int v135;
  unsigned int v136;
  int v137;
  unint64_t v138;
  int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  int v152;

  v19 = (a8 - 1501012724) & 0x59779DDE;
  v20 = 8 * LODWORD(STACK[0x528]) - ((16 * LODWORD(STACK[0x528]) + 290420528) & 0xFA1F08D0) + 95895555;
  v21 = (_BYTE *)STACK[0x710];
  v21[1296] = v20 ^ *(_BYTE *)(STACK[0x710] + 1296) ^ 0x6B;
  v22 = v21[1822] ^ BYTE1(v20);
  STACK[0x6C8] = v19;
  v21[1822] = v22 ^ (v19 - 72);
  v21[1391] ^= BYTE2(v20) ^ 0xF;
  v21[1917] ^= HIBYTE(v20) ^ 0xFD;
  LODWORD(STACK[0x6D0]) = a5;
  LODWORD(STACK[0x708]) = a4;
  LODWORD(STACK[0x6DC]) = a7;
  LODWORD(STACK[0x6F8]) = v8;
  LODWORD(STACK[0x6C0]) = a1;
  v23 = STACK[0x6C8] + 134;
  v24 = v8 * v11;
  v25 = v8 * v11 + 1054689452;
  LODWORD(STACK[0x6E0]) = v25;
  LODWORD(STACK[0x6B8]) = v24;
  LODWORD(STACK[0x700]) = v23;
  v26 = v23 ^ 0x6EF;
  v28 = ((v25 + 862) * (unint64_t)v17) >> 32;
  v30 = ((v25 + 1293) * (unint64_t)v17) >> 32;
  v31 = v9 - 127218481;
  v32 = a1 * a2;
  v24 += 1054717898;
  LODWORD(v19) = v12;
  v33 = (v25 + 431) % v26;
  STACK[0x6A8] = (unsigned __int16)(a1 * a2
                                  + 7839
                                  - ((unsigned __int16)(((unsigned __int16)(a1 * a2 + 7839) * v16) >> 16) >> 8)
                                  * v15);
  v34 = *(unsigned __int8 *)(v13
                           + v25
                           - ((((v25 * (unint64_t)v17) >> 32)
                                           + ((v25 - ((v25 * (unint64_t)v17) >> 32)) >> 1)) >> 9)
                           * v18);
  v35 = *(unsigned __int8 *)(v13
                           + v24
                           - ((((v24 * (unint64_t)v17) >> 32)
                                           + ((v24 - ((v24 * (unint64_t)v17) >> 32)) >> 1)) >> 9)
                           * v18);
  v36 = *(unsigned __int8 *)(v13 + v25 + 862 - ((v28 + ((v25 + 862 - v28) >> 1)) >> 9) * v18);
  v37 = *(unsigned __int8 *)(v13
                           + v25
                           + 1293
                           - ((v30 + ((v25 + 1293 - v30) >> 1)) >> 9) * v18);
  v38 = v9 - ((2 * v9 + 1893046686) & 0x60187CC6) + 678890290;
  v39 = ((v24 + 431) * (unint64_t)v17) >> 32;
  v40 = *(unsigned __int8 *)(v13 + v33);
  v41 = *(unsigned __int8 *)(v13 + v24 + 431 - ((v39 + ((v24 + 431 - v39) >> 1)) >> 9) * v18);
  LODWORD(STACK[0x6F4]) = v24;
  v42 = ((v24 + 862) * (unint64_t)v17) >> 32;
  v43 = v42 + ((v24 + 862 - v42) >> 1);
  LODWORD(v42) = (v34 ^ 0xC4) << 24;
  LODWORD(v39) = v35 ^ 0x78;
  v44 = *(unsigned __int8 *)(v13 + v24 + 862 - (v43 >> 9) * v18);
  v45 = ((v24 + 1293) * (unint64_t)v17) >> 32;
  LODWORD(v28) = v19;
  v46 = v45 + ((v24 + 1293 - v45) >> 1);
  LODWORD(v45) = v37 ^ v31;
  v47 = *(unsigned __int8 *)(v13 + v24 + 1293 - (v46 >> 9) * v18);
  v48 = (_DWORD)v39 << 24;
  v49 = v38 ^ (v14 - ((2 * v14 + 78541486) & 0x609EFDAC) - 223954899);
  LOWORD(v39) = a1 * a2
              + 381
              - ((unsigned __int16)(((unsigned __int16)(a1 * a2 + 381) * v16) >> 16) >> 8) * v15;
  v50 = v19 ^ 0x65CD7460;
  v51 = ((a3 - 1627961187) ^ 0xED182BA1)
      + 1012270700
      - 2 * (((a3 - 1627961187) ^ 0xED182BA1) & 0x3C56066E ^ (a3 - 1627961187) & 2);
  v52 = v48 | ((v41 ^ 0x78) << 16);
  v53 = (((a6 - 1481848334) ^ 0x3C56066C ^ v51)
       + 2018526055
       + (~(2 * ((a6 - 1481848334) ^ 0x3C56066C ^ v51)) | 0xF5F7931)
       + 1) ^ 0x78504367;
  LODWORD(STACK[0x6B4]) = ((2 * (v53 + (v38 ^ 0x300C3E63))) & 0xEFBFFFEA) + ((v53 + (v38 ^ 0x300C3E63)) ^ 0xF7DFFFF5);
  v54 = v42 | ((v40 ^ 0xC4) << 16);
  LODWORD(v42) = ((2 * ((v51 ^ 0xC3A9F993) + v53 + 1)) & 0x7F3FFF5E) + (((v51 ^ 0xC3A9F993) + v53 + 1) ^ 0xBF9FFFAF);
  v55 = STACK[0x708];
  v56 = v52 | ((v44 ^ 0x78) << 8);
  v57 = ((LODWORD(STACK[0x708]) - 1269695622) ^ 0xED182BA1)
      - 218562795
      - 2
      * (((LODWORD(STACK[0x708]) - 1269695622) ^ 0xED182BA1) & 0x72F8FF1D ^ (LODWORD(STACK[0x708]) - 1269695622) & 8);
  v58 = v14 - v42;
  v59 = (((LODWORD(STACK[0x6D0]) + v10) ^ 0xF2F8FF15 ^ v57)
       - 1774545213
       - ((2 * ((LODWORD(STACK[0x6D0]) + v10) ^ 0xF2F8FF15 ^ v57)) & 0x2C752D86)) ^ 0x963A96C3;
  LODWORD(v45) = v45 ^ (v54 | ((v36 ^ 0xC4) << 8));
  v60 = ((2 * (v59 + (v19 ^ 0x9A328B9F))) & 0xF5FFF9F4) + ((v59 + (v19 ^ 0x9A328B9F)) ^ 0x7AFFFCFA);
  v61 = ((2 * ((v57 ^ 0xD0700EA) + v59 + 1)) & 0xA55FF37C) + (((v57 ^ 0xD0700EA) + v59 + 1) ^ 0x52AFF9BE);
  LOWORD(v36) = v32;
  v62 = (unsigned __int16)(v32 + 15749) % 0x112u;
  v63 = v32 - 7642;
  v64 = v45 ^ 0x78;
  LOWORD(v54) = v63 % 0x112u;
  LODWORD(v19) = STACK[0x6DC];
  v65 = v45 ^ 0xC4;
  LODWORD(v45) = LODWORD(STACK[0x6DC])
               - v61
               - 2 * ((LODWORD(STACK[0x6DC]) - v61 + 1728572992) & 0x56BA311D ^ (LODWORD(STACK[0x6DC]) - v61) & 5)
               - 1111351464;
  v66 = v49 ^ v64;
  LODWORD(STACK[0x6D0]) = ((2 * ((v45 ^ 0x56BA3118) + (v57 ^ 0xF2F8FF15))) & 0x7FE77FD2)
                        + (((v45 ^ 0x56BA3118) + (v57 ^ 0xF2F8FF15)) ^ 0xBFF3BFE9);
  v67 = STACK[0x6E0];
  v68 = LODWORD(STACK[0x6E0]) + 1724;
  v69 = (v56 | v47 ^ 0x78) - 1222479304 - 2 * ((v56 | v47 ^ 0x78) & 0x37227239 ^ (v47 ^ 0x78) & 1);
  v70 = LODWORD(STACK[0x6E0]) + 2155;
  LODWORD(STACK[0x6A0]) = v58;
  v71 = v58 - ((2 * v58 + 1911507292) & 0x5074552C) - 1590571196;
  v72 = STACK[0x710];
  *(_DWORD *)(STACK[0x710] + 4 * STACK[0x6A8]) = v64 ^ 0x8732BC59;
  LODWORD(v28) = v69 ^ v28;
  LODWORD(STACK[0x690]) = v71;
  v73 = ((2 * ((v71 ^ 0xA83A2A96) + (v51 ^ 0x3C56066C))) & 0xF7FAFEFE)
      + (((v71 ^ 0xA83A2A96) + (v51 ^ 0x3C56066C)) ^ 0xFBFD7F7F);
  v74 = ((*(unsigned __int8 *)(STACK[0x718] + v68 % 0x3BD) ^ 0xC4) << 24) | ((*(unsigned __int8 *)(STACK[0x718]
                                                                                                 + v70 % 0x3BD) ^ 0xC4) << 16);
  STACK[0x6A8] = (unsigned __int16)v54;
  v75 = v74 | ((*(unsigned __int8 *)(STACK[0x718] + (v67 + 2586) % 0x3BDu) ^ 0xC4) << 8);
  v76 = *(unsigned __int8 *)(STACK[0x718] + (v67 + 3017) % 0x3BDu) ^ 0x78;
  v77 = -492275930 - v19 + ((v19 + 492275930) ^ 0x2D10F9A7 ^ v28);
  v78 = (v75 | v76) + 1767468975 - 2 * ((v75 | v76) & 0x69596FBF ^ v76 & 0x10);
  LODWORD(STACK[0x698]) = v78;
  *(_DWORD *)(v72 + 4 * (unsigned __int16)v39) = v28 ^ 0x57009AC8;
  v79 = v65 + a3 - 1627961187 - 1084801262 - ((2 * (v65 + a3 - 1627961187) - 1970423994) & 0xF420C6DE);
  v80 = 431 * (LODWORD(STACK[0x6F8]) + (v45 & 0x143 ^ 0x100) + (v45 & 0x143 ^ 0x43)) + 1054580409;
  LODWORD(v19) = *(unsigned __int8 *)(STACK[0x718] + (LODWORD(STACK[0x6F4]) + 2155) % 0x3BDu);
  v81 = (v50 + (v69 ^ 0xB7227238) + 1) ^ v77;
  v82 = (LODWORD(STACK[0x6F4]) + 2586) % 0x3BDu;
  LODWORD(v39) = LODWORD(STACK[0x6F4]) + 3017;
  v83 = v78 ^ v71;
  STACK[0x688] = (unsigned __int16)(v36 + 494) % 0x112u;
  v84 = STACK[0x6B4];
  v85 = 1269695622 - v55 + (((v66 ^ 0x7FBCBFF6) + (v66 ^ 0xAD53B9AE ^ v28) + 1) ^ v81);
  v86 = (v45 ^ 0xA945CEE7) + (v45 ^ 0x97D9749D ^ v78 ^ v71);
  v87 = v80 % 0x3BD;
  v88 = *(unsigned __int8 *)(STACK[0x718] + v82) ^ 0x78;
  v89 = *(unsigned __int8 *)(STACK[0x718] + v39 % 0x3BD);
  LODWORD(v42) = v42 + LODWORD(STACK[0x6B4]) - ((2 * (v42 + LODWORD(STACK[0x6B4])) + 138453852) & 0x130AE80C) - 39467596;
  v90 = v42 ^ (LODWORD(STACK[0x6A0]) - 117988178);
  v91 = v60 + v61 - ((2 * (v60 + v61) + 467711284) & 0x14EE1426) + 1751606445;
  v92 = LODWORD(STACK[0x6B4]) + 1916998869;
  LODWORD(STACK[0x6A0]) = (v86 + 1) ^ (((v60 - 1331669928) ^ 0xC1634585 ^ v83) - v60 + 1331669928);
  v93 = v90 ^ v92;
  LODWORD(STACK[0x708]) = v90 ^ v92;
  v94 = v73 + ((2 * v42) ^ 0x130AE80C);
  *(_DWORD *)(v72 + 4 * v62) = v85 - 830842721 - ((2 * v85 - 1462506912) & 0xF420C6DE);
  v95 = (v90 ^ 0x89857406) - 67272833 - v94 - ((2 * ((v90 ^ 0x89857406) - 67272833 - v94)) & 0xCA5450D8);
  LOWORD(v55) = v36;
  v96 = v45 ^ v91 ^ (v60 - 282912816);
  LODWORD(STACK[0x6DC]) = v96;
  *(_DWORD *)(v72 + 4 * STACK[0x6A8]) = v79;
  v97 = STACK[0x6D0];
  v98 = LODWORD(STACK[0x6D0]) + ((2 * v91) ^ 0x14EE1426);
  *(_DWORD *)(v72 + 4 * ((unsigned __int16)(v36 + 7952) % 0x112u)) = v83 ^ 0x4651F960;
  v99 = v72;
  LODWORD(STACK[0x6A8]) = v98;
  v100 = (v45 ^ v91 ^ 0x5CCD3B0B)
       - 1074544663
       - v98
       - ((2 * ((v45 ^ v91 ^ 0x5CCD3B0B) - 1074544663 - v98)) & 0xEA24B778);
  LODWORD(v39) = *(unsigned __int8 *)(STACK[0x718] + v87);
  LODWORD(STACK[0x680]) = ((2 * ((v96 ^ 0x5CCD3B0B) + (v91 ^ 0xA770A13))) & 0xE3FEDDF4)
                        + (((v96 ^ 0x5CCD3B0B) + (v91 ^ 0xA770A13)) ^ 0x71FF6EFA);
  v101 = ((2 * ((v93 ^ 0x89857406) + (v42 ^ 0x89857406))) & 0xCDFED6EE)
       + (((v93 ^ 0x89857406) + (v42 ^ 0x89857406)) ^ 0xE6FF6B77);
  v102 = STACK[0x6B8];
  LODWORD(v72) = LODWORD(STACK[0x6B8]) + 1054693762;
  v103 = (((v39 ^ 0x78) << 24) | ((v19 ^ 0x78) << 16) | (v88 << 8) | v89 ^ 0x78) ^ v45;
  v104 = v84 + 868241757;
  v105 = (unsigned __int16)STACK[0x688];
  v106 = LODWORD(STACK[0x690]) ^ 0x17FE471;
  v107 = v73 + 67272833;
  v108 = v95 - 450221972;
  v109 = v100 + 1964137404;
  v110 = LODWORD(STACK[0x698]) ^ 0x3FE35E0B;
  v111 = ((*(unsigned __int8 *)(STACK[0x718] + (LODWORD(STACK[0x6E0]) + 3448) % 0x3BDu) ^ 0xC4) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + (LODWORD(STACK[0x6E0]) + 3879) % 0x3BDu) ^ 0xC4) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + v72 % 0x3BD) ^ 0xC4) << 8) | *(unsigned __int8 *)(STACK[0x718] + (LODWORD(STACK[0x6B8]) + 1054694193) % 0x3BDu) ^ 0x78;
  v112 = (v111 ^ (v94 + 67272833)) - ((2 * (v111 ^ (v94 + 67272833))) & 0xF42FA7D6) - 99101717;
  STACK[0x6E0] = (unsigned __int16)(v36 + 8065) % 0x112u;
  *(_DWORD *)(v99 + 4 * v105) = v103 ^ 0x2CAA5277;
  LODWORD(v45) = STACK[0x680];
  v113 = 2 * LODWORD(STACK[0x680]);
  v114 = LODWORD(STACK[0x6A0]) ^ ((v106 ^ v103 ^ v104) + (v110 ^ v103 ^ v104) + 1);
  LODWORD(v19) = LODWORD(STACK[0x680]) - ((v113 + 141750948) & 0x1465CBDC) - 294887616;
  v115 = v98 + 1074544663;
  v116 = (((*(unsigned __int8 *)(STACK[0x718] + (LODWORD(STACK[0x6F4]) + 3448) % 0x3BDu) ^ 0x78) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + (LODWORD(STACK[0x6F4]) + 3879) % 0x3BDu) ^ 0x78) << 16) | ((*(unsigned __int8 *)(STACK[0x718] + (v102 + 1054722208) % 0x3BDu) ^ 0x78) << 8) | *(unsigned __int8 *)(STACK[0x718] + (v102 + 1054722639) % 0x3BDu) ^ 0x78) ^ (v98 + 1074544663);
  v117 = v116 + 2047894383 - ((2 * v116) & 0xF420C6DE);
  LODWORD(v105) = v101 - ((2 * v101 - 562890326) & 0xF4EDBF90) + 1773165725;
  *(_DWORD *)(v99 + 4 * ((unsigned __int16)(v36 + 15862) % 0x112u)) = v107
                                                                      + (v103 ^ 0x56BA3118)
                                                                      - 830842721
                                                                      - ((2 * (v107 + (v103 ^ 0x56BA3118)) - 1462506912) & 0xF420C6DE);
  LODWORD(STACK[0x6F4]) = v101 - ((2 * v101 - 516802864) & 0x805D87C6);
  STACK[0x6B8] = (unsigned __int16)(v36 + 15975) % 0x112u;
  *(_DWORD *)(v99 + 4 * ((unsigned __int16)(v36 - 7529) % 0x112u)) = v114
                                                                     - v97
                                                                     - ((2 * (v114 - v97) + 175453976) & 0xF420C6DE)
                                                                     + 2135621371;
  v118 = STACK[0x6DC];
  LODWORD(v42) = v109 ^ 0x8F0588EB ^ v112;
  v119 = ((*(unsigned __int8 *)(STACK[0x718] + ((int)v72 + 862) % 0x3BDu) ^ 0xC4) << 24) | ((*(unsigned __int8 *)(STACK[0x718] + ((int)v72 + 1293) % 0x3BDu) ^ 0xC4) << 16);
  v120 = v109 ^ 0x8AEDA443;
  LODWORD(STACK[0x6D0]) = v19 ^ v109;
  v121 = (v19 ^ 0x8A32E5EE) + v115;
  v122 = v105 ^ v108;
  LODWORD(v19) = STACK[0x708];
  v123 = v108 ^ LODWORD(STACK[0x708]) ^ v117;
  v124 = v45 - ((v113 - 885903414) & 0xD977DB3A);
  LODWORD(v39) = v119 | ((*(unsigned __int8 *)(STACK[0x718] + ((int)v72 + 1724) % 0x3BDu) ^ 0xC4) << 8) | *(unsigned __int8 *)(STACK[0x718] + ((int)v72 + 2155) % 0x3BDu) ^ 0x78;
  v125 = (v120 + v42 + 1) ^ ((v118 ^ 0xA332C4F4) + (v118 ^ 0xA6DAE85C ^ v112) + 1) ^ ((v123 ^ 0xE940C0FA)
                                                                                    + (v112 ^ v123 ^ 0xECA8EC52)
                                                                                    + 1);
  *(_DWORD *)(v99 + 4 * (unsigned __int16)STACK[0x6E0]) = v112 ^ 0x7D256FB2;
  v126 = STACK[0x718];
  *(_DWORD *)(v99 + 4 * ((unsigned __int16)(v55 + 607) % 0x112u)) = v117;
  LODWORD(v45) = LODWORD(STACK[0x6F4]) + 818405195;
  v127 = ((*(unsigned __int8 *)(v126 + (v102 + 1054723070) % 0x3BDu) ^ 0x78) << 24) | ((*(unsigned __int8 *)(v126 + (v102 + 1054723501) % 0x3BDu) ^ 0x78) << 16) | ((*(unsigned __int8 *)(v126 + (v102 + 1054723932) % 0x3BDu) ^ 0x78) << 8) | *(unsigned __int8 *)(v126 + (v102 + 1054724363) % 0x3BDu) ^ 0x78;
  *(_DWORD *)(v99 + 4 * (unsigned __int16)STACK[0x6B8]) = v125
                                                          - LODWORD(STACK[0x6A8])
                                                          - ((2 * (v125 - LODWORD(STACK[0x6A8])) + 683371058) & 0xF420C6DE)
                                                          - 1905387384;
  v128 = STACK[0x6F8];
  *(_DWORD *)(v99 + 4 * ((unsigned __int16)(v55 - 7416) % 0x112u)) = (v117 ^ 0x7A10636F)
                                                                     + v94
                                                                     + 67272833
                                                                     - 1084801262
                                                                     - ((2 * ((v117 ^ 0x7A10636F) + v94 + 67272833)
                                                                       - 1970423994) & 0xF420C6DE);
  LOWORD(v123) = v122;
  v129 = v122 ^ 0xCD3BCB36;
  v130 = v124 + 1381303682;
  v131 = v127 ^ (v124 + 1381303682);
  v132 = ((2020472796 - v128) & 0x4FFA1729 ^ (v128 + 127010851) & 0x4FFA1720) - 1341789993 + (v122 ^ 0xCD3BCB36);
  v133 = (v132 - ((2 * v132) & 0x62B5799E) - 1319453489) ^ v19 ^ 0x712FAB50 ^ v131;
  *(_DWORD *)(v99 + 4 * ((unsigned __int16)(v55 + 8178) % 0x112u)) = v39 ^ v45 ^ 0xC71C7FBA;
  v134 = STACK[0x6D0];
  LODWORD(v72) = (v105 ^ 0x7A76DFC8)
               + v94
               + 67272833
               - ((2 * ((v105 ^ 0x7A76DFC8) + v94 + 67272833)) & 0x292F4816)
               + 345482251;
  LODWORD(v42) = v131 ^ 0x96AB8EF2;
  v135 = (LODWORD(STACK[0x6D0]) ^ 0x52B87D3F) + (LODWORD(STACK[0x6D0]) ^ v39 ^ v45 ^ 0xED69419F) + 1;
  v136 = ((2 * v135) & 0xCD9FC7DE) + (v135 ^ 0xE6CFE3EF);
  HIDWORD(v138) = v136 + 17;
  LODWORD(v138) = v136 + 422583313;
  v137 = v138 >> 7;
  v139 = (v131 ^ 0xECBBED9D) + (v72 ^ 0x44E6BA19);
  v140 = (v72 ^ 0x44E6BA19) + (v45 ^ 0x402EC3E3) - ((2 * ((v72 ^ 0x44E6BA19) + (v45 ^ 0x402EC3E3))) & 0x15D6A864);
  v141 = v72 ^ v19 ^ 0x712FAB50;
  *(_DWORD *)(v99 + 4 * ((unsigned __int16)(v55 + 720) % 0x112u)) = v42;
  LODWORD(v138) = __ROR4__(((v133 ^ 0x13441262) + (v39 ^ v45 ^ 0xAC952EC2 ^ v133) + 1) ^ ((v118 ^ 0xEAC2A76D)+ (v118 ^ 0x55139BCD ^ v39 ^ v45)+ 1), 7);
  LODWORD(v45) = v121 - ((2 * v121) & 0xFC8C4C74) - 28957126;
  HIDWORD(v138) = v137 ^ v138 ^ 0x16973EB;
  LODWORD(v138) = v137 ^ v138 ^ 0xF8000000;
  LODWORD(v42) = (v141 ^ 0xF5BC06D6)
               - 2 * (((v141 ^ 0xF5BC06D6) + 304886032) & 0x333E587F ^ (v141 ^ 0xF5BC06D6) & 0xC)
               + 1164609923;
  v142 = (v45 ^ 0x51C8C7D7) + ((v138 >> 25) ^ 0xB4B9F5FC) + 1;
  *(_DWORD *)(v99 + 4 * ((unsigned __int16)(v55 + 16088) % 0x112u)) = v139
                                                                      - 830842721
                                                                      - ((2 * v139 - 1462506912) & 0xF420C6DE);
  v143 = v142 ^ 0xEF7B64EF;
  v144 = (v45 ^ 0xAE373828) + (v130 ^ 0xECBBED9D);
  v145 = (2 * v142) & 0xDEF6C9DE;
  v146 = ((2 * ((v72 ^ LODWORD(STACK[0x59C])) + v129)) & 0x7F60632E)
       + (((v72 ^ LODWORD(STACK[0x59C])) + v129) ^ 0x3FB03197);
  v147 = v145 + v143;
  v148 = ((2 * v42) & 0xDBA79DE0 ^ 0x422490E0) + (v42 ^ 0xDEED9683);
  v149 = (v45 ^ 0x6FEE525F) + (v134 ^ 0xAD4782C0);
  v140 -= 1964288974;
  v150 = (v140 ^ v141 ^ 0xF79189C5)
       + (v72 ^ 0x2C077656 ^ (v148 - 2 * (v148 & 0x2938A63A ^ (v42 ^ 0xDEED9683) & 2) - 1455905224));
  LODWORD(v42) = STACK[0x6C0];
  LODWORD(v19) = (v140 ^ 0xFDD270EC)
               - v146
               - ((2 * ((v140 ^ 0xFDD270EC) - v146) + 2122839416) & 0x984F54B8)
               - 1955879656;
  *(_DWORD *)(v99
            + 4
            * ((unsigned __int16)((v123 & 0x70 ^ 0x41 ^ ((v123 ^ 0x3D) + (v123 & 0xB ^ 0x76) + 1) & 0x79)
                                * (LODWORD(STACK[0x6C0]) - 26743))
             % 0x112u)) = v147 - ((2 * v147 - 1416172184) & 0xF420C6DE) - 807675357;
  v151 = v150 - 112273529 - ((2 * (v150 + 1)) & 0xF29DAF0C);
  v152 = (v144 ^ 0x773924DE) - v149 - ((2 * ((v144 ^ 0x773924DE) - v149) + 2133299786) & 0x6D0648E8) + 907472281;
  LODWORD(v72) = (v118 ^ 0xD4E432E5)
               + (v45 ^ v118 ^ v144 ^ 0x33CCBB9B)
               - 942516646
               - ((2 * ((v118 ^ 0xD4E432E5) + (v45 ^ v118 ^ v144 ^ 0x33CCBB9B) + 1)) & 0x8FA4ACB2);
  LODWORD(v99) = ((2 * ((v152 ^ 0x497CDB8B) + (v72 ^ 0xC7D25659) + 1)) & 0xF77C2B8C)
               + (((v152 ^ 0x497CDB8B) + (v72 ^ 0xC7D25659) + 1) ^ 0xFBBE15C6);
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6E8] + 8 * (int)((1076 * ((v42 - 153053302) > 0xF)) ^ (STACK[0x6C8] - 884))) - 12))((v42 + 4), 113, ((2 * ((v19 ^ 0x33D855A3) + (v151 ^ 0xF94ED786) + 1)) & 0xDFD56EE6)+ (((v19 ^ 0x33D855A3) + (v151 ^ 0xF94ED786) + 1) ^ 0xEFEAB773)+ 1897791472, (v99 + 1341124288), 2268249177, (v152 ^ 0x2ABA225) - 30409344 + ((2 * v152) & 0xAFEE3F6E ^ 0xAAA83B24), (v19 ^ 0x540B8DE4) - 597723216 + ((2 * (_DWORD)v19) & 0xF7E77CBC ^ 0x57E06434), (v149 - v99 + 1590870983));
}

uint64_t sub_18CA1BD28(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  __int16 v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v24;
  unint64_t v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v31;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  char v39;
  int v40;
  char v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  BOOL v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unint64_t v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  unint64_t v91;
  unsigned int v92;
  int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  char v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned __int8 v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  int v188;
  unsigned int v189;
  int v190;
  int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  int v218;
  int v219;
  int v220;
  unsigned int v221;
  unint64_t v222;

  LODWORD(STACK[0x6B8]) = v13;
  LODWORD(STACK[0x6F4]) = v8;
  v17 = LODWORD(STACK[0x700]) - 365;
  LODWORD(STACK[0x6F8]) = v17;
  v18 = v17 - 333607754 + ((a6 + v10) ^ 0x97B60EE7) - ((2 * ((a6 + v10) ^ 0x97B60EE7)) & 0xD83B2136);
  v19 = v8 * a2;
  LODWORD(STACK[0x6E0]) = v18 & 0xFEFFFFFF ^ 0xEC1D909B ^ (-1749676313 - (v18 & 0x1000000));
  v20 = *(_DWORD *)(STACK[0x710]
                  + 4
                  * (unsigned __int16)(v8 * a2
                                     - 18333
                                     - ((unsigned __int16)(((unsigned __int16)(v8 * a2 - 18333) * v16) >> 16) >> 8)
                                     * v15));
  v21 = *(_DWORD *)(STACK[0x710]
                  + 4
                  * (unsigned __int16)(v8 * a2
                                     - 25791
                                     - ((unsigned __int16)(((unsigned __int16)(v8 * a2 - 25791) * v16) >> 16) >> 8)
                                     * v15));
  HIDWORD(v25) = v20 ^ 0x65;
  LODWORD(v25) = v20 ^ (a5 + 39);
  v24 = v25 >> 7;
  v26 = v21 ^ 0x7A10636F;
  HIDWORD(v25) = v20 ^ LODWORD(STACK[0x598]);
  LODWORD(v25) = v20 ^ 0x87300000;
  v27 = v25 >> 18;
  v28 = *(_DWORD *)(STACK[0x710]
                  + 4
                  * (unsigned __int16)(v19
                                     - 16864
                                     - 274
                                     * ((unsigned __int16)(((unsigned __int16)(v19 - 16864) * v16) >> 16) >> 8)));
  HIDWORD(v25) = v21 ^ 0x636F;
  LODWORD(v25) = v21 ^ 0x7A100000;
  v29 = v25 >> 18;
  HIDWORD(v25) = v21 ^ 0xFFFFFFEF;
  LODWORD(v25) = v21 ^ 0x7A106300;
  v31 = v25 >> 7;
  v33 = v12;
  HIDWORD(v25) = v28 ^ LODWORD(STACK[0x598]);
  LODWORD(v25) = v28 ^ 0x87300000;
  v34 = v25 >> 19;
  v35 = *(_DWORD *)(STACK[0x710]
                  + 4
                  * (unsigned __int16)(v19
                                     - 24322
                                     - 274
                                     * ((unsigned __int16)(((unsigned __int16)(v19 - 24322) * v16) >> 16) >> 8)));
  HIDWORD(v25) = v28 ^ 0xBCE5;
  LODWORD(v25) = v28 ^ 0x87320000;
  v36 = v25 >> 17;
  v37 = v24 ^ (v20 >> 3) ^ v27;
  v38 = v29 ^ v31;
  HIDWORD(v25) = v35 ^ 0x636F;
  LODWORD(v25) = v35 ^ 0x7A100000;
  v39 = v37 & 3;
  v40 = (v25 >> 17) - 852006420 - ((2 * (v25 >> 17)) & 0x9A6ED3D8);
  v41 = v37 & 3 ^ 3;
  v42 = v36 ^ (v28 >> 10) ^ v34;
  HIDWORD(v25) = v35 ^ 0x636F;
  LODWORD(v25) = v35 ^ 0x7A100000;
  LOBYTE(v36) = v40 & 0xA ^ 8;
  v43 = v33 ^ 0x8AD4DC03 ^ v37;
  v44 = v35 ^ 0x7A10636F;
  v45 = v40 ^ (v25 >> 19);
  v46 = v37 ^ 0x10E6579C;
  LOBYTE(v37) = v40 & 0xA ^ 2;
  v47 = v14 + a3;
  v48 = v14 + a3 - 514948620;
  v49 = (v9 + v11) ^ (v14 + 1113012567);
  v50 = (v33 ^ 0x65CD7460) + v43;
  v51 = a3;
  v52 = v26 >> v41;
  v53 = a3 - ((2 * a3 - 347382654) & 0x857409DC) - 1201687761;
  v54 = v48 ^ (v9 - 810387388);
  v55 = a4 + a8 - ((2 * (a4 + a8) - 1554839384) & 0x8BD53C98) - 1751899488;
  v56 = (((_WORD)v47 + 3565) & 0x8000 ^ 0xAF77F7F7) + 2 * (((_WORD)v47 + 3565) & 0x8000);
  v57 = a3 + a7 - 67647150;
  v58 = a4 + 1772466749 + LODWORD(STACK[0x6E0]);
  LODWORD(STACK[0x708]) = a4;
  v59 = v52 >> v39;
  v60 = a4 - ((2 * a4 + 369148476) & 0x5AFDB45E) - 1199621299;
  v61 = v55 ^ ((v33 ^ 0x9A328B9F) - 683168907);
  v62 = v61 ^ 0xC5EA9E4C;
  v63 = v44 >> (v36 + v37);
  v64 = v47 - 2076963347;
  v65 = (-492275930 - a8 + (v46 ^ (a8 + 492275930))) ^ (v50 + 1);
  v66 = v38 ^ v59;
  v67 = (v55 ^ 0xC5EA9E4C) - ((2 * (v55 ^ 0xC5EA9E4C) + 1170937842) & 0xAC6C1762) - 115632214;
  v68 = v45 ^ v63;
  v69 = ((v67 ^ 0xA9C9F44E) + (v42 ^ v67 ^ 0x5617C71E) + 1) ^ ((v61 ^ 0x3A1561B3) + (v61 ^ 0xC5CB52E3 ^ v42) + 1);
  v70 = v54 - 2 * ((v54 + 1641613248) & 0x4175F74D ^ v54 & 8) - 1555103995;
  LODWORD(STACK[0x6E0]) = v70;
  LODWORD(STACK[0x6B4]) = v70 ^ v53;
  v71 = ((2 * ((v54 ^ v57) + (v70 ^ v53 ^ 0xFC300C54) + 1)) & 0xFDBFF966)
      + (((v54 ^ v57) + (v70 ^ v53 ^ 0xFC300C54) + 1) ^ 0x7EDFFCB3);
  LODWORD(STACK[0x6D0]) = v71;
  v72 = (v71 - 2128608435) ^ ((v54 ^ v57) + v64);
  v73 = (v46 ^ v49 ^ v66) - (v49 ^ v66);
  v74 = ((v68 ^ v54 ^ 0xCD370000) & (v56 + 1351092233)) == 0;
  v75 = v56 + 1590329308;
  v76 = -1111855158 - v56;
  v77 = v42 ^ 0x21CCAF;
  v78 = v53 ^ 0xC2BA04EE;
  v79 = v62 - 2 * ((v62 + 31000512) & 0x6E791FD ^ v61 & 0x10);
  v80 = STACK[0x710];
  v81 = *(_DWORD *)(STACK[0x710] + 4 * ((unsigned __int16)(v19 - 10536) % 0x112u));
  if (!v74)
    v75 = v76;
  LODWORD(STACK[0x6C0]) = v79 - 390030931;
  v82 = v62 ^ v58;
  v83 = (v67 ^ 0x56360BB1) + (v62 ^ v58);
  v84 = (v79 - 390030931) ^ v60;
  v85 = ((2 * (v82 + (v84 ^ 0x5466B43D) + 1)) & 0x4BD5F3FA) + ((v82 + (v84 ^ 0x5466B43D) + 1) ^ 0x25EAF9FD);
  v86 = v51
      + (v60 ^ 0x528125D0)
      + v62
      + (v81 ^ 0x7A10636F)
      + v66
      + 1250775918
      + (v69 ^ ((v77 ^ ((v68 ^ v54 ^ 0xCD3769EC) - 239237075 + v75) ^ v64 & 0xFFFF7FFF)
              - (((v68 ^ v54 ^ 0xCD3769EC) - 239237075 + v75) ^ v64 & 0xFFFF7FFF)));
  v87 = *(_DWORD *)(v80 + 4 * ((unsigned __int16)(v19 - 9519) % 0x112u)) ^ 0x7A10636F;
  LODWORD(STACK[0x6DC]) = v19;
  *(_DWORD *)(v80 + 4 * ((unsigned __int16)(v19 - 8728) % 0x112u)) = v86
                                                                     + v87
                                                                     + 2047894383
                                                                     - ((2 * (v86 + v87)) & 0xF420C6DE);
  LODWORD(STACK[0x6C8]) = v85;
  v88 = (v85 - 636156413) ^ v83;
  v89 = *(_DWORD *)(v80 + 4 * ((v19 + 1786805113) % 0x112u));
  v90 = *(_DWORD *)(v80 + 4 * ((v19 + 1786806130) % 0x112u));
  v91 = v80;
  v92 = v78
      - LODWORD(STACK[0x708])
      - v54
      + (v89 ^ 0x7A10636F)
      + (v90 ^ 0x7A10636F)
      + (v68 ^ 0xCD3769EC)
      - 1054847680
      + (v65 ^ v73);
  v93 = ((2 * v92) & 0x3AFBEEBE) + (v92 ^ 0x1D7DF75F);
  v94 = v88 - 1690329593 - ((2 * v88) & 0x367F3C0E);
  v95 = v93 + v71 - 2 * ((v93 + v71 + 1671564270) & 0x43B221BF ^ (v93 + v71) & 1) - 1487655508;
  *(_DWORD *)(v80 + 4 * ((unsigned __int16)(113 * LODWORD(STACK[0x6B8])) % 0x112u)) = v93
                                                                                      - ((2 * v93 + 1334954120) & 0xF420C6DE)
                                                                                      - 1579595853;
  v96 = 431 * (HIBYTE(v95) & 0xF ^ 3) + 279719;
  v97 = 431 * ((v95 >> 20) & 0xF ^ 0xB) + 279719;
  v98 = ((v95 >> 11) & 0x16 ^ 4) + (((unsigned __int16)v95 >> 12) ^ 0x3FFFFDF9);
  v99 = v87 - v85 - 780073779 + v86 - 965647800 + (~(2 * (v87 - v85 - 780073779 + v86)) | 0x731D3B71);
  v100 = 431 * (HIWORD(v95) & 0xF ^ 2) + 279719;
  v101 = *(unsigned __int8 *)(STACK[0x718] + (v100 - 957 * ((4487950 * (unint64_t)v100) >> 32)));
  v102 = (v98 + 14) | (1 - v98) | 0xFFFFFFE7;
  v103 = v98 - 1073740658;
  v104 = 431 * ((v95 >> 8) & 0xF ^ 1) + 279719;
  v105 = 431 * (((v93 + v71 - 2 * ((v93 + v71 - 18) & 0xBF ^ (v93 + v71) & 1) - 84) >> 4) ^ 0xB)
       + 279719;
  v106 = *(unsigned __int8 *)(STACK[0x718]
                            + (431 * (v95 & 0xF ^ 0xE)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v95 & 0xF ^ 0xE) + 279719)) >> 32)));
  LOBYTE(v98) = v106 ^ 0x78;
  v107 = (v106 ^ 0x78) - 400693118 - ((2 * v106) & 0x104);
  v108 = ((*(unsigned __int8 *)(STACK[0x718] + (v97 - 957 * ((4487950 * (unint64_t)v97) >> 32))) ^ 0x78) << (((-25 - v94) & 4 ^ 4) + ((-25 - v94) & 4))) ^ (((*(unsigned __int8 *)(STACK[0x718] + (v96 - 957 * ((4487950 * (unint64_t)v96) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (431 * ((v95 >> 28) ^ 4) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v95 >> 28) ^ 4) + 279719)) >> 32))) ^ 0x78) << 12) | v101);
  v109 = 431 * (HIBYTE(v99) & 0xF ^ 6) + 279719;
  v110 = ((*(unsigned __int8 *)(STACK[0x718] + (v109 - 957 * ((4487950 * (unint64_t)v109) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (431 * ((v99 >> 28) ^ 0xC) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v99 >> 28) ^ 0xC) + 279719)) >> 32))) ^ 0x78) << 12);
  v111 = 431 * ((v99 >> 20) & 0xF ^ 7) + 279719;
  v112 = 431 * (HIWORD(v99) & 0xF ^ 1) + 279719;
  v113 = 431 * (((unsigned __int16)v99 >> 12) ^ 6) + 279719;
  v114 = *(unsigned __int8 *)(STACK[0x718] + (v112 - 957 * ((4487950 * (unint64_t)v112) >> 32))) ^ (16 * (*(unsigned __int8 *)(STACK[0x718] + (v111 - 957 * ((4487950 * (unint64_t)v111) >> 32))) ^ 0x78));
  v115 = v114 ^ 0xC44F2EBB ^ (v110 + 76258 - ((2 * v110) & 0x5C00) + 1249);
  v116 = 431 * ((v99 >> 8) & 0xF ^ 2) + 279719;
  v117 = (v102 & (v108 & 0x1AF ^ 0x187 | v108 & 0x1AF ^ 0x28)) * v103;
  v118 = ((v108 << 16) ^ 0x780000) + 352104542 - ((2 * ((v108 << 16) ^ 0x780000)) & 0x29F80000);
  v119 = 431 * ((v99 >> 4) ^ 4) + 279719;
  v120 = (v115 << 16) + 600424031 - ((v115 << 17) & 0x47920000);
  v121 = ((v120 ^ 0x23C9BE5F)
        + ((*(unsigned __int8 *)(STACK[0x718] + (v116 - 957 * ((4487950 * (unint64_t)v116) >> 32))) ^ 0x78) << 8)) ^ ((*(unsigned __int8 *)(STACK[0x718] + (v113 - 957 * ((4487950 * (unint64_t)v113) >> 32))) ^ 0x78) << 12);
  v122 = *(unsigned __int8 *)(STACK[0x718]
                            + (431 * (v99 & 0xF ^ 7)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v99 & 0xF ^ 7) + 279719)) >> 32))) ^ 0x78;
  v123 = v122 + 415931788 - ((2 * v122) & 0x118);
  v124 = v107 & 0xE | v98 & 1;
  v125 = (v121 | v123 ^ 0x18CA9D8C) ^ (16
                                     * (*(unsigned __int8 *)(STACK[0x718]
                                                           + (v119
                                                                          - 957
                                                                          * ((4487950 * (unint64_t)v119) >> 32))) ^ 0x78));
  v126 = (v124 & 0xFFFFFF0F | (16 * (v123 & 0xF))) ^ 0xC2;
  v127 = 431 * ((v126 - 1046365581 - ((2 * v126) & 0xE6)) ^ 0xC1A1BA73);
  v128 = 16 * (*(unsigned __int8 *)(v91 + 1459) ^ 0x78)
       - 585873845
       - ((32 * (*(unsigned __int8 *)(v91 + 1459) ^ 0x78)) & 0xC80);
  v129 = ((v118 ^ 0x14FCB05E)
        + ((*(unsigned __int8 *)(STACK[0x718] + (v104 - 957 * ((4487950 * (unint64_t)v104) >> 32))) ^ 0x78) << 8)) ^ ((*(unsigned __int8 *)(STACK[0x718] + v117 % 0x3BD) ^ 0x78) << 12);
  v130 = v129 | v107 ^ 0xE81DE882;
  v131 = v121 >> 12;
  v132 = v130 ^ (16
               * (*(unsigned __int8 *)(STACK[0x718]
                                     + (v105 - 957 * ((4487950 * (unint64_t)v105) >> 32))) ^ 0x78));
  v133 = 431 * (*(unsigned __int8 *)(STACK[0x718] + (v127 + 290925) % 0x3BD) ^ v128 ^ 0xDD14464B ^ 0x78);
  v134 = (v133 + 290925) % 0x3BD;
  v135 = *(unsigned __int8 *)(STACK[0x718] + v133 % 0x3BD);
  v136 = ((v132 >> 4) ^ 0xA9F01609) & 0x2204407 ^ 0x93637EB ^ (((v132 >> 4) ^ 0xA9F01609) & 0x2204408 | 0x91633E3);
  v137 = *(_BYTE *)(STACK[0x718] + v134);
  v138 = (((v135 >> 4) ^ 0x87) - ((v135 >> 3) & 0x10) - 8) ^ *(unsigned __int8 *)(STACK[0x718]
                                                                                                 + v127 % 0x3BD);
  v139 = (((2 * v136) | 0x6E76F2AC) - v136 - 926644566) ^ 0x371B7D57;
  v140 = 431 * (((v139 | v125 & 0xF0) - 673041739 - 2 * ((v139 & 0xD7E232B7 | v125 & 0xB0) ^ v139 & 2)) ^ 0xD7E232B5);
  v141 = 431
       * (*(unsigned __int8 *)(STACK[0x718] + (v140 + 290925) % 0x3BD) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (431
                                                                                               * ((v128 & 0xB90 ^ 0x200 | v128 & 0xB90 ^ 0xDAFA0995)
                                                                                                + v138)
                                                                                               + 1426780306)
                                                                                              % 0x3BD) ^ 0x78)) ^ 0x78);
  v142 = (v125 >> 4) & 0xF0;
  LOBYTE(v125) = (v137 ^ 0x78) - ((2 * (v137 ^ 0x78)) & 0xC8);
  v143 = 431
       * ((((*(_BYTE *)(STACK[0x718]
                                       + (v141 - 957 * ((4487950 * (unint64_t)v141) >> 32))) >> 4) ^ 7)
                          - ((*(_BYTE *)(STACK[0x718]
                                       + (v141 - 957 * ((4487950 * (unint64_t)v141) >> 32))) >> 3) & 0x10)
                          + 120) ^ *(unsigned __int8 *)(STACK[0x718] + v140 % 0x3BD))
       + 290925;
  v144 = 431
       * (((v142 & 0xFFFFFFF0 | (v132 >> 8) & 0xF) + 339476054 - 2 * ((v142 & 0x50 | (v132 >> 8) & 7) ^ (v132 >> 8) & 1)) ^ 0x143BFE56);
  v145 = 431
       * (*(unsigned __int8 *)(STACK[0x718] + (v144 + 290925) % 0x3BD) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (v143 - 957 * ((4487950 * (unint64_t)v143) >> 32))) ^ 0x78)) ^ 0x78);
  v146 = *(_BYTE *)(STACK[0x718]
                  + (v145 + 290925 - 957 * ((4487950 * (unint64_t)(v145 + 290925)) >> 32)));
  v147 = *(unsigned __int8 *)(STACK[0x718]
                            + (v141 + 290925 - 957 * ((4487950 * (unint64_t)(v141 + 290925)) >> 32)));
  v148 = *(unsigned __int8 *)(STACK[0x718] + (v145 - 957 * ((4487950 * (unint64_t)v145) >> 32)));
  v149 = 431
       * ((((v148 >> 4) ^ 7) - ((v148 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(STACK[0x718]
                                                                                                 + v144 % 0x3BD))
       + 290925;
  v150 = ((unsigned __int16)v129 >> 12) & 0xFFFFF00F | (16
                                                      * (((v146 & 0xCB ^ 0x48) + (v146 & 0xCB ^ 0x83) + 68) & v131));
  v151 = 431 * ((v150 + 422598788 - ((2 * v150) & 0x1108)) ^ 0x19305884);
  v152 = 431
       * (*(unsigned __int8 *)(STACK[0x718] + (v151 + 290925) % 0x3BD) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (v149 - 957 * ((4487950 * (unint64_t)v149) >> 32))) ^ 0x78)) ^ 0x78);
  v153 = 431
       * ((((*(_BYTE *)(STACK[0x718]
                                       + (v152 - 957 * ((4487950 * (unint64_t)v152) >> 32))) >> 4) ^ 7)
                          - ((*(_BYTE *)(STACK[0x718]
                                       + (v152 - 957 * ((4487950 * (unint64_t)v152) >> 32))) >> 3) & 0x10)
                          + 120) ^ *(unsigned __int8 *)(STACK[0x718] + v151 % 0x3BD))
       + 290925;
  v154 = 431
       * (((v131 & 0xF0 | HIWORD(v129) & 0xF) + 812710387 - 2
                                                          * ((v131 & 0xF0 | HIWORD(v129) & 0xF) ^ HIWORD(v129) & 0xC)) ^ 0x3070F9F3);
  v155 = 16 * (v147 ^ 0x78);
  v156 = (32 * (v147 ^ 0x78)) & 0x1140;
  v157 = 431
       * (*(unsigned __int8 *)(STACK[0x718] + (v154 + 290925) % 0x3BD) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (v153 - 957 * ((4487950 * (unint64_t)v153) >> 32))) ^ 0x78)) ^ 0x78);
  v158 = v114 & 0xF0;
  v159 = v155 - v156;
  v160 = *(unsigned __int8 *)(STACK[0x718] + (v157 - 957 * ((4487950 * (unint64_t)v157) >> 32)));
  v161 = (v158 & 0xFFFFFFF0 | (v118 >> 20) & 0xF) ^ 0x7F;
  v162 = 431 * ((v161 + 1443517940 - ((2 * v161) & 0x1E8)) ^ 0x560A55F4);
  v163 = 431
       * ((((v160 >> 4) ^ 7) - ((v160 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(STACK[0x718]
                                                                                                 + v154 % 0x3BD))
       + 290925;
  v164 = 431
       * (*(unsigned __int8 *)(STACK[0x718] + (v162 + 290925) % 0x3BD) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (v163 - 957 * ((4487950 * (unint64_t)v163) >> 32))) ^ 0x78)) ^ 0x78);
  v165 = *(unsigned __int8 *)(STACK[0x718]
                            + (v152 + 290925 - 957 * ((4487950 * (unint64_t)(v152 + 290925)) >> 32)));
  v166 = 431
       * ((((*(_BYTE *)(STACK[0x718]
                                       + (v164 - 957 * ((4487950 * (unint64_t)v164) >> 32))) >> 4) ^ 7)
                          + (~(*(_BYTE *)(STACK[0x718]
                                        + (v164 - 957 * ((4487950 * (unint64_t)v164) >> 32))) >> 3) | 0xEF)
                          + 121) ^ *(unsigned __int8 *)(STACK[0x718] + v162 % 0x3BD))
       + 290925;
  v167 = ((v120 >> 20) & 0xF0 | HIBYTE(v118) & 0xF) ^ 0x34;
  v168 = 431 * ((v167 + 1682798645 - 2 * (v167 & 0x3D ^ HIBYTE(v118) & 8)) ^ 0x644D7835);
  v169 = ((v165 ^ 0x78) << 12) - (((v165 ^ 0x78) << 13) & 0x26000);
  v170 = v168 % 0x3BD;
  v171 = 431
       * (*(unsigned __int8 *)(STACK[0x718] + (v168 + 290925) % 0x3BD) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x718]
                                                                                              + (v166 - 957 * ((4487950 * (unint64_t)v166) >> 32))) ^ 0x78)) ^ 0x78);
  v172 = v171 + 290925 - 957 * ((4487950 * (unint64_t)(v171 + 290925)) >> 32);
  v173 = *(unsigned __int8 *)(STACK[0x718] + (v171 - 957 * ((4487950 * (unint64_t)v171) >> 32)));
  v174 = (((v173 >> 4) ^ 7) - ((v173 >> 3) & 0x10) + 120) ^ *(unsigned __int8 *)(STACK[0x718] + v170);
  v175 = 431 * ((HIBYTE(v120) & 0xF0 | (v118 >> 28)) ^ 0x21) + 290925;
  v176 = 431
       * (*(unsigned __int8 *)(STACK[0x718] + (v175 - 957 * ((4487950 * (unint64_t)v175) >> 32))) ^ (16 * (*(unsigned __int8 *)(STACK[0x718] + (431 * v174 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v174 + 290925)) >> 32))) ^ 0x78)) ^ 0x78)
       + 290925;
  v177 = 431 * ((v124 & 0xFFFFFF0F | (16 * (((_BYTE)v125 - 28) & 0xF))) ^ 0x42) + 168952;
  v178 = v159 + 557566115;
  LOBYTE(v120) = (v159 - 93) ^ (v125 - 28);
  v179 = (v169 + 1233204020) ^ ((v146 ^ 0x78) << 8);
  v180 = *(unsigned __int8 *)(STACK[0x718]
                            + (v157 + 290925 - 957 * ((4487950 * (unint64_t)(v157 + 290925)) >> 32))) ^ 0x78;
  v181 = (*(unsigned __int8 *)(STACK[0x718] + v172) ^ 0x78) << 24;
  v182 = *(unsigned __int8 *)(STACK[0x718] + (v176 - 957 * ((4487950 * (unint64_t)v176) >> 32))) ^ 8;
  v183 = *(unsigned __int8 *)(STACK[0x718] + (v177 - 957 * ((4487950 * (unint64_t)v177) >> 32)));
  v184 = (((v179 ^ v178) >> 4) & 0xF0 | (v132 >> 8) & 0xF) ^ 0xB0;
  v185 = (v180 << 16) - ((v180 << 17) & 0xFF83FFFF) + 197213192;
  v186 = v181 ^ (v182 << 28);
  v187 = v183 ^ (16 * (*(unsigned __int8 *)(STACK[0x718] + (431 * (v139 | v120 & 0xF0 ^ 0x40) + 168952) % 0x3BD) ^ 0x78));
  v188 = *(unsigned __int8 *)(STACK[0x718]
                            + (v164 + 290925 - 957 * ((4487950 * (unint64_t)(v164 + 290925)) >> 32))) ^ 0x78;
  v189 = 431 * (((v179 >> 8) & 0xF0 | ((unsigned __int16)v129 >> 12)) ^ 0x30) + 168952;
  v190 = v188 << 21;
  v191 = (v188 << 20) - 1307999605;
  v192 = ((*(unsigned __int8 *)(STACK[0x718] + (v189 - 957 * ((4487950 * (unint64_t)v189) >> 32))) ^ 0x78) << 12) ^ ((*(unsigned __int8 *)(STACK[0x718] + (431 * v184 + 168952 - 957 * ((4487950 * (unint64_t)(431 * v184 + 168952)) >> 32))) ^ 0x78) << 8);
  v193 = v192 ^ v187;
  v194 = 431 * (((v185 ^ (v169 + 1233204020)) >> 12) & 0xF0 | HIWORD(v129) & 0xF) + 168952;
  v195 = v192 ^ v187 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                            + (v194 - 957 * ((4487950 * (unint64_t)v194) >> 32))) ^ 0x78) << 16) ^ 0xF46ED4B2;
  v196 = 431 * ((((v191 ^ v185) >> 16) & 0xF0 | (v118 >> 20) & 0xF) ^ 0xCF) + 168952;
  v197 = v195 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + (v196 - 957 * ((4487950 * (unint64_t)v196) >> 32))) ^ 0x78) << 20);
  v198 = 431 * ((v197 >> 20) & 0xF ^ 6) + 408657553;
  v199 = 431 * ((v197 >> 20) & 0xF ^ 6) + 373536176 + (~(2 * v198 + 257236136) | 0xD384EE6B);
  v200 = (v199 ^ LODWORD(STACK[0x594]))
       % (((-408656924 - 431 * ((v197 >> 20) & 0xF ^ 6) - ((342 - 2 * v198) & 0x194)) ^ v199) & 0x3BD);
  v201 = 431 * ((((v181 ^ (v191 - (v190 & 0x4000000u))) >> 20) & 0xF0 | HIBYTE(v118) & 0xF) ^ 0x24) + 168952;
  v202 = (HIBYTE(v186) & 0xF0 | (v118 >> 28)) ^ 1;
  v203 = v202 - 1015091859 - ((2 * v202) & 0xDA);
  v204 = v197 ^ ((*(unsigned __int8 *)(STACK[0x718]
                                     + (v201 - 957 * ((4487950 * (unint64_t)v201) >> 32))) ^ 0x78) << 24);
  v205 = *(unsigned __int8 *)(STACK[0x718]
                            + ((v203 ^ 0xC37EED6D) + 392) * (v94 & 0x1AF ^ 0x1A8 | v94 & 0x1AF ^ 7) % 0x3BD);
  v206 = v72 + 966935249 - ((2 * v72) & 0x734485A2);
  v207 = (((((v205 ^ 8) << 28) - (v205 >> 1 << 30) + 1802128155) ^ v204) >> 28) ^ 9;
  v208 = 431 * (HIBYTE(v204) & 0xF ^ 4) + 404709;
  v209 = 431 * (HIWORD(v195) & 0xF ^ 0xE) + 404709;
  v210 = (431 * (v183 & 0xF ^ 8u) + 404709) % (((v203 & 0xBD ^ 0x390) + (v203 & 0xBD ^ 0x2D)) & 0xFFFFFFBF);
  v211 = (((LODWORD(STACK[0x6B4]) ^ 0x3CFF3AB) + 104992193) ^ 0x41001BC2)
       - (STACK[0x590] & (2 * ((LODWORD(STACK[0x6B4]) ^ 0x3CFF3AB) + 104992193)))
       - 1090526146
       + (v206 ^ 0x39A242D1);
  v212 = v210 - 1272905684 - ((2 * v210) & 0x58);
  v213 = v95 ^ v206;
  v214 = LODWORD(STACK[0x6D0])
       - ((v211 - 211914525 - ((2 * v211) & 0xE6BCE1C6)) ^ ((LODWORD(STACK[0x6E0]) ^ 0x302FDB0)
                                                          - 211914525
                                                          - ((2 * (LODWORD(STACK[0x6E0]) ^ 0x302FDB0)) & 0xE6BCE1C6)))
       + (v212 & 0x6F0 ^ 0x922C312F)
       + (v212 & 0x6F0 ^ 0xFFFFFFDF)
       - 195927979;
  v215 = ((2 * ((v84 ^ 0xAB994BC2) + 104992193)) & 0x9B7FFFFE) + (((v84 ^ 0xAB994BC2) + 104992193) ^ 0xCDBFFFFF);
  v216 = ((((*(unsigned __int8 *)(STACK[0x718] + (v209 - 957 * ((4487950 * (unint64_t)v209) >> 32))) ^ 0x78 | ((*(unsigned __int8 *)(STACK[0x718] + (v208 - 957 * ((4487950 * (unint64_t)v208) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (431 * v207 + 404709 - 957 * ((4487950 * (unint64_t)(431 * v207 + 404709)) >> 32))) ^ 0x78) << 12)) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + v200) ^ 0x78) << 12) | *(unsigned __int8 *)(STACK[0x718] + (431 * ((v193 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v193 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x78) << 8) ^ ((*(unsigned __int8 *)(STACK[0x718] + (431 * ((unsigned __int16)v192 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v192 >> 12) + 404709)) >> 32))) ^ 0x78) << 12) | *(unsigned __int8 *)(STACK[0x718] + (v212 ^ 0xB421002C)) ^ 0x78;
  v217 = ((2 * ((v94 ^ 0x9B3F9E07) - v215 - 843055105)) & 0xFDB7CF66)
       + (((v94 ^ 0x9B3F9E07) - v215 - 843055105) ^ 0xFEDBE7B3);
  v218 = v216 ^ (16
               * (*(unsigned __int8 *)(STACK[0x718]
                                     + (431 * ((v187 >> 4) ^ 7)
                                                    + 404709
                                                    - 957
                                                    * ((4487950
                                                      * (unint64_t)(431 * ((v187 >> 4) ^ 7u)
                                                                         + 404709)) >> 32))) ^ 0x78));
  v219 = STACK[0x6DC];
  v220 = LODWORD(STACK[0x6C8]) + v217 - 617013679 + ((v217 + 19142733) ^ LODWORD(STACK[0x6C0]) ^ 0x3B6F64E7);
  v221 = (v220 ^ 0xDF773DBF) + 1991237496 + ((2 * v220) & 0xBEEE7B7E);
  v222 = STACK[0x710];
  *(_DWORD *)(STACK[0x710] + 4 * ((unsigned __int16)(v219 - 16638) % 0x112u)) = v94 ^ 0x8732BCE5 ^ (v218 - 1690329593 - ((2 * v218) & 0x367F3C0E));
  *(_DWORD *)(v222 + 4 * ((unsigned __int16)(v219 - 24096) % 0x112u)) = v213;
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6E8]
                                                                              + 8
                                                                              * ((62
                                                                                * (LODWORD(STACK[0x6F4]) != -1726197594)) ^ LODWORD(STACK[0x700])))
                                                                  - 12))(v215 + 667346768, 113, ((v214 - 90082838 + (v206 ^ 0x39A242D1)) ^ 0xF7CFF76B)+ 1765326840+ ((2 * (v214 - 90082838 + (v206 ^ 0x39A242D1))) & 0xEF9FEED6), v221 + v215 + 667346768);
}

uint64_t sub_18CA1D9DC()
{
  int v0;
  int v1;

  return (*(uint64_t (**)(void))(STACK[0x6E8] + 8 * ((((v1 + 45) ^ 0x83D) * (v0 == -860677828)) ^ v1)))();
}

uint64_t sub_18CA1DA30@<X0>(unsigned int a1@<W6>, int a2@<W7>, unsigned int a3@<W8>)
{
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  _BOOL4 v9;
  unint64_t v10;

  v9 = a3 < a1 + v3 - 864 - 1228;
  v10 = ((a2 - 1828940161) * (unint64_t)v4) >> 32;
  *(_BYTE *)(STACK[0x718]
           + a2
           - 1828940161
           - ((v10 + ((a2 - 1828940161 - v10) >> 1)) >> 9) * v5) = *(_BYTE *)(v8 + (v7 - 346047168));
  if (v9 == v6 + 1022164017 < a1)
    v9 = v6 + 1022164017 < a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6E8] + 8 * ((81 * v9) ^ (v3 - 1175))) - 4))();
}

void sub_18CA1DACC()
{
  JUMPOUT(0x18CA1DA50);
}

uint64_t sub_18CA1DAD8@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  _BYTE *v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;

  *v10 = ((v4 ^ v17) >> 24) ^ 0x82;
  v6 = v2 ^ v18;
  v10[4] = ((v15 ^ v16) >> 24) ^ 0xAD;
  v7 = v3 ^ a2;
  v10[8] = ((v14 ^ v19) >> 24) ^ 0xEB;
  v10[12] = ((v12 ^ v13) >> 24) ^ 0xAE;
  v10[16] = HIBYTE(v6) ^ 0x5C;
  v10[20] = ((v20 ^ v11) >> 24) ^ 0x6A;
  v10[24] = ((a1 ^ v5) >> 24) ^ 0x3A;
  v10[28] = HIBYTE(v7) ^ 2;
  v10[5] = ((v15 ^ v16) >> 16) ^ 0x17;
  v10[21] = ((v20 ^ v11) >> 16) ^ 0x4D;
  v10[9] = ((v14 ^ v19) >> 16) ^ 0xBE;
  v10[1] = ((v4 ^ v17) >> 16) ^ 0x1B;
  v10[17] = BYTE2(v6) ^ 0x38;
  v10[13] = ((v12 ^ v13) >> 16) ^ 0x9E;
  v10[29] = BYTE2(v7) ^ 0xCB;
  v10[25] = ((a1 ^ v5) >> 16) ^ 0xFD;
  v10[6] = ((unsigned __int16)(v15 ^ v16) >> 8) ^ 0x7A;
  result = (v6 >> 8) ^ 0x2C;
  v10[14] = ((unsigned __int16)(v12 ^ v13) >> 8) ^ 0xBC;
  v10[18] = BYTE1(v6) ^ 0x2C;
  v10[2] = ((unsigned __int16)(v4 ^ v17) >> 8) ^ 0x91;
  v10[10] = ((unsigned __int16)(v14 ^ v19) >> 8) ^ 0x98;
  v10[22] = ((unsigned __int16)(v20 ^ v11) >> 8) ^ 0xD8;
  v10[26] = ((unsigned __int16)(a1 ^ v5) >> 8) ^ 0x87;
  v10[30] = BYTE1(v7) ^ 0x5E;
  v10[3] = v4 ^ v17 ^ 0x8B;
  v10[7] = v15 ^ v16 ^ 0x32;
  v10[15] = v12 ^ v13 ^ 0xB3;
  v10[11] = v14 ^ v19 ^ 0xB6;
  v10[19] = v6 ^ 0xAA;
  v10[23] = v20 ^ v11 ^ 0xB5;
  v10[27] = a1 ^ v5 ^ 0x6B;
  v10[31] = v7 ^ 0x7D;
  *(_DWORD *)(v9 + 8) = 1556779682;
  return result;
}

uint64_t sub_18CA1DCF0(uint64_t result)
{
  uint64_t v1;
  __int16 v2;
  int v3;
  int v4;

  v1 = *(_QWORD *)(result + 16);
  v2 = *(_DWORD *)(result + 4) ^ (11565 * (result ^ 0x1BA8));
  *(_DWORD *)(v1 - 0x7503D0B735518C59) = v2 & 0x1FF ^ 0xAF33F071;
  *(_QWORD *)(v1 - 0x7503D0B735518C79) = 0x7961A7B43EEA628DLL;
  *(_DWORD *)(v1 - 0x7503D0B735518C5DLL) = 959153927;
  v3 = v2 ^ 0xCE;
  if (v3 == 1)
  {
    v4 = 959153943;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0x7503D0B735518C61) = -1770914658;
    v4 = 959153947;
LABEL_5:
    *(_QWORD *)(v1 - 0x7503D0B735518C71) = 0xBA6EB6E732E63E6FLL;
    *(_QWORD *)(v1 - 0x7503D0B735518C69) = 0x45914918CD19C190;
    *(_DWORD *)(v1 - 0x7503D0B735518C5DLL) = v4;
  }
  *(_DWORD *)result = -1061955451;
  return result;
}

void sub_18CA1DE1C(uint64_t a1)
{
  int v1;
  int v2;

  v1 = 31090337 * ((((2 * a1) | 0xACB21054) - a1 - 1448675370) ^ 0x91D86863);
  v2 = *(_DWORD *)(a1 + 16) ^ v1;
  __asm { BR              X14 }
}

uint64_t sub_18CA1DED8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v8;
  uint64_t v9;
  int v10;

  v5 = (v4 - 1066855789 + (v3 ^ 0x7BC)) & 0xD20E088E;
  v6 = 1437274309 * (((&v8 | 0x6C3BE3AB) - (&v8 & 0x6C3BE3AB)) ^ 0x4E359E9E);
  v9 = v1;
  v8 = v6 + v3 - 330;
  v10 = v2 + v6 - v5 - 918843766;
  return ((uint64_t (*)(int *))(*(_QWORD *)(a1 + 8 * (v3 ^ 0x75F)) - 8))(&v8);
}

void sub_18CA1E040(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  _BYTE v4[4161];
  uint64_t v5;

  v1 = MEMORY[0x1E0C80A78](a1);
  v5 = *MEMORY[0x1E0C80C00];
  v2 = *(_DWORD *)(v1 + 4) ^ (1314530549 * ((-504253033 - (v1 | 0xE1F1B597) + (v1 | 0x1E0E4A68)) ^ 0xAF07CCA6));
  sub_18CA83320(v4, 0, 0x1001uLL);
  v3 = *((_QWORD *)off_1E2538470[v2 - 1254]
       + (((off_1E2538470[v2 - 1276]((unint64_t **)8) != 0) * (((v2 - 853552409) & 0x32E02B7B) + 1680)) ^ v2)
       - 1)
     - ((v2 - 1172) | 0xC01u)
     + 3201;
  __asm { BR              X8 }
}

uint64_t sub_18CA1E290(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;

  STACK[0x618] = a1;
  *(_DWORD *)a1 = 476402931;
  *(_WORD *)(a1 + 4) = 12401;
  v22 = a21(120);
  v23 = STACK[0x308];
  STACK[0x840] = v22;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((3095 * (v22 != 0)) ^ v21))
                            - ((8 * (v21 ^ 0x3D8)) ^ (2 * (v21 ^ 0x31A)) ^ 0x5DELL)))();
}

#error "18CA1E3EC: call analysis failed (funcsize=121)"

uint64_t sub_18CA1E3F0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int64x2_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int64x2_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int64x2_t v18;
  int64x2_t v19;
  int64x2_t v20;
  int64x2_t v21;
  int64x2_t v22;
  int64x2_t v23;
  int64x2_t v24;
  int64x2_t v25;
  int8x16_t v26;
  int64x2_t v27;
  int64x2_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int64x2_t v31;
  int64x2_t v32;
  int8x16_t v33;
  int64x2_t v34;
  int64x2_t v35;
  int64x2_t v36;
  int64x2_t v37;
  int8x16_t v38;
  int64x2_t v39;
  int64x2_t v40;
  int64x2_t v41;
  int64x2_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int8x16_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int64x2_t v51;
  int8x16_t v52;
  int64x2_t v53;
  int64x2_t v54;
  int64x2_t v55;
  int64x2_t v56;
  int64x2_t v57;
  int64x2_t v58;
  int8x16_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int8x16_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int8x16_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int8x16_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int8x16_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int8x16_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int8x16_t v116;
  int8x16_t v117;
  int64x2_t v118;
  int8x16_t v119;
  int8x16_t v120;
  __int128 v121;
  int8x16_t v122;
  int8x16_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int8x16_t v131;
  int64x2_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int64x2_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int8x16_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int8x16_t v150;
  int64x2_t v151;
  int64x2_t v152;
  int64x2_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  int64x2_t v160;
  int8x16x4_t v162;

  v18.i64[0] = v3 + (v6 | 2);
  v18.i64[1] = v3 + (v6 | 3);
  v19.i64[0] = v3 + (v6 | 4);
  v19.i64[1] = v3 + (v6 | 5);
  v20.i64[0] = v3 + (v6 | 6);
  v20.i64[1] = v3 + (v6 | 7);
  v21.i64[0] = v3 + (v6 | 8);
  v21.i64[1] = v3 + (v6 | 9);
  v22.i64[0] = v3 + (v6 | 0xC);
  v22.i64[1] = v3 + (v6 | 0xD);
  *(int64x2_t *)&STACK[0x360] = v22;
  v23.i64[0] = v3 + v6;
  v23.i64[1] = v3 + (((v2 + 666) - 1303) | v6);
  v24 = v23;
  v25.i64[0] = v3 + (v6 | 0xE);
  v25.i64[1] = v3 + (v6 | 0xF);
  *(int64x2_t *)&STACK[0x370] = v25;
  *(int64x2_t *)&STACK[0x380] = v21;
  *(int8x16_t *)&STACK[0x320] = vorrq_s8((int8x16_t)vshlq_n_s64(v25, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v25, 8uLL));
  *(int8x16_t *)&STACK[0x340] = vorrq_s8((int8x16_t)vshlq_n_s64(v22, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v22, 8uLL));
  *(int8x16_t *)&STACK[0x350] = vorrq_s8((int8x16_t)vshlq_n_s64(v21, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v21, 8uLL));
  v26 = *(int8x16_t *)&STACK[0x2E0];
  v27 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v20, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v20, 8uLL)), *(int8x16_t *)&STACK[0x2E0]);
  v28 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v19, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v19, 8uLL)), *(int8x16_t *)&STACK[0x2E0]);
  *(int64x2_t *)&STACK[0x310] = v24;
  *(int8x16_t *)&STACK[0x330] = vorrq_s8((int8x16_t)vshlq_n_s64(v24, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v24, 8uLL));
  v29 = (int8x16_t)vaddq_s64(v28, v9);
  v30 = (int8x16_t)vaddq_s64(v27, v9);
  v31 = (int64x2_t)veorq_s8(v30, v8);
  v32 = (int64x2_t)veorq_s8(v29, v8);
  v33 = *(int8x16_t *)&STACK[0x2A0];
  v34 = (int64x2_t)veorq_s8(v29, *(int8x16_t *)&STACK[0x2B0]);
  v35 = (int64x2_t)veorq_s8(v30, *(int8x16_t *)&STACK[0x2B0]);
  v36 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v31, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v31, 8uLL)), v35);
  v37 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v32, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v32, 8uLL)), v34);
  v38 = *(int8x16_t *)&STACK[0x280];
  v39 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v37, v37), *(int8x16_t *)&STACK[0x2A0]), v37), *(int64x2_t *)&STACK[0x290]), *(int8x16_t *)&STACK[0x280]);
  v40 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v36, v36), *(int8x16_t *)&STACK[0x2A0]), v36), *(int64x2_t *)&STACK[0x290]), *(int8x16_t *)&STACK[0x280]);
  v41 = (int64x2_t)veorq_s8((int8x16_t)v40, vorrq_s8((int8x16_t)vshlq_n_s64(v35, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v35, 0x3DuLL)));
  v42 = (int64x2_t)veorq_s8((int8x16_t)v39, vorrq_s8((int8x16_t)vshlq_n_s64(v34, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v34, 0x3DuLL)));
  v43 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v40, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v40, 8uLL)), v41), v11);
  v44 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v39, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v39, 8uLL)), v42), v11);
  v45 = vorrq_s8((int8x16_t)vshlq_n_s64(v41, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v41, 0x3DuLL));
  v46 = (int64x2_t)veorq_s8((int8x16_t)v44, vorrq_s8((int8x16_t)vshlq_n_s64(v42, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v42, 0x3DuLL)));
  v47 = (int64x2_t)veorq_s8((int8x16_t)v43, v45);
  v48 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v43, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v43, 8uLL)), v47);
  v49 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v44, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v44, 8uLL)), v46);
  v50 = *(int8x16_t *)&STACK[0x250];
  v51 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v48, v14), (int64x2_t)vorrq_s8(v48, (int8x16_t)v12)), v12), *(int8x16_t *)&STACK[0x250]);
  v52 = vorrq_s8((int8x16_t)vshlq_n_s64(v47, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v47, 0x3DuLL));
  v53 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v49, v14), (int64x2_t)vorrq_s8(v49, (int8x16_t)v12)), v12), *(int8x16_t *)&STACK[0x250]);
  v54 = (int64x2_t)veorq_s8((int8x16_t)v53, vorrq_s8((int8x16_t)vshlq_n_s64(v46, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v46, 0x3DuLL)));
  v55 = (int64x2_t)veorq_s8((int8x16_t)v51, v52);
  v56 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v51, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v51, 8uLL)), v55);
  v57 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v53, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v53, 8uLL)), v54);
  v58 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v57, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v57, v57), *(int8x16_t *)&STACK[0x410])), *(int64x2_t *)&STACK[0x400]), *(int8x16_t *)&STACK[0x3F0]);
  v59 = vorrq_s8((int8x16_t)vshlq_n_s64(v54, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v54, 0x3DuLL));
  v60 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v56, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v56, v56), *(int8x16_t *)&STACK[0x410])), *(int64x2_t *)&STACK[0x400]), *(int8x16_t *)&STACK[0x3F0]);
  v61 = (int64x2_t)veorq_s8((int8x16_t)v60, vorrq_s8((int8x16_t)vshlq_n_s64(v55, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v55, 0x3DuLL)));
  v62 = (int64x2_t)veorq_s8((int8x16_t)v58, v59);
  v63 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v58, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v58, 8uLL)), v62);
  v64 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v60, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v60, 8uLL)), v61);
  v65 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v64, v64), v13), v64), *(int64x2_t *)&STACK[0x3E0]), *(int8x16_t *)&STACK[0x3D0]);
  v66 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v63, v63), v13), v63), *(int64x2_t *)&STACK[0x3E0]), *(int8x16_t *)&STACK[0x3D0]);
  v67 = (int64x2_t)veorq_s8((int8x16_t)v66, vorrq_s8((int8x16_t)vshlq_n_s64(v62, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v62, 0x3DuLL)));
  v68 = (int64x2_t)veorq_s8((int8x16_t)v65, vorrq_s8((int8x16_t)vshlq_n_s64(v61, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v61, 0x3DuLL)));
  v69 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v66, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 8uLL)), v67), v15);
  v70 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v65, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 8uLL)), v68), v15);
  v71 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v18, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v18, 8uLL)), v26), v9);
  v72 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v70, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v70, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v70, vorrq_s8((int8x16_t)vshlq_n_s64(v68, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v68, 0x3DuLL)))), v16);
  v73 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v69, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v69, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v69, vorrq_s8((int8x16_t)vshlq_n_s64(v67, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 0x3DuLL)))), v16);
  v74 = *(int64x2_t *)&STACK[0x200];
  v162.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v72, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v72, v72), v17)), *(int64x2_t *)&STACK[0x200]), v10), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v20, 3uLL), v7)));
  v162.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v73, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v73, v73), v17)), *(int64x2_t *)&STACK[0x200]), v10), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v19, 3uLL), v7)));
  v75 = (int64x2_t)veorq_s8(v71, v8);
  v76 = (int64x2_t)veorq_s8(v71, *(int8x16_t *)&STACK[0x2B0]);
  v77 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL)), v76);
  v78 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v77, v77), *(int8x16_t *)&STACK[0x2A0]), v77), *(int64x2_t *)&STACK[0x290]), *(int8x16_t *)&STACK[0x280]);
  v79 = (int64x2_t)veorq_s8((int8x16_t)v78, vorrq_s8((int8x16_t)vshlq_n_s64(v76, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 0x3DuLL)));
  v80 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v78, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 8uLL)), v79), v11);
  v81 = (int64x2_t)veorq_s8((int8x16_t)v80, vorrq_s8((int8x16_t)vshlq_n_s64(v79, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 0x3DuLL)));
  v82 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v80, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 8uLL)), v81);
  v83 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v82, v14), (int64x2_t)vorrq_s8(v82, (int8x16_t)v12)), v12), *(int8x16_t *)&STACK[0x250]);
  v84 = (int64x2_t)veorq_s8((int8x16_t)v83, vorrq_s8((int8x16_t)vshlq_n_s64(v81, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v81, 0x3DuLL)));
  v85 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v83, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 8uLL)), v84);
  v86 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v85, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v85, v85), *(int8x16_t *)&STACK[0x410])), *(int64x2_t *)&STACK[0x400]), *(int8x16_t *)&STACK[0x3F0]);
  v87 = (int64x2_t)veorq_s8((int8x16_t)v86, vorrq_s8((int8x16_t)vshlq_n_s64(v84, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v84, 0x3DuLL)));
  v88 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v86, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 8uLL)), v87);
  v89 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v88, v88), v13), v88), *(int64x2_t *)&STACK[0x3E0]), *(int8x16_t *)&STACK[0x3D0]);
  v90 = (int64x2_t)veorq_s8((int8x16_t)v89, vorrq_s8((int8x16_t)vshlq_n_s64(v87, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 0x3DuLL)));
  v91 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v89, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 8uLL)), v90), v15);
  v92 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v91, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v91, vorrq_s8((int8x16_t)vshlq_n_s64(v90, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 0x3DuLL)))), v16);
  v93 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x330], v26), v9);
  v162.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v92, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v92, v92), v17)), *(int64x2_t *)&STACK[0x200]), v10), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v18, 3uLL), v7)));
  v94 = (int64x2_t)veorq_s8(v93, v8);
  v95 = (int64x2_t)veorq_s8(v93, *(int8x16_t *)&STACK[0x2B0]);
  v96 = *(int8x16_t *)&STACK[0x2B0];
  v97 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v94, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 8uLL)), v95);
  v98 = *(int64x2_t *)&STACK[0x290];
  v99 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v97, v97), *(int8x16_t *)&STACK[0x2A0]), v97), *(int64x2_t *)&STACK[0x290]), *(int8x16_t *)&STACK[0x280]);
  v100 = (int64x2_t)veorq_s8((int8x16_t)v99, vorrq_s8((int8x16_t)vshlq_n_s64(v95, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v95, 0x3DuLL)));
  v101 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v99, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 8uLL)), v100), v11);
  v102 = (int64x2_t)veorq_s8((int8x16_t)v101, vorrq_s8((int8x16_t)vshlq_n_s64(v100, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 0x3DuLL)));
  v103 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v101, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 8uLL)), v102);
  v104 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v103, v14), (int64x2_t)vorrq_s8(v103, (int8x16_t)v12)), v12), *(int8x16_t *)&STACK[0x250]);
  v105 = (int64x2_t)veorq_s8((int8x16_t)v104, vorrq_s8((int8x16_t)vshlq_n_s64(v102, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 0x3DuLL)));
  v106 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v104, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 8uLL)), v105);
  v107 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v106, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v106, v106), *(int8x16_t *)&STACK[0x410])), *(int64x2_t *)&STACK[0x400]), *(int8x16_t *)&STACK[0x3F0]);
  v108 = (int64x2_t)veorq_s8((int8x16_t)v107, vorrq_s8((int8x16_t)vshlq_n_s64(v105, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 0x3DuLL)));
  v109 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v107, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 8uLL)), v108);
  v110 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v109, v109), v13), v109), *(int64x2_t *)&STACK[0x3E0]), *(int8x16_t *)&STACK[0x3D0]);
  v111 = (int64x2_t)veorq_s8((int8x16_t)v110, vorrq_s8((int8x16_t)vshlq_n_s64(v108, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 0x3DuLL)));
  v112 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v110, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v110, 8uLL)), v111), v15);
  v113 = (int64x2_t)veorq_s8((int8x16_t)v112, vorrq_s8((int8x16_t)vshlq_n_s64(v111, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 0x3DuLL)));
  v114 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v112, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 8uLL));
  v112.i64[0] = v3 + (v6 | 0xA);
  v112.i64[1] = v3 + (v6 | 0xB);
  v115 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(v114, v113), v16);
  v116 = *(int8x16_t *)&STACK[0x320];
  v162.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v115, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v115, v115), v17)), *(int64x2_t *)&STACK[0x200]), v10), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x310], 3uLL), v7)));
  *(int8x16_t *)&STACK[0x330] = vorrq_s8((int8x16_t)vshlq_n_s64(v112, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 8uLL));
  v117 = v26;
  v118 = (int64x2_t)vandq_s8(v116, v26);
  v119 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x340], v26), v9);
  v120 = (int8x16_t)vaddq_s64(v118, v9);
  *(_QWORD *)&v121 = vqtbl4q_s8(v162, *(int8x16_t *)&STACK[0x3C0]).u64[0];
  v162.val[0] = veorq_s8(v120, v8);
  v162.val[1] = veorq_s8(v119, v8);
  v162.val[2] = veorq_s8(v119, v96);
  v162.val[3] = veorq_s8(v120, v96);
  v162.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[0], 8uLL)), (int64x2_t)v162.val[3]);
  v162.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[1], 8uLL)), (int64x2_t)v162.val[2]);
  v122 = v33;
  v162.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v162.val[1], (int64x2_t)v162.val[1]), v33), (int64x2_t)v162.val[1]), v98), v38);
  v162.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v162.val[0], (int64x2_t)v162.val[0]), v33), (int64x2_t)v162.val[0]), v98), v38);
  v162.val[3] = veorq_s8(v162.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[3], 0x3DuLL)));
  v162.val[2] = veorq_s8(v162.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[2], 0x3DuLL)));
  v162.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[0], 8uLL)), (int64x2_t)v162.val[3]), v11);
  v162.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[1], 8uLL)), (int64x2_t)v162.val[2]), v11);
  v162.val[2] = veorq_s8(v162.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[2], 0x3DuLL)));
  v162.val[3] = veorq_s8(v162.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[3], 0x3DuLL)));
  v162.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[0], 8uLL)), (int64x2_t)v162.val[3]);
  v162.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[1], 8uLL)), (int64x2_t)v162.val[2]);
  v162.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v162.val[0], v14), (int64x2_t)vorrq_s8(v162.val[0], (int8x16_t)v12)), v12), v50);
  v162.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v162.val[1], v14), (int64x2_t)vorrq_s8(v162.val[1], (int8x16_t)v12)), v12), v50);
  v162.val[2] = veorq_s8(v162.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[2], 0x3DuLL)));
  v162.val[3] = veorq_s8(v162.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[3], 0x3DuLL)));
  v162.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[0], 8uLL)), (int64x2_t)v162.val[3]);
  v162.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[1], 8uLL)), (int64x2_t)v162.val[2]);
  v162.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v162.val[1], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v162.val[1], (int64x2_t)v162.val[1]), *(int8x16_t *)&STACK[0x410])), *(int64x2_t *)&STACK[0x400]), *(int8x16_t *)&STACK[0x3F0]);
  v162.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v162.val[0], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v162.val[0], (int64x2_t)v162.val[0]), *(int8x16_t *)&STACK[0x410])), *(int64x2_t *)&STACK[0x400]), *(int8x16_t *)&STACK[0x3F0]);
  v162.val[3] = veorq_s8(v162.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[3], 0x3DuLL)));
  v162.val[2] = veorq_s8(v162.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[2], 0x3DuLL)));
  v162.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[1], 8uLL)), (int64x2_t)v162.val[2]);
  v162.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[0], 8uLL)), (int64x2_t)v162.val[3]);
  v162.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v162.val[0], (int64x2_t)v162.val[0]), v13), (int64x2_t)v162.val[0]), *(int64x2_t *)&STACK[0x3E0]), *(int8x16_t *)&STACK[0x3D0]);
  v162.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v162.val[1], (int64x2_t)v162.val[1]), v13), (int64x2_t)v162.val[1]), *(int64x2_t *)&STACK[0x3E0]), *(int8x16_t *)&STACK[0x3D0]);
  v162.val[2] = veorq_s8(v162.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[2], 0x3DuLL)));
  v162.val[3] = veorq_s8(v162.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[3], 0x3DuLL)));
  v162.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[1], 8uLL)), (int64x2_t)v162.val[2]), v15);
  v162.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[0], 8uLL)), (int64x2_t)v162.val[3]), v15);
  v123 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x350], v117), v9);
  v162.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[0], 8uLL)), (int64x2_t)veorq_s8(v162.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[3], 0x3DuLL)))), v16);
  v162.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[1], 8uLL)), (int64x2_t)veorq_s8(v162.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v162.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162.val[2], 0x3DuLL)))), v16);
  v162.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v162.val[0], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v162.val[0], (int64x2_t)v162.val[0]), v17)), v74), v10), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x370], 3uLL), v7)));
  v162.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v162.val[1], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v162.val[1], (int64x2_t)v162.val[1]), v17)), v74), v10), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x360], 3uLL), v7)));
  v124 = (int64x2_t)veorq_s8(v123, v8);
  v125 = (int64x2_t)veorq_s8(v123, v96);
  v126 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v124, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 8uLL)), v125);
  v127 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v126, v126), v122), v126), v98), v38);
  v128 = (int64x2_t)veorq_s8((int8x16_t)v127, vorrq_s8((int8x16_t)vshlq_n_s64(v125, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 0x3DuLL)));
  v129 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v127, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 8uLL)), v128), v11);
  v130 = (int64x2_t)veorq_s8((int8x16_t)v129, vorrq_s8((int8x16_t)vshlq_n_s64(v128, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 0x3DuLL)));
  v131 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v129, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v129, 8uLL)), v130);
  v132 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v131, v14), (int64x2_t)vorrq_s8(v131, (int8x16_t)v12)), v12), v50);
  v133 = (int64x2_t)veorq_s8((int8x16_t)v132, vorrq_s8((int8x16_t)vshlq_n_s64(v130, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 0x3DuLL)));
  v134 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v132, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v132, 8uLL)), v133);
  v135 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v134, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v134, v134), *(int8x16_t *)&STACK[0x410])), *(int64x2_t *)&STACK[0x400]), *(int8x16_t *)&STACK[0x3F0]);
  v136 = (int64x2_t)veorq_s8((int8x16_t)v135, vorrq_s8((int8x16_t)vshlq_n_s64(v133, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133, 0x3DuLL)));
  v137 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v135, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v135, 8uLL)), v136);
  v138 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v137, v137), v13), v137), *(int64x2_t *)&STACK[0x3E0]), *(int8x16_t *)&STACK[0x3D0]);
  v139 = (int64x2_t)veorq_s8((int8x16_t)v138, vorrq_s8((int8x16_t)vshlq_n_s64(v136, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v136, 0x3DuLL)));
  v140 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v138, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 8uLL)), v139), v15);
  v141 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v140, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v140, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v140, vorrq_s8((int8x16_t)vshlq_n_s64(v139, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 0x3DuLL)))), v16);
  v142 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x330], v117), v9);
  v162.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v141, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v141, v141), v17)), v74), v10), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x380], 3uLL), v7)));
  v143 = (int64x2_t)veorq_s8(v142, v8);
  v144 = (int64x2_t)veorq_s8(v142, v96);
  v145 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v143, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v143, 8uLL)), v144);
  v146 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v145, v145), v122), v145), v98), v38);
  v147 = (int64x2_t)veorq_s8((int8x16_t)v146, vorrq_s8((int8x16_t)vshlq_n_s64(v144, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 0x3DuLL)));
  v148 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v146, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 8uLL)), v147), v11);
  v149 = (int64x2_t)veorq_s8((int8x16_t)v148, vorrq_s8((int8x16_t)vshlq_n_s64(v147, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 0x3DuLL)));
  v150 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v148, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 8uLL)), v149);
  v151 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v150, v14), (int64x2_t)vorrq_s8(v150, (int8x16_t)v12)), v12), v50);
  v152 = (int64x2_t)veorq_s8((int8x16_t)v151, vorrq_s8((int8x16_t)vshlq_n_s64(v149, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 0x3DuLL)));
  v153 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v151, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 8uLL)), v152);
  v154 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v153, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v153, v153), *(int8x16_t *)&STACK[0x410])), *(int64x2_t *)&STACK[0x400]), *(int8x16_t *)&STACK[0x3F0]);
  v155 = (int64x2_t)veorq_s8((int8x16_t)v154, vorrq_s8((int8x16_t)vshlq_n_s64(v152, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152, 0x3DuLL)));
  v156 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v154, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 8uLL)), v155);
  v157 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v156, v156), v13), v156), *(int64x2_t *)&STACK[0x3E0]), *(int8x16_t *)&STACK[0x3D0]);
  v158 = (int64x2_t)veorq_s8((int8x16_t)v157, vorrq_s8((int8x16_t)vshlq_n_s64(v155, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v155, 0x3DuLL)));
  v159 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v157, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 8uLL)), v158), v15);
  v160 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v159, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v159, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v159, vorrq_s8((int8x16_t)vshlq_n_s64(v158, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v158, 0x3DuLL)))), v16);
  v162.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v160, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v160, v160), v17)), v74), v10), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v112, 3uLL), v7)));
  *((_QWORD *)&v121 + 1) = vqtbl4q_s8(v162, *(int8x16_t *)&STACK[0x3C0]).u64[0];
  *(_OWORD *)(v3 + v6 + v4) = v121;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((32 * (v6 + 16 != v5)) | ((v6 + 16 != v5) << 11)) ^ v2)) - 8))();
}

uint64_t sub_18CA1F104@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v21 = (__ROR8__(v11 + v10 - 0x67E585C2659AEF57 + (v8 + 693), 8) & 0xF8FFFFFFFFFFFFFFLL)
      + 0x4A65FA6F8636B0DDLL;
  v22 = v21 ^ 0xF3A240818DA72642;
  v21 ^= 0xA08D93FDBC12A0A8;
  v23 = __ROR8__(v22, 8);
  v24 = (((2 * (v23 + v21)) | 0x9FA3235F54A28A50) - (v23 + v21) + a2) ^ a3;
  v25 = v24 ^ __ROR8__(v21, 61);
  v26 = (__ROR8__(v24, 8) + v25) ^ 0x7A587216E06F0656;
  v27 = v26 ^ __ROR8__(v25, 61);
  v28 = __ROR8__(v26, 8);
  v29 = (0xD4926EEF07BB762ALL - ((v28 + v27) | 0xD4926EEF07BB762ALL) + ((v28 + v27) | a4)) ^ a5;
  v30 = v29 ^ __ROR8__(v27, 61);
  v31 = __ROR8__(v29, 8);
  v32 = (v31 + v30 - (a6 & (2 * (v31 + v30))) + a7) ^ v12;
  v33 = v32 ^ __ROR8__(v30, 61);
  v34 = __ROR8__(v32, 8);
  v35 = ((v13 & (2 * (v34 + v33))) - (v34 + v33) + v14) ^ v15;
  v36 = v35 ^ __ROR8__(v33, 61);
  v37 = (__ROR8__(v35, 8) + v36) ^ 0x7513AABC5A3B3BB8;
  v38 = v37 ^ __ROR8__(v36, 61);
  v39 = __ROR8__(v37, 8);
  *(_BYTE *)(v11 + v10 - 0x67E585C2659AEF57 + (v8 + 693) + v20) = ((((v39 + v38) ^ v16)
                                                                                  - (v17 & (2 * ((v39 + v38) ^ v16)))
                                                                                  + v18) ^ v19) >> (8
                                                                                                  * ((v11 + v10 - 87 + v8 - 75) & 7));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v10 + 1 == a8) * v9) ^ v8)) - 8))();
}

uint64_t sub_18CA1F288()
{
  return ((uint64_t (*)(void))STACK[0x970])();
}

void sub_18CA1F290()
{
  JUMPOUT(0x18CA1E388);
}

uint64_t sub_18CA1F2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  unint64_t v68;
  unint64_t v69;

  v68 = STACK[0x840];
  *(_QWORD *)(v68 + 108) = 0x20C7F5E200000000;
  *(_DWORD *)(v68 + 116) = -1640678695;
  *(_BYTE *)(v68 + 104) = 0;
  v69 = STACK[0x308];
  STACK[0x940] = v68;
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * (((a68 ^ 0x2DA) + 154) ^ a68))
                            - (a68 + 1901)
                            + 3201))();
}

uint64_t sub_18CA1F384()
{
  unsigned int v0;
  unint64_t v1;
  unint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  unint64_t v5;

  v1 = STACK[0x940];
  v2 = STACK[0x858];
  v3 = (char *)&STACK[0xB70] + STACK[0x858] + (v0 ^ 0x9C4A500C61880AC2);
  STACK[0x850] = (unint64_t)(v3 + 0x9D5579397731A96);
  STACK[0x488] = (unint64_t)(v3 + 0x9D5579397731AA6);
  STACK[0x858] = v2 + 128;
  v4 = sub_18CA83320(v3, 0, 0x20uLL);
  v5 = STACK[0x308];
  STACK[0x810] = 0;
  STACK[0x4B0] = v1;
  return (*(uint64_t (**)(_BYTE *))(v5 + 8 * (int)(((v1 != 0) * ((v0 ^ 0x2DA) - 1268)) | v0)))(v4);
}

uint64_t sub_18CA1F428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(uint64_t))
{
  uint64_t v23;
  _BYTE *v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  STACK[0x400] = (unint64_t)(v24 + 80);
  STACK[0x410] = v26;
  STACK[0x3F0] = v27;
  *(_DWORD *)(v28 - 216) = 1314530549 * ((v28 + 1284380416 - 2 * ((v28 - 224) & 0x4C8E17E0)) ^ 0xFD87912E)
                         + 647167551
                         + v25
                         + 1742;
  v29 = a23(v28 - 224);
  v30 = *(_QWORD *)(v28 - 224);
  *v24 = v30 ^ 0xB9;
  *(_BYTE *)(v23 + 1301122194 + v26 + v27 + ((v25 + 192) ^ 0xFFFFFFFFB27276B7)) = BYTE1(v30) ^ 0xF;
  return (*(uint64_t (**)(uint64_t))(STACK[0x308]
                                            + 8
                                            * ((769 * (((v25 - 103) ^ 0x4D8D8811) != 1301122194)) ^ (v25 - 935))))(v29);
}

uint64_t sub_18CA1F574@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v5 = v2 + v3;
  *(_BYTE *)(v5 + 2) = (a1 >> (((v4 + 87) | 0xD0u) + 56)) ^ 0xDC;
  *(_BYTE *)(v5 + 3) = (v4 + 1) ^ BYTE3(a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v4 ^ (2402 * (v3 != 12)))) - 4))();
}

uint64_t sub_18CA1F5C4@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  *(_BYTE *)(v1 + 4) = BYTE4(a1) ^ 0x24;
  *(_BYTE *)(v1 + 5) = (a1 >> ((v4 + 54) ^ 0xCFu)) ^ 0xC6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((489 * (v3 != 10)) ^ (v4 - 458))) - 12))();
}

uint64_t sub_18CA1F630@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v3 + v4;
  *(_BYTE *)(v5 + 6) = (a1 >> (2 * (((v1 + 95) | 0xC8) ^ 0x56u) + 20)) ^ 0x86;
  *(_BYTE *)(v5 + 7) = HIBYTE(a1) ^ 0x21;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (120 * (v4 != 8)))) - 4))();
}

uint64_t sub_18CA1F690()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((404 * ((v0 - 1113240421) & 0x425AB17D ^ 0x137) - 756)
                                          * (v3 + 1301122202 == v2 + 8)) ^ v0))
                            - 12))();
}

uint64_t sub_18CA1F6EC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((4 * (((v2 + 8 < (a1 - 293)) ^ (a1 - 36)) & 1)) & 0xBF | ((((v2 + 8 < (a1 - 293)) ^ (a1 + 732)) & 1) << 6)) ^ a1)))();
}

uint64_t sub_18CA1F72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(uint64_t))
{
  _BYTE *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  v23[47] = (v23[15] ^ 0x73) + ((2 * v23[15]) & 0xE7) - 32;
  v23[46] = (v23[14] ^ 0x73) + ((v23[14] << ((v24 - 103) ^ 0x70)) & 0xE6) - 32;
  v23[45] = (v23[13] ^ 0x73) + ((2 * v23[13]) & 0xE7) - 32;
  v23[44] = (v23[12] ^ 0x73) + ((2 * v23[12]) & 0xE7) - 32;
  v23[43] = (v23[11] ^ 0x73) + ((2 * v23[11]) & 0xE7) - 32;
  v23[42] = (v23[10] ^ 0x73) + ((2 * v23[10]) & 0xE7) - 32;
  v23[41] = (v23[9] ^ 0x73) + ((2 * v23[9]) & 0xE7) - 32;
  v23[40] = (v23[8] ^ 0x73) + ((2 * v23[8]) & 0xE7) - 32;
  v23[39] = (v23[7] ^ 0x73) + ((2 * v23[7]) & 0xE7) - 32;
  v23[38] = (v23[6] ^ 0x73) + ((2 * v23[6]) & 0xE7) - 32;
  v23[37] = (v23[5] ^ 0x73) + ((2 * v23[5]) & 0xE7) - 32;
  v23[36] = (v23[4] ^ 0x73) + ((2 * v23[4]) & 0xE7) - 32;
  v23[35] = (v23[3] ^ 0x73) + ((2 * v23[3]) & 0xE7) - 32;
  v23[34] = (v23[2] ^ 0x73) + ((2 * v23[2]) & 0xE7) - 32;
  v23[33] = (v23[1] ^ 0x73) + ((2 * v23[1]) & 0xE7) - 32;
  v23[32] = (*v23 ^ 0x73) + ((2 * *v23) & 0xE7) - 32;
  *(_DWORD *)(v25 - 216) = 1314530549 * ((~((v25 - 224) | 0x52115FA3) + ((v25 - 224) & 0x52115FA3)) ^ 0x1CE72692)
                         + 647167551
                         + v24
                         + 1177
                         + 373;
  v26 = a23(v25 - 224);
  *v23 = ((v24 - 88) | 1) ^ *(_QWORD *)(v25 - 224) ^ 0x38;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x308]
                                                      + 8
                                                      * ((211 * (((v24 + 1045813783) & 0xC1AA2FFB) == 4044)) ^ (v24 + 1177)))
                                          - 4))(v26);
}

uint64_t sub_18CA1F9F0@<X0>(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  *(_BYTE *)(v2 + v3 + 815 * (v4 ^ 0x184u) - 4074) = HIBYTE(a1) ^ 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v4 ^ (70 * (v3 != 30)))) - 12))();
}

uint64_t sub_18CA1FA38@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  *(_BYTE *)(v4 + ((v5 + 1928298110) & 0x8D108FEB ^ (unint64_t)(v1 + 2592)) + v3) = ((v5 - 54) | 0x10) ^ BYTE2(a1) ^ 0x87;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v5 ^ (3835 * (v3 != 29)))) - 12))();
}

uint64_t sub_18CA1FA94@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  *(_BYTE *)(v5 + (((v1 ^ 0x1F8u) * v6) ^ (unint64_t)(v2 + 2599)) + v4) = (7 * (v1 ^ 0x6C)) ^ HIBYTE(a1) ^ 0x33;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (218 * (v4 == 28)))) - 12))();
}

uint64_t sub_18CA1FAE4@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + v4 + 4) = (a1 >> (((v1 + 121) & 0xF7u) + 46)) ^ 0x24;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (3853 * (v4 != 27)))) - 12))();
}

uint64_t sub_18CA1FB38@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 + 5) = BYTE5(a1) ^ 0xC6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1003 * (((v4 == 26) ^ (v1 - 7)) & 1)) ^ v1))
                            - 157 * (v1 ^ 0x5E5)
                            + 3603))();
}

uint64_t sub_18CA1FB88@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  *(_BYTE *)(v4 + v5 + 6) = BYTE6(a1) ^ 0x86;
  return (*(uint64_t (**)(void))(v2 + 8 * ((61 * (v3 == (((v1 ^ 0xEB8) * v6 - 1897) | 0x220u) + 848695766)) ^ v1)))();
}

uint64_t sub_18CA1FBE0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 + 7) = HIBYTE(a1) ^ 0x21;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((1778
                                          * (v4 + 848698463 + ((v1 - 1627953847) & 0x61089FFF) - 4067 != ((v1 - 1599978153) & 0x5F5DBD6E) + 848695063)) ^ v1))
                            - 4))();
}

uint64_t sub_18CA1FC5C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((195 * (((v1 == v3 + 8) ^ (v0 + 25)) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_18CA1FC8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 + (a1 ^ v1) + v3) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((1113 * ((int)v3 + 8 < ((((_DWORD)a1 + 3008) | 0x2AA) ^ 0xFCBu))) ^ a1))
                            - (a1 + 2288)
                            + 2661))();
}

uint64_t sub_18CA1FCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;

  STACK[0x858] = ((v69 + 1901) ^ 0xFFFFFFFFFFFFF305) + v68;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 + 8 * ((4045 * (a23 == v70)) ^ v69))
                                                                                                - 4))(a1, a2, a3, a4, a68, a6, 2654288601);
}

uint64_t sub_18CA1FD24()
{
  uint64_t v0;
  int v1;
  _BOOL4 v2;

  v2 = (unint64_t)&STACK[0xB70]
     + STACK[0x410]
     - STACK[0x488]
     + ((v1 - 2771) ^ 0xA61FA79FF8FB1F2DLL)
     + ((v1 - 747) | 0x41u) > 0xF;
  return (*(uint64_t (**)(void))(v0 + 8 * (((8 * v2) | (16 * v2)) ^ v1)))();
}

uint64_t sub_18CA1FDA0@<X0>(int a1@<W8>)
{
  int8x16_t *v1;
  uint64_t v2;
  int8x16_t *v3;
  int8x16_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;

  v4.i64[0] = 0x7373737373737373;
  v4.i64[1] = 0x7373737373737373;
  v5.i64[0] = 0xE6E6E6E6E6E6E6E6;
  v5.i64[1] = 0xE6E6E6E6E6E6E6E6;
  v6.i64[0] = 0xE0E0E0E0E0E0E0E0;
  v6.i64[1] = 0xE0E0E0E0E0E0E0E0;
  v7 = vrev64q_s8(v3[1]);
  v8 = vextq_s8(v7, v7, 8uLL);
  v9 = vrev64q_s8(vaddq_s8(vaddq_s8(veorq_s8(v8, v4), v6), vandq_s8(vaddq_s8(v8, v8), v5)));
  v1[1] = vextq_s8(v9, v9, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((1485 * (((a1 + 1417) ^ 0xA81) == 16)) ^ (a1 + 884)))
                            - 8))();
}

uint64_t sub_18CA1FE24()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v0 + v2 - 2002205280) = (*(_BYTE *)(v4 + v2 - 2002205280) ^ 0x73)
                                   + ((2 * *(_BYTE *)(v4 + v2 - 2002205280)) & 0xE7)
                                   - 32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((225 * (v2 != 2002205280)) ^ v1)) - 8))();
}

uint64_t sub_18CA1FE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v23 = STACK[0x400];
  sub_18CA83320((_BYTE *)STACK[0x400], 0, 0x18uLL);
  *(_QWORD *)(v22 + 104) = 0x1FA834112;
  *(_QWORD *)(v22 + 112) = 0x200000004;
  STACK[0x5B8] = v23;
  LODWORD(STACK[0x5E4]) = 0;
  STACK[0x5B0] = 0;
  v24 = a21(128);
  v25 = STACK[0x308];
  STACK[0x960] = v24;
  return ((uint64_t (*)(void))(*(_QWORD *)(v25 + 8 * ((1328 * (v24 != 0)) ^ v21)) - 4))();
}

uint64_t sub_18CA1FF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;

  v23 = (v21 - 1304) | 0x518;
  v24 = v23 - 787;
  STACK[0x490] = ((v23 - 61511071) & 0x3AA9297 ^ 0xFFFFFFFFFFFFFDEDLL) + *(_QWORD *)(v22 + 8 * (v23 - 1192));
  v25 = a21(112);
  v26 = STACK[0x308];
  STACK[0x870] = v25;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * (((4 * (v25 == 0)) | (16 * (v25 == 0))) ^ v24)) - 8))();
}

uint64_t sub_18CA1FF8C()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_18CA1FF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((a1 == 0) ^ (a5 + 13)) & 1)
                                          * (((a5 - 1982156599) & 0x76254E7E) + 1098)) ^ (a5 - 563)))
                            - 4))();
}

uint64_t sub_18CA1FFDC()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  BOOL v4;
  int v5;

  v2 = v0 + 541;
  v3 = (v0 + 541) ^ 0x75A;
  if (STACK[0x5D0])
    v4 = STACK[0x788] == 0;
  else
    v4 = 1;
  v5 = !v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v5 * (v3 + 176)) ^ v2)) - 12))();
}

uint64_t sub_18CA20104@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  v4 = v2 + 2158;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)v1;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(v1 + 72);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(v1 + 76);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(v1 + 80);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(v1 + 81);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(v1 + 104);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(v1 + 84);
  v5 = (v4 - 2441) ^ 0xFFFFFFFFA4239532;
  *(_BYTE *)(a1 + 124) = ((*(_BYTE *)(v1 + 108) & 0x10 ^ *(_BYTE *)(v1 + 108) & 0x11 ^ 0x9A) - 92) ^ 0x52;
  v6 = ((_BYTE)v5 + 80) & 0xF;
  *(_BYTE *)(a1 + 1541171560 + v5) = ((*(_BYTE *)(v1 + 1541171544 + v5) ^ 0x4A)
                                    + ((2 * *(_BYTE *)(v1 + 1541171544 + v5)) & 0x94)
                                    + 119) ^ *((_BYTE *)off_1E2538470[v4 - 3365] + v6 - 4) ^ *((_BYTE *)off_1E2538470[v4 & 0x9843B281]
                                                                                             + v6
                                                                                             - 5) ^ (-69 * v6) ^ *((_BYTE *)off_1E2538470[v4 - 3221] + v6 - 8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * v4) - 12))();
}

void sub_18CA2024C()
{
  JUMPOUT(0x18CA201C8);
}

uint64_t sub_18CA20254@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(a1 + 87) = *(_BYTE *)(v4 + 18) ^ *(_BYTE *)(v3 + 15) ^ *(_BYTE *)(v5 + 15) ^ 0xF5 ^ ((*(_BYTE *)(v1 + 71) ^ 0x4A)
                                                                                                + ((*(_BYTE *)(v1 + 71) << (v2 ^ 0xFC)) & 0x94)
                                                                                                + 119);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * v2) - 12))();
}

void sub_18CA202E8()
{
  JUMPOUT(0x18CA20280);
}

uint64_t sub_18CA202F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  uint64_t v65;
  int v66;
  uint64_t v67;

  *(_BYTE *)(a6 + 119) = *(_BYTE *)(v65 + 103);
  *(_BYTE *)(a6 + 118) = *(_BYTE *)(v65 + 102);
  *(_BYTE *)(a6 + 117) = *(_BYTE *)(v65 + 101);
  *(_BYTE *)(a6 + 116) = *(_BYTE *)(v65 + 100);
  *(_BYTE *)(a6 + 115) = *(_BYTE *)(v65 + 99);
  *(_BYTE *)(a6 + 114) = *(_BYTE *)(v65 + 98);
  *(_BYTE *)(a6 + 113) = *(_BYTE *)(v65 + 97);
  *(_BYTE *)(a6 + 112) = *(_BYTE *)(v65 + 96);
  *(_BYTE *)(a6 + 111) = *(_BYTE *)(v65 + 95);
  *(_BYTE *)(a6 + 110) = *(_BYTE *)(v65 + 94);
  *(_BYTE *)(a6 + 109) = *(_BYTE *)(v65 + 93);
  *(_BYTE *)(a6 + 108) = *(_BYTE *)(v65 + 92);
  *(_BYTE *)(a6 + 107) = *(_BYTE *)(v65 + 91);
  *(_BYTE *)(a6 + 106) = *(_BYTE *)(v65 + 90);
  *(_BYTE *)(a6 + 105) = *(_BYTE *)(v65 + 89);
  *(_BYTE *)(a6 + 104) = *(_BYTE *)(v65 + 88);
  *(_DWORD *)(a6 + 20) = *(_DWORD *)(v65 + 4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 + 8 * ((1082 * (*(_DWORD *)(v65 + 4) == 1445108060)) ^ v66))
                                                                                                - (((v66 - 306) | 0x408u) ^ 0x514)))(a1, a2, a3, a4, a65, a5, 2654288601);
}

uint64_t sub_18CA203CC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((4700 * (*(_DWORD *)(v0 + 72) != 945984309)) ^ v1))
                            - ((v1 + 1035619129) & 0xC245B79C ^ 0x514)))();
}

uint64_t sub_18CA20418@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(void);

  *(_DWORD *)(a1 + 20) = 1445108061;
  return v1();
}

uint64_t sub_18CA2042C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)((((a5 + 578726436) & 0xDD8151FF ^ 0xEB5) * v5) ^ (a5 - 831)))
                            - ((a5 - 193035629) & 0xB81787F)
                            + 35))();
}

uint64_t sub_18CA20480()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((317 * ((((v0 - 2004893742) & 0x17804EA6 ^ (STACK[0x5B0] == 0)) & 1) == 0)) ^ (v0 - 2004893742) & 0x17804EA6))
                            - 12))();
}

uint64_t sub_18CA20514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t (*a55)(void))
{
  uint64_t (*v55)(uint64_t);
  _QWORD *v56;
  uint64_t v57;

  v57 = a55();
  *v56 = 0;
  return v55(v57);
}

uint64_t sub_18CA20534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t (*v5)(uint64_t);
  int v6;
  int v7;
  _BOOL4 v8;

  v6 = (a5 - 399348217) & 0x17CD8EF7;
  v7 = a5 - 769;
  v8 = v5(16) != 0;
  return (*(uint64_t (**)(void))(STACK[0x308] + 8 * ((v8 * (v6 + 3087)) ^ v7)))();
}

uint64_t sub_18CA20584(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  uint64_t v21;
  int v22;
  _BOOL4 v23;

  *a1 = 0;
  a1[1] = 0;
  *(_QWORD *)(v21 + 8) = (char *)a1 + 0x47B5CC9A2E1B2553;
  v23 = a21(16) != 0;
  return (*(uint64_t (**)(void))(STACK[0x308] + 8 * ((v23 * (((v22 - 585182393) & 0x22E12FB9) - 1248)) ^ v22)))();
}

uint64_t sub_18CA205EC(_QWORD *a1)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *a1 = 0;
  a1[1] = 0;
  *v1 = (char *)a1 + v3;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((STACK[0x5B8] == 0)
                                     * (((163 * ((2 * (v2 ^ 0x658)) ^ 0x896)) ^ 0xFFFFFE06) + 2 * (v2 ^ 0x658) - 902)) ^ (2 * (v2 ^ 0x658)))))();
}

uint64_t sub_18CA20640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v12;
  uint64_t v13;

  v9 = (v6 + 1587);
  v10 = *(_QWORD *)(v7 + 8);
  STACK[0x498] = v9 + *(_QWORD *)(v8 + 8 * (v6 - 1152)) - 2895;
  STACK[0x790] = (unint64_t)&STACK[0x5E4];
  STACK[0x678] = 0;
  LODWORD(STACK[0x774]) = -1640678695;
  v12 = v10 == 0x47B5CC9A2E1B2553 || &STACK[0x5E4] == 0;
  v13 = *(_QWORD *)(v8 + 8 * (int)(((2 * v12) | (16 * v12)) ^ v9));
  STACK[0x868] = 0x3B00A775DF608EC6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13
                                                                                                - (v9 ^ 0xB4F ^ (v6 - 53253914) & 0x32C9719 ^ 0x518)))(a1, a2, a3, a4, a5, a6, 2654288601);
}

uint64_t sub_18CA20800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((a5 - 831) ^ (3605 * (v5 == 1556737630))))
                            - ((a5 - 988) ^ (a5 - 1519006011) & 0x5A8A2CFAu ^ 0x1ECLL)))();
}

uint64_t sub_18CA20858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(uint64_t))
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  *(_DWORD *)(v24 - 216) = 1314530549 * (((~(v24 - 224) & 0x15D31212) - (~(v24 - 224) | 0x15D31213)) ^ 0xA4DA94DD)
                         + 647167551
                         + v23
                         + 2830;
  v25 = a23(v24 - 224);
  v26 = STACK[0x308];
  v27 = *(_QWORD *)(STACK[0x960] + 8);
  STACK[0x898] = (v23 - 82) + *(_QWORD *)(STACK[0x308] + 8 * v23) - 138;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26
                                                      + 8
                                                      * ((4047
                                                        * (((((_DWORD)v23 - 82) ^ (v27 == 0x47B5CC9A2E1B2553)) & 1) == 0)) ^ ((int)v23 - 82)))
                                          - 8))(v25);
}

uint64_t sub_18CA208FC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x8E0]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v2 == ((a1 + 988) ^ (v1 + 1304))) * (((a1 - 44) | 0x408) ^ 0x12)) ^ a1))
                            - 4))();
}

uint64_t sub_18CA20940()
{
  unint64_t v0;
  int v1;
  uint64_t v2;

  STACK[0x810] = v0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((480 * (v1 ^ 0x51D)) ^ 0xE1A ^ (v1 + 1376))))();
}

uint64_t sub_18CA20984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7 + 8 * (((a5 + 1360) * (v6 == v5)) ^ (a5 - 299))))();
}

uint64_t sub_18CA209A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  LODWORD(STACK[0x8E0]) = v5;
  STACK[0x810] = STACK[0x960];
  return (*(uint64_t (**)(void))(v6 + 8 * ((480 * (a5 ^ 0x51D)) ^ 0xE1A ^ (a5 + 1376))))();
}

uint64_t sub_18CA209F4()
{
  int v0;

  LODWORD(STACK[0x8E0]) = v0;
  return sub_18CA20A00();
}

void sub_18CA20A00()
{
  unint64_t v0;
  int v1;
  uint64_t v2;

  STACK[0x4E8] = v0;
  STACK[0x828] = (v1 ^ 0x460u) + *(_QWORD *)(v2 + 8 * (v1 - 1132)) - 388;
  JUMPOUT(0x18CA328F8);
}

uint64_t sub_18CA20A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;

  STACK[0x960] = 0;
  v7 = STACK[0x8E0];
  STACK[0x810] = 0;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 == v5) * ((480 * (a5 ^ 0x51D)) ^ 0xE1A)) ^ (a5 + 1376))))();
}

uint64_t sub_18CA20A70@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((a1 - 2000) ^ 0x16E) * (v1 != 0)) ^ a1)) - 4))();
}

uint64_t sub_18CA20AB0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  STACK[0x6A8] = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 != 0x47B5CC9A2E1B2553) * ((v0 + 591) ^ 0xC35)) ^ v0)))();
}

uint64_t sub_18CA20AF0@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v4 + 8 * (v3 ^ 0xABF ^ (1371 * (v1 != v2))));
  STACK[0x900] = a1;
  return ((uint64_t (*)(void))(v5
                            - (((v3 ^ 0xABF) - 1491) | 0x52u)
                            - (((v3 ^ 0xABF) - 1877670825) & 0x6FEAFADF ^ 0xFFFFFFFFFFFFF4B2)))();
}

uint64_t sub_18CA20B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  int v21;
  uint64_t v22;
  unint64_t v23;

  v22 = a21(32);
  v23 = STACK[0x308];
  STACK[0x4D0] = v22;
  return (*(uint64_t (**)(void))(v23 + 8 * (int)(((((v21 + 1573901144) & 0xA23027B9) - 880) * (v22 == 0)) ^ v21)))();
}

uint64_t sub_18CA20B98()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((104 * (*(_QWORD *)(STACK[0x4D0] + 24) != 0)) ^ (v0 + 1305)))
                            - ((v0 - 1799)
                             + (unint64_t)(v0 - 1262))
                            + 1329))();
}

void sub_18CA20E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void (*a55)(void))
{
  uint64_t v55;

  a55();
  *(_QWORD *)(v55 + 24) = 0;
  ((void (*)(uint64_t))a55)(v55);
  JUMPOUT(0x18CA21180);
}

uint64_t sub_18CA20E9C@<X0>(int a1@<W4>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  *v2 = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((((((a1 ^ 0x52B) + 1132) ^ 0xFFFFF32A) + 42 * (a1 ^ 0x52B))
                                               * (*a2 == 0)) ^ (a1 + 821)))
                            - 4))();
}

uint64_t sub_18CA20EE4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((*(_QWORD *)(a1 + 8) == 0) * ((v1 + 623909718) & 0xDACFEDEF ^ 0x191F)) ^ v1))
                            - 12))();
}

uint64_t sub_18CA20F28@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((*a1 == 0) * (((v1 - 2467) | 0x910) - 2432)) ^ v1)))();
}

uint64_t sub_18CA20F54()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_QWORD *)(STACK[0x6D8] + 24) != 0)
                                          * (((v0 - 3072865) & 0x2EDF6E) - 2386)) ^ v0))
                            - 8))();
}

uint64_t sub_18CA20F94()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((569 * (((v1 == 0) ^ (v0 + 57)) & 1)) ^ v0)))();
}

void sub_18CA20FD8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  *v2 = v1;
  *(_QWORD *)(v1 + 8) = *a1;
  *a1 = v1;
  JUMPOUT(0x18CA20FF4);
}

uint64_t sub_18CA21000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)((((((a5 ^ 0x52B) + 1132) ^ 0xFFFFF32A) + 42 * (a5 ^ 0x52B)) * (v5 == 0)) ^ (a5 + 821)))
                            - 4))();
}

uint64_t sub_18CA21040@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 8) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((*(_QWORD *)(a1 + 8) == 0)
                                               * (((v2 ^ 0xCC1) + 623909718) & 0xDACFEDEF ^ 0x191F)) ^ v2 ^ 0xCC1))
                            - 12))();
}

uint64_t sub_18CA21090@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;

  *(_QWORD *)(STACK[0x6A8] - 0x47B5CC9A2E1B2553) = a1;
  return (*(uint64_t (**)(void))(v2 + 8 * (((*a1 == 0) * ((((v1 ^ 0x97A) - 2467) | 0x910) - 2432)) ^ v1 ^ 0x97A)))();
}

uint64_t sub_18CA210DC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  *(_QWORD *)(STACK[0x6A8] - 0x47B5CC9A2E1B254BLL) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_QWORD *)(STACK[0x6D8] + 24) != 0)
                                          * (((((v1 - 930668659) & 0x3778DFDF) - 3072865) & 0x2EDF6E) - 2386)) ^ (v1 - 930668659) & 0x3778DFDF))
                            - 8))();
}

uint64_t sub_18CA21148@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void (*a48)(uint64_t))
{
  a48(a1);
  *(_QWORD *)(STACK[0x6D8] + 24) = 0;
  return sub_18CA21168();
}

void sub_18CA21168()
{
  void (*v0)(void);

  v0();
  STACK[0x6D8] = 0;
  JUMPOUT(0x18CA2117CLL);
}

uint64_t sub_18CA211A8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((2044 * (STACK[0x810] != 0)) ^ v0))
                            - (((v0 - 349) | 0x814u)
                             + (unint64_t)((v0 - 349) ^ 0x79Au))
                            + 4002))();
}

uint64_t sub_18CA211F0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v2 + 8 * ((55 * (v3 == 0x47B5CC9A2E1B2553)) ^ a1));
  STACK[0x680] = v3;
  return ((uint64_t (*)(void))(v4 - ((326 * (a1 ^ 0xA92u)) ^ 0x51CLL)))();
}

uint64_t sub_18CA21244@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  STACK[0x890] = v1;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((((a1 ^ 0xF0) - 2382) | 0x400) ^ 0xFFFFF2CF) + (a1 ^ 0xF0) - 543) * (v2 == v3)) ^ a1 ^ 0xF0)))();
}

uint64_t sub_18CA2127C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  int v21;
  uint64_t v22;
  unint64_t v23;

  v22 = a21(32);
  v23 = STACK[0x308];
  STACK[0x698] = v22;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23
                                        + 8
                                        * (int)(((v22 == 0) * (((v21 - 2115) | 0xAC1) + (v21 ^ 0xFFFFFD18))) ^ v21))
                            - 8))();
}

uint64_t sub_18CA212C4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((484 * (*(_QWORD *)(STACK[0x698] + 24) == 0)) ^ ((v0 ^ 0xD5F) + 985)))
                            - ((335 * (((v0 ^ 0xD5F) + 438288997) & 0xE5E03FDF ^ 0x755)) ^ 0xA74)))();
}

uint64_t sub_18CA212D4(uint64_t a1)
{
  int v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 376501015;
  v4 = v2(42);
  v5 = STACK[0x308];
  *(_QWORD *)(a1 + 24) = v4;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v4 == 0) * ((((v1 - 639983342) & 0x2625552D) + 275) ^ ((v1 - 2298) | 0x214))) ^ v1)))();
}

void sub_18CA21348()
{
  JUMPOUT(0x18CA21358);
}

void sub_18CA21370()
{
  JUMPOUT(0x18CA21394);
}

uint64_t sub_18CA214C8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, int a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t (*v63)(void);
  unint64_t v64;

  v61 = *a3;
  v62 = 1554976193 * ((1554976193 * ((_DWORD)v61 + 4)) ^ ((1554976193 * (v61 + 4)) >> 16));
  v63 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * (a5 - 1098)) - 8);
  *(_BYTE *)(v61 + 4) = *(_BYTE *)(v58 + (v62 >> 24)) ^ 0xB9 ^ *(_BYTE *)(a58 + (v62 >> 24)) ^ *(_BYTE *)(a57 + (v62 >> 24)) ^ (-63 * ((-63 * (v61 + 4)) ^ ((1554976193 * (v61 + 4)) >> 16))) ^ (((1554976193 * ((1554976193 * ((_DWORD)v61 + 4)) ^ ((1554976193 * (v61 + 4)) >> 16))) >> 24) * a7) ^ v59;
  v64 = 1554976193 * ((1554976193 * ((_DWORD)v61 + 5)) ^ ((1554976193 * (v61 + 5)) >> 16));
  *(_BYTE *)(v61 + 5) = *(_BYTE *)(v58 + (v64 >> 24)) ^ 0xB5 ^ *(_BYTE *)(a58 + (v64 >> 24)) ^ *(_BYTE *)(a57 + (v64 >> 24)) ^ v64 ^ (((1554976193 * ((1554976193 * ((_DWORD)v61 + 5)) ^ ((1554976193 * (v61 + 5)) >> 16))) >> 24) * a7) ^ v60;
  return v63();
}

uint64_t sub_18CA216DC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  _BYTE *v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t);

  v78 = (uint64_t (*)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v77 + 8 * ((int)a68 - 1047))
                                                                             + (a68 + 2594)
                                                                             - 3906);
  v68 = (_BYTE *)(*a3 + 6);
  v69 = 1554976193 * ((1554976193 * (*(_DWORD *)a3 + 6)) ^ ((1554976193 * (*(_DWORD *)a3 + 6)) >> 16));
  *v68 = *(_BYTE *)(a56 + (v69 >> 24)) ^ 0xD2 ^ *(_BYTE *)(a58 + (v69 >> 24)) ^ *(_BYTE *)(a57 + (v69 >> 24)) ^ v69 ^ (BYTE3(v69) * a7) ^ a8;
  v70 = 1554976193 * ((1554976193 * ((_DWORD)v68 + 1)) ^ ((1554976193 * ((_DWORD)v68 + 1)) >> 16));
  v68[1] = *(_BYTE *)(a56 + (v70 >> 24)) ^ 0xAB ^ *(_BYTE *)(a58 + (v70 >> 24)) ^ *(_BYTE *)(a57 + (v70 >> 24)) ^ v70 ^ (((1554976193 * ((1554976193 * ((_DWORD)v68 + 1)) ^ ((1554976193 * ((_DWORD)v68 + 1)) >> 16))) >> 24) * a7) ^ v74;
  v71 = 1554976193 * ((1554976193 * ((_DWORD)v68 + 2)) ^ ((1554976193 * ((_DWORD)v68 + 2)) >> 16));
  v68[2] = (-63 * ((-63 * ((_BYTE)v68 + 2)) ^ ((1554976193 * ((_DWORD)v68 + 2)) >> 16))) ^ 0x19 ^ *(_BYTE *)(a56 + (v71 >> 24)) ^ *(_BYTE *)(a58 + (v71 >> 24)) ^ (((1554976193 * ((1554976193 * ((_DWORD)v68 + 2)) ^ ((1554976193 * ((_DWORD)v68 + 2)) >> 16))) >> 24) * a7) ^ *(_BYTE *)(a57 + (v71 >> 24)) ^ v75;
  v72 = 1554976193 * ((1554976193 * ((_DWORD)v68 + 3)) ^ ((1554976193 * ((_DWORD)v68 + 3)) >> 16));
  v68[3] = v72 ^ 5 ^ (((1554976193
                      * ((1554976193 * ((_DWORD)v68 + 3)) ^ ((1554976193 * ((_DWORD)v68 + 3)) >> 16))) >> 24)
                    * a7) ^ *(_BYTE *)(a56 + (v72 >> 24)) ^ *(_BYTE *)(a58 + (v72 >> 24)) ^ *(_BYTE *)(a57 + (v72 >> 24)) ^ v76;
  return v78(a1, a2, a3, a68, a68);
}

uint64_t sub_18CA21714(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  _BYTE *v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t (*v78)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  int v79;

  v78 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 + 8 * ((int)a68 - 1032))
                                                                             + (((_DWORD)a68 + 2560) | 0x22u)
                                                                             - 3906);
  v79 = STACK[0x3D0];
  v68 = (_BYTE *)(*a1 + 6);
  v69 = 1554976193 * ((1554976193 * (*(_DWORD *)a1 + 6)) ^ ((1554976193 * (*(_DWORD *)a1 + 6)) >> 16));
  *v68 = *(_BYTE *)(a56 + (v69 >> 24)) ^ HIBYTE(LODWORD(STACK[0x3D0])) ^ *(_BYTE *)(a58 + (v69 >> 24)) ^ *(_BYTE *)(a57 + (v69 >> 24)) ^ v69 ^ (BYTE3(v69) * a7) ^ a8;
  v70 = 1554976193 * ((1554976193 * ((_DWORD)v68 + 1)) ^ ((1554976193 * ((_DWORD)v68 + 1)) >> 16));
  v68[1] = *(_BYTE *)(a56 + (v70 >> 24)) ^ BYTE2(v79) ^ *(_BYTE *)(a58 + (v70 >> 24)) ^ *(_BYTE *)(a57 + (v70 >> 24)) ^ v70 ^ (((1554976193 * ((1554976193 * ((_DWORD)v68 + 1)) ^ ((1554976193 * ((_DWORD)v68 + 1)) >> 16))) >> 24) * a7) ^ v74;
  v71 = 1554976193 * ((1554976193 * ((_DWORD)v68 + 2)) ^ ((1554976193 * ((_DWORD)v68 + 2)) >> 16));
  v68[2] = (-63 * ((-63 * ((_BYTE)v68 + 2)) ^ ((1554976193 * ((_DWORD)v68 + 2)) >> 16))) ^ BYTE1(v79) ^ *(_BYTE *)(a56 + (v71 >> 24)) ^ *(_BYTE *)(a58 + (v71 >> 24)) ^ (((1554976193 * ((1554976193 * ((_DWORD)v68 + 2)) ^ ((1554976193 * ((_DWORD)v68 + 2)) >> 16))) >> 24) * a7) ^ *(_BYTE *)(a57 + (v71 >> 24)) ^ v75;
  v72 = 1554976193 * ((1554976193 * ((_DWORD)v68 + 3)) ^ ((1554976193 * ((_DWORD)v68 + 3)) >> 16));
  v68[3] = v72 ^ v79 ^ (((1554976193
                        * ((1554976193 * ((_DWORD)v68 + 3)) ^ ((1554976193 * ((_DWORD)v68 + 3)) >> 16))) >> 24)
                      * a7) ^ *(_BYTE *)(a56 + (v72 >> 24)) ^ *(_BYTE *)(a58 + (v72 >> 24)) ^ *(_BYTE *)(a57 + (v72 >> 24)) ^ v76;
  return v78(a1, a2, a3, a68, a68);
}

uint64_t sub_18CA21750(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  _BYTE *v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t);

  v78 = (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t))(STACK[0x380]
                                                                             + *(_QWORD *)(v77 + 8 * ((int)a68 - 1141)));
  v68 = (_BYTE *)(*a2 + 6);
  v69 = 1554976193 * ((1554976193 * (*(_DWORD *)a2 + 6)) ^ ((1554976193 * (*(_DWORD *)a2 + 6)) >> 16));
  *v68 = *(_BYTE *)(a56 + (v69 >> 24)) ^ 0xD2 ^ *(_BYTE *)(a58 + (v69 >> 24)) ^ *(_BYTE *)(a57 + (v69 >> 24)) ^ v69 ^ (BYTE3(v69) * a7) ^ a8;
  v70 = 1554976193 * ((1554976193 * ((_DWORD)v68 + 1)) ^ ((1554976193 * ((_DWORD)v68 + 1)) >> 16));
  v68[1] = *(_BYTE *)(a56 + (v70 >> 24)) ^ 0xAB ^ *(_BYTE *)(a58 + (v70 >> 24)) ^ *(_BYTE *)(a57 + (v70 >> 24)) ^ v70 ^ (((1554976193 * ((1554976193 * ((_DWORD)v68 + 1)) ^ ((1554976193 * ((_DWORD)v68 + 1)) >> 16))) >> 24) * a7) ^ v74;
  v71 = 1554976193 * ((1554976193 * ((_DWORD)v68 + 2)) ^ ((1554976193 * ((_DWORD)v68 + 2)) >> 16));
  v68[2] = (-63 * ((-63 * ((_BYTE)v68 + 2)) ^ ((1554976193 * ((_DWORD)v68 + 2)) >> 16))) ^ 0x19 ^ *(_BYTE *)(a56 + (v71 >> 24)) ^ *(_BYTE *)(a58 + (v71 >> 24)) ^ (((1554976193 * ((1554976193 * ((_DWORD)v68 + 2)) ^ ((1554976193 * ((_DWORD)v68 + 2)) >> 16))) >> 24) * a7) ^ *(_BYTE *)(a57 + (v71 >> 24)) ^ v75;
  v72 = 1554976193 * ((1554976193 * ((_DWORD)v68 + 3)) ^ ((1554976193 * ((_DWORD)v68 + 3)) >> 16));
  v68[3] = v72 ^ 0x35 ^ (((1554976193
                         * ((1554976193 * ((_DWORD)v68 + 3)) ^ ((1554976193 * ((_DWORD)v68 + 3)) >> 16))) >> 24)
                       * a7) ^ *(_BYTE *)(a56 + (v72 >> 24)) ^ *(_BYTE *)(a58 + (v72 >> 24)) ^ *(_BYTE *)(a57 + (v72 >> 24)) ^ v76;
  return v78(a1, a2, a3, a68, a68);
}

uint64_t sub_18CA21858@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v10 = (v9 - 733667007);
  v11 = v7 + v10;
  v12 = *(_BYTE *)(v7 + v10);
  v13 = v10 + v6;
  v14 = 1554976193 * ((1554976193 * v11) ^ ((1554976193 * v11) >> 16));
  v15 = v14 >> (a1 + 41);
  v16 = (unint64_t)(1554976193
                         * ((1554976193 * ((_DWORD)v13 + 10)) ^ ((1554976193 * (v13 + 10)) >> 16))) >> 24;
  *(_BYTE *)(v13 + 10) = *(_BYTE *)(a4 + v15) ^ v12 ^ *(_BYTE *)(v15 + a6 + 1) ^ *(_BYTE *)(v15 + a5 + 5) ^ *(_BYTE *)(a4 + v16) ^ *(_BYTE *)(v16 + a6 + 1) ^ *(_BYTE *)(v16 + a5 + 5) ^ (-63 * ((-63 * (v13 + 10)) ^ ((1554976193 * (v13 + 10)) >> 16))) ^ v14 ^ (-105 * v15) ^ (-105 * ((1554976193 * ((1554976193 * ((_DWORD)v13 + 10)) ^ ((1554976193 * (v13 + 10)) >> 16))) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * (((v9 != 733667007) * v8) ^ a1)) - 4))();
}

uint64_t sub_18CA219B4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t (*v55)(void);
  _BYTE *v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;

  v53 = a1 ^ v51;
  v54 = STACK[0xB38] ^ 0xB92B9B98852B743FLL;
  v55 = (uint64_t (*)(void))(*(_QWORD *)(v52 + 8 * a1) + (v53 ^ 0xFFFFFFFFFFFFFAECLL));
  v56 = *(_BYTE **)(STACK[0x590] + 24);
  v57 = 1554976193 * ((1554976193 * ((_DWORD)v56 + 10)) ^ ((1554976193 * ((_DWORD)v56 + 10)) >> 16));
  v56[10] = HIBYTE(v54) ^ *(_BYTE *)(a49 + (v57 >> 24)) ^ *(_BYTE *)(a51 + (v57 >> 24)) ^ *(_BYTE *)(a50 + (v57 >> 24)) ^ (-63 * ((-63 * ((_BYTE)v56 + 10)) ^ ((1554976193 * ((_DWORD)v56 + 10)) >> 16))) ^ (-29 * ((1554976193 * ((1554976193 * ((_DWORD)v56 + 10)) ^ ((1554976193 * ((_DWORD)v56 + 10)) >> 16))) >> 24)) ^ 0xA6;
  v58 = 1554976193 * ((1554976193 * ((_DWORD)v56 + 11)) ^ ((1554976193 * ((_DWORD)v56 + 11)) >> 16));
  v56[11] = BYTE6(v54) ^ *(_BYTE *)(a49 + (v58 >> 24)) ^ *(_BYTE *)(a51 + (v58 >> 24)) ^ *(_BYTE *)(a50 + (v58 >> 24)) ^ (-63 * ((-63 * ((_BYTE)v56 + 11)) ^ ((1554976193 * ((_DWORD)v56 + 11)) >> 16))) ^ (-29 * ((1554976193 * ((1554976193 * ((_DWORD)v56 + 11)) ^ ((1554976193 * ((_DWORD)v56 + 11)) >> 16))) >> 24)) ^ 0x32;
  v59 = 1554976193 * ((1554976193 * ((_DWORD)v56 + 12)) ^ ((1554976193 * ((_DWORD)v56 + 12)) >> 16));
  v56[12] = BYTE5(v54) ^ (-63 * ((-63 * ((_BYTE)v56 + 12)) ^ ((1554976193 * ((_DWORD)v56 + 12)) >> 16))) ^ *(_BYTE *)(a10 + (v59 >> 24)) ^ *(_BYTE *)(a11 + (v59 >> 24)) ^ (-103 * ((1554976193 * ((1554976193 * ((_DWORD)v56 + 12)) ^ ((1554976193 * ((_DWORD)v56 + 12)) >> 16))) >> 24)) ^ *(_BYTE *)((v59 >> 24) + a12 + 6) ^ 0xB6;
  v60 = 1554976193 * ((1554976193 * ((_DWORD)v56 + 13)) ^ ((1554976193 * ((_DWORD)v56 + 13)) >> 16));
  v56[13] = BYTE4(v54) ^ (-63 * ((-63 * ((_BYTE)v56 + 13)) ^ ((1554976193 * ((_DWORD)v56 + 13)) >> 16))) ^ (-103 * ((1554976193 * ((1554976193 * ((_DWORD)v56 + 13)) ^ ((1554976193 * ((_DWORD)v56 + 13)) >> 16))) >> 24)) ^ *(_BYTE *)(a10 + (v60 >> 24)) ^ *(_BYTE *)(a11 + (v60 >> 24)) ^ *(_BYTE *)((v60 >> 24) + a12 + 6) ^ 0x35;
  v61 = 1554976193 * ((1554976193 * ((_DWORD)v56 + 14)) ^ ((1554976193 * ((_DWORD)v56 + 14)) >> 16));
  v56[14] = BYTE3(v54) ^ (-63 * ((-63 * ((_BYTE)v56 + 14)) ^ ((1554976193 * ((_DWORD)v56 + 14)) >> 16))) ^ (-103 * ((1554976193 * ((1554976193 * ((_DWORD)v56 + 14)) ^ ((1554976193 * ((_DWORD)v56 + 14)) >> 16))) >> 24)) ^ *(_BYTE *)(a10 + (v61 >> 24)) ^ *(_BYTE *)(a11 + (v61 >> 24)) ^ *(_BYTE *)((v61 >> 24) + a12 + 6) ^ 0xE6;
  v62 = 1554976193 * ((1554976193 * ((_DWORD)v56 + 15)) ^ ((1554976193 * ((_DWORD)v56 + 15)) >> 16));
  v56[15] = BYTE2(v54) ^ (-63 * ((-63 * ((_BYTE)v56 + 15)) ^ ((1554976193 * ((_DWORD)v56 + 15)) >> 16))) ^ (-103 * ((1554976193 * ((1554976193 * ((_DWORD)v56 + 15)) ^ ((1554976193 * ((_DWORD)v56 + 15)) >> 16))) >> 24)) ^ *(_BYTE *)(a10 + (v62 >> 24)) ^ *(_BYTE *)(a11 + (v62 >> 24)) ^ *(_BYTE *)((v62 >> 24) + a12 + 6) ^ 0x35;
  v63 = 1554976193 * ((1554976193 * ((_DWORD)v56 + 16)) ^ ((1554976193 * ((_DWORD)v56 + 16)) >> 16));
  v56[16] = BYTE1(v54) ^ (-63 * ((-63 * ((_BYTE)v56 + 16)) ^ ((1554976193 * ((_DWORD)v56 + 16)) >> 16))) ^ (-103 * ((1554976193 * ((1554976193 * ((_DWORD)v56 + 16)) ^ ((1554976193 * ((_DWORD)v56 + 16)) >> 16))) >> 24)) ^ *(_BYTE *)(a10 + (v63 >> 24)) ^ *(_BYTE *)(a11 + (v63 >> 24)) ^ *(_BYTE *)((v63 >> 24) + a12 + 6) ^ 0x8F;
  v64 = 1554976193 * ((1554976193 * ((_DWORD)v56 + 17)) ^ ((1554976193 * ((_DWORD)v56 + 17)) >> 16));
  v56[17] = v54 ^ v64 ^ (-103
                       * ((1554976193
                         * ((1554976193 * ((_DWORD)v56 + 17)) ^ ((1554976193 * ((_DWORD)v56 + 17)) >> 16))) >> 24)) ^ *(_BYTE *)(a10 + (v64 >> 24)) ^ *(_BYTE *)(a11 + (v64 >> 24)) ^ *(_BYTE *)((v64 >> 24) + a12 + 6) ^ 0x6F;
  return v55();
}

uint64_t sub_18CA219E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;

  v19 = *(_QWORD *)(STACK[0x698] + 24);
  v20 = 1554976193 * v19 - 670485527;
  v21 = STACK[0x308];
  v22 = (unint64_t)(1554976193 * (v20 ^ HIWORD(v20))) >> ((((a5 ^ 0x76) - 93) | 0x2Cu) - 37);
  *(_BYTE *)(v19 + 41) = (*(_BYTE *)(STACK[0x890] - 0x9D5579397731A57) - 83) ^ *(_BYTE *)(a17 + v22) ^ *(_BYTE *)(a18 + v22) ^ *(_BYTE *)(v22 + a19 + 6) ^ (-63 * (v20 ^ BYTE2(v20))) ^ (-103 * v22);
  return ((uint64_t (*)(void))(*(_QWORD *)(v21 + 8 * (a5 ^ 0x376)) - 4))();
}

void sub_18CA21AC0()
{
  JUMPOUT(0x18CA21A5CLL);
}

uint64_t sub_18CA21ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = ((_DWORD)v0 - 992027078) & 0x3B212B8F;
  STACK[0x638] = 0;
  v3 = STACK[0x680];
  STACK[0x800] = v2 + *(_QWORD *)(v1 + 8 * v0) - 2571;
  LODWORD(STACK[0xB54]) = 1802681159;
  STACK[0xB58] = (unint64_t)&STACK[0x638];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((v3 != 0x47B5CC9A2E1B2553) * ((v2 + 1936114456) & 0x8C9937F8 ^ 0x50C)) ^ v2))
                            - 12))();
}

void sub_18CA21B58()
{
  JUMPOUT(0x18CA21B88);
}

uint64_t sub_18CA21E00(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;

  v4 = (a4 + 1263);
  STACK[0x670] = 0;
  v5 = STACK[0x7D8];
  v6 = STACK[0xA58];
  v7 = STACK[0x308];
  STACK[0x800] = v4 + *(_QWORD *)(STACK[0x308] + 8 * (a4 - 1218)) - 2575;
  LODWORD(STACK[0xB54]) = v6;
  STACK[0xB58] = (unint64_t)&STACK[0x670];
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (int)(((v5 != 0x47B5CC9A2E1B2553) * ((a4 + 1936115719) & 0x8C9937F8 ^ 0x50C)) ^ v4))
                            - 12))();
}

uint64_t sub_18CA21EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v19;
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;

  v20 = v19 - 1;
  v21 = (v19 - 95607202);
  v22 = *(_BYTE *)(STACK[0xB40] + v21);
  v23 = v21 + *(_QWORD *)(STACK[0x590] + 24);
  v24 = 1554976193 * ((1554976193 * ((_DWORD)v23 + 10)) ^ ((1554976193 * (v23 + 10)) >> 16));
  *(_BYTE *)(v23 + 10) = *(_BYTE *)(a17 + (v24 >> 24)) ^ v22 ^ *(_BYTE *)(a18 + (v24 >> 24)) ^ *(_BYTE *)((v24 >> 24) + a19 + 6) ^ v24 ^ (-103 * ((1554976193 * ((1554976193 * ((_DWORD)v23 + 10)) ^ ((1554976193 * (v23 + 10)) >> 16))) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * ((1613 * (v20 != 95607201)) ^ (a5 - 1294))) - 12))();
}

void sub_18CA21F58()
{
  JUMPOUT(0x18CA21ED0);
}

void sub_18CA21F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  STACK[0x440] = 0;
  STACK[0x800] = *(_QWORD *)(STACK[0x308] + 8 * (int)(a5 - 1242)) + (a5 ^ 0xFFFFFFFFFFFFFAECLL);
  JUMPOUT(0x18CA21F94);
}

uint64_t sub_18CA21FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;

  if (v5 == 1556779682)
  {
    v8 = (_QWORD *)STACK[0x638];
    v9 = *(_QWORD *)(STACK[0x638] + 8);
    v10 = (_QWORD *)STACK[0x698];
    v10[1] = v9;
    *v10 = *v8;
    return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v9 == 0) * ((41 * (a5 ^ 0x55B)) ^ 0xAA5)) ^ (a5 + 1421)))
                              - ((a5 - 1754062161) & 0x688CDFFE)
                              + 1978))();
  }
  else if (v5 == 1556737630)
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                          + 8
                                          * (((*(_QWORD *)(STACK[0x680] - 0x47B5CC9A2E1B254BLL) != 0)
                                            * (3 * (a5 ^ 0x758) - 1665)) ^ (a5 + 1543)))
                              - 12))();
  }
  else
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((484 * (*(_QWORD *)(STACK[0x698] + 24) == 0)) ^ (a5 + 985)))
                              - ((335 * ((a5 + 438288997) & 0xE5E03FDF ^ 0x755)) ^ 0xA74)))();
  }
}

uint64_t sub_18CA22014@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;

  *v3 = v1;
  *(_QWORD *)(v1 + 8) = *a1;
  *a1 = v1;
  v5 = STACK[0x810];
  STACK[0x4A0] = *(_QWORD *)(v4 + 8 * ((v2 ^ 0x3D8) - 1130)) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((276 * (v5 != 0)) ^ ((v2 ^ 0x3D8) + 469)))
                            - (((v2 ^ 0x3D8) - 2082196001) & 0x7C1BC5BF)
                            + 179))();
}

uint64_t sub_18CA2208C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((163 * (a1 ^ 0xA70)) ^ 0xFFFFF883) + ((a1 - 874198649) & 0x341B2FDF))
                                     * (v1 != 0)) ^ a1)))();
}

uint64_t sub_18CA22144()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 ^ 0x23C ^ (v1 - 1244841944) & 0x4A32C5FF) * (v0 == 0)) ^ v1)))();
}

uint64_t sub_18CA2218C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 8) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((*(_QWORD *)(a1 + 8) == 0) * (((6 * (v2 ^ 0x72F) - 469) | 0x102) ^ 0x503)) ^ (6 * (v2 ^ 0x72F))))
                            - 8))();
}

uint64_t sub_18CA221D4@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;

  *(_QWORD *)(STACK[0x680] - 0x47B5CC9A2E1B2553) = a1;
  return (*(uint64_t (**)(void))(v2 + 8
                                   * (((*a1 == 0) * (((2 * ((v1 - 213) | 2)) ^ 0x97C) - 684)) ^ ((v1 - 213) | 2))))();
}

uint64_t sub_18CA2221C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  *(_QWORD *)(STACK[0x680] - 0x47B5CC9A2E1B254BLL) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_QWORD *)(STACK[0x638] + 24) != 0) * (((v1 - 731) | 0x480) + 1589)) ^ (v1 - 465)))
                            - 12))();
}

void sub_18CA2226C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void (*a48)(void))
{
  ((void (*)(uint64_t))a48)(a1);
  *(_QWORD *)(STACK[0x638] + 24) = 0;
  a48();
  STACK[0x638] = 0;
  JUMPOUT(0x18CA224A8);
}

uint64_t sub_18CA22414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8 * ((2022 * (v6 == (((a5 - 1303) | 0x920) ^ (v5 + 2273)))) ^ (a5 - 313)))
                            - 12))();
}

uint64_t sub_18CA22450@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (((*(_BYTE *)(STACK[0x4B0] + 5) == 47) * ((8 * a1) ^ 0x4978)) ^ a1)))();
}

void sub_18CA22484()
{
  JUMPOUT(0x18CA224A8);
}

uint64_t sub_18CA224F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + 8);
  STACK[0x898] = *(_QWORD *)(v2 + 8 * v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((4047
                                               * ((((((_DWORD)v1 - 183) | 0x86) ^ (v3 == 0x47B5CC9A2E1B2553)) & 1) == 0)) ^ ((v1 - 183) | 0x86)))
                            - 8))();
}

uint64_t sub_18CA22524@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t sub_18CA22538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1360 * (v5 == 954 * (a5 ^ 0x51C) + 1556775866)) ^ (a5 + 1417)))
                            - 4))();
}

uint64_t sub_18CA22580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  unint64_t v10;
  unint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  unint64_t v15;

  v10 = STACK[0x810];
  v11 = STACK[0x858];
  v12 = (char *)&a9 + STACK[0x858] - 0x63B5AFF39E77E790;
  STACK[0x968] = (unint64_t)v12;
  v13 = v12 + 16;
  STACK[0x660] = (unint64_t)(v12 + 16);
  STACK[0x720] = (unint64_t)(v12 + 48);
  STACK[0x858] = (v9 - 3591) + v11 - 145;
  sub_18CA83320(v12, 0, 0x10uLL);
  v14 = sub_18CA83320(v13, 0, 0x20uLL);
  v15 = STACK[0x308];
  STACK[0x6C0] = 0x47B5CC9A2E1B2553;
  STACK[0x700] = 0x1AD15CC5EA54C624;
  LODWORD(STACK[0x47C]) = -1640678695;
  STACK[0x5D8] = 0;
  LODWORD(STACK[0x68C]) = -1640678695;
  STACK[0x5A0] = v10;
  return (*(uint64_t (**)(_BYTE *))(v15 + 8 * (((v10 == 0) * (((2 * v9) ^ 0x18C8) - 1285)) | v9)))(v14);
}

void sub_18CA2264C()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x858] = v1;
  v3 = *(_QWORD *)(v2 + 8 * (v0 - 1142));
  LODWORD(STACK[0x548]) = 1556737659;
  STACK[0x828] = ((v0 - 669718813) & 0x27EB157C ^ 0xFFFFFFFFFFFFFE80) + v3;
  JUMPOUT(0x18CA328F8);
}

uint64_t sub_18CA2265C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  int v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;

  v71 = *v69;
  STACK[0x580] = 0;
  LODWORD(STACK[0x754]) = a7;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70
                                                                                          + 8
                                                                                          * ((2914
                                                                                            * (v71 != 0x47B5CC9A2E1B2553)) ^ (v68 + 365)))
                                                                              - (((v68 - 157) | 0x80Au) ^ 0x846)))(a1, a2, a3, a4, a68);
}

uint64_t sub_18CA2267C@<X0>(int a1@<W4>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((a1 + 2149) * a2) ^ (a1 - 1264))) - 8))();
}

void sub_18CA226A0()
{
  int v0;
  uint64_t v1;

  STACK[0x8B8] = ((9 * (v0 ^ 0x8Fu)) ^ 0xFFFFFFFFFFFFFA27) + *(_QWORD *)(v1 + 8 * v0);
  JUMPOUT(0x18CA25DC8);
}

uint64_t sub_18CA226D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * ((((STACK[0x580] != 0) << 6) | ((STACK[0x580] != 0) << 7)) ^ (a5 - 692))))();
}

uint64_t sub_18CA226F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t (*a55)(void),uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  int v68;
  int v69;
  uint64_t v70;

  v70 = a55();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x308] + 8 * ((a68 - 998) ^ (2510 * (v69 == v68))))
                                          - (a68 - 1100)
                                          + 200))(v70);
}

uint64_t sub_18CA2273C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((a5 - 998) ^ (2510 * (v6 == v5))))
                            - (a5 - 1100)
                            + 200))();
}

uint64_t sub_18CA2276C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = (v0 - 70);
  v3 = STACK[0x6C0];
  STACK[0x898] = (v2 ^ 0xFFFFFFFFFFFFFF72) + *(_QWORD *)(v1 + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((4047 * (((v2 ^ (v3 == 0x47B5CC9A2E1B2553)) & 1) == 0)) ^ v2))
                            - 8))();
}

uint64_t sub_18CA22798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((2098 * (v6 == (a5 ^ 0xE18 ^ (v5 + 1792)))) ^ (a5 - 998))) - 4))();
}

uint64_t sub_18CA227D0@<X0>(int a1@<W6>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  STACK[0x438] = 0;
  v3 = *(_QWORD *)(STACK[0x5A0] + 8);
  STACK[0x758] = 0x1AD15CC5EA54C624;
  LODWORD(STACK[0x59C]) = 1170997871;
  LODWORD(STACK[0x72C]) = a1;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 != 0x47B5CC9A2E1B2553) | (16 * (v3 != 0x47B5CC9A2E1B2553))) ^ a2)))();
}

uint64_t sub_18CA2283C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((86 * (*(_QWORD *)(v1 - 0x47B5CC9A2E1B2553) != 0)) ^ a1 ^ 0xEA5))
                            - 8))();
}

uint64_t sub_18CA2289C@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  v3 = ((_BYTE)a1 + 2) & 0xF;
  LODWORD(STACK[0x59C]) = 1170997887 - v3;
  v4 = (16 - v3) + (unint64_t)(a1 - 746874568) < (v1 ^ 0xFFFFFEC4uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((2 * v4) | (8 * v4)) ^ v1)) - 4))();
}

uint64_t sub_18CA2290C@<X0>(unsigned int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(_QWORD))
{
  int v15;
  unsigned int v16;
  int v17;
  uint64_t v18;
  unint64_t v19;

  v17 = ((v16 - 705905557) & 0x2A13477A ^ 0x2BE4D4B4)
      + v15
      + a2
      - (((((v16 + 1871) | 0x228) ^ 0x1B5F270F) + 2 * (v15 + a2)) & 0x3C6A75B2);
  LODWORD(STACK[0x72C]) = v17;
  v18 = a15(v17 ^ a1);
  v19 = STACK[0x308];
  STACK[0x758] = v18 + 0x1AD15CC5EA54C624;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((1913 * (v18 != 0)) ^ v16)) - 4))();
}

uint64_t sub_18CA229C4()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 - 1291037470) & 0x4CF3A977) + ((v1 - 2687) | 5) - 1923) * (*v0 == 0)) ^ v1))
                            - 12))();
}

uint64_t sub_18CA22A54@<X0>(int a1@<W0>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  LODWORD(STACK[0x410]) = a3;
  v8 = a3 + a2 + ((a1 - 1296261911) & 0x4D4367FFu);
  v9 = *(uint64_t (**)(void))(v7 + 8 * a1);
  v10 = v6 + (v8 ^ 0xB7CABFDF7DBF1EFFLL) + ((2 * (_DWORD)v8) & 0xFB7E3DFE) + 0x6FBFFFABFBE3E7DALL - 0x278ABF8B79A306D9;
  v11 = 1554976193 * ((1554976193 * (_DWORD)v10) ^ ((1554976193 * v10) >> 16));
  *(_BYTE *)(v10 - 0x1AD15CC5EA54C624) = *(_BYTE *)(v5 + (v11 >> 24)) ^ *(_BYTE *)(a4 + (v11 >> 24)) ^ *(_BYTE *)(v4 + (v11 >> 24)) ^ v11 ^ (-29 * ((1554976193 * ((1554976193 * (_DWORD)v10) ^ ((1554976193 * v10) >> 16))) >> 24));
  v12 = 1554976193 * ((1554976193 * (_DWORD)v10 + 1554976193) ^ ((1554976193 * v10 + 1554976193) >> 16));
  *(_BYTE *)(v10 - 0x1AD15CC5EA54C623) = *(_BYTE *)(v5 + (v12 >> 24)) ^ *(_BYTE *)(a4 + (v12 >> 24)) ^ *(_BYTE *)(v4 + (v12 >> 24)) ^ v12 ^ (-29 * ((1554976193 * ((1554976193 * (_DWORD)v10 + 1554976193) ^ ((1554976193 * v10 + 1554976193) >> 16))) >> 24));
  v13 = 1554976193 * ((1554976193 * ((_DWORD)v10 + 2)) ^ ((1554976193 * (v10 + 2)) >> 16));
  *(_BYTE *)(v10 - 0x1AD15CC5EA54C622) = *(_BYTE *)(a4 + (v13 >> 24)) ^ (-63
                                                                         * ((-63 * (v10 + 2)) ^ ((1554976193 * (v10 + 2)) >> 16))) ^ (-29 * ((1554976193 * ((1554976193 * ((_DWORD)v10 + 2)) ^ ((1554976193 * (v10 + 2)) >> 16))) >> 24)) ^ *(_BYTE *)(v5 + (v13 >> 24)) ^ *(_BYTE *)(v4 + (v13 >> 24));
  v14 = 1554976193 * ((1554976193 * ((_DWORD)v10 + 3)) ^ ((1554976193 * (v10 + 3)) >> 16));
  *(_BYTE *)(v10 - 0x1AD15CC5EA54C621) = v14 ^ 0x85 ^ (-29
                                                       * ((1554976193
                                                         * ((1554976193 * ((_DWORD)v10 + 3)) ^ ((1554976193 * (v10 + 3)) >> 16))) >> 24)) ^ *(_BYTE *)(a4 + (v14 >> 24)) ^ *(_BYTE *)(v5 + (v14 >> 24)) ^ *(_BYTE *)(v4 + (v14 >> 24)) ^ 0x85;
  return v9();
}

void sub_18CA22D04(uint64_t a1@<X1>, _BYTE *a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  char v8;
  char v9;
  char v10;

  *v6 = v7 ^ *(_BYTE *)(a4 + a1) ^ *(_BYTE *)(v5 + a1) ^ *(_BYTE *)(v4 + a1) ^ v8;
  *a2 = v9 ^ *(_BYTE *)(a4 + a3) ^ *(_BYTE *)(v5 + a3) ^ *(_BYTE *)(v4 + a3) ^ v10;
  JUMPOUT(0x18CA22BF8);
}

uint64_t sub_18CA22D64()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v1 - 569835046) & 0x21F6F9B2) - 220) * (*v0 != 0)) ^ v1))
                            - 8))();
}

uint64_t sub_18CA22DB0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  _BOOL4 v5;

  v4 = ((v2 + 138720907) & 0xF7BB4DE7) - 141 - *(_DWORD *)(v1 + 16) + 26306449;
  v5 = a1 - 1097067787 > v4;
  if ((a1 - 1097067787) < 0xEB2079BD != v4 < 0xEB2079BD)
    v5 = (a1 - 1097067787) < 0xEB2079BD;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2511 * !v5) ^ v2)) - 4))();
}

uint64_t sub_18CA22E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  int v68;

  v68 = LODWORD(STACK[0x59C])
      - (((LODWORD(STACK[0x59C]) << ((a68 - 4) ^ 0x15)) + 1952971554) & (a68 + 1243760356))
      + 1598366607;
  return (*(uint64_t (**)(void))(STACK[0x308]
                              + 8
                              * ((270
                                * ((v68 ^ 0xDCE4D60B) - 136343652 + ((2 * v68) & 0xF3EBE7EA ^ 0x422243E8) != 1909818257)) ^ (a68 + 761))))();
}

uint64_t sub_18CA22F08@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61)
{
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;

  v68 = (a61 + 761);
  v69 = v63
      + ((LODWORD(STACK[0x410]) - 1470639442) ^ 0xF8F0DF37EFBFDFEALL)
      + 0x70F20C810402016
      + ((v68 + 0x1DF7FB7C3) & (2 * (LODWORD(STACK[0x410]) - 1470639442)))
      + (v65 - 1909818258);
  v70 = (((_DWORD)v69 * v66) ^ ((v69 * v66) >> 16)) * v66;
  *(_BYTE *)(v69 - 0x1AD15CC5EA54C624) = *(_BYTE *)(v62 + (v70 >> 24)) ^ *(_BYTE *)(a1 + (v70 >> 24)) ^ *(_BYTE *)(v61 + (v70 >> 24)) ^ v70 ^ (-29 * (((((_DWORD)v69 * v66) ^ ((v69 * v66) >> 16)) * v66) >> 24));
  return (*(uint64_t (**)(uint64_t, unint64_t))(v67
                                                              + 8 * (int)((43 * (v65 - 1 != a61 - 4 + v64)) ^ v68)))(4294967267, 0xE52EA33A15AB39DCLL);
}

uint64_t sub_18CA22FF0()
{
  unint64_t v0;
  int v1;
  uint64_t v2;

  STACK[0x700] = v0;
  LODWORD(STACK[0x47C]) = STACK[0x72C];
  return (*(uint64_t (**)(void))(v2 + 8 * (((STACK[0x968] == 0) * (((v1 ^ 0xEF2) - 2817) ^ 0xC9)) ^ v1)))();
}

uint64_t sub_18CA23040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;

  v70 = (v68 - 84) | 0x302u;
  v71 = STACK[0x6C0];
  STACK[0x948] = (v70 ^ 0xFFFFFFFFFFFFFC67) + *(_QWORD *)(v69 + 8 * v68);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69
                                                                                          + 8
                                                                                          * (int)(((v71 != 0x47B5CC9A2E1B2553)
                                                                                                 * ((652 * (v70 ^ 0x391)) ^ 0x535)) ^ v70))
                                                                              - (((_DWORD)v70 - 883) | 0x96u)
                                                                              + 174))(a1, a2, a3, a4, a68);
}

uint64_t sub_18CA23088()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((431 * (*v0 == 0)) ^ (v1 + 1425)))
                            - ((v1 - 2114861917) & 0x7E0E3F47)
                            + 2295))();
}

uint64_t sub_18CA230FC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;

  v3 = ((v1 - 1396758788) & 0x5340D7B7)
     + *(_DWORD *)(v0 + 16)
     - ((2 * *(_DWORD *)(v0 + 16) + 320739878) & (((v1 - 121946474) & 0x744BD7E) + 367514894))
     - 192744849;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((7 * ((v3 ^ 0x71CA52EC) + ((2 * v3) & 0xF6737FFE ^ 0x14635A26) == 2067382271)) ^ v1)))();
}

uint64_t sub_18CA231B4@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W5>, int a4@<W6>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v14 = *(_QWORD *)(v9 + 24);
  LODWORD(STACK[0x410]) = a4;
  v15 = a2 + a1 - 2067383576;
  v16 = v15 + ((v10 - 927) | 0x100);
  v17 = v14 + v16;
  v18 = *(_BYTE *)(v14 + v16);
  v19 = v8
      + ((a3 + a4 + 1304) ^ 0x6EBDB5EF9B3FFF31)
      - 0x6EBDB5EF9B3FFF31
      + ((2 * (a3 + a4 + 1304)) & 0x1367FFE62)
      + v16;
  v20 = 1554976193 * ((1554976193 * v17) ^ ((1554976193 * v17) >> 16));
  v21 = (unint64_t)(1554976193 * ((1554976193 * (_DWORD)v19) ^ ((1554976193 * v19) >> 16))) >> 24;
  *(_BYTE *)(v19 - 0x1AD15CC5EA54C624) = *(_BYTE *)(v12 + (v20 >> 24)) ^ v18 ^ *(_BYTE *)(v7 + (v20 >> 24)) ^ *(_BYTE *)((v20 >> 24) + v11 + 6) ^ *(_BYTE *)(a5 + v21) ^ *(_BYTE *)(v6 + v21) ^ *(_BYTE *)(v5 + v21) ^ (-63 * ((-63 * v19) ^ ((1554976193 * v19) >> 16))) ^ v20 ^ (-103 * BYTE3(v20)) ^ (-29 * ((1554976193 * ((1554976193 * (_DWORD)v19) ^ ((1554976193 * v19) >> 16))) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((115 * (v15 == -1304)) ^ v10)) - 8))();
}

void sub_18CA232DC()
{
  JUMPOUT(0x18CA23210);
}

uint64_t sub_18CA232E8()
{
  return sub_18CA23088();
}

uint64_t sub_18CA232FC()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((v0 | 0x514) + 224996075) & 0xF296DBE6) - 3002)
                                     * ((v1 - 417853027) > 0xF)) ^ (v0 | 0x514))))();
}

uint64_t sub_18CA23358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(uint64_t))
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  *(_DWORD *)(v27 - 216) = 1314530549
                         * ((((2 * ((v27 - 224) ^ 0x6443D7E9)) | 0xDD6F3316) - ((v27 - 224) ^ 0x6443D7E9) - 1857526155) ^ 0xBBFDC8AC)
                         + 647167551
                         + v26;
  v28 = a23(v27 - 224);
  v29 = STACK[0x308];
  *(_BYTE *)(v25 + v23 - 417853035) = *(_QWORD *)(v27 - 224) ^ 0xB9;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v29
                                                      + 8
                                                      * (((v25 != v24 + 15) * (((v26 - 2230) | 0x804) ^ 0xCFE)) ^ v26))
                                          - 8))(v28);
}

uint64_t sub_18CA23414@<X0>(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v4 + v3 + v1 + 1293) = HIBYTE(a1) ^ 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((112 * (v3 != (v5 ^ 0xBD1u ^ (unint64_t)(v2 + 49)))) ^ v5))
                            - 12))();
}

uint64_t sub_18CA23458@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(v1 + 1294) = BYTE2(a1) ^ 0xDC;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8
                                             * ((1064 * (((v3 == v2 + 13) ^ (v4 - 15)) & 1)) ^ v4))
                            - 12))();
}

uint64_t sub_18CA23498@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v4 + v3 + v1 + 1295) = HIBYTE(a1) ^ 0xB2;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v5 - 2639) ^ 0x3ED) * (v3 != v2 + 12)) ^ (v5 - 1532))))();
}

uint64_t sub_18CA234D8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 + ((v1 - 1208) | 0x65u) + 1067) = BYTE4(a1) ^ 0x24;
  return (*(uint64_t (**)(void))(v5 + 8 * (v1 ^ (815 * (v4 != v3 + 11)))))();
}

uint64_t sub_18CA23518@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v7 = v1 + 1710;
  *(_BYTE *)(v5 + v4 + v2 + (v7 - 2817) + 1068) = (a1 >> (v7 + 66)) ^ 0xC6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v7 ^ (1918 * (v4 != v3 + 10)))) - 8))();
}

uint64_t sub_18CA23568@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 + ((v1 - 2540) | 0x25u) + 1069) = BYTE6(a1) ^ 0x86;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v1 ^ ((4 * (v4 != v3 + 9)) | ((v4 != v3 + 9) << 6))))
                            - ((v1 - 168) | 0x99u)
                            + 2713))();
}

uint64_t sub_18CA235BC@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + v4 + v2 + 1299) = (a1 >> ((v1 + 94) ^ 0xC3u)) ^ 0x21;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((49 * (((v1 + 2133517662) ^ 0x7F2AEFF3) + v4 == v3 + 16)) ^ v1))
                            - 4))();
}

uint64_t sub_18CA2362C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((2769 * ((((v1 - 763) ^ (a1 == v2)) & 1) == 0)) ^ v1)))();
}

void sub_18CA23658()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v1 + v2 + v3 + ((v0 + 419949732) & 0xE6F81574)) = 0;
  JUMPOUT(0x18CA23304);
}

uint64_t sub_18CA23680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((a5 ^ 0x42A) + 229) * (v6 == v5)) ^ (a5 - 998))) - 4))();
}

uint64_t sub_18CA236B0@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  int v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  int v68;
  int v69;
  unint64_t v70;

  v63 = (a2 - 1179380730) & 0x464BEFDF;
  v64 = STACK[0x700];
  v65 = STACK[0x700] - 0x1AD15CC5EA54C624;
  STACK[0x438] = v65;
  v66 = STACK[0x660];
  v67 = STACK[0x968];
  v68 = LODWORD(STACK[0x47C]) ^ a1;
  v69 = 142545853 * (((((v62 - 224) | 0x5E7A9BD2) ^ 0xFFFFFFFE) - (~(v62 - 224) | 0xA185642D)) ^ 0x8B7ACB42);
  *(_DWORD *)(v62 - 200) = v69 - 928515746;
  *(_DWORD *)(v62 - 216) = (a2 + 1234359350) ^ v69;
  *(_QWORD *)(v62 - 176) = v65;
  *(_QWORD *)(v62 - 192) = v67;
  *(_QWORD *)(v62 - 224) = v64;
  *(_DWORD *)(v62 - 184) = ((v63 ^ 0x396172FB) + 224793757 * v68) ^ v69;
  *(_QWORD *)(v62 - 208) = v66;
  nullsub_1(v62 - 224);
  v70 = STACK[0x308];
  LODWORD(STACK[0x568]) = 1556737651;
  STACK[0x450] = *(_QWORD *)(v70 + 8 * (v63 - 1168));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v70 + 8 * (((&STACK[0x6C0] == 0) * ((((((v63 - 1312399265) & 0x4E399BFF) - 367) | 0x510) - 886) ^ 0x177)) ^ (v63 - 1312399265) & 0x4E399BFF)))(-373, 1032, 2939, 0x47B5CC9A2E1B2553, a62, 3417, 2654288601, 0xB84A3365D1E4DAADLL);
}

uint64_t sub_18CA23F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((STACK[0x700] != 0x1AD15CC5EA54C624) * ((a5 - 313) ^ 0x3F1)) ^ (a5 + 366)))
                            - ((10 * (a5 ^ 0x5BFu)) ^ 0x682)))();
}

uint64_t sub_18CA23F80@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t (*a48)(uint64_t))
{
  int v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  int v52;

  v49 = (v48 + 1470589273) & 0xA85893FF;
  v50 = a48(a1 - 0x1AD15CC5EA54C624);
  v51 = STACK[0x308];
  v52 = STACK[0x568];
  STACK[0x858] -= 80;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v51
                                                      + 8
                                                      * (int)((((4 * (((v49 - 875) | 8) ^ 0x13A)) ^ 0xAC1)
                                                             * (v52 == 1556779682)) ^ v49))
                                          - 12))(v50);
}

#error "18CA2444C: call analysis failed (funcsize=138)"

uint64_t sub_18CA24450(uint64_t a1)
{
  int v1;
  int v2;
  int v3;

  LODWORD(STACK[0x2E0]) = (v1 - 739) | 0x208;
  v3 = v2 + ((v1 - 739) | 0x208);
  LODWORD(STACK[0x240]) = v3 + 807554648;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((3144 * (v3 != -807554648)) ^ (v1 - 187)))
                            - ((v1 - 468) | 0x408u)
                            + 1292))();
}

uint64_t sub_18CA244C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (LODWORD(STACK[0x2E0]) ^ (32
                                                                  * ((unint64_t)(v4 - a4 + 0x573CE51D4684D6E5) < 0x10))))
                            - 12))();
}

uint64_t sub_18CA24508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v24 = (v23 - 224208288);
  v25 = __ROR8__(a4 + v24, 8);
  v26 = ((2 * (v25 & 0xF8FFFFFFFFFFFFFFLL) - 0x6B340B20F3929E46) & 0xB6A8EE26C094640ELL)
      - (v25 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x29BA7182E680E2E5;
  v27 = __ROR8__(v26 ^ 0xD309C86D1212EBBALL, 8);
  v26 ^= 0x80261B1123A76D50;
  v28 = (((2 * (v27 + v26)) & 0xBBCBFFF0FCAB81ELL) - (v27 + v26) + v15) ^ v20;
  v29 = v28 ^ __ROR8__(v26, 61);
  v30 = __ROR8__(v28, 8);
  v31 = (v30 + v29 - (v10 & (2 * (v30 + v29))) + 0x226EA9D73A5EF8BBLL) ^ v22;
  v32 = v31 ^ __ROR8__(v29, 61);
  v33 = __ROR8__(v31, 8);
  v34 = __ROR8__(((v9 & (2 * (v33 + v32))) - (v33 + v32) + v18) ^ v14, 8);
  v35 = ((v9 & (2 * (v33 + v32))) - (v33 + v32) + v18) ^ v14 ^ __ROR8__(v32, 61);
  v36 = (a3 - ((a9 | ~(v34 + v35)) + ((v34 + v35) | v21))) ^ a7;
  v37 = v36 ^ __ROR8__(v35, 61);
  v38 = __ROR8__(v36, 8);
  v39 = __ROR8__((a2 - ((v38 + v37) | a2) + ((v38 + v37) | a8)) ^ a5, 8);
  v40 = (a2 - ((v38 + v37) | a2) + ((v38 + v37) | a8)) ^ a5 ^ __ROR8__(v37, 61);
  v41 = ((v16 & (2 * (v39 + v40))) - (v39 + v40) + v13) ^ a6;
  *(_BYTE *)(a4 + v24 + v19) = (((__ROR8__(v41, 8) + (v41 ^ __ROR8__(v40, 61))) ^ 0xB1D7AB5296A4827ALL) >> (8 * ((a4 + v23 + 96) & 7))) ^ (*(_BYTE *)(v12 + v24) - 83);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v23 != 224208288) * v17) ^ (v11 - 564))) - 4))();
}

uint64_t sub_18CA246BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int8x16_t a51,int8x16_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int64x2_t a57,int8x16_t a58,int64x2_t a59,int8x16_t a60,uint64_t a61,uint64_t a62,int8x16_t a63)
{
  int64x2_t a64;
  int v64;
  uint64_t v65;
  int v66;
  int64x2_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  uint64_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int8x16_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int8x16_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int8x16_t v89;
  int8x16_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int8x16_t v97;
  int8x16_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int8x16_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int8x16_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int8x16_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int8x16_t v119;
  int8x16_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int8x16_t v125;
  int8x16_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int8x16_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int8x16_t v136;
  uint64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int8x16_t v149;
  int64x2_t v150;
  int64x2_t v151;
  int8x16_t v152;
  int64x2_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int8x16_t v157;
  int8x16_t v158;
  int64x2_t v159;
  int64x2_t v160;
  int64x2_t v161;
  int64x2_t v162;
  int64x2_t v163;
  int64x2_t v164;
  int64x2_t v165;
  int64x2_t v166;
  int64x2_t v167;
  int64x2_t v168;
  int64x2_t v169;
  int8x16_t v170;
  int64x2_t v171;
  int64x2_t v172;
  int8x16_t v173;
  int64x2_t v174;
  int64x2_t v175;
  int64x2_t v176;
  int64x2_t v177;
  int8x16_t v178;
  int64x2_t v179;
  int64x2_t v180;
  int64x2_t v181;
  int64x2_t v182;
  int64x2_t v183;
  int64x2_t v184;
  int64x2_t v185;
  int8x16_t v186;
  int8x16_t v187;
  int8x16_t v188;
  int64x2_t v189;
  int64x2_t v190;
  int64x2_t v191;
  int64x2_t v192;
  int64x2_t v193;
  int64x2_t v194;
  int64x2_t v195;
  int64x2_t v196;
  int64x2_t v197;
  int64x2_t v198;
  int64x2_t v199;
  int8x16_t v200;
  int64x2_t v201;
  int64x2_t v202;
  int8x16_t v203;
  int64x2_t v204;
  int64x2_t v205;
  int64x2_t v206;
  int64x2_t v207;
  int8x16_t v208;
  int8x16_t v209;
  int64x2_t v210;
  int64x2_t v211;
  int64x2_t v212;
  int64x2_t v213;
  int64x2_t v214;
  int64x2_t v215;
  int64x2_t v216;
  int64x2_t v217;
  int64x2_t v218;
  int64x2_t v219;
  int64x2_t v220;
  int8x16_t v221;
  int64x2_t v222;
  int64x2_t v223;
  int8x16_t v224;
  int64x2_t v225;
  int64x2_t v226;
  int64x2_t v227;
  int64x2_t v228;
  int8x16_t v229;
  int8x16x4_t v231;

  v68 = v65 - 15;
  v69 = (v66 - 224208288);
  v70 = STACK[0x250];
  v71.i64[0] = STACK[0x250] + (v66 - 224208290);
  v71.i64[1] = STACK[0x250] + (v66 - 224208291);
  v72 = v71;
  v71.i64[0] = STACK[0x250] + (v66 - 224208292);
  v71.i64[1] = STACK[0x250] + (v66 - 224208293);
  v73.i64[0] = STACK[0x250] + (v66 - 224208294);
  v73.i64[1] = STACK[0x250] + (v66 - 224208295);
  v74 = STACK[0x250] + v69;
  v75.i64[0] = v74;
  v75.i64[1] = STACK[0x250] + (v66 - 224208289);
  v76.i64[0] = STACK[0x250] + (v66 - 224208298);
  v76.i64[1] = STACK[0x250] + (v66 - 224208299);
  v77.i64[0] = STACK[0x250] + (v66 - 224208300);
  v77.i64[1] = STACK[0x250] + (v66 - 224208301);
  v78.i64[0] = STACK[0x250] + (v66 - 224208302);
  v78.i64[1] = STACK[0x250] + (v66 - 224208303);
  *(int64x2_t *)&STACK[0x2D0] = v78;
  *(int64x2_t *)&STACK[0x2E0] = v76;
  *(int8x16_t *)&STACK[0x2B0] = vorrq_s8((int8x16_t)vshlq_n_s64(v78, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 8uLL));
  *(int64x2_t *)&STACK[0x2C0] = v77;
  *(int8x16_t *)&STACK[0x290] = vorrq_s8((int8x16_t)vshlq_n_s64(v76, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 8uLL));
  *(int8x16_t *)&STACK[0x2A0] = vorrq_s8((int8x16_t)vshlq_n_s64(v77, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 8uLL));
  v80 = *(int64x2_t *)&STACK[0x3C0];
  v79 = *(int8x16_t *)&STACK[0x3D0];
  v81 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL)), *(int8x16_t *)&STACK[0x3D0]);
  v82 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v73, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 8uLL)), *(int8x16_t *)&STACK[0x3D0]);
  *(int64x2_t *)&STACK[0x260] = v71;
  v83 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v71, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 8uLL)), v79);
  *(int64x2_t *)&STACK[0x280] = v72;
  v84 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v72, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 8uLL)), v79);
  v85 = *(int8x16_t *)&STACK[0x370];
  v86 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v81, v81), v80), *(int8x16_t *)&STACK[0x380]), v81);
  v87 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v82, v82), v80), *(int8x16_t *)&STACK[0x380]), v82);
  v88 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v83, v83), v80), *(int8x16_t *)&STACK[0x380]), v83);
  *(int64x2_t *)&STACK[0x270] = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v84, v84), v80), *(int8x16_t *)&STACK[0x380]), v84);
  v89 = (int8x16_t)vaddq_s64(v87, *(int64x2_t *)&STACK[0x410]);
  v90 = (int8x16_t)vaddq_s64(v86, *(int64x2_t *)&STACK[0x410]);
  v91 = (int64x2_t)veorq_s8(v90, v85);
  v92 = (int64x2_t)veorq_s8(v89, v85);
  v93 = (int64x2_t)veorq_s8(v89, *(int8x16_t *)&STACK[0x360]);
  v94 = (int64x2_t)veorq_s8(v90, *(int8x16_t *)&STACK[0x360]);
  v95 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v91, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 8uLL)), v94);
  v96 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v92, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v92, 8uLL)), v93);
  v97 = *(int8x16_t *)&STACK[0x200];
  v98 = *(int8x16_t *)&STACK[0x220];
  v99 = *(int64x2_t *)&STACK[0x230];
  v100 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v96, v96), *(int8x16_t *)&STACK[0x200]), v96), *(int64x2_t *)&STACK[0x230]), *(int8x16_t *)&STACK[0x220]);
  v101 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v95, v95), *(int8x16_t *)&STACK[0x200]), v95), *(int64x2_t *)&STACK[0x230]), *(int8x16_t *)&STACK[0x220]);
  v102 = vorrq_s8((int8x16_t)vshlq_n_s64(v93, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 0x3DuLL));
  v103 = (int64x2_t)veorq_s8((int8x16_t)v101, vorrq_s8((int8x16_t)vshlq_n_s64(v94, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 0x3DuLL)));
  v104 = (int64x2_t)veorq_s8((int8x16_t)v100, v102);
  v105 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v100, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 8uLL)), v104);
  v106 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v101, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 8uLL)), v103);
  v107 = *(int8x16_t *)&STACK[0x210];
  v108 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v106, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v106, v106), *(int8x16_t *)&STACK[0x210])), a64), a63);
  v109 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v105, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v105, v105), *(int8x16_t *)&STACK[0x210])), a64), a63);
  v110 = vorrq_s8((int8x16_t)vshlq_n_s64(v103, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 0x3DuLL));
  v111 = (int64x2_t)veorq_s8((int8x16_t)v109, vorrq_s8((int8x16_t)vshlq_n_s64(v104, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 0x3DuLL)));
  v112 = (int64x2_t)veorq_s8((int8x16_t)v108, v110);
  v113 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v108, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 8uLL)), v112);
  v114 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v109, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 8uLL)), v111);
  v115 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v114, v114), a60), v114), *(int64x2_t *)&STACK[0x350]), *(int8x16_t *)&STACK[0x400]);
  v116 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v113, v113), a60), v113), *(int64x2_t *)&STACK[0x350]), *(int8x16_t *)&STACK[0x400]);
  v117 = (int64x2_t)veorq_s8((int8x16_t)v116, vorrq_s8((int8x16_t)vshlq_n_s64(v112, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 0x3DuLL)));
  v118 = (int64x2_t)veorq_s8((int8x16_t)v115, vorrq_s8((int8x16_t)vshlq_n_s64(v111, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 0x3DuLL)));
  v119 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v115, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 8uLL)), v118);
  v120 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v116, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 8uLL)), v117);
  v121 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a59, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x3F0], v119), (int64x2_t)vorrq_s8(v119, *(int8x16_t *)&STACK[0x340]))), *(int8x16_t *)&STACK[0x320]);
  v122 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a59, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x3F0], v120), (int64x2_t)vorrq_s8(v120, *(int8x16_t *)&STACK[0x340]))), *(int8x16_t *)&STACK[0x320]);
  v123 = (int64x2_t)veorq_s8((int8x16_t)v122, vorrq_s8((int8x16_t)vshlq_n_s64(v117, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 0x3DuLL)));
  v124 = (int64x2_t)veorq_s8((int8x16_t)v121, vorrq_s8((int8x16_t)vshlq_n_s64(v118, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 0x3DuLL)));
  v125 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v121, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 8uLL)), v124);
  v126 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v122, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 8uLL)), v123);
  v127 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v125, *(int8x16_t *)&STACK[0x330]), (int64x2_t)vorrq_s8(v125, (int8x16_t)v67)), v67), a58);
  v128 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v126, *(int8x16_t *)&STACK[0x330]), (int64x2_t)vorrq_s8(v126, (int8x16_t)v67)), v67), a58);
  v129 = vorrq_s8((int8x16_t)vshlq_n_s64(v124, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 0x3DuLL));
  v130 = (int64x2_t)veorq_s8((int8x16_t)v128, vorrq_s8((int8x16_t)vshlq_n_s64(v123, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v123, 0x3DuLL)));
  v131 = (int64x2_t)veorq_s8((int8x16_t)v127, v129);
  v132 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v127, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 8uLL)), v131);
  v133 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v128, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 8uLL)), v130);
  v134 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v133, v133), *(int8x16_t *)&STACK[0x310]), v133), a57), a51);
  v135 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v132, v132), *(int8x16_t *)&STACK[0x310]), v132), a57), a51);
  v136 = (int8x16_t)vaddq_s64(v88, *(int64x2_t *)&STACK[0x410]);
  v137 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v135, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v135, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v135, vorrq_s8((int8x16_t)vshlq_n_s64(v131, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 0x3DuLL)))), a52);
  v231.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v134, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v134, vorrq_s8((int8x16_t)vshlq_n_s64(v130, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 0x3DuLL)))), a52), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v75, 3uLL), *(int8x16_t *)&STACK[0x3E0])));
  v231.val[3] = (int8x16_t)vshlq_u64(v137, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v73, 3uLL), *(int8x16_t *)&STACK[0x3E0])));
  v138 = (int64x2_t)veorq_s8(v136, v85);
  v139 = (int64x2_t)veorq_s8(v136, *(int8x16_t *)&STACK[0x360]);
  v140 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v138, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 8uLL)), v139);
  v141 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v140, v140), *(int8x16_t *)&STACK[0x200]), v140), *(int64x2_t *)&STACK[0x230]), *(int8x16_t *)&STACK[0x220]);
  v142 = (int64x2_t)veorq_s8((int8x16_t)v141, vorrq_s8((int8x16_t)vshlq_n_s64(v139, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 0x3DuLL)));
  v143 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), v142);
  v144 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v143, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v143, v143), *(int8x16_t *)&STACK[0x210])), a64), a63);
  v145 = (int64x2_t)veorq_s8((int8x16_t)v144, vorrq_s8((int8x16_t)vshlq_n_s64(v142, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 0x3DuLL)));
  v146 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v144, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 8uLL)), v145);
  v147 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v146, v146), a60), v146), *(int64x2_t *)&STACK[0x350]), *(int8x16_t *)&STACK[0x400]);
  v148 = (int64x2_t)veorq_s8((int8x16_t)v147, vorrq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 0x3DuLL)));
  v149 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v147, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 8uLL)), v148);
  v150 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a59, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x3F0], v149), (int64x2_t)vorrq_s8(v149, *(int8x16_t *)&STACK[0x340]))), *(int8x16_t *)&STACK[0x320]);
  v151 = (int64x2_t)veorq_s8((int8x16_t)v150, vorrq_s8((int8x16_t)vshlq_n_s64(v148, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 0x3DuLL)));
  v152 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v150, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 8uLL)), v151);
  v153 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v152, *(int8x16_t *)&STACK[0x330]), (int64x2_t)vorrq_s8(v152, (int8x16_t)v67)), v67), a58);
  v154 = (int64x2_t)veorq_s8((int8x16_t)v153, vorrq_s8((int8x16_t)vshlq_n_s64(v151, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 0x3DuLL)));
  v155 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v153, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v153, 8uLL)), v154);
  v156 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v155, v155), *(int8x16_t *)&STACK[0x310]), v155), a57), a51);
  v157 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v156, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v156, vorrq_s8((int8x16_t)vshlq_n_s64(v154, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 0x3DuLL))));
  v158 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x270], *(int64x2_t *)&STACK[0x410]);
  v231.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v157, a52), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x260], 3uLL), *(int8x16_t *)&STACK[0x3E0])));
  v159 = (int64x2_t)veorq_s8(v158, v85);
  v160 = (int64x2_t)veorq_s8(v158, *(int8x16_t *)&STACK[0x360]);
  v161 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v159, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v159, 8uLL)), v160);
  v162 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v161, v161), *(int8x16_t *)&STACK[0x200]), v161), *(int64x2_t *)&STACK[0x230]), *(int8x16_t *)&STACK[0x220]);
  v163 = (int64x2_t)veorq_s8((int8x16_t)v162, vorrq_s8((int8x16_t)vshlq_n_s64(v160, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v160, 0x3DuLL)));
  v164 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v162, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162, 8uLL)), v163);
  v165 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v164, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v164, v164), *(int8x16_t *)&STACK[0x210])), a64), a63);
  v166 = (int64x2_t)veorq_s8((int8x16_t)v165, vorrq_s8((int8x16_t)vshlq_n_s64(v163, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v163, 0x3DuLL)));
  v167 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v165, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v165, 8uLL)), v166);
  v168 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v167, v167), a60), v167), *(int64x2_t *)&STACK[0x350]), *(int8x16_t *)&STACK[0x400]);
  v169 = (int64x2_t)veorq_s8((int8x16_t)v168, vorrq_s8((int8x16_t)vshlq_n_s64(v166, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 0x3DuLL)));
  v170 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v168, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v168, 8uLL)), v169);
  v171 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a59, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x3F0], v170), (int64x2_t)vorrq_s8(v170, *(int8x16_t *)&STACK[0x340]))), *(int8x16_t *)&STACK[0x320]);
  v172 = (int64x2_t)veorq_s8((int8x16_t)v171, vorrq_s8((int8x16_t)vshlq_n_s64(v169, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v169, 0x3DuLL)));
  v173 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v171, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v171, 8uLL)), v172);
  v174 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v173, *(int8x16_t *)&STACK[0x330]), (int64x2_t)vorrq_s8(v173, (int8x16_t)v67)), v67), a58);
  v175 = (int64x2_t)veorq_s8((int8x16_t)v174, vorrq_s8((int8x16_t)vshlq_n_s64(v172, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v172, 0x3DuLL)));
  v176 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v174, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v174, 8uLL)), v175);
  v177 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v176, v176), *(int8x16_t *)&STACK[0x310]), v176), a57), a51);
  v178 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v177, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v177, vorrq_s8((int8x16_t)vshlq_n_s64(v175, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v175, 0x3DuLL))));
  v177.i64[0] = v70 + (v66 - 224208296);
  v177.i64[1] = v70 + (v66 - 224208297);
  v179 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x2B0], *(int8x16_t *)&STACK[0x3D0]);
  v180 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x2A0], *(int8x16_t *)&STACK[0x3D0]);
  v181 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x290], *(int8x16_t *)&STACK[0x3D0]);
  v231.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v178, a52), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x280], 3uLL), *(int8x16_t *)&STACK[0x3E0])));
  v182 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v177, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177, 8uLL)), *(int8x16_t *)&STACK[0x3D0]);
  v183 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v179, v179), *(int64x2_t *)&STACK[0x3C0]), *(int8x16_t *)&STACK[0x380]), v179);
  v184 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v180, v180), *(int64x2_t *)&STACK[0x3C0]), *(int8x16_t *)&STACK[0x380]), v180);
  v185 = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v182, v182), *(int64x2_t *)&STACK[0x3C0]), *(int8x16_t *)&STACK[0x380]), v182);
  *(int64x2_t *)&STACK[0x290] = vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v181, v181), *(int64x2_t *)&STACK[0x3C0]), *(int8x16_t *)&STACK[0x380]), v181);
  *(int64x2_t *)&STACK[0x2A0] = v185;
  v186 = (int8x16_t)vaddq_s64(v184, *(int64x2_t *)&STACK[0x410]);
  v187 = (int8x16_t)vaddq_s64(v183, *(int64x2_t *)&STACK[0x410]);
  *(int8x16_t *)&STACK[0x2B0] = vqtbl4q_s8(v231, *(int8x16_t *)&STACK[0x2F0]);
  v231.val[0] = veorq_s8(v187, v85);
  v231.val[1] = veorq_s8(v186, v85);
  v231.val[2] = veorq_s8(v186, *(int8x16_t *)&STACK[0x360]);
  v231.val[3] = veorq_s8(v187, *(int8x16_t *)&STACK[0x360]);
  v231.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[0], 8uLL)), (int64x2_t)v231.val[3]);
  v231.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[1], 8uLL)), (int64x2_t)v231.val[2]);
  v231.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v231.val[1], (int64x2_t)v231.val[1]), v97), (int64x2_t)v231.val[1]), v99), v98);
  v231.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v231.val[0], (int64x2_t)v231.val[0]), v97), (int64x2_t)v231.val[0]), v99), v98);
  v231.val[3] = veorq_s8(v231.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[3], 0x3DuLL)));
  v231.val[2] = veorq_s8(v231.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[2], 0x3DuLL)));
  v231.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[1], 8uLL)), (int64x2_t)v231.val[2]);
  v231.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[0], 8uLL)), (int64x2_t)v231.val[3]);
  v231.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v231.val[0], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v231.val[0], (int64x2_t)v231.val[0]), v107)), a64), a63);
  v231.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v231.val[1], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v231.val[1], (int64x2_t)v231.val[1]), v107)), a64), a63);
  v231.val[2] = veorq_s8(v231.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[2], 0x3DuLL)));
  v231.val[3] = veorq_s8(v231.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[3], 0x3DuLL)));
  v231.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[0], 8uLL)), (int64x2_t)v231.val[3]);
  v231.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[1], 8uLL)), (int64x2_t)v231.val[2]);
  v231.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v231.val[1], (int64x2_t)v231.val[1]), a60), (int64x2_t)v231.val[1]), *(int64x2_t *)&STACK[0x350]), *(int8x16_t *)&STACK[0x400]);
  v231.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v231.val[0], (int64x2_t)v231.val[0]), a60), (int64x2_t)v231.val[0]), *(int64x2_t *)&STACK[0x350]), *(int8x16_t *)&STACK[0x400]);
  v231.val[3] = veorq_s8(v231.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[3], 0x3DuLL)));
  v231.val[2] = veorq_s8(v231.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[2], 0x3DuLL)));
  v231.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[1], 8uLL)), (int64x2_t)v231.val[2]);
  v231.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[0], 8uLL)), (int64x2_t)v231.val[3]);
  v231.val[1] = veorq_s8((int8x16_t)vsubq_s64(a59, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x3F0], v231.val[1]), (int64x2_t)vorrq_s8(v231.val[1], *(int8x16_t *)&STACK[0x340]))), *(int8x16_t *)&STACK[0x320]);
  v231.val[0] = veorq_s8((int8x16_t)vsubq_s64(a59, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x3F0], v231.val[0]), (int64x2_t)vorrq_s8(v231.val[0], *(int8x16_t *)&STACK[0x340]))), *(int8x16_t *)&STACK[0x320]);
  v231.val[3] = veorq_s8(v231.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[3], 0x3DuLL)));
  v231.val[2] = veorq_s8(v231.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[2], 0x3DuLL)));
  v231.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[1], 8uLL)), (int64x2_t)v231.val[2]);
  v231.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[0], 8uLL)), (int64x2_t)v231.val[3]);
  v231.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v231.val[1], *(int8x16_t *)&STACK[0x330]), (int64x2_t)vorrq_s8(v231.val[1], (int8x16_t)v67)), v67), a58);
  v231.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v231.val[0], *(int8x16_t *)&STACK[0x330]), (int64x2_t)vorrq_s8(v231.val[0], (int8x16_t)v67)), v67), a58);
  v231.val[3] = veorq_s8(v231.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[3], 0x3DuLL)));
  v231.val[2] = veorq_s8(v231.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[2], 0x3DuLL)));
  v231.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[1], 8uLL)), (int64x2_t)v231.val[2]);
  v231.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[0], 8uLL)), (int64x2_t)v231.val[3]);
  v231.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v231.val[0], (int64x2_t)v231.val[0]), *(int8x16_t *)&STACK[0x310]), (int64x2_t)v231.val[0]), a57), a51);
  v231.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v231.val[1], (int64x2_t)v231.val[1]), *(int8x16_t *)&STACK[0x310]), (int64x2_t)v231.val[1]), a57), a51);
  v188 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x290], *(int64x2_t *)&STACK[0x410]);
  v231.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[0], 8uLL)), (int64x2_t)veorq_s8(v231.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[3], 0x3DuLL)))), a52),
                             (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2D0], 3uLL), *(int8x16_t *)&STACK[0x3E0])));
  v231.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[1], 8uLL)), (int64x2_t)veorq_s8(v231.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v231.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231.val[2], 0x3DuLL)))), a52),
                             (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2C0], 3uLL), *(int8x16_t *)&STACK[0x3E0])));
  v189 = (int64x2_t)veorq_s8(v188, *(int8x16_t *)&STACK[0x370]);
  v190 = (int64x2_t)veorq_s8(v188, *(int8x16_t *)&STACK[0x360]);
  v191 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v189, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v189, 8uLL)), v190);
  v192 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v191, v191), v97), v191), v99), v98);
  v193 = (int64x2_t)veorq_s8((int8x16_t)v192, vorrq_s8((int8x16_t)vshlq_n_s64(v190, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v190, 0x3DuLL)));
  v194 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v192, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v192, 8uLL)), v193);
  v195 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v194, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v194, v194), v107)), a64), a63);
  v196 = (int64x2_t)veorq_s8((int8x16_t)v195, vorrq_s8((int8x16_t)vshlq_n_s64(v193, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v193, 0x3DuLL)));
  v197 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v195, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v195, 8uLL)), v196);
  v198 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v197, v197), a60), v197), *(int64x2_t *)&STACK[0x350]), *(int8x16_t *)&STACK[0x400]);
  v199 = (int64x2_t)veorq_s8((int8x16_t)v198, vorrq_s8((int8x16_t)vshlq_n_s64(v196, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v196, 0x3DuLL)));
  v200 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v198, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198, 8uLL)), v199);
  v201 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a59, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x3F0], v200), (int64x2_t)vorrq_s8(v200, *(int8x16_t *)&STACK[0x340]))), *(int8x16_t *)&STACK[0x320]);
  v202 = (int64x2_t)veorq_s8((int8x16_t)v201, vorrq_s8((int8x16_t)vshlq_n_s64(v199, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v199, 0x3DuLL)));
  v203 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v201, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201, 8uLL)), v202);
  v204 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v203, *(int8x16_t *)&STACK[0x330]), (int64x2_t)vorrq_s8(v203, (int8x16_t)v67)), v67), a58);
  v205 = (int64x2_t)veorq_s8((int8x16_t)v204, vorrq_s8((int8x16_t)vshlq_n_s64(v202, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v202, 0x3DuLL)));
  v206 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v204, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v204, 8uLL)), v205);
  v207 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v206, v206), *(int8x16_t *)&STACK[0x310]), v206), a57), a51);
  v208 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v207, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v207, vorrq_s8((int8x16_t)vshlq_n_s64(v205, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v205, 0x3DuLL))));
  v209 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x2A0], *(int64x2_t *)&STACK[0x410]);
  v231.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v208, a52), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2E0], 3uLL), *(int8x16_t *)&STACK[0x3E0])));
  v210 = (int64x2_t)veorq_s8(v209, *(int8x16_t *)&STACK[0x370]);
  v211 = (int64x2_t)veorq_s8(v209, *(int8x16_t *)&STACK[0x360]);
  v212 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v210, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v210, 8uLL)), v211);
  v213 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v212, v212), v97), v212), v99), v98);
  v214 = (int64x2_t)veorq_s8((int8x16_t)v213, vorrq_s8((int8x16_t)vshlq_n_s64(v211, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v211, 0x3DuLL)));
  v215 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v213, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v213, 8uLL)), v214);
  v216 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v215, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v215, v215), v107)), a64), a63);
  v217 = (int64x2_t)veorq_s8((int8x16_t)v216, vorrq_s8((int8x16_t)vshlq_n_s64(v214, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v214, 0x3DuLL)));
  v218 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v216, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v216, 8uLL)), v217);
  v219 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v218, v218), a60), v218), *(int64x2_t *)&STACK[0x350]), *(int8x16_t *)&STACK[0x400]);
  v220 = (int64x2_t)veorq_s8((int8x16_t)v219, vorrq_s8((int8x16_t)vshlq_n_s64(v217, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v217, 0x3DuLL)));
  v221 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v219, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v219, 8uLL)), v220);
  v222 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(a59, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x3F0], v221), (int64x2_t)vorrq_s8(v221, *(int8x16_t *)&STACK[0x340]))), *(int8x16_t *)&STACK[0x320]);
  v223 = (int64x2_t)veorq_s8((int8x16_t)v222, vorrq_s8((int8x16_t)vshlq_n_s64(v220, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v220, 0x3DuLL)));
  v224 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v222, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v222, 8uLL)), v223);
  v225 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v224, *(int8x16_t *)&STACK[0x330]), (int64x2_t)vorrq_s8(v224, (int8x16_t)v67)), v67), a58);
  v226 = (int64x2_t)veorq_s8((int8x16_t)v225, vorrq_s8((int8x16_t)vshlq_n_s64(v223, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v223, 0x3DuLL)));
  v227 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v225, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v225, 8uLL)), v226);
  v228 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v227, v227), *(int8x16_t *)&STACK[0x310]), v227), a57), a51);
  v231.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v228, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v228, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v228, vorrq_s8((int8x16_t)vshlq_n_s64(v226, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v226, 0x3DuLL)))), a52), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v177, 3uLL), *(int8x16_t *)&STACK[0x3E0])));
  v177.i64[0] = vqtbl4q_s8(v231, *(int8x16_t *)&STACK[0x2F0]).u64[0];
  v231.val[1] = *(int8x16_t *)&STACK[0x2B0];
  v231.val[1].i64[1] = v177.i64[0];
  v231.val[0].i64[0] = 0xADADADADADADADADLL;
  v231.val[0].i64[1] = 0xADADADADADADADADLL;
  v229 = vaddq_s8(*(int8x16_t *)(v68 + v69), v231.val[0]);
  v231.val[0] = vrev64q_s8(v231.val[1]);
  *(int8x16_t *)(v74 - 0x61123CB0DDF7F16ALL) = veorq_s8(vextq_s8(v231.val[0], v231.val[0], 8uLL), v229);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * ((2710 * (LODWORD(STACK[0x240]) != 16)) ^ (v64 - 564)))
                            - 4))();
}

uint64_t sub_18CA25580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t (*a47)(void))
{
  return a47();
}

void sub_18CA25598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,unint64_t a45)
{
  STACK[0x250] = a45;
  JUMPOUT(0x18CA243C4);
}

uint64_t sub_18CA25620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;

  v7 = STACK[0x548];
  STACK[0x858] += (a5 + 1901) ^ 0xFFFFFFFFFFFFF305;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((4045 * (v7 == v5)) ^ a5)) - 4))();
}

uint64_t sub_18CA25660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  int v21;
  BOOL v22;

  v22 = a21(16) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308]
                                        + 8 * ((4024 * (((v21 + 109) ^ v22) & 1)) ^ v21))
                            - (v21 - 1135)
                            + 165))();
}

uint64_t sub_18CA256B4(_QWORD *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = (v1 - 35);
  *a1 = 0;
  a1[1] = 0;
  STACK[0x6A0] = (unint64_t)a1 + 0x47B5CC9A2E1B2553;
  STACK[0x898] = *(_QWORD *)(v2 + 8 * v1) + (v3 ^ 0xFFFFFFFFFFFFFF72);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((4047
                                               * (((v3 ^ ((_QWORD *)((char *)a1 + 0x47B5CC9A2E1B2553) == (_QWORD *)0x47B5CC9A2E1B2553)) & 1) == 0)) ^ v3))
                            - 8))();
}

uint64_t sub_18CA256FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((763 * (v5 == (a5 ^ 0x5CE) + 1556779468)) ^ a5)) - 4))();
}

uint64_t sub_18CA25738@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x6A0];
  STACK[0x948] = *(_QWORD *)(v1 + 8 * a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((v2 != 0x47B5CC9A2E1B2553) * ((652 * (a1 ^ 0xD4)) ^ 0x535)) ^ a1 ^ 0x345))
                            - (((a1 ^ 0x345) - 883) | 0x96)
                            + 174))();
}

uint64_t sub_18CA25760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (a5 ^ (3879 * (v6 == v5)))) - (a5 + 1901) + 3201))();
}

uint64_t sub_18CA25788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;

  v70 = (52 * (a5 ^ 0x51C)) ^ 0xC55;
  *(_QWORD *)(v69 - 224) = &STACK[0xCDF];
  *(_DWORD *)(v69 - 216) = (a5 + 1655391072) ^ (375636451 * ((v69 - 224) ^ 0x533E5A8C));
  v71 = sub_18CA82D64(v69 - 224);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x308]
                                                      + 8 * (((*(_DWORD *)(v69 - 212) == v68) * (v70 - 626)) ^ a68))
                                          - 4))(v71);
}

uint64_t sub_18CA25814()
{
  int v0;
  unint64_t v1;
  unint64_t v2;

  v1 = STACK[0x6A0];
  ((void (*)(unint64_t *, uint64_t))off_1E2538470[v0 ^ 0x28])(&STACK[0xCDF], 4096);
  v2 = STACK[0x308];
  STACK[0x948] = *(_QWORD *)(STACK[0x308] + 8 * v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v1 != 0x47B5CC9A2E1B2553) * ((652 * (v0 ^ 0xD2)) ^ 0x535)) ^ v0 ^ 0x343))
                            - (((v0 ^ 0x343) - 883) | 0x96u)
                            + 174))();
}

uint64_t sub_18CA25890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((4013 * (v5 == 5 * (a5 ^ 0x799) + 1556776477)) ^ a5)) - 4))();
}

void sub_18CA258C8()
{
  JUMPOUT(0x18CA258D8);
}

uint64_t sub_18CA25934()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((29 * (*(_QWORD *)(v0 - 0x47B5CC9A2E1B2553) != 0)) ^ v1))
                            - (v1 ^ 0x61Bu)
                            + 3661))();
}

uint64_t sub_18CA2599C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((2540
                                          * (16 - (v0 & 0xFu) + (unint64_t)(v0 - 1726597946) < ((229 * (v1 ^ 0x24Cu) + 846) ^ 0xFFFFFAEEuLL))) ^ v1))
                            - 8))();
}

uint64_t sub_18CA25A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(_QWORD))
{
  int v21;
  int v22;
  int v23;
  _BOOL4 v24;

  v24 = a21((262432769
           - v22
           + v21
           - ((((v23 - 178) | 0x400) + 795 + 2 * (262432769 - v22 + v21) + 316903819) & 0x3C6A75B2)
           + 665257912) ^ a7) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * ((900 * v24) ^ v23)) - 8))();
}

uint64_t sub_18CA25A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  _QWORD *v18;
  int v19;
  uint64_t v20;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * (int)(((*v18 == 0) * (((v19 + 1436740416) & 0xAA5D0FFD) - 870)) ^ v19)) - (((v19 + 77) | 0x603u) ^ 0xE8FLL)))(a1, a2, a3, a4, a5, a6, a7, a18);
}

uint64_t sub_18CA25AF4(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = (v1 - 1561831946);
  *(_DWORD *)(a1 + ((2 * v6) & 0x1FF7B5712) + ((((v2 - 811) | 0x208u) - 0xE201C1004256C5) ^ v6) + 0xE201C100425477) = 0;
  *(_WORD *)(a1
           + ((2 * (v6 + 4)) & 0x1DEDFFFF2)
           + ((v6 + 4) ^ 0xFFFDEFE7EF6FFFF9)
           + 0x2101810900007) = -9392;
  v7 = a1
     + ((2 * (v6 + 6)) & 0x1FEFFF4FALL)
     + ((v6 + 6) ^ 0x7D4DFB62FF7FFA7DLL)
     - 0x7D4DFB62FF7FFA7DLL;
  *(_WORD *)v7 = 0;
  *(_BYTE *)(v7 + 2) = 0;
  *(_BYTE *)(v7 + 3) = (-21 - v3 - ((2 * v4 + 30) & 0xB6)) ^ 0xDB;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (v2 ^ (8
                                               * (((16 - v3) ^ 0x3FDDFEBBDDDF79E3)
                                                + 2 * ((16 - v3) & 3)
                                                - 0x3FDDFEBBC431F3D9 != 430802442))))
                            - 4))();
}

uint64_t sub_18CA25C70(uint64_t a1)
{
  _QWORD *v1;
  _DWORD *v2;
  uint64_t (*v3)(void);
  int v4;

  *v1 = a1;
  *v2 = v4;
  return v3();
}

uint64_t sub_18CA25C88@<X0>(int a1@<W4>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ (3092 * a2))) - (a1 + 1901) + 3201))();
}

uint64_t sub_18CA25CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  int v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  int v72;
  uint64_t v73;

  v70 = STACK[0x8A0];
  v71 = STACK[0x8CC];
  v72 = 1761959447 * (((((v69 - 224) | 0xBF9F8AC2) ^ 0xFFFFFFFE) - (~(v69 - 224) | 0x4060753D)) ^ 0xE1C7B4F9);
  *(_DWORD *)(v69 - 204) = v72 + a5 - 474;
  *(_DWORD *)(v69 - 224) = ((((a5 - 1304) | 0x2C) - 1604395790) ^ v71)
                         - v72
                         + ((2 * v71) & 0x7CD7CF8E ^ 0x3C424582)
                         - 538968131;
  *(_QWORD *)(v69 - 216) = v70;
  v73 = ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[a5 ^ 0x555] - 12))((unint64_t **)(v69 - 224));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x308]
                                                      + 8 * ((2476 * (*(_DWORD *)(v69 - 208) == v68)) ^ a68))
                                          - 4))(v73);
}

void sub_18CA25DAC()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0x8B8] = *(_QWORD *)(v1 + 8 * v0);
  JUMPOUT(0x18CA25DC0);
}

uint64_t sub_18CA25E70(_QWORD *a1)
{
  int v1;
  int v2;
  uint64_t v3;

  *a1 = 0;
  a1[1] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((163 * ((unint64_t)(v1 ^ 0x9E353AD9) + 2478963888u > 0x93C1FCB0)) ^ (v2 + 1276)))
                            - ((652 * ((v2 + 1276) ^ 0xD2Bu)) ^ 0x514)))();
}

uint64_t sub_18CA25E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x8B8])(a1, a2, a3, a4, a68, a6, 2654288601);
}

uint64_t sub_18CA25EB0()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((29 * (*v0 != 0)) ^ v1)) - ((v1 ^ 0xA00u) + 3079) + 3661))();
}

uint64_t sub_18CA25EF4()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v4 = -1068273565 - *(_DWORD *)(v1 + 16);
  v5 = ((v0 + 1123594813) < 0xA9E27D77) ^ (v4 < ((1063 * ((v2 - 1503217817) & 0x59993F5B ^ 0x51A)) ^ 0xA9E27539));
  v6 = v0 + 1123594813 > v4;
  if (v5)
    v7 = (v0 + 1123594813) < 0xA9E27D77;
  else
    v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((238 * v7) ^ v2)) - 4))();
}

uint64_t sub_18CA25F94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = v3 < v4;
  *(_BYTE *)(v1 + a1) = 0;
  if (v6 == (unint64_t)(a1 + 1) > 0xFFFFFFFFE65279F5)
    v6 = ((v2 + 2087213821) & 0x8397A3DF ^ (v4 - 453)) + a1 < v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v2 ^ (8 * v6))) - 4))();
}

uint64_t sub_18CA25FFC@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((*a1 == 0) * (v1 ^ 0xB9B ^ (v1 - 423) ^ 0xDF9)) ^ (v1 + 795)))
                            - 12))();
}

uint64_t sub_18CA26048@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;

  v3 = *(_DWORD *)(a1 + 16)
     - (((*(_DWORD *)(a1 + 16) << ((-93 * (v1 ^ 0x8B)) ^ 0x19)) + 1394481702) & 0x5847720C)
     + 364037657;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((315
                                          * ((v3 ^ 0xD3CCEE81) + ((v1 - 3210) ^ 0x584623F5 ^ (2 * v3) & 0xFFDEAF0E) != -1091705)) ^ v1))
                            - 12))();
}

uint64_t sub_18CA260E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  char *v12;
  char v13;
  unint64_t v14;

  v10 = (v4 - 329) | 0x140u;
  v11 = v6 + v5 + 1091704;
  v12 = (char *)(*(_QWORD *)(a3 + 24) + v11);
  v13 = *v12;
  v14 = 1554976193 * ((1554976193 * (_DWORD)v12) ^ ((1554976193 * (_DWORD)v12) >> 16));
  *(_BYTE *)(a1
           + ((2 * (v3 - 1561831946)) & 0xBFBBB75A)
           + ((v3 - 1561831946) ^ 0xEE7EFDCF5FDDDBADLL)
           + (v10 ^ 0x11810230A02225A3)
           + v11) = *(_BYTE *)(v7 + (v14 >> 24)) ^ v13 ^ *(_BYTE *)(a2 + (v14 >> 24)) ^ *(_BYTE *)((v14 >> 24) + v8 + 6) ^ v14 ^ (BYTE3(v14) * (v10 - 87));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (int)(((v11 != 0) | (8 * (v11 != 0))) ^ v10)) - 8))();
}

void sub_18CA261C8()
{
  JUMPOUT(0x18CA2614CLL);
}

uint64_t sub_18CA261D0@<X0>(_QWORD *a1@<X8>)
{
  return sub_18CA25FFC(a1);
}

uint64_t sub_18CA261E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8 * ((2263 * (v5 == a5 + 1556778378 + ((a5 + 841) | 0x400) - 3169)) ^ a5))
                            - 4))();
}

uint64_t sub_18CA26228()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((31 * (STACK[0x6B8] != 0x47B5CC9A2E1B2553)) ^ v0))
                            - ((((v0 - 1605) | 0x840u) - 2380) ^ (2 * v0) ^ 0x1DDAu)))();
}

uint64_t sub_18CA26280@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x578] = 0;
  STACK[0x650] = 0x7CD859205AB9B7CALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((((a1 == v2) ^ v1 ^ 0xD) & 1)
                                               * (((v1 + 146465091) & 0xF7451578) - 819)) ^ v1))
                            - 4))();
}

uint64_t sub_18CA262E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  STACK[0x800] = *(_QWORD *)(v2 + 8 * v1);
  LODWORD(STACK[0xB54]) = 522100788;
  STACK[0xB58] = (unint64_t)&STACK[0x578];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((a1 != 0x47B5CC9A2E1B2553)
                                               * (((v1 ^ 0xA56) + 1936114456) & 0x8C9937F8 ^ 0x50C)) ^ v1 ^ 0xA56))
                            - 12))();
}

uint64_t sub_18CA26308()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((5 * (v0 ^ 0x799)) ^ 0x5CE) * (v1 == 1556737659)) ^ v0)) - 4))();
}

uint64_t sub_18CA26350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7 + 8 * (((a5 + 2380) * (v6 == v5)) ^ (a5 - 688))))();
}

uint64_t sub_18CA26374()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x578] + 24);
  STACK[0x718] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 != 0) * ((v0 + 688) ^ 0xF84)) ^ v0)))();
}

uint64_t sub_18CA263B0()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = ((v0 + 664) | 0x18) + (((v0 - 592) | 4) ^ 0xE98F07E7) + v1;
  STACK[0x9F8] = v3;
  v4 = STACK[0x650];
  STACK[0xA00] = STACK[0x650];
  return (*(uint64_t (**)(void))(v2 + 8 * ((3682 * (0x7CD859205AB9B7CALL - v4 + v3 > 9)) ^ v0)))();
}

uint64_t sub_18CA26428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v2 = (uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * v0) - 12);
  v4 = STACK[0xA50];
  STACK[0x3F0] = STACK[0xA50];
  v5 = STACK[0xA80] - 0x63443EC20C671196;
  STACK[0x3E0] = ((v5 + (v0 ^ 0xA70) - 1364) ^ 0xDFEFFFFEFF65F74ALL)
               + 0x74DD5F3F83BF7DF8
               + ((2 * (v5 + (v0 ^ 0xA70) - 1364)) & 0xBFDFFFFDFECBEE94);
  v6 = STACK[0xAA0] - 0x531893D51D197423;
  STACK[0x3D0] = (v6 ^ 0xFFEFFF7ED3B77F7ALL) + 0x54DD5FBFAF6DF5C8 + ((2 * v6) & 0xFFDFFEFDA76EFEF4);
  STACK[0x3C0] = ((v4 - 0x792578D6C49E2120) ^ 0x77CD5FBE8F7FFF6ELL)
               - 0x230000800C5A8A2CLL
               + ((2 * (v4 - 0x792578D6C49E2120)) & 0xEF9ABF7D1EFFFEDCLL);
  v7 = STACK[0xAC0] - 0x3E2D33369CB8839ALL;
  STACK[0x380] = (v7 ^ 0x54DFFFFEE3A57F7ALL) - 0x12A0C060800A38 + ((2 * v7) & 0xA9BFFFFDC74AFEF4);
  v8 = STACK[0xAE0] - 0x2A46190CE1F9AC95;
  STACK[0x370] = (v8 ^ 0x57CF5F3FCBF577D7) - 0x302000148D00295 + ((2 * v8) & 0xAF9EBE7F97EAEFAELL);
  v9 = STACK[0xB00];
  STACK[0x360] = STACK[0xB00];
  STACK[0x350] = ((v9 - 0x293EA326A189FEC4) ^ 0xD4FF5F3EA7EDFF4BLL)
               + 0x7FCDFFFFDB3775F7
               + ((2 * (v9 - 0x293EA326A189FEC4)) & 0xA9FEBE7D4FDBFE96);
  v10 = STACK[0xB10];
  STACK[0x340] = STACK[0xB10];
  STACK[0x330] = ((v10 - 0x100110462E4FAB50) ^ 0x75DF5F3ECFFFF57FLL)
               - 0x211200004CDA803DLL
               + ((2 * (v10 - 0x100110462E4FAB50)) & 0xEBBEBE7D9FFFEAFELL);
  v11 = STACK[0xA40] - 0x6B283AC1159CBF62;
  STACK[0x320] = (v11 ^ 0xF4CFFF7EDBBFFF46) + 0x5FFD5FBFA76575FCLL + ((2 * v11) & 0xE99FFEFDB77FFE8CLL);
  v12 = STACK[0xA30] - 0x65074BFF75FD537DLL;
  STACK[0x310] = (v12 ^ 0x5FED7F3FD77F7FDELL) - 0xB202001545A0A9CLL + ((2 * v12) & 0xBFDAFE7FAEFEFFBCLL);
  v13 = STACK[0xA20] - 0x713862EF8CBC724ALL;
  STACK[0x2F0] = (v13 ^ 0xDEEDFFBF8F357F46) + 0x75DF5F7EF3EFF5FCLL + ((2 * v13) & 0xBDDBFF7F1E6AFE8CLL);
  v14 = STACK[0xA10] - 0x41966AF8A5C20340;
  STACK[0x2E0] = (v14 ^ 0xF7DFDFFECF67F5D6) + 0x5CED7F3FB3BD7F6CLL + ((2 * v14) & 0xEFBFBFFD9ECFEBACLL);
  STACK[0x2D0] = ((STACK[0xA00] - 0x7CD859205AB9B7C6) ^ 0x75FDDF3FBBFFFF62)
               - 0x2130800138DA8A20
               + ((2 * (STACK[0xA00] - 0x7CD859205AB9B7C6)) & 0xEBFBBE7F77FFFEC4);
  v15 = STACK[0xB68];
  STACK[0x2C0] = STACK[0xB68];
  STACK[0x2B0] = ((v15 - 0x3B00A775DF608EC2) ^ 0xF5CF5FBE8BAFFD43)
               + 0x5EFDFF7FF77577FFLL
               + ((2 * (v15 - 0x3B00A775DF608EC2)) & 0xEB9EBF7D175FFA86);
  STACK[0x2A0] = ((v5 + 1306) ^ 0xDBCFEFDBB6BF1D7DLL)
               + 0x7CF7D77F5FF5F2FCLL
               + ((2 * (v5 + 1306)) & 0xB79FDFB76D7E3AFALL);
  STACK[0x290] = ((v4 - 0x792578D6C49E211ELL) ^ 0xDAD7C77F96F711F9)
               + 0x7DEFFFDB7FBDFE80
               + ((2 * (v4 - 0x792578D6C49E211ELL)) & 0xB5AF8EFF2DEE23F2);
  STACK[0x280] = ((v6 + 2) ^ 0xFDFFCFDFD6FD327BLL) + 0x5AC7F77B3FB7DDFELL + ((2 * (v6 + 2)) & 0xFBFF9FBFADFA64F6);
  STACK[0x270] = ((v7 + 2) ^ 0x7BE7C7FFBEBDDBFDLL) - 0x232000A4A808CB84 + ((2 * (v7 + 2)) & 0xF7CF8FFF7D7BB7FALL);
  STACK[0x260] = ((v8 + 2) ^ 0xF8E7FF7F1FB796FDLL) + 0x5FDFC7DBF6FD797CLL + ((2 * (v8 + 2)) & 0xF1CFFEFE3F6F2DFALL);
  STACK[0x250] = ((v11 + 2) ^ 0x58FFC75B56F71CFFLL) - 0x38000040420C86 + ((2 * (v11 + 2)) & 0xB1FF8EB6ADEE39FELL);
  STACK[0x240] = ((v9 - 0x293EA326A189FEC2) ^ 0xD9EFEF5B1FFDFFFBLL)
               + 0x7ED7D7FFF6B7107ELL
               + ((2 * (v9 - 0x293EA326A189FEC2)) & 0xB3DFDEB63FFBFFF6);
  STACK[0x230] = ((v10 - 0x100110462E4FAB4ELL) ^ 0xDFEFEFDB9EB7BBFBLL)
               + 0x78D7D77F77FD547ELL
               + ((2 * (v10 - 0x100110462E4FAB4ELL)) & 0xBFDFDFB73D6F77F6);
  STACK[0x220] = ((v12 + 2) ^ 0xFADFE7FF7EFFBE7FLL) + 0x5DE7DF5B97B551FALL + ((2 * (v12 + 2)) & 0xF5BFCFFEFDFF7CFELL);
  STACK[0x210] = ((v13 + 2) ^ 0xFEEFDFDB17B57C7BLL) + 0x59D7E77FFEFF93FELL + ((2 * (v13 + 2)) & 0xFDDFBFB62F6AF8F6);
  STACK[0x200] = ((v14 + 2) ^ 0x5AF7F7DB16B5B9F9) - 0x23030800000A980 + ((2 * (v14 + 2)) & 0xB5EFEFB62D6B73F2);
  STACK[0x410] = STACK[0x830];
  STACK[0x400] = STACK[0x6F0];
  return v2(LOWORD(STACK[0x97E]));
}

uint64_t sub_18CA26454@<X0>(unsigned int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  unint64_t v62;
  _BOOL4 v63;
  _BOOL4 v64;

  v62 = STACK[0xA00] + (a2 ^ a1) - 0x7CD8591F74011ECFLL;
  v63 = v62 < 0xE6B898F1;
  v64 = v62 > STACK[0x9F8] + 3870857457u;
  if (STACK[0x9F8] > 0xFFFFFFFF1947670ELL != v63)
    v64 = v63;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * ((7807 * !v64) ^ (a62 + 2372))) - 4))();
}

uint64_t sub_18CA264F0@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  unint64_t v11;

  v8 = v4 + 10;
  v9 = LOWORD(STACK[0x98C]);
  if (v9 == 8674)
    goto LABEL_4;
  if (v9 == 58958)
  {
    v11 = STACK[0x718];
    STACK[0x650] = v8;
    LODWORD(STACK[0x56C]) = a3;
    return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                          + 8
                                          * ((60
                                            * (((a1 + 57) ^ (v11 + v3 - 0x7CD859205AB9B7C0 == 0)) & 1)) ^ (a1 + 2372)))
                              - 4))();
  }
  v10 = a1;
  if (v9 == 12816)
  {
LABEL_4:
    STACK[0x650] = v8;
    v6 = 1556737321;
    v10 = a1;
  }
  STACK[0x760] = 0;
  LODWORD(STACK[0x56C]) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((5 * (v10 ^ 0x799)) ^ 0x5CE) * (v6 == v5)) ^ v10)) - 4))();
}

uint64_t sub_18CA26634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  BOOL v14;
  int v15;

  v11 = STACK[0x940];
  v12 = STACK[0x760];
  LODWORD(STACK[0x50C]) = STACK[0x56C];
  v13 = (char *)&a9 + STACK[0x858] - 0x63B5AFF39E77E790;
  STACK[0x600] = (unint64_t)(v13 + 0x33299573A50F64F0);
  STACK[0x4C0] = (unint64_t)(v13 + 0x33299573A50F6500);
  STACK[0x7B0] = 0;
  STACK[0x930] = 0x61123CB0DDF7F15BLL;
  LODWORD(STACK[0x54C]) = a7;
  STACK[0x838] = 0x61123CB0DDF7F15BLL;
  LODWORD(STACK[0x848]) = a7;
  STACK[0x778] = v11;
  if (v11)
    v14 = v12 == 0;
  else
    v14 = 1;
  v15 = !v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((2583 * v15) ^ v9))
                            - ((v9 + 92) ^ ((v9 - 787) | 0x418u) ^ 0x173)))();
}

uint64_t sub_18CA266FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  _BYTE *v13;
  _BYTE *v14;

  v13 = (_BYTE *)(v10 + v8 + v9 + 48);
  STACK[0x470] = (unint64_t)v13;
  STACK[0x858] = v8 + 80;
  STACK[0x878] = v7;
  STACK[0x430] = 0;
  STACK[0x510] = 0;
  STACK[0x7F8] = 0;
  LODWORD(STACK[0x65C]) = a7;
  LODWORD(STACK[0x6FC]) = 0;
  STACK[0x5D0] = 0;
  STACK[0x570] = 0;
  LODWORD(STACK[0x954]) = a7;
  v14 = sub_18CA83320(v13, 0, 0x20uLL);
  return (*(uint64_t (**)(_BYTE *))(STACK[0x308]
                                            + 8
                                            * ((2239 * (((v12 == -1640678695) ^ (v11 - 78)) & 1)) ^ v11)))(v14);
}

uint64_t sub_18CA26790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  int v21;
  uint64_t v22;
  unint64_t v23;

  v22 = a21(128);
  v23 = STACK[0x308];
  STACK[0x788] = v22;
  return (*(uint64_t (**)(void))(v23 + 8 * (((((((2 * v21) ^ 0x9EE) - 299) | 0x68) ^ 0x21A) * (v22 != 0)) ^ v21)))();
}

void sub_18CA267E8(_QWORD *a1)
{
  *a1 = 0x47B5CC9A2E1B2553;
  a1[1] = 0x47B5CC9A2E1B2553;
  JUMPOUT(0x18CA1FF1CLL);
}

uint64_t sub_18CA26808@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;

  STACK[0x858] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((158 * (5 * (a1 ^ 0x799) == -38818)) ^ a1)) - 4))();
}

uint64_t sub_18CA2685C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1016
                                          * (((v0 - ((2 * v0) & 0x560BDD6E) + 721809079) ^ 0x5CFA9186)
                                           - 1166813712
                                           + (((v0 - ((2 * v0) & 0x560BDD6E) + 721809079) << (((v1 + 38) & 0xF8) - 23)) & 0xEFFEFE62 ^ 0x460ADC62) == 846419233)) ^ v1))
                            - 8))();
}

uint64_t sub_18CA268F4@<X0>(unint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;

  STACK[0x760] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((5 * (a2 ^ 0x799)) ^ 0x5CE ^ a2)) - 4))();
}

uint64_t sub_18CA26938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v24 = (v22 - 2273 + v20 - 846420538);
  v25 = 1554976193 * ((1554976193 * ((_DWORD)v21 + (_DWORD)v24)) ^ ((1554976193 * (v21 + v24)) >> 16));
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a17 + (v25 >> 24)) ^ *(_BYTE *)(v21 + v24) ^ *(_BYTE *)(a18 + (v25 >> 24)) ^ *(_BYTE *)((v25 >> 24) + a19 + 6) ^ v25 ^ (-103 * ((1554976193 * ((1554976193 * ((_DWORD)v21 + (_DWORD)v24)) ^ ((1554976193 * (v21 + v24)) >> 16))) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((1016 * (v20 - 1 == v19)) ^ v22)) - 8))();
}

uint64_t sub_18CA269C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((350 * (v6 == v5 + a5 - 673 - 631)) ^ (a5 + 1404))) - 4))();
}

uint64_t sub_18CA269F8@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((*(_BYTE *)(STACK[0x788] + 96) == 36) * (((a1 - 69) | 0x800) - 1134)) ^ a1))
                            - (a1 ^ 0x273)))();
}

uint64_t sub_18CA26A3C()
{
  int v0;
  uint64_t *v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v0 ^ 0xA0D;
  v4 = *v1;
  STACK[0x8F0] = 0;
  v5 = *(_QWORD *)(v2 + 8 * ((81 * (((v4 == 0x47B5CC9A2E1B2553) ^ (v0 + 1)) & 1)) ^ v0));
  STACK[0x8E8] = 0x41966AF8A5C20344;
  return ((uint64_t (*)(void))(v5 - (v3 ^ 0x3BLL)))();
}

uint64_t sub_18CA26ABC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  STACK[0x800] = (v1 ^ 0xFFFFFFFFFFFFFFCBLL) + *(_QWORD *)(v2 + 8 * v1);
  LODWORD(STACK[0xB54]) = -1039064981;
  STACK[0xB58] = (unint64_t)&STACK[0x8F0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((a1 != 0x47B5CC9A2E1B2553)
                                               * (((v1 ^ 0xA38) + 1936114456) & 0x8C9937F8 ^ 0x50C)) ^ v1 ^ 0xA38))
                            - 12))();
}

uint64_t sub_18CA26AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  unint64_t v7;

  if (v5 == 1556737630)
    return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                          + 8
                                          * (int)(((*(unsigned __int8 *)(STACK[0x788] + 97) == ((a5 ^ 0x48) + 7))
                                                 * ((a5 + 2039265415) & 0x867342ED ^ 0x1AF)) ^ (a5 + 1459)))
                              - 12))();
  if (v5 != 1556779682)
  {
    LODWORD(STACK[0x864]) = v5;
    STACK[0x7C8] = STACK[0x788];
    STACK[0x828] = ((a5 + 1838951845) & 0x9263CDFE ^ 0x1C4)
                 + *(_QWORD *)(v6 + 8 * (int)((a5 + 1838951845) & 0x9263CDFE))
                 - 380;
    JUMPOUT(0x18CA328F8);
  }
  v7 = *(_QWORD *)(STACK[0x8F0] + 24);
  STACK[0x4D8] = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((2985 * (v7 != 0)) ^ (a5 - 884))) - ((a5 - 1008) | 0x41u) + 349))();
}

uint64_t sub_18CA26C44@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1015 * (*(_DWORD *)(v1 + 20) == ((a1 - 195) ^ 0x562299D1))) ^ a1))
                            - (a1 + 968)
                            + 1296))();
}

void sub_18CA26C90()
{
  int v0;
  uint64_t v1;

  STACK[0x498] = *(_QWORD *)(v1 + 8 * v0);
  JUMPOUT(0x18CA2B924);
}

void sub_18CA26CBC()
{
  __int16 v0;

  LOWORD(STACK[0x9E2]) = v0;
  JUMPOUT(0x18CA26CF0);
}

uint64_t sub_18CA26E40@<X0>(unsigned int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,unint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  unint64_t v62;
  _BOOL4 v63;
  _BOOL4 v64;
  _BOOL4 v65;

  v62 = (a2 ^ a1) + STACK[0x2C0];
  STACK[0x980] = v62 + 10;
  v62 -= 0x3B00A774E1DBD235;
  v63 = v62 < 0xFD84BC87;
  v64 = v62 > a41;
  if (a53 > 0xFFFFFFFF027B4378 != v63)
    v65 = v63;
  else
    v65 = v64;
  return (*(uint64_t (**)(void))(STACK[0x308] + 8 * ((a62 + 2619) ^ (49 * v65))))();
}

uint64_t sub_18CA26ED0@<X0>(unsigned __int16 a1@<W0>, int a2@<W4>, unint64_t a3@<X8>)
{
  if (a1 == 8674)
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x308] + 8 * (a2 - 1215))
                                            + (a2 + 1364)
                                            - 2672))(8674);
  if (a1 != 12816 && a1 != 58958)
    return ((uint64_t (*)(void))STACK[0x498])();
  STACK[0x868] = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * ((3893 * (a1 == 8674)) ^ (a2 - 982)))
                            - 14 * (a2 ^ 0x50Fu)
                            + 310))();
}

uint64_t sub_18CA279BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;

  *(_DWORD *)STACK[0x790] = (a7 + ((v7 - 50) | 0x408) - 1304) ^ LODWORD(STACK[0x774]);
  return ((uint64_t (*)(void))STACK[0x498])();
}

uint64_t sub_18CA279EC@<X0>(unsigned int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  unint64_t v62;
  _BOOL4 v63;
  _BOOL4 v64;

  v62 = STACK[0xA10] + (a2 ^ a1) - 0x41966AF7BEEDA245;
  v63 = v62 < 0xE6D460F5;
  v64 = v62 > STACK[0xA08] + 3872678133u;
  if (STACK[0xA08] > 0xFFFFFFFF192B9F0ALL != v63)
    v64 = v63;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * ((82 * v64) ^ (a62 + 2717))) - 8))();
}

void sub_18CA27A7C(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;

  v4 = v3 + 10;
  v5 = LOWORD(STACK[0x98E]);
  if (v5 != 8674)
  {
    if (v5 == 58958)
    {
      v6 = STACK[0x4D8];
      STACK[0x8E8] = v4;
      LODWORD(STACK[0x954]) = a1;
      STACK[0x570] = v6 + v1 - 0x41966AF8A5C2033ALL;
      if (*(_DWORD *)(STACK[0x788] + 20) == 1445108061)
        JUMPOUT(0x18CA2389CLL);
LABEL_7:
      JUMPOUT(0x18CA29170);
    }
    if (v5 != 12816)
    {
      LODWORD(STACK[0x864]) = v2;
      JUMPOUT(0x18CA29174);
    }
  }
  STACK[0x8E8] = v4;
  LODWORD(STACK[0x954]) = a1;
  goto LABEL_7;
}

void sub_18CA27AD0(int a1@<W8>)
{
  LODWORD(STACK[0x4E4]) = a1;
  JUMPOUT(0x18CA27AE0);
}

uint64_t sub_18CA27B3C()
{
  int v0;

  *(_DWORD *)STACK[0x938] = STACK[0x4E4];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * (((v0 ^ 0xC7E) - 1000) ^ 0x8F6)) - 4))();
}

void sub_18CA27B50(int a1@<W8>)
{
  LODWORD(STACK[0x914]) = a1;
  JUMPOUT(0x18CA27B60);
}

void sub_18CA27BA4()
{
  JUMPOUT(0x18CA27BB0);
}

uint64_t sub_18CA27BC0@<X0>(unsigned int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  unint64_t v62;
  _BOOL4 v63;
  _BOOL4 v64;

  v62 = STACK[0xAE0] + (a2 ^ a1) - 0x2A46190C87A1AB62;
  v63 = v62 < 0x5A58012D;
  v64 = v62 > STACK[0xAD8] + 1515716909;
  if (STACK[0xAD8] > 0xFFFFFFFFA5A7FED2 != v63)
    v64 = v63;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * ((37 * !v64) ^ (a62 + 71))) - 8))();
}

uint64_t sub_18CA27C5C@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  unint64_t v10;

  v7 = v4 + 10;
  v8 = LOWORD(STACK[0x9D8]);
  if (v8 == 8674)
    goto LABEL_4;
  if (v8 == 58958)
  {
    v10 = STACK[0x798];
    STACK[0x6E0] = v7;
    LODWORD(STACK[0x848]) = a2;
    STACK[0x640] = v10 + v3 - 0x2A46190CE1F9AC8FLL;
    v9 = a1;
    v2 = 1556779682;
    return (*(uint64_t (**)(void))(v6
                                + 8
                                * (int)((((331 * (v9 ^ 0x51B) + 1633999773) & 0x9E9B2BBF ^ 0xD27) * (v2 == v5)) ^ (v9 - 355))))();
  }
  v9 = a1;
  if (v8 == 12816)
  {
LABEL_4:
    STACK[0x6E0] = v7;
    LODWORD(STACK[0x848]) = a2;
    v2 = 1556737321;
    v9 = a1;
  }
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((331 * (v9 ^ 0x51B) + 1633999773) & 0x9E9B2BBF ^ 0xD27) * (v2 == v5)) ^ (v9 - 355))))();
}

uint64_t sub_18CA27CA8@<X0>(unsigned int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  unint64_t v62;
  _BOOL4 v63;
  _BOOL4 v64;

  v62 = STACK[0xAA0] + (a2 ^ a1) - 0x531893D48EC43C2FLL;
  v63 = v62 < 0x8E5537EE;
  v64 = v62 > STACK[0xA98] + 2387949550u;
  if (STACK[0xA98] > 0xFFFFFFFF71AAC811 != v63)
    v64 = v63;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * ((14 * v64) ^ (a62 + 2251))) - 4))();
}

uint64_t sub_18CA27D40@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  unint64_t v11;

  v8 = v5 + 10;
  v9 = LOWORD(STACK[0x9F4]);
  if (v9 == 8674)
    goto LABEL_4;
  if (v9 == 58958)
  {
    v11 = STACK[0x6F0];
    STACK[0x648] = v8;
    LODWORD(STACK[0x54C]) = a3;
    return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                          + 8
                                          * (((v11 + v3 - 0x531893D51D19741DLL != 0) * ((a1 ^ 0xB0E) - 3600)) ^ (a1 - 38)))
                              - 8))();
  }
  v10 = a1;
  if (v9 == 12816)
  {
LABEL_4:
    STACK[0x648] = v8;
    v4 = 1556737321;
    v10 = a1;
  }
  STACK[0x930] = 0x61123CB0DDF7F15BLL;
  LODWORD(STACK[0x54C]) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((3313 * (v4 == (v10 ^ (v6 + 1304)))) ^ (v10 - 1000))) - 4))();
}

void sub_18CA27D88(int a1@<W8>)
{
  LODWORD(STACK[0x7C4]) = a1;
  JUMPOUT(0x18CA281ECLL);
}

uint64_t sub_18CA27D94@<X0>(unsigned int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  unint64_t v62;
  _BOOL4 v63;
  _BOOL4 v64;

  v62 = STACK[0xA40] + (a2 ^ a1) - 0x6B283AC05863FFD4;
  v63 = v62 < 0xBD38BF88;
  v64 = v62 > STACK[0xA38] + 3174612872u;
  if (STACK[0xA38] > 0xFFFFFFFF42C74077 != v63)
    v64 = v63;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * ((1984 * !v64) ^ (a62 - 968))) - 8))();
}

uint64_t sub_18CA27E28@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;

  v7 = v5 + 10;
  v8 = LOWORD(STACK[0x9B4]);
  if (v8 == 8674)
    goto LABEL_4;
  if (v8 != 58958)
  {
    if (v8 != 12816)
      JUMPOUT(0x18CA29170);
LABEL_4:
    STACK[0x7A0] = v7;
    JUMPOUT(0x18CA27E5CLL);
  }
  v9 = STACK[0x428];
  STACK[0x7A0] = v7;
  STACK[0x510] = v9 + v4 - 0x6B283AC1159CBF5CLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v3 ^ (150 * (a3 == a2 + 32))))
                            - ((a1 + 735) ^ 0x7FFLL)))();
}

uint64_t sub_18CA27E70@<X0>(unsigned int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  unint64_t v62;
  _BOOL4 v63;
  _BOOL4 v64;

  v62 = STACK[0xAC0] + (a2 ^ a1) - 0x3E2D3335D907FDE4;
  v63 = v62 < 0xC3B085B0;
  v64 = v62 > STACK[0xAB8] + 3283125680u;
  if (STACK[0xAB8] > 0xFFFFFFFF3C4F7A4FLL != v63)
    v64 = v63;
  return (*(uint64_t (**)(void))(STACK[0x308] + 8 * (((2 * v64) | (8 * v64)) ^ (a62 - 242))))();
}

uint64_t sub_18CA27EF8@<X0>(unsigned int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v11;

  v6 = v4 + 10;
  v7 = LOWORD(STACK[0x9DA]);
  if (v7 == 8674)
    goto LABEL_4;
  if (v7 == 58958)
  {
    v9 = STACK[0x8D0];
    STACK[0x7E0] = v6;
    LODWORD(STACK[0x848]) = a3;
    return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)((703 * (v9 + v3 - 0x3E2D33369CB88394 != 0)) ^ (a1 - 798)))
                              - (a1 ^ 0x51CLL)))();
  }
  v8 = a1;
  if (v7 == 12816)
  {
LABEL_4:
    STACK[0x7E0] = v6;
    v8 = a1;
  }
  STACK[0x838] = 0x61123CB0DDF7F15BLL;
  LODWORD(STACK[0x848]) = a2;
  v11 = *(_QWORD *)STACK[0x780];
  STACK[0x640] = 0;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((v11 != 0x47B5CC9A2E1B2553)
                                     * (((331 * (v8 ^ 0x51B) + 1975973907) & 0x8A39053B ^ 0x2E3)
                                      + ((331 * (v8 ^ 0x51B) + 302524190) & 0xEDF7D7D8))) ^ (331 * (v8 ^ 0x51B)))))();
}

uint64_t sub_18CA28240@<X0>(int a1@<W6>, unint64_t a2@<X8>)
{
  int v2;
  __int16 v3;
  int v4;
  uint64_t v5;
  int v6;
  _BOOL4 v8;

  v6 = STACK[0x9E4];
  STACK[0x7D8] = a2;
  LODWORD(STACK[0xA58]) = v4;
  LOWORD(STACK[0xA5E]) = v3;
  LODWORD(STACK[0xA60]) = v6;
  LODWORD(STACK[0xA64]) = STACK[0x7C4];
  STACK[0xA68] = STACK[0x4A8];
  STACK[0x7D0] = STACK[0x448];
  v8 = a2 != 0x47B5CC9A2E1B2553 && (v6 ^ (a1 - 1)) < ((v2 + 1994048440) & 0x89253DB8 ^ 0xFFFFFAEE);
  return (*(uint64_t (**)(void))(v5 + 8 * ((v8 * (((v2 - 795) | 0x550) ^ 0xBDD)) ^ v2)))();
}

uint64_t sub_18CA282E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  int v21;
  uint64_t v22;

  v22 = a21(32);
  STACK[0x468] = v22;
  return (*(uint64_t (**)(void))(STACK[0x308] + 8 * ((2834 * (((v22 == 0) ^ (v21 - 1)) & 1)) ^ v21)))();
}

uint64_t sub_18CA28334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(_QWORD))
{
  int v21;
  int v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v26 = v21 ^ v23;
  STACK[0xA70] = v26;
  LODWORD(v26) = ((v26 + 10) ^ 0xD6FCF7FD)
               + 1064565488
               + ((((v22 - 1221358030) & 0x48CC6CF8) - 1376129270) & (2 * (v26 + 10)));
  *(_DWORD *)(a1 + 16) = v26;
  v27 = a21((v26 - 376500973));
  *(_QWORD *)(a1 + 24) = v27;
  return (*(uint64_t (**)(void))(v24 + 8 * (((v27 == 0) * ((v22 - 1923860136) & 0x72ABC5FA ^ 0x501)) ^ v22)))();
}

void sub_18CA283E8()
{
  JUMPOUT(0x18CA29A3CLL);
}

uint64_t sub_18CA28414@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  uint64_t v2;

  LODWORD(STACK[0x5AC]) = 1556779682;
  *(_QWORD *)STACK[0x528] = a2;
  LODWORD(STACK[0x864]) = 1556779682;
  return (*(uint64_t (**)(void))(v2 + 8 * (57 * (a1 ^ 0x515) + 379)))();
}

uint64_t sub_18CA284B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)STACK[0x788];
  STACK[0x628] = 0;
  STACK[0x7A0] = 0x6B283AC1159CBF66;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((v6 != 0x47B5CC9A2E1B2553)
                                     * ((a5 - 2107712353) ^ 0x825EE4AF ^ (a5 - 2107712353) & 0x7DA11E5F ^ 0x3EB)) ^ (a5 + 886))))();
}

uint64_t sub_18CA2853C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  STACK[0x800] = (v1 ^ 0xFFFFFFFFFFFFFFEFLL) + *(_QWORD *)(v2 + 8 * v1);
  LODWORD(STACK[0xB54]) = 1773186008;
  STACK[0xB58] = (unint64_t)&STACK[0x628];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((a1 != 0x47B5CC9A2E1B2553)
                                               * (((v1 ^ 0xA10) + 1936114456) & 0x8C9937F8 ^ 0x50C)) ^ v1 ^ 0xA10))
                            - 12))();
}

uint64_t sub_18CA285C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(_QWORD),int a22,int a23)
{
  int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;

  v25 = a21(LODWORD(STACK[0x54C]) ^ a7);
  v26 = STACK[0x308];
  STACK[0xA88] = v25 + 0x61123CB0DDF7F15BLL;
  if (v25)
    a23 = v24;
  v28 = *(_QWORD *)(v26 + 8 * ((60 * (v25 == 0)) ^ v23));
  LODWORD(STACK[0xA94]) = a23;
  return ((uint64_t (*)(void))(v28 - ((((v23 - 628105615) & 0x257017DA) - 1414) ^ (v23 + 2093431185) & 0x8338B730)))();
}

uint64_t sub_18CA28658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  int v68;
  unsigned int v69;
  int v70;
  uint64_t v71;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v71
                                                                                                  + 8 * ((809 * (((v68 == ((v69 + 609603615) & 0xDBAA2F5E ^ (v70 + 1304))) ^ (v69 - 121)) & 1)) ^ v69)))(a1, a2, a3, a4, a68, a6, 2654288601);
}

uint64_t sub_18CA287D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(_QWORD),int a22,int a23)
{
  int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;

  v25 = a21(LODWORD(STACK[0x54C]) ^ a7);
  v26 = STACK[0x308];
  STACK[0xAA8] = v25 + 0x61123CB0DDF7F15BLL;
  if (v25)
    a23 = v24;
  LODWORD(STACK[0xAB4]) = a23;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * (((v25 == 0) * (v23 - 3566)) ^ v23))
                            - ((v23 - 3573) ^ 0x25)))();
}

uint64_t sub_18CA2883C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  int v68;
  int v69;
  int v70;
  uint64_t v71;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 + 8 * (((v68 == v70) * ((((v69 - 2340) ^ 0x4BE) + 1228) ^ 0x933)) ^ (v69 - 2340)))
                                                                                                - 4
                                                                                                * ((v69 - 2340) ^ 0x4BEu)
                                                                                                + 296))(a1, a2, a3, a4, a68, a6, 2654288601);
}

uint64_t sub_18CA288F4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((LODWORD(STACK[0x6FC]) != 6) * ((v0 ^ 0x6A7) + (v0 ^ 0xF79) + 1552)) ^ v0))
                            - 4))();
}

void sub_18CA28938(int a1@<W6>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  int v9;

  v7 = STACK[0x510];
  v8 = (v5 ^ 0xFEF5D377) + 1576005103 + ((2 * v5) & 0xFDEBA6EE);
  v9 = 476588053
     * ((((2 * ((v6 - 224) ^ 0x20BA6F8C)) | 0x834A46E4) - ((v6 - 224) ^ 0x20BA6F8C) + 1046142094) ^ 0x5CE248BD);
  *(_DWORD *)(v6 - 172) = v9 + v3 - 1318648935;
  *(_QWORD *)(v6 - 192) = v2;
  *(_QWORD *)(v6 - 184) = v2;
  *(_QWORD *)(v6 - 216) = a2;
  *(_QWORD *)(v6 - 208) = v7;
  *(_DWORD *)(v6 - 200) = v8 ^ v9;
  *(_DWORD *)(v6 - 224) = 697253311 * (v4 ^ (a1 + 1256) ^ ((v3 - 1142) | 0x100)) - v9 + 2051843745;
  nullsub_1(v6 - 224);
  JUMPOUT(0x18CA29170);
}

uint64_t sub_18CA28A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(_QWORD),int a22,int a23)
{
  int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;

  v25 = a21(((((v23 - 2509) | 0x8A) ^ (a7 + 74)) + v23 - 2877) ^ LODWORD(STACK[0x848]));
  v26 = STACK[0x308];
  STACK[0xAC8] = v25 + 0x61123CB0DDF7F15BLL;
  if (v25)
    a23 = v24;
  LODWORD(STACK[0xAD4]) = a23;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * ((187 * (v25 != 0)) ^ v23)) - 4))();
}

uint64_t sub_18CA28AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;

  v7 = v4 - 1257790009 - ((v4 << ((v5 + 74) ^ 0x4B)) & 0x6A0F4B8E);
  STACK[0x9D0] = *(_QWORD *)(v6 + 8 * v5) - 12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v6 + 8 * ((4075 * ((v7 ^ 0x43F9132A) + 1763957688 + ((v7 << ((8 * ((v5 + 74) ^ 0xE9)) ^ 0x19)) & 0xEDFD6DDA ^ (((v5 + 355532521) & 0xEACF09B7) + 1745699049)) != 1612878501)) ^ (v5 + 1866)))
                                                                                       - 8))(a1, a2, a3, a4, 0xB1D7AB5296A4827ALL);
}

uint64_t sub_18CA28B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;

  v7 = ((v5 & 0x8338B730) - 1204699285) & 0x47CE47CE;
  v8 = v4 - 1257790009 - ((2 * v4) & 0x6A0F4B8E) + v7 - 1866;
  STACK[0x9D0] = *(_QWORD *)(v6 + 8 * (v5 & 0xFFFFFFFF8338B730)) - 8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v6 + 8 * ((4075 * ((v8 ^ 0x43F9132A) + 1763957688 + ((v8 << ((8 * (((v5 & 0x30) + 107) & 0xCE ^ 0xE9)) ^ 0x19)) & 0xEDFD6DDA ^ (((v7 + 355530655) & 0xEACF09B7) + 1745699049)) != 1612878501)) ^ v7))
                                                                                       - 8))(a1, a2, a3, a4, 0xB1D7AB5296A4827ALL);
}

void sub_18CA28B84()
{
  JUMPOUT(0x18CA28BB8);
}

void sub_18CA28BC0(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;

  v5 = STACK[0x788] + 0x5FDA6BAB286D1A09;
  v6 = *(_DWORD *)(STACK[0x788] + 100) + 457244857;
  v7 = ((v3 + 696) | 0x110) + 856060793 * *(_DWORD *)(STACK[0x788] + 120) - 187929639;
  v8 = 1434876433 * ((((v4 - 224) | 0xB3C985A1) - (v4 - 224) + ((v4 - 224) & 0x4C367A58)) ^ 0x47ABB10C);
  *(_QWORD *)(v4 - 176) = v1;
  *(_QWORD *)(v4 - 168) = a1;
  *(_QWORD *)(v4 - 216) = v5;
  *(_QWORD *)(v4 - 200) = v1;
  *(_DWORD *)(v4 - 184) = v7 ^ v8;
  *(_DWORD *)(v4 - 180) = v8 ^ 0x8258837E;
  *(_DWORD *)(v4 - 224) = v6 ^ v8;
  *(_DWORD *)(v4 - 192) = (v3 - 794290998) ^ v8;
  *(_DWORD *)(v4 - 188) = v8 + (v2 ^ 0x6868C026) + ((2 * v2) & 0xECBBF5FE ^ 0x2C2A75B2) + 2147477376;
  nullsub_1(v4 - 224);
  JUMPOUT(0x18CA28CC8);
}

uint64_t sub_18CA28CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  int v68;
  int v69;
  int v70;
  uint64_t v71;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 + 8 * ((1446 * (v68 == v70 + v69 - 202 - 304)) ^ v69))
                                                                                                - 4))(a1, a2, a3, a4, a68, a6, 2654288601);
}

uint64_t sub_18CA28DA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 17 * (v1 ^ 0xC3);
  v3 = STACK[0x308];
  STACK[0x800] = *(_QWORD *)(STACK[0x308] + 8 * v1) + v2 - 2575;
  LODWORD(STACK[0xB54]) = 1723113525;
  STACK[0xB58] = (unint64_t)&STACK[0x480];
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((a1 != 0x47B5CC9A2E1B2553) * ((v2 + 1936114456) & 0x8C9937F8 ^ 0x50C)) ^ v2))
                            - 12))();
}

uint64_t sub_18CA28E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  _BOOL4 v17;

  v10 = STACK[0x778];
  v11 = STACK[0x930];
  v12 = STACK[0x600];
  v13 = (char *)&a9 + STACK[0x858] - 0x63B5AFF39E77E790;
  STACK[0x858] += 32;
  STACK[0x668] = v11;
  STACK[0x820] = v12;
  v14 = sub_18CA83320(v13, 0, 0x20uLL);
  STACK[0x918] = 0;
  v17 = v10 != -56 && v11 != 0x61123CB0DDF7F15BLL && v12 != 0x33299573A50F64F0;
  return (*(uint64_t (**)(_BYTE *))(STACK[0x308] + 8 * ((335 * v17) ^ (v9 + 1806))))(v14);
}

uint64_t sub_18CA28EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((((LODWORD(STACK[0x54C]) ^ (a7 - 9)) > 0xF)
                                          * ((v7 - 738751281) & 0x2C087718 ^ 0xA1C)) ^ v7))
                            - (v7 + 812)
                            + 1112))();
}

uint64_t sub_18CA28F34@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x7B0];
  STACK[0x780] = STACK[0x7B0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 != 0) * (a1 + 1858)) ^ a1))
                            - ((a1 - 530) ^ 0x24ELL)))();
}

uint64_t sub_18CA28F6C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3940 * (*(_QWORD *)(v0 + 8) != 0x47B5CC9A2E1B2553)) ^ v1))
                            - ((v1 - 1127599719) & 0x4335CFFD)
                            + 985))();
}

uint64_t sub_18CA28FBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  STACK[0x4F0] = 0;
  STACK[0x7E0] = 0x3E2D33369CB8839ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v2 - 586) | 0xD2F) ^ (120 * (a1 == v1))))
                            - 8 * (((((v2 - 586) | 0xD2F) - 3367) | 0x11) ^ 0xBAu)
                            + 1292))();
}

void sub_18CA29020()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0x800] = ((v0 + 2542) ^ 0xFFFFFFFFFFFFF5F3) + *(_QWORD *)(v1 + 8 * v0);
  JUMPOUT(0x18CA2BCDCLL);
}

uint64_t sub_18CA290E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  STACK[0x730] = 0;
  STACK[0x6E0] = 0x2A46190CE1F9AC99;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((273 * (((a1 == v1) ^ (v2 + 64) ^ 0x2D) & 1)) ^ v2))
                            - 4))();
}

void sub_18CA29140()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0x800] = *(_QWORD *)(v1 + 8 * v0);
  JUMPOUT(0x18CA2915CLL);
}

uint64_t sub_18CA29180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  if (v5 == 1556737630)
  {
    v7 = (uint64_t *)STACK[0x788];
    LODWORD(STACK[0x6FC]) = *(_DWORD *)(STACK[0x788] + 16) - 958677044;
  }
  else
  {
    if (v5 != 1556779682)
      JUMPOUT(0x18CA29170);
    v7 = (uint64_t *)STACK[0x788];
  }
  v8 = *v7;
  STACK[0x458] = 0;
  STACK[0x5F0] = 0x713862EF8CBC724ELL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((2897 * (((a5 - 1) ^ (v8 == 0x47B5CC9A2E1B2553)) & 1)) ^ (a5 - 659)))
                            - 4))();
}

uint64_t sub_18CA29244@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = (a1 - 1300) | 0xA03u;
  STACK[0x800] = *(_QWORD *)(v2 + 8 * (a1 - 1222)) + v3 - 2579;
  LODWORD(STACK[0xB54]) = 1662851870;
  STACK[0xB58] = (unint64_t)&STACK[0x458];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((a2 != 0x47B5CC9A2E1B2553) * ((v3 + 1936114456) & 0x8C9937F8 ^ 0x50C)) ^ v3))
                            - 12))();
}

uint64_t sub_18CA29274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((280 * (v6 == (((a5 + 872) | 0x43) ^ (v5 + 1983)))) ^ (a5 + 947)))
                            - 12))();
}

uint64_t sub_18CA292B0()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x458] + 24);
  STACK[0x6D0] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 | (8 * (v2 == 0))))
                            - (((v0 - 939) ^ 0xFFFFFFFFFFFFF89FLL)
                             + 215 * (v0 ^ 0x8C0u))))();
}

uint64_t sub_18CA29300()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = (v0 - 389) | 0x418u;
  v4 = (v1 - 376500973);
  STACK[0xA18] = v4;
  v5 = *(_QWORD *)(v2
                 + 8
                 * ((2879
                   * (v4 + 0x713862EF8CBC724ELL - STACK[0x5F0] > (unint64_t)((v0 - 518882416) & 0x1EED81FF) - 12)) ^ v0));
  STACK[0xA20] = STACK[0x5F0];
  return ((uint64_t (*)(void))(v5 - (v3 ^ 0x51C)))();
}

void sub_18CA2938C()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v1 = STACK[0xA50];
  STACK[0x3F0] = STACK[0xA50];
  v2 = STACK[0xA80] - 0x63443EC20C671196;
  STACK[0x3E0] = ((v2 + ((v0 - 2008469927) & 0x37B6DBFDu) - 1364) ^ 0xDFEFFFFEFF65F74ALL)
               + 0x74DD5F3F83BF7DF8
               + ((2 * (v2 + ((v0 - 2008469927) & 0x37B6DBFDu) - 1364)) & 0xBFDFFFFDFECBEE94);
  v3 = STACK[0xAA0] - 0x531893D51D197423;
  STACK[0x3D0] = (v3 ^ 0xFFEFFF7ED3B77F7ALL) + 0x54DD5FBFAF6DF5C8 + ((2 * v3) & 0xFFDFFEFDA76EFEF4);
  STACK[0x3C0] = ((v1 - 0x792578D6C49E2120) ^ 0x77CD5FBE8F7FFF6ELL)
               - 0x230000800C5A8A2CLL
               + ((2 * (v1 - 0x792578D6C49E2120)) & 0xEF9ABF7D1EFFFEDCLL);
  v4 = STACK[0xAC0] - 0x3E2D33369CB8839ALL;
  STACK[0x380] = (v4 ^ 0x54DFFFFEE3A57F7ALL) - 0x12A0C060800A38 + ((2 * v4) & 0xA9BFFFFDC74AFEF4);
  v5 = STACK[0xAE0] - 0x2A46190CE1F9AC95;
  STACK[0x370] = (v5 ^ 0x57CF5F3FCBF577D7) - 0x302000148D00295 + ((2 * v5) & 0xAF9EBE7F97EAEFAELL);
  v6 = STACK[0xB00];
  STACK[0x360] = STACK[0xB00];
  STACK[0x350] = ((v6 - 0x293EA326A189FEC4) ^ 0xD4FF5F3EA7EDFF4BLL)
               + 0x7FCDFFFFDB3775F7
               + ((2 * (v6 - 0x293EA326A189FEC4)) & 0xA9FEBE7D4FDBFE96);
  v7 = STACK[0xB10];
  STACK[0x340] = STACK[0xB10];
  STACK[0x330] = ((v7 - 0x100110462E4FAB50) ^ 0x75DF5F3ECFFFF57FLL)
               - 0x211200004CDA803DLL
               + ((2 * (v7 - 0x100110462E4FAB50)) & 0xEBBEBE7D9FFFEAFELL);
  v8 = STACK[0xA40] - 0x6B283AC1159CBF62;
  STACK[0x320] = (v8 ^ 0xF4CFFF7EDBBFFF46) + 0x5FFD5FBFA76575FCLL + ((2 * v8) & 0xE99FFEFDB77FFE8CLL);
  v9 = STACK[0xA30] - 0x65074BFF75FD537DLL;
  STACK[0x310] = (v9 ^ 0x5FED7F3FD77F7FDELL) - 0xB202001545A0A9CLL + ((2 * v9) & 0xBFDAFE7FAEFEFFBCLL);
  v10 = STACK[0xA20] - 0x713862EF8CBC724ALL;
  STACK[0x2F0] = (v10 ^ 0xDEEDFFBF8F357F46) + 0x75DF5F7EF3EFF5FCLL + ((2 * v10) & 0xBDDBFF7F1E6AFE8CLL);
  v11 = STACK[0xA10] - 0x41966AF8A5C20340;
  STACK[0x2E0] = (v11 ^ 0xF7DFDFFECF67F5D6) + 0x5CED7F3FB3BD7F6CLL + ((2 * v11) & 0xEFBFBFFD9ECFEBACLL);
  STACK[0x2D0] = ((STACK[0xA00] - 0x7CD859205AB9B7C6) ^ 0x75FDDF3FBBFFFF62)
               - 0x2130800138DA8A20
               + ((2 * (STACK[0xA00] - 0x7CD859205AB9B7C6)) & 0xEBFBBE7F77FFFEC4);
  v12 = STACK[0xB68];
  STACK[0x2C0] = STACK[0xB68];
  STACK[0x2B0] = ((v12 - 0x3B00A775DF608EC2) ^ 0xF5CF5FBE8BAFFD43)
               + 0x5EFDFF7FF77577FFLL
               + ((2 * (v12 - 0x3B00A775DF608EC2)) & 0xEB9EBF7D175FFA86);
  STACK[0x2A0] = ((v2 + 1306) ^ 0xDBCFEFDBB6BF1D7DLL)
               + 0x7CF7D77F5FF5F2FCLL
               + ((2 * (v2 + 1306)) & 0xB79FDFB76D7E3AFALL);
  STACK[0x290] = ((v1 - 0x792578D6C49E211ELL) ^ 0xDAD7C77F96F711F9)
               + 0x7DEFFFDB7FBDFE80
               + ((2 * (v1 - 0x792578D6C49E211ELL)) & 0xB5AF8EFF2DEE23F2);
  STACK[0x280] = ((v3 + 2) ^ 0xFDFFCFDFD6FD327BLL) + 0x5AC7F77B3FB7DDFELL + ((2 * (v3 + 2)) & 0xFBFF9FBFADFA64F6);
  STACK[0x270] = ((v4 + 2) ^ 0x7BE7C7FFBEBDDBFDLL) - 0x232000A4A808CB84 + ((2 * (v4 + 2)) & 0xF7CF8FFF7D7BB7FALL);
  STACK[0x260] = ((v5 + 2) ^ 0xF8E7FF7F1FB796FDLL) + 0x5FDFC7DBF6FD797CLL + ((2 * (v5 + 2)) & 0xF1CFFEFE3F6F2DFALL);
  STACK[0x250] = ((v8 + 2) ^ 0x58FFC75B56F71CFFLL) - 0x38000040420C86 + ((2 * (v8 + 2)) & 0xB1FF8EB6ADEE39FELL);
  STACK[0x240] = ((v6 - 0x293EA326A189FEC2) ^ 0xD9EFEF5B1FFDFFFBLL)
               + 0x7ED7D7FFF6B7107ELL
               + ((2 * (v6 - 0x293EA326A189FEC2)) & 0xB3DFDEB63FFBFFF6);
  STACK[0x230] = ((v7 - 0x100110462E4FAB4ELL) ^ 0xDFEFEFDB9EB7BBFBLL)
               + 0x78D7D77F77FD547ELL
               + ((2 * (v7 - 0x100110462E4FAB4ELL)) & 0xBFDFDFB73D6F77F6);
  STACK[0x220] = ((v9 + 2) ^ 0xFADFE7FF7EFFBE7FLL) + 0x5DE7DF5B97B551FALL + ((2 * (v9 + 2)) & 0xF5BFCFFEFDFF7CFELL);
  STACK[0x210] = ((v10 + 2) ^ 0xFEEFDFDB17B57C7BLL) + 0x59D7E77FFEFF93FELL + ((2 * (v10 + 2)) & 0xFDDFBFB62F6AF8F6);
  STACK[0x200] = ((v11 + 2) ^ 0x5AF7F7DB16B5B9F9) - 0x23030800000A980 + ((2 * (v11 + 2)) & 0xB5EFEFB62D6B73F2);
  STACK[0x410] = STACK[0x830];
  STACK[0x400] = STACK[0x6F0];
  JUMPOUT(0x18CA26CF0);
}

uint64_t sub_18CA293F8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _BOOL4 v2;

  v2 = (*(_BYTE *)(STACK[0x788] + 124) & 1) == 0;
  if (!LODWORD(STACK[0x6FC]))
    v2 = 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((v2 * (((a1 + 1051277114) & 0xC156BFEC) - 739)) ^ a1)))();
}

uint64_t sub_18CA29440@<X0>(int a1@<W8>)
{
  uint64_t *v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  v3 = a1 - 2677;
  v4 = (a1 - 2972) ^ 0x531;
  v5 = *v1;
  STACK[0x6B0] = 0;
  STACK[0x630] = 0x65074BFF75FD5381;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v5 != 0x47B5CC9A2E1B2553) * (v4 - 1084)) ^ v3)) - 8))();
}

uint64_t sub_18CA294A4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = (v1 + 2526);
  STACK[0x800] = (v3 ^ 0xFFFFFFFFFFFFF5FBLL) + *(_QWORD *)(v2 + 8 * v1);
  LODWORD(STACK[0xB54]) = 1728594921;
  STACK[0xB58] = (unint64_t)&STACK[0x6B0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((a1 != 0x47B5CC9A2E1B2553) * ((v1 + 1936116982) & 0x8C9937F8 ^ 0x50C)) ^ v3))
                            - 12))();
}

uint64_t sub_18CA294CC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = v1 == ((v0 + 60) ^ 0x28) || v2 == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((501 * ((((v0 + 1442) ^ v5) & 1) == 0)) ^ v0)))();
}

uint64_t sub_18CA29510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  int v21;
  uint64_t v22;
  _BOOL4 v23;

  v23 = a21(16) != 0;
  return (*(uint64_t (**)(void))(v22 + 8 * ((104 * v23) ^ v21)))();
}

uint64_t sub_18CA29558(_QWORD *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  *a1 = 0;
  a1[1] = 0;
  *(_QWORD *)(v1 + 8) = (char *)a1 + 0x47B5CC9A2E1B2553;
  LODWORD(STACK[0x864]) = 1556779682;
  v4 = 8 * (((v2 ^ 0x70) - 114894705) & 0x6D9277F ^ 0x449);
  STACK[0x7B0] = STACK[0x788];
  STACK[0x858] -= 32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((98 * (((v4 - 280) | 0x500) == 1304)) ^ v4)) - 4))();
}

uint64_t sub_18CA295A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  STACK[0x528] = v21 + 8;
  v24 = STACK[0x7F8];
  LODWORD(STACK[0x8C8]) = STACK[0x65C];
  STACK[0x5C0] = v24;
  STACK[0x520] = 0x792578D6C49E2124;
  LODWORD(STACK[0x7C4]) = a7;
  STACK[0x4A8] = 0x6F86CADFD5E28BB5;
  STACK[0x448] = 0;
  v25 = a21(16);
  STACK[0x620] = v25 + 0x47B5CC9A2E1B2553;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23
                                        + 8
                                        * (int)(((v25 == 0) * (((v22 - 2180) | 0x611) + (v22 ^ 0xFFFFF24D))) ^ v22))
                            - 4))();
}

uint64_t sub_18CA2965C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  _BOOL4 v12;

  *a1 = 0;
  a1[1] = 0;
  v10 = (((v8 ^ 0x7BEu) + 1293) ^ 0x86DA8729820E1726) + 0x792578D6C49E2124;
  v12 = v10 <= ((85 * (v8 ^ 0x7BEu)) ^ 0x46AC30C6uLL) || v10 >= (unint64_t)(v7 ^ a7) + 1185690466;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((240 * v12) ^ v8 ^ 0xAC8)) - 4))();
}

uint64_t sub_18CA2994C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x5C0];
  STACK[0x748] = STACK[0x5C0];
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 != 0) * (v0 ^ 0xDB6)) ^ v0)))();
}

uint64_t sub_18CA29984()
{
  unint64_t v0;
  int v1;
  unint64_t v2;

  STACK[0xA48] = v2;
  STACK[0xA50] = v0;
  return (*(uint64_t (**)(void))(STACK[0x308]
                              + 8
                              * ((2498
                                * (v2 - v0 + ((v1 + 369) ^ 0x792578D6C49E2402) < (unint64_t)(v1 ^ 0x3F2u)
                                                                                               - 95)) ^ v1)))();
}

void sub_18CA299F0()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v1 = STACK[0xA50];
  STACK[0x3F0] = STACK[0xA50];
  v2 = STACK[0xA80] - 0x63443EC20C671196;
  STACK[0x3E0] = ((v2 + ((v0 - 452724200) & 0x1AFC0FFEu) - 1364) ^ 0xDFEFFFFEFF65F74ALL)
               + 0x74DD5F3F83BF7DF8
               + ((2 * (v2 + ((v0 - 452724200) & 0x1AFC0FFEu) - 1364)) & 0xBFDFFFFDFECBEE94);
  v3 = STACK[0xAA0] - 0x531893D51D197423;
  STACK[0x3D0] = (v3 ^ 0xFFEFFF7ED3B77F7ALL) + 0x54DD5FBFAF6DF5C8 + ((2 * v3) & 0xFFDFFEFDA76EFEF4);
  STACK[0x3C0] = ((v1 - 0x792578D6C49E2120) ^ 0x77CD5FBE8F7FFF6ELL)
               - 0x230000800C5A8A2CLL
               + ((2 * (v1 - 0x792578D6C49E2120)) & 0xEF9ABF7D1EFFFEDCLL);
  v4 = STACK[0xAC0] - 0x3E2D33369CB8839ALL;
  STACK[0x380] = (v4 ^ 0x54DFFFFEE3A57F7ALL) - 0x12A0C060800A38 + ((2 * v4) & 0xA9BFFFFDC74AFEF4);
  v5 = STACK[0xAE0] - 0x2A46190CE1F9AC95;
  STACK[0x370] = (v5 ^ 0x57CF5F3FCBF577D7) - 0x302000148D00295 + ((2 * v5) & 0xAF9EBE7F97EAEFAELL);
  v6 = STACK[0xB00];
  STACK[0x360] = STACK[0xB00];
  STACK[0x350] = ((v6 - 0x293EA326A189FEC4) ^ 0xD4FF5F3EA7EDFF4BLL)
               + 0x7FCDFFFFDB3775F7
               + ((2 * (v6 - 0x293EA326A189FEC4)) & 0xA9FEBE7D4FDBFE96);
  v7 = STACK[0xB10];
  STACK[0x340] = STACK[0xB10];
  STACK[0x330] = ((v7 - 0x100110462E4FAB50) ^ 0x75DF5F3ECFFFF57FLL)
               - 0x211200004CDA803DLL
               + ((2 * (v7 - 0x100110462E4FAB50)) & 0xEBBEBE7D9FFFEAFELL);
  v8 = STACK[0xA40] - 0x6B283AC1159CBF62;
  STACK[0x320] = (v8 ^ 0xF4CFFF7EDBBFFF46) + 0x5FFD5FBFA76575FCLL + ((2 * v8) & 0xE99FFEFDB77FFE8CLL);
  v9 = STACK[0xA30] - 0x65074BFF75FD537DLL;
  STACK[0x310] = (v9 ^ 0x5FED7F3FD77F7FDELL) - 0xB202001545A0A9CLL + ((2 * v9) & 0xBFDAFE7FAEFEFFBCLL);
  v10 = STACK[0xA20] - 0x713862EF8CBC724ALL;
  STACK[0x2F0] = (v10 ^ 0xDEEDFFBF8F357F46) + 0x75DF5F7EF3EFF5FCLL + ((2 * v10) & 0xBDDBFF7F1E6AFE8CLL);
  v11 = STACK[0xA10] - 0x41966AF8A5C20340;
  STACK[0x2E0] = (v11 ^ 0xF7DFDFFECF67F5D6) + 0x5CED7F3FB3BD7F6CLL + ((2 * v11) & 0xEFBFBFFD9ECFEBACLL);
  STACK[0x2D0] = ((STACK[0xA00] - 0x7CD859205AB9B7C6) ^ 0x75FDDF3FBBFFFF62)
               - 0x2130800138DA8A20
               + ((2 * (STACK[0xA00] - 0x7CD859205AB9B7C6)) & 0xEBFBBE7F77FFFEC4);
  v12 = STACK[0xB68];
  STACK[0x2C0] = STACK[0xB68];
  STACK[0x2B0] = ((v12 - 0x3B00A775DF608EC2) ^ 0xF5CF5FBE8BAFFD43)
               + 0x5EFDFF7FF77577FFLL
               + ((2 * (v12 - 0x3B00A775DF608EC2)) & 0xEB9EBF7D175FFA86);
  STACK[0x2A0] = ((v2 + 1306) ^ 0xDBCFEFDBB6BF1D7DLL)
               + 0x7CF7D77F5FF5F2FCLL
               + ((2 * (v2 + 1306)) & 0xB79FDFB76D7E3AFALL);
  STACK[0x290] = ((v1 - 0x792578D6C49E211ELL) ^ 0xDAD7C77F96F711F9)
               + 0x7DEFFFDB7FBDFE80
               + ((2 * (v1 - 0x792578D6C49E211ELL)) & 0xB5AF8EFF2DEE23F2);
  STACK[0x280] = ((v3 + 2) ^ 0xFDFFCFDFD6FD327BLL) + 0x5AC7F77B3FB7DDFELL + ((2 * (v3 + 2)) & 0xFBFF9FBFADFA64F6);
  STACK[0x270] = ((v4 + 2) ^ 0x7BE7C7FFBEBDDBFDLL) - 0x232000A4A808CB84 + ((2 * (v4 + 2)) & 0xF7CF8FFF7D7BB7FALL);
  STACK[0x260] = ((v5 + 2) ^ 0xF8E7FF7F1FB796FDLL) + 0x5FDFC7DBF6FD797CLL + ((2 * (v5 + 2)) & 0xF1CFFEFE3F6F2DFALL);
  STACK[0x250] = ((v8 + 2) ^ 0x58FFC75B56F71CFFLL) - 0x38000040420C86 + ((2 * (v8 + 2)) & 0xB1FF8EB6ADEE39FELL);
  STACK[0x240] = ((v6 - 0x293EA326A189FEC2) ^ 0xD9EFEF5B1FFDFFFBLL)
               + 0x7ED7D7FFF6B7107ELL
               + ((2 * (v6 - 0x293EA326A189FEC2)) & 0xB3DFDEB63FFBFFF6);
  STACK[0x230] = ((v7 - 0x100110462E4FAB4ELL) ^ 0xDFEFEFDB9EB7BBFBLL)
               + 0x78D7D77F77FD547ELL
               + ((2 * (v7 - 0x100110462E4FAB4ELL)) & 0xBFDFDFB73D6F77F6);
  STACK[0x220] = ((v9 + 2) ^ 0xFADFE7FF7EFFBE7FLL) + 0x5DE7DF5B97B551FALL + ((2 * (v9 + 2)) & 0xF5BFCFFEFDFF7CFELL);
  STACK[0x210] = ((v10 + 2) ^ 0xFEEFDFDB17B57C7BLL) + 0x59D7E77FFEFF93FELL + ((2 * (v10 + 2)) & 0xFDDFBFB62F6AF8F6);
  STACK[0x200] = ((v11 + 2) ^ 0x5AF7F7DB16B5B9F9) - 0x23030800000A980 + ((2 * (v11 + 2)) & 0xB5EFEFB62D6B73F2);
  STACK[0x410] = STACK[0x830];
  STACK[0x400] = STACK[0x6F0];
  JUMPOUT(0x18CA26CF0);
}

uint64_t sub_18CA29B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;

  if (v5 == 1556779682)
  {
    v8 = (_QWORD *)STACK[0x670];
    v9 = *(_QWORD *)(STACK[0x670] + 8);
    v10 = (_QWORD *)STACK[0x468];
    v10[1] = v9;
    *v10 = *v8;
    return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                          + 8
                                          * (((((v9 == 0) ^ (7 * (a5 ^ 0x25))) & 1)
                                            * (((a5 - 246293917) & 0xEAE2EC6) - 3380)) ^ (a5 + 2346)))
                              - 4))();
  }
  else if (v5 == 1556737630)
  {
    return (*(uint64_t (**)(void))(v6
                                + 8
                                * (int)(((*(_QWORD *)(STACK[0x7D8] - 0x47B5CC9A2E1B254BLL) == 0)
                                       * (((a5 + 1906444634) & 0x8E5DFBEF) - 637)) ^ (a5 - 312))))();
  }
  else
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                          + 8
                                          * ((1021
                                            * (((((a5 ^ 0x6BF) + 557) ^ (*(_QWORD *)(STACK[0x468] + 24) == 0)) & 1) == 0)) ^ (a5 + 188)))
                              - 8))();
  }
}

void sub_18CA29BDC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v1;
  *(_QWORD *)(v2 - 0x47B5CC9A2E1B2553) = v1;
  JUMPOUT(0x18CA298B8);
}

void sub_18CA29C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void (*a55)(void))
{
  uint64_t v55;

  a55();
  *(_QWORD *)(v55 + 24) = 0;
  ((void (*)(unint64_t))a55)(STACK[0x468]);
  JUMPOUT(0x18CA29C88);
}

uint64_t sub_18CA29D1C@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  _QWORD *v2;
  uint64_t v3;

  *v2 = a1;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((*a1 != 0) * ((v1 + 348139157) & 0xEB3FC7FA ^ 0xFFB)) ^ (v1 - 3223))))();
}

uint64_t sub_18CA29D64@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 8) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((51 * (*(_QWORD *)(a1 + 8) == 0)) ^ (v1 + 807)))
                            - (v1 + 1636)
                            + 2059))();
}

uint64_t sub_18CA29D98@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;

  *(_QWORD *)(STACK[0x7D8] - 0x47B5CC9A2E1B2553) = a1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*a1 == 0) * (((((v1 - 245528131) & 0xEA2797F) - 1086340318) & 0x40C037FF) + 47)) | (v1 - 245528131) & 0xEA2797F)))();
}

uint64_t sub_18CA29E00@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  *(_QWORD *)(STACK[0x7D8] - 0x47B5CC9A2E1B254BLL) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((187 * (*(_QWORD *)(STACK[0x670] + 24) != 0)) ^ (v1 - 1246)))
                            - ((v1 + 1114919508) & 0xBD8BAFFE ^ 0xA6ELL)))();
}

void sub_18CA29F20(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void (*a48)(void))
{
  ((void (*)(uint64_t))a48)(a1);
  *(_QWORD *)(STACK[0x670] + 24) = 0;
  a48();
  STACK[0x670] = 0;
  JUMPOUT(0x18CA29F54);
}

void sub_18CA29F6C()
{
  STACK[0x620] = 0x47B5CC9A2E1B2553;
  JUMPOUT(0x18CA29F90);
}

void sub_18CA2A000()
{
  STACK[0x788] = 0;
  JUMPOUT(0x18CA2A018);
}

uint64_t sub_18CA2A06C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 8 * (int)(((STACK[0x7B0] != 0) * ((v0 + 1654821959) & 0x9D5D6FFF ^ 0x54F)) ^ (v0 + 1616)));
  STACK[0x500] = STACK[0x7B0];
  return ((uint64_t (*)(void))(v2 - (v0 ^ 0x13CLL)))();
}

uint64_t sub_18CA2A0C8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_QWORD *)(v0 + 8) != 0x47B5CC9A2E1B2553)
                                          * ((v1 - 890431612) & 0x3512EBDD ^ 0x82C)) ^ v1))
                            - (v1 + 2485)
                            + 3880))();
}

uint64_t sub_18CA2A120@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x608] = 0;
  STACK[0x740] = 0x63443EC20C670C82;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((a1 == v2) ^ (v1 + 5)) & 1)
                                          * ((652 * (v1 ^ 0xF2E)) ^ 0x51B)) | v1))
                            - 4))();
}

uint64_t sub_18CA2A17C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  STACK[0x800] = *(_QWORD *)(v2 + 8 * v1) + ((v1 + 1999) | 0x207u) - 2571;
  LODWORD(STACK[0xB54]) = 1722036247;
  STACK[0xB58] = (unint64_t)&STACK[0x608];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((a1 != 0x47B5CC9A2E1B2553)
                                               * ((((v1 + 1999) | 0x207) + 1936114456) & 0x8C9937F8 ^ 0x50C)) ^ ((v1 + 1999) | 0x207)))
                            - 12))();
}

uint64_t sub_18CA2A274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((623 * (v6 == (a5 ^ 0x1D3 ^ (v5 + 967)))) ^ (a5 + 964))) - 12))();
}

uint64_t sub_18CA2A2AC()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x608] + 24);
  STACK[0x830] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((((v0 - 907747025) & 0x361B1F1D ^ 0xFFFFFC6E) + ((v0 + 326) | 0xA2))
                                               * (v2 == 0)) ^ v0))
                            - 8))();
}

uint64_t sub_18CA2A308()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = v1 - 376500973 + (v0 ^ 0x6B6u) + 1299 - 1304;
  STACK[0xA78] = v3;
  v4 = STACK[0x740];
  STACK[0xA80] = STACK[0x740];
  return (*(uint64_t (**)(void))(v2 + 8 * ((4020 * (0x63443EC20C670C05 - v4 + 25 * (v0 ^ 0x6B6u) + v3 > 9)) ^ v0)))();
}

void sub_18CA2A374()
{
  JUMPOUT(0x18CA2A394);
}

uint64_t sub_18CA2ADC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  int v68;
  uint64_t v69;

  STACK[0x930] = STACK[0xA88];
  return (*(uint64_t (**)(void))(v69
                              + 8
                              * ((809
                                * (((LODWORD(STACK[0xA94]) == ((((a68 - 776668989) & 0x2E4B07BE) + 609603615) & 0xDBAA2F5E ^ (v68 + 1304))) ^ (((a68 - 61) & 0xBE) - 121)) & 1)) ^ (a68 - 776668989) & 0x2E4B07BEu)))();
}

uint64_t sub_18CA2AE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((2169 * (v6 == v5 + ((a5 - 136) | 0x62) - 1266)) ^ (a5 - 38)))
                            - 8))();
}

uint64_t sub_18CA2AE90()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x958] + 24);
  STACK[0x6F0] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 != 0) * (((v0 - 897187158) & 0x3579FD7B) + 804)) ^ v0)) - 8))();
}

uint64_t sub_18CA2AEE0()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = (v1 - 376500973);
  STACK[0xA98] = v3;
  v4 = STACK[0x648];
  STACK[0xAA0] = STACK[0x648];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((v3 + 0x531893D51D197427 - v4 > 9) * (4 * (v0 ^ 0x5B4) - 724)) ^ v0))
                            - 8))();
}

void sub_18CA2AF50()
{
  JUMPOUT(0x18CA2AF6CLL);
}

uint64_t sub_18CA2AF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  int v68;
  uint64_t v69;

  STACK[0x930] = STACK[0xAA8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v69
                                        + 8
                                        * (((LODWORD(STACK[0xAB4]) == v68) * (((a68 ^ 0x554) + 1228) ^ 0x933)) ^ a68 ^ 0x1EA))
                            - 4 * (a68 ^ 0x554u)
                            + 296))();
}

uint64_t sub_18CA2AFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7 + 8 * ((3178 * (v6 == (a5 ^ 0x134 ^ (v5 + 1004)))) ^ (a5 - 236))))();
}

uint64_t sub_18CA2B008()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x4F0] + 24);
  STACK[0x8D0] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * ((455 * ((((v0 - 562) ^ v0 ^ (v2 == 0)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_18CA2B04C()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = (v1 - 376500973);
  STACK[0xAB8] = v3;
  v4 = STACK[0x7E0];
  STACK[0xAC0] = STACK[0x7E0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v3 + 0x3E2D33369CB8839ELL - v4 > 9) * (v0 ^ 0x19B ^ (v0 + 798) ^ 0x6B7)) ^ v0))
                            - 4))();
}

void sub_18CA2B0B4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  int v13;

  v13 = v12 + 2571;
  v0 = STACK[0xA50];
  STACK[0x3F0] = STACK[0xA50];
  v1 = STACK[0xA80] - 0x63443EC20C671196;
  STACK[0x3E0] = ((v1 + (v13 - 1364)) ^ 0xDFEFFFFEFF65F74ALL)
               + 0x74DD5F3F83BF7DF8
               + ((2 * (v1 + (v13 - 1364))) & 0xBFDFFFFDFECBEE94);
  v2 = STACK[0xAA0] - 0x531893D51D197423;
  STACK[0x3D0] = (v2 ^ 0xFFEFFF7ED3B77F7ALL) + 0x54DD5FBFAF6DF5C8 + ((2 * v2) & 0xFFDFFEFDA76EFEF4);
  STACK[0x3C0] = ((v0 - 0x792578D6C49E2120) ^ 0x77CD5FBE8F7FFF6ELL)
               - 0x230000800C5A8A2CLL
               + ((2 * (v0 - 0x792578D6C49E2120)) & 0xEF9ABF7D1EFFFEDCLL);
  v3 = STACK[0xAC0] - 0x3E2D33369CB8839ALL;
  STACK[0x380] = (v3 ^ 0x54DFFFFEE3A57F7ALL) - 0x12A0C060800A38 + ((2 * v3) & 0xA9BFFFFDC74AFEF4);
  v4 = STACK[0xAE0] - 0x2A46190CE1F9AC95;
  STACK[0x370] = (v4 ^ 0x57CF5F3FCBF577D7) - 0x302000148D00295 + ((2 * v4) & 0xAF9EBE7F97EAEFAELL);
  v5 = STACK[0xB00];
  STACK[0x360] = STACK[0xB00];
  STACK[0x350] = ((v5 - 0x293EA326A189FEC4) ^ 0xD4FF5F3EA7EDFF4BLL)
               + 0x7FCDFFFFDB3775F7
               + ((2 * (v5 - 0x293EA326A189FEC4)) & 0xA9FEBE7D4FDBFE96);
  v6 = STACK[0xB10];
  STACK[0x340] = STACK[0xB10];
  STACK[0x330] = ((v6 - 0x100110462E4FAB50) ^ 0x75DF5F3ECFFFF57FLL)
               - 0x211200004CDA803DLL
               + ((2 * (v6 - 0x100110462E4FAB50)) & 0xEBBEBE7D9FFFEAFELL);
  v7 = STACK[0xA40] - 0x6B283AC1159CBF62;
  STACK[0x320] = (v7 ^ 0xF4CFFF7EDBBFFF46) + 0x5FFD5FBFA76575FCLL + ((2 * v7) & 0xE99FFEFDB77FFE8CLL);
  v8 = STACK[0xA30] - 0x65074BFF75FD537DLL;
  STACK[0x310] = (v8 ^ 0x5FED7F3FD77F7FDELL) - 0xB202001545A0A9CLL + ((2 * v8) & 0xBFDAFE7FAEFEFFBCLL);
  v9 = STACK[0xA20] - 0x713862EF8CBC724ALL;
  STACK[0x2F0] = (v9 ^ 0xDEEDFFBF8F357F46) + 0x75DF5F7EF3EFF5FCLL + ((2 * v9) & 0xBDDBFF7F1E6AFE8CLL);
  v10 = STACK[0xA10] - 0x41966AF8A5C20340;
  STACK[0x2E0] = (v10 ^ 0xF7DFDFFECF67F5D6) + 0x5CED7F3FB3BD7F6CLL + ((2 * v10) & 0xEFBFBFFD9ECFEBACLL);
  STACK[0x2D0] = ((STACK[0xA00] - 0x7CD859205AB9B7C6) ^ 0x75FDDF3FBBFFFF62)
               - 0x2130800138DA8A20
               + ((2 * (STACK[0xA00] - 0x7CD859205AB9B7C6)) & 0xEBFBBE7F77FFFEC4);
  v11 = STACK[0xB68];
  STACK[0x2C0] = STACK[0xB68];
  STACK[0x2B0] = ((v11 - 0x3B00A775DF608EC2) ^ 0xF5CF5FBE8BAFFD43)
               + 0x5EFDFF7FF77577FFLL
               + ((2 * (v11 - 0x3B00A775DF608EC2)) & 0xEB9EBF7D175FFA86);
  STACK[0x2A0] = ((v1 + 1306) ^ 0xDBCFEFDBB6BF1D7DLL)
               + 0x7CF7D77F5FF5F2FCLL
               + ((2 * (v1 + 1306)) & 0xB79FDFB76D7E3AFALL);
  STACK[0x290] = ((v0 - 0x792578D6C49E211ELL) ^ 0xDAD7C77F96F711F9)
               + 0x7DEFFFDB7FBDFE80
               + ((2 * (v0 - 0x792578D6C49E211ELL)) & 0xB5AF8EFF2DEE23F2);
  STACK[0x280] = ((v2 + 2) ^ 0xFDFFCFDFD6FD327BLL) + 0x5AC7F77B3FB7DDFELL + ((2 * (v2 + 2)) & 0xFBFF9FBFADFA64F6);
  STACK[0x270] = ((v3 + 2) ^ 0x7BE7C7FFBEBDDBFDLL) - 0x232000A4A808CB84 + ((2 * (v3 + 2)) & 0xF7CF8FFF7D7BB7FALL);
  STACK[0x260] = ((v4 + 2) ^ 0xF8E7FF7F1FB796FDLL) + 0x5FDFC7DBF6FD797CLL + ((2 * (v4 + 2)) & 0xF1CFFEFE3F6F2DFALL);
  STACK[0x250] = ((v7 + 2) ^ 0x58FFC75B56F71CFFLL) - 0x38000040420C86 + ((2 * (v7 + 2)) & 0xB1FF8EB6ADEE39FELL);
  STACK[0x240] = ((v5 - 0x293EA326A189FEC2) ^ 0xD9EFEF5B1FFDFFFBLL)
               + 0x7ED7D7FFF6B7107ELL
               + ((2 * (v5 - 0x293EA326A189FEC2)) & 0xB3DFDEB63FFBFFF6);
  STACK[0x230] = ((v6 - 0x100110462E4FAB4ELL) ^ 0xDFEFEFDB9EB7BBFBLL)
               + 0x78D7D77F77FD547ELL
               + ((2 * (v6 - 0x100110462E4FAB4ELL)) & 0xBFDFDFB73D6F77F6);
  STACK[0x220] = ((v8 + 2) ^ 0xFADFE7FF7EFFBE7FLL) + 0x5DE7DF5B97B551FALL + ((2 * (v8 + 2)) & 0xF5BFCFFEFDFF7CFELL);
  STACK[0x210] = ((v9 + 2) ^ 0xFEEFDFDB17B57C7BLL) + 0x59D7E77FFEFF93FELL + ((2 * (v9 + 2)) & 0xFDDFBFB62F6AF8F6);
  STACK[0x200] = ((v10 + 2) ^ 0x5AF7F7DB16B5B9F9) - 0x23030800000A980 + ((2 * (v10 + 2)) & 0xB5EFEFB62D6B73F2);
  STACK[0x410] = STACK[0x830];
  STACK[0x400] = STACK[0x6F0];
  JUMPOUT(0x18CA26CF0);
}

uint64_t sub_18CA2B190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  int v68;
  uint64_t v69;

  STACK[0x838] = STACK[0xAE8];
  return (*(uint64_t (**)(void))(v69
                              + 8
                              * ((84 * (LODWORD(STACK[0xAF4]) == (((a68 - 503) | 0xC0) ^ (v68 - 351)))) ^ (a68 - 355))))();
}

uint64_t sub_18CA2B1DC@<X0>(uint64_t a1@<X4>, int a2@<W5>, int a3@<W7>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;

  v13 = (v10 - 1612878502);
  v14 = v10 - 1;
  v15 = v11 + v13;
  v16 = *(_BYTE *)(v11 + v13);
  v17 = a4 + v13;
  v18 = ((v15 * a3) ^ ((v15 * a3) >> 16)) * (a3 + 2 * (v9 ^ 0xA2D) - 1304);
  v19 = __ROR8__(v17, 8);
  v20 = (v19 & 0xF8FFFFFFFFFFFFFFLL)
      - ((2 * (v19 & 0xF8FFFFFFFFFFFFFFLL) + 0x14CBF4DF0C6D61BALL) & 0x45F4E312C8D1A62ALL)
      - 0xE9F940715607C0ELL;
  v21 = __ROR8__(v20 ^ 0x55583108E9CFF557, 8);
  v22 = (((2 * (v21 + (v20 ^ 0x677E274D87A73BDLL))) & 0x4940ECB8509FA882)
       - (v21
        + (v20 ^ 0x677E274D87A73BDLL))
       + 0x5B5F89A3D7B02BBELL) ^ 0xEBEF57C6F8B523E6;
  *((_QWORD *)&v23 + 1) = v20 ^ 0x677E274D87A73BDLL;
  *(_QWORD *)&v23 = v20;
  v24 = v22 ^ (v23 >> 61);
  v25 = (__ROR8__(v22, 8) + v24) ^ 0x7A587216E06F0656;
  v26 = v25 ^ __ROR8__(v24, 61);
  v27 = (__ROR8__(v25, 8) + v26) ^ 0xDC9BC02F237F7F2BLL;
  v28 = v27 ^ __ROR8__(v26, 61);
  v29 = (__ROR8__(v27, 8) + v28) ^ 0x90741906A0647F25;
  v30 = __ROR8__(v29, 8);
  v31 = v29 ^ __ROR8__(v28, 61);
  v32 = (0x716EBE76360E7C29
       - ((v30 + v31) ^ 0xCC50ED9DCE4A61F0 | 0x716EBE76360E7C29)
       + ((v30 + v31) ^ 0xCC50ED9DCE4A61F0 | 0x8E914189C9F183D6)) ^ 0xCA89A73E24B805A5;
  v33 = v32 ^ __ROR8__(v31, 61);
  *(_QWORD *)&v23 = __ROR8__(v32, 8);
  *(_BYTE *)(v17 - 0x61123CB0DDF7F15BLL) = *(_BYTE *)(a7 + (v18 >> 24)) ^ v16 ^ *(_BYTE *)((v18 >> 24) + a9 + 1) ^ *(_BYTE *)((v18 >> 24) + a8 + 5) ^ v18 ^ (-105 * ((((v15 * a3) ^ ((v15 * a3) >> 16)) * (a3 + 2 * (v9 ^ 0xA2D) - 1304)) >> 24)) ^ (((__ROR8__((((2 * (v23 + v33)) & 0xF337A6535E0A3A7ELL) - (v23 + v33) - 0x799BD329AF051D40) ^ 0xF377866A0AC1D978, 8) + ((((2 * ((_QWORD)v23 + v33)) & 0xF337A6535E0A3A7ELL) - ((_QWORD)v23 + v33) - 0x799BD329AF051D40) ^ 0xF377866A0AC1D978 ^ __ROR8__(v33, 61))) ^ a1) >> (8 * (v17 & 7u)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((1214 * (v14 == a2)) ^ v9)) - 8))();
}

uint64_t sub_18CA2B474()
{
  return ((uint64_t (*)(void))STACK[0x9D0])();
}

uint64_t sub_18CA2B47C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  int v68;
  uint64_t v69;

  STACK[0x838] = STACK[0xAC8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v69
                                        + 8
                                        * ((1446 * (LODWORD(STACK[0xAD4]) == v68 + 22 * (a68 ^ 0x50F) - 202 - 304)) ^ (22 * (a68 ^ 0x50F))))
                            - 4))();
}

uint64_t sub_18CA2B4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((a5 + 904) ^ (316 * (v6 == v5))))
                            - ((a5 + 587502976) & 0xDCFB6DFF)
                            + 2188))();
}

uint64_t sub_18CA2B51C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x730] + 24);
  STACK[0x798] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 == 0) * (((v0 - 429107550) & 0x1993A5DD) - 1248)) ^ v0))
                            - 12))();
}

uint64_t sub_18CA2B56C()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = ((44 * ((v0 - 576) ^ 0x2DA)) ^ 0xE98F0D4B) + v1;
  STACK[0xAD8] = v3;
  v4 = STACK[0x6E0];
  STACK[0xAE0] = STACK[0x6E0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3891 * (0x2A46190CE1F9AC99 - v4 + v3 > 9)) ^ (v0 - 576))) - 4))();
}

void sub_18CA2B5E8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  int v13;

  v13 = v12 ^ 0xA34;
  v0 = STACK[0xA50];
  STACK[0x3F0] = STACK[0xA50];
  v1 = STACK[0xA80] - 0x63443EC20C671196;
  STACK[0x3E0] = ((v1 + (v13 - 1364)) ^ 0xDFEFFFFEFF65F74ALL)
               + 0x74DD5F3F83BF7DF8
               + ((2 * (v1 + (v13 - 1364))) & 0xBFDFFFFDFECBEE94);
  v2 = STACK[0xAA0] - 0x531893D51D197423;
  STACK[0x3D0] = (v2 ^ 0xFFEFFF7ED3B77F7ALL) + 0x54DD5FBFAF6DF5C8 + ((2 * v2) & 0xFFDFFEFDA76EFEF4);
  STACK[0x3C0] = ((v0 - 0x792578D6C49E2120) ^ 0x77CD5FBE8F7FFF6ELL)
               - 0x230000800C5A8A2CLL
               + ((2 * (v0 - 0x792578D6C49E2120)) & 0xEF9ABF7D1EFFFEDCLL);
  v3 = STACK[0xAC0] - 0x3E2D33369CB8839ALL;
  STACK[0x380] = (v3 ^ 0x54DFFFFEE3A57F7ALL) - 0x12A0C060800A38 + ((2 * v3) & 0xA9BFFFFDC74AFEF4);
  v4 = STACK[0xAE0] - 0x2A46190CE1F9AC95;
  STACK[0x370] = (v4 ^ 0x57CF5F3FCBF577D7) - 0x302000148D00295 + ((2 * v4) & 0xAF9EBE7F97EAEFAELL);
  v5 = STACK[0xB00];
  STACK[0x360] = STACK[0xB00];
  STACK[0x350] = ((v5 - 0x293EA326A189FEC4) ^ 0xD4FF5F3EA7EDFF4BLL)
               + 0x7FCDFFFFDB3775F7
               + ((2 * (v5 - 0x293EA326A189FEC4)) & 0xA9FEBE7D4FDBFE96);
  v6 = STACK[0xB10];
  STACK[0x340] = STACK[0xB10];
  STACK[0x330] = ((v6 - 0x100110462E4FAB50) ^ 0x75DF5F3ECFFFF57FLL)
               - 0x211200004CDA803DLL
               + ((2 * (v6 - 0x100110462E4FAB50)) & 0xEBBEBE7D9FFFEAFELL);
  v7 = STACK[0xA40] - 0x6B283AC1159CBF62;
  STACK[0x320] = (v7 ^ 0xF4CFFF7EDBBFFF46) + 0x5FFD5FBFA76575FCLL + ((2 * v7) & 0xE99FFEFDB77FFE8CLL);
  v8 = STACK[0xA30] - 0x65074BFF75FD537DLL;
  STACK[0x310] = (v8 ^ 0x5FED7F3FD77F7FDELL) - 0xB202001545A0A9CLL + ((2 * v8) & 0xBFDAFE7FAEFEFFBCLL);
  v9 = STACK[0xA20] - 0x713862EF8CBC724ALL;
  STACK[0x2F0] = (v9 ^ 0xDEEDFFBF8F357F46) + 0x75DF5F7EF3EFF5FCLL + ((2 * v9) & 0xBDDBFF7F1E6AFE8CLL);
  v10 = STACK[0xA10] - 0x41966AF8A5C20340;
  STACK[0x2E0] = (v10 ^ 0xF7DFDFFECF67F5D6) + 0x5CED7F3FB3BD7F6CLL + ((2 * v10) & 0xEFBFBFFD9ECFEBACLL);
  STACK[0x2D0] = ((STACK[0xA00] - 0x7CD859205AB9B7C6) ^ 0x75FDDF3FBBFFFF62)
               - 0x2130800138DA8A20
               + ((2 * (STACK[0xA00] - 0x7CD859205AB9B7C6)) & 0xEBFBBE7F77FFFEC4);
  v11 = STACK[0xB68];
  STACK[0x2C0] = STACK[0xB68];
  STACK[0x2B0] = ((v11 - 0x3B00A775DF608EC2) ^ 0xF5CF5FBE8BAFFD43)
               + 0x5EFDFF7FF77577FFLL
               + ((2 * (v11 - 0x3B00A775DF608EC2)) & 0xEB9EBF7D175FFA86);
  STACK[0x2A0] = ((v1 + 1306) ^ 0xDBCFEFDBB6BF1D7DLL)
               + 0x7CF7D77F5FF5F2FCLL
               + ((2 * (v1 + 1306)) & 0xB79FDFB76D7E3AFALL);
  STACK[0x290] = ((v0 - 0x792578D6C49E211ELL) ^ 0xDAD7C77F96F711F9)
               + 0x7DEFFFDB7FBDFE80
               + ((2 * (v0 - 0x792578D6C49E211ELL)) & 0xB5AF8EFF2DEE23F2);
  STACK[0x280] = ((v2 + 2) ^ 0xFDFFCFDFD6FD327BLL) + 0x5AC7F77B3FB7DDFELL + ((2 * (v2 + 2)) & 0xFBFF9FBFADFA64F6);
  STACK[0x270] = ((v3 + 2) ^ 0x7BE7C7FFBEBDDBFDLL) - 0x232000A4A808CB84 + ((2 * (v3 + 2)) & 0xF7CF8FFF7D7BB7FALL);
  STACK[0x260] = ((v4 + 2) ^ 0xF8E7FF7F1FB796FDLL) + 0x5FDFC7DBF6FD797CLL + ((2 * (v4 + 2)) & 0xF1CFFEFE3F6F2DFALL);
  STACK[0x250] = ((v7 + 2) ^ 0x58FFC75B56F71CFFLL) - 0x38000040420C86 + ((2 * (v7 + 2)) & 0xB1FF8EB6ADEE39FELL);
  STACK[0x240] = ((v5 - 0x293EA326A189FEC2) ^ 0xD9EFEF5B1FFDFFFBLL)
               + 0x7ED7D7FFF6B7107ELL
               + ((2 * (v5 - 0x293EA326A189FEC2)) & 0xB3DFDEB63FFBFFF6);
  STACK[0x230] = ((v6 - 0x100110462E4FAB4ELL) ^ 0xDFEFEFDB9EB7BBFBLL)
               + 0x78D7D77F77FD547ELL
               + ((2 * (v6 - 0x100110462E4FAB4ELL)) & 0xBFDFDFB73D6F77F6);
  STACK[0x220] = ((v8 + 2) ^ 0xFADFE7FF7EFFBE7FLL) + 0x5DE7DF5B97B551FALL + ((2 * (v8 + 2)) & 0xF5BFCFFEFDFF7CFELL);
  STACK[0x210] = ((v9 + 2) ^ 0xFEEFDFDB17B57C7BLL) + 0x59D7E77FFEFF93FELL + ((2 * (v9 + 2)) & 0xFDDFBFB62F6AF8F6);
  STACK[0x200] = ((v10 + 2) ^ 0x5AF7F7DB16B5B9F9) - 0x23030800000A980 + ((2 * (v10 + 2)) & 0xB5EFEFB62D6B73F2);
  STACK[0x410] = STACK[0x830];
  STACK[0x400] = STACK[0x6F0];
  JUMPOUT(0x18CA26CF0);
}

uint64_t sub_18CA2B660()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((STACK[0x640] == 0) * (((v0 - 1917) | 0x20) ^ 0x3A9)) ^ v0))
                            - (v0 - 1959)
                            + 915))();
}

uint64_t sub_18CA2B69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(_QWORD),int a22,int a23)
{
  int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;

  v25 = a21(LODWORD(STACK[0x848]) ^ (a7 - 365) ^ (v23 + 670451750) & 0xD809B7F7);
  v26 = STACK[0x308];
  STACK[0xAE8] = v25 + 0x61123CB0DDF7F15BLL;
  if (v25)
    a23 = v24;
  LODWORD(STACK[0xAF4]) = a23;
  return (*(uint64_t (**)(void))(v26 + 8 * ((4034 * (v25 != 0)) ^ v23)))();
}

uint64_t sub_18CA2B714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (v6 + 947);
  STACK[0x9D0] = (v8 ^ 0xFFFFFFFFFFFFF8B6) + *(_QWORD *)(v7 + 8 * (v6 - 918));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v7 + 8 * (int)((4075 * (((v5 - 1257790009 - ((2 * v5) & 0x6A0F4B8E)) ^ 0x43F9132A) + 1763957688 + (((v5 - 1257790009 - ((2 * v5) & 0x6A0F4B8E)) << ((8 * ((v6 - 77) ^ 0xE9)) ^ 0x19)) & 0xEDFD6DDA ^ (((v6 + 355531602) & 0xEACF09B7) + 1745699049)) != 1612878501)) ^ v8))
                                                                                       - 8))(a1, a2, a3, a4, 0xB1D7AB5296A4827ALL);
}

uint64_t sub_18CA2B74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  int v68;
  int v69;
  int v70;
  uint64_t v71;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v71
                                                                                                  + 8 * ((84 * (v68 == (((v69 - 148) | 0xC0) ^ (v70 - 351)))) ^ v69)))(a1, a2, a3, a4, a68, a6, 2654288601);
}

uint64_t sub_18CA2B794@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  STACK[0x838] = 0x61123CB0DDF7F15BLL;
  LODWORD(STACK[0x848]) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((3567 * (v2 == v3)) ^ (2 * (a2 ^ 0x379))))
                            - ((2 * (a2 ^ 0x379) - 40) | 0x410u)
                            + 1300))();
}

uint64_t sub_18CA2B7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((((LODWORD(STACK[0x848]) ^ (a7 - 25)) > 149 * (v7 ^ 0x12Au)
                                                                                               - 3843)
                                          * (((v7 - 304) | 0x518) ^ 0x147F)) ^ v7))
                            - 4))();
}

uint64_t sub_18CA2B844@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x7B0];
  STACK[0x6E8] = STACK[0x778] + 108;
  STACK[0x588] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 != 0) * (a1 ^ 0xF93 ^ (a1 - 2570) ^ 0x5A2)) ^ a1)))();
}

void sub_18CA2B88C()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0x498] = ((v0 + 2714) ^ 0xFFFFFFFFFFFFF4B3) + *(_QWORD *)(v1 + 8 * v0);
  JUMPOUT(0x18CA2B914);
}

uint64_t sub_18CA2B9BC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((2322 * (v2 == ((v0 - 118392281) & 0x70E86EE ^ (v1 + 490)))) ^ (v0 - 1000)))
                            - 4))();
}

uint64_t sub_18CA2BA00@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((*(unsigned __int8 *)(STACK[0x778] + 5) == (((a1 - 38) | 0x10) ^ 0x37))
                                               * ((a1 + 2115584812) & 0x81E6BFFD ^ 0x14C)) ^ a1))
                            - 8))();
}

uint64_t sub_18CA2BA5C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0x7B0];
  STACK[0x690] = v1 + 116;
  STACK[0x7E8] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v3 == 0) * ((v0 ^ 0xC40) - 1242)) ^ v0)) - 4))();
}

uint64_t sub_18CA2BA9C@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  unint64_t v2;
  int v3;
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  STACK[0x708] = v2;
  STACK[0x7F0] = 0;
  LODWORD(STACK[0x914]) = a1;
  STACK[0x5E8] = 0x293EA326A189FEC8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308]
                                        + 8
                                        * (((((v4 == 0x47B5CC9A2E1B2553) ^ (v3 + 19)) & 1)
                                          * ((v3 - 1212) ^ 0xA12)) ^ (v3 - 1004)))
                            - 12))();
}

void sub_18CA2BB10()
{
  int v0;

  STACK[0x800] = ((17 * (v0 ^ 0xCBu)) ^ 0xFFFFFFFFFFFFF5FBLL) + *(_QWORD *)(STACK[0x308] + 8 * v0);
  JUMPOUT(0x18CA2BB38);
}

uint64_t sub_18CA2BBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  int v21;
  uint64_t v22;
  unint64_t v23;

  v22 = a21(32);
  v23 = STACK[0x308];
  STACK[0x808] = v22;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23
                                        + 8
                                        * (((v22 != 0) * ((((v21 - 1256) | 0x841) - 304) ^ 0x4C0)) ^ ((v21 - 1256) | 0x841)))
                            - (((v21 - 1256) | 0x841u) ^ 0x87DLL)))();
}

uint64_t sub_18CA2BC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  int v21;
  uint64_t v22;
  unint64_t v23;

  v22 = a21(32);
  v23 = STACK[0x308];
  STACK[0x918] = v22;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((3168 * (v22 != 0)) ^ v21))
                            - ((((v21 + 1437230516) & 0xAA559B7B) - 857) ^ 0x51CLL)))();
}

uint64_t sub_18CA2BC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  int v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  BOOL v73;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;

  v71 = v68 + 1082;
  v72 = *(_QWORD *)(v70 + 8 * (v68 - 1275)) - 4;
  v76 = vdupq_n_s64(0x38uLL);
  *(int64x2_t *)&STACK[0x310] = vdupq_n_s64(0x4A65FA6F8636B0DDuLL);
  *(int64x2_t *)&STACK[0x2E0] = vdupq_n_s64(0x11999F5CB851D3A7uLL);
  *(int64x2_t *)&STACK[0x2F0] = vdupq_n_s64(0x159A059079C94F22uLL);
  *(int64x2_t *)&STACK[0x2D0] = vdupq_n_s64(0xE86660A347AE2C58);
  *(int64x2_t *)&STACK[0x260] = vdupq_n_s64(0x5B8596493F56B924uLL);
  *(int64x2_t *)&STACK[0x3C0] = vdupq_n_s64(0x705201AD2882EBBAuLL);
  *(int64x2_t *)&STACK[0x320] = vdupq_n_s64(0xB584ED60AF9AE1E0);
  *(int64x2_t *)&STACK[0x330] = vdupq_n_s64(0x7EF7606908217CE1uLL);
  *(int64x2_t *)&STACK[0x360] = vdupq_n_s64(0xA53D894FA8328F10);
  *(int64x2_t *)&STACK[0x370] = vdupq_n_s64(0xB82900D6944175DDLL);
  *(int64x2_t *)&STACK[0x340] = vdupq_n_s64(0x96B179674EAE71A8);
  *(int64x2_t *)&STACK[0x350] = vdupq_n_s64(0xCAB66FB6F7A90FD5);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0x694E8698B1518E57uLL);
  *(int64x2_t *)&STACK[0x2C0] = vdupq_n_s64(0xBC8612A97C0F0F6ALL);
  *(int64x2_t *)&STACK[0x290] = vdupq_n_s64(0xE1068DB2925269D4);
  *(int64x2_t *)&STACK[0x2A0] = vdupq_n_s64(0xFFFFFFFFFFFFFFFELL);
  *(int64x2_t *)&STACK[0x270] = vdupq_n_s64(0x15ADC2E4560DC4A1uLL);
  *(int64x2_t *)&STACK[0x280] = vdupq_n_s64(0xA47A69B6C0A946DBLL);
  v75 = vdupq_n_s64(0x7513AABC5A3B3BB8uLL);
  *(int64x2_t *)&STACK[0x240] = vdupq_n_s64(0xB0B0DE652F050858);
  *(int64x2_t *)&STACK[0x250] = vdupq_n_s64(0x5CFBE325FF8E3A9BuLL);
  v77 = vdupq_n_s64(0x7F9FDCF5230EBA50uLL);
  v78 = vdupq_n_s64(0xC04615B9E28B60uLL);
  STACK[0x998] = v72;
  v73 = (((v68 - 1296) | 0x510) ^ 0xFEBFFA98) == -20971664;
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 8 * ((15 * (((v71 - 105) ^ v73) & 1)) ^ v71)))((v71 + 407), 15 * (((v71 - 105) ^ v73) & 1u), 16 * (((v71 - 105) ^ v73) & 1u), 716060542, a68, 3578906753, 0x7F9FDCF5230EBA50, 0xCAB66FB6F7A90FD5, a9, a10, a11, a12, a13, a14, v69, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           v75.i64[0],
           v75.i64[1],
           v76.i64[0],
           v76.i64[1],
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           v77.i64[0],
           v77.i64[1],
           v78.i64[0],
           v78.i64[1]);
}

void sub_18CA2BCC0()
{
  uint64_t v0;

  STACK[0x800] = *(_QWORD *)(STACK[0x308] + 8 * v0) + (v0 + 2563) - 2575;
  JUMPOUT(0x18CA2BCDCLL);
}

void sub_18CA2BD30()
{
  JUMPOUT(0x18CA2BD4CLL);
}

uint64_t sub_18CA2BDC0@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)STACK[0xB58] = a1;
  return ((uint64_t (*)(void))STACK[0x800])();
}

uint64_t sub_18CA2BDD0()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_18CA2BDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v5;
  uint64_t v6;
  _BOOL4 v7;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;

  if (v5 == 1556779682)
  {
    v9 = (_QWORD *)STACK[0x440];
    v10 = *(_QWORD *)(STACK[0x440] + 8);
    v11 = (_QWORD *)STACK[0x590];
    v11[1] = v10;
    *v11 = *v9;
    return (*(uint64_t (**)(void))(v6 + 8 * (int)(((v10 == 0) * ((a5 + 381601479) & 0xE9413F6C ^ 0xB1C)) ^ (a5 + 1540))))();
  }
  else if (v5 == 1556737630)
  {
    v7 = *(_QWORD *)(STACK[0x4B8] - 0x47B5CC9A2E1B254BLL) != 0;
    return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)(((4 * v7) | (8 * v7)) ^ (a5 + 206))) - (a5 ^ 0x51CLL)))();
  }
  else
  {
    return (*(uint64_t (**)(void))(v6 + 8 * (int)((230 * (v5 != a5 + 1556778378)) ^ (a5 + 1113))))();
  }
}

uint64_t sub_18CA2C2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 != 0) * (((a5 - 517) | 0x844) ^ 0xB5F)) | (a5 - 310))))();
}

void sub_18CA2C308(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v1;
  *(_QWORD *)(v2 - 0x47B5CC9A2E1B2553) = v1;
  JUMPOUT(0x18CA2C32CLL);
}

uint64_t sub_18CA2C338@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  _QWORD *v2;
  uint64_t v3;

  *v2 = a1;
  return (*(uint64_t (**)(void))(v3 + 8 * (((*a1 != 0) * ((((v1 ^ 0x8AE) - 207) | 0x844) ^ 0xB5F)) | v1 ^ 0x8AE)))();
}

uint64_t sub_18CA2C378@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  return sub_18CA2C384();
}

uint64_t sub_18CA2C384@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((52 * (((*(_QWORD *)(a1 + 8) == 0) ^ (v1 + 12)) & 1)) ^ v1))
                            - 49 * (v1 ^ 0xB75u)
                            + 1662))();
}

uint64_t sub_18CA2C3C8@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((*a1 == 0) * (v1 + 1149)) ^ v1)) - 12))();
}

uint64_t sub_18CA2C3F0()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((v0 - 2205) | 0x200) + 1693) ^ ((v0 - 2465) | 0x9B0))
                                * (*(_QWORD *)(STACK[0x440] + 24) == 0)) ^ v0)))();
}

void sub_18CA2C42C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void (*a48)(void))
{
  ((void (*)(uint64_t))a48)(a1);
  *(_QWORD *)(STACK[0x440] + 24) = 0;
  a48();
  STACK[0x440] = 0;
  JUMPOUT(0x18CA2C508);
}

uint64_t sub_18CA2C54C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_QWORD *)(STACK[0x590] + 24) == 0) * (((a1 - 45) | 0x41) - 1589)) ^ a1))
                            - 8))();
}

uint64_t sub_18CA2C580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void (*a55)(void))
{
  uint64_t v55;
  uint64_t v56;

  a55();
  *(_QWORD *)(v55 + 24) = 0;
  v56 = ((uint64_t (*)(uint64_t))a55)(v55);
  return ((uint64_t (*)(uint64_t))STACK[0x550])(v56);
}

void sub_18CA2C82C()
{
  JUMPOUT(0x18CA2C84CLL);
}

uint64_t sub_18CA2C89C@<X0>(int a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v22)(unint64_t **);

  v19 = a1 | 0x504u;
  v20 = (a5 + v15);
  v21 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * (int)((8160 * ((int)v20 - 737032190 < (((_DWORD)v19 - 2797) | 0x18u) - 1296)) ^ v19)) - 12);
  v22 = off_1E2538470[v19 & 0x4C4EC05C];
  STACK[0x410] = (unint64_t)off_1E2538470[(int)(v19 ^ 0xFCE)];
  STACK[0x3E0] = (unint64_t)v22 - 4;
  STACK[0x3F0] = (unint64_t)off_1E2538470[(int)(v19 ^ 0xF2F)] - 4;
  STACK[0x3D0] = v17;
  STACK[0x400] = v16;
  return v21(v19, v20, v21, a2, a3, a4, 0x694E8698B1518E57, 0xCAB66FB6F7A90FD5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_18CA2CA54(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27)
{
  char v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  _BOOL4 v34;
  uint64_t (*v35)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v28 = a1 - 1433;
  v29 = (a1 - 2103824703) & 0x7D65CDF7;
  v30 = a2 - 737032191;
  v31 = v30 & 0xF;
  v32 = (v29 ^ 0xFFFFF651) + 163 * (v28 ^ 0xA5C);
  v34 = ((a27 + 2 * v27 + 1) & 0xFu) < v31 || v30 > v32;
  v35 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x308] + 8 * ((57 * v34) ^ v28)) - 4);
  return v35(v29, v35, v32, v31, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_18CA2CADC(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,int a27,unsigned int a28)
{
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _BOOL4 v42;

  v30 = a26 + a28 - 737032191;
  v31 = STACK[0x3D0] + v30;
  v32 = v30 + STACK[0x400];
  v33 = v31 - v32 + v29;
  v34 = ((652 * ((a1 + 784953033) & 0xD13686D8 ^ 0x24A)) ^ 0x517) & (2 * v28 + a28 + 1);
  v35 = STACK[0x410] - v32;
  v36 = (v34 | STACK[0x3E0]) - v32;
  v37 = (v34 | STACK[0x3F0]) - v32;
  v38 = v35 + v34;
  v42 = v33 < 0x10 || v38 < 0x10 || v36 < 0x10 || v37 < 0x10;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * ((v42 | (8 * v42)) ^ a1)) - 8))();
}

uint64_t sub_18CA2CBB8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308] + 8 * (a2 ^ (216 * (a26 > 0xF))))
                            - ((27 * (a2 ^ 0x223) + 967725921) & 0xC651A7FF)
                            + 1702))();
}

#error "18CA2DC4C: call analysis failed (funcsize=1037)"

void sub_18CA2DC50()
{
  JUMPOUT(0x18CA2CCBCLL);
}

uint64_t sub_18CA2DC58()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_18CA2DC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  uint64_t v27;
  int v28;

  return ((uint64_t (*)(void))(*(_QWORD *)(v27 + 8 * (v28 ^ (472 * (a27 != a21))))
                            - (v28 - 1195)
                            - ((v28 - 708190586) & 0x2A361F9E)
                            + 1884))();
}

uint64_t sub_18CA2DDE8(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x308]
                                        + 8
                                        * (int)((2085 * (((((a2 - 1227404589) & 0x4928B7FC) - 1296) & a26) == 0)) | a2))
                            - (a2 ^ 0x24CLL)))();
}

uint64_t sub_18CA2DE48(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27,int a28,int a29)
{
  int v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int64x2_t v34;
  int8x8_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  unint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64x2_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int64x2_t v48;
  int64x2_t v49;
  int64x2_t v50;
  int64x2_t v51;
  int64x2_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int8x16_t v55;
  int8x16_t v56;
  int64x2_t v57;
  int64x2_t v58;
  int64x2_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int8x16_t v109;
  int8x16_t v110;
  int8x16_t v111;
  int8x16_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int8x16_t v125;
  int8x16_t v126;
  int8x16_t v127;
  int8x16_t v128;
  int8x16_t v129;
  int64x2_t v130;
  int8x16x4_t v132;
  int8x16x4_t v133;

  v39 = STACK[0x400] - 7;
  v40 = a29 + a6 + a25 + a27 - a3;
  LODWORD(STACK[0x380]) = v40 - 7;
  LODWORD(STACK[0x230]) = v40 - 4076;
  LODWORD(STACK[0x220]) = v40 - 5;
  LODWORD(STACK[0x210]) = v40 - 4;
  LODWORD(STACK[0x200]) = v40 - 3;
  v41 = LODWORD(STACK[0x200]);
  v42 = LODWORD(STACK[0x210]);
  v43 = LODWORD(STACK[0x220]);
  v44 = LODWORD(STACK[0x380]);
  v45.i64[0] = STACK[0x3D0] + v42;
  v45.i64[1] = STACK[0x3D0] + v43;
  v46.i64[0] = STACK[0x3D0] + v40 - 2;
  v46.i64[1] = STACK[0x3D0] + v41;
  v47.i64[0] = STACK[0x3D0] + v40;
  v47.i64[1] = STACK[0x3D0] + v40 - 1;
  v48.i64[0] = STACK[0x3D0] + LODWORD(STACK[0x230]) + (v29 ^ 0x94Cu);
  v48.i64[1] = STACK[0x3D0] + v44;
  v49 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v48, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v48, 8uLL)), v31);
  v50 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v47, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v47, 8uLL)), v31);
  v51 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v46, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v46, 8uLL)), v31);
  v52 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v45, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v45, 8uLL)), v31);
  v53 = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x2F0], v52), *(int8x16_t *)&STACK[0x2E0]), vandq_s8((int8x16_t)vaddq_s64(v52, *(int64x2_t *)&STACK[0x310]), *(int8x16_t *)&STACK[0x2D0]));
  v54 = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x2F0], v51), *(int8x16_t *)&STACK[0x2E0]), vandq_s8((int8x16_t)vaddq_s64(v51, *(int64x2_t *)&STACK[0x310]), *(int8x16_t *)&STACK[0x2D0]));
  v55 = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x2F0], v50), *(int8x16_t *)&STACK[0x2E0]), vandq_s8((int8x16_t)vaddq_s64(v50, *(int64x2_t *)&STACK[0x310]), *(int8x16_t *)&STACK[0x2D0]));
  v56 = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x2F0], v49), *(int8x16_t *)&STACK[0x2E0]), vandq_s8((int8x16_t)vaddq_s64(v49, *(int64x2_t *)&STACK[0x310]), *(int8x16_t *)&STACK[0x2D0]));
  v57 = (int64x2_t)veorq_s8(v56, v36);
  v58 = (int64x2_t)veorq_s8(v55, v36);
  v59 = (int64x2_t)veorq_s8(v54, v36);
  v60 = (int64x2_t)veorq_s8(v53, v36);
  v61 = (int64x2_t)veorq_s8(v53, v37);
  v62 = (int64x2_t)veorq_s8(v54, v37);
  v63 = (int64x2_t)veorq_s8(v55, v37);
  v64 = (int64x2_t)veorq_s8(v56, v37);
  v65 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v60, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v60, 8uLL)), v61), v38);
  v66 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v59, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v59, 8uLL)), v62), v38);
  v67 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v58, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v58, 8uLL)), v63), v38);
  v68 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v57, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v57, 8uLL)), v64), v38);
  v69 = (int64x2_t)veorq_s8((int8x16_t)v68, vorrq_s8((int8x16_t)vshlq_n_s64(v64, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v64, 0x3DuLL)));
  v70 = (int64x2_t)veorq_s8((int8x16_t)v67, vorrq_s8((int8x16_t)vshlq_n_s64(v63, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v63, 0x3DuLL)));
  v71 = (int64x2_t)veorq_s8((int8x16_t)v66, vorrq_s8((int8x16_t)vshlq_n_s64(v62, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v62, 0x3DuLL)));
  v72 = (int64x2_t)veorq_s8((int8x16_t)v65, vorrq_s8((int8x16_t)vshlq_n_s64(v61, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v61, 0x3DuLL)));
  v73 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v68, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v68, 8uLL)), v69), *(int8x16_t *)&STACK[0x2C0]);
  v74 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v67, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 8uLL)), v70), *(int8x16_t *)&STACK[0x2C0]);
  v75 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v66, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 8uLL)), v71), *(int8x16_t *)&STACK[0x2C0]);
  v76 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v65, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 8uLL)), v72), *(int8x16_t *)&STACK[0x2C0]);
  v77 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v76, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v76, v76), *(int8x16_t *)&STACK[0x3C0])), *(int64x2_t *)&STACK[0x370]), *(int8x16_t *)&STACK[0x330]);
  v78 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v75, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v75, v75), *(int8x16_t *)&STACK[0x3C0])), *(int64x2_t *)&STACK[0x370]), *(int8x16_t *)&STACK[0x330]);
  v79 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v74, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v74, v74), *(int8x16_t *)&STACK[0x3C0])), *(int64x2_t *)&STACK[0x370]), *(int8x16_t *)&STACK[0x330]);
  v80 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v73, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v73, v73), *(int8x16_t *)&STACK[0x3C0])), *(int64x2_t *)&STACK[0x370]), *(int8x16_t *)&STACK[0x330]);
  v81 = (int64x2_t)veorq_s8((int8x16_t)v80, vorrq_s8((int8x16_t)vshlq_n_s64(v69, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v69, 0x3DuLL)));
  v82 = (int64x2_t)veorq_s8((int8x16_t)v79, vorrq_s8((int8x16_t)vshlq_n_s64(v70, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v70, 0x3DuLL)));
  v83 = (int64x2_t)veorq_s8((int8x16_t)v78, vorrq_s8((int8x16_t)vshlq_n_s64(v71, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 0x3DuLL)));
  v84 = (int64x2_t)veorq_s8((int8x16_t)v77, vorrq_s8((int8x16_t)vshlq_n_s64(v72, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 0x3DuLL)));
  v85 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v77, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 8uLL)), v84);
  v86 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v78, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 8uLL)), v83);
  v87 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v79, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 8uLL)), v82);
  v88 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v80, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 8uLL)), v81);
  v89 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v88, v88), v33), v88), v34), v30);
  v90 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v87, v87), v33), v87), v34), v30);
  v91 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v86, v86), v33), v86), v34), v30);
  v92 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v85, v85), v33), v85), v34), v30);
  v93 = (int64x2_t)veorq_s8((int8x16_t)v92, vorrq_s8((int8x16_t)vshlq_n_s64(v84, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v84, 0x3DuLL)));
  v94 = (int64x2_t)veorq_s8((int8x16_t)v91, vorrq_s8((int8x16_t)vshlq_n_s64(v83, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 0x3DuLL)));
  v95 = (int64x2_t)veorq_s8((int8x16_t)v90, vorrq_s8((int8x16_t)vshlq_n_s64(v82, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 0x3DuLL)));
  v96 = (int64x2_t)veorq_s8((int8x16_t)v89, vorrq_s8((int8x16_t)vshlq_n_s64(v81, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v81, 0x3DuLL)));
  v97 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v89, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 8uLL)), v96);
  v98 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v90, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 8uLL)), v95);
  v99 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v91, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 8uLL)), v94);
  v100 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v92, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v92, 8uLL)), v93);
  v101 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v100, v100), *(int8x16_t *)&STACK[0x320]), v100), *(int64x2_t *)&STACK[0x360]), *(int8x16_t *)&STACK[0x350]);
  v102 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v99, v99), *(int8x16_t *)&STACK[0x320]), v99), *(int64x2_t *)&STACK[0x360]), *(int8x16_t *)&STACK[0x350]);
  v103 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v98, v98), *(int8x16_t *)&STACK[0x320]), v98), *(int64x2_t *)&STACK[0x360]), *(int8x16_t *)&STACK[0x350]);
  v104 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v97, v97), *(int8x16_t *)&STACK[0x320]), v97), *(int64x2_t *)&STACK[0x360]), *(int8x16_t *)&STACK[0x350]);
  v105 = (int64x2_t)veorq_s8((int8x16_t)v104, vorrq_s8((int8x16_t)vshlq_n_s64(v96, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v96, 0x3DuLL)));
  v106 = (int64x2_t)veorq_s8((int8x16_t)v103, vorrq_s8((int8x16_t)vshlq_n_s64(v95, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v95, 0x3DuLL)));
  v107 = (int64x2_t)veorq_s8((int8x16_t)v102, vorrq_s8((int8x16_t)vshlq_n_s64(v94, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 0x3DuLL)));
  v108 = (int64x2_t)veorq_s8((int8x16_t)v101, vorrq_s8((int8x16_t)vshlq_n_s64(v93, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 0x3DuLL)));
  v109 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v101, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 8uLL)), v108);
  v110 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v102, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 8uLL)), v107);
  v111 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v103, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 8uLL)), v106);
  v112 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v104, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 8uLL)), v105);
  v113 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x2A0], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x2B0], v109), (int64x2_t)vorrq_s8(v109, *(int8x16_t *)&STACK[0x340]))), *(int8x16_t *)&STACK[0x290]);
  v114 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x2A0], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x2B0], v110), (int64x2_t)vorrq_s8(v110, *(int8x16_t *)&STACK[0x340]))), *(int8x16_t *)&STACK[0x290]);
  v115 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x2A0], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x2B0], v111), (int64x2_t)vorrq_s8(v111, *(int8x16_t *)&STACK[0x340]))), *(int8x16_t *)&STACK[0x290]);
  v116 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x2A0], vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x2B0], v112), (int64x2_t)vorrq_s8(v112, *(int8x16_t *)&STACK[0x340]))), *(int8x16_t *)&STACK[0x290]);
  v117 = (int64x2_t)veorq_s8((int8x16_t)v116, vorrq_s8((int8x16_t)vshlq_n_s64(v105, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 0x3DuLL)));
  v118 = (int64x2_t)veorq_s8((int8x16_t)v115, vorrq_s8((int8x16_t)vshlq_n_s64(v106, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 0x3DuLL)));
  v119 = (int64x2_t)veorq_s8((int8x16_t)v114, vorrq_s8((int8x16_t)vshlq_n_s64(v107, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 0x3DuLL)));
  v120 = (int64x2_t)veorq_s8((int8x16_t)v113, vorrq_s8((int8x16_t)vshlq_n_s64(v108, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 0x3DuLL)));
  v121 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v116, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 8uLL)), v117), v32);
  v122 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v115, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 8uLL)), v118), v32);
  v123 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v114, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 8uLL)), v119), v32);
  v124 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v113, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 8uLL)), v120), v32);
  v125 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v121, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v121, vorrq_s8((int8x16_t)vshlq_n_s64(v117, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 0x3DuLL))));
  v126 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v122, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v122, vorrq_s8((int8x16_t)vshlq_n_s64(v118, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 0x3DuLL))));
  v127 = (int8x16_t)vdupq_n_s64(0x38uLL);
  v128 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v123, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v123, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v123, vorrq_s8((int8x16_t)vshlq_n_s64(v119, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 0x3DuLL))));
  v129 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v124, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v124, vorrq_s8((int8x16_t)vshlq_n_s64(v120, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 0x3DuLL))));
  v130 = (int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v48, 3uLL), v127);
  v133.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v129, *(int8x16_t *)&STACK[0x280]), (int64x2_t)vorrq_s8(v129, *(int8x16_t *)&STACK[0x260])), *(int64x2_t *)&STACK[0x260]), *(int8x16_t *)&STACK[0x270]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v45, 3uLL), v127)));
  v133.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v128, *(int8x16_t *)&STACK[0x280]), (int64x2_t)vorrq_s8(v128, *(int8x16_t *)&STACK[0x260])), *(int64x2_t *)&STACK[0x260]), *(int8x16_t *)&STACK[0x270]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v46, 3uLL), v127)));
  v133.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v126, *(int8x16_t *)&STACK[0x280]), (int64x2_t)vorrq_s8(v126, *(int8x16_t *)&STACK[0x260])), *(int64x2_t *)&STACK[0x260]), *(int8x16_t *)&STACK[0x270]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v47, 3uLL), v127)));
  v132.val[0].i64[0] = v40 & 0xF;
  v132.val[0].i64[1] = ((_BYTE)v40 - 1) & 0xF;
  v133.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v125, *(int8x16_t *)&STACK[0x280]), (int64x2_t)vorrq_s8(v125, *(int8x16_t *)&STACK[0x260])), *(int64x2_t *)&STACK[0x260]), *(int8x16_t *)&STACK[0x270]), (uint64x2_t)vnegq_s64(v130));
  v132.val[1].i64[0] = ((_BYTE)v40 - 2) & 0xF;
  v132.val[1].i64[1] = v41 & 0xF;
  v132.val[2].i64[0] = v42 & 0xF;
  v132.val[2].i64[1] = v43 & 0xF;
  v132.val[3].i64[0] = (LOBYTE(STACK[0x230]) + (v29 ^ 0x4C)) & 0xF;
  v132.val[3].i64[1] = v44 & 0xF;
  *(int8x8_t *)(v39 + v40) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(STACK[0x410] + v132.val[0].i64[0] - 7), *(int8x8_t *)(v47.i64[0] - 0x61123CB0DDF7F162)), veor_s8(*(int8x8_t *)(STACK[0x3E0] + v132.val[0].i64[0] - 7), *(int8x8_t *)(STACK[0x3F0] + v132.val[0].i64[0] - 7)))), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v132, (int8x16_t)xmmword_18CF0E660), v35)), (int8x8_t)*(_OWORD *)&vqtbl4q_s8(v133, (int8x16_t)xmmword_18CF0E660)));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x308]
                                                     + 8 * ((3267 * (a3 - (a28 & 0xFFFFFFF8) == -8)) ^ v29))
                                         - 4))(0);
}

void sub_18CA2E654()
{
  JUMPOUT(0x18CA2DEECLL);
}

uint64_t sub_18CA2E65C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  uint64_t v26;
  int v27;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v26
                                                     + 8
                                                     * ((8171 * (((a26 == v27) ^ (a2 - 1)) & 1)) ^ a2))
                                         - ((a2 + 1093547989) & 0xBED1BD5C)
                                         + 1292))((a2 - 3814) | 0x418u);
}

uint64_t sub_18CA2E7D4@<X0>(int a1@<W5>, uint64_t a2@<X6>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v22 = (v10 + a1);
  v23 = __ROR8__(STACK[0x3D0] + v22, 8);
  v24 = (v21 - (v23 & 0xF8FFFFFFFFFFFFFFLL)) & 0x11999F5CB851D3A7 | ((v23 & 0xF8FFFFFFFFFFFFFFLL) + v16) & v6;
  v25 = v24 ^ v7;
  v24 ^= 0xB3140CA10443730FLL;
  v26 = (__ROR8__(v25, 8) + v24) ^ 0xB0B0DE652F050858;
  v27 = v26 ^ __ROR8__(v24, 61);
  v28 = __ROR8__(v26, 8);
  v29 = (((v28 + v27) ^ 0xBC8612A97C0F0F6ALL)
       - ((2 * ((v28 + v27) ^ 0xBC8612A97C0F0F6ALL)) & 0x705201AD2882EBBALL)
       - 0x47D6FF296BBE8A23) ^ 0x7EF7606908217CE1;
  v30 = v29 ^ __ROR8__(v27, 61);
  v31 = __ROR8__(v29, 8);
  v32 = __ROR8__((((2 * (v31 + v30)) | 0xC04615B9E28B60) - (v31 + v30) + 0x7F9FDCF5230EBA50) ^ v11, 8);
  v33 = (((2 * (v31 + v30)) | 0xC04615B9E28B60) - (v31 + v30) + 0x7F9FDCF5230EBA50) ^ v11 ^ __ROR8__(v30, 61);
  v34 = ((v15 | (2 * (v32 + v33))) - (v32 + v33) + v9) ^ a3;
  v35 = v34 ^ __ROR8__(v33, 61);
  v36 = __ROR8__(v34, 8);
  v37 = (v8 - ((a2 | ~(v36 + v35)) + ((v36 + v35) | a4))) ^ v13;
  v38 = v37 ^ __ROR8__(v35, 61);
  v39 = (__ROR8__(v37, 8) + v38) ^ v18;
  v40 = __ROR8__(v39, 8);
  v41 = __ROR8__(v38, 61);
  *(_BYTE *)(STACK[0x400] + v22) = *(_BYTE *)(STACK[0x410] + (v22 & 0xF)) ^ *(_BYTE *)(STACK[0x3D0] + v22 + v19) ^ *(_BYTE *)(STACK[0x3E0] + (v22 & 0xF)) ^ *(_BYTE *)(STACK[0x3F0] + (v22 & 0xF)) ^ ((v22 & 0xF) * v12) ^ (((v17 - ((v40 + (v39 ^ v41)) | v17) + ((v40 + (v39 ^ v41)) | v20)) ^ v5) >> (8 * ((LOBYTE(STACK[0x3D0]) + v22) & 7)));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x308]
                                                      + 8 * (((v10 != 716060543) * v14) ^ ((int)v4 + 475)))
                                          - 4))(v4);
}

uint64_t sub_18CA2E9C4()
{
  return ((uint64_t (*)(void))STACK[0x998])();
}

void sub_18CA2E9F0()
{
  JUMPOUT(0x18CA2C848);
}

uint64_t sub_18CA2EA1C@<X0>(int a1@<W4>, uint64_t (*a2)(uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  int v10;

  v3 = ((a1 - 1028879330) & 0x3D536EDFu) + 2430;
  v4 = a1 + 1919;
  v5 = STACK[0x738];
  v6 = STACK[0xB18];
  v7 = 366490169 * ((-1882573102 - ((v2 - 224) | 0x8FCA36D2) + ((v2 - 224) | 0x7035C92D)) ^ 0x669B9F69);
  *(_QWORD *)(v2 - 224) = STACK[0x818];
  *(_QWORD *)(v2 - 200) = v5;
  *(_QWORD *)(v2 - 192) = v6;
  *(_DWORD *)(v2 - 212) = (a1 + 2091) ^ v7;
  *(_DWORD *)(v2 - 208) = 1069384342 - v7;
  *(_DWORD *)(v2 - 216) = v7 + 682433026;
  v8 = a2(v2 - 224);
  v9 = STACK[0x308];
  v10 = *(_DWORD *)(v2 - 204);
  LODWORD(STACK[0x9A4]) = v10;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9 + 8 * ((844 * (v10 == 1556779682)) ^ v4)) - v3 + 2448))(v8);
}

uint64_t sub_18CA2EAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = 928 * (v4 ^ 0x14);
  STACK[0x990] = *(_QWORD *)(v5 + 8 * v4) + v6 - 1864;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (int)((2310 * (((409 * (v6 ^ 0x748)) & 1) == 0)) ^ v6)) - (v6 ^ 0x258) + 1296))(a1, a2, a3, a4, 0xE74B7028DA02D98ELL, 0xDF3B4A662C239C09, 0x56B0CDBCB8566355, 0x40B0117D676801C9);
}

uint64_t sub_18CA2ED3C()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 - 375371772 == (v0 ^ 0xCC8)) * (v0 - 3216)) ^ v0)))();
}

uint64_t sub_18CA2ED70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((74 * ((((v2 ^ 0x433) - 1003) | 8) ^ 0x500) - 1307)
                                          * ((unint64_t)(v1 - a1) >> 4 == 0xCCD66A8C5AF09B1)) ^ v2 ^ 0x433))
                            - 12))();
}

uint64_t sub_18CA2EDC8@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;

  v12 = (v6 + v9);
  v13 = *(_BYTE *)(v5 + v12);
  v14 = __ROR8__(v5 + v12, 8);
  v15 = a5 + v12;
  v16 = ((v14 & 0xF8FFFFFFFFFFFFFFLL) - 0x43E6EC4BB22236C1) & 0xF9FFFFFFFFFFFFFFLL;
  v17 = v16 ^ 0x62CF1A4CD3B77EC2;
  v16 ^= 0x820787EEBD59373FLL;
  v18 = (__ROR8__(v17, 8) + v16) ^ 0xA2AF19B9D5B5AD51;
  v19 = v18 ^ __ROR8__(v16, 61);
  v20 = __ROR8__(v18, 8);
  v21 = (a1 - ((v20 + v19) | a1) + ((v20 + v19) | 0x18B48FD725FD2671)) ^ 0xE88FB39C3CADF751;
  v22 = v21 ^ __ROR8__(v19, 61);
  v23 = __ROR8__(v21, 8);
  v24 = (a4 - ((v23 + v22) | a4) + ((v23 + v22) | 0xBF4FEE829897FE36)) ^ 0xA0B68CE6CD14B9E8;
  v25 = v24 ^ __ROR8__(v22, 61);
  v26 = __ROR8__(v15, 8);
  v27 = (((v26 & 0xF8FFFFFFFFFFFFFFLL) + v8) | 0xA94F324347A99CAALL) - (((v26 & 0xF8FFFFFFFFFFFFFFLL) + v8) | a3) + a3;
  v28 = (__ROR8__(v24, 8) + v25) ^ 0x65C91C63E38735FLL;
  v29 = v27 ^ 0xF8503BDFBF1E5C4CLL;
  v30 = v28 ^ __ROR8__(v25, 61);
  v31 = (__ROR8__(v27 ^ 0xCFA415A0FF94E39CLL, 8) + (v27 ^ 0xF8503BDFBF1E5C4CLL)) ^ 0x2CA81F3050EB51A6;
  v32 = v31 ^ __ROR8__(v29, 61);
  v33 = __ROR8__(v31, 8);
  v34 = (__ROR8__(v28, 8) + v30) ^ 0x84B2A778D3090F50;
  v35 = (-2 - ((~(v33 + v32) | 0x89F609123C66C59ELL) + ((v33 + v32) | 0x7609F6EDC3993A61))) ^ 0xAD72E0C0C5401AE0;
  v36 = v35 ^ __ROR8__(v32, 61);
  v37 = __ROR8__(v35, 8);
  v38 = v34 ^ __ROR8__(v30, 61);
  v39 = (v37 + v36 - ((2 * (v37 + v36)) & 0xE73D26754F2BE29ALL) + 0x739E933AA795F14DLL) ^ 0x247F704E2706516ELL;
  v40 = v39 ^ __ROR8__(v36, 61);
  v41 = (__ROR8__(v34, 8) + v38) ^ 0x8FDC6648463A364;
  v42 = (__ROR8__(v39, 8) + v40) ^ 0x955AB18667404467;
  v43 = v42 ^ __ROR8__(v40, 61);
  v44 = (__ROR8__(v42, 8) + v43) ^ 0xB8508B03B3A60294;
  v45 = v44 ^ __ROR8__(v43, 61);
  v46 = __ROR8__(v44, 8);
  v47 = __ROR8__(v41, 8) + (v41 ^ __ROR8__(v38, 61));
  v48 = (((2 * (v46 + v45)) | 0xEDD6329DDA56FF4) - (v46 + v45) - 0x76EB194EED2B7FALL) ^ 0xA589F98397CD05EFLL;
  v49 = v48 ^ __ROR8__(v45, 61);
  v50 = __ROR8__(v48, 8);
  *(_BYTE *)(v15 - 0x33299573A50F64F0) = (((a2 - ((v50 + v49) | a2) + ((v50 + v49) | 0x20C4B599D3DC63F6)) ^ 0x64B95E059F2212E6) >> (8 * (v15 & 7u))) ^ ((v47 ^ 0xAEC51C460562D41BLL) >> (8 * ((v5 + v6 + v9) & 7))) ^ v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((31 * (v6 - 1 == v10)) ^ (v7 + 471))) - 12))();
}

#error "18CA30DD4: call analysis failed (funcsize=1713)"

uint64_t sub_18CA30DD8()
{
  return ((uint64_t (*)(void))STACK[0x990])();
}

uint64_t sub_18CA30DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  uint64_t v68;

  return ((uint64_t (*)(void))(*(_QWORD *)(v68
                                        + 8
                                        * (((STACK[0x738] != 0) * (((a68 - 66239301) & 0x3F2BFFE) - 1280)) ^ (a68 + 1148)))
                            - 12))();
}

uint64_t sub_18CA30E28()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 != 0) * (((v0 - 66240449) & 0x3F2BFFE) - 1280)) ^ v0)) - 12))();
}

uint64_t sub_18CA30E60()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2076 * (((v1 == 0) ^ (v0 + 48)) & 1)) | v0))
                            - 4))();
}

uint64_t sub_18CA30E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  uint64_t v68;

  return ((uint64_t (*)(void))(*(_QWORD *)(v68
                                        + 8
                                        * ((2076
                                          * (((STACK[0x918] == 0) ^ (((a68 - 24) | 0x41) + 48)) & 1)) | (a68 - 536) | 0x441))
                            - 4))();
}

uint64_t sub_18CA30ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void (*a55)(uint64_t))
{
  int v55;
  uint64_t v56;
  unint64_t v57;

  a55(v56);
  v57 = STACK[0x308];
  STACK[0x918] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v57
                                        + 8
                                        * ((252 * (((((v55 ^ 0xF30) - 1129) ^ (STACK[0x808] == 0)) & 1) == 0)) ^ v55 ^ 0xF30))
                            - 163 * (v55 ^ 0x749u)
                            + 1292))();
}

void sub_18CA30F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void (*a55)(void))
{
  a55();
  JUMPOUT(0x18CA30F5CLL);
}

uint64_t sub_18CA30FB0()
{
  unint64_t v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  _BYTE *v4;
  unint64_t v5;
  _BYTE *v6;
  unint64_t v7;
  _BOOL4 v10;

  v2 = STACK[0x778];
  v3 = STACK[0x838];
  v4 = (char *)&STACK[0xB70] + v0 + (((v1 ^ 0x672u) + 301) ^ 0x9C4A500C61880DD0);
  v5 = STACK[0x4C0];
  STACK[0xB18] = (unint64_t)v4;
  STACK[0x858] = v0;
  STACK[0x560] = v3;
  STACK[0x6C8] = v5;
  v6 = sub_18CA83320(v4, 0, 0x20uLL);
  v7 = STACK[0x308];
  STACK[0x738] = 0;
  v10 = v2 == -72 || v3 == 0x61123CB0DDF7F15BLL || v5 == 0x33299573A50F64F0;
  return ((uint64_t (*)(_BYTE *))(*(_QWORD *)(v7 + 8 * ((237 * v10) ^ v1)) - 901 * (v1 ^ 0x672u) + 2699))(v6);
}

uint64_t sub_18CA31064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  unint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;

  v71 = 163 * (v69 ^ 0x138);
  LODWORD(STACK[0xB24]) = 1556737659;
  STACK[0x858] = v68;
  v72 = (v71 + 1111732326) & 0xBDBC4BF9;
  v73 = *(_QWORD *)(v70 + 8 * (v71 - 1159));
  LODWORD(STACK[0x5E0]) = 1556737659;
  STACK[0x828] = v72 + v73 - 388;
  STACK[0x710] = (unint64_t)&STACK[0x7B0];
  v74 = STACK[0x7B0];
  STACK[0x4F8] = STACK[0x7B0];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 + 8 * (int)(((v74 != 0) * (((v72 - 368) | 0x510) ^ 0x775)) ^ v72))
                                                                                                - 12))(a1, a2, a3, a4, a68, a6, 2654288601);
}

uint64_t sub_18CA3109C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  int v21;
  uint64_t v22;
  unint64_t v23;

  v22 = a21(64);
  v23 = STACK[0x308];
  STACK[0x818] = v22;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23
                                        + 8
                                        * ((1524 * ((((((v21 - 2703) | 0x518) + 1148) ^ (v22 == 0)) & 1) == 0)) ^ v21))
                            - 4))();
}

uint64_t sub_18CA310EC()
{
  int v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  unint64_t v3;

  v2 = v1(64);
  v3 = STACK[0x308];
  STACK[0x738] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((v2 == 0) ^ (-23 * (v0 ^ 0x96) + 1)) & 1)
                                          * (((4 * v0) ^ 0x2348) - 1264)) ^ v0))
                            - 12))();
}

void sub_18CA31148()
{
  *(int64x2_t *)&STACK[0x310] = vdupq_n_s64(0x4A65FA6F8636B0DDuLL);
  *(int64x2_t *)&STACK[0x2E0] = vdupq_n_s64(0x11999F5CB851D3A7uLL);
  *(int64x2_t *)&STACK[0x2F0] = vdupq_n_s64(0x159A059079C94F22uLL);
  *(int64x2_t *)&STACK[0x2D0] = vdupq_n_s64(0xE86660A347AE2C58);
  *(int64x2_t *)&STACK[0x260] = vdupq_n_s64(0x5B8596493F56B924uLL);
  *(int64x2_t *)&STACK[0x3C0] = vdupq_n_s64(0x705201AD2882EBBAuLL);
  *(int64x2_t *)&STACK[0x320] = vdupq_n_s64(0xB584ED60AF9AE1E0);
  *(int64x2_t *)&STACK[0x330] = vdupq_n_s64(0x7EF7606908217CE1uLL);
  *(int64x2_t *)&STACK[0x360] = vdupq_n_s64(0xA53D894FA8328F10);
  *(int64x2_t *)&STACK[0x370] = vdupq_n_s64(0xB82900D6944175DDLL);
  *(int64x2_t *)&STACK[0x340] = vdupq_n_s64(0x96B179674EAE71A8);
  *(int64x2_t *)&STACK[0x350] = vdupq_n_s64(0xCAB66FB6F7A90FD5);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0x694E8698B1518E57uLL);
  *(int64x2_t *)&STACK[0x2C0] = vdupq_n_s64(0xBC8612A97C0F0F6ALL);
  *(int64x2_t *)&STACK[0x290] = vdupq_n_s64(0xE1068DB2925269D4);
  *(int64x2_t *)&STACK[0x2A0] = vdupq_n_s64(0xFFFFFFFFFFFFFFFELL);
  *(int64x2_t *)&STACK[0x270] = vdupq_n_s64(0x15ADC2E4560DC4A1uLL);
  *(int64x2_t *)&STACK[0x280] = vdupq_n_s64(0xA47A69B6C0A946DBLL);
  *(int64x2_t *)&STACK[0x240] = vdupq_n_s64(0xB0B0DE652F050858);
  *(int64x2_t *)&STACK[0x250] = vdupq_n_s64(0x5CFBE325FF8E3A9BuLL);
  JUMPOUT(0x18CA2C84CLL);
}

uint64_t sub_18CA31170()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (((STACK[0x738] != 0) * (((v0 - 66240449) & 0x3F2BFFE) - 1280)) ^ v0))
                            - 12))();
}

uint64_t sub_18CA311B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void (*a55)(uint64_t))
{
  int v55;
  uint64_t v56;
  unint64_t v57;

  a55(v56);
  v57 = STACK[0x308];
  STACK[0x738] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v57
                                        + 8
                                        * ((1951 * ((((v55 - 1614778266) & 0x603F8FD7 ^ (STACK[0x818] == 0)) & 1) == 0)) ^ (v55 - 1614778266) & 0x603F8FD7))
                            - (((v55 - 1614778266) & 0x603F8FD7u)
                             - 1210)
                            + 1292))();
}

uint64_t sub_18CA31214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t (*a55)(void))
{
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  unint64_t v59;

  v58 = a55();
  v59 = STACK[0x308];
  LODWORD(STACK[0xB24]) = v57;
  STACK[0x858] -= 32;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v59
                                                      + 8
                                                      * ((((((v55 ^ 0xCCA) - 1166) | 0x14) + 2273) * (v57 == v56)) ^ ((v55 ^ 0xCCA) - 1000)))
                                          - 4))(v58);
}

#error "18CA316D4: call analysis failed (funcsize=139)"

uint64_t sub_18CA316D8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v2 + v1 + ((v0 + 1431727151) & 0xAAA9957D ^ 0x4300719) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((4 * v4) | (16 * v4) | v0)) - 4))();
}

uint64_t sub_18CA31734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((((v7 ^ 0x673 ^ ((unint64_t)(a6 - v6 + 0x2DBFD2C0BE87A567) < 0x10)) & 1) == 0)
                                          * (((v7 - 595) | 0x400) ^ 0xEC4)) ^ v7))
                            - 4))();
}

uint64_t sub_18CA3178C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int8x16_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int64x2_t a51,int64x2_t a52,int8x16_t a53,int8x16_t a54,uint64_t a55,uint64_t a56,int8x16_t a57,int8x16_t a58)
{
  int v58;
  uint64_t v59;
  int v60;
  int64x2_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  uint64_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int8x16_t v77;
  int8x16_t v78;
  int8x16_t v79;
  int8x16_t v80;
  int8x16_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int8x16_t v85;
  int8x16_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int8x16_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int8x16_t v92;
  int8x16_t v93;
  int64x2_t v94;
  int8x16_t v95;
  int64x2_t v96;
  int8x16_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int8x16_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int8x16_t v122;
  int8x16_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int8x16_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int8x16_t v133;
  uint64x2_t v134;
  int64x2_t v135;
  int64x2_t v136;
  int8x16_t v137;
  int8x16_t v138;
  int64x2_t v139;
  int8x16_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int8x16_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int64x2_t v150;
  int64x2_t v151;
  int64x2_t v152;
  int8x16_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int8x16_t v158;
  int8x16_t v159;
  int64x2_t v160;
  int64x2_t v161;
  int8x16_t v162;
  int64x2_t v163;
  int64x2_t v164;
  int64x2_t v165;
  int64x2_t v166;
  int64x2_t v167;
  int64x2_t v168;
  int64x2_t v169;
  int64x2_t v170;
  int64x2_t v171;
  int64x2_t v172;
  int64x2_t v173;
  int64x2_t v174;
  int8x16_t v175;
  int64x2_t v176;
  int64x2_t v177;
  int64x2_t v178;
  int64x2_t v179;
  int8x16_t v180;
  int8x16_t v181;
  int8x16_t v182;
  int8x16_t v183;
  int8x16_t v184;
  int64x2_t v185;
  int64x2_t v186;
  int8x16_t v187;
  int8x16_t v188;
  int8x16_t v189;
  int8x16_t v190;
  int64x2_t v191;
  int64x2_t v192;
  int64x2_t v193;
  int64x2_t v194;
  int8x16_t v195;
  int8x16_t v196;
  int8x16_t v197;
  int8x16_t v198;
  int64x2_t v199;
  int64x2_t v200;
  int64x2_t v201;
  int64x2_t v202;
  int64x2_t v203;
  int64x2_t v204;
  int64x2_t v205;
  int64x2_t v206;
  int64x2_t v207;
  int64x2_t v208;
  int64x2_t v209;
  int64x2_t v210;
  int64x2_t v211;
  int64x2_t v212;
  int64x2_t v213;
  int64x2_t v214;
  int64x2_t v215;
  int64x2_t v216;
  int64x2_t v217;
  int64x2_t v218;
  int64x2_t v219;
  int64x2_t v220;
  int8x16_t v221;
  int8x16_t v222;
  int64x2_t v223;
  int64x2_t v224;
  int64x2_t v225;
  int64x2_t v226;
  int64x2_t v227;
  int64x2_t v228;
  int64x2_t v229;
  int64x2_t v230;
  int8x16_t v231;
  int64x2_t v232;
  int64x2_t v233;
  int8x16_t v234;
  int64x2_t v235;
  int64x2_t v236;
  int64x2_t v237;
  int64x2_t v238;
  int64x2_t v239;
  int64x2_t v240;
  int64x2_t v241;
  int64x2_t v242;
  int64x2_t v243;
  int64x2_t v244;
  int64x2_t v245;
  int64x2_t v246;
  int8x16_t v247;
  int64x2_t v248;
  int64x2_t v249;
  int64x2_t v250;
  int64x2_t v251;
  int8x16_t v252;
  int8x16_t v253;
  int64x2_t v254;
  int64x2_t v255;
  int8x16_t v256;
  int64x2_t v257;
  int64x2_t v258;
  int64x2_t v259;
  int64x2_t v260;
  int64x2_t v261;
  int64x2_t v262;
  int64x2_t v263;
  int64x2_t v264;
  int64x2_t v265;
  int64x2_t v266;
  int64x2_t v267;
  int64x2_t v268;
  int8x16_t v269;
  int64x2_t v270;
  int64x2_t v271;
  int64x2_t v272;
  int64x2_t v273;
  int8x16_t v274;
  int8x16_t v275;
  int8x16_t v276;
  int8x16x4_t v278;

  v62 = v59 - 15;
  v63 = (a1 - 2059524590);
  v64 = STACK[0x250];
  v65.i64[0] = STACK[0x250] + (a1 - 2059524602);
  v65.i64[1] = STACK[0x250] + (a1 - 2059524603);
  v66.i64[0] = STACK[0x250] + (a1 - 2059524600);
  v66.i64[1] = STACK[0x250] + (a1 - 2059524601);
  v67.i64[0] = STACK[0x250] + (a1 - 2059524598);
  v67.i64[1] = STACK[0x250] + (a1 - 2059524599);
  v68 = v67;
  v69 = STACK[0x250] + v63;
  v70.i64[0] = v69;
  v70.i64[1] = STACK[0x250] + (a1 - 2059524591);
  v71.i64[0] = STACK[0x250] + (a1 - 2059524596);
  v71.i64[1] = STACK[0x250] + (a1 - 2059524597);
  v67.i64[0] = STACK[0x250] + (a1 - 2059524594);
  v67.i64[1] = STACK[0x250] + (a1 - 2059524595);
  v72.i64[0] = STACK[0x250] + (a1 - 2059524592);
  v72.i64[1] = STACK[0x250] + (a1 - 2059524593);
  *(int64x2_t *)&STACK[0x260] = v67;
  *(int64x2_t *)&STACK[0x270] = v72;
  v73 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v72, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 8uLL)), *(int8x16_t *)&STACK[0x3D0]);
  v74 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v67, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 8uLL)), *(int8x16_t *)&STACK[0x3D0]);
  v75 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v71, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 8uLL)), *(int8x16_t *)&STACK[0x3D0]);
  v76 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v70, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v70, 8uLL)), *(int8x16_t *)&STACK[0x3D0]);
  *(int64x2_t *)&STACK[0x2D0] = v66;
  *(int64x2_t *)&STACK[0x2E0] = v68;
  *(int8x16_t *)&STACK[0x290] = vorrq_s8((int8x16_t)vshlq_n_s64(v66, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 8uLL));
  *(int8x16_t *)&STACK[0x2A0] = vorrq_s8((int8x16_t)vshlq_n_s64(v68, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v68, 8uLL));
  *(int64x2_t *)&STACK[0x2C0] = v65;
  *(int8x16_t *)&STACK[0x280] = vorrq_s8((int8x16_t)vshlq_n_s64(v65, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 8uLL));
  v77 = (int8x16_t)vaddq_s64(v76, *(int64x2_t *)&STACK[0x3C0]);
  v78 = (int8x16_t)vaddq_s64(v75, *(int64x2_t *)&STACK[0x3C0]);
  v79 = (int8x16_t)vaddq_s64(v74, *(int64x2_t *)&STACK[0x3C0]);
  v80 = (int8x16_t)vaddq_s64(v73, *(int64x2_t *)&STACK[0x3C0]);
  v81 = *(int8x16_t *)&STACK[0x370];
  v82 = vsubq_s64((int64x2_t)vorrq_s8(v77, *(int8x16_t *)&STACK[0x380]), (int64x2_t)vorrq_s8(v77, (int8x16_t)a51));
  v83 = vsubq_s64((int64x2_t)vorrq_s8(v78, *(int8x16_t *)&STACK[0x380]), (int64x2_t)vorrq_s8(v78, (int8x16_t)a51));
  v84 = vsubq_s64((int64x2_t)vorrq_s8(v79, *(int8x16_t *)&STACK[0x380]), (int64x2_t)vorrq_s8(v79, (int8x16_t)a51));
  *(int64x2_t *)&STACK[0x2B0] = vsubq_s64((int64x2_t)vorrq_s8(v80, *(int8x16_t *)&STACK[0x380]), (int64x2_t)vorrq_s8(v80, (int8x16_t)a51));
  v85 = (int8x16_t)vaddq_s64(v83, a51);
  v86 = (int8x16_t)vaddq_s64(v82, a51);
  v87 = (int64x2_t)veorq_s8(v86, v81);
  v88 = (int64x2_t)veorq_s8(v85, v81);
  v89 = *(int8x16_t *)&STACK[0x360];
  v90 = (int64x2_t)veorq_s8(v85, *(int8x16_t *)&STACK[0x360]);
  v91 = (int64x2_t)veorq_s8(v86, *(int8x16_t *)&STACK[0x360]);
  v92 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v87, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 8uLL)), v91);
  v93 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v88, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v88, 8uLL)), v90);
  v94 = (int64x2_t)veorq_s8(v93, *(int8x16_t *)&STACK[0x240]);
  v95 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v93, a46), *(int8x16_t *)&STACK[0x230]), v94), (int64x2_t)vandq_s8((int8x16_t)v94, a46));
  v96 = (int64x2_t)veorq_s8(v92, *(int8x16_t *)&STACK[0x240]);
  v97 = *(int8x16_t *)&STACK[0x220];
  v98 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v92, a46), *(int8x16_t *)&STACK[0x230]), v96), (int64x2_t)vandq_s8((int8x16_t)v96, a46)), *(int8x16_t *)&STACK[0x220]);
  v99 = (int64x2_t)veorq_s8(v95, *(int8x16_t *)&STACK[0x220]);
  v100 = (int64x2_t)veorq_s8((int8x16_t)v99, vorrq_s8((int8x16_t)vshlq_n_s64(v90, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 0x3DuLL)));
  v101 = (int64x2_t)veorq_s8((int8x16_t)v98, vorrq_s8((int8x16_t)vshlq_n_s64(v91, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 0x3DuLL)));
  v102 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), v101);
  v103 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v99, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 8uLL)), v100);
  v104 = *(int64x2_t *)&STACK[0x200];
  v105 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v103, v103), *(int8x16_t *)&STACK[0x210]), v103), *(int64x2_t *)&STACK[0x200]), a57);
  v106 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v102, v102), *(int8x16_t *)&STACK[0x210]), v102), *(int64x2_t *)&STACK[0x200]), a57);
  v107 = (int64x2_t)veorq_s8((int8x16_t)v106, vorrq_s8((int8x16_t)vshlq_n_s64(v101, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 0x3DuLL)));
  v108 = (int64x2_t)veorq_s8((int8x16_t)v105, vorrq_s8((int8x16_t)vshlq_n_s64(v100, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 0x3DuLL)));
  v109 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v105, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 8uLL)), v108);
  v110 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v106, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 8uLL)), v107);
  v111 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v110, v110), a54), v110), *(int64x2_t *)&STACK[0x350]), a58);
  v112 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v109, v109), a54), v109), *(int64x2_t *)&STACK[0x350]), a58);
  v113 = vorrq_s8((int8x16_t)vshlq_n_s64(v107, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 0x3DuLL));
  v114 = (int64x2_t)veorq_s8((int8x16_t)v112, vorrq_s8((int8x16_t)vshlq_n_s64(v108, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 0x3DuLL)));
  v115 = (int64x2_t)veorq_s8((int8x16_t)v111, v113);
  v116 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v111, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 8uLL)), v115);
  v117 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v112, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 8uLL)), v114);
  v118 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v117, v117), *(int8x16_t *)&STACK[0x400]), v117), *(int64x2_t *)&STACK[0x3F0]), *(int8x16_t *)&STACK[0x3E0]);
  v119 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v116, v116), *(int8x16_t *)&STACK[0x400]), v116), *(int64x2_t *)&STACK[0x3F0]), *(int8x16_t *)&STACK[0x3E0]);
  v120 = (int64x2_t)veorq_s8((int8x16_t)v119, vorrq_s8((int8x16_t)vshlq_n_s64(v115, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 0x3DuLL)));
  v121 = (int64x2_t)veorq_s8((int8x16_t)v118, vorrq_s8((int8x16_t)vshlq_n_s64(v114, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 0x3DuLL)));
  v122 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v118, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 8uLL)), v121);
  v123 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v119, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 8uLL)), v120);
  v124 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v122, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v122, (int8x16_t)v61)), v61), *(int8x16_t *)&STACK[0x330]);
  v125 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v123, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v123, (int8x16_t)v61)), v61), *(int8x16_t *)&STACK[0x330]);
  v126 = vorrq_s8((int8x16_t)vshlq_n_s64(v121, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 0x3DuLL));
  v127 = (int64x2_t)veorq_s8((int8x16_t)v125, vorrq_s8((int8x16_t)vshlq_n_s64(v120, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 0x3DuLL)));
  v128 = (int64x2_t)veorq_s8((int8x16_t)v124, v126);
  v129 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v124, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 8uLL)), v128);
  v130 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v125, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 8uLL)), v127);
  v131 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v130, v130), a53), v130), a52), *(int8x16_t *)&STACK[0x310]);
  v132 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v129, v129), a53), v129), a52), *(int8x16_t *)&STACK[0x310]);
  v133 = (int8x16_t)vaddq_s64(v84, a51);
  v134 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v132, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v132, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v132, vorrq_s8((int8x16_t)vshlq_n_s64(v128, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 0x3DuLL)))), *(int8x16_t *)&STACK[0x2F0]);
  v278.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v131, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v131, vorrq_s8((int8x16_t)vshlq_n_s64(v127, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 0x3DuLL)))), *(int8x16_t *)&STACK[0x2F0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v70, 3uLL), *(int8x16_t *)&STACK[0x410])));
  v278.val[3] = (int8x16_t)vshlq_u64(v134, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v71, 3uLL), *(int8x16_t *)&STACK[0x410])));
  v135 = (int64x2_t)veorq_s8(v133, v81);
  v136 = (int64x2_t)veorq_s8(v133, *(int8x16_t *)&STACK[0x360]);
  v137 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v135, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v135, 8uLL)), v136);
  v138 = *(int8x16_t *)&STACK[0x240];
  v139 = (int64x2_t)veorq_s8(v137, *(int8x16_t *)&STACK[0x240]);
  v140 = *(int8x16_t *)&STACK[0x230];
  v141 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v137, a46), *(int8x16_t *)&STACK[0x230]), v139), (int64x2_t)vandq_s8((int8x16_t)v139, a46)), *(int8x16_t *)&STACK[0x220]);
  v142 = (int64x2_t)veorq_s8((int8x16_t)v141, vorrq_s8((int8x16_t)vshlq_n_s64(v136, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v136, 0x3DuLL)));
  v143 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), v142);
  v144 = *(int8x16_t *)&STACK[0x210];
  v145 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v143, v143), *(int8x16_t *)&STACK[0x210]), v143), *(int64x2_t *)&STACK[0x200]), a57);
  v146 = (int64x2_t)veorq_s8((int8x16_t)v145, vorrq_s8((int8x16_t)vshlq_n_s64(v142, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 0x3DuLL)));
  v147 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v145, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 8uLL)), v146);
  v148 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v147, v147), a54), v147), *(int64x2_t *)&STACK[0x350]), a58);
  v149 = (int64x2_t)veorq_s8((int8x16_t)v148, vorrq_s8((int8x16_t)vshlq_n_s64(v146, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 0x3DuLL)));
  v150 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v148, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 8uLL)), v149);
  v151 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v150, v150), *(int8x16_t *)&STACK[0x400]), v150), *(int64x2_t *)&STACK[0x3F0]), *(int8x16_t *)&STACK[0x3E0]);
  v152 = (int64x2_t)veorq_s8((int8x16_t)v151, vorrq_s8((int8x16_t)vshlq_n_s64(v149, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 0x3DuLL)));
  v153 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v151, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 8uLL)), v152);
  v154 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v153, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v153, (int8x16_t)v61)), v61), *(int8x16_t *)&STACK[0x330]);
  v155 = (int64x2_t)veorq_s8((int8x16_t)v154, vorrq_s8((int8x16_t)vshlq_n_s64(v152, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152, 0x3DuLL)));
  v156 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v154, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 8uLL)), v155);
  v157 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v156, v156), a53), v156), a52), *(int8x16_t *)&STACK[0x310]);
  v158 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v157, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v157, vorrq_s8((int8x16_t)vshlq_n_s64(v155, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v155, 0x3DuLL))));
  v159 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x2B0], a51);
  v278.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v158, *(int8x16_t *)&STACK[0x2F0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x260], 3uLL), *(int8x16_t *)&STACK[0x410])));
  v160 = (int64x2_t)veorq_s8(v159, v81);
  v161 = (int64x2_t)veorq_s8(v159, *(int8x16_t *)&STACK[0x360]);
  v162 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v160, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v160, 8uLL)), v161);
  v163 = (int64x2_t)veorq_s8(v162, *(int8x16_t *)&STACK[0x240]);
  v164 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v162, a46), *(int8x16_t *)&STACK[0x230]), v163), (int64x2_t)vandq_s8((int8x16_t)v163, a46)), *(int8x16_t *)&STACK[0x220]);
  v165 = (int64x2_t)veorq_s8((int8x16_t)v164, vorrq_s8((int8x16_t)vshlq_n_s64(v161, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v161, 0x3DuLL)));
  v166 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v164, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v164, 8uLL)), v165);
  v167 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v166, v166), *(int8x16_t *)&STACK[0x210]), v166), *(int64x2_t *)&STACK[0x200]), a57);
  v168 = (int64x2_t)veorq_s8((int8x16_t)v167, vorrq_s8((int8x16_t)vshlq_n_s64(v165, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v165, 0x3DuLL)));
  v169 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v167, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v167, 8uLL)), v168);
  v170 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v169, v169), a54), v169), *(int64x2_t *)&STACK[0x350]), a58);
  v171 = (int64x2_t)veorq_s8((int8x16_t)v170, vorrq_s8((int8x16_t)vshlq_n_s64(v168, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v168, 0x3DuLL)));
  v172 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v170, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v170, 8uLL)), v171);
  v173 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v172, v172), *(int8x16_t *)&STACK[0x400]), v172), *(int64x2_t *)&STACK[0x3F0]), *(int8x16_t *)&STACK[0x3E0]);
  v174 = (int64x2_t)veorq_s8((int8x16_t)v173, vorrq_s8((int8x16_t)vshlq_n_s64(v171, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v171, 0x3DuLL)));
  v175 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v173, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v173, 8uLL)), v174);
  v176 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v175, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v175, (int8x16_t)v61)), v61), *(int8x16_t *)&STACK[0x330]);
  v177 = (int64x2_t)veorq_s8((int8x16_t)v176, vorrq_s8((int8x16_t)vshlq_n_s64(v174, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v174, 0x3DuLL)));
  v178 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v176, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v176, 8uLL)), v177);
  v179 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v178, v178), a53), v178), a52), *(int8x16_t *)&STACK[0x310]);
  v71.i64[0] = v64 + (a1 - 2059524604);
  v71.i64[1] = v64 + (a1 - 2059524605);
  v278.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v179, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v179, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v179, vorrq_s8((int8x16_t)vshlq_n_s64(v177, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v177, 0x3DuLL)))), *(int8x16_t *)&STACK[0x2F0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x270], 3uLL), *(int8x16_t *)&STACK[0x410])));
  v180 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v71, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 8uLL)), *(int8x16_t *)&STACK[0x3D0]), *(int64x2_t *)&STACK[0x3C0]);
  v181 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x280], *(int8x16_t *)&STACK[0x3D0]), *(int64x2_t *)&STACK[0x3C0]);
  v182 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x290], *(int8x16_t *)&STACK[0x3D0]), *(int64x2_t *)&STACK[0x3C0]);
  v183 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x2A0], *(int8x16_t *)&STACK[0x3D0]), *(int64x2_t *)&STACK[0x3C0]);
  v184 = *(int8x16_t *)&STACK[0x380];
  v185 = vsubq_s64((int64x2_t)vorrq_s8(v180, *(int8x16_t *)&STACK[0x380]), (int64x2_t)vorrq_s8(v180, (int8x16_t)a51));
  v186 = vsubq_s64((int64x2_t)vorrq_s8(v181, *(int8x16_t *)&STACK[0x380]), (int64x2_t)vorrq_s8(v181, (int8x16_t)a51));
  *(int64x2_t *)&STACK[0x290] = vsubq_s64((int64x2_t)vorrq_s8(v182, *(int8x16_t *)&STACK[0x380]), (int64x2_t)vorrq_s8(v182, (int8x16_t)a51));
  v187 = (int8x16_t)vsubq_s64((int64x2_t)vorrq_s8(v183, v184), (int64x2_t)vorrq_s8(v183, (int8x16_t)a51));
  v188 = (int8x16_t)vaddq_s64(v186, a51);
  v189 = (int8x16_t)vaddq_s64(v185, a51);
  v190 = vqtbl4q_s8(v278, *(int8x16_t *)&STACK[0x320]);
  *(int8x16_t *)&STACK[0x2A0] = v187;
  *(int8x16_t *)&STACK[0x2B0] = v190;
  v191 = (int64x2_t)veorq_s8(v189, v81);
  v192 = (int64x2_t)veorq_s8(v188, v81);
  v193 = (int64x2_t)veorq_s8(v188, v89);
  v194 = (int64x2_t)veorq_s8(v189, v89);
  v195 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v191, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v191, 8uLL)), v194);
  v196 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v192, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v192, 8uLL)), v193);
  v278.val[0] = veorq_s8(v196, v138);
  v197 = (int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v196, a46), v140), (int64x2_t)v278.val[0]), (int64x2_t)vandq_s8(v278.val[0], a46));
  v278.val[0] = veorq_s8(v195, v138);
  v198 = v140;
  v199 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v195, a46), v140), (int64x2_t)v278.val[0]), (int64x2_t)vandq_s8(v278.val[0], a46)), v97);
  v200 = (int64x2_t)veorq_s8(v197, v97);
  v201 = (int64x2_t)veorq_s8((int8x16_t)v200, vorrq_s8((int8x16_t)vshlq_n_s64(v193, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v193, 0x3DuLL)));
  v202 = (int64x2_t)veorq_s8((int8x16_t)v199, vorrq_s8((int8x16_t)vshlq_n_s64(v194, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v194, 0x3DuLL)));
  v203 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v199, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v199, 8uLL)), v202);
  v204 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v200, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v200, 8uLL)), v201);
  v205 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v204, v204), v144), v204), v104), a57);
  v206 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v203, v203), v144), v203), v104), a57);
  v207 = (int64x2_t)veorq_s8((int8x16_t)v206, vorrq_s8((int8x16_t)vshlq_n_s64(v202, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v202, 0x3DuLL)));
  v208 = (int64x2_t)veorq_s8((int8x16_t)v205, vorrq_s8((int8x16_t)vshlq_n_s64(v201, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201, 0x3DuLL)));
  v209 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v205, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v205, 8uLL)), v208);
  v210 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v206, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v206, 8uLL)), v207);
  v211 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v210, v210), a54), v210), *(int64x2_t *)&STACK[0x350]), a58);
  v212 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v209, v209), a54), v209), *(int64x2_t *)&STACK[0x350]), a58);
  v213 = (int64x2_t)veorq_s8((int8x16_t)v212, vorrq_s8((int8x16_t)vshlq_n_s64(v208, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v208, 0x3DuLL)));
  v214 = (int64x2_t)veorq_s8((int8x16_t)v211, vorrq_s8((int8x16_t)vshlq_n_s64(v207, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207, 0x3DuLL)));
  v215 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v211, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v211, 8uLL)), v214);
  v216 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v212, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v212, 8uLL)), v213);
  v217 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v216, v216), *(int8x16_t *)&STACK[0x400]), v216), *(int64x2_t *)&STACK[0x3F0]), *(int8x16_t *)&STACK[0x3E0]);
  v218 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v215, v215), *(int8x16_t *)&STACK[0x400]), v215), *(int64x2_t *)&STACK[0x3F0]), *(int8x16_t *)&STACK[0x3E0]);
  v219 = (int64x2_t)veorq_s8((int8x16_t)v218, vorrq_s8((int8x16_t)vshlq_n_s64(v214, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v214, 0x3DuLL)));
  v220 = (int64x2_t)veorq_s8((int8x16_t)v217, vorrq_s8((int8x16_t)vshlq_n_s64(v213, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v213, 0x3DuLL)));
  v221 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v217, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v217, 8uLL)), v220);
  v222 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v218, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v218, 8uLL)), v219);
  v223 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v221, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v221, (int8x16_t)v61)), v61), *(int8x16_t *)&STACK[0x330]);
  v224 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v222, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v222, (int8x16_t)v61)), v61), *(int8x16_t *)&STACK[0x330]);
  v225 = (int64x2_t)veorq_s8((int8x16_t)v224, vorrq_s8((int8x16_t)vshlq_n_s64(v219, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v219, 0x3DuLL)));
  v226 = (int64x2_t)veorq_s8((int8x16_t)v223, vorrq_s8((int8x16_t)vshlq_n_s64(v220, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v220, 0x3DuLL)));
  v227 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v223, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v223, 8uLL)), v226);
  v228 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v224, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v224, 8uLL)), v225);
  v229 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v228, v228), a53), v228), a52), *(int8x16_t *)&STACK[0x310]);
  v230 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v227, v227), a53), v227), a52), *(int8x16_t *)&STACK[0x310]);
  v231 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x290], a51);
  v278.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v229, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v229, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v229, vorrq_s8((int8x16_t)vshlq_n_s64(v225, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v225, 0x3DuLL)))), *(int8x16_t *)&STACK[0x2F0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v71, 3uLL), *(int8x16_t *)&STACK[0x410])));
  v278.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v230, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v230, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v230, vorrq_s8((int8x16_t)vshlq_n_s64(v226, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v226, 0x3DuLL)))), *(int8x16_t *)&STACK[0x2F0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2C0], 3uLL), *(int8x16_t *)&STACK[0x410])));
  v232 = (int64x2_t)veorq_s8(v231, *(int8x16_t *)&STACK[0x370]);
  v233 = (int64x2_t)veorq_s8(v231, *(int8x16_t *)&STACK[0x360]);
  v234 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v232, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v232, 8uLL)), v233);
  v235 = (int64x2_t)veorq_s8(v234, v138);
  v236 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v234, a46), v198), v235), (int64x2_t)vandq_s8((int8x16_t)v235, a46)), v97);
  v237 = (int64x2_t)veorq_s8((int8x16_t)v236, vorrq_s8((int8x16_t)vshlq_n_s64(v233, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v233, 0x3DuLL)));
  v238 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v236, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v236, 8uLL)), v237);
  v239 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v238, v238), v144), v238), v104), a57);
  v240 = (int64x2_t)veorq_s8((int8x16_t)v239, vorrq_s8((int8x16_t)vshlq_n_s64(v237, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237, 0x3DuLL)));
  v241 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v239, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v239, 8uLL)), v240);
  v242 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v241, v241), a54), v241), *(int64x2_t *)&STACK[0x350]), a58);
  v243 = (int64x2_t)veorq_s8((int8x16_t)v242, vorrq_s8((int8x16_t)vshlq_n_s64(v240, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v240, 0x3DuLL)));
  v244 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v242, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v242, 8uLL)), v243);
  v245 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v244, v244), *(int8x16_t *)&STACK[0x400]), v244), *(int64x2_t *)&STACK[0x3F0]), *(int8x16_t *)&STACK[0x3E0]);
  v246 = (int64x2_t)veorq_s8((int8x16_t)v245, vorrq_s8((int8x16_t)vshlq_n_s64(v243, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v243, 0x3DuLL)));
  v247 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v245, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v245, 8uLL)), v246);
  v248 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v247, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v247, (int8x16_t)v61)), v61), *(int8x16_t *)&STACK[0x330]);
  v249 = (int64x2_t)veorq_s8((int8x16_t)v248, vorrq_s8((int8x16_t)vshlq_n_s64(v246, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v246, 0x3DuLL)));
  v250 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v248, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v248, 8uLL)), v249);
  v251 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v250, v250), a53), v250), a52), *(int8x16_t *)&STACK[0x310]);
  v252 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v251, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v251, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v251, vorrq_s8((int8x16_t)vshlq_n_s64(v249, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v249, 0x3DuLL))));
  v253 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x2A0], a51);
  v278.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8(v252, *(int8x16_t *)&STACK[0x2F0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2D0], 3uLL), *(int8x16_t *)&STACK[0x410])));
  v254 = (int64x2_t)veorq_s8(v253, *(int8x16_t *)&STACK[0x370]);
  v255 = (int64x2_t)veorq_s8(v253, *(int8x16_t *)&STACK[0x360]);
  v256 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v254, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v254, 8uLL)), v255);
  v257 = (int64x2_t)veorq_s8(v256, v138);
  v258 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(vaddq_s64((int64x2_t)veorq_s8(vandq_s8(v256, a46), v198), v257), (int64x2_t)vandq_s8((int8x16_t)v257, a46)), v97);
  v259 = (int64x2_t)veorq_s8((int8x16_t)v258, vorrq_s8((int8x16_t)vshlq_n_s64(v255, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v255, 0x3DuLL)));
  v260 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v258, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v258, 8uLL)), v259);
  v261 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v260, v260), v144), v260), v104), a57);
  v262 = (int64x2_t)veorq_s8((int8x16_t)v261, vorrq_s8((int8x16_t)vshlq_n_s64(v259, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v259, 0x3DuLL)));
  v263 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v261, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v261, 8uLL)), v262);
  v264 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v263, v263), a54), v263), *(int64x2_t *)&STACK[0x350]), a58);
  v265 = (int64x2_t)veorq_s8((int8x16_t)v264, vorrq_s8((int8x16_t)vshlq_n_s64(v262, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v262, 0x3DuLL)));
  v266 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v264, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v264, 8uLL)), v265);
  v267 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v266, v266), *(int8x16_t *)&STACK[0x400]), v266), *(int64x2_t *)&STACK[0x3F0]), *(int8x16_t *)&STACK[0x3E0]);
  v268 = (int64x2_t)veorq_s8((int8x16_t)v267, vorrq_s8((int8x16_t)vshlq_n_s64(v265, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v265, 0x3DuLL)));
  v269 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v267, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v267, 8uLL)), v268);
  v270 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v269, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v269, (int8x16_t)v61)), v61), *(int8x16_t *)&STACK[0x330]);
  v271 = (int64x2_t)veorq_s8((int8x16_t)v270, vorrq_s8((int8x16_t)vshlq_n_s64(v268, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v268, 0x3DuLL)));
  v272 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v270, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v270, 8uLL)), v271);
  v273 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v272, v272), a53), v272), a52), *(int8x16_t *)&STACK[0x310]);
  v278.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v273, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v273, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v273, vorrq_s8((int8x16_t)vshlq_n_s64(v271, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v271, 0x3DuLL)))), *(int8x16_t *)&STACK[0x2F0]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2E0], 3uLL), *(int8x16_t *)&STACK[0x410])));
  v274 = *(int8x16_t *)&STACK[0x2B0];
  v274.i64[1] = vqtbl4q_s8(v278, *(int8x16_t *)&STACK[0x320]).u64[0];
  v275 = vrev64q_s8(*(int8x16_t *)(v69 - 0x33299573A50F64FFLL));
  v187.i64[0] = 0x3F3F3F3F3F3F3F3FLL;
  v187.i64[1] = 0x3F3F3F3F3F3F3F3FLL;
  v276 = vrev64q_s8(vaddq_s8(veorq_s8(v274, vextq_s8(v275, v275, 8uLL)), v187));
  *(int8x16_t *)(v62 + v63) = vextq_s8(v276, v276, 8uLL);
  return (*(uint64_t (**)(void))(STACK[0x308] + 8 * ((2009 * (v60 == 16)) ^ (v58 - 352))))();
}

uint64_t sub_18CA326B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v24 = (a9 - 2059524590);
  v25 = __ROR8__(a6 + v24, 8);
  v26 = (((v25 & 0xF8FFFFFFFFFFFFFFLL) + a4) | a7) - (((v25 & 0xF8FFFFFFFFFFFFFFLL) + a4) | a3) + a3;
  v27 = v26 ^ a8;
  v26 ^= 0xB6E36C33CBDEC416;
  v28 = __ROR8__(v27, 8);
  v29 = (((v28 + v26) & a1 ^ v15) + ((v28 + v26) ^ v14) - (((v28 + v26) ^ v14) & a1)) ^ 0xF333EC361EAC7EC9;
  v30 = v29 ^ __ROR8__(v26, 61);
  v31 = __ROR8__(v29, 8);
  v32 = ((v17 | (2 * (v31 + v30))) - (v31 + v30) + v18) ^ 0xDAF3089641939C2ALL;
  v33 = v32 ^ __ROR8__(v30, 61);
  v34 = __ROR8__(v32, 8);
  v35 = ((v20 & (2 * (v34 + v33))) - (v34 + v33) + v22) ^ 0xB59B3C2F81F56731;
  v36 = v35 ^ __ROR8__(v33, 61);
  v37 = __ROR8__(v35, 8);
  v38 = (((2 * (v37 + v36)) & 0xAED42F2F0DADEEBCLL) - (v37 + v36) + v10) ^ a2;
  v39 = v38 ^ __ROR8__(v36, 61);
  v40 = __ROR8__(v38, 8);
  v41 = __ROR8__((v12 - ((v40 + v39) | v12) + ((v40 + v39) | a5)) ^ 0x3EF15448A0E9383FLL, 8);
  v42 = (v12 - ((v40 + v39) | v12) + ((v40 + v39) | a5)) ^ 0x3EF15448A0E9383FLL ^ __ROR8__(v39, 61);
  v43 = (v13 & (2 * (v41 + v42))) - (v41 + v42) + v16;
  *(_BYTE *)(v11 + v24) = ((((__ROR8__(v43 ^ 0x28EA010319AD884DLL, 8) + (v43 ^ 0x28EA010319AD884DLL ^ __ROR8__(v42, 61))) ^ v19) >> (8 * ((a6 + a9 + 18) & 7))) ^ *(_BYTE *)(a6 + v24 - 0x33299573A50F64F0))
                        + 63;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * (((a9 != 2059524590) * v9) ^ (v21 + 2245))) - 8))();
}

uint64_t sub_18CA32874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t (*a49)(void))
{
  return a49();
}

void sub_18CA3287C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,unint64_t a45)
{
  STACK[0x250] = a45;
  JUMPOUT(0x18CA3164CLL);
}

uint64_t sub_18CA32934@<X0>(uint64_t a1@<X4>, uint64_t a2@<X6>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;

  v5 = a3 - 226;
  STACK[0x450] = *(_QWORD *)(v4 + 8 * v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v4 + 8 * (((v3 == -8) * ((((((89 * (v5 ^ 0x89) - 1312400720) & 0x4E399BFF) - 367) | 0x510) - 886) ^ 0x177)) ^ (89 * (v5 ^ 0x89) - 1312400720) & 0x4E399BFF)))(-373, 1032, 2939, 0x47B5CC9A2E1B2553, a1, 3417, a2, 0xB84A3365D1E4DAADLL);
}

void sub_18CA32958()
{
  JUMPOUT(0x18CA32970);
}

uint64_t sub_18CA32BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((70 * (STACK[0x930] == 0x61123CB0DDF7F15BLL)) | (a5 + 2553)))
                            - ((a5 - 1097345577) & 0x41682DF8 ^ 0x8E0)))();
}

uint64_t sub_18CA32C3C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ (2 * (STACK[0x838] == 0x61123CB0DDF7F15BLL))))
                            - ((v0 + 2) ^ (v0 + 1473895979) & 0xA8261CFF ^ 0xCFDLL)))();
}

uint64_t sub_18CA32CD4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t (*a48)(uint64_t))
{
  uint64_t v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  int v52;

  v49 = 7 * (a1 ^ 0x87F);
  v50 = a48(v48 - 0x61123CB0DDF7F15BLL);
  v51 = STACK[0x308];
  STACK[0x838] = 0x61123CB0DDF7F15BLL;
  v52 = STACK[0x5E0];
  STACK[0x858] -= 48;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v51
                                                      + 8
                                                      * ((158 * (v52 == 5 * (v49 ^ 0x692) + 1556776477)) ^ v49 ^ 0x10B))
                                          - 4))(v50);
}

uint64_t sub_18CA32D74@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t (*v4)(unint64_t **);

  v3 = a1 + 1901;
  v4 = off_1E2538470[a1 - 1270];
  *(_QWORD *)((char *)v4 + 28) = STACK[0x940];
  *((_BYTE *)v4 + 12) = 110;
  LODWORD(STACK[0x884]) = 1556779682;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((21 * (v1 == 1556779682)) ^ v3))
                            - (v3 ^ 0xCE1 ^ ((v3 - 2181) | 0x118u) ^ 0x570)))();
}

uint64_t sub_18CA32DE8@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((STACK[0x940] == 0) * ((a1 + 1204) ^ 0x521)) ^ (a1
                                                                                          + ((a1 - 1717958885) & 0x6665FEE6)
                                                                                          - 107)))
                            - 12))();
}

uint64_t sub_18CA32E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t (*a55)(void))
{
  uint64_t (*v55)(uint64_t);
  uint64_t v56;

  v56 = a55();
  STACK[0x940] = 0;
  return v55(v56);
}

uint64_t sub_18CA32E5C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((91 * (STACK[0x6A0] != 0)) ^ (v0 - 521)))
                            - 52 * (v0 ^ 0x51Bu)
                            + 148))();
}

uint64_t sub_18CA32E98@<X0>(uint64_t a1@<X4>, uint64_t a2@<X6>, int a3@<W8>)
{
  uint64_t v3;

  STACK[0x450] = *(_QWORD *)(v3 + 8 * a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v3 + 8 * (int)(((&STACK[0x6A0] == 0) * ((((((((a3 + 116830003) & 0xF9095AF7) - 1312400720) & 0x4E399BFF) - 367) | 0x510) - 886) ^ 0x177)) ^ (((a3 + 116830003) & 0xF9095AF7) - 1312400720) & 0x4E399BFF)))(-373, 1032, 2939, 0x47B5CC9A2E1B2553, a1, 3417, a2, 0xB84A3365D1E4DAADLL);
}

uint64_t sub_18CA32EC0()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((35 * (STACK[0x6B8] == 0)) ^ (v0 + 1402))) - (v0 ^ 0x510)))();
}

uint64_t sub_18CA32F04()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((46 * (STACK[0x618] == 0)) ^ (v0 - 83)))
                            - ((v0 - 45) ^ 0x4E7)))();
}

uint64_t sub_18CA32F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t (*a55)(void))
{
  uint64_t (*v55)(uint64_t);
  uint64_t v56;

  v56 = a55();
  STACK[0x618] = 0;
  return v55(v56);
}

uint64_t sub_18CA32F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * ((117 * (STACK[0x760] != 0)) ^ (a5 + 24))))();
}

uint64_t sub_18CA32F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void (*a55)(void),uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;

  a55();
  return (*(uint64_t (**)(void))(STACK[0x308] + 8 * ((5272 * (STACK[0x5C8] != 0)) ^ (a68 - 89))))();
}

uint64_t sub_18CA32FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void (*a55)(void))
{
  uint64_t v55;

  a55();
  return ((uint64_t (*)(void))(*(_QWORD *)(v55 + 8 * ((781 * (STACK[0x8A0] != 0)) ^ (a5 + 1781))) - 8))();
}

uint64_t sub_18CA32FEC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t (*v2)(void);
  int v3;

  result = v2();
  *(_DWORD *)(v1 + 8) = v3;
  return result;
}

uint64_t sub_18CA33154(uint64_t a1, int a2, char a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  _QWORD *v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((v6 ^ a3) ^ (*v7 == a4)) & 1) * (((v6 - 146) | a2) ^ a6)) ^ v6)))();
}

uint64_t sub_18CA33188(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;

  LODWORD(STACK[0x410]) = v10;
  STACK[0x400] = v9 + a8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((*(_QWORD *)(v9 + a8) == 0) * ((v8 ^ a3) - 377)) ^ v8))
                            - ((v8 - 541) ^ v11)))();
}

uint64_t sub_18CA331C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void (*a55)(unint64_t))
{
  _QWORD *v55;

  a55(STACK[0x400]);
  *v55 = 0x47B5CC9A2E1B2553;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x450])(-373, 1032, 2939, 0x47B5CC9A2E1B2553);
}

void sub_18CA33248(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  int v6;
  uint64_t v7;

  STACK[0x450] = (a5 ^ v5 ^ a1) + *(_QWORD *)(v7 + 8 * v6);
  JUMPOUT(0x18CA3312CLL);
}

uint64_t sub_18CA33264()
{
  uint64_t (*v0)(uint64_t);
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v7 = v0(v2);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x308]
                                                      + 8 * ((((((v1 ^ v6) * v3) ^ v4) - 377) * (v5 == 0)) ^ v1))
                                          - 4))(v7);
}

uint64_t sub_18CA332A0()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * (((*(_QWORD *)(v0 + 24) != 0) * (((v1 - 2148) | 0xA81) ^ v2)) ^ v1))
                            - 4))();
}

uint64_t sub_18CA332D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void (*a55)(void))
{
  uint64_t v55;

  a55();
  *(_QWORD *)(v55 + 24) = 0;
  return sub_18CA33264();
}

uint64_t sub_18CA332F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t (*a55)(unint64_t))
{
  int v55;
  uint64_t v56;

  v55 = a5 - 540;
  v56 = a55(STACK[0x4F8]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x308] + 8 * ((448 * (STACK[0x710] != 0)) ^ v55)) - 4))(v56);
}

uint64_t sub_18CA33340@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  return ((uint64_t (*)(void))STACK[0x828])();
}

uint64_t sub_18CA3334C()
{
  STACK[0x8C0] = 0x47B5CC9A2E1B2553;
  *(_QWORD *)STACK[0x928] = STACK[0x8C0];
  return ((uint64_t (*)(void))STACK[0x8B8])();
}

uint64_t sub_18CA333B4@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v8;

  v6 = (a2 + 701758829) & 0xD62C0B7D;
  STACK[0x550] = (v6 ^ 0xFFFFFFFFFFFFF689) + *(_QWORD *)(v5 + 8 * a2);
  STACK[0x4B8] = v3;
  LODWORD(STACK[0xB28]) = v4;
  LOWORD(STACK[0xB2E]) = -25219;
  LODWORD(STACK[0xB30]) = a1 + 4;
  LODWORD(STACK[0xB34]) = v2;
  STACK[0xB38] = 0x1F192DAD631EFB50;
  STACK[0xB40] = 0;
  v8 = v3 != 0x47B5CC9A2E1B2553
    && (((_DWORD)v6 + 1472265645) ^ 0x57C10459 ^ (a1 - 314) ^ (a1 + 4)) < (((_DWORD)v6 + 1472265645) & 0xA83EFDF9 ^ 0xFFFFFAEE);
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((1613 * v8) ^ v6)))();
}

uint64_t sub_18CA334BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  int v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a21(32);
  STACK[0x590] = v23;
  return ((uint64_t (*)(void))(*(_QWORD *)(v22 + 8 * ((3347 * ((((v21 + 465) ^ (v23 == 0)) & 1) == 0)) ^ v21)) - 12))();
}

uint64_t sub_18CA33510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(_QWORD))
{
  int v21;
  int v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v26 = v21 ^ v23;
  STACK[0xB48] = v26;
  LODWORD(v26) = ((2 * (v26 + 10)) & 0xFFF3E7DE)
               + ((v26 + 10) ^ 0xFFF9F3EF)
               + ((((v22 - 711) | 0x72) + 1062) ^ 0x1676FBE6);
  *(_DWORD *)(a1 + 16) = v26;
  v27 = a21((v26 - 376500973));
  *(_QWORD *)(a1 + 24) = v27;
  return ((uint64_t (*)(void))(*(_QWORD *)(v24 + 8 * ((1774 * (v27 != 0)) ^ v22)) - 12))();
}

void sub_18CA335A8()
{
  JUMPOUT(0x18CA29A3CLL);
}

uint64_t sub_18CA335D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7 + 8 * (int)(((((a5 + 1442968791) & 0xA9FE0E3D) - 1852) * (v6 == v5)) ^ (a5 - 674))))();
}

void sub_18CA33610()
{
  JUMPOUT(0x18CA3361CLL);
}

uint64_t sub_18CA33680()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((STACK[0x920] != 0) * ((((v0 ^ 0xEE) - 3255) | 0x408) - 1275)) ^ v0 ^ 0xEE))
                            - ((210 * (v0 ^ 0xD2Au)) ^ 0x27ALL)))();
}

uint64_t sub_18CA336D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 + 600)
                                * ((unint64_t)(0x637838BC8C53D794 - a1 + v1 - 10) < 0xFFFFFFFFFFFFFFF6)) ^ v2)))();
}

uint64_t sub_18CA33720@<X0>(unsigned int a1@<W6>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  _BOOL4 v11;

  v6 = (unsigned __int8 *)(v2
                         + ((2 * (a2 - 0x637838BC8C53D78ELL)) & 0xDF7A4FBFB53CEFDELL)
                         + ((a2 - 0x637838BC8C53D78ELL) ^ 0x6FBD27DFDA9E77EFLL)
                         - 0x6FBD27DFDA9E77EFLL);
  v7 = (*v6 << 24) | (v6[1] << 16) | (v6[2] << 8);
  v8 = (((v7 | v6[3]) + a1 - 2 * ((v7 | v6[3]) & 0x1E353ADD ^ v6[3] & 4)) ^ a1) + a2 - 0x637838BC773E2402;
  v9 = v3 + 353743752;
  v11 = v8 >= 0x1515B388 && v8 <= v9;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1375 * v11) ^ v4)))();
}

uint64_t sub_18CA33808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  unsigned __int8 *v18;
  int v19;
  unint64_t v21;

  v12 = *(unsigned __int8 *)(v9 + v7 + 1306);
  v13 = (*(unsigned __int8 *)(v9 + v7 + 1303) << 24) | (*(unsigned __int8 *)(v9 + v7 + v8) << 16) | (*(unsigned __int8 *)(v9 + v7 + 1305) << 8) | v12;
  v14 = v13 + a7 - 2 * (v13 & 0x1E353ADD ^ v12 & 4);
  LOWORD(v12) = _byteswap_ushort(*(_WORD *)(v7
                                          + ((2 * (v9 + 1307)) & 0xEF57F8FDFA9F78DELL)
                                          + ((v9 + 1307) ^ 0x77ABFC7EFD4FBC6FLL)
                                          - 0x77ABFC7EFD4FBC6FLL));
  v15 = v9 + 1313;
  v16 = v10 + 10;
  v17 = (unsigned __int16)(v12 - ((2 * v12) & 0x1414) + 2572);
  switch(v17)
  {
    case 23251:
      STACK[0x8D8] = v7 + v15;
      STACK[0x540] = v16;
      return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((a5 - 891) ^ (50 * (v14 != a7)))) - 8))();
    case 36497:
      v21 = bswap64(*(_QWORD *)(((2 * v15) & 0xFFFDFF0F8DEFEDBELL)
                              + (v15 ^ 0x7FFEFF87C6F7F6DFLL)
                              + v7
                              - 0x7FFEFF87C6F7F6DFLL));
      STACK[0x908] = v21 + 0x1F192DAD631EFB50 - ((2 * v21) & 0x3E325B5AC63DF6A0);
      goto LABEL_7;
    case 40319:
      v18 = (unsigned __int8 *)(((2 * v15) & 0xCFFFCFBFB77AA7D6)
                              + (v15 ^ 0x67FFE7DFDBBD53EBLL)
                              + v7
                              - 0x67FFE7DFDBBD53EBLL);
      v19 = (*v18 << 24) | (v18[1] << 16) | (v18[2] << 8);
      LODWORD(STACK[0x5A8]) = (v19 | v18[3]) + a7 - 2 * ((v19 | v18[3]) & 0x1E353ADD ^ v18[3] & 4);
LABEL_7:
      STACK[0x540] = v16;
      STACK[0x550] = ((a5 - 688014621) & 0x29024975) + *(_QWORD *)(v11 + 8 * (a5 - 1144)) - 2429;
      JUMPOUT(0x18CA33434);
    default:
      LODWORD(STACK[0x464]) = 1556737664;
      STACK[0x7B8] = STACK[0x8C0];
      STACK[0x450] = *(_QWORD *)(v11 + 8 * (a5 - 1177));
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11
                                                                           + 8
                                                                           * (((&STACK[0x7B8] == 0)
                                                                             * ((((((((a5 - 1108) | 0xA03) - 1312400720) & 0x4E399BFF)
                                                                                 - 367) | 0x510)
                                                                               - 886) ^ 0x177)) ^ (((a5 - 1108) | 0xA03)
                                                                                                 - 1312400720) & 0x4E399BFF)))(-373, 1032, 2939, 0x47B5CC9A2E1B2553);
  }
}

void sub_18CA33A94()
{
  int v0;

  LODWORD(STACK[0x464]) = v0;
  JUMPOUT(0x18CA33AA0);
}

void sub_18CA33B14(uint64_t a1@<X8>)
{
  uint64_t v1;

  STACK[0x550] = (((_DWORD)a1 + 1591770305) & 0xA11F8BF9 ^ 0xFFFFFFFFFFFFF685) + *(_QWORD *)(v1 + 8 * a1);
  JUMPOUT(0x18CA33434);
}

uint64_t sub_18CA33B60()
{
  return ((uint64_t (*)(void))STACK[0x948])();
}

uint64_t sub_18CA33B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7 + 8 * (((((a5 - 256) | 0x282) ^ 0x625) * (v6 != v5)) ^ (a5 + 798))))();
}

uint64_t sub_18CA33B98@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_DWORD *)(STACK[0x768] + 40 * (a1 - 1029471234) + 36)
                                 - LODWORD(STACK[0x534]) == -2122285140)
                                * ((((v1 - 1360325273) & 0x5114E77A) + 386) ^ 0x8F)) ^ v1)))();
}

uint64_t sub_18CA33C00@<X0>(int a1@<W4>, unsigned int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v6;

  v4 = *(_DWORD *)(v2 + 40 * a2 + 28);
  switch(v4)
  {
    case 1:
      v6 = STACK[0x5F8];
      STACK[0x898] = *(_QWORD *)(v3 + 8 * (a1 - 1091)) + (((a1 - 1176) | 6u) ^ 0xFFFFFFFFFFFFFF7ALL);
      return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                            + 8
                                            * ((4047 * (((((a1 - 1176) | 6) ^ (v6 == 0x47B5CC9A2E1B2553)) & 1) == 0)) ^ ((a1 - 1176) | 6)))
                                - 8))();
    case 3:
      return (*(uint64_t (**)(void))(v3
                                  + 8
                                  * ((1908 * ((((a1 - 1304) ^ (*(_QWORD *)(v2 + 40 * a2 + 16) == 0)) & 1) == 0)) ^ (a1 + 798))))();
    case 2:
      return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                            + 8
                                            * (((STACK[0x5F8] != 0x47B5CC9A2E1B2553) * ((a1 - 1117) ^ 0xAF)) ^ (a1 - 52)))
                                - 8))();
    default:
      return ((uint64_t (*)(void))STACK[0x8F8])();
  }
}

void sub_18CA33E8C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) ^ (1697562443 * ((a1 + 245435999 - 2 * (a1 & 0xEA10E5F)) ^ 0xD93136DB));
  __asm { BR              X10 }
}

uint64_t sub_18CA33F5C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((154 * (*(_DWORD *)(*(_QWORD *)(a1 + 16) + v3) == v1)) ^ v4))
                            - ((v4 - 1432) ^ (v4 - 1651) ^ 0x75BLL)))();
}

uint64_t sub_18CA33F9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  _DWORD *v3;
  uint64_t result;
  _QWORD v5[2];
  unsigned int v6;

  v5[0] = v1;
  v5[1] = a1;
  v6 = v2 + 476588053 * (v5 ^ 0xBDFD0443) + 686;
  result = sub_18CA8284C((uint64_t)v5);
  *v3 = -1905309588 - *v3;
  return result;
}

void sub_18CA3412C(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 - 1314530549 * ((((2 * (_DWORD)a1) | 0xFD93C9D4) - (_DWORD)a1 - 2127160554) ^ 0xCFC06224);
  __asm { BR              X15 }
}

uint64_t sub_18CA3425C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  _BOOL4 v18;

  v16 = v14 - 203764127;
  *(_DWORD *)(a11 + 4 * (((4 * v12) ^ 0x184 ^ a1) + v11)) = *(_DWORD *)(*(_QWORD *)(v13 - 0x61D35839E46984FELL)
                                                                        + 4 * (((4 * v12) ^ 0x184 ^ a1) + v11));
  v18 = v11 - 2054005936 > 1943719520 || v11 - 2054005936 < v16;
  return (*(uint64_t (**)(void))(v15 + 8 * ((3678 * v18) ^ v12)))();
}

uint64_t sub_18CA342DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  int v12;
  int v13;
  uint64_t v14;
  _BOOL4 v16;

  v16 = v12 + 2041013579 <= 1743771740 && v12 + 2041013579 >= a12 - 403711907;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((53 * v16) ^ v13)) - ((v13 - 1512375009) & 0x5A24FE37 ^ 0x637)))();
}

uint64_t sub_18CA34360@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  _BOOL4 v21;

  *(_DWORD *)(a12 + 4 * (a2 + v12 + 1724)) = a1;
  v19 = v14 + v12 + 1;
  v21 = v19 <= v15 && v19 >= v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * ((v21 * v17) ^ v13)) - 4))();
}

uint64_t sub_18CA343BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * (v6 ^ (109 * (v5 == 0))))
                                                                              - 4))(a1, a2, a3, a4, a5);
}

uint64_t sub_18CA343E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;

  v16 = 142545853 * ((((2 * (v15 - 128)) | 0xE6628D70) - (v15 - 128) - 1932609208) ^ 0x59CEE9D7);
  *(_QWORD *)(v15 - 120) = a13;
  *(_DWORD *)(v15 - 128) = (((a12 << 6) & 0xFFA64FC0) + ((32 * a12) ^ 0xFFD327FD) + 125828863) ^ v16;
  *(_DWORD *)(v15 - 112) = (v13 - 1726) ^ v16;
  sub_18CA3A774(v15 - 128);
  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((46
                                          * ((((v13 - 1656) ^ ((*a9 - 1194828855) < 0x7FFFFFFF)) & 1) == 0)) ^ v13))
                            - 8))();
}

uint64_t sub_18CA344B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  *(_DWORD *)(v16 - 112) = (v15 ^ 0x9A6)
                         + 476588053 * ((2 * ((v16 - 128) & 0x7107DE68) - (v16 - 128) + 251142547) ^ 0xB30525D0)
                         - 440;
  *(_QWORD *)(v16 - 128) = &STACK[0x61D35839E4698536];
  *(_QWORD *)(v16 - 120) = a14;
  sub_18CA8284C(v16 - 128);
  *(_QWORD *)(v16 - 128) = a13;
  *(_DWORD *)(v16 - 116) = ((v15 ^ 0x9A6) - 920) ^ (366490169
                                                  * ((686236957 - ((v16 - 128) | 0x28E7251D) + ((v16 - 128) | 0xD718DAE2)) ^ 0xC1B68CA6));
  *(_QWORD *)(v16 - 112) = a14;
  v17 = ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v15 ^ 0x1F2] - 8))((unint64_t **)(v16 - 128));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14
                                                      + 8
                                                      * ((156
                                                        * (*(_DWORD *)(v16 - 120) > (((v15 ^ 0x149) + 980) ^ 0x59720829u))) ^ v15 ^ 0x9A6))
                                          - 2 * (v15 ^ 0x149u)
                                          + 390))(v17);
}

uint64_t sub_18CA345FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  uint64_t v18;
  int v19;
  int v20;

  if (a18 - 1194828854 >= 0)
    v20 = a18 - 1194828854;
  else
    v20 = ~(a18 - 1194828855);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((((int)((v20 ^ 0x6FFFA4B6)
                                                     + (v19 ^ 0xD737FE0E)
                                                     + ((2 * v20) & 0xDFFF496C)
                                                     - 1194828855) > (int)(v19 ^ 0xFFFFFE71))
                                              * ((33 * (v19 ^ 0x198)) ^ 0x651)) ^ v19 ^ 0xB75)))(2233429389);
}

uint64_t sub_18CA34694(int a1)
{
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * (((*(_DWORD *)(v2 + 4 * v4) != a1) * v1) ^ v3)))();
}

uint64_t sub_18CA346B8(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((int)(937 * (v4 ^ 0x18D) + v2 + (v3 ^ 0xFFFFF7D2) + a2) > (int)((937 * (v4 ^ 0x18D)) ^ 0xFFFFF504))
                                * ((33 * ((937 * (v4 ^ 0x18D)) ^ 0xAED)) ^ 0x651)) ^ (937 * (v4 ^ 0x18D)))))();
}

uint64_t sub_18CA34718()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(v5 + 8);
  *(_DWORD *)(v2 - 112) = v0 + 476588053 * ((v2 + 292584156 - 2 * ((v2 - 128) & 0x11707B5C)) ^ 0xAC8D7F1F) + 922;
  *(_QWORD *)(v2 - 128) = v3;
  *(_QWORD *)(v2 - 120) = v1;
  return sub_18CA8284C(v2 - 128);
}

void sub_18CA34C98(uint64_t a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 12) ^ (1314530549 * (((a1 | 0xBE23F257) - a1 + (a1 & 0x41DC0DA8)) ^ 0xF2A7499));
  v3 = *(_QWORD *)a1;
  v2 = v1 + 1697562443 * ((2 * (&v2 & 0x23D11970) - &v2 + 1546577544) ^ 0x8BBEDE0C) - 1436;
  sub_18CA3A610((uint64_t)&v2);
  __asm { BR              X9 }
}

uint64_t sub_18CA34DDC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v7;

  v5 = (((v4 - v3) >> 4) & 0xBFEBD96 ^ 0x1E03892) + (((v4 - v3) >> 5) ^ 0x5F0F6386);
  v7 = v5 <= 0x5DFF5ECA || v5 + 460189211 >= v2 + 2037206246;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((v1 - 752601589) & 0x2CDBCFE3 ^ 0xDC0) * v7) | v1)) - 8))();
}

void sub_18CA34E68()
{
  _DWORD *v0;

  *v0 = 1194828854;
}

void sub_18CA351CC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 1314530549 * ((-1114348438 - (a1 | 0xBD94646A) + (a1 | 0x426B9B95)) ^ 0xF3621D5B);
  __asm { BR              X8 }
}

void sub_18CA352A8()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void TsbHVdUOnzCHizuzrAdwYFpb()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x1E0C80C00];
  v0[1] = 31090337
        * (((v0 | 0xC5458E17) - v0 + (v0 & 0x3ABA71E8)) ^ 0x2C4EE5E)
        - 849012913;
  sub_18CA83580(v0);
  __asm { BR              X8 }
}

uint64_t sub_18CA35D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  a15 = 3403
      - (((&a13 | 0x74571607) - &a13 + (&a13 & 0x8BA8E9F8)) ^ 0xB3D6764E)
      * v16;
  a13 = &STACK[0x5D7153D4F79FA4AF];
  sub_18CA4ED30((uint64_t)&a13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17
                                                                                         + 8
                                                                                         * ((2916 * (a14 == v15)) ^ v18)))(v19, v20, v21, v22, v23, v24);
}

uint64_t sub_18CA35E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unint64_t a14, int a15, uint64_t a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = 366490169 * (v20 ^ 0x2A9EB51416AE5644);
  a16 = a12;
  a15 = 914 - v21;
  a14 = (v16 ^ 0xDFFFFAFEE5AFBBF7) + ((2 * v16) & 0xBFFFF5FDCB5F77EELL) - v21 + 0x72F91FDB5BD5C800;
  v22 = (*(uint64_t (**)(int *))(v19 + 864))(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * ((1686 * (a13 == v17)) ^ 0x320u)) - 8))(v22);
}

uint64_t sub_18CA35ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, int a18)
{
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1314530549 * ((&a13 & 0xDD9056E9 | ~(&a13 | 0xDD9056E9)) ^ 0x93662FD8);
  a14 = (v21 + 1106913160) ^ v22;
  a16 = 953970628 - v22;
  a18 = v22 ^ 0x4719F6BF;
  a13 = &STACK[0x7FBEEC3D5BCBFBD8];
  a15 = a12;
  v23 = sub_18CA83938((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * (((a17 == v18) * (v21 ^ 0x8CB ^ v20 ^ 0x1D2)) ^ v21))
                                          - 8))(v23);
}

uint64_t sub_18CA35FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  a16 = a10;
  a17 = &a12;
  a15 = (v20 - 1657) ^ (((((&a14 | 0x50876CBA) ^ 0xFFFFFFFE) - (~&a14 | 0xAF789345)) ^ 0x1E71158B)
                      * v21);
  (*(void (**)(int *))(v19 + 8 * (v20 - 3029)))(&a14);
  LODWORD(a17) = v20
               - 476588053
               * ((1069465673 - (&a14 | 0x3FBEC049) + (&a14 | 0xC0413FB6)) ^ 0x7DBC3BF5)
               - 491;
  a16 = a10;
  v22 = sub_18CA3B9C4((uint64_t)&a14);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * (((a14 == v17) * ((v20 - 2251) ^ 0x7EB)) ^ v20)))(v22);
}

uint64_t sub_18CA36080()
{
  void (*v0)(uint64_t *);
  int v1;
  int v2;
  int v3;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;

  v3 = (v2 - 2763) | 0x200;
  v10 = v3 + (&v8 ^ 0x16AE5644) * v1 - 461;
  v9 = v5;
  v0(&v8);
  v10 = v3 - 245 + (&v8 ^ 0x16AE5644) * v1 - 216;
  v9 = v7;
  v0(&v8);
  return (v6 ^ 0xDDFB9EB3) + 2127492079 + ((v6 << ((v2 + 53) ^ 0x21)) & 0xBBF73D66) - 1556779682;
}

void sub_18CA36168(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 - 1437274309 * (((a1 | 0x71DC8019) - (a1 & 0x71DC8019)) ^ 0x53D2FD2C);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x61D35839E4698502);
  v3 = *(_QWORD *)(a1 + 8);
  v4 = v1
     - 142545853
     * ((184011203 - (&v3 ^ 0x68EB4074 | 0xAF7C9C3) + (&v3 ^ 0x68EB4074 | 0xF508363C)) ^ 0xB71CD927)
     + 1296;
  sub_18CA39EA0((uint64_t)&v3);
  __asm { BR              X9 }
}

uint64_t sub_18CA362B4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  _BOOL4 v4;

  v4 = ((v3 - v2) & 0x1F ^ 7) != ((v1 - 2465) | 0x482) - 1450;
  return (*(uint64_t (**)(void))(a1 + 8 * ((v4 | (16 * v4)) ^ v1)))();
}

uint64_t sub_18CA3632C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((43
                                          * ((((v3 ^ 0x3DCBDAFF) - 196788 + (v1 & 0x7B97B5FE) - 1036573260 >= 0) ^ (v2 + 27)) & 1)) ^ v2))
                            - 12))();
}

uint64_t sub_18CA363B8@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 - 0x61D35839E46984FELL) + 4 * (int)(((v3 + 803580518) & 0xD01A4FA5 ^ (v2 - 1408)) + v4)) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (int)(v3 | (2 * ((v4 + v2) >> 31)))) - 12))();
}

uint64_t sub_18CA36410@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  _QWORD *v3;
  int v4;
  int v5;

  *(_DWORD *)(*v3 + 4 * (v5 + v1)) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((((v5 - 1 + v1) >> 31) * (v4 - 3443)) ^ v4))
                            - 12))();
}

void sub_18CA36444()
{
  int v0;
  int v1;
  int v2;
  int v3;
  _QWORD *v4;
  int v5;
  _DWORD *v6;
  _BOOL4 v7;

  v7 = *(_DWORD *)(*v4 + 4 * (v2 + v0 + 1)) == v3;
  *v6 = (((v5 - 640) | 4) ^ 0xA065177) - 1159718714 * (v0 - v7) + (v2 + v0 - v7 + 2) * v1;
}

uint64_t sub_18CA367B4(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x61D35839E4698502);
  if (v2 - 1194828854 < 0)
    v3 = 1194828854 - v2;
  else
    v3 = v2 - 1194828854;
  v1 = 366490169 * (((a1 | 0x57189164) - (a1 & 0x57189164)) ^ 0x41B6C720);
  return (*((uint64_t (**)(void))*(&off_1E2538470[*(_DWORD *)(a1 + 4) - 2450] + v1)
          + ((((*(_DWORD *)a1 - v1 - 1109035119) >= 4 * (unint64_t)v3)
            * ((*(_DWORD *)(a1 + 4) + v1 - 592) ^ 0x759)) ^ (*(_DWORD *)(a1 + 4) + v1))
          - 1))();
}

uint64_t sub_18CA36878()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((((v2 + 592) ^ 0x92F) * (v1 == 1109035119)) ^ v2))
                            - (((v2 - 1362) | 0xC8u) ^ 0x2EELL)))();
}

uint64_t sub_18CA368C4(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 24) = a3;
  return result;
}

uint64_t sub_18CA368CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1
                                                                                         + 8
                                                                                         * ((v3 - 1860044011) & 0x6EDE07F9 ^ 0xA7Fu))
                                                                             - (((v3 - 1860044011) & 0x6EDE07F9u)
                                                                              - 783)
                                                                             + 738))(a1, 1721494213, ((v3 - 1860044011) & 0x6EDE07F9u) - 783, 2233429389, v2);
}

uint64_t sub_18CA3695C@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W8>)
{
  uint64_t v6;
  int v7;
  unsigned int v8;

  *(_BYTE *)(*(_QWORD *)(a1 + 8) + (a5 + a6)) = (a4 ^ v8) >> (a2 + 91);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1397 * (a5 + ((a3 + 783) ^ 0xC3D) - 2501 == v7)) ^ a3)) - 4))();
}

uint64_t sub_18CA369B8(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2687 * (a2 + 8 == v3 + 32)) ^ v4))
                            - (v4 - 783)
                            + 738))();
}

uint64_t sub_18CA369EC(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v6;

  v6 = v3 + 1018618002 > 373 * (v4 ^ 0x5FB) + 578581488 || v3 + 1018618002 < v2;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * ((2696 * v6) ^ v4)) - 8))(a1, 1721494181);
}

uint64_t sub_18CA36A4C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  int v4;
  int v5;

  return sub_18CA3695C(a1, 165, (v5 + 1869456886) & 0x909256FA, *(_DWORD *)(*v3 + 4 * (v4 - 1707447881)), v2, a2);
}

void sub_18CA36A94(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) - 1697562443 * ((((2 * a1) | 0xCFAD2984) - a1 - 1742116034) ^ 0xB046AC46);
  __asm { BR              X10 }
}

uint64_t sub_18CA36B54@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((*(_QWORD *)(v1 + 16) == 0) * (a1 - 680)) | (a1 + 387))))();
}

uint64_t sub_18CA36BC0@<X0>(int a1@<W8>)
{
  uint64_t (*v1)(unsigned int *);
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t result;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;

  v6 = ((&v8 & 0xE7F6614 | ~(&v8 | 0xE7F6614)) ^ 0xF5A3EF0C) * v2;
  v8 = 688448098 - v6;
  v11 = v5;
  v10 = (v3 + 139) ^ v6;
  v12 = v6 + a1;
  v9 = 0x129748112B546E94;
  result = v1(&v8);
  *(_DWORD *)(v4 + 24) = *(_DWORD *)(v5 - 0x69A7616A48D05166);
  return result;
}

void sub_18CA36EB4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 - 142545853 * (a1 ^ 0x2AFFAF6F);
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(unint64_t **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v2 - 0x422CB512D256B85FLL);
  v7 = *(unint64_t **)(a1 + 24);
  v9 = v5;
  v10 = &STACK[0x61D35839E4698526];
  LODWORD(v8) = (366490169 * ((((2 * &v7) | 0xF042562E) - &v7 + 132044009) ^ 0xEE8F7D53)) ^ (v1 + 154);
  v11 = v2;
  v12 = v4;
  ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v1 - 2138] - 8))(&v7);
  v6 = *(_QWORD *)(v2 - 0x422CB512D256B867);
  v7 = &STACK[0x61D35839E4698536];
  v8 = v6;
  LODWORD(v9) = v1
              + 476588053 * ((&v7 - 206616532 - 2 * (&v7 & 0xF3AF482C)) ^ 0x4E524C6F)
              - 664;
  sub_18CA8284C((uint64_t)&v7);
  LODWORD(v8) = v1
              - 1437274309
              * ((1160034875 - (&v7 | 0x4524BA3B) + (&v7 | 0xBADB45C4)) ^ 0x98D538F1)
              - 780;
  v7 = v3;
  sub_18CA3B254((uint64_t)&v7);
  __asm { BR              X8 }
}

uint64_t sub_18CA370CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t), uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_DWORD *)(v18 - 136) = (v14 + 589) ^ (366490169
                                        * ((((2 * (v18 - 144)) | 0x7DF3B0B2) - (v18 - 144) - 1056561241) ^ 0x28578E1D));
  *(_QWORD *)(v18 - 144) = a12;
  *(_QWORD *)(v18 - 112) = v12;
  *(_QWORD *)(v18 - 104) = v13;
  *(_QWORD *)(v18 - 128) = v15;
  *(_QWORD *)(v18 - 120) = v15;
  v19 = a11(v18 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17
                                                      + 8 * ((58 * (v16 - 1 >= (v14 ^ 0x7FFFF8AAu))) ^ (v14 + 435)))
                                          - 8))(v19);
}

uint64_t sub_18CA37164()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  *(_QWORD *)(v7 - 128) = v5;
  *(_QWORD *)(v7 - 120) = v5;
  *(_QWORD *)(v7 - 144) = v2;
  *(_QWORD *)(v7 - 136) = v3;
  *(_DWORD *)(v7 - 112) = v4
                        + 1697562443 * ((2 * ((v7 - 144) & 0x16988D50) - (v7 - 144) + 1768387240) ^ 0xBEF74A2C)
                        + 1740;
  ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v4 - 1613] - 8))((unint64_t **)(v7 - 144));
  v8 = 476588053 * ((((v7 - 144) | 0x8D16D417) + (~(v7 - 144) | 0x72E92BE8)) ^ 0x30EBD055);
  *(_DWORD *)(v7 - 136) = v8 + v0 - 606623168;
  *(_DWORD *)(v7 - 132) = (v4 - 851) ^ v8;
  *(_QWORD *)(v7 - 144) = v1;
  v9 = sub_18CA37F14(v7 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * ((13 * (*(_DWORD *)(v7 - 128) != 1116200472)) ^ v4))
                                          - 4))(v9);
}

uint64_t sub_18CA37278()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((58 * (v1 - 1 >= ((v0 - 435) ^ 0x7FFFF8AAu))) ^ v0)) - 8))();
}

uint64_t sub_18CA372AC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;

  v5 = *(_QWORD *)(v8 + 40);
  v6 = 142545853 * ((v4 + 1647673724 - 2 * ((v4 - 144) & 0x6235820C)) ^ 0x48CA2D63);
  *(_QWORD *)(v4 - 144) = v10;
  *(_DWORD *)(v4 - 136) = v6 ^ 0x2AEEDC51;
  *(_DWORD *)(v4 - 132) = v6 + v2 - 294;
  sub_18CA38054(v4 - 144);
  *(_QWORD *)(v4 - 128) = v3;
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = v0;
  *(_QWORD *)(v4 - 104) = v1;
  *(_DWORD *)(v4 - 136) = (v2 + 154) ^ (366490169
                                      * ((((v4 - 144) | 0xB42AE25F) + (~(v4 - 144) | 0x4BD51DA0)) ^ 0xA284B41A));
  *(_QWORD *)(v4 - 144) = v10;
  v9(v4 - 144);
  *(_QWORD *)(v4 - 144) = v5;
  *(_QWORD *)(v4 - 136) = v3;
  *(_DWORD *)(v4 - 128) = v2 + 476588053 * ((v4 + 627479204 - 2 * ((v4 - 144) & 0x25669334)) ^ 0x989B9777) - 664;
  return sub_18CA8284C(v4 - 144);
}

void sub_18CA373F0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_18CA3743C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((479 * (**(_BYTE **)(a2 + 8) != 0)) ^ 0xCD3u)) - 4))();
}

uint64_t sub_18CA3746C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;

  v4 = v3 - ((2 * v3 - 1512022770) & 0xD456BAFC) + 1025215493;
  v5 = ((2 * v4) & 0xF2D7B5D8 ^ 0xD056B0D8) + (v4 ^ 0x13408792) - 4198988 == 2032912544;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 8 * ((v5 | (4 * v5)) ^ 0x512u)) - 4))(a1, a2, *(_QWORD *)(a1 + 96));
}

uint64_t sub_18CA37508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;

  *(_DWORD *)(a3 + 1424) = v4 + ((v5 - v3 - 2153) ^ 0xCFD9F70);
  *(_QWORD *)(*(_QWORD *)(a1 + 96) + 520) = *(_QWORD *)(a2 + 8) + 1;
  return 0;
}

void sub_18CA3781C(uint64_t a1)
{
  int v1;
  int v2;
  _BOOL4 v4;

  v1 = 476588053 * ((-2 - ((a1 | 0x197F8855) + (~(_DWORD)a1 | 0xE68077AA))) ^ 0x5B7D73E9);
  v2 = *(_DWORD *)(a1 + 64) ^ v1;
  v4 = *(_OWORD *)(a1 + 24) != 0 && *(_DWORD *)(a1 + 40) + v1 != 729592132;
  __asm { BR              X9 }
}

uint64_t sub_18CA37970@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v4;

  v4 = *(_QWORD *)(v1 + 56) != 0x48E2437631EE643CLL && *(_OWORD *)v1 != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v4 * ((a1 ^ 0xEAD) - 2383)) ^ a1)) - 8))();
}

uint64_t sub_18CA379C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = *(_QWORD *)(v35 + 48);
  *(_DWORD *)(v33 - 0x48E2437631EE643CLL) = 0;
  return ((uint64_t (*)(uint64_t, char *, char *, char *, char *, char *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 + 8 * ((1264 * (v37 == 0x61D35839E4698506)) ^ v32)) - 4))(0x422CB512D256B867, &a23, &a28, &a32, &a26, &a30, ((v32 - 1587) | 0x498) + ((v32 - 2204) | 0x701u), 0x61D35839E4698506, a9, v34, a11, a12, a13, a14, a15, a16, a17, a18, v33 - 0x48E2437631EE643CLL);
}

uint64_t sub_18CA37A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;

  v25 = (((~(v24 - 144) & 0x5FF48DDE) - (~(v24 - 144) | 0x5FF48DDF)) ^ 0x750B22B0) * v20;
  *(_QWORD *)(v24 - 144) = &a20 + a8;
  *(_DWORD *)(v24 - 136) = v25 ^ 0x2AEFDC51;
  *(_DWORD *)(v24 - 132) = v25 + v21 + 9;
  sub_18CA38054(v24 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23
                                                      + 8
                                                      * ((((6 * (v21 ^ 0x64B) + 18) ^ (12 * (v21 ^ 0x710))) * (v22 == 0)) ^ (v21 + 1206)))
                                          - 12))(366490169);
}

uint64_t sub_18CA37BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;

  v26 = 1761959447
      * ((((v25 - 144) ^ 0x3C00E768 | 0xC241B985)
        - ((v25 - 144) ^ 0x3C00E768)
        + (((v25 - 144) ^ 0x3C00E768) & 0x3DBE4678)) ^ 0x5FE69F29);
  *(_DWORD *)(v25 - 144) = v18 - v26 - 1022;
  *(_DWORD *)(v25 - 120) = v20 - v26 + (v18 ^ 0xE930CBC4);
  v27 = v18 ^ 0x717;
  *(_QWORD *)(v25 - 136) = v24;
  *(_QWORD *)(v25 - 128) = a2;
  v28 = v19;
  ((void (*)(uint64_t))(*(_QWORD *)(v19 + 8 * (v18 - 2329)) - 8))(v25 - 144);
  *(_QWORD *)(v25 - 128) = a16;
  *(_QWORD *)(v25 - 144) = v21;
  *(_DWORD *)(v25 - 136) = (v27 - 2396) ^ (1401278017 * ((v25 - 144) ^ 0x42376E7));
  (*(void (**)(uint64_t))(v28 + 8 * (v27 ^ 0xED2)))(v25 - 144);
  *(_DWORD *)(v25 - 144) = v27
                         + 142545853 * (((v25 - 144) & 0x71E33CD4 | ~((v25 - 144) | 0x71E33CD4)) ^ 0xA4E36C44)
                         - 1395;
  *(_QWORD *)(v25 - 120) = a15;
  *(_QWORD *)(v25 - 112) = a16;
  *(_QWORD *)(v25 - 104) = a18;
  *(_QWORD *)(v25 - 136) = a17;
  *(_QWORD *)(v25 - 128) = v21;
  v29 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v27 - 3492)))(v25 - 144);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (int)((((2 * ((v27 + 185154755) & 0xF4F6BFFB ^ 0xEA7)) ^ 0xBF6)
                                                   * (v23 != 0)) ^ v27)))(v29);
}

uint64_t sub_18CA37DB4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  int v9;
  _DWORD *v10;

  v6 = 375636451 * ((-423993059 - ((v5 - 144) | 0xE6BA611D) + ((v5 - 144) | 0x19459EE2)) ^ 0x4A7BC46E);
  *(_QWORD *)(v5 - 120) = v8;
  *(_DWORD *)(v5 - 132) = v6 + v4 - 1978;
  *(_DWORD *)(v5 - 128) = (((v4 - 865) ^ 0xFA38E3FA) + v1) ^ v6;
  *(_QWORD *)(v5 - 144) = v3;
  result = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (int)(v4 & 0x830E4471)) - 12))(v5 - 144);
  *v10 = v9;
  *(_DWORD *)(v0 + 44) = 1556779682;
  return result;
}

uint64_t sub_18CA37F14(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 476588053 * ((a1 & 0x9AF34757 | ~(a1 | 0x9AF34757)) ^ 0xD8F1BCEB);
  v2 = *(_DWORD *)(a1 + 12) ^ v1;
  v3 = *(_DWORD *)(a1 + 8) - v1;
  if (v3 < 0)
    v3 = -v3;
  v4 = *(_DWORD *)(*(_QWORD *)a1 - 0x61D35839E4698502);
  v6 = v4 - 1194828854;
  v5 = v4 - 1194828854 < 0;
  v7 = 1194828854 - v4;
  if (!v5)
    v7 = v6;
  return ((uint64_t (*)(void))(*((_QWORD *)off_1E2538470[v2 ^ 0x430] + ((998 * (v3 >> 5 < v7)) ^ v2) - 1)
                            - 4))();
}

uint64_t sub_18CA37FC8@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;

  v4 = ((*(_DWORD *)(*(_QWORD *)(v2 - 0x61D35839E46984FELL) + 4 * v3) ^ 0x851F6D8D) >> a2) ^ 0xDC37902D;
  *(_DWORD *)(result + 16) = v4 & 0x2936FD82 ^ 0xF4E4409C ^ (((2 * v4) & 0x1228C204) - (v4 & 0x2936FD83) - 1234985339);
  return result;
}

uint64_t sub_18CA38044(uint64_t result)
{
  *(_DWORD *)(result + 16) = 1116200472;
  return result;
}

uint64_t sub_18CA38054(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  BOOL v4;
  unsigned int v5;
  uint64_t v6;

  v1 = 142545853 * ((((2 * (a1 ^ 0x8D5EE424)) | 0x8943A33E) - (a1 ^ 0x8D5EE424) - 1151455647) ^ 0xE3009AD4);
  v2 = *(_DWORD *)(a1 + 12) - v1;
  v3 = *(_DWORD *)(a1 + 8) ^ v1;
  v5 = v3 - 720297040;
  v4 = v3 - 720297040 < 0;
  LODWORD(v6) = 720297040 - v3;
  if (v4)
    v6 = v6;
  else
    v6 = v5;
  return ((uint64_t (*)(void))(*((_QWORD *)off_1E2538470[v2 - 1968]
                              + (((v6 == ((2 * (_DWORD)v6) & 0x5ED07C5C)) * (v2 ^ 0x7EE)) ^ v2)
                              - 1)
                            - 4))();
}

void sub_18CA38110(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 - 0x61D35839E4698502) = a1;
}

void sub_18CA38170(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  _DWORD v9[4];
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v1 = 1314530549 * (((a1 | 0x3860236) - (a1 & 0x3860236)) ^ 0xB28F84F8);
  v2 = *(_DWORD *)(a1 + 24) - v1;
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = 1761959447 * ((v9 + 1645022556 - 2 * (v9 & 0x620D0D5C)) ^ 0xC3AACC98);
  v7 = (*(_DWORD *)(a1 + 16) ^ v1) - v6;
  v8 = (*(_DWORD *)(a1 + 40) ^ v1) - 514776003;
  v11 = v2 - v6 + 1205610859;
  v13 = v3;
  v14 = v5;
  v9[0] = v7 - 1039744684;
  v9[1] = v8 ^ v6;
  v10 = v4;
  v12 = v5;
  ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v2 - 552] - 4))((unint64_t **)v9);
  __asm { BR              X8 }
}

uint64_t sub_18CA382D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, char a13, int a14, int a15, int a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  uint64_t v26;

  v24 = *(unsigned __int8 *)(v16 + 20) - v23;
  v25 = 476588053 * (((&a11 | 0xFE6F4243) - (&a11 | 0x190BDBC) + 26262972) ^ 0x43924600);
  a14 = v20 - v25 + 270;
  a15 = v22 - v25 - 817558848;
  a11 = &STACK[0x31F751E514EC29AC];
  a12 = v21;
  a13 = 21 * ((&a11 | 0x43) - (&a11 | 0xBC) - 68)
      + (v24 ^ 0x66)
      + ((v24 << (((v20 - 60) & 0xD8) + 121)) & 0xF6 ^ 0x32)
      - 1;
  v26 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(v18 + 8 * (v20 - 550)) - 8))(&a11);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((3382 * (a16 == v17)) ^ v20)))(v26);
}

uint64_t sub_18CA383D4()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((v1 - 1115276916 < (v2 ^ 0x87Cu) - 2038) * (v2 ^ 0xF8B)) | v2))
                            - 4))();
}

uint64_t sub_18CA38414@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, unsigned int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  a5 = (v10 - 642) ^ (1314530549 * ((2 * (&a4 & 0x662D5108) - &a4 - 1714245904) ^ 0x28DB283E));
  a6 = a3;
  a7 = a1;
  v11 = (*(uint64_t (**)(int *))(v8 + 8 * (v10 ^ 0x7E2)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((a4 == v7 + ((v10 - 1838878985) & 0x6D9B0BFF) - 747)
                                              * ((v10 - 1463948537) & 0x57420FEF ^ 0xD07)) ^ v10)))(v11);
}

void sub_18CA384D8(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)(v1 + 56) - 0x7FBEEC3D5BCBFBD0) = a1;
  *(_DWORD *)(v1 + 28) = 1556779682;
}

void sub_18CA385A4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) ^ (366490169 * (a1 ^ 0x16AE5644));
  __asm { BR              X11 }
}

void sub_18CA386A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_DWORD *)(a3 + v3) = 1194828854;
}

void sub_18CA395FC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 16) ^ (673918253 * ((a1 + 1608852281 - 2 * (a1 & 0x5FE52339)) ^ 0xC5AD3891));
  v2 = *(_QWORD *)(a1 + 24);
  if (*(_DWORD *)(v2 - 0x61D35839E4698502) - 1194828854 >= 0)
    v4 = *(_DWORD *)(v2 - 0x61D35839E4698502) - 1194828854;
  else
    v4 = 1194828854 - *(_DWORD *)(v2 - 0x61D35839E4698502);
  v3 = *(_QWORD *)a1;
  if (*(_DWORD *)(*(_QWORD *)a1 - 0x61D35839E4698502) - 1194828854 >= 0)
    v5 = *(_DWORD *)(v3 - 0x61D35839E4698502) - 1194828854;
  else
    v5 = 1194828854 - *(_DWORD *)(v3 - 0x61D35839E4698502);
  v8 = v1 - 142545853 * ((2 * (&v7 & 0x260CD9E0) - &v7 + 1509107224) ^ 0x730C8977) + 674;
  v7 = v2;
  sub_18CA39EA0((uint64_t)&v7);
  if (v4 >= v5)
    v6 = v5;
  else
    v6 = v4;
  __asm { BR              X14 }
}

uint64_t sub_18CA39798@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  _BOOL4 v15;

  v11 = v4 - 1680659586;
  v12 = 4 * (v7 + v5);
  v13 = v9
      - 795317282
      + v3
      + 185
      + (*(_DWORD *)(*(_QWORD *)(v10 - 0x61D35839E46984FELL) + v12) ^ v6)
      - (*(_DWORD *)(*(_QWORD *)(a2 - 0x61D35839E46984FELL) + v12) ^ v6);
  *(_DWORD *)(*(_QWORD *)(a1 - 0x61D35839E46984FELL) + v12) = v13 + v6 - (v8 & (2 * v13));
  v15 = v7 + 2015710343 < 466824062 && v7 + 2015710343 >= v11;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * ((536 * v15) ^ v3))
                                                                                       - 8))(0x7BEDA77FD4FDEFFDLL, 0x1A9FBDFFALL, 0xDFD3FCBFFB9A7BE0, 2015710343, 466824062);
}

uint64_t sub_18CA39898()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v2 - 1248650770 <= v1 + 1497428673 && v2 - 1248650770 >= (int)(v3 - 650054086 + ((v1 + 247307464) & 0xF1425FBF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v5 | v1)) - 4))();
}

uint64_t sub_18CA398F8()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  BOOL v5;

  v5 = v2 - 1879132114 > 866948901 || v2 - 1879132114 < v3 - 1280534746;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((((v1 - 91) ^ v5) & 1) * ((3 * (v1 ^ 0x39F)) ^ 0x3EA)) ^ v1))
                            - 4))();
}

uint64_t sub_18CA39958()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((54 * (((v1 == 0x5BC1A43FD0986BDDLL) ^ (v2 + 16)) & 1)) ^ v2))
                            - 4))();
}

uint64_t sub_18CA39998()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((((v2 + v3 - 1) < 0x7FFFFFFF) * (((v1 - 2553) | 0x105) ^ 0x25A)) ^ (v1 - 2392)))
                            - 12))();
}

uint64_t sub_18CA39D18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((2864
                                               * (*(_DWORD *)(*(_QWORD *)(a1 - 0x61D35839E46984FELL)
                                                            + 4
                                                            * (((((v2 + 976940188) & 0xC5C512FF) - 947444606) & 0x3878DFF7 ^ (v3 + 1388))
                                                             + v5)) == v4)) ^ (v2 + 976940188) & 0xC5C512FF))
                            - 12))();
}

uint64_t sub_18CA39D90()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((((v1 ^ 0x58A) - 1487) * ((v3 + v2 - 2) < 0x7FFFFFFF)) ^ v1))
                            - 12))();
}

uint64_t sub_18CA39DC8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((2864
                                          * (*(_DWORD *)(v2
                                                       + 4
                                                       * (((v1 - 947444606) & 0x3878DFF7 ^ (v3 + 1388))
                                                        + v5)) == v4)) ^ v1))
                            - 12))();
}

void sub_18CA39E14(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  *(_DWORD *)(a1 - 0x61D35839E4698502) = (((v3 + v2) * (v1 - 1159718714)) ^ 0xE73FE436)
                                         + 1610072064
                                         + ((2 * (v3 + v2) * (v1 - 1159718714)) & 0xCE7FC86C);
}

void sub_18CA39EA0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 8) + 142545853 * ((2043643383 - (a1 | 0x79CF85F7) + (a1 | 0x86307A08)) ^ 0xACCFD567);
  v2 = *(_QWORD *)a1;
  v3 = v1
     + 1697562443 * ((-2037474566 - (&v3 | 0x868E9AFA) + (&v3 | 0x79716505)) ^ 0xAEE15D81)
     - 2189;
  v4 = v2;
  sub_18CA3A610((uint64_t)&v3);
  __asm { BR              X8 }
}

void sub_18CA39FB4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;

  if ((*(_DWORD *)(v2 - 0x61D35839E4698502) - 1194828855) >= 0x7FFFFFFF)
    v3 = v1;
  else
    v3 = v1 + 2;
  *(_DWORD *)(v0 + 12) = v3;
}

void sub_18CA3A020(_DWORD *a1, uint64_t a2)
{
  _BOOL4 v2;

  v2 = (*a1 + *(_DWORD *)(a2 + 4) + 1656751660) > 0xC8;
  __asm { BR              X11 }
}

uint64_t sub_18CA3A06C()
{
  return 4294925278;
}

void sub_18CA3A1A8(uint64_t a1)
{
  int v1;

  v1 = 1761959447 * (((a1 | 0x8DD98CF7) - a1 + (a1 & 0x72267308)) ^ 0x2C7E4D33);
  __asm { BR              X9 }
}

uint64_t sub_18CA3A250@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((((((v1 - 2108350937) ^ (v2 == 346911724)) & 1) == 0)
                                          * ((3 * (v1 ^ 0x6FE)) ^ 0x677)) ^ v1))
                            - 12))();
}

uint64_t sub_18CA3A2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2
                                                                                + 8
                                                                                * ((347
                                                                                  * ((((v2 & 0x7DAADDDF) + 1866) ^ 0x8EC) == 32)) ^ ((v2 & 0x7DAADDDF) + 1866))))(a1, 2430, 4276084405, 171891482, 2284);
}

uint64_t sub_18CA3A3E4@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(a2 + 8 * (((v5 == (v4 ^ a1) + 1017 + v2 + (v4 ^ a1) + 1866) * v3) ^ v4 ^ a1)))();
}

uint64_t sub_18CA3A410@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((((v2 + 660227380) & 0xD8A5BF7F ^ 0xA4F) * (v3 != v1)) ^ v2))
                            - 12))();
}

uint64_t sub_18CA3A44C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;

  v6 = (v5 - 829217220) & 0x316CDE77;
  v7 = v2 + v3;
  v8 = v3 + 1;
  *(_DWORD *)(*(_QWORD *)(v1 - 0x61D35839E46984FELL) + 4 * (v7 + v6 + 1055)) = v4;
  *(_DWORD *)(v1 - 0x61D35839E4698502) = v8;
  v9 = v6 + 1055 + v2 + v8;
  if (v9 < 0)
    v9 = -v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((418
                                          * ((int)((v9 ^ 0xFF37EC7E)
                                                 + ((2 * v9) & 0xFE6FD8FC)
                                                 + 13110803
                                                 + ((v6 - 2561) | 0x528)) >= 0)) ^ (v6 + 1055)))
                            - 12))();
}

uint64_t sub_18CA3A538@<X0>(uint64_t a1@<X8>)
{
  int v1;
  _QWORD *v2;
  int v3;
  unsigned int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1057
                                          * (*(_DWORD *)(*v2 + 4 * v4) != v1
                                                                          + ((194 * (v3 ^ 0xA54) - 1134133495) & 0x439977FE)
                                                                          - 1390)) ^ v3))
                            - 12))();
}

uint64_t sub_18CA3A590@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((418 * (v2 - 1 + ((a1 - 3616) | 0x528) >= 0)) ^ a1)) - 12))();
}

uint64_t sub_18CA3A5D0(uint64_t result)
{
  int v1;
  int v2;
  int *v3;
  int v4;
  int v5;

  if ((v2 + 3685) >= 0x7FFFFFFF)
    v5 = -v1;
  else
    v5 = v4;
  *v3 = v5;
  *(_DWORD *)(result + 28) = 1111596090;
  return result;
}

uint64_t sub_18CA3A610(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v1 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x61D35839E4698502);
  v4 = v1 - 1194828854;
  v3 = v1 - 1194828854 < 0;
  v5 = 1194828854 - v1;
  if (v3)
    v4 = v5;
  v2 = (*(_DWORD *)a1 - 1697562443 * ((a1 & 0xEAB71AA9 | ~(a1 | 0xEAB71AA9)) ^ 0xC2D8DDD2) - 8) | 0xB;
  return (*((uint64_t (**)(void))off_1E2538470[v2 - 345]
          + ((((v4 ^ 0xFAFFFADE) + 2111552936 + ((v2 ^ 0xF5FFF437) & (2 * v4)) - 2027665543 < 0x7FFFFFFF)
            * ((196 * (v2 ^ 0x189)) ^ 0xE9B)) ^ v2)
          - 1))();
}

uint64_t sub_18CA3A730(uint64_t a1, int a2, unsigned int a3, uint64_t a4)
{
  int v4;
  _QWORD *v5;
  _BOOL4 v6;

  v6 = *(_DWORD *)(*v5 + 4 * a3) != a2;
  return (*(uint64_t (**)(void))(a4 + 8 * ((v6 | (2 * v6)) ^ v4 ^ 3)))();
}

void sub_18CA3A75C()
{
  JUMPOUT(0x18CA3A6F8);
}

uint64_t sub_18CA3A76C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(result + 16) = a5;
  return result;
}

void sub_18CA3A774(uint64_t a1)
{
  int v1;
  int v2;

  v1 = 142545853 * (((a1 | 0xDB6CA151) - (a1 & 0xDB6CA151)) ^ 0xF1930E3E);
  v2 = *(_DWORD *)(a1 + 16) ^ v1;
  __asm { BR              X14 }
}

uint64_t sub_18CA3A858@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v7;
  uint64_t v8;
  unsigned int v9;

  v5 = v3
     + 1437274309
     * (((&v7 | 0x77E528AA) - &v7 + (&v7 & 0x881AD750)) ^ 0x55EB559F);
  v9 = v5 - (((245779960 - v4) & 0xD20E088E) + v1) - 262528277;
  v8 = v2;
  v7 = v5 - 851;
  return ((uint64_t (*)(int *))(*(_QWORD *)(a1 + 8 * (v3 ^ 0x948)) - 8))(&v7);
}

void sub_18CA3A9A8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1401278017 * (a1 ^ 0x42376E7));
  __asm { BR              X9 }
}

uint64_t sub_18CA3AA5C@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7, unsigned int a8)
{
  uint64_t v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;

  v14 = *a1 + v12 - 688448090 + *(_DWORD *)(v8 - 0x69A7616A48D0516ELL);
  v15 = 375636451 * (((~&a5 & 0x2B0B248C) - (~&a5 | 0x2B0B248D)) ^ 0x78357E01);
  a8 = 1403984202 - v15;
  a7 = v8;
  a6 = v15 - 484028996 + v14;
  a5 = v15 + v13 + 1434;
  v16 = ((uint64_t (*)(int *))(*(_QWORD *)(a2 + 8 * (v13 - 1180)) - 8))(&a5);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11 + 8 * ((3430 * (*v9 == v10)) ^ v13))
                                          - (v13 + 1771)
                                          + 3002))(v16);
}

uint64_t sub_18CA3AB3C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_QWORD *)(v0 + 8) == 0x129748112B546E94) * (v1 - 696 + 113 * (v1 ^ 0xBCD) - 3543)) ^ v1)))();
}

uint64_t sub_18CA3AB8C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((45 * (v1 == (v0 ^ 0xCAF) + 688446657)) ^ v0))
                            - ((v0 + 1612848369) & 0x9FDDDEDB ^ 0x4DFLL)))();
}

void sub_18CA3ABE0(int a1@<W8>)
{
  int v1;
  _DWORD *v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = (a1 & 0xBFFFFFFF ^ 0xD24DB895)
     - 2 * (((v1 - 187198882) & 0xB286CDB ^ 0x124DBC4C) & (a1 & 0xBFFFFFFF ^ 0xD24DB895) ^ a1 & 2)
     - 1840400235;
  v6 = *(_QWORD *)(v3 - 0x69A7616A48D0517ELL);
  v7 = *v2 - 1533203976;
  *(_BYTE *)(v6 + v7) = (HIBYTE(v5) ^ 0x92) - 2 * ((HIBYTE(v5) ^ 0x92) & 0xDD ^ HIBYTE(v5) & 4) + 89;
  *(_BYTE *)(v6 + v7 + 1) = (BYTE2(v5) ^ 0x4D) - 2 * ((BYTE2(v5) ^ 0x4D) & 0x5B ^ BYTE2(v5) & 2) + 89;
  *(_BYTE *)(v6 + v7 + 2) = (BYTE1(v5) ^ 0xB8) + (~(2 * (BYTE1(v5) ^ 0xB8)) | 0x4D) + 90;
  *(_BYTE *)(v6 + v7 + 3) = v5 ^ 0xCC;
  v8 = *(_QWORD *)(v3 - 0x69A7616A48D0517ELL);
  v9 = v4 - ((2 * v4 - 1376896196) & 0xFE560522);
  v10 = ((2 * (*v2 - 1533203972)) & 0xB9F7F2EE) + ((*v2 - 1533203972) ^ 0x5CFBF977) - 1560017271;
  *(_BYTE *)(v8 + v10) = ((702406608 - v9) >> 24) - (((702406608 - v9) >> 23) & 0xB2) + 89;
  *(_BYTE *)(v8 + v10 + 1) = (((v9 - 702406609) >> 16) ^ 0x2B)
                           - ((2 * (((v9 - 702406609) >> 16) ^ 0x2B)) & 0xB2)
                           + 89;
  *(_BYTE *)(v8 + v10 + 2) = (((unsigned __int16)(v4 - ((2 * v4 + 15164) & 0x522) + 8239) >> 8) ^ 2)
                           + (~((v9 - 702406609) >> 7) | 0x4D)
                           + 90;
  *(_BYTE *)(v8 + v10 + 3) = (v4 - ((2 * v4 + 60) & 0x22) + 47) ^ 0xC8;
  *v2 = v11;
}

uint64_t sub_18CA3AE54(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(qword_1E252FB30[(3935 * (*(_DWORD *)(a2 + 4) == 756011397)) ^ 0x1ECu] - 8))();
}

uint64_t sub_18CA3AE98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a1 + 96) + 468) = *(_BYTE *)(*(_QWORD *)(a2 + 8) + 12);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 3800) - 8))();
}

void sub_18CA3AF04()
{
  JUMPOUT(0x18CA3AED4);
}

uint64_t sub_18CA3AF0C@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

void sub_18CA3AF14(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) + 366490169 * ((~(_DWORD)a1 & 0xB3FF5545 | a1 & 0x4C00AABA) ^ 0xA5510301);
  __asm { BR              X10 }
}

uint64_t sub_18CA3AFE8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, unint64_t *a5, int a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v11 = 1401278017 * ((&a4 - 635742185 - 2 * ((unint64_t)&a4 & 0xDA1B5817)) ^ 0xDE382EF0);
  a6 = (v8 + 303) ^ v11;
  a4 = 688448106 - v11;
  a5 = &STACK[0x129748112B546E9C];
  a8 = v11 - 1833524787;
  a7 = v9;
  v12 = ((uint64_t (*)(int *))(*(_QWORD *)(a1 + 8 * (int)(v8 & 0x95583841)) - 8))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * ((5045
                                                        * (*(_DWORD *)(v9 - 0x69A7616A48D05166) == v8 + 1556778742)) ^ v8))
                                          - 8))(v12);
}

void sub_18CA3B0CC(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  _BYTE *v5;

  v4 = *(_QWORD *)(v1 + 8)
     + v2
     - ((((*(_QWORD *)(v1 + 8) + v2) << ((2 * (v3 ^ 0x65)) ^ 0x93u)) + 0x5A0DCA4B7CF4F812) & 0x8EC2B8A230233E28)
     - 0xB97BE892973E4E3;
  *v5 = (HIBYTE(v4) ^ 0x47) - ((2 * (HIBYTE(v4) ^ 0x47)) & 0xB2) + 89;
  v5[1] = (BYTE6(v4) ^ 0x61) - ((2 * (BYTE6(v4) ^ 0x61)) & 0xB2) + 89;
  v5[2] = (BYTE5(v4) ^ 0x5C) - ((2 * (BYTE5(v4) ^ 0x5C)) & 0xB2) + 89;
  v5[3] = (BYTE4(v4) ^ 0x51) + ~(2 * ((BYTE4(v4) ^ 0x51) & 0x5B ^ BYTE4(v4) & 2)) + 90;
  v5[4] = (BYTE3(v4) ^ 0x18) - 2 * ((BYTE3(v4) ^ 0x18) & 0xDF ^ BYTE3(v4) & 6) + 89;
  v5[5] = (BYTE2(v4) ^ 0x11) - ((2 * (BYTE2(v4) ^ 0x11)) & 0xB2) + 89;
  v5[6] = (BYTE1(v4) ^ 0x9F) - ((2 * (BYTE1(v4) ^ 0x9F)) & 0xB2) + 89;
  v5[7] = v4 ^ 0x4D;
  *(_DWORD *)v1 = *a1;
}

void sub_18CA3B254(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v2 = *(_DWORD *)(*(_QWORD *)a1 - 0x61D35839E4698502);
  v4 = v2 - 1194828854;
  v3 = v2 - 1194828854 < 0;
  v5 = 1194828854 - v2;
  if (!v3)
    v5 = v4;
  v1 = *(_DWORD *)(a1 + 8) + 1437274309 * ((-1739840284 - (a1 | 0x984C24E4) + (a1 | 0x67B3DB1B)) ^ 0x45BDA62E) + 1618;
  __asm { BR              X10 }
}

uint64_t sub_18CA3B38C@<X0>(unsigned int a1@<W2>, int a2@<W3>, unint64_t a3@<X4>, int a4@<W5>, unsigned int a5@<W6>, int a6@<W8>)
{
  uint64_t v6;
  _QWORD *v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((*(_DWORD *)(*v7 + 4 * a5) != a4 + 1618 + a6) * a2) ^ a4))
                            - (((a4 - 612) | a1) ^ a3)))();
}

void sub_18CA3B3C4()
{
  JUMPOUT(0x18CA3B34CLL);
}

uint64_t sub_18CA3B3D0(uint64_t result)
{
  *(_DWORD *)(result + 12) = 606623167;
  return result;
}

void sub_18CA3B4A0(uint64_t a1)
{
  int v1;
  int v2[10];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 12) + 673918253 * ((-1279141011 - (a1 | 0xB3C1DB6D) + (a1 | 0x4C3E2492)) ^ 0xD6763F3A);
  v2[1] = v1 + 31090337 * (v2 ^ 0xC7816049) - 849014256;
  sub_18CA83580(v2);
  __asm { BR              X8 }
}

uint64_t sub_18CA3B59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, int a15)
{
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  a15 = v18 - ((&a13 + 1509402454 - 2 * ((unint64_t)&a13 & 0x59F7A756)) ^ 0x9E76C71F) * v16 + 2014;
  a13 = &STACK[0x5D7153D4F79FA49F];
  sub_18CA4ED30((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * (int)(((a14 == v15) * ((((v18 + 1131438162) & 0xBC8F9F7F) + 552) ^ 0x577)) | v18))
                                                                                       - 12))(v19, v20, v21, v22, v23, v24);
}

uint64_t sub_18CA3B63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, int a15, int a16)
{
  int *v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v20 = *v16;
  v21 = (2 * *v16) & 0x49572A30;
  v22 = 366490169 * (&a13 ^ 0x16AE5644);
  a14 = a10;
  a13 = v22 + v20 - v21 - 1532259048;
  a15 = v22 + v19 + 9;
  sub_18C9B6420((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * ((3371 * (a16 == v17 + ((v19 - 546) | 0x28) - 1389)) ^ v19))
                                                                                       - 12))(v23, v24, v25, v26, v27, v28);
}

uint64_t sub_18CA3B6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, int a16, int a17, int a18)
{
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  v21 = 1314530549 * ((&a13 - 2064966048 - 2 * ((unint64_t)&a13 & 0x84EB1E60)) ^ 0x35E298AE);
  a14 = (v20 + 1106912065) ^ v21;
  a15 = a10;
  a13 = &STACK[0x7FBEEC3D5BCBFBE8];
  a16 = 88846744 - v21;
  a18 = v21 ^ 0x4719F6BF;
  v22 = sub_18CA83938((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * ((11 * (a17 == v18)) ^ v20))
                                          - ((v20 + 672540824) & 0xD7E9D56D ^ 0x561)))(v22);
}

uint64_t sub_18CA3B7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;

  v22 = v20 - 1427;
  a16 = a13;
  a17 = &a12;
  a15 = (v22 + 926) ^ (((&a14 & 0x6BE570BB | ~(&a14 | 0x6BE570BB)) ^ 0x2513098A) * v21);
  (*(void (**)(int *))(v19 + 8 * (v22 - 446)))(&a14);
  a16 = a13;
  LODWORD(a17) = v22
               - 476588053 * (((&a14 | 0xDDC6646D) + (~&a14 | 0x22399B92)) ^ 0x603B602F)
               + 2092;
  v23 = sub_18CA3B9C4((uint64_t)&a14);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * (((a14 == v17) * (v22 ^ 0x8DE)) ^ v22)))(v23);
}

uint64_t sub_18CA3B888()
{
  uint64_t v0;
  int v1;
  void (*v2)(uint64_t *);
  int v3;
  unsigned int v4;
  int v5;
  uint64_t result;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  v4 = (v3 + 1447351699) & 0xA9BB2FFF;
  v5 = 463 * (v4 ^ 0x764);
  v12 = v4
      + (((&v10 | 0x745C1E69) - &v10 + (&v10 & 0x8BA3E190)) ^ 0x62F2482D) * v1
      - 1556;
  v11 = v9;
  v2(&v10);
  v12 = v5 + ((&v10 & 0x54AA2837 | ~(&v10 | 0x54AA2837)) ^ 0xBDFB818C) * v1 - 1050;
  v11 = v7;
  result = ((uint64_t (*)(uint64_t *))v2)(&v10);
  *(_DWORD *)(v0 + 8) = (v8 ^ 0x7CCEB2E7) - 537141317 + ((v8 << (v3 + 45)) & 0xF99D65CE);
  return result;
}

uint64_t sub_18CA3B9C4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) + 476588053 * (a1 ^ 0xBDFD0443);
  return (*((uint64_t (**)(void))off_1E2538470[v1 - 2510] + ((*(_QWORD *)(a1 + 8) != 0x69A7616A48D0517ELL) ^ v1) - 1))();
}

uint64_t sub_18CA3BA28()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1 + 8 * ((6698 * (*(_DWORD *)(v2 - 0x69A7616A48D05166) == 1556779682)) ^ v0)))();
}

uint64_t sub_18CA3BA64()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v2 - 0x69A7616A48D0516ELL) + 51121135;
  v4 = *(_DWORD *)(v2 - 0x69A7616A48D05172) + 553454116;
  v5 = v4 < 0x5E6EE1F7;
  v6 = v3 < v4;
  if (v3 < 0x5E6EE1F7 != v5)
    v6 = v5;
  return (*(uint64_t (**)(void))(v1 + 8 * ((1142 * v6) | v0)))();
}

_DWORD *sub_18CA3BAEC@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  _DWORD *v2;

  *v2 = a2;
  *result = 1556737495;
  return result;
}

void sub_18CA3BB00(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 24) - 366490169 * ((2 * (a1 & 0x104AC4A1) - a1 - 273335458) ^ 0xF91B6D1A);
  if (*(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x61D35839E4698502) - 1194828854 >= 0)
    v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x61D35839E4698502) - 1194828854;
  else
    v3 = 1194828854 - *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x61D35839E4698502);
  v2 = *(_QWORD *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x61D35839E4698502) - 1194828854 >= 0)
    v4 = *(_DWORD *)(v2 - 0x61D35839E4698502) - 1194828854;
  else
    v4 = 1194828854 - *(_DWORD *)(v2 - 0x61D35839E4698502);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = v1 - 142545853 * (&v6 ^ 0x2AFFAF6F) + 612;
  sub_18CA39EA0((uint64_t)&v6);
  if (v3 >= v4)
    v5 = v4;
  else
    v5 = v3;
  __asm { BR              X15 }
}

uint64_t sub_18CA3BC78@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  _BOOL4 v13;

  v11 = 4 * (v10 + v5);
  v12 = v8
      - 2142097466
      + (v4 ^ 0xF8D ^ (v6 - 2016) ^ *(_DWORD *)(*(_QWORD *)(v7 - 0x61D35839E46984FELL) + v11))
      + (*(_DWORD *)(*(_QWORD *)(a2 - 0x61D35839E46984FELL) + v11) ^ v6);
  *(_DWORD *)(*(_QWORD *)(a1 - 0x61D35839E46984FELL) + v11) = v12 + v6 - (v9 & (2 * v12));
  v13 = v3 > 0x1D99B001;
  if (v13 == v10 + 1192696521 < -496611330)
    v13 = v10 + 1192696521 < (int)(v3 + 1650872318);
  return (*(uint64_t (**)(void))(v2 + 8 * ((28 * !v13) ^ v4)))();
}

uint64_t sub_18CA3BD8C()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v2 + 920801635 < (int)(v3 + 1378977433);
  if (v3 > v1 + 768504134 != v2 + 920801635 < -768506215)
    v4 = v3 > v1 + 768504134;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((v4 * (((v1 - 1710) | 0x608) ^ 0x732)) ^ v1)) - 12))();
}

uint64_t sub_18CA3BE04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  _BOOL4 v16;
  uint64_t v17;
  int v18;
  int v19;
  _BOOL4 v20;

  v15 = v4 - 111;
  v16 = v14 > v7;
  v17 = 4 * ((((v15 - 1335) | 0x500) ^ (v8 + 742)) + v13);
  v18 = v2 + v11 + (*(_DWORD *)(*(_QWORD *)(v10 - 0x61D35839E46984FELL) + v17) ^ v9);
  *(_DWORD *)(*(_QWORD *)(a1 - 0x61D35839E46984FELL) + v17) = v18 + v9 - (v12 & (2 * v18));
  v19 = v13 + 1 + v5;
  LODWORD(v17) = v16 ^ (v19 < v3);
  v20 = v19 < v6;
  if (!(_DWORD)v17)
    v16 = v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((455 * v16) ^ (v15 + 111))) - 12))();
}

uint64_t sub_18CA3BED8()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v6;

  v4 = (((v1 - 1398) | 0xC2) ^ 0xBB0BC18B) + v2;
  v6 = v4 > 1448802434 || v4 < v3 - 698681213;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((2144 * v6) ^ v1)) - ((v1 - 1398) ^ 0x3DBu) + 471))();
}

uint64_t sub_18CA3BF38@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _BOOL4 v17;

  v13 = 4 * (v12 + v8);
  v14 = v3 + v10 + (*(_DWORD *)(*(_QWORD *)(a2 - 0x61D35839E46984FELL) + v13) ^ v9);
  *(_DWORD *)(*(_QWORD *)(a1 - 0x61D35839E46984FELL) + v13) = v14 + v9 - (v11 & (2 * v14));
  v15 = v4 + v12 + 451;
  v17 = v15 <= v5 && v15 >= v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1468 * v17) ^ v6)) - 8))();
}

uint64_t sub_18CA3BFF0(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((2153 * ((a1 ^ (v2 == 0x502E3FED80522FC6)) & 1)) ^ a1))
                            - 12))();
}

uint64_t sub_18CA3C028@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  int v5;

  *(_DWORD *)(*(_QWORD *)(a2 - 0x61D35839E46984FELL)
            + 4 * (int)(((result - 1469907430) & 0x579D07B7 ^ (v3 + 689)) + v5)) = v4 - 1;
  *(_DWORD *)(a2 - 0x61D35839E4698502) = (((v5 + 1 + v3) * (v2 - 1159718714)) ^ 0xF7F7F576)
                                         + 1329573568
                                         + ((2 * (v5 + 1 + v3) * (v2 - 1159718714)) & 0xEFEFEAEC);
  return result;
}

void sub_18CA3C0FC(uint64_t a1)
{
  int v1;
  BOOL v3;

  v3 = *(_QWORD *)(a1 + 8) == 0x6C1BF3FFDF608403
    || (unsigned __int16)(*(_WORD *)(a1 + 20) + 26273 * ((2 * (a1 & 0x1CB3) - a1 - 7348) ^ 0x8305)) == 695;
  v1 = *(_DWORD *)a1 - 31090337 * ((2 * (a1 & 0x2E391CB3) - a1 + 1371988812) ^ 0x96478305);
  __asm { BR              X8 }
}

uint64_t sub_18CA3C1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  __int16 v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v41;

  v39 = ((v36 ^ 0x5DE) + 1624) | 0x1C0;
  HIDWORD(a10) = v36 ^ 0x415;
  HIDWORD(v41) = (27 * (v36 ^ 0x465)) ^ 0xDC10201;
  LODWORD(v41) = v36 ^ 0x466;
  HIDWORD(a19) = v36 ^ 0x49D;
  HIDWORD(a15) = v36 - 1916085902;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((52 * (((v39 - 1476488728) & 0x580165FF) + 571 * (v39 ^ 0x9C2) == 1566)) | v39)))(a1, v34 - 0x6C1BF3FFDF608403, (unsigned __int16)(((((v36 ^ 0x5DE) + 1624) | 0x1C0) ^ 0xF489) + v35), 2498, 2818478568, 1476486655, 52, 2520, a9, a10, &a34, (unint64_t)&a30 % 0x25 + 16, a13, a14, a15, (v38 - 152) | 0x3249A29D493317FBLL, (((v38 - 152) | 0x4D76C98BF5069B27) - (v38 - 152) + ((v38 - 152) & 0xB28936740AF964D8)) ^ 0x31FE54E6F4E808FLL, v34 - 0x6C1BF3FFDF608403, a19,
           v41);
}

uint64_t sub_18CA3C478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;

  v21 = **(unsigned int **)(v19 + 8 * (v17 - 1033));
  v22 = (_QWORD *)(v20 - 152);
  *v22 = -673918253 * a17;
  *(_DWORD *)(v20 - 116) = (673918253 * a17) ^ (v17 + 1270287748) ^ 0xFD;
  *(_DWORD *)(v20 - 128) = 673918253 * a17;
  *(_DWORD *)(v20 - 124) = 673918253 * a17 + v17 + 1270287748 - 499;
  *(_DWORD *)(v20 - 112) = 673918253 * a17 + v17 + 2126730134;
  *(_DWORD *)(v20 - 144) = v17 + 1270287748 - 673918253 * a17;
  v22[2] = v21 - 673918253 * a17;
  v23 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * (v17 ^ 0x48D)) - 4))(v20 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * *(int *)(v20 - 120)) - 4))(v23);
}

uint64_t sub_18CA3C554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  (*(void (**)(uint64_t))(v23 + 8 * (v20 - 1114)))(a12);
  v25 = (*(uint64_t (**)(void))(v23 + 8 * SHIDWORD(a10)))();
  *v24 = v25;
  v24[1] = 1812433253 * (v25 ^ (v25 >> 30)) + 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 + 8 * ((v20 - 1010) | 0x400)) - 4))(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, v21, v19, a15, a16, a17, a18, a19);
}

uint64_t sub_18CA3C5C8()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)(v6 + 4 * v0) = v0 + (v1 ^ (v1 >> 30)) * v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v0 > 0x26E) * v2) ^ v4)) - 4))();
}

uint64_t sub_18CA3C5F4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v26 = 571 * (a1 ^ 0x203);
  v27 = (*(uint64_t (**)(uint64_t, _QWORD))(v23 + 8 * (a1 - 363)))(a4, 0);
  ((void (*)(uint64_t))v21)(v27);
  v24[1] = v21() + ((1664525 * (*v24 ^ (*v24 >> 30))) ^ v24[1]);
  v28 = v25 - 152;
  v29 = 1314530549
      * ((~((v25 - 152) | 0xAA431977F3A98D02) + ((v25 - 152) & 0xAA431977F3A98D02)) ^ 0xF2996615BD5FF433);
  *(_QWORD *)(v28 + 40) = v29 ^ 0x26F;
  *(_DWORD *)(v25 - 152) = v29 + v26 + 1836123792;
  *(_DWORD *)(v25 - 132) = v26 - 1095977948 - v29 + 147;
  *(_QWORD *)(v28 + 8) = v29 + 2;
  *(_DWORD *)(v25 - 124) = (v26 - 1095977948) ^ v29;
  *(_DWORD *)(v25 - 120) = v29 + 1;
  *(_DWORD *)(v25 - 128) = (v26 - 1095977710) ^ v29;
  v30 = a21(v25 - 152);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * *(int *)(v25 - 136)))(v30);
}

uint64_t sub_18CA3C740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30)
{
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *v34 = v34[623];
  v36 = v35 - 152;
  *(_QWORD *)(v36 + 32) = (v30 + 1) - v31;
  *(_DWORD *)(v35 - 152) = a26 - v31;
  *(_DWORD *)(v35 - 148) = 347299999 - v31 + a30;
  *(_DWORD *)(v35 - 112) = v31;
  *(_DWORD *)(v35 - 136) = a25 - v31;
  *(_DWORD *)(v35 - 132) = a26 - v31 - 251;
  *(_QWORD *)(v36 + 8) = a24;
  v37 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v33 + 8 * (a30 - 1117)) - 8))(v35 - 152);
  return (*(uint64_t (**)(uint64_t))(v32 + 8 * *(int *)(v35 - 128)))(v37);
}

uint64_t sub_18CA3C7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  uint64_t v23;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * (HIDWORD(a21) ^ (((v22 == 1) << 6) | ((v22 == 1) << 11)))) - ((571 * (HIDWORD(a21) ^ 0x203u)) ^ 0x47ELL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

void sub_18CA3C8CC()
{
  JUMPOUT(0x18CA3C644);
}

uint64_t sub_18CA3C8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  int v29;
  uint64_t v30;
  _DWORD *v31;

  *v31 = v31[623];
  return ((uint64_t (*)(void))(*(_QWORD *)(v30 + 8 * ((a29 + 1407) ^ (948 * (v29 != 1)))) - a26 + 248))();
}

uint64_t sub_18CA3C920@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  v7 = *(_DWORD *)(v5 + 4 * (v2 - 1));
  *(_DWORD *)(v5 + 4 * v2) = ((1566083941 * (v7 ^ (v7 >> 30))) ^ *(_DWORD *)(v5 + 4 * v2)) - v2;
  *(_DWORD *)(v6 - 112) = v1;
  v8 = v6 - 152;
  *(_QWORD *)(v8 + 32) = v2 + 1 - v1;
  *(_QWORD *)(v8 + 8) = 623 - v1;
  v9 = a1 - 1389097981 - v1;
  *(_DWORD *)(v6 - 152) = v9;
  *(_DWORD *)(v6 - 148) = 347299999 - v1 + a1;
  *(_DWORD *)(v6 - 136) = v9 + 318;
  *(_DWORD *)(v6 - 132) = ((a1 - 1389097981) ^ 0xDF) - v1;
  v10 = v4(v6 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * *(int *)(v6 - 128)) - 12))(v10);
}

uint64_t sub_18CA3C9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  int v29;
  uint64_t v30;

  return ((uint64_t (*)(void))(*(_QWORD *)(v30 + 8 * ((a29 + 1407) ^ (948 * (v29 != 1)))) - a26 + 248))();
}

uint64_t sub_18CA3C9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unint64_t **a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int v33;

  *v31 = 0x80000000;
  off_1E2538470[a26 - 57](a27);
  v32 = v31[1];
  v33 = v31[398] ^ ((v31[2] & 0x7FFFFFFE | v32 & (a26 + 2147483392)) >> 1) ^ *((_DWORD *)&a30 + (v31[2] & 1));
  *v31 = v31[397] ^ ((v32 & 0x7FFFFFFE | *v31 & 0x80000000) >> 1) ^ *((_DWORD *)&a30 + (v32 & 1));
  v31[1] = v33;
  return ((uint64_t (*)(void))(*(_QWORD *)(v30 + 8 * ((a26 + 2283) ^ 0x19)) - 12))();
}

uint64_t sub_18CA3CAD0@<X0>(uint64_t a1@<X1>, int a2@<W3>, int a3@<W8>)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;

  v8 = (unsigned int *)(v7 + 4 * v4);
  v9 = v4 + 1;
  *v8 = *(_DWORD *)(a1 + 4 * (*(_DWORD *)(v7 + 4 * v9) & 1)) ^ v8[397] ^ ((*(_DWORD *)(v7 + 4 * v9) & 0x7FFFFFFE | (v6 + a3) & v3) >> 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v9 == 227) * a2) ^ a3)) - 12))();
}

uint64_t sub_18CA3CB2C(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  _DWORD *v4;
  int v5;

  v5 = v4[(v2 + 1303) ^ 0x969];
  v4[227] = *(_DWORD *)(a2 + 4 * (v5 & 1)) ^ *v4 ^ ((v5 & 0x7FFFFFFE | v4[227] & 0x80000000) >> 1);
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 + 309)))();
}

void sub_18CA3CB90()
{
  JUMPOUT(0x18CA3CB3CLL);
}

uint64_t sub_18CA3CB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,unsigned int a30)
{
  int v30;
  uint64_t v31;
  _DWORD *v32;

  v32[623] = *(_DWORD *)(a2 + 4 * (*v32 & 1)) ^ v32[396] ^ ((*v32 & 0x7FFFFFFE | v32[623] & 0x80000000) >> 1);
  return (*(uint64_t (**)(void))(v31 + 8 * ((38 * (a30 > ((v30 + 2023327090) & 0x87667576 ^ 0x619))) ^ v30)))();
}

uint64_t sub_18CA3CC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t (*a28)(uint64_t))
{
  int v28;
  unsigned int *v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  *v30 = 1;
  v33 = *v29;
  v34 = v32 - 152;
  v35 = 1314530549 * ((0xCDB65D62B6CCE804 - ((v32 - 152) | 0xCDB65D62B6CCE804) + a16) ^ 0x956C2200F83A9135);
  *(_DWORD *)(v32 - 152) = v35 + (v28 ^ 0xDFB) + 1836123792;
  *(_DWORD *)(v32 - 124) = ((v28 ^ 0xDFB) + 67176276) ^ v35;
  *(_DWORD *)(v32 - 120) = v35 + 1;
  *(_DWORD *)(v32 - 132) = (v28 ^ 0xDFB) + 67176276 - v35 - 10;
  *(_DWORD *)(v32 - 128) = ((v28 ^ 0xDFB) + 67176035) ^ v35;
  *(_QWORD *)(v34 + 8) = v33 + v35;
  *(_QWORD *)(v34 + 40) = v35 ^ 0x13FF;
  v36 = a28(v32 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v31 + 8 * *(int *)(v32 - 136)) - 8))(v36);
}

void sub_18CA3CCEC()
{
  _DWORD *v0;

  *v0 = 0;
  JUMPOUT(0x18CA3CD78);
}

void sub_18CA3CE54()
{
  JUMPOUT(0x18CA3C42CLL);
}

void sub_18CA3CE5C()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = v0;
}

void sub_18CA3CEA0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 366490169 * ((625004151 - (a1 | 0x2540CE77) + (a1 | 0xDABF3188)) ^ 0xCC1167CC);
  __asm { BR              X9 }
}

uint64_t sub_18CA3CF54@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((*(_DWORD *)(v2 - 0x69A7616A48D0516ALL) & 1) != ((a1 - 1901414755) & 0x71554DBD ^ 0xDB1))
                                          * (((a1 - 1622) | 0x808) ^ 0xB20)) | a1))
                            - 4))();
}

uint64_t sub_18CA3CFBC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = ((3 * (v1 ^ 0xB79)) ^ 0xC28E297E) + *(_DWORD *)(v3 - 0x69A7616A48D05172) != ((v1 - 220) ^ 0xA2C);
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v2 + 8 * (((2 * v4) | (4 * v4)) ^ v1)) - 8))(a1, *(_QWORD *)(v3 - 0x69A7616A48D0517ELL));
}

uint64_t sub_18CA3D038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;

  v13 = ((unint64_t)&a9 ^ 0xB7EFBF3BF6B7B1DFLL)
      + 0x7B7FD3F6BFFBDF21
      + ((2 * (_QWORD)&a9) & 0x6FDF7E77ED6F63B0);
  v14 = v10 - 2485;
  a9 = v11 - 1;
  *(_BYTE *)(a2 + a9) = (v13 ^ 0xBA) * (v14 + v13 - 66);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v12 + 8 * ((104 * (a9 == 0)) ^ v9)) - 12))((v14 + v13 - 322));
}

void sub_18CA3D0C8()
{
  JUMPOUT(0x18CA3D08CLL);
}

void sub_18CA3D0D0()
{
  _DWORD *v0;

  *v0 = 651136107;
}

void sub_18CA3D228(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 48) - 1437274309 * ((2 * (a1 & 0x2F1A4CF2) - a1 - 790252787) ^ 0xF2EBCE38);
  __asm { BR              X10 }
}

uint64_t sub_18CA3D358()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = *(_DWORD *)(v2 + 36) - v0 != 138998984 && (*(_QWORD *)v2 | *(_QWORD *)(v2 + 56)) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((201 * v5) ^ v1)) - (v1 ^ 0xB99u) + 3533))();
}

uint64_t sub_18CA3D3AC()
{
  unsigned int v0;
  _QWORD *v1;
  uint64_t v2;
  _BOOL4 v4;

  v4 = v1[1] != 0x3A24535D6CC7614DLL && (v1[5] | v1[2]) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((3514 * v4) ^ v0)) - (v0 + 1929 + (v0 ^ 0xFFFFFFFFFFFFF47FLL))))();
}

uint64_t sub_18CA3D40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(v6 + 8 * (v5 | (4 * (((v4 == 0) ^ v5 ^ 0x3F) & 1))))
                                                                                         - 12))(a1, a2, 366490169, a4, &STACK[0x61D35839E46985C6]);
}

uint64_t sub_18CA3D50C@<X0>(int a1@<W2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  uint64_t (*v32)(unint64_t **);
  uint64_t v33;
  uint64_t (*v34)(unint64_t **);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v44)(unint64_t **);
  uint64_t v45;
  uint64_t (*v46)(unint64_t **);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v29 = (v22 + 264387882) & 0xF03DC77F;
  v30 = ((v28 - 144) ^ 0x16AE5644) * a1;
  *(_DWORD *)(v28 - 124) = v23 - v30 + (v29 ^ 0x423B45F1);
  *(_QWORD *)(v28 - 136) = v20;
  *(_QWORD *)(v28 - 120) = a3;
  *(_DWORD *)(v28 - 144) = (v22 + 659) ^ v30;
  v50 = a4 + v21;
  ((void (*)(uint64_t))(*(_QWORD *)(a2 + 8 * (v22 - 270)) - 12))(v28 - 144);
  LODWORD(v49) = (v29 - 494) | 0x984;
  HIDWORD(v49) = (v29 + 774420926) & 0xD1D74DD7;
  v51 = v24;
  HIDWORD(v47) = v29 - 288;
  *(_QWORD *)(v28 - 144) = a19;
  *(_QWORD *)(v28 - 128) = a20;
  *(_DWORD *)(v28 - 136) = (v29 - 288) ^ (1401278017
                                        * ((((v28 - 144) | 0x92A0D380) - (v28 - 144) + ((v28 - 144) & 0x6D5F2C78)) ^ 0x9683A567));
  v46 = off_1E2538470[v29 - 1430];
  v46((unint64_t **)(v28 - 144));
  LODWORD(v47) = v29 - 873;
  *(_QWORD *)(v28 - 120) = a19;
  *(_QWORD *)(v28 - 112) = a20;
  v48 = a3;
  *(_QWORD *)(v28 - 136) = v25;
  *(_QWORD *)(v28 - 128) = a3;
  *(_DWORD *)(v28 - 144) = v29 - 873 + 1314530549 * ((v28 - 144) ^ 0xB10986CE);
  v32 = (uint64_t (*)(unint64_t **))((char *)off_1E2538470[v29 ^ 0x65A] - 4);
  v32((unint64_t **)(v28 - 144));
  HIDWORD(v45) = v29 + 867;
  *(_QWORD *)(v28 - 144) = v25;
  *(_QWORD *)(v28 - 128) = v51;
  *(_QWORD *)(v28 - 120) = v25;
  *(_DWORD *)(v28 - 136) = (v29 + 867) ^ (366490169 * ((v28 - 1368527058 - 2 * ((v28 - 144) & 0xAE6DEFBE)) ^ 0xB8C3B9FA));
  *(_QWORD *)(v28 - 112) = a20;
  *(_QWORD *)(v28 - 104) = a19;
  v33 = v25;
  v34 = (uint64_t (*)(unint64_t **))((char *)off_1E2538470[v29 - 1425] - 8);
  v34((unint64_t **)(v28 - 144));
  LODWORD(v45) = v29 + 2044;
  *(_QWORD *)(v28 - 136) = a20;
  *(_QWORD *)(v28 - 128) = v33;
  *(_DWORD *)(v28 - 144) = v29
                         + 2044
                         + 366490169
                         * (((((v28 - 144) | 0x1E8627B0) ^ 0xFFFFFFFE) - (~(v28 - 144) | 0xE179D84F)) ^ 0xF7D78E0B);
  *(_QWORD *)(v28 - 112) = v33;
  *(_QWORD *)(v28 - 104) = a12;
  *(_QWORD *)(v28 - 120) = a19;
  v44 = (uint64_t (*)(unint64_t **))((char *)off_1E2538470[v29 ^ 0x63E] - 12);
  v44((unint64_t **)(v28 - 144));
  *(_QWORD *)(v28 - 144) = a15;
  *(_QWORD *)(v28 - 128) = a20;
  *(_DWORD *)(v28 - 136) = (v29 - 288) ^ (1401278017
                                        * ((((2 * (v28 - 144)) | 0xD3E8F5EE) - (v28 - 144) + 369853705) ^ 0xEDD70C10));
  v46((unint64_t **)(v28 - 144));
  *(_DWORD *)(v28 - 144) = v29
                         - 873
                         + 1314530549 * ((((v28 - 144) | 0xC844B1FB) - ((v28 - 144) & 0xC844B1FB)) ^ 0x794D3735);
  *(_QWORD *)(v28 - 136) = v27;
  *(_QWORD *)(v28 - 128) = v48;
  *(_QWORD *)(v28 - 120) = a15;
  *(_QWORD *)(v28 - 112) = a20;
  v32((unint64_t **)(v28 - 144));
  *(_QWORD *)(v28 - 144) = v27;
  *(_DWORD *)(v28 - 136) = (v29 + 867) ^ (366490169
                                        * ((((v28 - 144) | 0x75CE1DFF) - ((v28 - 144) & 0x75CE1DFF)) ^ 0x63604BBB));
  *(_QWORD *)(v28 - 112) = a20;
  *(_QWORD *)(v28 - 104) = a15;
  *(_QWORD *)(v28 - 128) = v51;
  *(_QWORD *)(v28 - 120) = v27;
  v34((unint64_t **)(v28 - 144));
  *(_QWORD *)(v28 - 136) = a20;
  *(_QWORD *)(v28 - 128) = v27;
  *(_DWORD *)(v28 - 144) = v29 + 2044 + 366490169 * ((v28 + 1927623982 - 2 * ((v28 - 144) & 0x72E535BE)) ^ 0x644B63FA);
  *(_QWORD *)(v28 - 120) = a15;
  *(_QWORD *)(v28 - 112) = v27;
  *(_QWORD *)(v28 - 104) = a13;
  v44((unint64_t **)(v28 - 144));
  *(_QWORD *)(v28 - 144) = v33;
  *(_DWORD *)(v28 - 136) = (v29 - 637) ^ (1697562443 * ((v28 - 916527878 - 2 * ((v28 - 144) & 0xC95EE58A)) ^ 0x1ECEDD0E));
  *(_QWORD *)(v28 - 128) = v27;
  ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v29 - 1508] - 12))((unint64_t **)(v28 - 144));
  *(_DWORD *)(v28 - 136) = v29
                         - 142545853 * ((((v28 - 144) | 0xC0B185A4) - ((v28 - 144) & 0xC0B185A4)) ^ 0xEA4E2ACB)
                         + 982;
  *(_QWORD *)(v28 - 144) = v27;
  sub_18CA39EA0(v28 - 144);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(unint64_t **), uint64_t, uint64_t (*)(unint64_t **), uint64_t, char *, uint64_t, uint64_t (*)(unint64_t **), uint64_t, uint64_t, uint64_t))(v26 + 8 * (int)((85 * ((HIDWORD(v49) + v49 + *(_DWORD *)(v28 - 132) - 471812905) < 0x2900B7BB)) ^ v29)))(v35, v36, v37, v38, v39, v40, v41, v42, a5, v44, v45, v46, v47, (char *)off_1E2538470[v29 ^ 0x733] - 8, v49, v34, a13, v50, a15);
}

uint64_t sub_18CA3DA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void (*a14)(uint64_t), uint64_t a15, void (*a16)(uint64_t), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  void (*v28)(uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  *(_QWORD *)(v34 - 136) = v33;
  *(_QWORD *)(v34 - 128) = v31;
  *(_DWORD *)(v34 - 144) = v29 + (((~(v34 - 144) & 0x2B929598) - (~(v34 - 144) | 0x2B929599)) ^ 0x3D3CC3DD) * v27 - 2647;
  v28(v34 - 144);
  *(_QWORD *)(v34 - 144) = v33;
  *(_DWORD *)(v34 - 136) = (v29 - 1075) ^ (366490169 * ((v32 - 936424653 - 2 * (v32 & 0xC82F4B33)) ^ 0xDE811D77));
  *(_QWORD *)(v34 - 112) = a24;
  *(_QWORD *)(v34 - 104) = v31;
  *(_QWORD *)(v34 - 128) = a27;
  *(_QWORD *)(v34 - 120) = v33;
  a16(v34 - 144);
  *(_DWORD *)(v34 - 136) = (v29 - 1075) ^ (366490169
                                         * ((((v32 | 0xE3B7C018) ^ 0xFFFFFFFE) - (~v32 | 0x1C483FE7)) ^ 0xAE669A3));
  *(_QWORD *)(v34 - 112) = a24;
  *(_QWORD *)(v34 - 104) = v31;
  *(_QWORD *)(v34 - 128) = v33;
  *(_QWORD *)(v34 - 120) = v33;
  *(_QWORD *)(v34 - 144) = a18;
  a16(v34 - 144);
  *(_QWORD *)(v34 - 128) = a23;
  *(_QWORD *)(v34 - 144) = v33;
  *(_DWORD *)(v34 - 136) = v29
                         + 1314530549 * ((-686339927 - (v32 | 0xD71748A9) + (v32 | 0x28E8B756)) ^ 0x99E13198)
                         + 1805050316;
  sub_18CA83850(v34 - 144);
  *(_DWORD *)(v34 - 144) = v29 + 366490169 * ((413136061 - (v32 | 0x189FF4BD) + (v32 | 0xE7600B42)) ^ 0xF1CE5D06) - 2647;
  *(_QWORD *)(v34 - 136) = v33;
  *(_QWORD *)(v34 - 128) = a25;
  a14(v34 - 144);
  *(_QWORD *)(v34 - 144) = a25;
  *(_QWORD *)(v34 - 136) = v33;
  *(_DWORD *)(v34 - 128) = v29 + 476588053 * (((v32 | 0xF265E0BF) - (v32 & 0xF265E0BF)) ^ 0x4F98E4FC) - 1893;
  v35 = sub_18CA8284C(v34 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v30 + 8 * ((v29 + 592) ^ ((a22 != 0) | (2 * (a22 != 0)))))
                                          - (v29 ^ 0xC42 ^ (v29 - 1009612798) & 0x3C2D6BBFu ^ 8)))(v35);
}

uint64_t sub_18CA3DCC4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v4 = 375636451 * ((((v3 - 144) ^ 0xB2449F) & 0x956D7C19 | ~((v3 - 144) ^ 0xB2449F | 0x956D7C19)) ^ 0x391E9DF5);
  *(_QWORD *)(v3 - 144) = v2;
  *(_DWORD *)(v3 - 132) = v4 + v0 + 489;
  *(_DWORD *)(v3 - 128) = (v7 + 493656659 + v0 + 1205) ^ v4;
  *(_QWORD *)(v3 - 120) = v8;
  result = ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v0 ^ 0x1A7u] - 12))((unint64_t **)(v3 - 144));
  *(_DWORD *)(v6 - 0x3A24535D6CC7614DLL) = v7;
  *(_DWORD *)(v1 + 32) = 1556779682;
  return result;
}

void sub_18CA3DE14(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 12) ^ (375636451 * ((a1 - 350324472 - 2 * (a1 & 0xEB1E7908)) ^ 0xB8202384));
  __asm { BR              X10 }
}

uint64_t sub_18CA3DEE4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((v0 - 2222) ^ 0x1A9) * (v2 == 0)) ^ v0)) - 4))();
}

uint64_t sub_18CA3DF20@<X0>(uint64_t (*a1)(unsigned int *)@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t result;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;

  v4 = v1 + 817;
  v5 = 1401278017 * ((&v7 & 0x861D1782 | ~(&v7 | 0x861D1782)) ^ 0x7DC19E9A);
  v11 = v5 - 1832562735;
  v8 = 0x129748112B546E94;
  v9 = v4 ^ v5;
  v7 = 688448098 - v5;
  v10 = v3;
  result = a1(&v7);
  *(_DWORD *)(v2 + 8) = *(_DWORD *)(v3 - 0x69A7616A48D05166);
  return result;
}

uint64_t sub_18CA3E378()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v0 != v1) * (142 * (v2 ^ 0x654) - 270)) ^ v2)) - 12))();
}

uint64_t sub_18CA3E3A8()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((v1 + 1915874192) & 0x8DCE0FFE ^ (2808 * ((v0 & 0x18) == 0))))
                            - (((((v1 + 1915874192) & 0x8DCE0FFE) - 226) | 0x450) ^ 0x558)))();
}

uint64_t sub_18CA3E470(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((((a1 - 1239) | 0x2A) ^ 0x65F) + 124 * (a1 ^ 0x65C)) * (v1 != v2)) ^ a1))
                            - 12))();
}

uint64_t sub_18CA3E4B4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v1 + (v5 + v3)) = *(_BYTE *)(v2 + (v5 + v3))
                                           - ((2 * *(_BYTE *)(v2 + (v5 + v3))) & 0xB2)
                                           + 89;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8 * ((771 * (((v4 + 555234411) & 0xDEE7C7EA ^ 0xFFFFFE55) + v5 == a1)) ^ v4))
                            - 12))();
}

void sub_18CA3E518(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_18CA3E59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a67;
  uint64_t v67;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, unint64_t *))(v67 + 7920))(a1, a2, a3, a4, a5, 943407527, a7, 4105372581, a9, &a67, a11, &STACK[0x714F9881AC293097]);
}

uint64_t sub_18CA3E6E0()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * ((84 * (v1 != (((v0 ^ (v3 - 2249)) - v3 + 1591) ^ 0xB4CFB3B))) ^ v0))
                            - 8))();
}

uint64_t sub_18CA3E72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  _BOOL4 v27;

  v24 = (v20 - v23 + 56) | 0x18;
  v25 = a6 + v20 + 68;
  v26 = v21 + (v24 ^ 0x9DCC44FE);
  v27 = a20 + 1680620803 < v26;
  if ((a20 + 1680620803) < 0xCADC16FC != v26 < 0xCADC16FC)
    v27 = v26 < 0xCADC16FC;
  return ((uint64_t (*)(void))(*(_QWORD *)(v22 + 8 * ((111 * v27) ^ v25)) - 8))();
}

uint64_t sub_18CA3E960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14, unint64_t a15, uint64_t a16, unint64_t a17)
{
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  v22 = 142545853 * ((732042954 - ((v21 - 160) | 0x2BA216CA) + ((v21 - 160) | 0xD45DE935)) ^ 0xFEA2465A);
  v23 = v19 - a6;
  STACK[0x298] = a13;
  *(_DWORD *)(v21 - 120) = v19 - v22 + 1860;
  *(_DWORD *)(v21 - 116) = v17 - v22 + ((v19 - 752165815) & 0x2CD52BFE) + 490053287;
  STACK[0x280] = a14;
  STACK[0x2A0] = a12;
  STACK[0x2B0] = a15;
  STACK[0x288] = a17;
  v24 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(a7 + 8 * (v19 ^ 0x73)) - 12))(v21 - 160);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (((*(_DWORD *)(v21 - 144) == 1556779682) * (v23 ^ (v20 - 4077))) ^ v19)))(v24);
}

uint64_t sub_18CA3EA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * ((27 * (*(_DWORD *)(v9 + 48 * (v10 + a8)) != 1385466280)) ^ v12))
                                                                                                - ((v12 + 1498948025) & 0xA6A7D5FE)
                                                                                                + 374))(a1, a2, a3, a4, a5, a6, v8);
}

uint64_t sub_18CA3EAD0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((750 * (((((v1 - 271581567) & 0xD7F4BFD7) - 1776136076) ^ v0) == v2 - 1402243496)) ^ v1)))();
}

uint64_t sub_18CA3EB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (((*(_DWORD *)(v7 + 48 * (((v6 + 2644 - a6 - 2564) ^ 0x3377BC76) + v8) + 36) == v8)
                                          * ((v6 + 2644) ^ 0xB80)) ^ (v6 + 2644)))
                            - 8))();
}

uint64_t sub_18CA3EB84@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v6;
  uint64_t v8;
  int v9;
  int v10;

  if ((v2 - 1575424075) <= 0x10 && ((1 << (v2 - 75)) & 0x14301) != 0)
  {
    v8 = a2 & 0xFFFFFFFFFFFFFFFLL;
    if (v8)
    {
      if (v8 == 3)
      {
        v9 = v6 + a1;
        v10 = (*(uint64_t (**)())(v3 + 48 * a2 + 8))();
        __asm { BR              X8 }
      }
      __asm { BR              X2 }
    }
    __asm { BR              X10 }
  }
  return 4294925278;
}

void sub_18CA3F150(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v4;

  v1 = 1401278017 * (((a1 | 0xC754715A) - (a1 & 0xC754715A)) ^ 0xC37707BD);
  v2 = *(_DWORD *)(a1 + 8) + v1;
  v4 = *(_QWORD *)(a1 + 24) == 0x35DD276C645952ALL || (*(_DWORD *)(a1 + 16) ^ v1) == 1030870995;
  __asm { BR              X11 }
}

uint64_t sub_18CA3F228()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  v3 = v0 & 0x22B76FDF;
  v4 = (*(uint64_t (**)(uint64_t))(v1 + 8 * ((v0 & 0x22B76FDF) - 2115)))(32) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v4 * (((v3 ^ 0x857) + 2160) ^ 0x85F)) ^ v3))
                            - 271 * (v3 ^ 0x857u)
                            + 2164))();
}

uint64_t sub_18CA3F288(uint64_t result)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  *(_QWORD *)result = v3 - 0x35DD276C645952ALL;
  *(_DWORD *)(result + 8) = v2;
  *(_DWORD *)(result + 12) = v2;
  *(_QWORD *)(result + 16) = 0x39B251145B62D608;
  *(_DWORD *)(result + 24) = 1556779682;
  *(_QWORD *)(v4 - 0x7A46C4E6F4512389) = result + 0x69A7616A48D0517ELL;
  *((_DWORD *)v1 + 3) = 1556779682;
  return result;
}

uint64_t sub_18CA3F30C(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(qword_1E252FB38[((232 * (*(_DWORD *)(a2 + 4) != 756011385)) ^ 0x978u) - 1] - 8))();
}

uint64_t sub_18CA3F34C()
{
  return 4294925278;
}

uint64_t sub_18CA3F354(uint64_t a1, uint64_t a2)
{
  char v2;

  if (**(_BYTE **)(a2 + 8))
    v2 = -70;
  else
    v2 = -72;
  *(_BYTE *)(a1 + 88) = ((**(_BYTE **)(a2 + 8) != 0) ^ 0x7F) + v2;
  return 0;
}

void sub_18CA3F388(uint64_t a1)
{
  int v1;

  v1 = ((*(_DWORD *)(a1 + 8) ^ (1401278017 * ((a1 & 0x2D3769D8 | ~(a1 | 0x2D3769D8)) ^ 0x16EBE0C0))) - 334682400) & 0x13F2DE87;
  __asm { BR              X1 }
}

uint64_t sub_18CA3F524()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 - 269793571) & 0x1014B66F) + ((v1 + 1384) ^ 0x393)) * (v0 == 31)) ^ v1))
                            - 12))();
}

uint64_t sub_18CA3F570(uint64_t a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 8 * (v2 - 2645)) - 8 + 8 * (int)((103 * ((a2 >> 1) & 1)) ^ v2)))();
}

uint64_t sub_18CA3F5AC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((((v0 - 1319212168) & 0x4EA18F1F) - 269793571) & 0x1014B66F)
                                           + ((((v0 - 1319212168) & 0x4EA18F1F) + 1384) ^ 0x393))
                                          * (v1 == 31)) ^ (v0 - 1319212168) & 0x4EA18F1F))
                            - 12))();
}

uint64_t sub_18CA3F640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;

  v24 = v17 - v16;
  *(_DWORD *)(a11 - 0x422CB512D256B857) = ((3 * (v22 ^ 0x61A)) ^ 0xBC8A8DEA) - v18;
  v25 = 142545853 * (((v23 - 136) & 0xA0B941DC | ~((v23 - 136) | 0xA0B941DC)) ^ 0x75B9114C);
  *(_QWORD *)(v23 - 136) = v21;
  *(_DWORD *)(v23 - 128) = v25 ^ 0x2AEEDC51;
  *(_DWORD *)(v23 - 124) = v25 + v22 + 1398;
  sub_18CA38054(v23 - 136);
  v26 = 31090337 * ((v23 - 207851400 - 2 * ((v23 - 136) & 0xF39C7100)) ^ 0x341D1149);
  *(_DWORD *)(v23 - 136) = v26
                         + (v24 ^ 0x2B7457A9)
                         + (v22 ^ 0x61A)
                         - 252
                         + ((2 * v24) & 0xBF96EF40 ^ 0xA9164000)
                         - 1073743226;
  *(_DWORD *)(v23 - 120) = (v22 - 121) ^ v26;
  *(_QWORD *)(v23 - 128) = v21;
  sub_18CA1DE1C(v23 - 136);
  *(_QWORD *)(v23 - 136) = &STACK[0x61D35839E4698546];
  *(_QWORD *)(v23 - 128) = a16;
  *(_DWORD *)(v23 - 120) = v22
                         + 476588053
                         * ((((v23 - 136) | 0x7FCD874) - (v23 - 136) + ((v23 - 136) & 0xF8032788)) ^ 0xBA01DC37)
                         + 1028;
  sub_18CA8284C(v23 - 136);
  *(_QWORD *)(v23 - 136) = v21;
  *(_QWORD *)(v23 - 120) = a16;
  *(_DWORD *)(v23 - 124) = (v22 + 548) ^ (366490169
                                        * (((((v23 - 136) | 0xBC4982) ^ 0xFFFFFFFE) - (~(v23 - 136) | 0xFF43B67D)) ^ 0xE9EDE039));
  v27 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * (int)(v22 - 496)) - 8))(v23 - 136);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((25 * (*(_DWORD *)(v23 - 128) > 0x59720CB2u)) ^ v22)))(v27);
}

uint64_t sub_18CA3F880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v19 - 136) = a16;
  *(_QWORD *)(v19 - 128) = v18;
  *(_DWORD *)(v19 - 120) = v16
                         + 476588053 * ((((2 * (v19 - 136)) | 0xB53BBED8) - (v19 - 136) + 627187860) ^ 0x6760DB2F)
                         + 758;
  v20 = sub_18CA8284C(v19 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17
                                                      + 8
                                                      * ((2836
                                                        * ((((v16 + 1268) ^ ((a11 ^ 0x74BF2014) < ((57 * (v16 ^ 0x36D)) ^ 0x51E))) & 1) == 0)) ^ v16))
                                          - 4))(v20);
}

uint64_t sub_18CA3F938@<X0>(char a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((233
                                          * ((int)((((2 * v1) ^ 0xB547F340)
                                                  + v3
                                                  - ((((2 * v1) ^ 0xB547F340) & 0x5AA3F9B8 ^ (2 * v1) & 0x18) << ((3 * (v5 ^ 0xDB)) ^ a1))) ^ v3) > v2)) ^ v5))
                            - 4))();
}

uint64_t sub_18CA3F99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  *(_QWORD *)(v19 - 136) = a14;
  *(_QWORD *)(v19 - 128) = a16;
  *(_DWORD *)(v19 - 120) = v18
                         + 476588053 * (((v19 - 136) & 0x75D80BD8 | ~((v19 - 136) | 0x75D80BD8)) ^ 0x37DAF064)
                         + 337;
  sub_18CA8284C(v19 - 136);
  v20 = 31090337 * ((((v19 - 136) | 0x9142E731) - ((v19 - 136) & 0x9142E731)) ^ 0x56C38778);
  *(_DWORD *)(v19 - 136) = v20 + 533427646;
  *(_QWORD *)(v19 - 128) = a15;
  *(_DWORD *)(v19 - 120) = (v18 - 812) ^ v20;
  sub_18CA1DE1C(v19 - 136);
  *(_QWORD *)(v19 - 120) = a16;
  *(_QWORD *)(v19 - 136) = a15;
  *(_DWORD *)(v19 - 124) = (v18 - 143) ^ (366490169
                                        * ((((v19 - 136) ^ 0xD09FE7FB)
                                          + 1052423835
                                          - 2 * (((v19 - 136) ^ 0xD09FE7FB) & 0x3EBAB69B)) ^ 0xF88B0724));
  v21 = v16(v19 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17
                                                      + 8
                                                      * ((60
                                                        * ((((v18 + 901) ^ (*(_DWORD *)(v19 - 128) > 3 * (v18 ^ 0x5CCu) + 1500645945)) & 1) == 0)) ^ (v18 + 2037)))
                                          - 8))(v21);
}

uint64_t sub_18CA3FE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * ((250
                                          * ((a12 ^ 0xFF3F3BF1)
                                           + 654309248
                                           + ((a12 << (((v13 - 119) | 0x20) - 33)) & 0xFE7E77E2)
                                           - 641676147 > 0x7FFFFFFD)) ^ v13))
                            - 8))();
}

uint64_t sub_18CA407C0(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))(qword_1E252FB30[(1465
                                                           * ((*(_DWORD *)(a2 + 4) - 756011384) < 0x15)) ^ 0x870u]
                                          - 8))(4294925278);
}

uint64_t sub_18CA4080C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  unsigned int v4;

  *(_DWORD *)(*(_QWORD *)(a2 + 96) + 24) = v3;
  v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) - 1512022768) & 0xBCE771EC) - 1318852738;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8
                                                     * ((21
                                                       * (((2 * v4) & 0xB6FD469C ^ 0xB4E5408C)
                                                        + (v4 ^ 0x850D1BB8)
                                                        - 2760772 == 1532265226)) ^ 0x865u))
                                         - 8))(0);
}

uint64_t sub_18CA408A4()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1952 * ((v2 + v1 - 1535025998) < 8)) ^ 0xBF7u))
                            - 8))();
}

uint64_t sub_18CA40920(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2263
                                * (v4 - v5 - ((a3 + 1976990023) & 0x8775 ^ 0x514uLL) >= (unint64_t)(a3 + 1334)
                                                                                      - 2409)) ^ a3)))();
}

uint64_t sub_18CA4096C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v4;
  unsigned int v5;
  _BOOL4 v6;

  v6 = v5 < ((a4 - 270829074) & 0xEFD7FFD5) + 271352140;
  return (*(uint64_t (**)(void))(v4 + 8 * (((16 * v6) | (32 * v6)) ^ a4)))();
}

uint64_t sub_18CA409B8@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v9 = v6 + v7 + a1;
  v10 = v4 + v9;
  v11 = *(_OWORD *)(v10 - 31);
  v12 = a3 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3473 * ((v5 & 0xFFFFFFE0) == 32)) ^ (a2 + v8)))
                            - 2 * (a2 ^ 0xEFD378D3)
                            + 3082))();
}

void sub_18CA40A20()
{
  JUMPOUT(0x18CA409D4);
}

uint64_t sub_18CA40A2C(uint64_t a1, uint64_t a2, unsigned int a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v4
                                                     + 8
                                                     * (((v5 == v6) ^ (a4 + 69)) & 1 | (32 * (((v5 == v6) ^ (a4 + 69)) & 1)) | a4))
                                         - (a4 ^ a3 ^ 0xEFD37ED0)))(0);
}

uint64_t sub_18CA40A68()
{
  uint64_t v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((((v2 + 312161153) & 0xED64CF3F ^ 0x70C) & v1) != 0)
                                * (((v2 - 585283220) & 0x22E2BBC9) - 2070)) ^ v2)))();
}

uint64_t sub_18CA40AC0@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;

  *(_QWORD *)(a2 - 7 + (v5 + v4 - v7)) = *(_QWORD *)(v3 - 7 + (v5 + v4 - v7));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((57 * (v7 + ((a1 + 620158249) & 0xDB091FEF) - 1061 == (v6 & 0xFFFFFFF8))) ^ a1))
                            - 8))();
}

uint64_t sub_18CA40B24()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(_QWORD))(v0 + 8 * ((((v3 + 1372) ^ 0x9F7) * (v1 != v2)) ^ v3)))(0);
}

uint64_t sub_18CA40B4C@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  *(_BYTE *)(a2 + (v5 + v4)) = *(_BYTE *)(v3 + (v5 + v4));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8
                                                     * ((505 * (v5 - 1 != ((a1 + 39017783) | 0xED801814) + 1803617334)) ^ (a1 - 281)))
                                         - 8))(0);
}

void sub_18CA40BA8()
{
  JUMPOUT(0x18CA40B78);
}

void sub_18CA40BB0(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_18CA40CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  unsigned int v10;
  uint64_t v11;

  v10 = (((((v8 + 306) ^ 0xEE4541B8) - 1750776672) & 0x685ABA6F) - 1938604647) & 0x738CCBDE;
  v11 = *(_QWORD *)(v7 + 8 * (a6 + v8 - 980)) - 1;
  __asm { BR              X15 }
}

uint64_t sub_18CA41F2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v1 + (v5 + v3)) = *(_BYTE *)(a1 + (v5 + v3));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((110 * (v5 - 1 == v2)) ^ v4)) - ((v4 - 1082) | 0x258u) + 588))();
}

uint64_t sub_18CA41F70(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;

  v1 = 1434876433 * (((a1 | 0x1171DC68) - a1 + (a1 & 0xEE8E2397)) ^ 0xE513E8C5);
  v2 = *(_DWORD *)(a1 + 12) + v1;
  v3 = *((_DWORD *)off_1E2538470[v2 ^ 0x8D7] + 85);
  v4 = (*(_DWORD *)(a1 + 4) ^ v1) + 355089360;
  v5 = v3 + 1314042830 > v4;
  if (v4 < 0x4E52B3CE != v3 > 0xB1AD4C31)
    v5 = v3 > 0xB1AD4C31;
  return ((uint64_t (*)(void))(*((_QWORD *)off_1E2538470[v2 ^ 0x8A4] + (((2 * !v5) | (8 * !v5)) ^ v2) - 1)
                            - ((v2 - 1132) ^ 0x422)))();
}

uint64_t sub_18CA42070()
{
  uint64_t v0;
  int v1;
  unsigned int v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v4 = v1 - 1221041865;
  v5 = v4 < 0xF060D935;
  v6 = v2 - 262088395 < v4;
  if (v5 != v2 > ((7 * (v3 ^ 0x510)) ^ 0xF9F2E5Cu))
    v6 = v5;
  return (*(uint64_t (**)(void))(v0 + 8 * (v6 | v3)))();
}

uint64_t sub_18CA420DC(_DWORD *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  BOOL v7;

  v5 = *(_DWORD *)(v3 + 344);
  v6 = *a1 - v1 - 809088311;
  if (v5 > 0xB9EEAFF4 != v6 < 0x4611500B)
    v7 = v5 > 0xB9EEAFF4;
  else
    v7 = v5 + 1175539723 > v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((924 * (((v4 + 101) ^ v7) & 1)) ^ v4)) - 8))();
}

uint64_t sub_18CA42160()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v4 = v2 + 613286633;
  v5 = v4 < 0x9AD9082B;
  v6 = v3 + (v1 & 0x60A3C52F ^ 0xAAE) - 1697056346 < v4;
  if (v3 > 0x6526F7D4 != v5)
    v6 = v5;
  return (*(uint64_t (**)(void))(v0 + 8 * ((1008 * !v6) ^ v1 & 0x60A3C52Fu)))();
}

uint64_t sub_18CA421E0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  _BOOL4 v8;

  v5 = *(_DWORD *)(a1 + 16) - v1;
  v6 = *(_DWORD *)(v3 + 352);
  v7 = v4 + v5 + 2048537733;
  if (v6 > 0x1E4E09A8 != v7 < 0xE1B1F657)
    v8 = v6 > 0x1E4E09A8;
  else
    v8 = v6 + ((v4 - 2650) ^ 0xE1B1F27C) > v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((4 * !v8) | (8 * !v8)) ^ v4)) - 12))();
}

uint64_t sub_18CA42260@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  unsigned int v2;
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;
  _BOOL4 v8;
  int v9;

  v5 = v3 - 776966681 + ((v4 - 1659549260) & 0x62EABAB6);
  v6 = v5 < 0x394829CA;
  v7 = v2 + 961030602 < v5;
  if (v2 > 0xC6B7D635 != v6)
    v8 = v6;
  else
    v8 = v7;
  if (v8)
    v9 = a2;
  else
    v9 = a2 + 1;
  *(_DWORD *)(result + 8) = v9;
  return result;
}

uint64_t sub_18CA422D0(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  v1 = 375636451 * ((a1 - 2047949505 - 2 * (a1 & 0x85EEC53F)) ^ 0xD6D09FB3);
  v2 = *(_DWORD *)a1 - v1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_DWORD *)(a1 + 4) - v1 - 2106220801;
  v5 = v4
     + (*(_DWORD *)(v3 - 0x7503D0B735518C75) ^ 0x7961A7B4)
     - ((2 * (v4 + (*(_DWORD *)(v3 - 0x7503D0B735518C75) ^ 0x7961A7B4))) & 0xF2C34F68)
     + 2036443060;
  *(_DWORD *)(v3 - 0x7503D0B735518C75) = v5;
  return ((uint64_t (*)(void))(*((_QWORD *)off_1E2538470[v2 ^ 0x4E7] + ((365 * ((v5 ^ 0x7961A7B4) < v4)) ^ v2) - 1) - 4))();
}

void sub_18CA42398(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x7503D0B735518C79) = (*(_DWORD *)(a1 - 0x7503D0B735518C79) ^ 0x3EEA628D)
                                         + 1055548045
                                         - ((2 * (*(_DWORD *)(a1 - 0x7503D0B735518C79) ^ 0x3EEA628D) + 2) & 0x7DD4C51A)
                                         + 1;
}

void sub_18CA423E0(uint64_t a1)
{
  int v1;
  unsigned int v2;
  _BOOL4 v3;
  char v4;
  _BYTE v5[4];
  unsigned int v6;
  int v7;
  unint64_t *v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 36) - 1761959447 * (((a1 | 0x90A94053) - (a1 | 0x6F56BFAC) + 1867956140) ^ 0x310E8197);
  v2 = 673918253
     * ((2 * ((v5 ^ 0xAFC00A76) & 0x13863BC4) - (v5 ^ 0xAFC00A76) + 1819919419) ^ 0x59F1D5E5);
  v6 = v2 ^ 0x8E0939CC;
  v7 = v1 + v2 - 1676531139;
  v8 = &STACK[0x7503D0B735518DA5];
  sub_18CA1DCF0((uint64_t)v5);
  v3 = ((2 * (v4 & 0x3F)) ^ 0x68) + (v4 & 0x3F ^ 0xFDFFFCBu) - 266338363 < 0xFFFFFFC0;
  __asm { BR              X11 }
}

uint64_t sub_18CA42824(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;

  v10 = v7 + a4;
  if (v10 <= 0x40)
    v10 = 64;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9
                                                              + 8
                                                              * ((2693
                                                                * (((v8 - v5 - v6 + v10 < 0xF) ^ v4) & 1)) ^ v4)))(a1, a2, 4050529414);
}

uint64_t sub_18CA4289C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;

  v9 = v6 + v5 + a4;
  if (v9 <= 0x40)
    v10 = 64;
  else
    v10 = v6 + v5 + a4;
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((59 * ((v4 ^ (v7 + v10 > ((v4 - 462) ^ (v9 - 1)))) & 1)) ^ v4)))();
}

uint64_t sub_18CA428EC@<X0>(int a1@<W2>, unsigned int a2@<W4>, uint64_t a3@<X5>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,arg32_18CA428EC a32)
{
  int v32;
  uint64_t v33;
  uint64_t v34;

  *(_OWORD *)(a3 + (a4 + a1)) = *(_OWORD *)&a32.arr[4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * ((3104 * (((v33 + 1) & 0x1FFFFFFF0) == 16)) ^ (v32 + 1526)))
                            - ((v32 + 1167691298) & a2)
                            + 453))();
}

void sub_18CA42950()
{
  JUMPOUT(0x18CA4291CLL);
}

uint64_t sub_18CA4295C@<X0>(int a1@<W3>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,char a32)
{
  int v32;
  int v33;
  uint64_t v34;

  *(_BYTE *)(a2 + ((v32 - 581) ^ (a1 + 935)) + v33) = a32;
  *(_BYTE *)(a2 + (a3 - 244437881)) = *(&a32 + (v32 - 1516));
  return ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * ((v32 - 581) ^ 0xBA3)) - 12))();
}

uint64_t sub_18CA429F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  *(_BYTE *)(a2 + (v7 + a3 + 1)) = *(_BYTE *)(a1 + (v6 - 566309825));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((2226 * ((v3 & 0xFFFFFFFC) == v4 + v8)) ^ v5)) - 12))();
}

uint64_t sub_18CA42A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(uint64_t), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;

  v28 = 101 * (v23 ^ 0x3AAu);
  *(_BYTE *)(a2 + (a3 + 2)) = *(_BYTE *)(a1 + ((v28 + v25) & (v24 + 3728657472)));
  v29 = 375636451 * ((((v27 - 168) | 0xDBFACC1D) + (~(v27 - 168) | 0x240533E2)) ^ 0x88C49690);
  *(_DWORD *)(v27 - 168) = v29 + v28 + 1035;
  *(_DWORD *)(v27 - 164) = v29 + 2106220805;
  *(_QWORD *)(v26 + 464) = a23;
  v30 = sub_18CA422D0(v27 - 168);
  return a15(v30);
}

uint64_t sub_18CA42AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  uint64_t v50;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v50
                                                      + 8
                                                      * ((6760
                                                        * (a13
                                                         + ((a50 << (a20 + 110)) & 0x36 ^ 0x20)
                                                         + (a50 & 0x3F ^ 0x5FDBDFEFu) < 0xFFFFFFC0)) ^ (a34 + 2362)))
                                          - 12))(116);
}

uint64_t sub_18CA42B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;

  v23 = v20 - 1608245211;
  if ((v23 + 1) > 0x40)
    v24 = v23 + 1;
  else
    v24 = 64;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22
                                                                                          + 8
                                                                                          * (int)(((((a19 - 3147) | 0x82) ^ (a19 + 750035811) & 0xD34B5AFD ^ 0xA7B)
                                                                                                 * ((1608245210 - v19 - v21 + v24) > 0xE)) ^ a19))
                                                                              - 12))(a1, a2, a3, a4, 77);
}

uint64_t sub_18CA42C34()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  _BOOL4 v7;

  v5 = v1 + v0;
  v6 = v5 + (((v2 ^ 0xA91) + 1273) ^ 0xA02425B2 ^ (2 * (v2 ^ 0xA91)));
  if (v6 <= 0x40)
    v6 = 64;
  v7 = !__CFADD__(v5 - 1608245211, v3 + v6);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (((4 * v7) | (8 * v7)) ^ v2)))(116);
}

uint64_t sub_18CA42C9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  int v36;
  uint64_t v37;
  int8x16_t *v38;
  int8x16_t v39;
  int8x16_t v40;

  v40.i64[0] = 0x5A5A5A5A5A5A5A5ALL;
  v40.i64[1] = 0x5A5A5A5A5A5A5A5ALL;
  *(int8x16_t *)(a6 + (v35 + a3)) = vaddq_s8(vaddq_s8(*v38, v40), vmvnq_s8(vandq_s8(vaddq_s8(*v38, *v38), v39)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v37 + 8 * ((3715 * (((a35 + 1) & 0x1FFFFFFF0) == 16)) ^ v36))
                            - ((v36 + 51) ^ 0x599)))();
}

void sub_18CA42D10()
{
  JUMPOUT(0x18CA42CC8);
}

uint64_t sub_18CA42D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37)
{
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(v40 + 8 * (((((v39 + 138) ^ 0x291) + 655) * (v37 == v38)) ^ v39)))(a1, a2, a3, a4, a5, a6, a7, &a37);
}

uint64_t sub_18CA42D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  *(_BYTE *)(a3 + ((a1 + (v5 - 401) + 4) & (a5 + a2))) = *(_BYTE *)(v6 + a4 + v8);
  return (*(uint64_t (**)(void))(v9 + 8 * ((((a5 + v7) > 0x3F) * v10) ^ v5)))();
}

uint64_t sub_18CA42DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,unsigned int a50,int a51,unsigned __int8 a52)
{
  uint64_t v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v59;
  _BOOL4 v61;
  _BOOL4 v64;

  v58 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(((6 * (v53 ^ 9u)) ^ 0xFFFFFFFFFFFFFB26) + *(_QWORD *)(v55 + 8 * v53));
  v59 = a52 ^ 0xBF;
  if (v59 == 2)
  {
    v64 = (unint64_t)&a38 + 4 >= a30 || v54 >= (unint64_t)&a46 + 4;
    return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(v55
                                                               + 8
                                                               * (int)((((a2 + 2898) ^ 0xC3E) * v64) ^ (a2 + 2898)))
                                                   - 8))(a50, a50);
  }
  else if (v59 == 1)
  {
    v61 = (unint64_t)&a38 + 4 >= a30 || v54 >= (unint64_t)&a46 + 4;
    return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * (int)((v61 * (a36 - 854)) ^ (a2 + 2888))))((a36 - 854), a2, a3, 3498722146, (char *)&a38 + 4, a6, a7, 139, a9, a10, a11, a12, a13, a14, v52, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27);
  }
  else
  {
    HIDWORD(a47) = 2 * (HIDWORD(a47) ^ v57) + v57 - (v56 & (4 * (HIDWORD(a47) ^ v57)));
    LODWORD(a48) = 2 * (a48 ^ v57) + v57 - (v56 & (4 * (a48 ^ v57)));
    HIDWORD(a48) = 2 * (HIDWORD(a48) ^ v57) + v57 - (v56 & (4 * (HIDWORD(a48) ^ v57)));
    a49 = 2 * (a49 ^ v57) + v57 - (v56 & (4 * (a49 ^ v57)));
    HIDWORD(a32) = a52 ^ 0xFFFFFFBF;
    return v58(116, a2, a3, 3498722146, (char *)&a38 + 4, a6, a7, 139, a9, a10, a11, a12, a13, a14, v52, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48);
  }
}

uint64_t sub_18CA43B8C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned int a32,int a33,int a34)
{
  uint64_t v34;
  _BOOL4 v35;

  if (a32 < 0x58D42072 != (a34 + 694051860) < 0x58D42072)
    v35 = (a34 + 694051860) < 0x58D42072;
  else
    v35 = a34 + 694051860 > a32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * ((v35 * (a2 + 808)) ^ (a2 + 2348)))
                            - ((a2 + 1086) | 0xA50u)
                            + 3916))();
}

uint64_t sub_18CA43C14@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((a1 + a2 + 63 < ((113 * (v2 ^ 0xF4F)) ^ (a1 + 1507)) + a2)
                                          * (v2 - 3868)) ^ v2))
                            - 8))();
}

uint64_t sub_18CA43C60@<X0>(int a1@<W3>, uint64_t a2@<X5>, char a3@<W6>, char a4@<W7>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(a2 + v5) = *(_BYTE *)(v8 + (a5 + a1))
                      - ((*(_BYTE *)(v8 + (a5 + a1)) << (((v6 - 37) ^ 3) & a4)) & a3)
                      + 89;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v5 == 63) | (8 * (v5 == 63))) ^ v6)) - 12))();
}

uint64_t sub_18CA43CB4@<X0>(int a1@<W3>, int8x16_t *a2@<X5>, int a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int8x16_t v8;
  int8x16_t v9;

  *a2 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v6 + (a3 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(v6 + (a3 + a1)), *(int8x16_t *)(v6 + (a3 + a1))), v9)), v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((v7 ^ (2 * (v3 - 3726))) == 166) * v4) ^ (v3 - 3413))) - 12))();
}

uint64_t sub_18CA43D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, int a16)
{
  uint64_t v16;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16
                                                                        + 8
                                                                        * ((44 * ((a15 ^ 0xDE3ECFD0) + a16 > 0xFFFFFFFA)) ^ ((int)a2 + 3460)))
                                                            - 4))(a1, a2, a3);
}

void sub_18CA43D7C()
{
  JUMPOUT(0x18CA42EC0);
}

uint64_t sub_18CA43D9C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unsigned int v23;
  uint64_t v24;
  _BOOL4 v25;

  v25 = HIDWORD(a14) < 0x543ADA6F;
  if (v25 == (a6 + 616898001) < 0x543ADA6F)
    v25 = (a6 + 616898001) < HIDWORD(a14);
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * (int)((114 * v25) ^ v23)) - (v23 ^ 0x93DLL)))(HIDWORD(a14), 114, v23 ^ 0xACD, a1, a2, a3, a4, a5, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_18CA43E08@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X5>, char a6@<W6>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  unsigned int v15;
  int v16;
  _BOOL4 v17;

  v14 = a1 < v10;
  *(_BYTE *)(a5 + (a3 + v9 + v7)) = *(_BYTE *)(v13 + (a7 + a4))
                                                - (a6 & (2 * *(_BYTE *)(v13 + (a7 + a4))))
                                                + 89;
  v15 = a7 + 1 + v11;
  v16 = v14 ^ (v15 < v10);
  v17 = v15 < a1;
  if (!v16)
    v14 = v17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((v14 * a2) ^ v8)) - 8))();
}

uint64_t sub_18CA43E6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  unsigned int v57;

  v52 = (a3 - 1008) | 0xC2u;
  v57 = (a3 + 796215788) & 0xD08AB7FF;
  v53 = 375636451 * ((((v51 - 168) | 0x5C0832E1) - (v51 - 168) + ((v51 - 168) & 0xA3F7CD18)) ^ 0xF36686D);
  *(_DWORD *)(v51 - 168) = v53 + a3 + 221;
  *(_DWORD *)(v51 - 164) = a16 + v53;
  *(_QWORD *)(v49 + 464) = a28;
  sub_18CA422D0(v51 - 168);
  v54 = a49 & 0x3F;
  *(&a40 + (v54 ^ 0x34)) = -39;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v50
                                                              + 8
                                                              * (int)((((v54 ^ 0x34) > 0x37) * (v57 - 1506)) | a3))
                                                  - (v52 ^ 0xC6)))(116, a32);
}

uint64_t sub_18CA43F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * (v3 ^ (3215 * (a3 != 63))))
                                                            - ((3 * ((v3 + 36793829) & 0xFDCE8CFF ^ 0x434)) ^ 0xEFBLL)))(a1, a2, 1004);
}

uint64_t sub_18CA43FE4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((14
                                          * ((v0 ^ 0x748 ^ (v1 - 1972)) < ((101 * (v1 ^ 0xEF5)) ^ 0xC2u))) ^ v1))
                            - 8))();
}

uint64_t sub_18CA44030@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3)
{
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a3 + a1) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((v3 & 0x38) == 8) * ((754 * (v4 ^ 0x741)) ^ 0x12E0)) ^ v4))
                            - 12))();
}

uint64_t sub_18CA4407C()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *v1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v3 == 0) * v2) ^ v0)) - 12))();
}

uint64_t sub_18CA440A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (a3 ^ (2302 * (v4 != v3))))
                                                            - ((a3 - 1307) ^ 0xFFFFFFFFFFFFFF8BLL)
                                                            - 101 * (a3 ^ 0x5E6u)))(a1, a2, 1004);
}

uint64_t sub_18CA440EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(a6 + (((v7 - 66) | v8) ^ (unint64_t)(v10 - 58)) + v6) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((((unint64_t)(v6 + v10) < 0x40) * a3) ^ (v7 + 1306)))
                            - 12))();
}

void sub_18CA4412C()
{
  JUMPOUT(0x18CA42EBCLL);
}

uint64_t sub_18CA44140()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((((v0 - 1186512719) < 0x38) * (v1 + 54)) ^ (v1 + 1372)))
                            - 4))();
}

uint64_t sub_18CA44180()
{
  unsigned int v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = v0;
  v5 = v1 + v0 + v2 - 202;
  if (v5 <= 0x38)
    v5 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * (int)((22 * (((v2 + 513) ^ 0x46B8BD84) - v4 + v5 < 8)) ^ (v2 + 513)))
                            - 4))();
}

uint64_t sub_18CA441E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(a6 + v8 + (v6 ^ 0x664u ^ (unint64_t)(v9 + 442))) = v11;
  return (*(uint64_t (**)(void))(v10 + 8 * (v6 | (2 * ((v7 & 0xFFFFFFFFFFFFFFF8) == 8)))))();
}

uint64_t sub_18CA44220()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + (v1 ^ v2)) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (v0 | (2 * (v3 == 0)))))();
}

uint64_t sub_18CA44244()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((((v2 ^ 0x217) + 1073) * (v0 == v1)) ^ v2)) - (v2 ^ 0x2D9)))();
}

uint64_t sub_18CA4427C@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  int v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(a2 + v5 + a1 - 1) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((unint64_t)(a2 + v5) < 0x38) * v4) ^ (v2 + 1372))) - 4))();
}

void sub_18CA442AC()
{
  JUMPOUT(0x18CA42EBCLL);
}

uint64_t sub_18CA444B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  int v15;
  int v16;
  uint64_t v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * (a15 ^ (3459 * ((v16 + v15 + 1277) < 4))))
                            - ((a15 - 1866858670) & 0x6F45FDCF)
                            + 190))();
}

uint64_t sub_18CA44504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * (int)((((HIDWORD(a15) + 1954802774) & 0x8B7C10CB ^ 0x68F) * ((a9 + 1278) < 4)) ^ HIDWORD(a15))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

void sub_18CA44550()
{
  JUMPOUT(0x18CA42990);
}

uint64_t sub_18CA44564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,int a53)
{
  uint64_t v53;
  uint64_t v55;
  unint64_t v56;

  if (BYTE4(a32) == 2)
    return ((uint64_t (*)(void))(*(_QWORD *)(v53 + 8 * (int)(((a53 == 959153927) * ((a2 + 636) ^ 0x357)) | (a2 + 636)))
                              - 12))();
  if (BYTE4(a32) == 1)
    return ((uint64_t (*)(void))(*(_QWORD *)(v53 + 8 * ((2017 * (a53 != (_DWORD)a2 + 959153725)) ^ ((int)a2 + 653)))
                              - 12))();
  v55 = ((_DWORD)a2 + 59) | 0x85Au;
  v56 = ((unint64_t)&a37 ^ 0x63FBFFF8F2B2F2F6)
      - 0x412022A000821250
      + ((v55 ^ 0xC7F7FFF1E565ECB0) & (2 * (_QWORD)&a37));
  a52 = ((v56 + 90) ^ 0xBA) * (v56 + 107);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * (int)(v55 ^ 0x3E)) - 12))(a1, a2, 1761959447, a19, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

void sub_18CA448AC()
{
  JUMPOUT(0x18CA44878);
}

uint64_t sub_18CA448BC@<X0>(int a1@<W2>, int a2@<W8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t result;

  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(_QWORD *)(v2 + 8);
  memset(v3 + 55, 89, 16);
  v7 = ((v4 - 168) ^ 0xA1A7C1C4) * a1;
  v3[58] = v5;
  v3[59] = v4 - 184;
  *(_DWORD *)(v4 - 168) = v7 + 1528843729;
  *(_DWORD *)(v4 - 140) = a2 - v7 + 448;
  v3[61] = v4 - 204;
  v3[62] = v6;
  result = off_1E2538470[a2 ^ 3]((unint64_t **)(v4 - 168));
  *(_DWORD *)(v2 + 16) = *(_DWORD *)(v4 - 144);
  return result;
}

uint64_t sub_18CA4497C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  unsigned __int8 v4;
  char *v5;
  int v6;
  char v8;

  v2 = (qword_1EE056930 - qword_1EE056790) ^ (unint64_t)&v8;
  qword_1EE056790 = 864964861 * v2 - 0x7FF9C25FF573ED32;
  qword_1EE056930 = 864964861 * (v2 ^ 0x30AB163F3BCF6666);
  v3 = *(_DWORD *)(a2 + 4);
  v4 = -3 * ((-3 * v2 - 50) ^ 0x66 ^ qword_1EE056930);
  v5 = (char *)off_1E2538470[(v4 ^ byte_18CF13810[byte_18CF23E40[v4] ^ 0xCA]) - 59] - 8;
  if (v3 == 756011387)
    __asm { BR              X17 }
  if (v3 == 756011394)
  {
    v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BR              X1 }
  }
  return 4294925278;
}

void sub_18CA45058(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_18CA450E0@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * ((2690
                                                        * (((a1 - 756011384) ^ 0xAEFF6F2FC9FFE63DLL)
                                                         + 0x510090D0F254C472
                                                         + ((2 * (a1 - 756011384)) & 0x193FFCC7ALL) != 3159665327)) ^ 0x2C1u))
                                          - 12))(222);
}

uint64_t sub_18CA45184()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v6 = *(unsigned __int8 *)(v3 + v4 - 0x64F09C3A5FB47E1DLL) - *(unsigned __int8 *)(v2 + v4 - 0x64F09C3A5FB47E1DLL);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5
                                                      + 8
                                                      * ((((v6 ^ 0x6BFBEF6C) + ((2 * v6) & 0xD7F7DED8) == 1811672940)
                                                        * (v1 - 2336)) ^ v0))
                                          - 12))(223);
}

uint64_t sub_18CA451EC()
{
  unsigned int v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;
  unint64_t v6;
  int v7;
  _BOOL4 v8;

  v5 = v2 < v1;
  v6 = ((335 * (v0 ^ 0x2C6)) ^ 0x9B0F63C65CA025BALL) + v3;
  v7 = v5 ^ (v6 < v1);
  v8 = v6 < v2;
  if (!v7)
    v5 = v8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * ((2690 * v5) ^ v0)) - 12))(222);
}

uint64_t sub_18CA4525C@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v6;

  v6 = a2 == 756011393 && v2 + a1 != 223;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((v6 * (((v3 + 84940688) | 0x48E00C00) - 1307585534)) ^ v3))
                                          - (v3 ^ 0xA06u)
                                          + 807))(4294925278);
}

uint64_t sub_18CA452C4()
{
  unsigned __int8 *v0;
  unsigned int v1;
  uint64_t v2;
  int v3;

  v3 = ((v1 - 801) | 0x201) + *v0 - 569;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((2612 * (((2 * v3) & 0xFFEFEF6C) + (v3 ^ 0x7FF7F7B6) == 2146957238)) ^ v1))
                            - 12))();
}

uint64_t sub_18CA4532C()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  int v5;

  v5 = 31 * (v3 ^ 0x33E) + *(unsigned __int8 *)(v2 + 1) - 661;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1307 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v3)) - 12))();
}

uint64_t sub_18CA45380()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((98
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                           + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v1) == (v4 ^ (v1 - 509)))) ^ v3))
                            - 12))();
}

uint64_t sub_18CA453C8()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1294
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                           + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v1) == v1)) ^ v3))
                            - ((v3 - 1293480080) & 0x8EF6F)
                            + 515))();
}

uint64_t sub_18CA45424()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((3255
                                          * ((((*(unsigned __int8 *)(v2 + 4) - 247) << (v3 ^ 0x2E)) & v0)
                                           + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v1) == v1)) ^ v3))
                            - 12))();
}

uint64_t sub_18CA45478()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((2810
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                           + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ v1) == ((v3 - 288) ^ v4))) ^ v3))
                            - 12))();
}

uint64_t sub_18CA454C0()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((4936
                                          * ((((*(unsigned __int8 *)(v2 + 6) - 1) << (((v3 - 42) | 0xA) - 14)) & v0)
                                           + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v1) == v1)) ^ v3))
                            - 12))();
}

uint64_t sub_18CA45514()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((90
                                          * ((((*(unsigned __int8 *)(v2 + 7) - 1) << (((v3 - 45) | 0xD) ^ 0xE)) & v0)
                                           + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v1) == v1)) ^ v3))
                            - 12))();
}

uint64_t sub_18CA4556C()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1849
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                           + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v1) == v1
                                                                                        + ((16 * (v3 ^ 0x30D)) ^ 0x2F)
                                                                                        - 527)) ^ v3))
                            - 12))();
}

uint64_t sub_18CA455C8(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 + 96) + 1428) = 1531188533;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((271
                                          * (*(_DWORD *)(a2 + 4) == ((v2 + ((v3 + 1036) | 0x40) - 1119) ^ ((v3 - 532) | 0x203)))) | v3))
                            - 12))();
}

uint64_t sub_18CA45624(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((2717
                                          * (((v4 + 13) ^ (v3 - 524) ^ (**(unsigned __int8 **)(a2 + 8) - 42))
                                           - 1093976578
                                           + (v2 & (2 * (**(unsigned __int8 **)(a2 + 8) - 42))) == 1052980660)) ^ v4))
                            - 4))();
}

uint64_t sub_18CA4567C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((463
                                          * ((v7 ^ 0x13 ^ a4 ^ (*(unsigned __int8 *)(a1 + 1) - 134))
                                           + v6
                                           + (v4 & (2 * (*(unsigned __int8 *)(a1 + 1) - 134))) == v5)) ^ v7))
                            - 4))();
}

uint64_t sub_18CA456C0(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v7 = *(unsigned __int8 *)(a1 + 2) + ((v5 + 13) ^ 0xFFFFFDA4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((3442 * ((v7 ^ v2) + v4 + (v1 & (2 * v7)) == v3)) ^ v5)) - 4))();
}

uint64_t sub_18CA45704(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;

  v7 = ((v5 - 3) | 0x10) + *(unsigned __int8 *)(a1 + 3) - 674;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((2870 * ((v7 ^ v2) + v4 + (v1 & (2 * v7)) == v3)) ^ v5)) - 4))();
}

uint64_t sub_18CA45748(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((21
                                          * (((*(unsigned __int8 *)(a1 + 4) - 247) ^ v2)
                                           + v4
                                           + (v1 & (2 * (*(unsigned __int8 *)(a1 + 4) - 247))) == v3
                                                                                                + ((v5 - 188088307) & 0xB35FFFF)
                                                                                                - 540)) ^ v5))
                            - 4))();
}

uint64_t sub_18CA4579C(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((2845
                                          * (((*(unsigned __int8 *)(a1 + 5) - 13) ^ v2)
                                           + v4
                                           + ((v1 + v5 + 13 - 540) & (2 * (*(unsigned __int8 *)(a1 + 5) - 13))) == v3)) ^ v5))
                            - 4))();
}

uint64_t sub_18CA457E0(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((2277
                                          * (((*(unsigned __int8 *)(a1 + 6) - 1) ^ (v2 + ((v5 - 15) | 0x1C) - 540))
                                           + v4
                                           + (v1 & (2 * (*(unsigned __int8 *)(a1 + 6) - 1))) == v3)) ^ v5))
                            - 4))();
}

uint64_t sub_18CA45828(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v7 = ((12 * (v5 ^ 0x222)) ^ 0xFFFFFDE3) + *(unsigned __int8 *)(a1 + 7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((2695 * ((v7 ^ v2) + v4 + (v1 & (2 * v7)) == v3)) ^ v5)) - 4))();
}

uint64_t sub_18CA45878(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  _BOOL4 v7;

  v7 = ((*(unsigned __int8 *)(a1 + 8) - 5) ^ v2)
     + v4
     + (((*(unsigned __int8 *)(a1 + 8) - 5) << ((v5 + 13) ^ 0x1D)) & v1) == v3 + ((v5 - 518) | 0x254) - 605;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1317 * ((v7 | (2 * v7)) != 0)) ^ (v5 + 13))) - 12))();
}

uint64_t sub_18CA458E0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 + 96) + 1428) = 1531188537;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((60 * (*(_DWORD *)(a2 + 4) != v2)) ^ v3))
                            - (((v3 ^ 0x470u) - 1039) ^ 0x251)))();
}

uint64_t sub_18CA45934(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;

  v8 = **(unsigned __int8 **)(a2 + 8) - 42;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((2136
                                          * ((v8 ^ v3)
                                           + v5
                                           + ((v2 + ((v6 + 2141139674) & 0x8060CFFF) - 1335) & (2 * v8)) == v4)) ^ v6))
                            - 12))();
}

uint64_t sub_18CA45990()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((((*(unsigned __int8 *)(v2 + 1) - 134) ^ v1)
                                           + v4
                                           + (v0 & (2 * (*(unsigned __int8 *)(v2 + 1) - 134))) == v3)
                                          * (((v5 - 571) | 0x515) ^ 0x26)) ^ v5))
                            - 12))();
}

uint64_t sub_18CA459D8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((134
                                          * (v4
                                           + ((v5 - 297) | 0x403)
                                           + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v1)
                                           + (v0 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                           - 1335 == v3)) ^ v5))
                            - 12))();
}

uint64_t sub_18CA45A24()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((3264
                                          * (((*(unsigned __int8 *)(v2 + 3) - 134) ^ (v1
                                                                                    + ((v5 - 913153310) & 0x366D9FF7)
                                                                                    - 1335))
                                           + v4
                                           + (v0 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134))) == v3)) ^ v5))
                            - 12))();
}

uint64_t sub_18CA45A7C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((2313
                                          * (((*(unsigned __int8 *)(v2 + 4) - 247) ^ (v1
                                                                                    + ((v5 - 1909365534) & 0x71CE9DF7)
                                                                                    - 1335))
                                           + v4
                                           + (v0 & (2 * (*(unsigned __int8 *)(v2 + 4) - 247))) == v3)) ^ v5))
                            - 12))();
}

uint64_t sub_18CA45AD4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((2288
                                          * (((*(unsigned __int8 *)(v2 + 5) - 13) ^ v1)
                                           + v4
                                           + (v0 & (2 * (*(unsigned __int8 *)(v2 + 5) - 13))) == v3)) ^ v5))
                            - 89 * (v5 ^ 0x252u)
                            + 1323))();
}

uint64_t sub_18CA45B20()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((1432
                                          * (((*(unsigned __int8 *)(v2 + 6) - 1) ^ v1)
                                           + v4
                                           + (v0 & (2 * (*(unsigned __int8 *)(v2 + 6) - 1))) == v3)) ^ v5))
                            - ((v5 - 893619366) & 0x35438F7F ^ 0x53BLL)))();
}

uint64_t sub_18CA45B78()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((3885
                                          * (((*(unsigned __int8 *)(v2 + 7) - 1) ^ v1)
                                           + v4
                                           + (v0 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1))) == v3)) ^ v5))
                            - (v5 + 730)
                            + 1323))();
}

uint64_t sub_18CA45BBC(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  char v7;
  uint64_t v8;
  int v9;

  v9 = ((*(unsigned __int8 *)(v4 + 8) - 11) ^ v3) + v6 + (((*(unsigned __int8 *)(v4 + 8) - 11) << (v7 - 92)) & v2);
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((~(v9 == v5) + 2 * (v9 == v5) != -1) * ((a2 + 1093697988) & 0xBECF7B24 ^ 0x24A)) ^ a2)))();
}

void sub_18CA45C28(int a1@<W8>)
{
  int v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char v8;
  int v9;
  int v10;

  v5 = (v1 - 791) ^ 0x44C;
  *(_DWORD *)(*(_QWORD *)(v3 + 96) + 1428) = 1531188549;
  v6 = a1 - 1;
  v10 = v5;
  v7 = v5 - 519;
  v8 = (v1 - 23) ^ 0x24;
  v9 = 673918253 * ((((2 * (v4 - 120)) | 0x8B771A10) - (v4 - 120) - 1169919240) ^ 0xDFF396A0);
  *(_DWORD *)(v4 - 116) = v9 ^ v6 ^ 0xDA818104;
  *(_DWORD *)(v4 - 112) = v9 + v5 - 1676532581;
  *(_QWORD *)(v4 - 104) = &STACK[0x7503D0B735518A55];
  sub_18CA1DCF0(v4 - 120);
  __asm { BR              X9 }
}

uint64_t sub_18CA45E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;

  v12 = v8 + 1750238022;
  if (v12 <= 0x40)
    v12 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (a8 ^ (763 * (a7 - v9 - v10 + v12 > 0xE)))) - 4))();
}

uint64_t sub_18CA45EC4(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;

  v12 = v9 + v8;
  v13 = v12 + v10;
  if ((v12 + v10) <= 0x40)
    v13 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((a8 - 1116) * (a7 - v12 >= (a2 + v13))) ^ a8))
                            - (((a8 - 1081) | 0xE43u) ^ 0xE6BLL)))();
}

uint64_t sub_18CA45F18(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  int v25;
  int v26;
  int v27;
  uint64_t v28;

  return ((uint64_t (*)(void))(*(_QWORD *)(v28
                                        + 8
                                        * ((23
                                          * ((unint64_t)(&a25 + a13 + v26 + ((4 * v27) ^ 0x3728u) + v25 - 3733) >= a5 + (unint64_t)(a4 + v27 - 3695) + 28)) ^ v27))
                            - 8))();
}

uint64_t sub_18CA45F6C@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int8x16_t *v8;
  int8x16_t v9;
  int8x16_t v10;

  v9.i64[0] = 0xB2B2B2B2B2B2B2B2;
  v9.i64[1] = 0xB2B2B2B2B2B2B2B2;
  v10.i64[0] = 0x5959595959595959;
  v10.i64[1] = 0x5959595959595959;
  *(int8x16_t *)(v6 + (a2 + v2)) = vaddq_s8(vsubq_s8(*v8, vandq_s8(vaddq_s8(*v8, *v8), v9)), v10);
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((7837 * (((v5 - 2607) ^ 0x475) == ((a1 + v3 + v4 + 13) & 0x1FFFFFFF0))) ^ v5)))();
}

uint64_t sub_18CA45FE0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((((v6 + 1090527187) | 0xCF00881) ^ (a4 + v6 - 2990)) * (v4 == v5)) ^ v6))
                            - 4))();
}

uint64_t sub_18CA4602C@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;

  *(&a19 + (a2 + v19)) = *(_BYTE *)(v20 + v23 - 1290977769)
                                     - ((2 * *(_BYTE *)(v20 + v23 - 1290977769)) & 0xB2)
                                     + 89;
  return ((uint64_t (*)(void))(*(_QWORD *)(v22
                                        + 8 * ((1121 * ((a1 + a2 + 1) > 0x3F)) ^ (v24 + v21 + 2105)))
                            - 8))();
}

uint64_t sub_18CA46098(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,unsigned __int8 a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int32x4_t a48,int32x4_t a49,int32x4_t a50,int32x4_t a51)
{
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128);
  __n128 v60;
  __n128 v61;
  __n128 v62;
  __n128 v63;
  __n128 v64;
  int v65;
  uint8x16_t v66;
  uint16x8_t v67;
  int8x16_t v68;
  uint16x8_t v69;
  int8x16_t v70;
  uint8x16_t v71;
  uint16x8_t v72;
  uint16x8_t v73;
  int8x16_t v74;
  int8x16_t v75;
  int8x16_t v76;
  int8x16_t v77;
  uint8x16_t v78;
  int8x16_t v81;
  int8x16_t v86;
  int32x4_t v87;
  int32x4_t v88;
  int32x4_t v89;
  int v91;
  uint8x16_t v92;
  uint16x8_t v93;
  uint16x8_t v94;
  uint8x16_t v95;
  uint8x16_t v100;
  uint16x8_t v101;
  uint16x8_t v102;
  int32x4_t v103;
  int32x4_t v104;
  int32x4_t v105;
  int32x4_t v106;
  _DWORD *v107;
  int v108;
  unsigned int v109;
  int v110;
  unint64_t v111;
  int8x16x4_t v112;
  int8x16x4_t v113;

  v59 = (uint64_t (*)(uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v53 + 8 * (v55 + v51 + 6))
                                                                                         - 4);
  v60 = (__n128)vdupq_n_s32(0x4C59F7FEu);
  v61 = (__n128)vdupq_n_s32(0xCC59F7E6);
  v62.n128_u64[0] = 0x5959595959595959;
  v62.n128_u64[1] = 0x5959595959595959;
  v63.n128_u64[0] = 0xB2B2B2B2B2B2B2B2;
  v63.n128_u64[1] = 0xB2B2B2B2B2B2B2B2;
  v64 = (__n128)vdupq_n_s32(0x98B3EFCC);
  v65 = a41 ^ 0xBF;
  if (v65 == 2)
  {
    v113 = vld4q_s8(&a25);
    v91 = 181 * (a4 ^ (a4 + 1));
    v92 = (uint8x16_t)veorq_s8(v113.val[0], (int8x16_t)v62);
    v93 = vmovl_u8(*(uint8x8_t *)v92.i8);
    v94 = vmovl_high_u8(v92);
    v95 = (uint8x16_t)veorq_s8(v113.val[1], (int8x16_t)v62);
    _Q22 = vmovl_u8(*(uint8x8_t *)v95.i8);
    _Q21 = vmovl_high_u8(v95);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v100 = (uint8x16_t)veorq_s8(v113.val[2], (int8x16_t)v62);
    v101 = vmovl_high_u8(v100);
    v102 = vmovl_u8(*(uint8x8_t *)v100.i8);
    v113.val[0] = veorq_s8(v113.val[3], (int8x16_t)v62);
    v113.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v113.val[0]);
    v113.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v113.val[1]);
    v113.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v113.val[1].i8);
    v113.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v113.val[0].i8);
    v113.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v113.val[0]);
    v113.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v113.val[0].i8);
    v103 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v102.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v93.i8), 0x18uLL)), v113.val[0]);
    v104 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v102, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v93), 0x18uLL)), v113.val[3]);
    v105 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v101.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v94.i8), 0x18uLL)), v113.val[1]);
    v106 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v101, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v94), 0x18uLL)), v113.val[2]);
    v113.val[0] = veorq_s8(vandq_s8((int8x16_t)v103, (int8x16_t)v60), (int8x16_t)(*(_OWORD *)v113.val & __PAIR128__(0xFFFFFF18FFFFFF18, 0xFFFFFF18FFFFFF18)));
    v113.val[3] = veorq_s8(vandq_s8((int8x16_t)v104, (int8x16_t)v60), (int8x16_t)(*(_OWORD *)&v113.val[3] & __PAIR128__(0xFFFFFF18FFFFFF18, 0xFFFFFF18FFFFFF18)));
    v113.val[1] = veorq_s8(vandq_s8((int8x16_t)v105, (int8x16_t)v60), (int8x16_t)(*(_OWORD *)&v113.val[1] & __PAIR128__(0xFFFFFF18FFFFFF18, 0xFFFFFF18FFFFFF18)));
    v113.val[2] = veorq_s8(vandq_s8((int8x16_t)v106, (int8x16_t)v60), (int8x16_t)(*(_OWORD *)&v113.val[2] & __PAIR128__(0xFFFFFF18FFFFFF18, 0xFFFFFF18FFFFFF18)));
    a50 = vaddq_s32(vsubq_s32(v105, vaddq_s32((int32x4_t)v113.val[1], (int32x4_t)v113.val[1])), (int32x4_t)v61);
    a51 = vaddq_s32(vsubq_s32(v106, vaddq_s32((int32x4_t)v113.val[2], (int32x4_t)v113.val[2])), (int32x4_t)v61);
    a48 = vaddq_s32(vsubq_s32(v103, vaddq_s32((int32x4_t)v113.val[0], (int32x4_t)v113.val[0])), (int32x4_t)v61);
    a49 = vaddq_s32(vsubq_s32(v104, vaddq_s32((int32x4_t)v113.val[3], (int32x4_t)v113.val[3])), (int32x4_t)v61);
    v107 = (_DWORD *)&a48 + v58 + 64180870;
    v108 = *((_DWORD *)&a48 + v58 + ((v91 + 837248480) & 0xCE189BD5) + 64179881) ^ *(v107 - 3);
    v109 = v108 + v52 - ((2 * v108) & 0x98B3EFCC);
    v110 = *(v107 - 16) ^ *(v107 - 14);
    HIDWORD(v111) = v110 ^ 0x4C59F7E6 ^ v109;
    LODWORD(v111) = v110 ^ ~v109;
    *v107 = (v111 >> 31) + v52 - ((2 * (v111 >> 31)) & 0x98B3EFCC);
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * ((458 * (v57 == 64180807)) ^ v91)) - 8))(2561929164, 3251);
  }
  else if (v65 == 1)
  {
    v112 = vld4q_s8(&a25);
    v66 = (uint8x16_t)veorq_s8(v112.val[0], (int8x16_t)v62);
    v67 = vmovl_high_u8(v66);
    v68 = (int8x16_t)vmovl_high_u16(v67);
    v69 = vmovl_u8(*(uint8x8_t *)v66.i8);
    v70 = (int8x16_t)vmovl_high_u16(v69);
    v71 = (uint8x16_t)veorq_s8(v112.val[1], (int8x16_t)v62);
    v72 = vmovl_u8(*(uint8x8_t *)v71.i8);
    v73 = vmovl_high_u8(v71);
    v74 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v72.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v69.i8));
    v75 = vorrq_s8((int8x16_t)vshll_high_n_u16(v72, 8uLL), v70);
    v76 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v73.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v67.i8));
    v77 = vorrq_s8((int8x16_t)vshll_high_n_u16(v73, 8uLL), v68);
    v78 = (uint8x16_t)veorq_s8(v112.val[2], (int8x16_t)v62);
    _Q22 = (int8x16_t)vmovl_high_u8(v78);
    _Q21 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v78.i8);
    v81 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v86 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    v112.val[0] = veorq_s8(v112.val[3], (int8x16_t)v62);
    v112.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v112.val[0].i8);
    v112.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v112.val[0]);
    v87 = (int32x4_t)vorrq_s8(vorrq_s8(v74, v81), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v112.val[1].i8), 0x18uLL));
    v112.val[1] = vorrq_s8(vorrq_s8(v75, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v112.val[1]), 0x18uLL));
    v88 = (int32x4_t)vorrq_s8(vorrq_s8(v76, v86), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v112.val[0].i8), 0x18uLL));
    v89 = (int32x4_t)vorrq_s8(vorrq_s8(v77, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v112.val[0]), 0x18uLL));
    a50 = vaddq_s32(vsubq_s32(v88, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v88, v88), (int8x16_t)v64)), (int32x4_t)v61);
    a51 = vaddq_s32(vsubq_s32(v89, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v89, v89), (int8x16_t)v64)), (int32x4_t)v61);
    a48 = vaddq_s32(vsubq_s32(v87, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v87, v87), (int8x16_t)v64)), (int32x4_t)v61);
    a49 = vaddq_s32(vsubq_s32((int32x4_t)v112.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v112.val[1], (int32x4_t)v112.val[1]), (int8x16_t)v64)), (int32x4_t)v61);
    return ((uint64_t (*)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v53 + 8 * ((a4 - 1818889406) & 0x1E79EFBF))
                                                             - 12))(2750273681, 3251, v60);
  }
  else
  {
    a35 = 2 * (a35 ^ v54) + v54 - (v56 & (4 * (a35 ^ v54)));
    a36 = 2 * (a36 ^ v54) + v54 - (v56 & (4 * (a36 ^ v54)));
    a37 = 2 * (a37 ^ v54) + v54 - (v56 & (4 * (a37 ^ v54)));
    a38 = 2 * (a38 ^ v54) + v54 - (v56 & (4 * (a38 ^ v54)));
    return v59(2561929164, 3251, v60, v61, v62, v63, v64);
  }
}

void sub_18CA46158()
{
  JUMPOUT(0x18CA4616CLL);
}

void sub_18CA463B4()
{
  JUMPOUT(0x18CA462B8);
}

uint64_t sub_18CA463C8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v2 + 8 * ((2553 * (v1 + 1 != v3 + 16)) ^ v0)))();
}

uint64_t sub_18CA4649C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v5 + 8 * ((254 * (a5 + 1 != v6 + 32)) ^ a4)))();
}

uint64_t sub_18CA46558(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v6 + 8 * ((854 * (a6 + 1 == v7 + 48)) ^ a4)))();
}

void sub_18CA46630()
{
  JUMPOUT(0x18CA46BD0);
}

uint64_t sub_18CA4685C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * ((2808 * (a4 + 1 == v6 + 4)) ^ a3))
                                                            - 8))(a1, a2, v4);
}

uint64_t sub_18CA46930()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v2 + 8 * ((102 * (v1 + 1 != v3 + 24)) ^ v0)))();
}

uint64_t sub_18CA469E0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v2 + 8 * ((1309 * (v0 + 1 == v3 + 44)) ^ v1)))();
}

uint64_t sub_18CA46AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9
                                                                                          + 8
                                                                                          * (int)((4
                                                                                                 * (v8 + 1 == v10 + 64)) | (32 * (v8 + 1 == v10 + 64)) | a3))
                                                                              - 8))(a1, a2, a3, a7, a8);
}

void sub_18CA46B78()
{
  JUMPOUT(0x18CA46BCCLL);
}

uint64_t sub_18CA46C50(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, int a16, unsigned int a17)
{
  uint64_t v17;
  int v18;
  _BOOL4 v19;

  if (a17 < 0x607610CD != (a14 + 327372580) < 0x607610CD)
    v19 = (a14 + 327372580) < 0x607610CD;
  else
    v19 = a14 + 327372580 > a17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17
                                        + 8 * ((438 * (a8 & ~(((a4 ^ (a4 - 1087)) - 447) ^ v19))) ^ (v18 + a4 + 1596)))
                            - 12))();
}

uint64_t sub_18CA46CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v6 - 1205) * (v5 + a5 + 63 >= (v5 + a5))) ^ v6))
                            - 4))();
}

uint64_t sub_18CA46D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  unsigned __int8 v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v17
                                        + 8
                                        * ((3319 * ((((unint64_t)(a13 + v14 - v16) < 0x10) ^ v13) & 1)) ^ v15))
                            + 1307585717
                            - ((v15 + 83887957) | 0x48F020A1u)))();
}

uint64_t sub_18CA46D7C(double a1, double a2, int8x16_t a3, int8x16_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, int a11, int a12)
{
  int v12;
  int8x16_t *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  *v13 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v16 + (v12 + a9)), vandq_s8(vaddq_s8(*(int8x16_t *)(v16 + (v12 + a9)), *(int8x16_t *)(v16 + (v12 + a9))), a4)), a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((a12 & ~(v14 + v17)) * a11) ^ (v14 + v17 + 486))) - 4))();
}

uint64_t sub_18CA46DD8@<X0>(int a1@<W1>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  char v9;

  *(_BYTE *)(v5 + a3) = *(_BYTE *)(v7 + (v3 + a2))
                      - (((v4 + v8) ^ v9) & (2 * *(_BYTE *)(v7 + (v3 + a2))))
                      + 89;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((a3 != 63) * a1) ^ (v4 + v8 + 486))) - 4))();
}

uint64_t sub_18CA46E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  uint64_t v15;
  _BOOL4 v16;

  v16 = v13 + 1737591680 < (a13 + 906804111);
  if ((a13 + 906804111) < 0xB4844D69 != v13 + 1737591680 < ((15 * (v14 ^ 0x306)) ^ 0xB4844D77))
    v16 = (a13 + 906804111) < 0xB4844D69;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((!v16 | (8 * !v16)) ^ v14)) - 12))();
}

uint64_t sub_18CA46E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v42;
  int v43;

  v43 = v35;
  v42 = (v35 + 1337671503) & 0xB044CABF;
  v38 = (v35 + 91229170) | 0x488020A9;
  v39 = 375636451 * (((~(v37 - 120) & 0x2EBCCE8A) - (~(v37 - 120) | 0x2EBCCE8B)) ^ 0x7D829407);
  *(_QWORD *)(v37 - 112) = a10;
  *(_DWORD *)(v37 - 120) = v39 + v35 + 1207;
  *(_DWORD *)(v37 - 116) = v39 + a13 - 15544537;
  sub_18CA422D0(v37 - 120);
  v40 = a35 & (v38 ^ 0x4DF02C86u);
  *(&a26 + (v40 ^ 0x34)) = -39;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v36 + 8 * ((3649 * ((v40 ^ 0x34) > 0x37)) | v43))
                                          - (v42 ^ 0xA29)))(2561929164);
}

uint64_t sub_18CA46FC4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * (v5 ^ (124 * (v4 == 63))))
                                                            - ((a4 + ((v5 - 1630504008) & 0x612F7F7Eu) - 1380) ^ 0x4DF02CB5)))(a1, a2, -1286513330);
}

uint64_t sub_18CA47020()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((617 * ((v0 ^ 0x4DF02F5D ^ (v1 - v3 - 1332) ^ (v1 + 1172378251) & 0xBA1EEBFF) > 7)) ^ v1)))();
}

uint64_t sub_18CA47070@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  int v19;
  int v20;
  uint64_t v21;

  *(_QWORD *)(&a19 + a2 + a1) = 0x5959595959595959;
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((59
                                * ((((((v20 - 1580129266) & 0x5E2EDBD6) + 44) | 0x164u) ^ 0x56CLL) != (((v20 - 1580129266) & 0x5E2EDBD6 ^ 0x3EC) & v19))) ^ (v20 - 1580129266) & 0x5E2EDBD6u)))();
}

uint64_t sub_18CA470E8@<X0>(int a1@<W4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _BOOL4 v26;
  unsigned int v27;
  int v28;
  _BOOL4 v29;

  v26 = v19 < v21;
  *(&a19 + (a2 - 386758811)) = *(_BYTE *)(v25 + (v20 + a1))
                                           - ((2 * *(_BYTE *)(v25 + (v20 + a1))) & 0xB2)
                                           + 89;
  v27 = v20 + 1 + v22;
  v28 = v26 ^ (v27 < v21);
  v29 = v27 < v19;
  if (!v28)
    v26 = v29;
  return ((uint64_t (*)(void))(*(_QWORD *)(v24 + 8 * (!v26 | (8 * !v26) | v23)) - 12))();
}

uint64_t sub_18CA47168@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * ((2081 * (a1 + (((v3 + v1 + 231) | 0x680) ^ 0xB3515AD9) < 0x38)) ^ (v3 + v1 + 1593)))
                                          - 4))(-1286513330);
}

uint64_t sub_18CA471BC@<X0>(uint64_t a1@<X0>, int a2@<W3>, unsigned int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = a3;
  v6 = a1 + a3;
  if ((unint64_t)(v6 + 1) > 0x38)
    v7 = v6 + 1;
  else
    v7 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((v7 - v5 + 1286513330 < ((a2 + v3 - 1943) ^ 0x4DF02CB1uLL))
                                          * (((v3 - 975) | 0x416) - 1959)) ^ v3))
                            - 4))();
}

uint64_t sub_18CA4722C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(&a25 + v27 + a1) = 0x5959595959595959;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * ((2582 * ((v26 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ v25))
                            - ((v25 - 373) ^ 0x665)))();
}

uint64_t sub_18CA47278(double a1)
{
  int v1;
  uint64_t v2;
  double *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *v3 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 == 0) * v4) ^ v1)) - (v2 ^ 0x665)))();
}

uint64_t sub_18CA472A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (v7 ^ (457 * (v5 != v6))))
                                                                                       - ((v7 + 1210063423) | 0x5D00C11u)
                                                                                       - ((v7 - 34310060) & 0x4FFBADFB ^ 0xFFFFFFFFFFFFFFF2)))(a1, a2, a3, a4, a5, -1307585733);
}

void sub_18CA47308()
{
  JUMPOUT(0x18CA4616CLL);
}

uint64_t sub_18CA476EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8 * (((((v6 ^ (a4 - 732)) - 4) ^ (v6 - v8 - 1332)) * (v5 == v4)) ^ v6)))(2561929164);
}

void sub_18CA47730()
{
  JUMPOUT(0x18CA4616CLL);
}

uint64_t sub_18CA47740@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  int v19;
  uint64_t v20;
  int v21;

  *(&a19 + a2 + a1) = 89;
  return (*(uint64_t (**)(void))(v20 + 8 * ((3679 * ((unint64_t)(a2 + 1 + a1) < 0x40)) ^ (v21 + v19 + 1336))))();
}

uint64_t sub_18CA477E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  int v37;
  int v38;
  int v39;
  unsigned int v40;
  int v41;
  uint64_t v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  _BOOL4 v46;

  v43 = v41 + 2059667500 + ((v38 - 806066020) & 0x7DFBBEFF);
  v44 = *(_DWORD *)(&a25 + (v43 & 0xFFFFFFFC) + 72);
  v45 = v41 + v37;
  *(_BYTE *)(a3 + v43) = (HIBYTE(v44) ^ 0x55) - ((2 * (HIBYTE(v44) ^ 0x55)) & 0xB2) + 89;
  *(_BYTE *)(a3 + v45) = (BYTE2(v44) ^ 0xA3) - ((2 * (BYTE2(v44) ^ 0xA3)) & 0xB2) + 89;
  *(_BYTE *)(a3 + v45 + 1) = (BYTE1(v44) ^ 0x1D) + (~(2 * (BYTE1(v44) ^ 0x1D)) | 0x4D) + 90;
  *(_BYTE *)(a3 + v45 + 2) = v44 ^ 0x37;
  v46 = v41 - 679237418 < (a37 - 710677274);
  if (v41 - 679237418 < v40 != a37 - 710677274 < v40)
    v46 = a37 - 710677274 < v40;
  return ((uint64_t (*)(void))(*(_QWORD *)(v42 + 8 * ((v46 * v39) ^ v38)) - 8))();
}

void sub_18CA47998()
{
  JUMPOUT(0x18CA47958);
}

void HN0R(uint64_t a1, uint64_t a2)
{
  __asm { BR              X8 }
}

uint64_t sub_18CA47A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;

  a14 = 31090337 * ((1505852218 - (&a13 | 0x59C17B3A) + (&a13 | 0xA63E84C5)) ^ 0x61BFE48C)
      - 849012913;
  v16 = sub_18CA83580(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15 + 8 * ((3052 * (a13 == 1556779682)) ^ v14)) - 8))(v16);
}

uint64_t sub_18CA47A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a15 = 3403 - ((2 * (&a13 & 0x6F8ADF30) - &a13 - 1871372088) ^ 0x57F44081) * v17;
  a13 = &STACK[0x5D7153D4F79FA4A7];
  sub_18CA4ED30((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 + 8 * ((2559 * (a14 == v15)) ^ 0x498u))
                                                                                       - 8))(v18, v19, v20, v21, v22, v23);
}

uint64_t sub_18CA47B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, unsigned int a15, uint64_t a16, int a17)
{
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  void (*v28)(unsigned int *);
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;

  v23 = 366490169 * ((1859958676 - (&a13 | 0x6EDCB794) + (&a13 | 0x9123486B)) ^ 0x878D1E2F);
  a15 = v23 + 1904;
  a14 = a11;
  a13 = v18 - ((2 * v18) & 0x49572A30) - 1532259048 + v23;
  sub_18C9B6420((uint64_t)&a13);
  v24 = *(_QWORD *)(v17 + 8);
  v25 = *(_DWORD *)v17 ^ 0xDBFE7FFF;
  v26 = (2 * *(_DWORD *)v17) & 0xB7FCFFFE;
  v27 = ((((&a13 | 0xECD3DAF0) ^ 0xFFFFFFFE) - (~&a13 | 0x132C250F)) ^ 0xD4AD4546) * v22;
  a15 = v27 + 3652;
  a17 = 1056157584 - v27 + v25 + v26;
  a14 = v24;
  a16 = a11;
  v28 = (void (*)(unsigned int *))(*(_QWORD *)(v20 + 496) - 4);
  v28(&a13);
  v29 = *(_QWORD *)(v17 + 24);
  v30 = ((&a13 & 0xE0B086 | ~(&a13 | 0xE0B086)) ^ 0x389E2F30) * v22;
  a17 = (*(_DWORD *)(v17 + 16) ^ 0xBFFFEFBF) - v30 + ((2 * *(_DWORD *)(v17 + 16)) & 0x7FFFDF7E) + 1525825488;
  a14 = v29;
  a16 = a11;
  a15 = v30 + 3652;
  v31 = ((uint64_t (*)(unsigned int *))v28)(&a13);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((267 * (a13 == v19)) ^ 0x87Eu)))(v31);
}

uint64_t sub_18CA47D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, int a18)
{
  int v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;

  v21 = 1314530549 * ((2 * (&a13 & 0x27F32500) - &a13 + 1477237501) ^ 0xE9055C33);
  a15 = a11;
  a13 = &STACK[0x7FBEEC3D5BCBFBD8];
  a18 = v21 ^ 0x4719F6BF;
  a16 = 227574628 - v21;
  a14 = (v19 + 1106911786) ^ v21;
  v22 = sub_18CA83938((uint64_t)&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((1693 * (a17 == ((v19 - 998) ^ (v18 + 920)))) ^ v19)))(v22);
}

uint64_t sub_18CA47DC8()
{
  void (*v0)(_DWORD *);
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _DWORD v14[2];
  uint64_t v15;
  int *v16;

  v14[1] = (v4 - 780) ^ ((((v14 | 0x480769BF) - v14 + (v14 & 0xB7F89640)) ^ 0xF90EEF71)
                       * v5);
  v15 = v11;
  v16 = &v13;
  (*(void (**)(_DWORD *))(v2 + 8 * (v4 & 0x197)))(v14);
  v15 = v11;
  LODWORD(v16) = v4
               - 476588053 * (((v14 | 0x56B22A48) - (v14 & 0x56B22A48)) ^ 0xEB4F2E0B)
               + 386;
  sub_18CA3B9C4((uint64_t)v14);
  if (v14[0] == v1 + (v4 ^ 0xCE6) - 1176)
    v6 = -50618718;
  else
    v6 = 1558092474;
  if (v14[0] == v1 + (v4 ^ 0xCE6) - 1176)
    v7 = -101237436;
  else
    v7 = -1178782348;
  if (v14[0] == v1 + (v4 ^ 0xCE6) - 1176)
    v8 = 1607398400;
  else
    v8 = -1312792;
  v9 = (v6 ^ v13) + v8 + (v7 & (2 * v13));
  v15 = v11;
  LODWORD(v16) = v4 + ((2 * (v14 & 0xC304630) - v14 - 204490292) ^ 0xE561EF88) * v3 - 1835;
  v0(v14);
  LODWORD(v16) = (v4 ^ 0xCE6)
               + (((v14 | 0xB8860C2F) + (~v14 | 0x4779F3D0)) ^ 0xAE285A6A) * v3
               - 837;
  v15 = v12;
  v0(v14);
  return (v9 - 1556779682);
}

void sub_18CA47FB0(uint64_t a1)
{
  int v1;
  _BOOL4 v3;

  v3 = *(_DWORD *)(*(_QWORD *)a1 - 0x61D35839E4698502) != 1194828854
    && *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x61D35839E4698502) != 1194828854;
  v1 = *(_DWORD *)(a1 + 16) ^ (375636451 * (((a1 | 0x361D7CF0) - (a1 & 0x361D7CF0)) ^ 0x6523267C));
  __asm { BR              X11 }
}

uint64_t sub_18CA480C8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (a1 ^ (342 * ((v2 + v3 - 133) > 0x7FFFFF7C))))
                            - ((a1 + 641109913) & 0xD9C96EFB)
                            + 2771))();
}

uint64_t sub_18CA48114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                 + 8
                                                                                 * ((a5 - 2774) ^ (((v6 < 1) << 6) | ((v6 < 1) << 7))))
                                                                     - ((a5 - 1010) ^ 0x858)))(a1, a2, a3, a4);
}

uint64_t sub_18CA48174@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _BOOL4 v13;

  *(_DWORD *)(a7 + 4 * (v10 - 1626712740)) = v8;
  v11 = (a1 ^ 0xC0) + v10 - 779207118;
  v13 = v11 < -1299977595 || v11 >= v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((3569 * v13) ^ a1)) - 12))();
}

uint64_t sub_18CA481CC()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((v1 == (((v2 + 1620) | 0x50) ^ 0x854)) * (v2 + 2086)) ^ v2))
                            - 12))();
}

uint64_t sub_18CA48204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  int v12;

  return (*(uint64_t (**)(void))(v11 + 8 * (((((v12 - 962) | 0xC00) + 397) * (a11 > 0)) ^ v12)))();
}

uint64_t sub_18CA4824C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;

  return (*(uint64_t (**)(void))(v14
                              + 8
                              * (((*(_DWORD *)(a14 + 4 * (((v16 + 1747) ^ 0x69D ^ (v18 + 1694)) + v17)) != v15)
                                * (((v16 - 1024) | 0x400) + 987)) ^ (v16 - 29))))();
}

uint64_t sub_18CA48298()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v0 + 8 * ((396 * (v2 + v3 + (v1 ^ 0x84Eu) - 363 < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_18CA482D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)(a1 + 4 * ((v3 ^ 0x69D ^ (v5 + 1694)) + v4)) != v2)
                                * (((v3 - 2771) | 0x400) + 987)) ^ (v3 - 1776))))();
}

uint64_t sub_18CA48314()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 - 120) = v4;
  *(_DWORD *)(v2 - 112) = v1 - 561 - 142545853 * ((v2 - 120) ^ 0x2AFFAF6F);
  sub_18CA39EA0(v2 - 120);
  *(_QWORD *)(v2 - 120) = v5;
  *(_DWORD *)(v2 - 112) = v1
                        - 561
                        - 142545853
                        * ((((v2 - 120) | 0x1B0458AE) - (v2 - 120) + ((v2 - 120) & 0xE4FBA750)) ^ 0x31FBF7C1);
  sub_18CA39EA0(v2 - 120);
  *(_QWORD *)(v2 - 120) = v5;
  *(_QWORD *)(v2 - 112) = v0;
  *(_DWORD *)(v2 - 104) = v1
                        + 476588053 * ((((v2 - 120) | 0xFC65D241) - (v2 - 120) + ((v2 - 120) & 0x39A2DB8)) ^ 0x4198D602)
                        - 1494;
  return sub_18CA8284C(v2 - 120);
}

void sub_18CA48720(uint64_t a1)
{
  int v1;
  _BOOL4 v4;

  v4 = *(_QWORD *)(a1 + 8) != 0x69A7616A48D0517ELL
    && *(_QWORD *)a1 != 0x7213A2A61274DCCDLL
    && *(_QWORD *)(a1 + 32) != 0x29BF1651DF3F6C3;
  v1 = *(_DWORD *)(a1 + 24) ^ (1437274309 * ((~(_DWORD)a1 & 0xAD4A021E | a1 & 0x52B5FDE1) ^ 0x8F447F2B));
  __asm { BR              X8 }
}

uint64_t sub_18CA48824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((3338 * (*(_DWORD *)(a6 - 0x69A7616A48D05166) == v9 + 1556778753)) ^ v9)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_18CA48870(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  uint64_t v11;
  __n128 v12;
  __n128 v13;
  unsigned int v14;
  _BOOL4 v15;

  v12.n128_u64[0] = 0xB2B2B2B2B2B2B2B2;
  v12.n128_u64[1] = 0xB2B2B2B2B2B2B2B2;
  v13.n128_u64[0] = 0x5A5A5A5A5A5A5A5ALL;
  v13.n128_u64[1] = 0x5A5A5A5A5A5A5A5ALL;
  v14 = *(_DWORD *)(a10 - 0x69A7616A48D0516ELL) + 968550658;
  v15 = v14 < 0x951DBF0A;
  if (v15 == ((v10 + 1706744275) & 0x9A451F9F) - 1793213588 > 0x951DBF0A)
    v15 = v14 > 0x951DBF0A;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v11
                                                                                             + 8
                                                                                             * ((!v15
                                                                                               * (((v10 - 2475) | 0x28)
                                                                                                - 65)) ^ (v10 - 1277)))
                                                                                 - 8))(a1, a2, a3, a4, v12, v13);
}

uint64_t sub_18CA48AA8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, _DWORD *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,unsigned int a28,uint64_t a29,int a30)
{
  uint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;

  v32 = 375636451 * ((2 * (&a27 & 0xDE6AFD0) - &a27 + 1914261551) ^ 0x21270AA3);
  a30 = a1 - a15 - v32 + (((v31 - 414) | 0x1A1) ^ 0x38C308F9);
  a27 = v32 + v31 + 1751;
  a28 = v32
      + ((((v31 - 942) & (a1 - 1984881658)) + 16) ^ 0xFFDF37DD)
      + ((2 * (((v31 - 942) & (a1 - 1984881658)) + 16)) & 0xFFBE6FA0)
      + 1051323367;
  a29 = a6;
  v33 = ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v31 - 863] - 8))((unint64_t **)&a27);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v30 + 8 * ((63 * (*a17 != a14)) ^ v31)) - 8))(v33);
}

uint64_t sub_18CA48BB0(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25)
{
  uint64_t v25;
  int v26;
  __n128 v27;
  __n128 v28;

  v27.n128_u64[0] = 0xB2B2B2B2B2B2B2B2;
  v27.n128_u64[1] = 0xB2B2B2B2B2B2B2B2;
  v28.n128_u64[0] = 0x5A5A5A5A5A5A5A5ALL;
  v28.n128_u64[1] = 0x5A5A5A5A5A5A5A5ALL;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v25 + 8 * ((v26 - 919) ^ (2363 * (a18 < 0xFFFFFFFE)))) - (((v26 + 3) + 12) ^ (v26 + 3))))(1088616759, a25, 43, 3428448230, 3843289614, a10, 2237960233, 4281008785, a1, a2, a3, a4, v27, v28);
}

uint64_t sub_18CA48C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int v22;
  uint64_t v23;

  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * (v14 - 926)) - 12);
  v22 = v15 + 1088616759;
  v23 = *v20;
  *(_BYTE *)(*v20 + v22) = 89;
  *(_BYTE *)(v23 + v22 + 1) = (a3 ^ 0xD0) - (v16 & (2 * (a3 ^ 0xD0))) + 89;
  *(_BYTE *)(v23 + (v15 + 1088616761)) = (v17 | 0xC8) + 115;
  *(_BYTE *)(v23 + v22 + 3) = v18 ^ 0xC9;
  return v21(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

void sub_18CA49040()
{
  JUMPOUT(0x18CA48FC8);
}

void sub_18CA49054()
{
  JUMPOUT(0x18CA48FC8);
}

uint64_t sub_18CA49068(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  uint64_t v24;
  int v25;
  int v26;

  v26 = (a24 ^ a4) - (((a24 ^ a4) << ((v25 - 27) ^ 0x87)) & a20) + 1116196823;
  return ((uint64_t (*)(void))(*(_QWORD *)(v24
                                        + 8
                                        * ((147
                                          * (((2 * v26) & 0xAB785FBE ^ 0x81081FAE) + (v26 ^ 0x173BE008) - 1421615681 == 16780702)) ^ (v25 + 2776)))
                            - 4))();
}

uint64_t sub_18CA49108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,uint64_t a23,uint64_t a24,int a25)
{
  int v25;
  uint64_t v26;
  _BOOL4 v27;

  v27 = a22 - 429906740 < (a25 - 1963110716);
  if ((a25 - 1963110716) < 0x14C32BE != (a22 - 429906740) < 0x14C32BE)
    v27 = (a25 - 1963110716) < 0x14C32BE;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26
                                        + 8
                                        * (int)((!v27 * (((((v25 - 252) | 0x20) + 435755985) & 0xE606ECEF) - 3126)) ^ (((v25 - 252) | 0x20) - 608)))
                            - 12))();
}

void sub_18CA494E0()
{
  JUMPOUT(0x18CA49508);
}

uint64_t sub_18CA495E4(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 - 956) ^ a1 ^ 0x305 ^ 0x758) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_18CA49614()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((1263 * ((((v0 & 0x18) == 0) ^ (v1 - 91)) & 1)) ^ v1))
                            - (((v1 + 196) | 0x83Cu) ^ 0xCB0)))();
}

uint64_t sub_18CA49658()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int8x8_t v8;
  int8x8_t v9;
  uint64_t v10;
  int8x8_t v11;

  v10 = (v7 + v2 - v4 + 1149);
  v11 = vrev64_s8(*(int8x8_t *)(v1 - 7 + v10));
  *(int8x8_t *)(v0 - 7 + v10) = vrev64_s8(vadd_s8(vadd_s8(v11, v9), vmvn_s8(vand_s8(vadd_s8(v11, v11), v8))));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((30 * (((v5 + 2023781534) & 0x875F83BC ^ 0x3B4) + v4 == (v3 & 0xFFFFFFF8))) ^ v5))
                            - 12))();
}

uint64_t sub_18CA496E0(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a3 ^ (2148 * (v3 == v4)))) - ((a3 + 2304) ^ 0xCB0)))();
}

uint64_t sub_18CA4971C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v9 = v4 + v8 + (((a2 ^ 0xB5D) - 1916) | 0x418u);
  *(_BYTE *)(v2 + v9) = *(_BYTE *)(v3 + v9) + (v5 | ~(2 * *(_BYTE *)(v3 + v9))) + 90;
  return (*(uint64_t (**)(void))(v6 + 8 * ((2909 * (v4 - 1 != v7)) ^ a2 ^ 0xB5D)))();
}

uint64_t sub_18CA49770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13)
{
  int v13;
  unsigned int v14;
  uint64_t v15;
  _QWORD *v16;
  _BOOL4 v17;

  *(_BYTE *)(*v16 + (v13 + a7)) = -39;
  v17 = v13 - 1752520389 < a13 + 304486673;
  if (a13 > 0xEDD9E6EE != (v13 - 1752520389) < 0x12261911)
    v17 = a13 > 0xEDD9E6EE;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (int)(v14 ^ (194 * !v17))) - (v14 ^ 0xC66)))();
}

uint64_t sub_18CA497F4@<X0>(unsigned int a1@<W1>, int a2@<W6>, int a3@<W8>)
{
  int v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  _BOOL4 v10;
  int v11;

  v10 = a1 > v7;
  v11 = v3 + 1;
  *(_BYTE *)(*v9 + (v11 + a2)) = 89;
  if (v10 == v11 + a3 < v4)
    v10 = v11 + a3 < v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((!v10 * ((v5 - 2241) ^ 0x363)) ^ v5)) - 4))();
}

void sub_18CA49854(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;

  *(_QWORD *)(v8 - 0x7213A2A61274DCCDLL) = *v6;
  *(_DWORD *)(v9 - 0x29BF1651DF3F6C3) = a2;
  *v6 = 0;
  *(_QWORD *)(a6 - 0x69A7616A48D05176) = 0x3D71D7D33D71D7D3;
  *v7 = 1533203976;
  *(_DWORD *)(a6 - 0x69A7616A48D0516ALL) = ((*(_DWORD *)(a6 - 0x69A7616A48D0516ALL) & 0xFFFFFFFE ^ 0x3084BB2F | 0x60376AD7)
                                          - (*(_DWORD *)(a6 - 0x69A7616A48D0516ALL) & 0xFFFFFFFE ^ 0x3084BB2F | 0x9FC89528)
                                          - 1614244568) ^ 0x50B3D1F8;
  *(_DWORD *)(v11 + 20) = *v10;
}

void sub_18CA49964(unint64_t a1)
{
  unsigned int v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unint64_t v9;
  char *v10;
  unsigned int v11;
  _QWORD v12[2];
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  int32x4_t v23;
  int32x4_t v24;
  int32x4_t v25;
  unint64_t *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  char v36;
  char v37;
  char v38;
  char v39;
  _BYTE v41[4];
  unsigned int v42;
  unsigned int v43;
  unint64_t *v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v2 = 1314530549 * ((~(_DWORD)a1 & 0xADFDBFF9 | a1 & 0x52024006) ^ 0x1CF43937);
  v3 = *(_DWORD *)a1 ^ v2;
  v32 = *(_DWORD *)(a1 + 32) ^ v2;
  v4 = 673918253 * (((v41 | 0xAFA6A475) - (v41 & 0xAFA6A475)) ^ 0x35EEBFDD);
  v5 = *(_DWORD *)(a1 + 48);
  v21 = 1314530549 * ((~a1 & 0x302D9B35ADFDBFF9 | a1 & 0xCFD264CA52024006) ^ 0x97081BA81CF43937);
  v6 = v5 - v2;
  v42 = v4 ^ 0x8E0939CC;
  v43 = v3 + v4 - 1676531115;
  v26 = &STACK[0x7503D0B735518F5D];
  v44 = &STACK[0x7503D0B735518F5D];
  sub_18CA1DCF0((uint64_t)v41);
  v7 = v32;
  v8 = (v3 - 397191347) & 0x17ACAA74;
  v9 = a1;
  v10 = (char *)off_1E2538470[v3 ^ 0x80] - 8;
  v27 = *(_QWORD *)&v10[8 * v3] - 8;
  v17 = v6 + 202319484;
  v20 = (v8 ^ 0xCB27C48A) + v6;
  v14 = v6 + 896115302;
  v13 = v6 + 984482846;
  v12[1] = (char *)&v12[-168533869] + 1;
  v12[0] = (char *)&v20 + 3;
  v15 = v3 ^ 0x10A9;
  v16 = (v3 ^ 0x10A9) + 1324053316;
  v35 = v3 ^ 0x7F;
  v34 = v3 ^ 0x4B;
  v33 = v3 ^ 0x48;
  v19 = v3 + 1582154314;
  v28 = v3 - 1936664887;
  v29 = (v3 - 1936664887);
  v18 = v29;
  v31 = v3;
  v24 = vdupq_n_s32(0xCC59F7E6);
  v25 = vdupq_n_s32(0x4C59F7FEu);
  v23 = vdupq_n_s32(0x98B3EFCC);
  v22 = v9;
  v30 = *(_QWORD *)(v9 + 24);
  v11 = v7 - ((((v8 - 682246845) & 0x28AA467D) + 2 * v7 + 40057073) & 0xFE560522);
  v36 = ((2141412827 - v11) >> (((v3 + 77) & 0x74 ^ 0x3E) - 50))
      - ((2 * ((2141412827 - v11) >> (((v3 + 77) & 0x74 ^ 0x3E) - 50))) & 0xB2)
      + 89;
  v37 = (((v11 - 2141412828) >> 16) ^ 0x2B) - ((2 * (((v11 - 2141412828) >> 16) ^ 0x2B)) & 0xB2) + 89;
  v38 = (((unsigned __int16)(v11 - 24028) >> 8) ^ 2) + (~((v11 - 2141412828) >> 7) | 0x4D) + 90;
  v39 = (v7 - ((((((v3 + 77) & 0x74) + 67) & 0x7D) + 2 * v7 - 15) & 0x22) + 36) ^ 0xC8;
  __asm { BR              X16 }
}

uint64_t sub_18CA49DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  unsigned int v32;

  v32 = v29 + 1314;
  if (v32 <= 0x40)
    v32 = 64;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (int)((((v26 + 725049777) & 0xD4C89FDC ^ 0x7CF) * (v30 - v27 - v28 + v32 < 0xF)) ^ v26)))(2892928439, a2, 2892930069, a4, a5, a6, a7, 2750273681, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_18CA49E30(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  unsigned int v11;
  _BOOL4 v12;

  v9 = v4 + 19;
  v10 = v6 + v5;
  v11 = v10 + ((2 * ((v9 + 464061788) & 0xE456FFFF ^ 0x855)) ^ (a4 + 1274));
  if (v11 <= 0x40)
    v11 = 64;
  v12 = !__CFADD__(a4 + v10 + 1313, v7 + v11);
  return (*(uint64_t (**)(void))(v8 + 8 * ((328 * v12) ^ v9)))();
}

uint64_t sub_18CA49EA0@<X0>(int a1@<W0>, uint64_t a2@<X4>, _OWORD *a3@<X5>, int a4@<W8>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;

  v7 = (v5 - 561) | 0x201u;
  *(_OWORD *)(a2 + (a4 + a1 + v7 - 1324)) = *a3;
  v8 = ((v7 + 0x1FFFFF467) & (v4 + 1)) != 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)((16 * v8) | (32 * v8) | v7)) - 8))();
}

uint64_t sub_18CA49F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)(a5 + (v8 + v9)) = *(_OWORD *)(a6 + v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((16 * (v7 != v9)) | (32 * (v7 != v9)) | v6)) - 8))();
}

uint64_t sub_18CA49F34()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 + 379) ^ 0x718) + 2607) * (v0 == v2)) ^ v1)))();
}

uint64_t sub_18CA49F78@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  *(_BYTE *)(a3 + ((((v6 - 2008) | 0xC0u) + v8) & (a1 + a6 + 1629))) = *(_BYTE *)(v7 + a4 + a5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((((a6 + a2) > 0x3F) * v9) ^ v6)) - 12))();
}

uint64_t sub_18CA49FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  int8x16_t v64;
  int v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  int v70;
  int v71;
  int v72;
  uint8x16_t v73;
  uint8x16_t v81;
  _DWORD *v86;
  int v87;
  unsigned int v88;
  int v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int8x16x4_t v93;
  int8x16x4_t v94;

  v91 = v52;
  v92 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * v53) + 5 * (v53 ^ 0xAu) - 1014);
  v65 = STACK[0x2F0];
  v66 = LODWORD(STACK[0x2F0]);
  v67 = STACK[0x2F4];
  v68 = STACK[0x2F8];
  v69 = LODWORD(STACK[0x2F4]);
  v70 = STACK[0x2F8];
  v71 = LOBYTE(STACK[0x304]);
  v72 = v71 ^ 0xBF;
  if (v72 == 2)
  {
    v94 = vld4q_s8((const char *)&STACK[0x2A4]);
    v81 = (uint8x16_t)veorq_s8(v94.val[1], v64);
    _Q17 = vmovl_u8(*(uint8x8_t *)v81.i8);
    _Q16 = vmovl_high_u8(v81);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    v86 = (_DWORD *)(v56 + 4 * (v58 + 571997987));
    v87 = *(v86 - 8) ^ *(v86 - 3);
    v88 = v87 + v54 - ((v87 << (v59 + 65)) & 0x98B3EFCC);
    v89 = *(v86 - 16) ^ *(v86 - 14);
    HIDWORD(v90) = v89 ^ 0x4C59F7E6 ^ v88;
    LODWORD(v90) = v89 ^ ~v88;
    *v86 = (v90 >> 31) + v54 - ((2 * (v90 >> 31)) & 0x98B3EFCC);
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v55 + 8 * ((1247 * (v62 != 571997924)) ^ v59)) - 8))(94575982);
  }
  else if (v72 == 1)
  {
    LODWORD(a32) = STACK[0x2F8];
    v93 = vld4q_s8((const char *)&STACK[0x2A4]);
    v73 = (uint8x16_t)veorq_s8(v93.val[2], v64);
    _Q17 = vmovl_high_u8(v73);
    _Q16 = vmovl_u8(*(uint8x8_t *)v73.i8);
    __asm
    {
      SHLL2           V16.4S, V16.8H, #0x10
      SHLL2           V17.4S, V17.8H, #0x10
    }
    HIDWORD(a31) = v71 ^ 0xFFFFFFBF;
    return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * (v60 ^ 0x75)) - 4))(v66, *(_QWORD *)(v63 + 8 * (int)a36) - 4, *(_QWORD *)(v63 + 8 * SHIDWORD(a35)), *(_QWORD *)(v63 + 8 * (int)a35), v62 - 15, -(*(_BYTE *)(*(_QWORD *)(v63 + 8 * (int)a35) + v62 - 16 + v58) - 24), 571997987, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             v91,
             a29,
             a30,
             a31,
             a32,
             a33,
             v92,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52);
  }
  else
  {
    LODWORD(STACK[0x2EC]) = 2 * (LODWORD(STACK[0x2EC]) ^ v57) + v57 - (v61 & (4 * (LODWORD(STACK[0x2EC]) ^ v57)));
    LODWORD(STACK[0x2F0]) = (v66 ^ v57) + (v65 ^ v57) + v57 - (v61 & (2 * ((v66 ^ v57) + (v65 ^ v57))));
    LODWORD(STACK[0x2F4]) = (v69 ^ v57) + (v67 ^ v57) + v57 - (v61 & (2 * ((v69 ^ v57) + (v67 ^ v57))));
    LODWORD(STACK[0x2F8]) = (v70 ^ v57) + (v68 ^ v57) + v57 - (v61 & (2 * ((v70 ^ v57) + (v68 ^ v57))));
    return v92(v69, a2, a3, 2846921244, a5, a6, 97, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26);
  }
}

uint64_t sub_18CA4AE88(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28,int a29)
{
  uint64_t v29;

  return ((uint64_t (*)(void))(*(_QWORD *)(v29
                                        + 8
                                        * ((a2 + 1632) | (8
                                                        * ((a28 & 0x736F2DA5 ^ (a4 + 1452)) + a29 < 0xFFFFFFFB))))
                            - 8))();
}

uint64_t sub_18CA4AED0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, unsigned int a14, uint64_t a15, int a16)
{
  uint64_t v16;
  unsigned int v17;
  _BOOL4 v18;
  _BOOL4 v19;
  _BOOL4 v20;

  v17 = a16 - 427467871 + ((a2 + 874) | 0x2C1);
  v18 = v17 < a13;
  v19 = v17 > a14;
  if (a14 < 0x4EEB835F != v18)
    v20 = v18;
  else
    v20 = v19;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * ((963 * !v20) ^ (a2 + 2128))) - 8))(2923832993);
}

uint64_t sub_18CA4AF68@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  uint64_t v25;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25
                                                                        + 8
                                                                        * ((35
                                                                          * (a2 + v24 + ((a7 - 2098) ^ 0x75Bu) - 115 < a2 + v24)) ^ a7))
                                                            - 12))(80, a1, a24);
}

uint64_t sub_18CA4AFBC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  char v5;
  unint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  *(_BYTE *)(a2 + v3) = *(_BYTE *)(a1 + (a3 + v7))
                      - (v5 & (2 * *(_BYTE *)(a1 + (a3 + v7))))
                      + 89;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((((v4 - 1815) ^ v6) + v3 == 64) * v8) ^ v4)) - 4))();
}

void sub_18CA4B004()
{
  JUMPOUT(0x18CA4A33CLL);
}

uint64_t sub_18CA4B02C@<X0>(int a1@<W0>, int8x16_t *a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  int v25;
  uint64_t v26;
  int8x16_t v27;
  int8x16_t v28;

  *a2 = vaddq_s8(vsubq_s8(*(int8x16_t *)(a24 + (a3 + v25)), vandq_s8(vaddq_s8(*(int8x16_t *)(a24 + (a3 + v25)), *(int8x16_t *)(a24 + (a3 + v25))), v28)), v27);
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * ((2720 * (((v24 - 48) | a1) == 162)) ^ (v24 + 495))) - 4))();
}

uint64_t sub_18CA4B090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  unsigned int v25;
  int v26;
  uint64_t v27;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * ((623 * ((v25 ^ 0x593 ^ a4) + v26 < 4)) ^ v25)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_18CA4B0C8@<X0>(int a1@<W3>, uint64_t a2@<X5>, unsigned int a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;

  LOBYTE(STACK[0x2A4]) = *(_BYTE *)(a2 + a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v3 ^ (788 * ((a1 + v4 + 147) < 4))))
                            - (v3 - 1135)
                            + 170))();
}

void sub_18CA4B100()
{
  JUMPOUT(0x18CA4B10CLL);
}

uint64_t sub_18CA4B164@<X0>(int a1@<W2>, uint64_t a2@<X4>, uint64_t a3@<X5>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  *(_BYTE *)(a2 + (a1 + a4 + v6 - 177)) = *(_BYTE *)(a3 + (v7 - 1448045904));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (v4 ^ (2542 * ((v8 + v5 + 149) < 4))))
                            - 8))();
}

uint64_t sub_18CA4B1B0@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,uint64_t (*a21)(uint64_t))
{
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;

  *(_BYTE *)(a1 + (a3 - 176)) = *(_BYTE *)(a2 + (v22 - 1448045903));
  v24 = 375636451 * ((((v23 - 168) | 0xA7201103) - (v23 - 168) + ((v23 - 168) & 0x58DFEEF8)) ^ 0xF41E4B8F);
  *(_DWORD *)(v23 - 168) = v24 + v21 + 1059;
  *(_DWORD *)(v23 - 164) = v24 + 2106220805;
  STACK[0x320] = a20;
  v25 = sub_18CA422D0(v23 - 168);
  return a21(v25);
}

uint64_t sub_18CA4B23C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  uint64_t v25;
  _BOOL4 v26;

  v26 = a7 < 0x7845FF49;
  if (v26 == a3 + 266329640 < (v24 ^ 0x612u) + 2017853050)
    v26 = a3 + 266329640 < a7;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 + 8 * ((466 * !v26) ^ v24)) - 4))(a1, 266329640, a7, 178, a2, 466, 1688, a24, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_18CA4B2B4@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X7>, int a8@<W8>)
{
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  *(_BYTE *)(a5 + (v8 + a1)) = *(_BYTE *)(a7 + (a8 + v10))
                                           - (a4 & (2 * *(_BYTE *)(a7 + (a8 + v10))))
                                           + 89;
  v13 = a2 + a8 + 1;
  v14 = (a3 < v11) ^ (v13 < v11);
  v15 = v13 < a3;
  if (v14)
    v15 = a3 < v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((!v15 * a6) ^ v9)) - 4))();
}

uint64_t sub_18CA4B32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned int a32)
{
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;

  v35 = 375636451 * ((((v34 - 168) | 0xAB92172F) - (v34 - 168) + ((v34 - 168) & 0x546DE8D0)) ^ 0xF8AC4DA3);
  STACK[0x320] = a26;
  *(_DWORD *)(v34 - 168) = v35 + v32 + 1030;
  *(_DWORD *)(v34 - 164) = a12 + v35;
  v36 = sub_18CA422D0(v34 - 168);
  v37 = STACK[0x2E8] & 0x3F;
  *((_BYTE *)&STACK[0x2A4] + (v37 ^ 0x34)) = -39;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33
                                                                                + 8
                                                                                * ((2148
                                                                                  * ((v37 ^ 0x34) > 0x37)) ^ v32))
                                                                    - ((v32 - 29) ^ 0xBALL)))(v36, a32, 2892930069, 2846921244);
}

uint64_t sub_18CA4B448@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (((v1 ^ 0xF79) * (a1 == 63)) ^ v1))
                                          - ((v1 - 3392) ^ 0x23CLL)))(89);
}

uint64_t sub_18CA4B490()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((86 * ((v0 ^ 0xBu) < ((v1 - 416) | 0x22) + ((v1 - 382) ^ 0xFFFFFFE4))) ^ v1))
                            - 8))();
}

uint64_t sub_18CA4B4DC@<X0>(unsigned int a1@<W8>, uint64_t a2)
{
  char v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a2 + (v4 - 3338) + (unint64_t)a1) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((38 * ((v2 & 0x38) == 8)) ^ (v3 + 1565))))();
}

uint64_t sub_18CA4B520()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *v0 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 == 0) * v3) ^ v1)))();
}

uint64_t sub_18CA4B540@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((a1 - 410) | 3) + 2776) * (v2 == v1)) ^ a1))
                            - (a1 - 436)
                            + 170))();
}

uint64_t sub_18CA4B574(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  *(_BYTE *)(a5 + v5 + v8) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * (((((v6 ^ v9) ^ ((unint64_t)(v5 + 1 + v8) < 0x40)) & 1)
                                          * v7) ^ (v6 + 2298)))
                            - 8))();
}

void sub_18CA4B5B0()
{
  JUMPOUT(0x18CA4A33CLL);
}

uint64_t sub_18CA4B5D4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * ((151 * ((v0 - 1348271627) < 0x38)) ^ (v1 + 3160)))
                                          - 40 * (v1 ^ 0xB9u)
                                          + 432))(89);
}

void sub_18CA4B62C()
{
  JUMPOUT(0x18CA4B674);
}

uint64_t sub_18CA4B69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(a10 + v12) = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * (int)((((v11 & 0xFFFFFFFFFFFFFFF8) == 8)
                                               * ((v10 + 525336251) & 0xE0AFFFED ^ 0x11F)) ^ v10))
                            - 4))();
}

uint64_t sub_18CA4B6F0()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *v1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v3 == 0) * v2) ^ v0)) - 4))();
}

uint64_t sub_18CA4B714()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v2 - 1271679226) & 0x4BCC47BE) + 3125) * (v0 == v1)) ^ v2))
                            - 8))();
}

uint64_t sub_18CA4B758@<X0>(char a1@<W0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a2 + a3 + v4) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((unint64_t)(a3 + 1 + v4) > 0x37) * v5) ^ (v3 + 1641)))
                            - 8))();
}

void sub_18CA4B788(uint64_t a1, char a2)
{
  char v2;
  int v3;
  unsigned int v4;
  int v5;
  char v6;
  char v7;
  char v8;
  unint64_t v9;
  char v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v3 = LOBYTE(STACK[0x304]) ^ 0xBF;
  if (v3 == 1)
  {
    v8 = (a2 + 78) | 0x86;
    v12 = STACK[0x2E8];
    v13 = STACK[0x2E4];
    v14 = (LODWORD(STACK[0x2E8]) >> (v8 ^ 0x83)) ^ 0x3D;
    LOBYTE(STACK[0x2DC]) = ((8 * LOBYTE(STACK[0x2E8])) ^ 0xA0) - ((16 * LOBYTE(STACK[0x2E8])) & 0xBF) + 89;
    LOBYTE(STACK[0x2DD]) = v14 + (~(2 * v14) | 0x4D) + 90;
    LOBYTE(STACK[0x2DE]) = ((v12 >> 13) ^ 0xD) + (~(2 * ((v12 >> 13) ^ 0xD)) | 0x4D) + 90;
    LOBYTE(STACK[0x2DF]) = ((v12 >> 21) ^ 0xCB) - 2 * (((v12 >> 21) ^ 0xCB) & 0xDD ^ (v12 >> 21) & 4) + 89;
    HIDWORD(v15) = v13 ^ 0xD;
    LODWORD(v15) = v12 ^ 0x60000000;
    LOBYTE(STACK[0x2E0]) = (v15 >> 29) + (~(2 * (v15 >> 29)) | 0x4D) + 90;
    LOBYTE(STACK[0x2E1]) = ((v13 >> 5) ^ 0x14) - (v2 & (2 * ((v13 >> 5) ^ 0x14))) + 89;
    LOBYTE(STACK[0x2E2]) = ((v13 >> 13) ^ 0x53) - 2 * (((v13 >> 13) ^ 0x53) & 0xDD ^ (v13 >> 13) & 4) + 89;
    v11 = (v13 >> 21) ^ 0xFFFFFFF7;
    v10 = (2 * v11) & 0xB2;
  }
  else
  {
    if (v3 != 2)
      goto LABEL_6;
    v11 = STACK[0x2E4];
    v4 = STACK[0x2E8];
    v5 = LODWORD(STACK[0x2E4]) >> 13;
    v6 = v5 ^ 0x53;
    v7 = (v5 ^ 0x53) & 0xDD ^ v5 & 4;
    v8 = a2 - 44;
    LOBYTE(STACK[0x2DC]) = a2
                         - 44
                         + ((LODWORD(STACK[0x2E4]) >> 21) ^ 0xF7)
                         - (v2 & (2 * ((LODWORD(STACK[0x2E4]) >> 21) ^ 0xF7)))
                         - 45;
    LOBYTE(STACK[0x2DD]) = v6 - 2 * v7 + 89;
    LOBYTE(STACK[0x2DE]) = ((v11 >> 5) ^ 0x14) - (v2 & (2 * ((v11 >> 5) ^ 0x14))) + 89;
    HIDWORD(v9) = v11 ^ 0xD;
    LODWORD(v9) = v4 ^ 0x60000000;
    LOBYTE(STACK[0x2DF]) = (v9 >> 29) + (~(2 * (v9 >> 29)) | 0x4D) + 90;
    LOBYTE(STACK[0x2E0]) = ((v4 >> 21) ^ 0xCB) - (v2 & (2 * ((v4 >> 21) ^ 0xCB))) + 89;
    LOBYTE(STACK[0x2E1]) = ((v4 >> 13) ^ 0xD) - 2 * (((v4 >> 13) ^ 0xD) & 0x5B ^ (v4 >> 13) & 2) + 89;
    LOBYTE(STACK[0x2E2]) = ((v4 >> 5) ^ 0x3D) - 2 * (((v4 >> 5) ^ 0x3D) & 0x5B ^ (v4 >> 5) & 2) + 89;
    v10 = (16 * v4) & 0xBF;
    LOBYTE(v11) = (8 * v4) ^ 0xA0;
  }
  LOBYTE(STACK[0x2E3]) = v11 + (v10 ^ (v8 + 44) ^ 0x4D) + 90;
LABEL_6:
  JUMPOUT(0x18CA4A33CLL);
}

uint64_t sub_18CA4B9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v38;
  uint64_t v40;
  unint64_t v41;

  if (a32 == 2)
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38
                                                        + 8
                                                        * (int)(((LODWORD(STACK[0x300]) != 959153927)
                                                               * ((a2 + 396) ^ 0x244)) ^ (a2 + 396)))
                                            - 12))(a14);
  if (a32 == 1)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38
                                                                          + 8
                                                                          * ((2117 * (LODWORD(STACK[0x300]) != 959153927)) ^ ((int)a2 + 396)))
                                                              - ((a2 + 396) ^ 0x232)))(a1, a2, a14);
  v40 = 643 * (a2 ^ 0xB6);
  v41 = ((v40 + 0x5FCCCFB33FFF75E2) ^ (unint64_t)&a38)
      + ((2 * (_QWORD)&a38) & 0xBF999F667FFEFFD0)
      - 0x84008B1004239F9;
  LOBYTE(STACK[0x2FF]) = ((v41 + 3 * ((-125 * (a2 ^ 0xB6)) ^ 0x55)) ^ 0xBA) * (v41 + 28);
  return (*(uint64_t (**)(void))(v38 + 8 * (int)v40))();
}

void sub_18CA4BD14()
{
  JUMPOUT(0x18CA4BCE0);
}

uint64_t sub_18CA4BD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,__int128 a38,int a39,char a40)
{
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;

  v44 = *(_QWORD *)(a18 + 8);
  memset((char *)&a38 + 4, 89, sizeof(__int128));
  v45 = 1761959447 * ((((v42 - 168) | 0x3472B3CB) - (v42 - 168) + ((v42 - 168) & 0xCB8D4C30)) ^ 0x95D5720F);
  *(_DWORD *)(v42 - 140) = v41 - v45 + 383;
  *(_DWORD *)(v42 - 168) = v45 + 1528843729;
  STACK[0x338] = (unint64_t)&a40;
  STACK[0x320] = v42 - 184;
  STACK[0x340] = v44;
  STACK[0x328] = (unint64_t)&a38 + 4;
  v46 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (v41 - 66)))(v42 - 168);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v40
                                                      + 8
                                                      * (((*(_DWORD *)(v42 - 144) == 1556779682)
                                                        * (7 * (((v41 - 267) | 0xB2) ^ 0x18D) + 249)) ^ v41))
                                          - 8))(v46);
}

uint64_t sub_18CA4BE34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BOOL4 v9;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 40) + v0 - 0x68672B5AD2A8B991)
     - *(unsigned __int8 *)(v5 + v0 - 0x68672B5AD2A8B991);
  v7 = v0 + 1;
  v9 = v3 - 2055 + (v6 ^ 0x61DFE77B) + ((2 * v6) & 0xC3BFCEF6) != 1642063917 || v7 == v2 + 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1360 * v9) ^ v3)) - 8))();
}

uint64_t sub_18CA4BEBC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v4 = 31090337
     * ((((v3 - 168) | 0x83B8FD7652E43537) - (v3 - 168) + ((v3 - 168) & 0x7C470289AD1BCAC8)) ^ 0x241AD6889565557ELL);
  STACK[0x330] = v4 + 1103479145;
  *(_DWORD *)(v3 - 168) = v4 + a1 + 714665731 - 312;
  *(_DWORD *)(v3 - 136) = a1 - v4 - 1479740079;
  *(_DWORD *)(v3 - 152) = v4;
  *(_DWORD *)(v3 - 148) = ((a1 + 714665731) ^ 0x10B) + v4;
  STACK[0x320] = v1 - v4;
  *(_DWORD *)(v3 - 128) = a1 + 714665731 - v4;
  v5 = ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[a1 ^ 0x38] - 12))((unint64_t **)(v3 - 168));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * *(int *)(v3 - 132)) - 8))(v5);
}

void sub_18CA4BFA8()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 20) = 1556779682;
}

uint64_t sub_18CA4BFF4(_DWORD *a1)
{
  unsigned int v1;
  int v2;

  v1 = 142545853 * ((-2 - ((a1 | 0x88D5AA22) + (~(_DWORD)a1 | 0x772A55DD))) ^ 0x5DD5FAB2);
  v2 = a1[4] ^ v1;
  return (*((uint64_t (**)(void))off_1E2538470[v2 ^ 0x9A8]
          + (int)(((*a1 + v1 - 1556779683 < 0x63) * ((((v2 - 1944) | 0xAD) ^ 0xFFFFFF27) + ((v2 - 2292) | 0x209))) ^ v2)
          - 1))();
}

uint64_t sub_18CA4C0A4@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;

  *(_DWORD *)(*(_QWORD *)(result + 8) - 0x6CD1402A9B850BF2) = 2 * (v2 ^ 0x662) - a2 - 1181452990;
  return result;
}

void sub_18CA4C144(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_18CA4C1A8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((987 * (v0 != 756011384)) ^ 0x1E9u)) - 4))();
}

uint64_t sub_18CA4C1DC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  v4 = v1 - (**(_BYTE **)(v3 + 8) == 0);
  *(_DWORD *)(*(_QWORD *)(v2 + 96) + 528) = 1832862467;
  *(_DWORD *)(*(_QWORD *)(v2 + 96) + 532) = 1194828854;
  *(_QWORD *)(*(_QWORD *)(v2 + 96) + 536) = *(_QWORD *)(v2 + 96) + 544;
  v5 = *(_QWORD *)(v2 + 96) + 0x61D35839E4698716;
  v6 = 1761959447 * ((&v9 & 0x3E468BDB | ~(&v9 | 0x3E468BDB)) ^ 0x601EB5E0);
  v10 = *(_QWORD *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  v11 = v5;
  v9 = 1390 - v6;
  v12 = v4 - v6 - 409099660;
  ((void (*)(unsigned int *))(*(_QWORD *)(a1 + 664) - 8))(&v9);
  v7 = 2945 - 636984841 * v13;
  *(_QWORD *)(*(_QWORD *)(v2 + 96) + 512) = *(_QWORD *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  return (v7 - 256885111);
}

void sub_18CA4C32C()
{
  uint64_t v0;
  int v1;

  v0 = MEMORY[0x1E0C80A78]();
  v1 = *(_DWORD *)v0 - 366490169 * ((1571090325 - (v0 | 0x5DA4EF95) + (v0 | 0xA25B106A)) ^ 0xB4F5462E);
  __asm { BR              X13 }
}

uint64_t sub_18CA4C4A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  void (*v67)(uint64_t);
  uint64_t v68;

  v45 = &a28 + v38;
  v65 = &a32 + v38;
  v64 = &a24 + v38;
  v63 = &a30 + v38;
  v62 = &a38 + v38;
  v61 = &a22 + v38;
  v59 = v40;
  v60 = &a26 + v38;
  v66 = &a34 + v38;
  v46 = a1[3];
  v68 = a1[5];
  v47 = a1[1];
  v48 = *(_QWORD *)(v47 - 0x422CB512D256B85FLL);
  *(_QWORD *)(v44 - 144) = a2;
  *(_QWORD *)(v44 - 128) = v48;
  *(_QWORD *)(v44 - 120) = &a28 + v38;
  *(_DWORD *)(v44 - 136) = (v43 - 1059) ^ ((((v44 - 144) & 0x1D787B9B | ~((v44 - 144) | 0x1D787B9B)) ^ 0xF429D220) * v41);
  *(_QWORD *)(v44 - 112) = v47;
  *(_QWORD *)(v44 - 104) = v46;
  v67 = (void (*)(uint64_t))(*(_QWORD *)(v39 + 8 * (v43 - 3351)) - 8);
  v67(v44 - 144);
  *(_DWORD *)(v44 - 112) = v43
                         + 1697562443
                         * ((190140588 - ((v44 - 144) | 0xB5550AC) + ((v44 - 144) | 0xF4AAAF53)) ^ 0x233A97D7)
                         + 92;
  *(_QWORD *)(v44 - 144) = v47;
  *(_QWORD *)(v44 - 136) = v46;
  *(_QWORD *)(v44 - 128) = v45;
  *(_QWORD *)(v44 - 120) = v66;
  ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v43 - 3261] - 8))((unint64_t **)(v44 - 144));
  *(_QWORD *)(v44 - 128) = v45;
  *(_QWORD *)(v44 - 120) = v65;
  *(_DWORD *)(v44 - 136) = (v43 - 1059) ^ (366490169
                                         * (((v44 - 144) & 0xA5DBE810 | ~((v44 - 144) | 0xA5DBE810)) ^ 0x4C8A41AB));
  *(_QWORD *)(v44 - 144) = v66;
  *(_QWORD *)(v44 - 112) = v47;
  *(_QWORD *)(v44 - 104) = v46;
  v67(v44 - 144);
  *(_QWORD *)(v44 - 128) = v65;
  *(_QWORD *)(v44 - 120) = v64;
  *(_QWORD *)(v44 - 144) = v66;
  *(_DWORD *)(v44 - 136) = (v43 - 1059) ^ (366490169
                                         * ((((v44 - 144) | 0xB98EE4CF) - (v44 - 144) + ((v44 - 144) & 0x46711B30)) ^ 0xAF20B28B));
  *(_QWORD *)(v44 - 112) = v47;
  *(_QWORD *)(v44 - 104) = v46;
  v67(v44 - 144);
  *(_QWORD *)(v44 - 128) = v64;
  *(_QWORD *)(v44 - 120) = v63;
  *(_QWORD *)(v44 - 144) = v66;
  *(_QWORD *)(v44 - 112) = v47;
  *(_QWORD *)(v44 - 104) = v46;
  *(_DWORD *)(v44 - 136) = (v43 - 1059) ^ (366490169
                                         * ((((v44 - 144) | 0xD1753854) - ((v44 - 144) & 0xD1753854)) ^ 0xC7DB6E10));
  v67(v44 - 144);
  *(_DWORD *)(v44 - 136) = (v43 - 1059) ^ (366490169
                                         * ((1627299771 - ((v44 - 144) | 0x60FE9FBB) + ((v44 - 144) | 0x9F016044)) ^ 0x89AF3600));
  *(_QWORD *)(v44 - 128) = v63;
  *(_QWORD *)(v44 - 120) = v62;
  *(_QWORD *)(v44 - 112) = v47;
  *(_QWORD *)(v44 - 144) = v66;
  *(_QWORD *)(v44 - 104) = v46;
  v67(v44 - 144);
  *(_DWORD *)(v44 - 136) = (v43 - 1059) ^ (366490169
                                         * ((2 * ((v44 - 144) & 0x2255B680) - (v44 - 144) - 576042626) ^ 0xCB041F3A));
  *(_QWORD *)(v44 - 128) = v62;
  *(_QWORD *)(v44 - 120) = v61;
  *(_QWORD *)(v44 - 144) = v66;
  *(_QWORD *)(v44 - 112) = v47;
  *(_QWORD *)(v44 - 104) = v46;
  v67(v44 - 144);
  *(_QWORD *)(v44 - 144) = v66;
  *(_DWORD *)(v44 - 136) = (v43 - 1059) ^ (366490169
                                         * ((2 * ((v44 - 144) & 0x2045BF00) - (v44 - 144) - 541441798) ^ 0xC91416BE));
  *(_QWORD *)(v44 - 128) = v61;
  *(_QWORD *)(v44 - 120) = v60;
  *(_QWORD *)(v44 - 112) = v47;
  *(_QWORD *)(v44 - 104) = v46;
  v67(v44 - 144);
  *(_DWORD *)(v44 - 136) = (v43 - 1059) ^ (366490169
                                         * (((((v44 - 144) | 0x3FD9356) ^ 0xFFFFFFFE) - (~(v44 - 144) | 0xFC026CA9)) ^ 0xEAAC3AED));
  *(_QWORD *)(v44 - 128) = v60;
  *(_QWORD *)(v44 - 120) = v66;
  *(_QWORD *)(v44 - 144) = v66;
  *(_QWORD *)(v44 - 112) = v47;
  *(_QWORD *)(v44 - 104) = v46;
  v67(v44 - 144);
  v49 = *(_QWORD *)(v47 - 0x422CB512D256B867);
  *(_QWORD *)(v44 - 144) = v42;
  *(_QWORD *)(v44 - 136) = v49;
  *(_DWORD *)(v44 - 128) = v43
                         + 476588053
                         * ((948863274
                           - ((v44 - 144) ^ 0x265FEFBC | 0x388E812A)
                           + ((v44 - 144) ^ 0x265FEFBC | 0xC7717ED5)) ^ 0x5CD3952A)
                         - 1877;
  sub_18CA8284C(v44 - 144);
  *(_QWORD *)(v44 - 144) = v68;
  *(_DWORD *)(v44 - 136) = v43
                         - 1437274309
                         * ((((v44 - 144) | 0x88ED7AAC) - (v44 - 144) + ((v44 - 144) & 0x77128550)) ^ 0xAAE30799)
                         - 1993;
  sub_18CA3B254(v44 - 144);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, uint64_t, char *, char *, uint64_t, char *))(a21 + 8 * (int)((((*(_DWORD *)(v44 - 132) - 606623168) > 0x7FFFFFFE) * (((v43 - 3077) ^ 0xFFFFFBDA) + ((v43 - 3077) | 0x803))) ^ v43)))(v50, v51, v52, v53, v54, v55, v56, v57, a3, v59, v60, v61, v62, a8, v63, v64, a11, v65);
}

uint64_t sub_18CA4C9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  int v28;

  return (*(uint64_t (**)(void))(a27
                              + 8
                              * (((v28 - 606623168 >= ((2 * ((v27 - 462) | 0xC13)) ^ 0x1F80u) + 2147482633)
                                * (49 * (((v27 - 462) | 0xC13) ^ 0xE08) - 1510)) ^ (((v27 - 462) | 0xC13) - 118))))();
}

uint64_t sub_18CA4CA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(uint64_t),uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;

  *(_QWORD *)(v33 - 128) = v27;
  *(_QWORD *)(v33 - 120) = v27;
  *(_QWORD *)(v33 - 144) = a25;
  *(_QWORD *)(v33 - 136) = v29;
  *(_DWORD *)(v33 - 112) = v28
                         + 1697562443 * ((((v33 - 144) | 0xA2D394D3) - ((v33 - 144) & 0xA2D394D3)) ^ 0x7543AC57)
                         + 2603;
  a24(v33 - 144);
  v34 = ((v33 - 144) ^ 0xBDFD0443) * v30;
  *(_DWORD *)(v33 - 136) = v31 + v32 + v34 + 1;
  *(_DWORD *)(v33 - 132) = (v28 + 12) ^ v34;
  *(_QWORD *)(v33 - 144) = a26;
  v35 = sub_18CA37F14(v33 - 144);
  return (*(uint64_t (**)(uint64_t))(a27
                                            + 8
                                            * (((*(_DWORD *)(v33 - 128) != 1116200472) * (((v28 + 2110) | 0x140) ^ 0xA89)) ^ v28)))(v35);
}

uint64_t sub_18CA4CB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  int v28;
  int v29;

  return ((uint64_t (*)(void))(*(_QWORD *)(a27
                                        + 8
                                        * ((227
                                          * ((((v28 - 1361) | 0x118) ^ (v27 - 1849)) + v29 >= 0x7FFFFFFD)) ^ v28))
                            - ((v28 - 1117) ^ 0x913)))();
}

uint64_t sub_18CA4CB8C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  int v21;

  return (*(uint64_t (**)(void))(a20
                              + 8
                              * (((v20 + v21 + 24 * (a1 ^ 0x91Eu) - 889 < 0x7FFFFFFE) * (((a1 - 1835) | 0xC2B) - 3546)) ^ a1)))();
}

uint64_t sub_18CA4CBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  *(_DWORD *)(v30 - 136) = ((((v30 - 144) | 0xAA1DD881) - (v30 - 144) + ((v30 - 144) & 0x55E22778)) ^ 0x17E0DCC2) * v28;
  *(_DWORD *)(v30 - 132) = (v27 - 2617) ^ (((((v30 - 144) | 0xAA1DD881) - (v30 - 144) + ((v30 - 144) & 0x55E22778)) ^ 0x17E0DCC2)
                                         * v28);
  *(_QWORD *)(v30 - 144) = a26;
  v31 = sub_18CA37F14(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(a27
                                            + 8
                                            * (((*(_DWORD *)(v30 - 128) != v29 + (v27 ^ 0xE39) + 3122 - 3124)
                                              * (444 * (v27 ^ 0xE39) - 838)) ^ (v27 - 2026))))(v31);
}

uint64_t sub_18CA4CCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(uint64_t),uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;

  *(_QWORD *)(v29 - 144) = a25;
  *(_QWORD *)(v29 - 136) = a21;
  *(_DWORD *)(v29 - 112) = v27
                         + 493
                         + 1697562443
                         * (((((v29 - 144) | 0x75C1780C) ^ 0xFFFFFFFE) - (~(v29 - 144) | 0x8A3E87F3)) ^ 0x5DAEBF77);
  *(_QWORD *)(v29 - 128) = a22;
  *(_QWORD *)(v29 - 120) = a22;
  a24(v29 - 144);
  *(_QWORD *)(v29 - 144) = a25;
  *(_QWORD *)(v29 - 136) = a21;
  *(_DWORD *)(v29 - 112) = v27
                         + 493
                         + 1697562443
                         * ((((v29 - 144) | 0xDBEEF51C) - (v29 - 144) + ((v29 - 144) & 0x24110AE0)) ^ 0xC7ECD98);
  *(_QWORD *)(v29 - 128) = a22;
  *(_QWORD *)(v29 - 120) = a22;
  a24(v29 - 144);
  v30 = 476588053 * ((((v29 - 144) | 0x5230CEAE) - (v29 - 144) + ((v29 - 144) & 0xADCF3150)) ^ 0xEFCDCAED);
  *(_QWORD *)(v29 - 144) = a26;
  *(_DWORD *)(v29 - 136) = v30 + v28 - 606623169;
  *(_DWORD *)(v29 - 132) = (v27 - 2098) ^ v30;
  v31 = sub_18CA37F14(v29 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a27
                                                      + 8
                                                      * (((*(_DWORD *)(v29 - 128) == 1116200472)
                                                        * (((v27 - 2500) | 0x186) ^ 0x390)) ^ v27))
                                          - 12))(v31);
}

uint64_t sub_18CA4CE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(uint64_t),uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;

  *(_DWORD *)(v32 - 136) = (v27 + 1452) ^ (366490169 * ((v32 - 144) ^ 0x16AE5644));
  *(_QWORD *)(v32 - 144) = a16;
  *(_QWORD *)(v32 - 128) = v28;
  *(_QWORD *)(v32 - 120) = v28;
  v33 = (v27 + 580) | 0x801;
  *(_QWORD *)(v32 - 112) = v30;
  *(_QWORD *)(v32 - 104) = v29;
  v34 = a23(v32 - 144);
  return (*(uint64_t (**)(uint64_t))(a27
                                            + 8
                                            * (((v31 - 606623168 >= ((2 * v33) ^ 0x1F80u) + 2147482633)
                                              * (49 * (v33 ^ 0xE08) - 1510)) ^ (v33 - 118))))(v34);
}

uint64_t sub_18CA4D5D0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;

  v4 = 142545853 * ((v3 - 144) ^ 0x2AFFAF6F);
  *(_DWORD *)(v3 - 136) = v4 ^ 0x2AEEDC51;
  *(_DWORD *)(v3 - 132) = v4 + v1 - 481;
  *(_QWORD *)(v3 - 144) = v7;
  sub_18CA38054(v3 - 144);
  *(_DWORD *)(v3 - 136) = (v1 - 33) ^ (366490169 * (((v3 - 144) & 0x4BD164DE | ~((v3 - 144) | 0x4BD164DE)) ^ 0xA280CD65));
  *(_QWORD *)(v3 - 112) = v9;
  *(_QWORD *)(v3 - 104) = v2;
  *(_QWORD *)(v3 - 128) = v0;
  *(_QWORD *)(v3 - 120) = v0;
  *(_QWORD *)(v3 - 144) = v7;
  v8(v3 - 144);
  *(_QWORD *)(v3 - 144) = v6;
  *(_QWORD *)(v3 - 136) = v0;
  *(_DWORD *)(v3 - 128) = ((v1 - 1728297668) & 0x6703BF3B)
                        + 476588053 * ((2 * ((v3 - 144) & 0x917B490) - (v3 - 144) + 1994935147) ^ 0xCB154F28)
                        - 1995;
  return sub_18CA8284C(v3 - 144);
}

void sub_18CA4D734(uint64_t a1)
{
  int v1;

  v1 = 366490169 * ((-1000747712 - (a1 | 0xC459CD40) + (a1 | 0x3BA632BF)) ^ 0x2D0864FB);
  __asm { BR              X10 }
}

uint64_t sub_18CA4D7D8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((2321
                                          * (((v2 == 1250179222) ^ (((v1 + 36) | 0x13) + 92)) & 1)) ^ ((v1 - 988) | 0x413)))
                            - ((((v1 - 988) | 0x413) - 1901745281) & 0x715A553F)
                            + 1306))();
}

uint64_t sub_18CA4D858@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3
                                                                                          + 8
                                                                                          * (int)(((a2 & 0xCA28BAC7) - 51) ^ 0x31))
                                                                              - 12))(a1, 129228707, 218, 4207092963, 171891482);
}

uint64_t sub_18CA4D934@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  int v3;
  unint64_t v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v5 ^ ((v3 == 0) * a2)))
                            - (v5 ^ a1 ^ (v5 - 1074) ^ v4)))();
}

void sub_18CA4D998()
{
  JUMPOUT(0x18CA4D8D8);
}

uint64_t sub_18CA4D9A0(uint64_t result)
{
  *(_DWORD *)(result + 16) = -503823066;
  return result;
}

void sub_18CA4DB80(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v1 = 1761959447 * (((a1 | 0xAF944A62) - a1 + (a1 & 0x506BB59D)) ^ 0xE338BA6);
  v2 = *(_DWORD *)(a1 + 36) - v1;
  v3 = *(_DWORD *)(a1 + 32) + v1;
  v5 = (~v3 & 0x30000000) == 0 || (v3 & 0x3F000000) == 452984832;
  __asm { BR              X11 }
}

uint64_t sub_18CA4DC4C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, int a6, unsigned int a7, int a8, char a9, uint64_t a10, unint64_t *a11, unint64_t *a12)
{
  int v12;
  uint64_t *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;

  v16 = *v13;
  v17 = 366490169 * (((&a5 | 0xDF679AA8) - (&a5 & 0xDF679AA8)) ^ 0xC9C9CCEC);
  a11 = &STACK[0x4B72487FA30F0B34];
  a12 = &STACK[0x21EBD9CEDC6E4EAD];
  a5 = &STACK[0x249095E15492B033];
  a10 = v16;
  a6 = v15 - v17 - 452160420;
  a7 = (v12 ^ 0xAF101CCF) + v17 - 30148874 + ((2 * v12) & 0x6BFADFD4 ^ 0x21DAC640);
  a9 = (57 * (((&a5 | 0xA8) - (&a5 & 0xA8)) ^ 0xEC)) ^ 0x56;
  v18 = (*(uint64_t (**)(unint64_t **))(a1 + 8 * (v15 - 1996)))(&a5);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * (((a8 == 1556779682) * (((v15 - 182) | 0x140) - 351)) ^ v15)))(v18);
}

uint64_t sub_18CA4DD78()
{
  uint64_t v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(v0 + 8 * ((((v2 ^ 0x8B1) + ((v2 - 2220) | 0x403) + 276) * (v1 == 452984832)) ^ v2)))();
}

uint64_t sub_18CA4DDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  int v11;
  uint64_t v12;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12 + 8 * ((15 * (a11 + 4 < a11)) ^ v11)) - 4))(a1);
}

uint64_t sub_18CA4DE3C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((878
                                * (((v2 << (-17 * (v0 ^ 0x51) + 86)) & 0x8F77FF6E ^ v1)
                                 + (v2 ^ v0 ^ 0x849B3CA3)
                                 - 1073858048 != 129644983)) ^ v0)))();
}

uint64_t sub_18CA4DEB0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8 * (((v1 + v2 - 1203503031 >= ((v0 + 707) ^ 0x8C6u)) * ((v0 ^ 0x74C) - 264)) ^ v0)))();
}

uint64_t sub_18CA4DF00(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((61 * (((((v4 ^ 0x996) - 19) ^ 0xFFFFF736) & (a3 - (v3 & 3))) > a3 + 3)) ^ v4))
                            - 12))();
}

uint64_t sub_18CA4DF4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v2 + v3 + (v4 ^ 0xECDu) - 1543;
  *(_DWORD *)(a1 - 3 + v7) = *(_DWORD *)(v1 - 3 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((21 * (v5 == 4)) ^ (v4 - 199))) - 8))();
}

uint64_t sub_18CA4DFA4()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (1276 * (v1 != 0xC320CA40)))))();
}

uint64_t sub_18CA4DFE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  _BOOL4 v10;

  *(_BYTE *)(a1 + (v8 - 461638873)) = *(_BYTE *)(v1 + (v8 - 461638873));
  v10 = v4 > 0xA464BCAA;
  if (v10 == v8 + 1075263101 < (v6 ^ (v3 + 2388)))
    v10 = v8 + 1075263101 < v5;
  return (*(uint64_t (**)(BOOL))(v9 + 8 * ((v10 * v7) ^ v2)))(v8 + 1075263101 < v5);
}

uint64_t sub_18CA4E050@<X0>(int a1@<W0>, unsigned int a2@<W1>, uint64_t a3@<X8>, uint8x8_t a4@<D0>)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (a1 - 1342176415) & 0x4FFFFBD7;
  a4.i32[0] = *(_DWORD *)(a3 + (v8 ^ 0x817) + a2);
  *(_DWORD *)(a3 - 3 + (v5 + v4)) = vmovn_s16((int16x8_t)vmovl_u8(a4)).u32[0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((203 * (v6 != 4)) ^ v8))
                            - ((v8 - 527) ^ 0x60FLL)))();
}

uint64_t sub_18CA4E0C8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 - 609529432) ^ 0xDBAB5D07) + ((v2 - 609529432) & 0x2454ACFB)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_18CA4E10C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a2 + (v5 + v4)) = *(_BYTE *)(v2 + (v5 + v4));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1434 * (v5 - 1 == v3)) ^ (a1 + 661)))
                            - (a1 - 1055)
                            + 1191))();
}

uint64_t sub_18CA4E148()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((28 * (*(_QWORD *)(v1 + 8) == 0x252EA949D6381EB1)) ^ v0))
                            - ((v0 + 1055) ^ 0xC7Du)
                            + 1203))();
}

uint64_t sub_18CA4E18C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((1375 * (*(_QWORD *)(v1 + 24) != 0x4A03A4D8D3FFF26ELL)) ^ v0)))();
}

uint64_t sub_18CA4E1C4@<X0>(uint64_t a1@<X8>, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(a1 - 0x252EA949D6381EB1) = a3;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1375 * (*(_QWORD *)(v4 + 24) != 0x4A03A4D8D3FFF26ELL)) ^ (v3 - 150280908) & 0x8F51EDE)))();
}

void sub_18CA4E22C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 - 0x4A03A4D8D3FFF26ELL) = v2;
  *(_DWORD *)(v1 + 16) = 1556779682;
}

void sub_18CA4E284(_DWORD *a1)
{
  unsigned int v1;
  int v2[10];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v1 = *a1 - 375636451 * (((a1 | 0xA026168F) - (_DWORD)a1 + (a1 & 0x5FD9E970)) ^ 0xF3184C03);
  v2[1] = v1 + 31090337 * (((v2 | 0x5392AC4C) - (v2 & 0x5392AC4C)) ^ 0x9413CC05) - 849015558;
  sub_18CA83580(v2);
  __asm { BR              X8 }
}

uint64_t sub_18CA4E3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  a13 = &STACK[0x5D7153D4F79FA4A7];
  a15 = v18
      - ((1968470156 - (&a13 | 0x7554788C) + (&a13 | 0x8AAB8773)) ^ 0x4D2AE73A) * v16
      + 758;
  sub_18CA4ED30((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((1072 * (a14 == v15)) ^ v18))
                                                                                       - (v18 - 65)
                                                                                       + 2576))(v19, v20, v21, v22, v23, v24);
}

uint64_t sub_18CA4E438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, int a15, int a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v21 = *(_DWORD *)(v16 + 8) ^ v19;
  v22 = 366490169
      * (((&a13 | 0x53CA6A00) - &a13 + (&a13 & 0xAC3595F8)) ^ 0x45643C44);
  a14 = a11;
  a13 = v22 + v21 - ((2 * v21 + 67170196) & 0x49572A30) + 1722551522;
  a15 = v22 + v20 - 676;
  sub_18C9B6420((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * (((2 * (a16 == v17)) | (8 * (a16 == v17))) ^ v20))
                                                                                       - ((v20 + 1821839849) & 0x9368EE57)
                                                                                       + 2633))(v23, v24, v25, v26, v27, v28);
}

uint64_t sub_18CA4E518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, int a18)
{
  int v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;

  v21 = 1314530549 * ((&a13 & 0xC9A65837 | ~(&a13 | 0xC9A65837)) ^ 0x87502106);
  a18 = v21 ^ 0x4719F6BF;
  a16 = 1707691937 - v21;
  a15 = a11;
  a14 = (v20 + 1106911380) ^ v21;
  a13 = &STACK[0x7FBEEC3D5BCBFBE8];
  v22 = sub_18CA83938((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * ((6667 * (a17 == (((v20 - 2559) | 0xA40) ^ (v18 + 1621)))) ^ v20))
                                          - (((v20 - 2168) | 0x623u) ^ 0x7B3)))(v22);
}

uint64_t sub_18CA4E5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  a15 = (v21 - 589) ^ ((&a14 ^ 0xB10986CE) * v18);
  a16 = a13;
  a17 = &a11;
  (*(void (**)(int *))(v20 + 8 * (v21 - 1961)))(&a14);
  LODWORD(a17) = v21
               - 476588053 * (((&a14 | 0x7986839B) - (&a14 & 0x7986839B)) ^ 0xC47B87D8)
               + 577;
  a16 = a13;
  v22 = sub_18CA3B9C4((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * (int)(((a14 != v17)
                                                             * ((((v21 + 675448630) & 0xD7BD7B1E) - 568) ^ 0x7BF)) ^ v21))
                                          - 8))(v22);
}

uint64_t sub_18CA4E6C8()
{
  uint64_t v0;
  void (*v1)(uint64_t *);
  int v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v9 = v2 + 366490169 * ((((2 * &v7) | 0x7F356352) - &v7 + 1080381015) ^ 0xA934E7ED) - 2241;
  v8 = v6;
  v1(&v7);
  v8 = v5;
  v9 = (v2 ^ 0x41)
     + 366490169 * (((&v7 | 0x915C1E07) + (~&v7 | 0x6EA3E1F8)) ^ 0x87F24842)
     - 2306;
  result = ((uint64_t (*)(uint64_t *))v1)(&v7);
  *(_DWORD *)(v0 + 4) = v3;
  return result;
}

void sub_18CA4E7F4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 24) - 673918253 * ((-2 - ((~(_DWORD)a1 | 0x621AACE4) + (a1 | 0x9DE5531B))) ^ 0xF852B74C);
  __asm { BR              X8 }
}

uint64_t sub_18CA4E8AC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * ((2378 * (*(_DWORD *)(v2 - 0x69A7616A48D05166) == 1556779682)) | v1))
                            - ((17 * (v1 ^ 0x427u)) ^ 0x36BLL)))();
}

uint64_t sub_18CA4E900()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v1 - 0x69A7616A48D0516ELL) + 1062497909;
  v4 = *(_DWORD *)(v1 - 0x69A7616A48D05172) + 1564830882;
  v5 = v3 < 0x9AB74475;
  v6 = v3 > v4;
  if (v5 != v4 < ((154 * ((v2 - 1600038598) & 0x5F5EA776 ^ 0x403)) ^ 0x9AB749A3))
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((!v6 | (4 * !v6)) ^ v2)) - 8))();
}

uint64_t sub_18CA4E9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;

  v9 = *(_QWORD *)(v7 - 0x69A7616A48D0517ELL);
  v10 = *(unsigned __int8 *)(v9 + (v6 - 1533203973)) ^ 0x59;
  v11 = ((*(unsigned __int8 *)(v9 + (v6 - 1533203976)) ^ 0x59) << 24) | ((*(unsigned __int8 *)(v9 + v6 - 1533205019 + 4 * (((a5 - 3542) | 0x360) ^ 0x265u)) ^ 0x59) << 16) | ((*(unsigned __int8 *)(v9 + (v6 - 1533203974)) ^ 0x59) << 8) | v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((15
                                          * (v8
                                           - *(_DWORD *)(a1 + 28)
                                           + ((v11 - 866519066 - 2 * (v11 & 0x4C59F7FE ^ v10 & 0x18) + 0x1000000) & 0xFFFFFF ^ 0x59F7E6) != -933416112)) ^ a5))
                            - 4))();
}

_DWORD *sub_18CA4EAA0@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  int v2;

  *a2 = v2;
  *result = 1556737495;
  return result;
}

uint64_t sub_18CA4EC70@<X0>(uint64_t a1@<X0>, int a2@<W3>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = (a2 - 351);
  *(_QWORD *)(*(_QWORD *)(a1 + 32) - 0x3D131E0B80724DD0) = v5 + v6 + (v7 ^ 0x41C);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((3000 * (*a3 == v4)) ^ v7)) - 8))();
}

uint64_t sub_18CA4ECCC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;

  *(_QWORD *)(*(_QWORD *)(a1 + 32) - 0x3D131E0B80724DD0) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3000 * (*a2 == v3)) ^ v4)) - 8))();
}

void sub_18CA4ED0C(uint64_t a1)
{
  int v1;
  _DWORD *v2;
  int v3;

  *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x34AA45F4469B4FB9) = v3;
  *v2 = v1;
  JUMPOUT(0x18CA4EC60);
}

void sub_18CA4ED30(uint64_t a1)
{
  int v1;
  _BOOL4 v2;

  v1 = *(_DWORD *)(a1 + 12) + 31090337 * ((((2 * a1) | 0x8E0B66AC) - a1 + 955927722) ^ 0x84D31F);
  v2 = off_1E2538470[v1 - 3375]((unint64_t **)32) != 0;
  __asm { BR              X8 }
}

uint64_t sub_18CA4EDC0(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)result = 0;
  *(_QWORD *)(result + 8) = 0x3D71D7D33D71D7D3;
  *(_QWORD *)(result + 16) = 0x39B251155B62D608;
  *(_DWORD *)(result + 24) = 1556779682;
  *(_QWORD *)(v2 - 0x5D7153D4F79FA497) = result + 0x69A7616A48D0517ELL;
  *((_DWORD *)v1 + 2) = 1556779682;
  return result;
}

uint64_t sub_18CA4EE40(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v1 = 142545853 * (((a1 | 0x74D1333A) - a1 + (a1 & 0x8B2ECCC5)) ^ 0x5E2E9C55);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 48) - 0xDEABF510E937B1ELL) + 1662195573;
  v3 = *(_DWORD *)(a1 + 44) + v1 + 2138929036;
  v4 = v2 < 0xC9C2F16D;
  v5 = v2 > v3;
  if (v3 < 0xC9C2F16D != v4)
    v5 = v4;
  return ((uint64_t (*)(void))(*((_QWORD *)off_1E2538470[(*(_DWORD *)(a1 + 40) + v1) & 0xEA905572]
                              + ((93 * v5) ^ (*(_DWORD *)(a1 + 40) + v1))
                              - 1)
                            - 153 * ((*(_DWORD *)(a1 + 40) + v1) ^ 0x8A7u)
                            + 3817))();
}

uint64_t sub_18CA4EF34(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((505
                                * (((*(unsigned __int8 *)(*(_QWORD *)(a1 + 8) + (v2 - 1722800633))
                                   - ((*(unsigned __int8 *)(*(_QWORD *)(a1 + 8) + (v2 - 1722800633)) << (((v3 + 13) & 0xBF) + 67)) & (53 * (v3 ^ 0xEFA) - 441))
                                   + 1575424071) & 0x1F) == 24)) ^ v3)))();
}

uint64_t sub_18CA4EFB8()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  _BOOL4 v6;

  v4 = v0 - 446924114 + ((v3 + 1473) | 0xB6);
  v5 = (v2 - 923655338 < ((31 * (v3 ^ 0x24A)) ^ 0x2FA1FCDEu)) ^ (v4 < 0x2FA1FD4D);
  v6 = v2 - 923655338 > v4;
  if (v5)
    v6 = v2 - 923655338 < ((31 * (v3 ^ 0x24A)) ^ 0x2FA1FCDEu);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((28 * v6) ^ v3)) - 12))();
}

uint64_t sub_18CA4F044(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;

  v5 = *(unsigned __int8 *)(v1 + (v3 + 1));
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v2 + 8 * (int)(((v5 >> 7) * (v4 + 2875)) ^ v4))
                                                          - 4))(a1, (v5 << (v4 + 110)) + (v5 ^ 0x2D3FD7FF) - 3147399, (v4 + 1835));
}

uint64_t sub_18CA4F0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v5;
  char v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((109
                                          * (((((((a5 + 1953615025) & 0x8B8E39FB) - 933301988) ^ (v6 + 1) & 0x7F)
                                             + 2 * ((v6 + 1) & 0x7F)) & 0xC85EFBFC) != -933299712)) ^ a5))
                            - 12))();
}

uint64_t sub_18CA4F120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  _BOOL4 v12;
  _BOOL4 v13;

  v10 = v8 + a6 + 131786891;
  v11 = v6 - 324779763 + v9 - 1872;
  v12 = v10 < 0x36E9BC81;
  v13 = v10 > v11;
  if (v12 != v11 < 0x36E9BC81)
    v13 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1149 * ((((v9 + 1) ^ v13) & 1) == 0)) ^ v9)) - 8))();
}

uint64_t sub_18CA4F1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;

  v12 = *(unsigned __int8 *)(v8 + (v11 + v10 + 2));
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (a8 ^ (37 * (a6 != -933299712)))) - 4))(a1, ((2 * v12) & 0xFC) + (v12 ^ 0xFF3FFD7E) + ((4 * (((a8 - 273) | 0x83C) ^ 0x813)) ^ 0x2DCFD14E));
}

uint64_t sub_18CA4F228(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;

  v11 = *(unsigned __int8 *)(v7 + (a7 + 1546 + v10 - 966791487)) | (a2 << 8);
  return (*(uint64_t (**)(uint64_t, _QWORD))(v8 + 8 * ((69 * (v9 - 1 == a5)) ^ a7)))(a1, ((v11 - 265385984) ^ 0xBF4FF7FD) + 1841289595 + ((2 * (v11 - 265385984)) & 0x7E9FEFFA));
}

uint64_t sub_18CA4F29C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  v8 = a2 + v5 + v7 + v6 + 177288331 - 635061348;
  v9 = v3 - 158327884;
  v10 = (v9 < a3 + 1087737047) ^ (v8 < 0x40D59595);
  v11 = v8 > v9;
  if (v10)
    v11 = v8 < 0x40D59595;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((35 * !v11) ^ (a3 - 1635))) - 12))();
}

uint64_t *sub_18CA4F328@<X0>(uint64_t *result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = result[3];
  v8 = result[4];
  v10 = *result;
  *a3 = v4;
  *(_DWORD *)(v10 - 0x419FC35EFF91683ALL) = v5;
  *(_DWORD *)(v9 - 0x3AB7F5DC33DEFC80) = a2;
  *(_QWORD *)(v8 - 0x714F9881AC293047) = v3 + ((v6 - 1275050333) & 0x4BFFBFBF ^ 0xC65FFFC1) + v7;
  *((_DWORD *)result + 4) = 1556779682;
  return result;
}

void sub_18CA4F3AC(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8) + 1437274309 * (((a1 | 0x6D8AD1A8) - (a1 & 0x6D8AD1A8)) ^ 0x4F84AC9D);
  v2 = *(_QWORD *)a1;
  ((void (*)(char *, void (*)()))off_1E2538470[v1 - 182])((char *)off_1E2538470[v1 - 248] - 4, sub_18CA83744);
  __asm { BR              X10 }
}

uint64_t sub_18CA4F454@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1993 * (*(_QWORD *)(*(_QWORD *)(v2 + 8 * (v3 - 239)) - 4) == 0)) ^ v3))
                            - a1
                            + 1841))();
}

uint64_t sub_18CA4F494@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 1674)))(v1);
}

uint64_t sub_18CA4F4B0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 12) + 1761959447 * (((a1 | 0xFABB8A99) - a1 + (a1 & 0x5447566)) ^ 0x5B1C4B5D);
  return ((uint64_t (*)(void))(*((_QWORD *)off_1E2538470[v1 - 2359]
                              + ((((*((_DWORD *)off_1E2538470[v1 - 2375] - 1) - 1266923552) > 0xFFFFFFD0)
                                * (((v1 + 920) | 0x272) - 2854)) ^ v1)
                              - 1)
                            - 8))();
}

uint64_t sub_18CA4F554()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((v1 + v3 + 47 < ((v2 + 809799671) & 0xCFBB69B7 ^ 0x90C))
                                          * (219 * (v2 ^ 0xF78) - 2171)) ^ v2))
                            - 4))();
}

uint64_t sub_18CA4F5B4()
{
  uint64_t v0;
  _DWORD *v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((75 * (*v1 - 1293971913 < ((v2 + 176604363) & 0xF5793B7B) - 2440)) ^ v2))
                            - (((v2 - 1985) | 0x808u) ^ 0x961)))();
}

uint64_t sub_18CA4F624()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v2 ^ (6465 * ((v1 + v3 + 31) > 0x1D)))) - 8))();
}

_DWORD *sub_18CA4F650@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;

  if (*(_DWORD *)(v2 + 16) == 1278765036)
    v3 = a2 - 1;
  else
    v3 = a2;
  *result = v3;
  return result;
}

void sub_18CA4F670(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)a1 + 1697562443 * ((a1 - 543953222 - 2 * (a1 & 0xDF93EEBA)) ^ 0x803D63E);
  v2 = *(_QWORD *)(a1 + 8);
  ((void (*)(char *, void (*)()))off_1E2538470[v1 ^ 0xB06])((char *)off_1E2538470[v1 ^ 0xB44] - 4, sub_18CA83744);
  __asm { BR              X11 }
}

uint64_t sub_18CA4F73C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_QWORD *)(*(_QWORD *)(v2 + 8 * (v0 - 2885)) - 4) == 0)
                                          * ((v0 ^ 0x12) - 2827)) ^ v0))
                            - ((v0 + 21) ^ 0xB6FLL)))();
}

uint64_t sub_18CA4F78C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 2847)))(v1);
}

uint64_t sub_18CA4F7A8(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unsigned int v10;
  uint64_t result;
  unint64_t *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v2 = 1761959447 * ((2 * (a1 & 0x36121140) - a1 + 1240329919) ^ 0xE84A2F7B);
  v3 = *(_DWORD *)(a1 + 24) + v2;
  v4 = *(_DWORD *)a1 + v2;
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_DWORD *)(a1 + 4) ^ v2;
  if (v4 == 75532237 || v4 == 75532234)
    __asm { BR              X6 }
  v9 = *(_QWORD *)(a1 + 16);
  v10 = 1434876433 * (((&v12 | 0x5A7E5AE4) - (&v12 & 0x5A7E5AE4)) ^ 0xAE1C6E49);
  v15 = *(_QWORD *)(a1 + 48);
  v13 = v5;
  v14 = v7 - v10 - 916838511;
  v17 = v9;
  v18 = v6;
  v16 = v10 - 1205611556 + v3 + 523;
  result = ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v3 ^ 0x47DC2CB4] - 8))(&v12);
  *(_DWORD *)(a1 + 8) = (_DWORD)v12;
  return result;
}

void sub_18CA4FCE4(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(unint64_t **);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = 1761959447 * (((a1 | 0xDDAA2C4F) - a1 + (a1 & 0x2255D3B0)) ^ 0x7C0DED8B);
  v2 = *(_DWORD *)(a1 + 20) - v1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_DWORD *)a1 + v1;
  v7 = 0;
  v8 = 16;
  v6 = v3;
  v5 = off_1E2538470[v2 & 0x2201CCE2];
  v7 = (v4 - 508290948);
  ((void (*)(_QWORD, uint64_t, uint64_t *, uint64_t, uint64_t *, uint64_t *))off_1E2538470[v2 ^ 0x354])(*((unsigned int *)v5 - 2), 26, &v6, 16, &v6, &v8);
  __asm { BR              X9 }
}

uint64_t sub_18CA4FDEC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1737 * (a4 - v6 == v5)) ^ v4)) - 4))();
}

uint64_t sub_18CA4FE14@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unsigned int v3;

  v3 = v1 - ((v1 << (((v2 + 66) | 0x33) ^ 0xB2)) & 0xF9DC324C) - 51504858;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((110
                                          * (((2 * v3) & 0xFBBFD62E ^ 0xF99C120C) + (v3 ^ 0x8131F231) - 134497024 != 1977329687)) ^ v2))
                            - 4))();
}

uint64_t sub_18CA4FECC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1
                                                      + 8
                                                      * ((((((v4 - 2473) | 0x4B0) - 648) ^ 0x541)
                                                        * ((v2 + v1 - 2111826711) < 8)) ^ v4))
                                          - 8))(v3);
}

uint64_t sub_18CA4FF24@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a2
                                                              + 8
                                                              * ((229
                                                                * ((((17 * (a1 ^ 0x598) - 316384140) ^ ((unint64_t)(v2 - v4) < 0x20)) & 1) == 0)) ^ a1))
                                                  - 4))(v3, (17 * (a1 ^ 0x598) - 316384140) & 0x12DB9FFB);
}

uint64_t sub_18CA4FF7C@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((((a1 - 2876) | 0x330) ^ 0x327) * (v2 < 0x20)) ^ a1))
                            - ((a1 + 139) ^ 0xBDDLL)))();
}

uint64_t sub_18CA4FFBC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v7 = (v5 + v3);
  v8 = *(_OWORD *)(v2 + v7 - 15);
  v9 = *(_OWORD *)(v2 + v7 - 31);
  v10 = v6 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((2054 * (((a1 - 89979759) & 0x55CFFFE) - 1966 == (v4 & 0xFFFFFFE0))) | (a1 + 914)))
                            - 8))();
}

uint64_t sub_18CA5002C@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (((((13 * (a1 ^ 0x711) - 1891135508) & 0x70B867FE) + 3082) * (v2 != v3)) ^ a1))
                            - 12))();
}

uint64_t sub_18CA50074@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  char v2;
  int v3;
  int v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a2
                                                     + 8
                                                     * ((1939 * ((v2 & 0x18) == ((a1 - 1437631321) & 0x55B07FBF) - 1978)) ^ a1))
                                         - (a1
                                          + 130)
                                         + 3021))((v3 - v4));
}

uint64_t sub_18CA500C4@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  *(_QWORD *)(v9 - 7 + v5 + v4 + v7 - v8 + (a1 ^ 0x8EBu)) = *(_QWORD *)(v2 - 7 + v5 + v4 + v7 - v8 + (a1 ^ 0x8EBu));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a2 + 8 * ((55 * (v8 - (v3 & 0xFFFFFFF8) == -8)) ^ a1)) - 4))(v6 - (v3 & 0xFFFFFFF8));
}

uint64_t sub_18CA50120@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;

  *(_QWORD *)(a1 + (v6 + v3)) = *(_QWORD *)(v5 + (v6 + v3));
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((v7 == 0) * v4) ^ a2)) - 4))();
}

uint64_t sub_18CA50150@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((1548 * ((((989 * (v3 ^ 0x33C)) ^ (v2 == a1)) & 1) == 0)) ^ v3))
                            - 4))();
}

uint64_t sub_18CA5018C@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v6 + (a1 + v5)) = *(_BYTE *)(v4 + (a1 + v5));
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((116 * (a1 - 1 == v3)) ^ a2))
                            - ((a2 - 1213728700) & 0x4858033F)
                            + 818))();
}

void sub_18CA501D8()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 16) = v1;
}

void sub_18CA501F8(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  _QWORD v6[2];
  unsigned int v7;
  int v9;
  unsigned int v10;
  unint64_t *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v1 = 142545853 * (a1 ^ 0x2AFFAF6F);
  v2 = *(_DWORD *)(a1 + 16) + v1;
  v3 = *(_QWORD *)(a1 + 32);
  v4 = -1068741167 * (*(_DWORD *)(a1 + 8) + v1) - 2130945262;
  v5 = 1437274309 * (v6 ^ 0x220E7D35);
  v10 = (*(_DWORD *)(a1 + 20) ^ v1 ^ 0x957F0652)
      + v5
      + 2062012512
      + ((2 * (*(_DWORD *)(a1 + 20) ^ v1)) & 0xBEFF5F58 ^ 0x94015358);
  v11 = &STACK[0x29BF1651DF3F6C7];
  v6[0] = &STACK[0x7213A2A61274DCD5];
  v6[1] = v3;
  v9 = v5 ^ (v2 - 596);
  v7 = ((v4 ^ 0x9FFEF5EF) + 2131222400 + ((2 * v4) & 0x3FFDEBDE)) ^ v5;
  ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v2 ^ 0x5B1] - 12))((unint64_t **)v6);
  __asm { BR              X9 }
}

uint64_t sub_18CA503B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  uint64_t *v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;

  v26 = *v19;
  v27 = v19[6];
  v28 = 366490169 * (((&a12 | 0x8144F275) + (~&a12 | 0x7EBB0D8A)) ^ 0x97EAA430);
  a13 = a11;
  a14 = a11;
  a12 = (v22 ^ 0x3BE7FFBF) + (v24 & 0x77CFFF7E) - v28 - 570830976;
  a16 = v27;
  a17 = v26;
  a18 = ((v23 - 1988356118) & 0x7683E7F7 ^ a10 ^ 0x3E5FFA2A) - v28 + ((2 * a10) & 0x7CBFFFBE) - 638993416;
  a19 = v28 - 1172904291 + v23;
  v29 = ((uint64_t (*)(int *))(*(_QWORD *)(v21 + 8 * (v23 - 1377)) - 8))(&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * ((79 * (a15 != v20)) ^ v23)) - 8))(v29);
}

uint64_t sub_18CA504CC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t result;
  unsigned int v5;
  uint64_t v6;

  result = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v1 + 8 * (v3 ^ 0x57Au)))(**(unsigned int **)(v1 + 8 * (v3 - 1407)), v6, v5);
  *(_DWORD *)(v0 + 12) = v2;
  return result;
}

void sub_18CA50574(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = qword_1EE056930 - qword_1EE056938 - (_QWORD)&v3;
  qword_1EE056938 = (864964861 * v2) ^ 0x30AB163F3BCF6666;
  qword_1EE056930 = 864964861 * (v2 ^ 0x30AB163F3BCF6666);
  ((void (*)(char *, void (*)()))off_1E2538470[((-3 * ((-3 * v2) ^ qword_1EE056930)) ^ byte_18CF13610[byte_18CF23C40[(-3 * ((-3 * v2) ^ qword_1EE056930))] ^ 0x8B])
                                                        - 67])((char *)off_1E2538470[((-3 * ((qword_1EE056930 + qword_1EE056938) ^ 0x66)) ^ byte_18CF13510[byte_18CF23B40[(-3 * ((qword_1EE056930 + qword_1EE056938) ^ 0x66))] ^ 0xF1])- 29]- 4, sub_18CA83744);
  __asm { BR              X10 }
}

uint64_t sub_18CA5069C()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * ((3361 * (*(_QWORD *)(*(_QWORD *)(v1 + 104) - 4) == 0)) ^ 0x48Eu))
                            - 12))();
}

uint64_t sub_18CA506DC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 2297)))(v1);
}

void sub_18CA506FC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 28) + 1761959447 * ((((2 * a1) | 0x9C55C0A8) - a1 - 1311432788) ^ 0xEF8D2190);
  __asm { BR              X14 }
}

uint64_t sub_18CA50830(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v1 ^ (407 * (a1 != 0x74CC6E84))))
                                          - ((v1 - 292366939) & 0x116D2FDE)
                                          + 4038))(937828748);
}

uint64_t sub_18CA5088C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  _BOOL4 v16;

  v12 = v8 > 0x6A16247;
  *(_BYTE *)(a2 + (a1 - 937828748)) = *(_BYTE *)(v2 + (a1 - 937828748)) ^ *(_BYTE *)(v4 + (((_BYTE)a1 + 116) & 0xF)) ^ *(_BYTE *)(v3 + (((_BYTE)a1 + 116) & 0xF)) ^ *(_BYTE *)(v5 + ((a1 - 937828748) & 0xFLL)) ^ (((a1 + 116) & 0xF) * (6 * (v6 ^ 0xED) - 113)) ^ 0x59;
  v13 = a1 - 1049068499;
  v14 = (a1 + 1);
  v15 = v12 ^ (v13 < v7);
  v16 = v13 < v9;
  if (!v15)
    v12 = v16;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11 + 8 * ((v12 * v10) ^ v6)) - 12))(v14);
}

uint64_t sub_18CA50930(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v1 ^ (111
                                               * (((a1 << (v1 + 70)) & 0xB7FDDBD6 ^ (v1 - 1583821755))
                                                + (a1 ^ 0x2F32836F)
                                                - 1606016 == 1541827691))))
                            - 4))();
}

uint64_t sub_18CA5099C(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((251 * ((((a1 + v2 - 1543433707) < 8) ^ (v1 - 102)) & 1)) ^ (v1 + 667))))();
}

uint64_t sub_18CA509E4(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((a2 + ((a3 - 1208018810) & 0x4800DB6F ^ 0x346u) + 2972 + a5 - 2998 < 0xFFFFFFF0)
                                          * ((65 * ((a3 - 1208018810) & 0x4800DB6F ^ 0x346)) ^ 0x2AC)) ^ (a3 - 1208018810) & 0x4800DB6F))
                            - 4))();
}

uint64_t sub_18CA50A40@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BOOL4 v18;

  v10 = (a1 + v8 + a2) + a4;
  v11 = ((_BYTE)a1 + (_BYTE)v8 + (_BYTE)a2) & 0xF;
  v12 = v11 + v6 - v10;
  v13 = (v11 | v5) - v10;
  v14 = (v11 | v7) - v10;
  v18 = (unint64_t)(v4 - a4) < 0x10 || v12 < 0x10 || v13 < ((37 * (a3 ^ 0xBEFu)) ^ 0xA9DuLL) || v14 < 0x10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((103 * v18) ^ a3)) - 12))();
}

uint64_t sub_18CA50AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  unsigned int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                       + 8
                                                                       * (((((a7 - 237) | 8) ^ 0x9B6) * (v8 < 0x10)) ^ a7))
                                                           - 12))(a1, a2, 0);
}

void sub_18CA50AF0()
{
  JUMPOUT(0x18CA50C08);
}

void sub_18CA50C58()
{
  JUMPOUT(0x18CA50BD0);
}

uint64_t sub_18CA50C64(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a8 ^ (127 * (v9 == a3))))
                            - ((a8 + 934978982) & 0xC8455FFA ^ 0xFDELL)))();
}

uint64_t sub_18CA50CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  char v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9
                                                                                + 8
                                                                                * (int)((((((a8 + 1965674887) & 0x8AD62DEF)
                                                                                         - 1822) ^ 0x35E)
                                                                                       * ((v10 & 8) == 0)) ^ (a8 - 1907)))
                                                                    - 4))(a1, a2, a3, (v8 - a3));
}

uint64_t sub_18CA50CF0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  int v43;
  char v44;
  int v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int8x16x4_t v54;

  *(_QWORD *)(v46 - 128) = a4 - 7;
  *(_QWORD *)(v46 - 120) = v38 - 7;
  *(_DWORD *)(v46 - 152) = v47 & 0xFFFFFFF8;
  *(_DWORD *)(v46 - 140) = v47;
  *(_DWORD *)(v46 - 136) = 8 - (v47 & 0xFFFFFFF8);
  v48 = -a3;
  v49 = a1 + v45;
  v50 = v43;
  v51 = (2 * v43) ^ 0x191Eu;
  *(_QWORD *)(v46 - 160) = v51;
  v52 = (v49 + a2 + v48);
  v54.val[0].i64[0] = v52 & (v51 - 2623);
  v54.val[0].i64[1] = (v44 + (_BYTE)v49 + 3 + (_BYTE)v48) & 0xF;
  v54.val[1].i64[0] = (v44 + (_BYTE)v49 + 2 + (_BYTE)v48) & 0xF;
  v54.val[1].i64[1] = (v44 + (_BYTE)v49 + 1 + (_BYTE)v48) & 0xF;
  v54.val[2].i64[0] = (v42 + (_BYTE)v48) & 0xF;
  v54.val[2].i64[1] = (v44 + (_BYTE)v49 + 15 + (_BYTE)v48) & 0xF;
  v54.val[3].i64[0] = (v44 + (_BYTE)v49 + 14 + (_BYTE)v48) & 0xF;
  v54.val[3].i64[1] = (v44 + (_BYTE)v49 + 13 + (_BYTE)v48) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v46 - 128) + v52) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(*(_QWORD *)(v46 - 120) + v52), *(int8x8_t *)(v40 + v54.val[0].i64[0] - 7)), veor_s8(*(int8x8_t *)(v39 + v54.val[0].i64[0] - 7), *(int8x8_t *)(v41 + v54.val[0].i64[0] - 7)))), (int8x8_t)0x5959595959595959), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v54, (int8x16_t)xmmword_18CF0E660), (int8x8_t)0x6161616161616161)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a38 + 8 * ((1534 * (*(_DWORD *)(v46 - 136) == v48)) ^ v50))
                                         - 8))((__n128)xmmword_18CF0E660);
}

void sub_18CA50E44()
{
  JUMPOUT(0x18CA50D64);
}

uint64_t sub_18CA50E4C()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)(*(_QWORD *)(v1 - 160) ^ (399
                                                                       * (*(_DWORD *)(v1 - 140) != *(_DWORD *)(v1 - 152)))))
                            - ((50 * (*(_QWORD *)(v1 - 160) ^ 0xA1F) - 3912) | 0x200)
                            + 638))();
}

uint64_t sub_18CA50E98@<X0>(int a1@<W3>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = (a1 - 1541827692);
  *(_BYTE *)(a3 + v9) = *(_BYTE *)(v5 + (v9 & 0xF)) ^ *(_BYTE *)(v3 + v9) ^ *(_BYTE *)(v4 + (v9 & 0xF)) ^ (((a2 + 118) | 0xD2) - 121) ^ *(_BYTE *)(v6 + (v9 & 0xF)) ^ (97 * (v9 & 0xF));
  return (*(uint64_t (**)(void))(v8 + 8 * ((956 * (a1 - 1 == v7)) ^ (a2 + 2798))))();
}

uint64_t sub_18CA50F0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  char v39;

  v37 = *(_QWORD *)(v34 + 40);
  *(int8x16_t *)(v36 - 112) = veorq_s8(*(int8x16_t *)*(_QWORD *)(v34 + 16), (int8x16_t)xmmword_18CF0E670);
  if (a9)
    v38 = v37 == 0x2B6480F0AD2A3701;
  else
    v38 = 1;
  v39 = v38;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * (int)(((((a5 + 121) ^ v39) & 1) * (((a5 - 3017) | 0x300) ^ 0x18D3)) ^ a5)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_18CA50F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  uint64_t v34;
  int v35;
  _BOOL4 v37;

  v35 = v33 | 0x610;
  v37 = ((v35 - 3660) & ((_DWORD)a11 + 15)) == 0 && (_DWORD)a11 != ((v35 - 30181740) & 0x1CC7FFC) + 1528842453;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 + 8 * ((419 * v37) ^ v35)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_18CA50FEC@<X0>(unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,unsigned int a34,uint64_t a35,uint64_t a36)
{
  unsigned __int8 *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  int v41;
  unint64_t v42;
  char *v43;
  int v44;
  int v45;
  int v46;
  char *v47;
  uint64_t (*v48)(unint64_t **);
  int v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  unsigned int v59;
  char *v60;
  unsigned int v61;
  int v62;
  char *v63;
  int v64;
  char *v65;
  int v66;
  uint64_t v67;
  char *v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  char *v124;
  char *v125;
  int v126;
  char *v127;
  char *v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  int v136;
  int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  char *v142;
  char *v143;
  uint64_t (*v144)(unint64_t **);
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  char *v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  int v154;
  unsigned int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  int v191;
  int v192;
  unsigned int v193;
  int v194;
  int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  unsigned int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  char *v218;
  char *v219;
  char *v220;
  unsigned int v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  unsigned int v225;
  uint64_t v226;
  char *v227;
  char *v228;
  char *v229;
  uint64_t (*v230)(unint64_t **);
  uint64_t v231;
  uint64_t v232;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  uint64_t v255;
  int v256;
  int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;

  *(_DWORD *)(v39 - 128) = v38 - 610;
  v40 = (char *)off_1E2538470[v38 ^ 0x5FAu] - 4;
  v41 = v40[*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A3700) ^ 0x85];
  HIDWORD(v42) = v41 ^ 8;
  LODWORD(v42) = ((v38 - 610) ^ ~v41) << 24;
  LOBYTE(v41) = (v42 >> 30) ^ 0x9F;
  v43 = (char *)off_1E2538470[v38 ^ 0x4D6u] - 12;
  v44 = v43[*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36F6) ^ 0xBFLL];
  HIDWORD(v42) = v44 ^ 7;
  LODWORD(v42) = (v44 ^ 0xFFFFFFDF) << 24;
  LOBYTE(v44) = v42 >> 28;
  v45 = v40[*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36FCLL) ^ 0x6FLL];
  HIDWORD(v42) = v45 ^ 8;
  LODWORD(v42) = (v45 ^ 0x40) << 24;
  v46 = v41 << 16;
  v47 = (char *)off_1E2538470[v38 - 1254] - 4;
  v48 = off_1E2538470[v38 - 1127];
  LOBYTE(v41) = *((_BYTE *)v48 + (*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36F5) ^ 0xD8));
  v49 = (((v42 >> 30) ^ 0x68) << 16) | ((v47[*(unsigned __int8 *)(v37
                                                                                                  - 0x2B6480F0AD2A36FBLL) ^ 0xDFLL] ^ 0x69) << 8);
  v50 = v43[*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36F2) ^ 0xBCLL];
  HIDWORD(v42) = v50 ^ 7;
  LODWORD(v42) = (v50 ^ 0xFFFFFFDF) << 24;
  LOBYTE(v50) = v42 >> 28;
  v51 = v49 | ((*((unsigned __int8 *)v48 + (*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36FDLL) ^ 0xAFLL)) ^ 0x97) << 24);
  v52 = v43[*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36FALL) ^ 0x98];
  HIDWORD(v42) = v52 ^ 7;
  LODWORD(v42) = (v52 ^ 0xFFFFFFDF) << 24;
  v53 = v51 & 0xFFFFFF00 | (v42 >> 28);
  LODWORD(v43) = v43[*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36FELL) ^ 0xD0];
  HIDWORD(v42) = v43 ^ 7;
  LODWORD(v42) = (v43 ^ 0xFFFFFFDF) << 24;
  v54 = v46 | ((v47[*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36FFLL) ^ 0x49] ^ 0xE3) << 8) | ((*((unsigned __int8 *)v48 + (*v36 ^ 0xFELL)) ^ 0x4E) << 24);
  v55 = v40[*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36F4) ^ 0xB6];
  LOBYTE(v43) = (v42 >> 28) ^ 0x3C;
  HIDWORD(v42) = v55 ^ 8;
  LODWORD(v42) = (v55 ^ 0x40) << 24;
  v56 = v54 & 0xFFFFFF00 | v43;
  v57 = (v42 >> 30) ^ 0x21;
  v58 = ((v47[*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36F3) ^ 0xC7] ^ 0xA8) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v41 ^ 0x47u) << 24) | (v57 << 16);
  LODWORD(v40) = v40[*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36F8) ^ 0xC8];
  HIDWORD(v42) = v40 ^ 8;
  LODWORD(v42) = (v40 ^ 0x40) << 24;
  v59 = (((v47[*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36F3) ^ 0xC7] ^ 0xA8) << 8) & 0xFFFF00 | ((v41 ^ 0x47) << 24) | ((_DWORD)v57 << 16) | v50 ^ 0x68) ^ 0xEB813927;
  v60 = (char *)off_1E2538470[v38 ^ 0x41Fu] - 8;
  v61 = v44 | ((v47[*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36F7) ^ 0xB7] ^ 0x48) << 8) & 0xFF00FFFF | (((v42 >> 30) ^ 0x37) << 16) | ((*((unsigned __int8 *)v48 + (*(unsigned __int8 *)(v37 - 0x2B6480F0AD2A36F9) ^ 0x18)) ^ 8) << 24);
  v62 = ((BYTE1(v58) ^ 0x9E) - ((2 * ((v58 >> 8) ^ 0x75F49E)) & 0xA6) + 1989154131) ^ *(_DWORD *)&v60[4 * (BYTE1(v58) ^ 0x6BLL)];
  v63 = (char *)off_1E2538470[v38 ^ 0x456u] - 8;
  v64 = *(_DWORD *)&v63[4 * (v41 ^ 0x58)];
  HIDWORD(v42) = ~v64;
  LODWORD(v42) = v64 ^ 0xC70526EC;
  v65 = (char *)off_1E2538470[v38 - 1014] - 12;
  v66 = (v42 >> 2) ^ *(_DWORD *)&v65[4 * (v57 ^ 0xDD)] ^ (v62 - ((2 * v62) & 0xAFD8128A) + 1475086661);
  v67 = v50 ^ 0xD9u;
  v68 = (char *)off_1E2538470[v38 - 1148] - 8;
  v261 = v56;
  v262 = v53;
  v69 = v56 ^ *(_DWORD *)&v68[4 * v67] ^ 0x86E20AAE ^ (v66 - ((2 * v66) & 0x9331B26) - 2070311533);
  v70 = v53 - ((2 * v53) & 0xDC4155C) - 2032006482;
  v259 = v61;
  v260 = v59;
  v257 = v70 ^ 0x2789BBD4 ^ v69;
  v71 = v61 ^ 0x11F5327D ^ v257;
  v72 = *(_DWORD *)&v63[4 * (((v71 ^ v59) >> 24) ^ 0xAE)];
  HIDWORD(v42) = ~v72;
  LODWORD(v42) = v72 ^ 0xC70526EC;
  v73 = ((v42 >> 2) - ((2 * (v42 >> 2)) & 0x9331B26) - 2070311533) ^ *(_DWORD *)&v68[4
                                                                                   * ((v71 ^ v59) ^ 0x96)];
  v74 = *(_DWORD *)&v60[4 * (((unsigned __int16)(v71 ^ v59) >> 8) ^ 0x8B)] ^ *(_DWORD *)&v65[4 * (((v71 ^ v59) >> 16) ^ 0xF)] ^ ((((unsigned __int16)(v71 ^ v59) >> 8) ^ 0x7E) - ((2 * (((v71 ^ v59) >> 8) ^ 0xC4267E)) & 0xA6) + 1989154131) ^ (v73 - ((2 * v73) & 0xAFD8128A) + 1475086661);
  v75 = v74 - ((2 * v74) & 0xDC4155C) - 2032006482;
  v76 = v70 ^ 0x8B526D63 ^ v75;
  HIDWORD(v255) = v71 ^ v59 ^ 0x5B24DA27;
  v256 = v71;
  v77 = v76 ^ v71;
  v78 = v76 ^ v71 ^ HIDWORD(v255);
  v79 = *(_DWORD *)&v63[4 * (HIBYTE(v78) ^ 0x9A)];
  HIDWORD(v42) = ~v79;
  LODWORD(v42) = v79 ^ 0xC70526EC;
  v80 = *(_DWORD *)&v60[4 * (((unsigned __int16)(v78 ^ 0xC8B3) >> 8) ^ 0xF5)] ^ *(_DWORD *)&v65[4 * (BYTE2(v78) ^ 0x88)] ^ (((unsigned __int16)(v78 ^ 0xC8B3) >> 8) - (((v78 ^ 0xF0A1C8B3) >> 7) & 0xA6) + 1989154131) ^ ((v42 >> 2) - ((2 * (v42 >> 2)) & 0xAFD8128A) + 1475086661);
  v258 = v69;
  HIDWORD(v253) = v75 ^ v69;
  v254 = __PAIR64__(v76 ^ v71, v78);
  v81 = v75 ^ v69 ^ *(_DWORD *)&v68[4 * ((v76 ^ v71 ^ BYTE4(v255)) ^ 0xF6)] ^ (v80
                                                                                              - ((2 * v80) & 0x9331B26)
                                                                                              - 2070311533);
  LODWORD(v255) = v76;
  HIDWORD(v252) = ((v81 ^ 0x516EF336) - ((2 * (v81 ^ 0x516EF336)) & 0xFB6A4B02) - 38460031) ^ v76;
  v82 = HIDWORD(v252) ^ 0x8EDEEA78 ^ v77;
  v83 = *(_DWORD *)&v63[4 * (((v82 ^ v78 ^ 0xF0A1C8B3) >> 24) ^ 0x8B)];
  HIDWORD(v42) = ~v83;
  LODWORD(v42) = v83 ^ 0xC70526EC;
  v84 = (v42 >> 2) ^ *(_DWORD *)&v60[4 * (((unsigned __int16)(v82 ^ v78 ^ 0xC8B3) >> 8) ^ 0x80)] ^ ((((unsigned __int16)(v82 ^ v78 ^ 0xC8B3) >> 8) ^ 0x75) - ((2 * (((v82 ^ v78 ^ 0xF0A1C8B3) >> 8) ^ 0xE1CB75)) & 0xA6) + 1989154131);
  v85 = (v84 - ((2 * v84) & 0x9331B26) - 2070311533) ^ *(_DWORD *)&v68[4 * ((v82 ^ v78 ^ 0xB3) ^ 0xFB)];
  LODWORD(v253) = v81;
  v86 = v81 ^ *(_DWORD *)&v65[4 * (((v82 ^ v78 ^ 0xF0A1C8B3) >> 16) ^ 0xE2)] ^ (v85
                                                                                               + 1475086661
                                                                                               + (~(2 * v85) | 0x5027ED75)
                                                                                               + 1);
  LODWORD(v251) = v86 ^ 0x4C9F72F3;
  HIDWORD(v251) = v82 ^ v78 ^ 0xF0A1C8B3;
  LODWORD(v252) = v82;
  v87 = v86 ^ 0x4C9F72F3 ^ ((HIDWORD(v252) ^ 0x8EDEEA78)
                          + 502366661
                          + (~(2 * (HIDWORD(v252) ^ 0x8EDEEA78)) | 0xC41CFC75)
                          + 1) ^ 0x307C325C;
  LODWORD(v250) = v87 ^ v82 ^ 0xB2B1AD2D;
  HIDWORD(v250) = v86 ^ 0x4C9F72F3 ^ ((HIDWORD(v252) ^ 0x8EDEEA78)
                                    + 502366661
                                    + (~(2 * (HIDWORD(v252) ^ 0x8EDEEA78)) | 0xC41CFC75)
                                    + 1);
  v88 = *(_DWORD *)&v63[4 * (((v250 ^ HIDWORD(v251)) >> 24) ^ 0x48)];
  HIDWORD(v42) = ~v88;
  LODWORD(v42) = v88 ^ 0xC70526EC;
  v89 = ((v42 >> 2) - ((2 * (v42 >> 2)) & 0x9331B26) - 2070311533) ^ *(_DWORD *)&v68[4
                                                                                   * ((v250 ^ BYTE4(v251)) ^ 2)];
  HIDWORD(v249) = v250 ^ HIDWORD(v251);
  v90 = v250 ^ HIDWORD(v251) ^ 0x22A36C47;
  v91 = *(_DWORD *)&v60[4 * (BYTE1(v90) ^ 0xF5)] ^ *(_DWORD *)&v65[4
                                                                 * (((v250 ^ HIDWORD(v251)) >> 16) ^ 0x8A)] ^ v86 ^ (BYTE1(v90) - ((v90 >> 7) & 0xA6) + 1989154131) ^ (v89 - ((2 * v89) & 0xAFD8128A) + 1475086661);
  v92 = v91 ^ 0x9EDA6BEC;
  v93 = v91 ^ v82 ^ 0xB2B1AD2D;
  v94 = v93 ^ v90;
  v95 = *(_DWORD *)&v63[4 * (HIBYTE(v94) ^ 0x21)];
  HIDWORD(v42) = ~v95;
  LODWORD(v42) = v95 ^ 0xC70526EC;
  v96 = ((v42 >> 2) - ((2 * (v42 >> 2)) & 0xAFD8128A) + 1475086661) ^ *(_DWORD *)&v65[4 * (BYTE2(v94) ^ 0xCE)];
  v97 = (v96 - ((2 * v96) & 0x9331B26) - 2070311533) ^ *(_DWORD *)&v68[4 * (v94 ^ 0xA7)];
  v98 = ((unsigned __int16)(v94 ^ 0x48E2) >> 8);
  v99 = (v97 - ((2 * v97) & 0xED202AA6) + 1989154131) ^ *(_DWORD *)&v60[4 * (v98 ^ 0xF5)];
  v100 = v92 ^ v98 ^ (v99 - ((2 * v99) & 0x9F6931B4) - 810247974);
  LODWORD(v249) = v92;
  v101 = v92 ^ (v87 - ((2 * v87) & 0x9F6931B4) - 810247974);
  HIDWORD(v247) = v101;
  v248 = __PAIR64__(v93, v94);
  LODWORD(v247) = v100 ^ 0x9520DDD5;
  v102 = v100 ^ 0x9520DDD5 ^ (v101 - ((2 * v101) & 0x2A41BBAA) - 1793008171);
  v103 = v102 ^ 0xE6F58988 ^ v93;
  v104 = v103 ^ v94 ^ 0x4BE748E2;
  v105 = *(_DWORD *)&v63[4 * (HIBYTE(v104) ^ 0x12)];
  HIDWORD(v42) = ~v105;
  LODWORD(v42) = v105 ^ 0xC70526EC;
  v106 = v104 ^ 0x78F58988;
  v246 = __PAIR64__(v102, v104);
  v107 = *(_DWORD *)&v60[4 * (((unsigned __int16)(v104 ^ 0x8988) >> 8) ^ 0xF5)] ^ *(_DWORD *)&v65[4 * (BYTE2(v104) ^ 0xDC)] ^ (BYTE1(v106) - ((v106 >> 7) & 0xA6) + 1989154131) ^ ((v42 >> 2) - ((2 * (v42 >> 2)) & 0xAFD8128A) + 1475086661);
  v108 = *(_DWORD *)&v68[4 * ((v103 ^ v94 ^ 0xE2) ^ 0xCD)] ^ v100 ^ 0xA462BD8C ^ (v107
                                                                                                 - ((2 * v107) & 0x9331B26)
                                                                                                 - 2070311533);
  HIDWORD(v244) = v108 ^ ((v102 ^ 0xE6F58988) - 2 * ((v102 ^ 0xE6F58988) & 0x2462BD9F ^ v102 & 0x13) - 1537032820);
  HIDWORD(v245) = v103 ^ 0x61A5FC9E;
  v109 = ((HIDWORD(v244) ^ 0x5BF36347) - ((2 * (HIDWORD(v244) ^ 0x5BF36347)) & 0x61961F50) + 818614184) ^ v103 ^ 0x61A5FC9E;
  v110 = v109 ^ v104 ^ 0x78F58988;
  v111 = ((((unsigned __int16)(v109 ^ v106) >> 8) ^ 0xBB)
        - ((2 * (((v109 ^ v106) >> 8) ^ 0x1A89BB)) & 0xA6)
        + 1989154131) ^ *(_DWORD *)&v60[4 * (((unsigned __int16)(v109 ^ v106) >> 8) ^ 0x4E)];
  v112 = (v111 - ((2 * v111) & 0x9331B26) - 2070311533) ^ *(_DWORD *)&v68[4
                                                                        * ((((BYTE4(v244) ^ 0x47)
                                                                                            - ((2 * (BYTE4(v244) ^ 0x47)) & 0x50)
                                                                                            - 88) ^ v103 ^ 0x9E ^ v104 ^ 0x88) ^ 0x91)];
  v113 = *(_DWORD *)&v63[4 * (HIBYTE(v110) ^ 0x70)];
  HIDWORD(v42) = ~v113;
  LODWORD(v42) = v113 ^ 0xC70526EC;
  v114 = (v42 >> 2) ^ *(_DWORD *)&v65[4 * (BYTE2(v110) ^ 0xA0)] ^ (v112 - ((2 * v112) & 0xAFD8128A) + 1475086661);
  LODWORD(v245) = v108;
  LODWORD(v243) = (v114 - 1537032820 + (~(2 * v114) | 0xB73A84E7) + 1) ^ v108;
  HIDWORD(v243) = v110;
  v115 = v243 ^ 0x930000ED ^ HIDWORD(v244) ^ 0x5BF36347;
  LODWORD(v242) = v109 ^ 0x4A8D612E ^ ((v115 ^ 0x8D06EA22) - ((2 * (v115 ^ 0x8D06EA22)) & 0xDB9163A2) + 1841869265);
  v116 = v242 ^ v110;
  v117 = ((unsigned __int16)(v116 ^ 0x1195) >> 8);
  v118 = *(_DWORD *)&v63[4 * (HIBYTE(v116) ^ 0x23)];
  HIDWORD(v42) = ~v118;
  LODWORD(v42) = v118 ^ 0xC70526EC;
  v119 = *(_DWORD *)&v60[4 * (v117 ^ 0xF5)] ^ *(_DWORD *)&v68[4 * (v116 ^ 0xD0)] ^ (v42 >> 2);
  HIDWORD(v241) = v116;
  v120 = ((v119 ^ 0xF20998C0) - 2 * ((v119 ^ 0xF20998C0) & 0x57EC094F ^ v119 & 0xA) + 1475086661) ^ *(_DWORD *)&v65[4 * (BYTE2(v116) ^ 0x7E)] ^ v243 ^ 0x930000ED ^ v117;
  HIDWORD(v242) = v115;
  v121 = (v115 ^ 0x8D06EA22) - 2 * ((v115 ^ 0x8D06EA22) & 0x37979BDD ^ v115 & 0x10);
  LODWORD(v244) = v109;
  v122 = v120 ^ v109 ^ v116 ^ 0x49571195;
  LODWORD(v63) = *(_DWORD *)&v63[4 * (HIBYTE(v122) ^ 0x63)];
  LODWORD(v241) = v122 ^ 0xA6D7C71;
  HIDWORD(v42) = ~(_DWORD)v63;
  LODWORD(v42) = v63 ^ 0xC70526EC;
  LODWORD(v60) = *(_DWORD *)&v60[4 * (((unsigned __int16)(v122 ^ 0xD0FF) >> 8) ^ 0xFD)] ^ *(_DWORD *)&v68[4 * (~(_BYTE)v122 ^ 0xC4)] ^ ((((unsigned __int16)(v122 ^ 0xD0FF) >> 8) ^ 8) - (((v122 ^ 0x2745D0FF) >> 7) & 0xA6) + 1989154131) ^ ((v42 >> 2) - ((2 * (v42 >> 2)) & 0x9331B26) - 2070311533);
  LODWORD(v60) = ((_DWORD)v60 - ((2 * (_DWORD)v60) & 0xAFD8128A) + 1475086661) ^ *(_DWORD *)&v65[4
                                                                                               * (((v122 ^ 0x2745D0FF) >> 16) ^ 0x16)];
  v123 = (_DWORD)v60 - ((2 * (_DWORD)v60) & 0x6F2F379A);
  LODWORD(v65) = v120 ^ v109 ^ 0x452FF2BF;
  v124 = (char *)off_1E2538470[v38 - 1039] - 4;
  v125 = (char *)off_1E2538470[v38 ^ 0x439u] - 8;
  v126 = v125[*(unsigned __int8 *)(v39 - 109) ^ 0xA5];
  HIDWORD(v42) = v126 ^ 0x13;
  LODWORD(v42) = (v126 ^ 0x80) << 24;
  v127 = (char *)off_1E2538470[v38 - 975] - 12;
  v128 = (char *)off_1E2538470[v38 ^ 0x4D0u] - 12;
  v239 = v125;
  v240 = v124;
  v237 = v128;
  v238 = v127;
  v129 = (((((v42 >> 30) ^ 0xDB) >> 2) | (((v42 >> 30) ^ 0xDB) << 6)) | ((v127[*(unsigned __int8 *)(v39 - 111) ^ 0x7ALL] ^ 7) << 16) | ((v128[*(unsigned __int8 *)(v39 - 112) ^ 0x78] ^ 0xC9) << 24) | (((v124[*(unsigned __int8 *)(v39 - 110) ^ 0x5DLL] + (*(_BYTE *)(v39 - 110) ^ 0x52) - 79) ^ 0x5D) << 8)) ^ 0xDD9BBE01;
  v130 = ((v125[*(unsigned __int8 *)(v39 - 101) ^ 0x60] ^ 0x58) & 0xFFFF00FF | ((v127[*(unsigned __int8 *)(v39 - 103) ^ 5] ^ 0x56) << 16) | (((v124[*(unsigned __int8 *)(v39 - 102) ^ 4] + (*(_BYTE *)(v39 - 102) ^ 0xB) - 79) ^ 0x33) << 8) | ((v128[*(unsigned __int8 *)(v39 - 104) ^ 0x1CLL] ^ 0x3C) << 24)) ^ 0xBC45FAE3;
  LODWORD(v60) = ((v125[*(unsigned __int8 *)(v39 - 105) ^ 0x28] ^ 0x99) & 0xFFFF00FF | ((((*(_BYTE *)(v39 - 106) ^ 0xAC) + v124[*(unsigned __int8 *)(v39 - 106) ^ 0xA3] - 79) ^ 0xF6) << 8) | ((v128[*(unsigned __int8 *)(v39 - 108) ^ 0xB2] ^ 0xCB) << 24) | ((v127[*(unsigned __int8 *)(v39 - 107) ^ 0x27] ^ 0x32) << 16)) ^ 0x161E0EB;
  v131 = ((v125[*(unsigned __int8 *)(v39 - 97) ^ 0x7BLL] ^ 0xEC) & 0xFFFF00FF | ((((*(_BYTE *)(v39 - 98) ^ 0xD0) + v124[*(unsigned __int8 *)(v39 - 98) ^ 0xDFLL] - 79) ^ 0xE4) << 8) | ((v127[*(unsigned __int8 *)(v39 - 99) ^ 0xAALL] ^ 0x64) << 16) | ((v128[*(unsigned __int8 *)(v39 - 100) ^ 0x45] ^ 0xFFFFFFF3) << 24)) ^ 0x56A6591;
  v123 -= 1214800947;
  LODWORD(v124) = *(_DWORD *)(v39 - 128);
  HIDWORD(v235) = v124 ^ 0x2D5;
  LODWORD(v236) = (v121 - 1214800947) ^ 0x3DC8BA5D ^ v123;
  LODWORD(v235) = v124 ^ 0x39E;
  HIDWORD(v234) = v120 ^ 0xB7979BCD ^ (v121 - 1214800947);
  LODWORD(v234) = v124 ^ 0x2C1;
  HIDWORD(v236) = v120 ^ 0xB7979BCD;
  HIDWORD(a6) = v123 ^ v120 ^ 0xB7979BCD;
  HIDWORD(a14) = (_DWORD)v65;
  HIDWORD(a4) = v236 ^ v65;
  v132 = ((((_DWORD)v124 + 638) | 0x201) - 1814) & 0x7D1EEC98 ^ 0x7D1EEC9Cu;
  v133 = a1[v132];
  *(_QWORD *)(v39 - 256) = 7;
  *(_DWORD *)(v39 - 140) = 2099178655;
  *(_QWORD *)(v39 - 168) = 8;
  *(_QWORD *)(v39 - 160) = v132;
  *(_QWORD *)(v39 - 136) = 1;
  v134 = v237[v133 ^ 0x60] ^ 0x48;
  LODWORD(v67) = v237[a1[8] ^ 0xC1] ^ 0xFC;
  LODWORD(v133) = v127[a1[1] ^ 0x66] ^ 0xEB;
  *(_QWORD *)(v39 - 152) = 15;
  LODWORD(v125) = (_DWORD)v133 << 16;
  v135 = a1[15] ^ 0xE9;
  *(_QWORD *)(v39 - 176) = 11;
  LODWORD(v65) = v239[v135] ^ 0x4E;
  v136 = v239[a1[11] ^ 0xC3];
  *(_QWORD *)(v39 - 192) = 0;
  LODWORD(v125) = v125 | ((v237[*a1 ^ 0x30] ^ 0x78) << 24);
  *(_QWORD *)(v39 - 184) = 2;
  LODWORD(v125) = v125 & 0xFFFF00FF | (((v240[a1[2] ^ 0xC0] + (a1[2] ^ 0xCF) - 79) ^ 0xF9) << 8);
  *(_QWORD *)(v39 - 248) = 4;
  *(_QWORD *)(v39 - 232) = 5;
  *(_QWORD *)(v39 - 216) = 9;
  LODWORD(v127) = (v127[a1[9] ^ 0x5DLL] ^ 0x38) << 16;
  *(_QWORD *)(v39 - 208) = 10;
  LODWORD(v127) = v127 & 0xFFFF00FF | (((v240[a1[10] ^ 0xD5] + (a1[10] ^ 0xDA) - 79) ^ 0xCF) << 8) | v136 ^ 0x84 | ((_DWORD)v67 << 24);
  *(_QWORD *)(v39 - 200) = 14;
  LODWORD(v47) = (v240[a1[14] ^ 0xE4] + (a1[14] ^ 0xEB) + 49);
  *(_QWORD *)(v39 - 224) = 3;
  *(_QWORD *)(v39 - 240) = 13;
  v137 = v239[a1[3] ^ 0xDCLL] ^ 0x5A;
  LODWORD(v47) = ((_DWORD)v47 << 8) | ((v238[a1[13] ^ 0x92] ^ 5) << 16) | v65 | (v134 << 24);
  LODWORD(v67) = v239[a1[7] ^ 0x41];
  v138 = ((v238[a1[5] ^ 0xA9] ^ 0xD6) << 16) | (((v240[a1[6] ^ 0x4FLL]
                                                                                    + (a1[6] ^ 0x40)
                                                                                    - 79) ^ 0xB7) << 8) | v67 ^ 0x9E | ((v237[a1[4] ^ 0xFCLL] ^ 0xC6) << 24);
  LODWORD(v135) = v129 ^ v261 ^ ((v137 | v125)
                               + 1679951672
                               - 2 * ((v137 | v125) & 0x6422073A ^ v137 & 2));
  v139 = v60 ^ v262 ^ (v138 - 2 * (v138 & 0x38D85957 ^ (v67 ^ 0x9E) & 5) - 1193780910);
  v140 = ((_DWORD)v47 - 2 * (v47 & 0x3CD3DC3C ^ v65 & 0x14) - 1126966232) ^ v131;
  LODWORD(v65) = (v140 - ((2 * v140) & 0x3CEB4FA6) - 1636456493) ^ v260;
  v141 = v130 ^ v259 ^ ((_DWORD)v127 + 100418394 - 2 * (v127 & 0x5FC435E ^ (v136 ^ 0x84) & 4));
  v142 = (char *)off_1E2538470[(int)v124 - 645] - 4;
  LODWORD(v127) = *(_DWORD *)&v142[4 * (HIBYTE(v141) ^ 0x3F)];
  HIDWORD(v42) = ~(_DWORD)v127;
  LODWORD(v42) = v127 ^ 0x9815F266;
  v143 = (char *)off_1E2538470[v124 ^ 0x2D5] - 12;
  LODWORD(v127) = (v42 >> 1) ^ ((BYTE2(v65) ^ 0x68)
                              - 1685891132
                              - 2 * (((v65 >> 16) ^ 0xB768) & 0xD5 ^ (v65 >> 16) & 0x11)) ^ *(_DWORD *)&v143[4 * (BYTE2(v65) ^ 0x34)];
  v144 = off_1E2538470[(int)v124 - 561];
  v145 = *((_DWORD *)v144 + (v141 ^ 0xC6u)) ^ ((BYTE2(v135) ^ 0xD5)
                                                              - 1685891132
                                                              - ((2 * (WORD1(v135) ^ 0x6CD5)) & 0x188)) ^ ((v141 ^ 0xAB) + 109595149 + ((2 * (v141 ^ 0xAB) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ *(_DWORD *)&v143[4 * (BYTE2(v135) ^ 0x89)];
  v146 = *(_DWORD *)&v143[4 * (BYTE2(v139) ^ 0x8C)] ^ ((BYTE2(v139) ^ 0xD0)
                                                     - 1685891132
                                                     - ((2 * (HIWORD(v139) ^ 0xC8D0)) & 0x188)) ^ *((_DWORD *)v144
                                                                                                  + (v65 ^ 0xB6u)) ^ ((v65 ^ 0xDB) + 109595149 + ((2 * (v65 ^ 0xDB) + 254) & 0x31A ^ 0xEDEEFBFF));
  LODWORD(v67) = *(_DWORD *)&v142[4 * (HIBYTE(v139) ^ 0xC8)];
  HIDWORD(v42) = ~(_DWORD)v67;
  LODWORD(v42) = v67 ^ 0x9815F266;
  v147 = v146 - 442743398 - ((2 * v146) & 0xCB388B34);
  v148 = (char *)off_1E2538470[v124 ^ 0x39E] - 8;
  v149 = (v145 - 442743398 - ((2 * v145) & 0xCB388B34)) ^ *(_DWORD *)&v148[4 * (BYTE1(v139) ^ 0x2F)];
  LODWORD(v125) = *(_DWORD *)&v142[4 * (BYTE3(v135) ^ 0x6C)];
  LODWORD(v124) = ((BYTE2(v141) ^ 0xAD) - 1685891132 - ((2 * (HIWORD(v141) ^ 0x3FAD)) & 0x188)) ^ *((_DWORD *)v144
                                                                                                  + (v135 ^ 0x1Cu)) ^ ((v135 ^ 0x71) + 109595149 + ((2 * (v135 ^ 0x71) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ *(_DWORD *)&v143[4 * (BYTE2(v141) ^ 0xF1)] ^ (v42 >> 1);
  HIDWORD(v42) = ~(_DWORD)v125;
  LODWORD(v42) = v125 ^ 0x9815F266;
  v150 = (v42 >> 1) ^ *(_DWORD *)&v148[4 * (BYTE1(v141) ^ 0x29)] ^ v147;
  v151 = *((_DWORD *)v144 + (v139 ^ 0x7Du)) ^ *(_DWORD *)&v148[4 * (BYTE1(v135) ^ 0xDE)] ^ ((v139 ^ 0x10) + 109595149 + ((2 * (v139 ^ 0x10) + 254) & 0x31A ^ 0xEDEEFBFF));
  LODWORD(v135) = *(_DWORD *)&v142[4 * ((v65 >> 24) ^ 0xB7)];
  v152 = v151 ^ ((_DWORD)v127 - 442743398 - ((2 * (_DWORD)v127) & 0xCB388B34));
  HIDWORD(v42) = ~(_DWORD)v135;
  LODWORD(v42) = v135 ^ 0x9815F266;
  v153 = v152 + 301281917 - ((2 * v152) & 0x23EA6536) + 30;
  LODWORD(v125) = (v149 ^ (v42 >> 1)) - ((2 * (v149 ^ (v42 >> 1))) & 0x3E0549E8);
  LODWORD(v135) = v150 - 2032006482 - ((2 * v150) & 0xDC4155C);
  v154 = *(_DWORD *)&v142[4 * ((v153 ^ ~v256) >> 24)];
  v155 = *(_DWORD *)&v148[4 * (BYTE1(v65) ^ 0x66)] ^ v257 ^ ((_DWORD)v124
                                                           - 442743397
                                                           + ~((2 * (_DWORD)v124) & 0xCB388B34));
  HIDWORD(v42) = ~v154;
  LODWORD(v42) = v154 ^ 0x9815F266;
  LODWORD(v47) = v42 >> 1;
  *(_DWORD *)(v39 - 120) = 109595148;
  LOWORD(v65) = v153 ^ v256;
  LODWORD(v124) = (v153 ^ v256) >> 16;
  LODWORD(v135) = v135 ^ v258;
  v156 = *(_DWORD *)&v142[4 * (BYTE3(v135) ^ 0x91)];
  HIDWORD(v42) = ~v156;
  LODWORD(v42) = v156 ^ 0x9815F266;
  v157 = v42 >> 1;
  v158 = *(_DWORD *)&v142[4 * (HIBYTE(v155) ^ 0xA3)];
  HIDWORD(v42) = ~v158;
  LODWORD(v42) = v158 ^ 0x9815F266;
  v159 = v157 ^ *(_DWORD *)&v143[4 * (BYTE2(v155) ^ 0xF0)] ^ ((BYTE2(v155) ^ 0xAC)
                                                            - 1685891132
                                                            - 2 * ((HIWORD(v155) ^ 0xA3AC) & 0xC7 ^ HIWORD(v155) & 3));
  LODWORD(v132) = (v42 >> 1) ^ *((_DWORD *)v144 + (v135 ^ 0x7Bu)) ^ ((v124 ^ 0x49)
                                                                                    - 1685891132
                                                                                    - 2
                                                                                    * ((v124 ^ 0xFF49) & 0xC6 ^ v124 & 2)) ^ ((v135 ^ 0x16) + 109595149 + ((2 * (v135 ^ 0x16) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ *(_DWORD *)&v143[4 * (v124 ^ 0x15)];
  v160 = ((_DWORD)v125 - 1627216652) ^ HIDWORD(v255);
  LODWORD(v125) = (v132 - 442743398 - ((2 * v132) & 0xCB388B34)) ^ *(_DWORD *)&v148[4 * (BYTE1(v160) ^ 0x70)];
  v161 = (v159 - 442743398 - ((2 * v159) & 0xCB388B34)) ^ *(_DWORD *)&v148[4 * (BYTE1(v65) ^ 0x2C)];
  LODWORD(v132) = v47 ^ *((_DWORD *)v144 + (v155 ^ 3u)) ^ ((v155 ^ 0x6E)
                                                                                        + 109595148
                                                                                        - ((2
                                                                                          * (v155 ^ 0x6E)
                                                                                          + 306021630) & 0x1211071A)) ^ *(_DWORD *)&v143[4 * (BYTE2(v160) ^ 0xC3)] ^ ((BYTE2(v160) ^ 0x9F) - 1685891132 - ((2 * (HIWORD(v160) ^ 0x259F)) & 0x188));
  LODWORD(v48) = ((BYTE2(v135) ^ 0x72) - 1685891132 - ((2 * (WORD1(v135) ^ 0x9172)) & 0x188)) ^ *(_DWORD *)&v143[4 * (BYTE2(v135) ^ 0x2E)];
  LODWORD(v127) = *(_DWORD *)&v142[4 * (HIBYTE(v160) ^ 0x25)];
  HIDWORD(v42) = ~(_DWORD)v127;
  LODWORD(v42) = v127 ^ 0x9815F266;
  v162 = *((_DWORD *)v144 + (v65 ^ 0x91u)) ^ *(_DWORD *)&v148[4 * (BYTE1(v155) ^ 0xBD)] ^ ((v65 ^ 0xFC) + 109595149 + ((2 * (v65 ^ 0xFC) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ (v42 >> 1) ^ ((_DWORD)v48 - 442743397 + ~((2 * (_DWORD)v48) & 0xCB388B34));
  LODWORD(v65) = ((v160 ^ 0xD6) - 1726037377) ^ HIDWORD(v253) ^ *((_DWORD *)v144
                                                                                 + (v160 ^ 0xBBu)) ^ (v161 + 1835632525 - ((2 * v161) & 0xDAD30F1A));
  LODWORD(v135) = *(_DWORD *)&v148[4 * (BYTE1(v135) ^ 0x57)] ^ HIDWORD(v254) ^ (v132
                                                                              - 442743398
                                                                              - ((2 * v132) & 0xCB388B34));
  v163 = (v162 - ((2 * v162) & 0xE68567DC) + 1933751278) ^ v78;
  LODWORD(v132) = *(_DWORD *)&v142[4 * (HIBYTE(v163) ^ 0xA6)];
  HIDWORD(v42) = ~(_DWORD)v132;
  LODWORD(v42) = v132 ^ 0x9815F266;
  LODWORD(v125) = ((_DWORD)v125 - 38460031 - ((2 * (_DWORD)v125) & 0xFB6A4B02)) ^ v255;
  v164 = ((v125 ^ 0xA1) + 109595149 + ((2 * (v125 ^ 0xA1) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ *((_DWORD *)v144 + (v125 ^ 0xCCu));
  LODWORD(v132) = *(_DWORD *)&v143[4 * (BYTE2(v65) ^ 0xDB)] ^ ((BYTE2(v65) ^ 0x87)
                                                             - 1685891132
                                                             - ((2 * ((v65 >> 16) ^ 0x3A87)) & 0x188)) ^ (v42 >> 1);
  v165 = (v164 - 442743398 - ((2 * v164) & 0xCB388B34)) ^ *(_DWORD *)&v148[4 * (BYTE1(v65) ^ 0xDE)];
  LODWORD(v48) = ((v65 ^ 0x9E)
                + 109595149
                + ((2 * (v65 ^ 0x9E) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ *((_DWORD *)v144
                                                                                      + (v65 ^ 0xF3u));
  LODWORD(v47) = (_DWORD)v48 - 442743398 - ((2 * (_DWORD)v48) & 0xCB388B34);
  LODWORD(v132) = (v132 - 442743398 - ((2 * v132) & 0xCB388B34)) ^ *(_DWORD *)&v148[4 * (BYTE1(v125) ^ 0x57)];
  LODWORD(v124) = BYTE2(v135) ^ 0x4C;
  LODWORD(v48) = (_DWORD)v124 - 1685891132 - ((2 * (WORD1(v135) ^ 0x984C)) & 0x188);
  LODWORD(v127) = *(_DWORD *)&v142[4 * (BYTE3(v135) ^ 0xDB)];
  HIDWORD(v42) = ~(_DWORD)v127;
  LODWORD(v42) = v127 ^ 0x9815F266;
  LODWORD(v65) = *(_DWORD *)&v142[4 * ((v65 >> 24) ^ 0x3A)];
  v166 = *(_DWORD *)&v143[4 * (BYTE2(v163) ^ 0x20)] ^ BYTE2(v163) ^ (v42 >> 1) ^ (v165
                                                                                              - 1685891132
                                                                                              - ((2 * v165) & 0x3706AF88));
  HIDWORD(v42) = ~(_DWORD)v65;
  LODWORD(v42) = v65 ^ 0x9815F266;
  LODWORD(v65) = *(_DWORD *)&v148[4 * (BYTE1(v135) ^ 0xAB)] ^ BYTE2(v125) ^ *(_DWORD *)&v143[4 * (BYTE2(v125) ^ 0xF6)] ^ 0x7E1F12F4 ^ (v42 >> 1);
  LODWORD(v65) = ((v163 ^ 0x8B) - 1726037377) ^ v253 ^ *((_DWORD *)v144
                                                                        + (v163 ^ 0xE6u)) ^ ((_DWORD)v65 + 1835632525 - ((2 * (_DWORD)v65) & 0xDAD30F1A));
  LODWORD(v132) = *((_DWORD *)v144 + (v135 ^ 0x4Du)) ^ ((v135 ^ 0x20) - 1726037377) ^ (v132 + 1835632525 - ((2 * v132) & 0xDAD30F1A));
  LODWORD(v135) = *(_DWORD *)&v142[4 * ((v125 >> 24) ^ 0x7C)];
  HIDWORD(v42) = ~(_DWORD)v135;
  LODWORD(v42) = v135 ^ 0x9815F266;
  LODWORD(v67) = ((v166 ^ 0x7C) - ((2 * (v166 ^ 0x7C)) & 0x2C5287E8) + 371803124) ^ v252;
  LODWORD(v135) = *(_DWORD *)&v148[4 * (BYTE1(v163) ^ 0xB)] ^ HIDWORD(v252) ^ v48 ^ *(_DWORD *)&v143[4 * (v124 ^ 0x5C)] ^ v47 ^ (v42 >> 1);
  v167 = (((v166 ^ 0x7C) - ((2 * (v166 ^ 0x7C)) & 0xE8) - 12) ^ v252);
  v168 = ((v167 ^ 0x2D) + *(_DWORD *)(v39 - 120) - ((2 * (v167 ^ 0x2D) + 306021630) & 0x1211071A)) ^ *((_DWORD *)v144 + (v167 ^ 0x40u));
  LODWORD(v47) = v168 - 442743398 - ((2 * v168) & 0xCB388B34);
  v169 = *(_DWORD *)&v142[4 * ((v65 >> 24) ^ 0x2D)];
  HIDWORD(v42) = ~v169;
  LODWORD(v42) = v169 ^ 0x9815F266;
  LODWORD(v125) = (v132 - ((2 * v132) & 0x31390FD8) + 412911596) ^ HIDWORD(v251);
  v170 = ((v132 - ((2 * v132) & 0xD8) - 20) ^ BYTE4(v251));
  LODWORD(v132) = (v170 ^ 0x84) + 109595149 + ((2 * (v170 ^ 0x84) + 254) & 0x31A ^ 0xEDEEFBFF);
  v171 = (v42 >> 1) ^ *((_DWORD *)v144 + (v170 ^ 0xE9u));
  v172 = *(_DWORD *)&v142[4 * ((v125 >> 24) ^ 0xDC)];
  HIDWORD(v42) = ~v172;
  LODWORD(v42) = v172 ^ 0x9815F266;
  v173 = v42 >> 1;
  v174 = v171 ^ v132;
  LODWORD(v132) = *(_DWORD *)&v142[4 * (BYTE3(v67) ^ 0x43)];
  HIDWORD(v42) = ~(_DWORD)v132;
  LODWORD(v42) = v132 ^ 0x9815F266;
  v175 = v42 >> 1;
  LODWORD(v124) = *(_DWORD *)&v142[4 * (BYTE3(v135) ^ 0xB4)];
  HIDWORD(v42) = ~(_DWORD)v124;
  LODWORD(v42) = v124 ^ 0x9815F266;
  v176 = v175 ^ *((_DWORD *)v144 + (v135 ^ 0x8Bu)) ^ ((v135 ^ 0xE6)
                                                                     + 109595149
                                                                     + ((2 * (v135 ^ 0xE6) + 254) & 0x31A ^ 0xEDEEFBFF));
  LODWORD(v132) = ((BYTE2(v135) ^ 0x59) - 1685891132 - ((2 * (WORD1(v135) ^ 0xB459)) & 0x188)) ^ *(_DWORD *)&v143[4 * (BYTE2(v135) ^ 5)] ^ *(_DWORD *)&v148[4 * (BYTE1(v67) ^ 0xF1)] ^ (v174 - 442743398 - ((2 * v174) & 0xCB388B34));
  v177 = v176 - 442743398 - ((2 * v176) & 0xCB388B34);
  LODWORD(v48) = BYTE2(v65) ^ 0x72;
  v178 = (_DWORD)v48 - 1685891132 - ((2 * ((v65 >> 16) ^ 0x2D72)) & 0x188);
  v179 = *(_DWORD *)&v148[4 * (BYTE1(v65) ^ 0x57)] ^ v250 ^ ((BYTE2(v125) ^ 0xC8)
                                                           - 1685891132
                                                           - 2
                                                           * (((v125 >> 16) ^ 0xDCC8) & 0xD4 ^ (v125 >> 16) & 0x10)) ^ *(_DWORD *)&v143[4 * (BYTE2(v125) ^ 0x94)] ^ v177;
  LODWORD(v65) = *(_DWORD *)&v148[4 * (BYTE1(v125) ^ 0x82)] ^ HIDWORD(v250) ^ ((v42 >> 1)
                                                                             - 442743398
                                                                             - ((2 * (v42 >> 1)) & 0xCB388B34)) ^ *((_DWORD *)v144 + (v65 ^ 0x7Bu)) ^ ((v65 ^ 0x16) + 109595149 + ((2 * (v65 ^ 0x16) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ *(_DWORD *)&v143[4 * (BYTE2(v67) ^ 0x51)] ^ ((BYTE2(v67) ^ 0xD) - 1685891132 - ((2 * (WORD1(v67) ^ 0xD)) & 0x188));
  LODWORD(v67) = (v132 + 502366661 - ((2 * v132) & 0x3BE3038A)) ^ v251;
  LODWORD(v135) = *(_DWORD *)&v148[4 * (BYTE1(v135) ^ 0x34)] ^ v250 ^ HIDWORD(v251) ^ *(_DWORD *)&v143[4 * (v48 ^ 0x5C)] ^ v178 ^ v47 ^ v173;
  v180 = *(_DWORD *)&v142[4 * (BYTE3(v135) ^ 7)];
  HIDWORD(v42) = ~v180;
  LODWORD(v42) = v180 ^ 0x9815F266;
  LODWORD(v125) = (v42 >> 1) - 442743398 - ((2 * (v42 >> 1)) & 0xCB388B34);
  v181 = ((BYTE2(v65) ^ 0x81)
        - 1685891132
        - 2 * (((v65 >> 16) ^ 0x1481) & 0xC6 ^ (v65 >> 16) & 2)) ^ *(_DWORD *)&v143[4 * (BYTE2(v65) ^ 0xDD)];
  LODWORD(v124) = ((v65 ^ 0x51)
                 + 109595149
                 + ((2 * (v65 ^ 0x51) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ *((_DWORD *)v144
                                                                                       + (v65 ^ 0x3Cu));
  LODWORD(v127) = *(_DWORD *)&v143[4 * (BYTE2(v179) ^ 0xDB)] ^ ((BYTE2(v179) ^ 0x87)
                                                              - 1685891132
                                                              - ((2 * (HIWORD(v179) ^ 0x7787)) & 0x188));
  v182 = *(_DWORD *)&v142[4 * ((v65 >> 24) ^ 0x14)];
  LODWORD(v132) = ((v135 ^ 0x443CFE91) >> 16) ^ *(_DWORD *)&v143[4
                                                                                              * (((v135 ^ 0x443CFE91) >> 16) ^ 0x5C)] ^ ((_DWORD)v124 - 1685891132 - ((2 * (_DWORD)v124) & 0x3706AF88));
  HIDWORD(v42) = ~v182;
  LODWORD(v42) = v182 ^ 0x9815F266;
  LODWORD(v124) = v42 >> 1;
  v183 = *(_DWORD *)&v142[4 * (BYTE3(v67) ^ 0x9A)];
  HIDWORD(v42) = ~v183;
  LODWORD(v42) = v183 ^ 0x9815F266;
  v184 = *((_DWORD *)v144 + (v135 ^ 0xFCu)) ^ *(_DWORD *)&v148[4 * (BYTE1(v179) ^ 0xDE)] ^ (v181 - 442743398 - ((2 * v181) & 0xCB388B34)) ^ ((v135 ^ 0x91) + 109595149 + ((2 * (v135 ^ 0x91) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ (v42 >> 1);
  v185 = *(_DWORD *)&v142[4 * (HIBYTE(v179) ^ 0x77)];
  HIDWORD(v42) = ~v185;
  LODWORD(v42) = v185 ^ 0x9815F266;
  LODWORD(v132) = (v42 >> 1) ^ *(_DWORD *)&v148[4 * (BYTE1(v67) ^ 0x2D)] ^ (v132 - 442743398 - ((2 * v132) & 0xCB388B34));
  LODWORD(v65) = *(_DWORD *)&v148[4 * (BYTE1(v65) ^ 0x34)] ^ v248 ^ v125 ^ ((v179 ^ 0x9E)
                                                                                        + 109595149
                                                                                        + ((2
                                                                                          * (v179 ^ 0x9E)
                                                                                          + 254) & 0x31A ^ 0xEDEEFBFF)) ^ *(_DWORD *)&v143[4 * (BYTE2(v67) ^ 0xB5)] ^ ((BYTE2(v67) ^ 0xE9) - 1685891132 - 2 * ((WORD1(v67) ^ 0x9AE9) & 0xC6 ^ WORD1(v67) & 2)) ^ *((_DWORD *)v144 + (v179 ^ 0xF3u));
  v186 = *(_DWORD *)&v148[4 * (BYTE1(v135) ^ 0x1C)] ^ HIDWORD(v247) ^ v124 ^ ((v67 ^ 0xA8)
                                                                                          + 109595149
                                                                                          + ((2
                                                                                            * (v67 ^ 0xA8)
                                                                                            + 254) & 0x31A ^ 0xEDEEFBFF)) ^ *((_DWORD *)v144 + (v67 ^ 0xC5u)) ^ ((_DWORD)v127 - 442743398 - ((2 * (_DWORD)v127) & 0xCB388B34));
  LODWORD(v135) = *(_DWORD *)&v142[4 * (HIBYTE(v186) ^ 0x6D)];
  HIDWORD(v42) = ~(_DWORD)v135;
  LODWORD(v42) = v135 ^ 0x9815F266;
  LODWORD(v47) = v42 >> 1;
  LODWORD(v135) = (v184 - 810247974 - ((2 * v184) & 0x9F6931B4)) ^ v249;
  LODWORD(v124) = *(_DWORD *)&v142[4 * (BYTE3(v135) ^ 0xFD)];
  v187 = *(_DWORD *)&v143[4 * (BYTE2(v186) ^ 0x52)] ^ (~(_DWORD)v124 << 31) ^ (v124 >> 1) ^ ((BYTE2(v186) ^ 0xE) - 1685891132 - ((2 * (HIWORD(v186) ^ 0x2E0E)) & 0x188)) ^ 0x4C0AF933;
  LODWORD(v48) = ((v186 ^ 0x4A)
                + 109595149
                + ((2 * (v186 ^ 0x4A) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ *((_DWORD *)v144
                                                                                       + (v186 ^ 0x27u));
  LODWORD(v132) = (v132 - ((2 * v132) & 0xC0238D2) - 2046747543) ^ HIDWORD(v248);
  LODWORD(v124) = *(_DWORD *)&v142[4 * (BYTE3(v132) ^ 0x79)];
  HIDWORD(v42) = ~(_DWORD)v124;
  LODWORD(v42) = v124 ^ 0x9815F266;
  LODWORD(v48) = (v42 >> 1) ^ *(_DWORD *)&v148[4 * (BYTE1(v135) ^ 0xA4)] ^ ((_DWORD)v48
                                                                          - 442743398
                                                                          - ((2 * (_DWORD)v48) & 0xCB388B34));
  LODWORD(v125) = BYTE2(v65) ^ *(_DWORD *)&v143[4 * (BYTE2(v65) ^ 0x24)] ^ ((_DWORD)v48
                                                                          - 1685891132
                                                                          - ((2 * (_DWORD)v48) & 0x3706AF88));
  LODWORD(v48) = *(_DWORD *)&v143[4 * (BYTE2(v132) ^ 0x55)] ^ v47 ^ *((_DWORD *)v144
                                                                                  + (v135 ^ 0x4Du)) ^ ((v135 ^ 0x20) + 109595149 + ((2 * (v135 ^ 0x20) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ ((BYTE2(v132) ^ 9) - 1685891132 - ((v132 >> 15) & 0x188));
  LODWORD(v127) = (_DWORD)v48 - 442743398 - ((2 * (_DWORD)v48) & 0xCB388B34);
  v188 = ((v65 ^ 0x34) + 109595149 + ((2 * (v65 ^ 0x34) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ *(_DWORD *)&v148[4 * (BYTE1(v132) ^ 0x93)] ^ *((_DWORD *)v144 + (v65 ^ 0x59u)) ^ (v187 - 442743398 - ((2 * v187) & 0xCB388B34));
  LODWORD(v132) = v132;
  v189 = ((v132 ^ 0xEC) + 2126186522 + ((2 * (v132 ^ 0xEC) + 254) & 0x334 ^ 0xFDC77FFF)) ^ *(_DWORD *)&v148[4 * (BYTE1(v186) ^ 0x65)];
  v190 = (v189 + 1835632525 - ((2 * v189) & 0xDAD30F1A)) ^ *((_DWORD *)v144 + (v132 ^ 0x81u));
  LODWORD(v132) = *(_DWORD *)&v143[4 * (BYTE2(v135) ^ 0x40)] ^ ((BYTE2(v135) ^ 0x1C)
                                                              - 1685891132
                                                              - ((2 * (WORD1(v135) ^ 0xFD1C)) & 0x188));
  LODWORD(v48) = v132 ^ 0x48ECAAE7 ^ (v190 + 200376884 - ((2 * v190) & 0x17E30468));
  v190 ^= 0x6500C283u;
  LODWORD(v48) = (v190 + (_DWORD)v48 + 1) ^ ((v132 ^ 0x261DEA50) + 1);
  v191 = (v132 ^ 0xD213979B ^ ((_DWORD)v48 + 200376884 - ((2 * (_DWORD)v48) & 0x17E30468))) + v190;
  LODWORD(v132) = *(_DWORD *)&v142[4 * ((v65 >> 24) ^ 0x6E)];
  HIDWORD(v42) = ~(_DWORD)v132;
  LODWORD(v42) = v132 ^ 0x9815F266;
  v192 = (v191 ^ (v42 >> 1)) - ((2 * (v191 ^ (v42 >> 1))) & 0x698A3E1E);
  LODWORD(v65) = *(_DWORD *)&v148[4 * (BYTE1(v65) ^ 0x38)] ^ HIDWORD(v246) ^ v127;
  LODWORD(v135) = (v188 - 1793008171 - ((2 * v188) & 0x2A41BBAA)) ^ v247;
  LODWORD(v125) = ((v125 ^ 0x78) + 818614184 - ((2 * (v125 ^ 0x78)) & 0x61961F50)) ^ HIDWORD(v245);
  v193 = ((BYTE2(v135) ^ 0xE9) - 1685891132 - ((2 * (WORD1(v135) ^ 0xB8E9)) & 0x188)) ^ *(_DWORD *)&v143[4 * (BYTE2(v135) ^ 0xB5)];
  LODWORD(v47) = v193 - 442743398 - ((2 * v193) & 0xCB388B34);
  LODWORD(v127) = *(_DWORD *)&v142[4 * ((v125 >> 24) ^ 0x9D)];
  HIDWORD(v42) = ~(_DWORD)v127;
  LODWORD(v42) = v127 ^ 0x9815F266;
  v194 = v42 >> 1;
  LODWORD(v67) = *(_DWORD *)&v142[4 * ((v65 >> 24) ^ 0x61)];
  HIDWORD(v42) = ~(_DWORD)v67;
  LODWORD(v42) = v67 ^ 0x9815F266;
  v195 = *((_DWORD *)v144 + (v135 ^ 0xC5u)) ^ *(_DWORD *)&v143[4 * (BYTE2(v125) ^ 0x28)] ^ (v42 >> 1) ^ ((v135 ^ 0xA8) + 109595149 + ((2 * (v135 ^ 0xA8) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ ((BYTE2(v125) ^ 0x74) - 1685891132 - ((2 * ((v125 >> 16) ^ 0x9D74)) & 0x188));
  LODWORD(v67) = (v192 + 885333775) ^ v104;
  v196 = v194 ^ ((BYTE2(v67) ^ 0x4D) - 1685891132 - ((2 * (WORD1(v67) ^ 0xD54D)) & 0x188)) ^ *(_DWORD *)&v143[4 * (BYTE2(v67) ^ 0x11)];
  LODWORD(v124) = v196 - 442743398 - ((2 * v196) & 0xCB388B34);
  v197 = *(_DWORD *)&v142[4 * (BYTE3(v135) ^ 0xB8)];
  v198 = v195 - 442743398 - ((2 * v195) & 0xCB388B34);
  HIDWORD(v42) = ~v197;
  LODWORD(v42) = v197 ^ 0x9815F266;
  v199 = *((_DWORD *)v144 + (v67 ^ 0x10u)) ^ *(_DWORD *)&v143[4 * (BYTE2(v65) ^ 0x54)] ^ ((BYTE2(v65) ^ 8) - 1685891132 - ((v65 >> 15) & 0x188)) ^ (v42 >> 1) ^ ((v67 ^ 0x7D) + 109595149 + ((2 * (v67 ^ 0x7D) + 254) & 0x31A ^ 0xEDEEFBFF));
  v200 = *(_DWORD *)&v148[4 * (BYTE1(v67) ^ 0x31)] ^ HIDWORD(v244) ^ v198;
  v201 = (v199 - 442743398 - ((2 * v199) & 0xCB388B34)) ^ *(_DWORD *)&v148[4 * (BYTE1(v125) ^ 0xBD)];
  LODWORD(v132) = *(_DWORD *)&v142[4 * (BYTE3(v67) ^ 0xD5)];
  HIDWORD(v42) = ~(_DWORD)v132;
  LODWORD(v42) = v132 ^ 0x9815F266;
  LODWORD(v132) = *((_DWORD *)v144 + (v125 ^ 0xB4u)) ^ *(_DWORD *)&v148[4 * (BYTE1(v65) ^ 0x8F)] ^ ((v125 ^ 0xD9) + 109595149 + ((2 * (v125 ^ 0xD9) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ v47 ^ (v42 >> 1);
  LODWORD(v47) = *(_DWORD *)&v148[4 * (BYTE1(v135) ^ 0x2D)] ^ v244 ^ *((_DWORD *)v144 + (v65 ^ 0xE8u)) ^ ((v65 ^ 0x85) + 109595149 + ((2 * (v65 ^ 0x85) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ v124;
  LODWORD(v125) = (v132 - ((2 * v132) & 0x47869386) + 600000963) ^ HIDWORD(v243);
  LODWORD(v132) = ((BYTE2(v47) ^ 0x66) - 1685891132 - ((2 * ((v47 >> 16) ^ 0xAE66)) & 0x188)) ^ *(_DWORD *)&v143[4 * (BYTE2(v47) ^ 0x3A)];
  LODWORD(v48) = *(_DWORD *)&v142[4 * ((v125 >> 24) ^ 0x1C)];
  HIDWORD(v42) = ~(_DWORD)v48;
  LODWORD(v42) = v48 ^ 0x9815F266;
  LODWORD(v65) = (v201 - 1537032820 - ((2 * v201) & 0x48C57B18)) ^ v245;
  LODWORD(v135) = ((v42 >> 1) - 1685891132 - ((2 * (v42 >> 1)) & 0x3706AF88)) ^ *(_DWORD *)&v143[4 * (BYTE2(v65) ^ 0x40)];
  LODWORD(v124) = *(_DWORD *)&v142[4 * ((v65 >> 24) ^ 0xEF)];
  HIDWORD(v42) = ~(_DWORD)v124;
  LODWORD(v42) = v124 ^ 0x9815F266;
  v202 = (v42 >> 1) ^ *((_DWORD *)v144 + (v125 ^ 0xACu)) ^ ((v125 ^ 0xC1)
                                                                           + 109595149
                                                                           + ((2 * (v125 ^ 0xC1) + 254) & 0x31A ^ 0xEDEEFBFF));
  LODWORD(v48) = ((v200 ^ 0x4A)
                + 109595149
                + ((2 * (v200 ^ 0x4A) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ *((_DWORD *)v144
                                                                                       + (v200 ^ 0x27u));
  v203 = *(_DWORD *)&v142[4 * ((v47 >> 24) ^ 0xAE)];
  HIDWORD(v42) = ~v203;
  LODWORD(v42) = v203 ^ 0x9815F266;
  LODWORD(v48) = (v42 >> 1) ^ *(_DWORD *)&v143[4 * (BYTE2(v125) ^ 0x89)] ^ ((_DWORD)v48
                                                                          - 1685891132
                                                                          - ((2 * (_DWORD)v48) & 0x3706AF88));
  v204 = *(_DWORD *)&v142[4 * (HIBYTE(v200) ^ 0xDC)];
  HIDWORD(v42) = ~v204;
  LODWORD(v42) = v204 ^ 0x9815F266;
  v205 = v135 - 442743398 - ((2 * v135) & 0xCB388B34);
  LODWORD(v135) = ((BYTE2(v200) ^ 0xE) - 1685891132 - ((2 * (HIWORD(v200) ^ 0xDC0E)) & 0x188)) ^ v243 ^ *(_DWORD *)&v143[4 * (BYTE2(v200) ^ 0x52)] ^ *(_DWORD *)&v148[4 * (BYTE1(v47) ^ 0x7C)] ^ (v202 - 442743398 - ((2 * v202) & 0xCB388B34));
  v206 = *(_DWORD *)(v39 - 120);
  LODWORD(v67) = *(_DWORD *)&v148[4 * (BYTE1(v125) ^ 0x82)] ^ HIDWORD(v242) ^ *((_DWORD *)v144
                                                                              + (v65 ^ 0x4Du)) ^ (v42 >> 1) ^ ((v65 ^ 0x20) + 109595149 + ((2 * (v65 ^ 0x20) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ (v132 - 442743398 - ((2 * v132) & 0xCB388B34));
  v207 = v205 ^ HIDWORD(v241) ^ *(_DWORD *)&v148[4 * (BYTE1(v200) ^ 0x65)] ^ *((_DWORD *)v144
                                                                             + (v47 ^ 0xDEu)) ^ ((v47 ^ 0xB3) + v206 - ((2 * (v47 ^ 0xB3) + 306021630) & 0x1211071A));
  LODWORD(v47) = *(_DWORD *)&v148[4 * (BYTE1(v65) ^ 0xA4)] ^ v242 ^ ((_DWORD)v48
                                                                   - 442743398
                                                                   - ((2 * (_DWORD)v48) & 0xCB388B34));
  LODWORD(v132) = (v47 ^ BYTE2(v125));
  v208 = *(_DWORD *)&v142[4 * (HIBYTE(v207) ^ 0x6C)];
  HIDWORD(v42) = ~v208;
  LODWORD(v42) = v208 ^ 0x9815F266;
  LODWORD(v124) = v42 >> 1;
  v209 = *(_DWORD *)&v142[4 * (BYTE3(v135) ^ 0xF7)];
  HIDWORD(v42) = ~v209;
  LODWORD(v42) = v209 ^ 0x9815F266;
  v210 = v42 >> 1;
  LODWORD(v125) = ((BYTE2(v207) ^ 0xC8) - 1685891132 - ((2 * (HIWORD(v207) ^ 0x6CC8)) & 0x188)) ^ *(_DWORD *)&v143[4 * (BYTE2(v207) ^ 0x94)];
  v211 = *(_DWORD *)&v142[4 * ((v47 >> 24) ^ 0xE7)];
  HIDWORD(v42) = ~v211;
  LODWORD(v42) = v211 ^ 0x9815F266;
  v212 = v42 >> 1;
  LODWORD(v132) = v124 ^ *((_DWORD *)v144 + (v132 ^ 0x9E)) ^ *(_DWORD *)&v143[4 * (BYTE2(v135) ^ 0xB5)] ^ ((BYTE2(v135) ^ 0xE9) - 1685891132 - 2 * ((WORD1(v135) ^ 0xF7E9) & 0xD4 ^ WORD1(v135) & 0x10)) ^ ((v132 ^ 0xF3) + v206 - ((2 * (v132 ^ 0xF3) + 306021630) & 0x1211071A));
  LODWORD(v132) = (v132 - 442743398 - ((2 * v132) & 0xCB388B34)) ^ *(_DWORD *)&v148[4 * (BYTE1(v67) ^ 0xEC)];
  LODWORD(v48) = v210 ^ *(_DWORD *)&v143[4 * (BYTE2(v67) ^ 0xA7)] ^ *((_DWORD *)v144
                                                                    + ((v207 ^ BYTE2(v65)) ^ 0x32u)) ^ (((v207 ^ BYTE2(v65)) ^ 0x5F) + 109595149 + ((2 * ((v207 ^ BYTE2(v65)) ^ 0x5F) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ ((BYTE2(v67) ^ 0xFB) - 1685891132 - ((2 * (WORD1(v67) ^ 0x57FB)) & 0x188));
  LODWORD(v65) = *(_DWORD *)&v142[4 * (BYTE3(v67) ^ 0x57)];
  HIDWORD(v42) = ~(_DWORD)v65;
  LODWORD(v42) = v65 ^ 0x9815F266;
  LODWORD(v48) = ((_DWORD)v48 - 442743398 - ((2 * (_DWORD)v48) & 0xCB388B34)) ^ *(_DWORD *)&v148[4 * (BYTE1(v47) ^ 0x6D)];
  v213 = ((BYTE2(v47) ^ 0x31) - 1685891132 - ((v47 >> 15) & 0x188)) ^ ((v135 ^ 0xA8)
                                                                                   + v206
                                                                                   - ((2
                                                                                     * (v135 ^ 0xA8)
                                                                                     + 306021630) & 0x1211071A)) ^ *((_DWORD *)v144 + (v135 ^ 0xC5u));
  LODWORD(v135) = *(_DWORD *)&v148[4 * (BYTE1(v135) ^ 0x2D)];
  v214 = v213 ^ *(_DWORD *)&v143[4 * (BYTE2(v47) ^ 0x6D)] ^ (v42 >> 1);
  LODWORD(v65) = HIDWORD(v234) ^ *(_DWORD *)&v148[4 * (BYTE1(v207) ^ 0x61)] ^ (v214
                                                                             - 442743398
                                                                             - ((2 * v214) & 0xCB388B34));
  v215 = v65 ^ 0xADE748E2;
  v216 = ((_DWORD)v48 - 1214800947 - ((2 * (_DWORD)v48) & 0x6F2F379A)) ^ v120 ^ 0xB7979BCD;
  LODWORD(v148) = v132 + 51880975 - ((2 * v132) & 0x62F481E);
  LODWORD(v144) = v135 ^ HIDWORD(a14) ^ v212 ^ *((_DWORD *)v144 + (v67 ^ 0x42u)) ^ ((v67 ^ 0x2F) + 109595149 + ((2 * (v67 ^ 0x2F) + 254) & 0x31A ^ 0xEDEEFBFF)) ^ ((_DWORD)v125 - 442743398 - ((2 * (_DWORD)v125) & 0xCB388B34));
  LODWORD(v143) = (v65 >> 24) ^ 0x89;
  v217 = *(_DWORD *)(v39 - 128);
  v218 = (char *)off_1E2538470[v217 - 475] - 4;
  v219 = (char *)off_1E2538470[(int)v234] - 8;
  LODWORD(v132) = (*(_DWORD *)&v219[4 * (BYTE2(v216) ^ 0x9E)] - 2114823540) ^ (*(_DWORD *)&v218[4
                                                                                              * (v144 ^ 0xC9)]
                                                                             - 1845747560);
  LODWORD(v135) = *(_DWORD *)&v218[4 * (v215 ^ 0x2A)];
  v220 = (char *)off_1E2538470[v217 - 416] - 8;
  LODWORD(v124) = v135 - 2 * ((v135 + 301736088) & 0x76DDA85D ^ v135 & 4);
  LODWORD(v127) = *(_DWORD *)&v218[4 * (v216 ^ 0xA2)];
  v221 = v148 ^ v241;
  LODWORD(v148) = *(_DWORD *)&v218[4 * ((v148 ^ v241) ^ 0xB9)];
  LODWORD(v135) = *(_DWORD *)&v220[4 * (HIBYTE(v216) ^ 0xE7)];
  LODWORD(v218) = *(_DWORD *)&v220[4 * ((v144 >> 24) ^ 0xB8)];
  LODWORD(v143) = (*(_DWORD *)&v219[4 * (BYTE2(v144) ^ 0x38)] - 2114823540) ^ (*(_DWORD *)&v220[4 * v143]
                                                                             - 940687800) ^ ((_DWORD)v127 - 1845747560);
  v222 = (char *)off_1E2538470[v217 - 528] - 4;
  LODWORD(v132) = (v132 - 153245607 - ((2 * v132) & 0xEDBB50B2)) ^ *(_DWORD *)&v222[4 * (BYTE1(v215) ^ 0x29)] ^ (*(_DWORD *)&v220[4 * (HIBYTE(v221) ^ 0x65)] - 940687800);
  LODWORD(v220) = *(_DWORD *)&v222[4 * (BYTE1(v216) ^ 0xA0)];
  v223 = *(unsigned int *)&v222[4 * (BYTE1(v144) ^ 0xE9)];
  v224 = *(unsigned int *)&v219[4 * (BYTE2(v215) ^ 0x6B)];
  LODWORD(v143) = *(_DWORD *)&v222[4 * (BYTE1(v221) ^ 0x74)] ^ v236 ^ ((_DWORD)v143
                                                                     - 153245607
                                                                     - ((2 * (_DWORD)v143) & 0xEDBB50B2));
  v225 = HIDWORD(a4) ^ v241 ^ (v132 + 51880975 - ((2 * v132) & 0x62F481E));
  v226 = v220 ^ HIDWORD(a4) ^ ((_DWORD)v124 - 1998993167) ^ ((_DWORD)v218 - 940687800) ^ (*(_DWORD *)&v219[4 * (BYTE2(v221) ^ 0x1D)] - 2114823540);
  v227 = (char *)off_1E2538470[v217 - 484] - 8;
  a1[6] = v227[BYTE1(v143) ^ 0x99] ^ 0xB2;
  v228 = (char *)off_1E2538470[v217 - 388] - 8;
  a1[*(_QWORD *)(v39 - 240)] = (v228[BYTE2(v225) ^ 0xADLL] + 66) ^ 0xC5;
  v229 = (char *)off_1E2538470[v217 - 486] - 4;
  a1[*(_QWORD *)(v39 - 256)] = v229[v143 ^ 0xFCLL] ^ 0x10;
  a1[*(_QWORD *)(v39 - 216)] = (v228[BYTE2(v226) ^ 0x8CLL] + 66) ^ 0x47;
  v230 = off_1E2538470[v217 - 463];
  a1[*(_QWORD *)(v39 - 248)] = (*((_BYTE *)v230 + ((v143 >> 24) ^ 0xDELL)) - 18) ^ 0x1B;
  LODWORD(v132) = v228[BYTE2(v143) ^ 0x15];
  a1[*(_QWORD *)(v39 - 232)] = ((v132 + ((v132 + 66) ^ 0xDA) + 67) ^ 0xFE) + v132 + 66;
  v231 = HIDWORD(a6) ^ v223;
  LODWORD(v148) = v231 ^ (v224 - 2114823540) ^ ((_DWORD)v148 - 1845747560) ^ (v135
                                                                            - ((2 * v135 - 1881375600) & 0xEDBB50B2)
                                                                            - 1093933407);
  a1[*(_QWORD *)(v39 - 224)] = v229[v148 ^ 5] ^ 0xE2;
  a1[*(_QWORD *)(v39 - 160)] = (*((_BYTE *)v230 + (HIBYTE(v225) ^ 0x4ELL)) - 18) ^ 0xE6;
  a1[*(_QWORD *)(v39 - 168)] = (*((_BYTE *)v230 + (BYTE3(v226) ^ 0x9CLL)) - 18) ^ 0xB8;
  v232 = *(_QWORD *)(v39 - 192);
  a1[v232] = (*((_BYTE *)v230 + ((v148 >> 24) ^ 0x67)) - 18) ^ 0x91;
  a1[*(_QWORD *)(v39 - 176)] = v229[v226 ^ 0xF2] ^ 0xE8;
  a1[*(_QWORD *)(v39 - 208)] = v227[BYTE1(v226) ^ 0x1ELL] ^ 0x11;
  a1[*(_QWORD *)(v39 - 184)] = v227[BYTE1(v148) ^ 0x33] ^ 8;
  a1[*(_QWORD *)(v39 - 200)] = v227[BYTE1(v225) ^ 0xBCLL] ^ 0xC6;
  a1[*(_QWORD *)(v39 - 152)] = v229[v225 ^ 0x9FLL] ^ 0x10;
  a1[*(_QWORD *)(v39 - 136)] = (v228[BYTE2(v148) ^ 0xDLL] + 66) ^ 0x8E;
  return ((uint64_t (*)(uint64_t, uint64_t, char *, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t (**)(unint64_t **), uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(a36 + 8 * (int)((55 * ((((_DWORD)v232 + 2099178664 - 2 * (((_DWORD)v232 + 16) & *(_DWORD *)(v39 - 140))) ^ 0x7D1EEC98u) < a34)) ^ (v217 + 3025))) - 4))(v226, v231, v229, ((_DWORD)v132 + 66) ^ 0xDAu, v223, v224, v217, off_1E2538470, a2, a3, a4, a1, a6, v234, v235, v236, v237, v238, v239,
           v240,
           a14,
           v241,
           v242,
           v243,
           v244,
           v245,
           v246,
           v247,
           v248,
           v249,
           v250,
           v251,
           v252,
           v253,
           v254,
           v255);
}

void sub_18CA542F8()
{
  JUMPOUT(0x18CA51EE0);
}

uint64_t sub_18CA5432C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41,int a42,int a43)
{
  uint64_t v43;
  int v44;

  v44 = a11 - ((2014 * (((a43 - 1281) | 0x82) ^ 0x288) + 1057435046) & (2 * a41)) + 1147359472;
  return ((uint64_t (*)(void))(*(_QWORD *)(v43
                                        + 8
                                        * ((44
                                          * (((2 * v44) & 0xFEE76BFE ^ 0x3E072962) + (v44 ^ 0xE0F02B4E) - 571541181 == 1566748482)) ^ a43))
                            - 8))();
}

uint64_t sub_18CA54400(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (int)(((((a3 + 441840366) & 0xE5A9FFDF) - 523)
                                               * ((v4 + v3 - 2138289663) > 7)) ^ a3))
                            - 4))();
}

uint64_t sub_18CA54484(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(*(_QWORD *)(v6
                                                                                        + 8
                                                                                        * ((3007
                                                                                          * (((a3 - 4044) & a6) == 2138289664)) ^ (a3 - 3379)))
                                                                            - 12))(a1, a2, (a3 - 3379), (a3 - 3378), a2);
}

uint64_t sub_18CA544C0@<X0>(int a1@<W0>, int a2@<W2>, uint64_t a3@<X3>, unint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL4 v21;
  int v24;

  v10 = (v8 + v7 + a1);
  v11 = v10 + 34 * (a2 ^ 0x2E2u) + a4 - 3637;
  v12 = (v8 + v7) & 0xF;
  v13 = v12 - v10;
  v14 = v4 + v13;
  v15 = v12 + v4 + 1;
  v16 = v6 + (a3 ^ 0x288) + v13;
  v17 = v12 + v6 + 3;
  v18 = v13 + v5 + 4;
  v19 = v12 + v5 + 5;
  v21 = v15 > a4 && v14 < v11;
  if (v17 > a4 && v16 < v11)
    v21 = 1;
  v24 = v19 > a4 && v18 < v11 || v21;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((63 * (v24 ^ 1)) ^ a2)) - 12))();
}

uint64_t sub_18CA54564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8 + 8 * ((117 * (v7 > 0xF)) ^ a7))
                                                           - (a7 - 1873)
                                                           + 1757))(a1, a2, 0);
}

uint64_t sub_18CA545A8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  int8x16_t v45;
  int8x16_t v46;
  int8x16_t v47;
  int8x16x4_t v49;
  int8x16x4_t v50;

  v49.val[1].i64[0] = ((_BYTE)a2 + 14) & 0xF;
  v49.val[1].i64[1] = ((_BYTE)a2 + 13) & 0xF;
  v49.val[2].i64[0] = ((_BYTE)a2 + 12) & 0xF;
  v49.val[2].i64[1] = ((_BYTE)a2 + 11) & 0xF;
  v49.val[3].i64[0] = ((_BYTE)a2 + 10) & 0xF;
  v49.val[3].i64[1] = ((_BYTE)a2 + 9) & 0xF;
  v44 = v43 + v42 + a1;
  v45.i64[0] = 0x7777777777777777;
  v45.i64[1] = 0x7777777777777777;
  v49.val[0].i64[0] = v44 & 0xF;
  v49.val[0].i64[1] = ((_BYTE)a2 - 1) & 0xF;
  v46.i64[0] = vqtbl4q_s8(v49, (int8x16_t)xmmword_18CF0E650).u64[0];
  v50.val[0].i64[1] = ((_BYTE)a2 + 7) & 0xF;
  v50.val[1].i64[1] = ((_BYTE)a2 + 5) & 0xF;
  v50.val[2].i64[1] = (a2 + 3) & 0xF;
  v50.val[3].i64[1] = ((_BYTE)a2 + 1) & 0xF;
  v50.val[0].i64[0] = ((_BYTE)a2 + 8) & 0xF;
  v50.val[1].i64[0] = ((_BYTE)a2 + 6) & 0xF;
  v50.val[2].i64[0] = (a2 + 4) & 0xF;
  v50.val[3].i64[0] = ((_BYTE)a2 + 2) & 0xF;
  v46.i64[1] = vqtbl4q_s8(v50, (int8x16_t)xmmword_18CF0E650).u64[0];
  v47 = vrev64q_s8(vmulq_s8(v46, v45));
  *(int8x16_t *)(a4 - 15 + v44) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v38 + v49.val[0].i64[0] - 15), *(int8x16_t *)(a4 - 15 + v44)), *(int8x16_t *)(v49.val[0].i64[0] + v40 - 13)), *(int8x16_t *)(v39 + v49.val[0].i64[0] + ((a3 + 5) ^ 0x6EELL) - 15)), vextq_s8(v47, v47, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a38 + 8 * ((310 * ((v41 & 0xFFFFFFF0) == 16)) ^ a3)) - 12))();
}

void sub_18CA54708()
{
  JUMPOUT(0x18CA54688);
}

uint64_t sub_18CA54714(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v4 | (4 * (v3 == a3)) | (16 * (v3 == a3))))
                            - ((v4 + 1304) ^ (325 * (v4 ^ 0x6E8u)) ^ 0xE84)))();
}

uint64_t sub_18CA54758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  char v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(v8
                                                                                      + 8
                                                                                      * ((((((v7 & 8) == 0) ^ (a7 - 1)) & 1)
                                                                                        * (a7 ^ 0xC41)) ^ a7)))(a1, a2, a3, a7 ^ 0xE88u, (a2 - a3), (a7 - 2946) | 0x672u);
}

uint64_t sub_18CA5479C@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W5>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  int v47;
  char v48;
  uint64_t v49;
  int8x16x4_t v51;

  *(_DWORD *)(v46 - 120) = v45;
  *(_DWORD *)(v46 - 128) = v41;
  *(_DWORD *)(v46 - 136) = v41 & 0xFFFFFFF8;
  v47 = -a2;
  v48 = v44 + v43 + v42;
  v49 = (v44 + v43 + a1 + v47);
  v51.val[0].i64[0] = ((_BYTE)v44 + (_BYTE)v43 + (_BYTE)a1 + (_BYTE)v47) & 0xF;
  v51.val[0].i64[1] = (v48 - 116 + (_BYTE)v47) & 0xF;
  v51.val[1].i64[0] = (v48 - 117 + (_BYTE)v47) & 0xF;
  v51.val[1].i64[1] = (v48 - 118 + (_BYTE)v47) & 0xF;
  v51.val[2].i64[0] = (v48 + (_BYTE)v47 + (a3 ^ 0x7B)) & 0xF;
  v51.val[2].i64[1] = (v48 - 120 + (_BYTE)v47) & 0xF;
  v51.val[3].i64[0] = (v48 - 121 + (_BYTE)v47) & 0xF;
  v51.val[3].i64[1] = (v48 - 122 + (_BYTE)v47) & 0xF;
  *(int8x8_t *)(a4 - 7 + v49) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v38 + (v49 & 0xF) - 7), *(int8x8_t *)(a4 - 7 + v49)), veor_s8(*(int8x8_t *)((v49 & 0xF) + v40 - 5), *(int8x8_t *)((v49 & 0xF) + v39 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v51, (int8x16_t)xmmword_18CF0E660), (int8x8_t)0x7777777777777777)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a38 + 8 * ((2985 * (8 - (v41 & 0xFFFFFFF8) == v47)) ^ a3)) - 8))((__n128)xmmword_18CF0E660);
}

void sub_18CA548C8()
{
  JUMPOUT(0x18CA547F8);
}

uint64_t sub_18CA548D0(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (((a1 ^ 0x6FE) * (*(_DWORD *)(v2 - 128) == *(_DWORD *)(v2 - 136))) ^ a1))
                            - 12))();
}

uint64_t sub_18CA54904@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (a2 - 1566749120);
  *(_BYTE *)(a3 + v8) ^= *(_BYTE *)(v4 + (v8 & 0xF)) ^ *(_BYTE *)((v8 & 0xF) + v6 + 2) ^ *(_BYTE *)((v8 & 0xF) + v5 + 4) ^ (119 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((42 * (a2 - 1 == v3)) ^ (a1 + 2939))))();
}

void sub_18CA5496C()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1843819421)
    v1 = 1556779682;
  else
    v1 = 1556737658;
  *(_DWORD *)(v2 + 24) = v1;
}

void sub_18CA549D0(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unint64_t *v3;
  unint64_t *v4;
  __int16 v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 8) + 1697562443 * (a1 ^ 0xD7903884);
  v2 = 31090337
     * (((&v3 | 0x7D9385D1) - &v3 + (&v3 & 0x826C7A28)) ^ 0xBA12E598);
  LODWORD(v3) = v1 + v2 - 336;
  v5 = 699 - v2;
  v4 = &STACK[0x6C1BF3FFDF6084EF];
  ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v1 & 0xF3990A93] - 8))(&v3);
  __asm { BR              X8 }
}

void sub_18CA54B64()
{
  int v0;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;

  if (v0 != -131941792 && v0 != 1257089591 && v0 != 1107183083)
    __asm { BR              X9 }
  v6 = *(_QWORD *)(v2 + 8 * (v3 - 1374));
  v7 = (v0 ^ 0x80280F7A) - ((2 * (v0 ^ 0x80280F7A)) & 0xCE7E7630) + 1732197144;
  v8 = (_BYTE *)(v5 - 208);
  v9 = (_BYTE *)(*(_QWORD *)(v4 + 8 * (v3 ^ 0x542)) - 8);
  v10 = (_BYTE *)(*(_QWORD *)(v4 + 8 * (v3 ^ 0x592)) - 8);
  v11 = (_BYTE *)(*(_QWORD *)(v4 + 8 * (v3 - 1441)) - 12);
  *v8 = *v9 ^ HIBYTE(v7) ^ *(_BYTE *)(*(_QWORD *)(v4 + 8 * (v3 ^ 0x592)) - 7) ^ *v11 ^ 0x67;
  v8[1] = BYTE2(v7) ^ 0x73 ^ v9[1] ^ v10[2] ^ v11[1] ^ 0x3F;
  v8[2] = BYTE1(v7) ^ 0xE6 ^ v9[2] ^ v10[3] ^ v11[2] ^ 0x3B;
  v8[3] = v7 ^ 0x59 ^ v9[3] ^ v10[4] ^ v11[3] ^ 0x18;
  __asm { BR              X10 }
}

void sub_18CA5500C()
{
  JUMPOUT(0x18CA560A8);
}

void sub_18CA550B4()
{
  JUMPOUT(0x18CA550D8);
}

uint64_t sub_18CA550E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  int32x4_t v60;
  int32x4_t v61;
  int32x4_t v62;
  uint64_t v63;

  v58 = (v56 + 1269351900) & 0xB4573F7F;
  HIDWORD(a11) = (v56 + 963782985) & 0xC68DD2FC;
  HIDWORD(v63) = v56 ^ 0x529;
  LODWORD(v63) = v56 + 34085423;
  v61 = vdupq_n_s32(0x61E8056Eu);
  v62 = vdupq_n_s32(0x7FFFFFFEu);
  v60 = vdupq_n_s32(0xB0F402B7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * (int)((19 * (((((v56 - 36) & 0x7F) - 93) ^ ((((_DWORD)v58 - 632479060) & 0x25B2D7F7) == 1478)) & 1)) ^ v58)))(a1, a2, 233886595, 2874, 197156328, 3662488236, 632477687, 19, __PAIR64__(v53, v54), a10, a11, &a53, (unint64_t)&a42 % (v58 - 2813) + 16, a14, a15, a16, 5119- 366490169* ((2 * ((v57 - 168) & 0x7205BA15FDBC2220) - (v57 - 168) + 0xDFA45EA0243DDD9) ^ 0x2764F0FE14ED8B9DLL),
           366490169
         * ((2 * ((v57 - 168) & 0x7205BA15FDBC2220) - (v57 - 168) + 0xDFA45EA0243DDD9) ^ 0x2764F0FE14ED8B9DLL),
           v60.i64[0],
           v60.i64[1],
           v61.i64[0],
           v61.i64[1],
           v62.i64[0],
           v62.i64[1],
           (((2 * (v57 - 168)) | 0xD4CFC1588FA31520) - (v57 - 168) + 0x15981F53B82E7570) ^ 0xA40ECC69DD999138,
           a26,
           a27,
           a28,
           v63);
}

uint64_t sub_18CA55308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,_DWORD *a31,_QWORD *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  int v43;
  char v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  char *v50;
  unsigned int v51;
  unint64_t v52;
  char v53;

  v50 = &a43 + (a5 - 197156313);
  v51 = 1554976193
      * ((*(_DWORD *)(*a32 + (*a31 & (((v45 - 1699) | 0xB00u) + 56037082))) ^ v50) & 0x7FFFFFFF);
  v52 = 1554976193 * (v51 ^ HIWORD(v51));
  v53 = *(_BYTE *)(*(_QWORD *)(v48 + 8 * (v45 ^ 0x659)) + (v52 >> 24)) ^ ((v43 ^ 0x5A28EC22 ^ (v45 - 1699) ^ v49) >> (v44 - 41)) ^ *(_BYTE *)(*(_QWORD *)(v48 + 8 * (v45 - 1463)) + (v52 >> 24) - 11) ^ *(_BYTE *)((v52 >> 24) + *(_QWORD *)(v48 + 8 * (v45 ^ 0x6BC)) + 5) ^ v52 ^ (-115 * BYTE3(v52));
  *v50 = v53;
  return ((uint64_t (*)(void))(*(_QWORD *)(v47 + 8 * ((3513 * (a5 - (v53 != 0) == v46)) ^ v45)) - 8))();
}

void sub_18CA56058()
{
  JUMPOUT(0x18CA552C0);
}

void sub_18CA56060()
{
  JUMPOUT(0x18CA5606CLL);
}

uint64_t sub_18CA56228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41,uint64_t a42,uint64_t a43,char a44,char a45,char a46,char a47,char a48,char a49,char a50,char a51,char a52,char a53,char a54,char a55,char a56,char a57,char a58,char a59)
{
  int v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  *(_DWORD *)(v63 - 0x58473EE936503110) = v60 - 1756212600;
  *(_DWORD *)(v63 - 0x58473EE93650310CLL) = v59 ^ 0x307AF1A4;
  *(_DWORD *)(v63 - 0x58473EE936503108) = a11 ^ 0xF620B811;
  *(_DWORD *)(v63 - 0x58473EE936502EF0) = a41;
  if (v60 == 1756212608 || v60 == 1756212605)
  {
    *(_BYTE *)(v63 - 0x58473EE9365030F5) = a59 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE9365030F6) = a58 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE9365030F7) = a57 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE9365030F8) = a56 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE9365030F9) = a55 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE9365030FALL) = a54 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE9365030FBLL) = a53 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE9365030FCLL) = a52 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE9365030FDLL) = a51 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE9365030FELL) = a50 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE9365030FFLL) = a49 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE936503100) = a48 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE936503101) = a47 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE936503102) = a46 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE936503103) = a45 ^ 0x59;
    *(_BYTE *)(v63 - 0x58473EE936503104) = a44 ^ 0x59;
  }
  *(_DWORD *)(v65 - 164) = v62
                         + 1314530549
                         * ((((v65 - 168) | 0xBC401790) - (v65 - 168) + ((v65 - 168) & 0x43BFE868)) ^ 0xD49915E)
                         + 1879;
  v66 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v64 + 8 * (v62 ^ 0x5BB)) - 8))(v65 - 168);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v61
                                                      + 8
                                                      * ((3903 * (*(_DWORD *)(v65 - 168) == 1556779682)) ^ (v62 - 1336)))
                                          - ((v62 - 1750622151) & 0x68585A7A)
                                          + 110))(v66);
}

uint64_t sub_18CA5653C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  int v42;

  v42 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, char *))off_1E2538470[v40 & 0x2A8C3BEA])(*(unsigned int *)(a10 - 8), 21, v39, 552, v39, &a39);
  return ((uint64_t (*)(void))(*(_QWORD *)(v41
                                        + 8
                                        * ((1981
                                          * (((((v40 + 14) | 6) - 345575) ^ v42) + 1557125115 + ((2 * v42) & 0xFFF5754E) == ((v40 + 1903400812) & 0x8E8C6DDF ^ 0x5CCA9764))) ^ v40))
                            - 4))();
}

uint64_t sub_18CA565FC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((*(_DWORD *)(v2 - 0x58473EE936502EECLL) == 0)
                                               * (((v0 + 1072596801) & 0xC0117DF6) + 2575)) ^ v0))
                            - 12))();
}

uint64_t sub_18CA56680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,char a43,__int128 a44)
{
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char v52;
  uint64_t v53;
  int v54;
  int v55;
  _QWORD *v56;
  uint64_t v57;

  if (v45 == 1756212605 || v45 == 1756212608)
  {
    *(_BYTE *)(v50 - 169) = *(_BYTE *)(v49 - 0x58473EE9365030F5)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE9365030F5)) | 0x4D)
                          + 90;
    v51 = v48 - 1356;
    *(_BYTE *)(v50 - 170) = *(_BYTE *)(v49 - 0x58473EE9365030F6)
                          + ~(((v48 - 76) ^ 0xC8) & (2 * *(_BYTE *)(v49 - 0x58473EE9365030F6)))
                          + 90;
    *(_BYTE *)(v50 - 171) = *(_BYTE *)(v49 - 0x58473EE9365030F7)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE9365030F7)) | 0x4D)
                          + 90;
    *(_BYTE *)(v50 - 172) = *(_BYTE *)(v49 - 0x58473EE9365030F8)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE9365030F8)) | 0x4D)
                          + 90;
    *(_BYTE *)(v50 - 173) = *(_BYTE *)(v49 - 0x58473EE9365030F9)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE9365030F9)) | 0x4D)
                          + 90;
    *(_BYTE *)(v50 - 174) = *(_BYTE *)(v49 - 0x58473EE9365030FALL)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE9365030FALL)) | 0x4D)
                          + 90;
    *(_BYTE *)(v50 - 175) = *(_BYTE *)(v49 - 0x58473EE9365030FBLL)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE9365030FBLL)) | 0x4D)
                          + 90;
    *(_BYTE *)(v50 - 176) = *(_BYTE *)(v49 - 0x58473EE9365030FCLL)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE9365030FCLL)) | 0x4D)
                          + 90;
    *(_BYTE *)(v50 - 177) = *(_BYTE *)(v49 - 0x58473EE9365030FDLL)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE9365030FDLL)) | 0x4D)
                          + 90;
    *(_BYTE *)(v50 - 178) = *(_BYTE *)(v49 - 0x58473EE9365030FELL)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE9365030FELL)) | 0x4D)
                          + 90;
    *(_BYTE *)(v50 - 179) = *(_BYTE *)(v49 - 0x58473EE9365030FFLL)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE9365030FFLL)) | 0x4D)
                          + 90;
    *(_BYTE *)(v50 - 180) = *(_BYTE *)(v49 - 0x58473EE936503100)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE936503100)) | 0x4D)
                          + 90;
    *(_BYTE *)(v50 - 181) = *(_BYTE *)(v49 - 0x58473EE936503101)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE936503101)) | 0x4D)
                          + 90;
    *(_BYTE *)(v50 - 182) = *(_BYTE *)(v49 - 0x58473EE936503102)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE936503102)) | 0x4D)
                          + 90;
    *(_BYTE *)(v50 - 183) = *(_BYTE *)(v49 - 0x58473EE936503103)
                          + (~(2 * *(_BYTE *)(v49 - 0x58473EE936503103)) | 0x4D)
                          + 90;
    v52 = *(_BYTE *)(v49 - 0x58473EE936503104) + (~(2 * *(_BYTE *)(v49 - 0x58473EE936503104)) | 0x4D) + 90;
  }
  else
  {
    v51 = v48 ^ 0x5BC;
    *(_BYTE *)(v50 - 169) = HIBYTE(a44);
    v53 = v50 - 208;
    *(_DWORD *)(v53 + 35) = *(_DWORD *)((char *)&a44 + 11);
    *(_QWORD *)(v53 + 27) = *(_QWORD *)((char *)&a44 + 3);
    *(_WORD *)(v53 + 25) = *(_WORD *)((char *)&a44 + 1);
    v52 = a44;
  }
  *(_BYTE *)(v50 - 184) = v52;
  v54 = *a37;
  v55 = 1314530549 * ((v50 - 168) ^ 0xB10986CE);
  v56 = (_QWORD *)(v50 - 208);
  v56[9] = v49 - 0x58473EE9365030F0;
  *(_BYTE *)(v50 - 148) = -11 * ((v50 + 88) ^ 0xCE) + 29;
  v56[11] = v46;
  v56[12] = v49 + 0x2777AD54257BCAB8;
  v56[5] = &a43;
  v56[6] = v50 - 184;
  *(_DWORD *)(v50 - 152) = (v45 - 640935686) ^ v55;
  *(_DWORD *)(v50 - 128) = ((v54 ^ 0x6FBEEFDF) - 26354380 + ((2 * v54) & 0xDF7DDFBE)) ^ v55;
  *(_DWORD *)(v50 - 144) = v55 + v51 + 625;
  v57 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v44 + 8 * (v51 ^ 0x16F)) - 4))(v50 - 168);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v47
                                                      + 8
                                                      * (((*(_DWORD *)(v50 - 140) == 1556779682)
                                                        * ((v51 - 1046309100) & 0x3E5D68FF ^ 0xC32)) ^ v51))
                                          - 4))(v57);
}

void sub_18CA56A50()
{
  JUMPOUT(0x18CA56A90);
}

void sub_18CA56AD4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 12) ^ (366490169 * ((a1 + 1323543593 - 2 * (a1 & 0x4EE3AC29)) ^ 0x584DFA6D));
  __asm { BR              X11 }
}

uint64_t sub_18CA56B9C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  BOOL v9;
  int v10;

  if (a4)
    v9 = *a1 == 0;
  else
    v9 = 1;
  v10 = !v9;
  return ((uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((v10 * (485 * (v7 ^ 0x8A4) - 1952)) ^ v7))
                                                                                                 - 12))(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_18CA56BE4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  int v51;
  uint64_t v52;
  BOOL v53;
  int v54;

  if (a4)
    v53 = *a1 == 0;
  else
    v53 = 1;
  v54 = !v53;
  HIDWORD(a15) = -42900;
  return ((uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * ((v54 * (485 * (v51 ^ 0x8A4) - 1952)) ^ v51)) - 12))(a1, a2, v50 + 32, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_18CA56C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL4 v13;

  v11 = ((2 * (-1687376935 * (v8 + a8) + 2027560218)) & 0xFDFFFC7A)
      + ((-1687376935 * (v8 + a8) + 2027560218) ^ 0xFEFFFE3D);
  v13 = (((_BYTE)v11 + 3) & 0xF) != 0 || v11 == -16777667;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * (v9 ^ (51 * v13)))
                                                                                                - ((v9 + 1203) ^ 0xD4FLL)))(a1, a2, a3, a4, a5, a6, a7);
}

void sub_18CA56CD0()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 20) = (v1 ^ 0xFEDBD6FA) + 1575926696 + ((2 * v1) & 0xFDB6A0D0);
}

void sub_18CA5CDCC()
{
  unint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = qword_1EE056968 ^ (unint64_t)&v2 ^ qword_1EE056930;
  qword_1EE056968 = 864964861 * v0 - 0x7FF9C25FF573ED32;
  qword_1EE056930 = 864964861 * (v0 ^ 0x30AB163F3BCF6666);
  *(_DWORD *)off_1E2538470[((-3 * ((qword_1EE056930 + qword_1EE056968) ^ 0x66)) ^ byte_18CF23D40[byte_18CF1D4E0[(-3 * ((qword_1EE056930 + qword_1EE056968) ^ 0x66))] ^ 0xCB])
                         - 67] = 1556779682;
  v1 = off_1E2538470[((-3 * (qword_1EE056968 ^ 0x66 ^ qword_1EE056930)) ^ byte_18CF13510[byte_18CF23B40[(-3 * (qword_1EE056968 ^ 0x66 ^ qword_1EE056930))] ^ 0xEF])
                   - 26]((unint64_t **)512);
  *(_QWORD *)((char *)off_1E2538470[((-3 * ((qword_1EE056930 + qword_1EE056968) ^ 0x66)) ^ byte_18CF1D5E0[byte_18CF17F70[(-3 * ((qword_1EE056930 + qword_1EE056968) ^ 0x66))] ^ 0xF7])
                                  + 4]
            - 4) = v1;
  __asm { BR              X8 }
}

uint64_t sub_18CA5CF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v7 = v0;
  v3 = **(unsigned int **)(v1 + 872);
  v4 = 673918253 * ((v2 + 0x7AC4EBB31E747018 - 2 * ((v2 - 144) & 0x7AC4EBB31E7470A8)) ^ 0x34ADC776843C6B00);
  *(_DWORD *)(v2 - 136) = 1318020247 - v4;
  *(_QWORD *)(v2 - 128) = v3 - v4;
  *(_QWORD *)(v2 - 144) = -673918253
                        * ((v2 + 0x7AC4EBB31E747018 - 2 * ((v2 - 144) & 0x7AC4EBB31E7470A8)) ^ 0x34ADC776843C6B00);
  *(_DWORD *)(v2 - 120) = v4;
  *(_DWORD *)(v2 - 116) = v4 + 1318020254;
  *(_DWORD *)(v2 - 108) = v4 ^ 0x4E8F65B1;
  *(_DWORD *)(v2 - 104) = v4 + 2126731276;
  v5 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 2008) - 4))(v2 - 144);
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * *(int *)(v2 - 112)))(v5);
}

uint64_t sub_18CA5D210@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t (*v34)(void);
  _DWORD *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v36 = a1 + 824;
  a5(a4);
  v37 = v34();
  *v35 = v37;
  v35[1] = 1812433253 * ((v37 >> ((121 * (v36 ^ 0x63)) ^ 0x75)) ^ v37) + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a34 + 8 * v36))(v37, 889, 2677, 2654907247, 713, v38, v39, v40, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20);
}

void sub_18CA5D2A0()
{
  JUMPOUT(0x18CA5D260);
}

uint64_t sub_18CA5D2B0(double a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int32x4_t a17, int8x16_t a18, int8x16_t a19)
{
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  int32x4_t v28;

  v24 = (int8x16_t)vld1q_dup_f32((const float *)v23);
  v25.i64[0] = 0x8000000080000000;
  v25.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(_QWORD *)(v23 + 4);
  a2.i32[2] = *(_DWORD *)(v23 + 12);
  v26 = vextq_s8(v24, a2, 0xCuLL);
  v27 = a2;
  v27.i32[3] = *(_DWORD *)(v23 + 16);
  v28 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v27, a19), vandq_s8(v26, v25)), 1uLL), *(int8x16_t *)(v23 + 1588));
  v26.i32[0] = *(_DWORD *)(v22 + 4 * (*(_DWORD *)(v23 + 4) & 1));
  v26.i32[1] = *(_DWORD *)(v22 + 4 * (*(_DWORD *)(v23 + 8) & 1));
  v26.i32[2] = *(_DWORD *)(v22 + 4 * (*(_DWORD *)(v23 + 12) & 1));
  v26.i32[3] = *(_DWORD *)(v22 + 4 * (v27.i8[12] & 1));
  *(int8x16_t *)v23 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v28, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v28, v28), a18)), a17), v26);
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * (v20 ^ (v21 - 919) ^ 0xCDE)) - 4))();
}

uint64_t sub_18CA5D988@<X0>(char a1@<W1>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;

  v9 = (unsigned int *)(v8 + 4 * v3);
  v10 = v3 + 1;
  v11 = *(_DWORD *)(v8 + 4 * v10);
  v12 = ((v11 & 0x7FFFFFFE | v2 & 0x80000000) >> ((a2 - 76) ^ a1)) ^ v9[397];
  *v9 = (v12 + v6 - (v4 & (2 * v12))) ^ *(_DWORD *)(v7 + 4 * (v11 & 1));
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((28 * (v10 == 227)) ^ a2)) - 4))();
}

uint64_t sub_18CA5D9F4(double a1, int8x16_t a2, double a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int32x4_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const float *v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int32x4_t v18;

  v14 = (const float *)(v13 + 908);
  v15 = (int8x16_t)vld1q_dup_f32(v14);
  a2.i64[0] = *(_QWORD *)(v13 + 912);
  a2.i32[2] = *(_DWORD *)(v13 + 920);
  v16 = vextq_s8(v15, a2, 0xCuLL);
  v17 = a2;
  v17.i32[3] = *(_DWORD *)(v13 + 924);
  v18 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v17, a6), vandq_s8(v16, a5)), 1uLL), *(int8x16_t *)v13);
  v16.i32[0] = *(_DWORD *)(v12 + 4 * (*(unsigned int *)(v13 + 912) & (v10 ^ a10)));
  v16.i32[1] = *(_DWORD *)(v12 + 4 * (*(_DWORD *)(v13 + 916) & 1));
  v16.i32[2] = *(_DWORD *)(v12 + 4 * (*(_DWORD *)(v13 + 920) & 1));
  v16.i32[3] = *(_DWORD *)(v12 + 4 * (v17.i8[12] & 1));
  *(int8x16_t *)(v13 + 908) = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v18, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v18, v18), a7)), a8), v16);
  return (*(uint64_t (**)(void))(v11 + 8 * (int)v10))();
}

void sub_18CA5DAA8()
{
  JUMPOUT(0x18CA5DA08);
}

uint64_t sub_18CA5DAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,unsigned int a45)
{
  int v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  _DWORD *v50;
  unsigned int v51;
  _BOOL4 v52;

  v51 = v50[396] ^ ((*v50 & 0x7FFFFFFE | v50[623] & 0x80000000) >> 1);
  v50[623] = (v51 + v47 - ((v45 ^ 0xA68CC621) & (2 * v51))) ^ *(_DWORD *)(v49 + 4 * (*v50 & 1));
  v52 = a45 > (((v45 ^ 0x5FA) - v48 - 2493) ^ 0xDE23CD7A);
  return ((uint64_t (*)(void))(*(_QWORD *)(v46 + 8 * ((2 * v52) | (8 * v52) | v45 ^ 0x5FA)) - 4))();
}

uint64_t sub_18CA5DB4C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,_DWORD *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(uint64_t),uint64_t a33,uint64_t a34)
{
  unsigned int *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;

  *a23 = 1;
  v36 = *v34;
  v37 = a1 - 1858537987 - a7;
  *(_DWORD *)(v35 - 104) = a7;
  *(_QWORD *)(v35 - 136) = a6;
  *(_DWORD *)(v35 - 144) = v37;
  *(_DWORD *)(v35 - 140) = 915379712 - a7 + a1;
  *(_QWORD *)(v35 - 112) = v36 - a7;
  *(_DWORD *)(v35 - 128) = v37 + 85;
  *(_DWORD *)(v35 - 124) = ((a1 - 1858537987) ^ 0x143) - a7;
  v38 = a32(v35 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a34 + 8 * *(int *)(v35 - 120)) - 4))(v38);
}

uint64_t sub_18CA5DBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unint64_t a29,uint64_t a30,_DWORD *a31)
{
  uint64_t v31;
  unsigned int v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;

  *a31 = 0;
  v36 = ((v32 ^ (v32 >> 11)) << (a21 ^ 0x2F)) & 0x9D2C5680 ^ v32 ^ (v32 >> 11);
  *(_DWORD *)(*a24 + a29) ^= v33 & (v36 << 15) ^ v36 ^ ((v33 & (v36 << 15) ^ v36) >> 18);
  return (*(uint64_t (**)(void))(v31 + 8 * ((v34 + v35 + 1707) ^ (425 * (a29 > 0x1FB)))))();
}

void sub_18CA5DC64()
{
  JUMPOUT(0x18CA5D0C0);
}

void sub_18CA5DC70()
{
  int v0;
  _DWORD *v1;

  *v1 = v0 + 21;
}

void sub_18CA653A4(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1
     + 1697562443 * (((a1 | 0x177EF40C) - (_DWORD)a1 + (a1 & 0xE8810BF3)) ^ 0xC0EECC88);
  __asm { BR              X9 }
}

uint64_t sub_18CA65444()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 - 1485)))(200) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2909 * v3) ^ v0)) - 12))();
}

uint64_t sub_18CA6547C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  int v8;
  int v9;

  result = (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 8 * (v3 ^ 0x5F4)))(a1, 0);
  v8 = ((2 * result) & 0x5E792F2A) + (result ^ 0xAF3C9795);
  if (v8 == -1354983515)
  {
    --v2;
    goto LABEL_7;
  }
  if (v8 == -1354983519)
  {
LABEL_7:
    result = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v3 - 1314)))(a1);
    v9 = v2;
    goto LABEL_8;
  }
  if (v8 != -1354983531)
  {
    v2 -= 2;
    goto LABEL_7;
  }
  *v5 = a1;
  v9 = 292387638;
LABEL_8:
  *(_DWORD *)(v1 + 4) = v9 - 292387638;
  return result;
}

void sub_18CA65538(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 31090337 * (((a1 | 0xA983C6B9) - (a1 | 0x567C3946) + 1450981702) ^ 0x6E02A6F0);
  __asm { BR              X9 }
}

void sub_18CA6561C()
{
  _DWORD *v0;

  *v0 = 1556737659;
}

void sub_18CA65ED8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) - 1697562443 * ((2 * (a1 & 0x68AD8D28) - a1 - 1756204329) ^ 0x40C24A53);
  __asm { BR              X14 }
}

uint64_t sub_18CA65FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;

  v15 = v12 & 0x635ABBDF;
  if (v13 + v11 >= 0)
    v16 = v13 + v11;
  else
    v16 = -(v13 + v11);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 + 8 * ((((v15 - 1045381600) & 0x3E4F4E29 ^ 0x36C) * (v16 < 0x83)) ^ v15)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_18CA66040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,_DWORD *a25)
{
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  _BOOL8 v29;
  _BOOL8 v30;
  _BOOL4 v31;
  uint64_t (*v32)(uint64_t, uint64_t, _QWORD, _BOOL8, _BOOL8, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);

  v27 = v25 + 1900;
  *a25 = -2061537907;
  v28 = ((v27 - 2162) | 0x504) + 1933340933;
  v29 = v28 < -214141223;
  v30 = v28 > (int)a7 + 1933342425;
  if (a7 > 0xCC38926 != v29)
    v31 = v29;
  else
    v31 = v30;
  v32 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _BOOL8, _BOOL8, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * ((1672 * v31) | v27)) - 8);
  HIDWORD(a10) = (a7 ^ 0xEFFFF7BF) + 397933056 + ((2 * a7) & 0xDFFFEF7E);
  return v32(a1, 1672, v32, v30, v29, &STACK[0x61D35839E469857E], a7, a8, a9, a10);
}

void sub_18CA6611C()
{
  JUMPOUT(0x18CA660D4);
}

void sub_18CA66124()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 + v1) = v0;
}

void sub_18CA66DE0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_18CA66E44()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((478 * (v0 != 756011384)) ^ 0x6D6u)) - 12))();
}

uint64_t sub_18CA66E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  v4 = v3 - (**(_BYTE **)(a2 + 8) == 0);
  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 800) = 1832862467;
  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 804) = 1194828854;
  *(_QWORD *)(*(_QWORD *)(a1 + 96) + 808) = *(_QWORD *)(a1 + 96) + 816;
  v5 = *(_QWORD *)(a1 + 96) + 0x61D35839E4698826;
  v6 = *(_QWORD *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v4);
  v7 = 1761959447 * ((&v9 + 327032268 - 2 * ((unint64_t)&v9 & 0x137E1DCC)) ^ 0xB2D9DC08);
  v9 = 1390 - v7;
  v12 = v4 - v7 - 409099660;
  v10 = v6;
  v11 = v5;
  ((void (*)(int *))(*(_QWORD *)(a3 + 664) - 8))(&v9);
  return (-256882166 - 636984841 * v13);
}

void sub_18CA66FA4(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  v1 = 476588053 * ((~(_DWORD)a1 & 0xC46AF9D | a1 & 0xF3B95062) ^ 0xB1BBABDE);
  if (*(_QWORD *)(a1 + 8))
    v2 = *(_DWORD *)(a1 + 24) + v1 == 1030870995;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_18CA67074()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 ^ 0x3F5)))(32) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v3 * ((3 * (v2 ^ 0x2BA)) ^ 0x3E9)) ^ v2))
                            - (v2 + 1796)
                            + 2789))();
}

uint64_t sub_18CA670D4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((v1 == v0) ^ v3) & 1) * ((9 * (v3 ^ 0xA9C)) ^ 0x25A)) ^ v3)))();
}

uint64_t sub_18CA67120@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;

  v11 = v2 - 1030870996;
  v12 = v2 - 1;
  v13 = *(unsigned __int8 *)(v8 + v11);
  if (v13 == 89)
    __asm { BR              X11 }
  if (v13 == 217)
  {
    v14 = 1556779682;
    v15 = *v4;
    v16 = (*((_BYTE *)v4 + 16) - v5);
    *(_QWORD *)result = v8;
    *(_DWORD *)(result + 8) = v7;
    *(_DWORD *)(result + 12) = v12;
    if (v16 == 122)
      v17 = 967987478;
    else
      v17 = 967987479;
    *(_DWORD *)(result + 16) = 1533203976;
    *(_DWORD *)(result + 20) = v17;
    *(_DWORD *)(result + 24) = 1556779682;
    *(_QWORD *)(v15 - 0x31F751E514EC29A4) = a2;
  }
  else
  {
    result = (*(uint64_t (**)(void))(v6 + 8 * (v9 - 818)))();
    v14 = 1556737659;
  }
  *((_DWORD *)v4 + 7) = v14;
  return result;
}

void sub_18CA671FC(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_18CA67240()
{
  return 4294925273;
}

void sub_18CA67288(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  _BOOL4 v4;
  char v5;
  _BYTE v6[4];
  unsigned int v7;
  unsigned int v8;
  unint64_t *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  v3 = 673918253 * (((v6 | 0xF0F0BDC3) - v6 + (v6 & 0xF0F4238)) ^ 0x6AB8A66B);
  v7 = v3 ^ 0x8E0939CC;
  v8 = v3 - 1676530937;
  v9 = &STACK[0x7503D0B735518D35];
  sub_18CA1DCF0((uint64_t)v6);
  v4 = *(_DWORD *)(a2 + 16) + 98070311 + ((2 * (v5 & 0x3F)) ^ 0x68) + (v5 & 0x3F ^ 0x7BAFFE8Bu) < 0xFFFFFFC0;
  __asm { BR              X8 }
}

uint64_t sub_18CA6742C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;

  v12 = v9 - 2075131582;
  if (v12 <= 0x40)
    v12 = 64;
  return (*(uint64_t (**)(void))(v11 + 8 * ((14 * (a8 - v8 - v10 + v12 < 0xF)) ^ 0x944u)))();
}

uint64_t sub_18CA67494(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;

  v13 = v9 + v8;
  v14 = v13 + v10;
  if ((v13 + v10) <= 0x40)
    v14 = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((971 * (((a8 - 1870) ^ 0x9CEu) - v13 < a1 + v14)) ^ 0x9EAu)) - 8))();
}

uint64_t sub_18CA674F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  int v25;
  int v26;
  unsigned int v27;
  uint64_t v28;

  return ((uint64_t (*)(void))(*(_QWORD *)(v28
                                        + 8
                                        * ((1792
                                          * ((unint64_t)(&a25 + a14 + (v26 + v25 - 1)) >= ((v27 - 83) ^ 0x9DEuLL))) ^ v27))
                            - (v27 ^ 0xCE0)
                            + 1721))();
}

uint64_t sub_18CA67548@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int8x16_t *v6;
  int8x16_t v7;
  int8x16_t v8;

  v7.i64[0] = 0xB2B2B2B2B2B2B2B2;
  v7.i64[1] = 0xB2B2B2B2B2B2B2B2;
  v8.i64[0] = 0x5959595959595959;
  v8.i64[1] = 0x5959595959595959;
  *(int8x16_t *)(v4 + v1 + v2 + a1) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v7)), v8);
  return ((uint64_t (*)(int8x16_t *))(*(_QWORD *)(v5 + 8
                                                               * ((3779 * (((v3 + 1) & 0x1FFFFFFF0) == 16)) ^ v2))
                                              - 4))(&v6[1]);
}

void sub_18CA675A8()
{
  JUMPOUT(0x18CA67574);
}

uint64_t sub_18CA675B4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((((v0 + 641) | 0x8C) ^ 0x813) + ((v0 - 1675) | 1)) * (v1 == v2)) | (v0 + 649))))();
}

uint64_t sub_18CA675F8@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  *(&a19 + (a2 + v20 + 1729)) = *(_BYTE *)(v19 + v23 - 39241990)
                                            - ((2 * *(_BYTE *)(v19 + v23 - 39241990)) & 0xB2)
                                            + 89;
  return (*(uint64_t (**)(void))(v22 + 8 * ((656 * ((a1 + v20 + 1) > 0x3F)) ^ v21)))();
}

uint64_t sub_18CA6766C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int32x4_t a43,int32x4_t a44,int32x4_t a45,int32x4_t a46)
{
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(__n128, __n128, __n128, __n128, __n128, __n128);
  __n128 v56;
  __n128 v57;
  __n128 v58;
  __n128 v59;
  __n128 v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  uint8x16_t v66;
  uint16x8_t v67;
  int8x16_t v68;
  uint16x8_t v69;
  int8x16_t v70;
  uint8x16_t v71;
  uint16x8_t v72;
  uint16x8_t v73;
  int8x16_t v74;
  int8x16_t v75;
  int8x16_t v76;
  int8x16_t v77;
  uint8x16_t v78;
  int8x16_t v81;
  int8x16_t v86;
  int32x4_t v87;
  int32x4_t v88;
  int v89;
  uint64_t (*v90)(unint64_t **);
  unsigned int v91;
  int v92;
  unsigned int v94;
  uint64_t v95;
  uint8x16_t v96;
  uint16x8_t v97;
  uint16x8_t v98;
  uint8x16_t v99;
  uint8x16_t v104;
  uint16x8_t v105;
  uint16x8_t v106;
  int32x4_t v107;
  int32x4_t v108;
  int32x4_t v109;
  int32x4_t v110;
  uint64_t v111;
  _DWORD *v112;
  int v113;
  unsigned int v114;
  int v115;
  uint64_t v116;
  int v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int8x16x4_t v124;
  int8x16x4_t v125;

  v55 = (uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v49 + 8 * v46) - 4);
  v56.n128_u64[0] = 0x5959595959595959;
  v56.n128_u64[1] = 0x5959595959595959;
  v57 = (__n128)vdupq_n_s32(0x4C59F7FEu);
  v123 = v54 - 16;
  v58 = (__n128)vdupq_n_s32(0xCC59F7E6);
  v59 = (__n128)vdupq_n_s32(0x98B3EFCC);
  v60.n128_u64[0] = 0xB2B2B2B2B2B2B2B2;
  v60.n128_u64[1] = 0xB2B2B2B2B2B2B2B2;
  v61.n128_u64[0] = 0x5A5A5A5A5A5A5A5ALL;
  v61.n128_u64[1] = 0x5A5A5A5A5A5A5A5ALL;
  v62 = a34;
  HIDWORD(a19) = HIDWORD(a33);
  v122 = a34;
  v63 = HIDWORD(a34);
  v64 = BYTE4(a36) ^ 0xBF;
  LODWORD(v120) = BYTE4(a36) ^ 0xFFFFFFBF;
  LODWORD(a21) = a35;
  if (v64 == 2)
  {
    v121 = *(_QWORD *)(v49 + 8 * v46) - 4;
    v125 = vld4q_s8((const char *)&a24 + 4);
    v94 = a6 ^ a7;
    v95 = HIDWORD(a35);
    HIDWORD(a16) = HIDWORD(a35);
    v96 = (uint8x16_t)veorq_s8(v125.val[0], (int8x16_t)v56);
    v97 = vmovl_u8(*(uint8x8_t *)v96.i8);
    v98 = vmovl_high_u8(v96);
    v99 = (uint8x16_t)veorq_s8(v125.val[1], (int8x16_t)v56);
    _Q23 = vmovl_u8(*(uint8x8_t *)v99.i8);
    _Q22 = vmovl_high_u8(v99);
    __asm
    {
      SHLL2           V24.4S, V22.8H, #0x10
      SHLL2           V25.4S, V23.8H, #0x10
    }
    v104 = (uint8x16_t)veorq_s8(v125.val[2], (int8x16_t)v56);
    v105 = vmovl_high_u8(v104);
    v106 = vmovl_u8(*(uint8x8_t *)v104.i8);
    v125.val[0] = veorq_s8(v125.val[3], (int8x16_t)v56);
    v125.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v125.val[0]);
    v125.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v125.val[1]);
    v125.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v125.val[1].i8);
    v125.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v125.val[0].i8);
    v125.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v125.val[0]);
    v125.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v125.val[0].i8);
    v107 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q23.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v106.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v97.i8), 0x18uLL)), v125.val[0]);
    v108 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q25, (int8x16_t)vshll_high_n_u16(v106, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v97), 0x18uLL)), v125.val[3]);
    v109 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v105.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v98.i8), 0x18uLL)), v125.val[1]);
    v110 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v105, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v98), 0x18uLL)), v125.val[2]);
    v125.val[0] = veorq_s8(vandq_s8((int8x16_t)v107, (int8x16_t)v57), (int8x16_t)(*(_OWORD *)v125.val & __PAIR128__(0xFFFFFF18FFFFFF18, 0xFFFFFF18FFFFFF18)));
    v125.val[3] = veorq_s8(vandq_s8((int8x16_t)v108, (int8x16_t)v57), (int8x16_t)(*(_OWORD *)&v125.val[3] & __PAIR128__(0xFFFFFF18FFFFFF18, 0xFFFFFF18FFFFFF18)));
    v125.val[1] = veorq_s8(vandq_s8((int8x16_t)v109, (int8x16_t)v57), (int8x16_t)(*(_OWORD *)&v125.val[1] & __PAIR128__(0xFFFFFF18FFFFFF18, 0xFFFFFF18FFFFFF18)));
    v125.val[2] = veorq_s8(vandq_s8((int8x16_t)v110, (int8x16_t)v57), (int8x16_t)(*(_OWORD *)&v125.val[2] & __PAIR128__(0xFFFFFF18FFFFFF18, 0xFFFFFF18FFFFFF18)));
    a45 = vaddq_s32(vsubq_s32(v109, vaddq_s32((int32x4_t)v125.val[1], (int32x4_t)v125.val[1])), (int32x4_t)v58);
    a46 = vaddq_s32(vsubq_s32(v110, vaddq_s32((int32x4_t)v125.val[2], (int32x4_t)v125.val[2])), (int32x4_t)v58);
    a43 = vaddq_s32(vsubq_s32(v107, vaddq_s32((int32x4_t)v125.val[0], (int32x4_t)v125.val[0])), (int32x4_t)v58);
    a44 = vaddq_s32(vsubq_s32(v108, vaddq_s32((int32x4_t)v125.val[3], (int32x4_t)v125.val[3])), (int32x4_t)v58);
    v111 = (a6 ^ a7) + 1976;
    v112 = (_DWORD *)&a43 + v53 + 249807493;
    v113 = *(v112 - 8) ^ *(v112 - 3);
    v114 = v113 + v48 - ((v111 ^ 0x98B3E452) & (2 * v113));
    v115 = *(v112 - 16) ^ *(v112 - 14);
    v116 = v115 ^ 0x4C59F7E6 ^ v114;
    HIDWORD(v118) = v115 ^ 0x4C59F7E6 ^ v114;
    LODWORD(v118) = v115 ^ ~v114;
    v117 = v118 >> 31;
    v119 = (2 * v117) & 0x98B3EFCC;
    *v112 = v117 + v48 - v119;
    HIDWORD(v120) = HIDWORD(a13) - 1211344747;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * ((2168 * (v54 == 249807430)) ^ v94)))(v111, v63, v119, v62, v95, v116, a7, 144, a9, a10, a11, a12, a13, a14, v47, a16, v120, v121, a19,
             v122,
             a21,
             v123,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42);
  }
  else if (v64 == 1)
  {
    v124 = vld4q_s8((const char *)&a24 + 4);
    v65 = a6 ^ (a7 + 448);
    v66 = (uint8x16_t)veorq_s8(v124.val[0], (int8x16_t)v56);
    v67 = vmovl_high_u8(v66);
    v68 = (int8x16_t)vmovl_high_u16(v67);
    v69 = vmovl_u8(*(uint8x8_t *)v66.i8);
    v70 = (int8x16_t)vmovl_high_u16(v69);
    v71 = (uint8x16_t)veorq_s8(v124.val[1], (int8x16_t)v56);
    v72 = vmovl_u8(*(uint8x8_t *)v71.i8);
    v73 = vmovl_high_u8(v71);
    v74 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v72.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v69.i8));
    v75 = vorrq_s8((int8x16_t)vshll_high_n_u16(v72, 8uLL), v70);
    v76 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v73.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v67.i8));
    v77 = vorrq_s8((int8x16_t)vshll_high_n_u16(v73, 8uLL), v68);
    v78 = (uint8x16_t)veorq_s8(v124.val[2], (int8x16_t)v56);
    _Q23 = (int8x16_t)vmovl_high_u8(v78);
    _Q22 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v78.i8);
    v81 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    v86 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q23.i8, 0x10uLL);
    __asm { SHLL2           V23.4S, V23.8H, #0x10 }
    v124.val[0] = veorq_s8(v124.val[3], (int8x16_t)v56);
    v124.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v124.val[0].i8);
    v124.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v124.val[0]);
    v87 = (int32x4_t)vorrq_s8(vorrq_s8(v74, v81), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v124.val[1].i8), 0x18uLL));
    v124.val[1] = vorrq_s8(vorrq_s8(v75, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v124.val[1]), 0x18uLL));
    v88 = (int32x4_t)vorrq_s8(vorrq_s8(v76, v86), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v124.val[0].i8), 0x18uLL));
    v124.val[0] = vorrq_s8(vorrq_s8(v77, _Q23), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v124.val[0]), 0x18uLL));
    a45 = vaddq_s32(vsubq_s32(v88, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v88, v88), (int8x16_t)v59)), (int32x4_t)v58);
    a46 = vaddq_s32(vsubq_s32((int32x4_t)v124.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v124.val[0], (int32x4_t)v124.val[0]), (int8x16_t)v59)), (int32x4_t)v58);
    a43 = vaddq_s32(vsubq_s32(v87, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v87, v87), (int8x16_t)v59)), (int32x4_t)v58);
    a44 = vaddq_s32(vsubq_s32((int32x4_t)v124.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v124.val[1], (int32x4_t)v124.val[1]), (int8x16_t)v59)), (int32x4_t)v58);
    v89 = (HIDWORD(a33) ^ v51)
        + v52
        + ((a35 ^ v51) & (a34 ^ 0xAA5CE291) | (a34 ^ v51) & (HIDWORD(a34) ^ v51))
        + *((_DWORD *)off_1E2538470[v65 - 1197] + v123 + v53)
        + (a43.i32[(*((_BYTE *)off_1E2538470[v65 ^ 0x56Bu] + v123 + v53 - 4) - 40)] ^ v48);
    v90 = off_1E2538470[v65 ^ 0x55Cu];
    v91 = (v89 + v51 - (v50 & (2 * v89))) ^ v51;
    v92 = ((v91 << (*((_BYTE *)v90 + v123 + v53) - 24)) | (v91 >> (24 - *((_BYTE *)v90 + v123 + v53)))) + (a34 ^ v51);
    return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v49 + 8 * (v65 | 0x19u)) - 4))(v92 + v51 - (v50 & (2 * v92)));
  }
  else
  {
    HIDWORD(a33) = 2 * (HIDWORD(a33) ^ v51) + v51 - (v50 & (4 * (HIDWORD(a33) ^ v51)));
    LODWORD(a34) = 2 * (a34 ^ v51) + v51 - (v50 & (4 * (a34 ^ v51)));
    HIDWORD(a34) = 2 * (HIDWORD(a34) ^ v51) + v51 - (v50 & (4 * (HIDWORD(a34) ^ v51)));
    LODWORD(a35) = 2 * (a35 ^ v51) + v51 - (v50 & (4 * (a35 ^ v51)));
    return v55(v56, v57, v58, v59, v60, v61);
  }
}

uint64_t sub_18CA68208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18)
{
  uint64_t v18;
  _BOOL4 v19;

  if (a18 < 0x3643EA6F != (a15 + 871178665) < 0x3643EA6F)
    v19 = (a15 + 871178665) < 0x3643EA6F;
  else
    v19 = (int)a15 + 871178665 > a18;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18
                                                                       + 8
                                                                       * ((!v19 * (a5 + a6 + 4285)) ^ (a5 + a6 + 199))))(a15, 3843, 41, 111);
}

uint64_t sub_18CA68298(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = ((164 * ((v7 + 997) ^ (a7 + 170) ^ (a6 - 5))) ^ (v8 - 949)) + a1 < a1 + v8;
  return (*(uint64_t (**)(void))(v9 + 8 * ((16 * v10) | (32 * v10) | (v7 + 997))))();
}

uint64_t sub_18CA682E4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;

  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((3997
                                * (a14 + v14 - (unint64_t)(a1 - 162715964 + ((v15 - 1218522117) & 0x4FFD37BEu)) > 0xF)) ^ v15)))();
}

uint64_t sub_18CA68338(int a1, double a2, double a3, double a4, double a5, int8x16_t a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  int v12;
  int8x16_t *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  *v13 = vaddq_s8(vaddq_s8(*(int8x16_t *)(v16 + (a1 + v14)), a7), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(v16 + (a1 + v14)), *(int8x16_t *)(v16 + (a1 + v14))), a6)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (a11 + v12 + 1511)) - (v12 ^ (a12 + 88)) + 172))();
}

uint64_t sub_18CA683A0@<X0>(int a1@<W0>, char a2@<W2>, char a3@<W3>, int a4@<W4>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  *(_BYTE *)(v6 + a5) = *(_BYTE *)(v10 + (a1 + v7))
                      + (v11 | ~(*(_BYTE *)(v10 + (a1 + v7)) << (((a4 + v5 - 63) ^ a2) & a3)))
                      + 90;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v9 + 8 * (((a5 != 63) * v8) ^ (a4 + v5 + 1513))) - 12))((a1 + 1));
}

uint64_t sub_18CA683FC(int a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  uint64_t v14;
  unsigned int v15;
  _BOOL4 v16;

  v15 = a14 + ((a2 + 357242100) & 0x1C6F) - 380659945;
  if (v15 < 0x67C72958 != (a1 + 1701863506) < 0x67C72958)
    v16 = v15 < 0x67C72958;
  else
    v16 = a1 + 1701863506 < v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((118 * v16) ^ a2)) - 8))();
}

uint64_t sub_18CA68480(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unsigned int a35)
{
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;

  v42 = (a4 - 31) | 0xD11;
  v37 = a4 - a5;
  v38 = 375636451 * (((~(v36 - 120) & 0xFA05C1EA) - (~(v36 - 120) | 0xFA05C1EB)) ^ 0xA93B9B67);
  *(_DWORD *)(v36 - 120) = v38 + a4 + 1134;
  *(_DWORD *)(v36 - 116) = v38 + a14 - 15544537;
  *(_QWORD *)(v36 - 112) = a11;
  v39 = sub_18CA422D0(v36 - 120);
  v40 = a35 & (v42 ^ 0xD66);
  *(&a26 + (v40 ^ 0x34)) = -39;
  return ((uint64_t (*)(uint64_t))(123473942
                                          - v37
                                          + *(_QWORD *)(v35 + 8 * ((1605 * ((v40 ^ 0x34) > 0x37)) ^ a4))
                                          + 24))(v39);
}

uint64_t sub_18CA685A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9 + 8 * (v8 ^ (63 * (v7 == 63))))
                                          - (a5
                                           + (v8 ^ (a7 + 2463))
                                           + 1401)
                                          + 1496))(-1355993564);
}

uint64_t sub_18CA685E4@<X0>(char a1@<W5>, char a2@<W6>, int a3@<W8>)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((823 * ((((a3 ^ 0xBu) < 8) ^ ((v3 ^ (a2 + 6)) - a1 - 1)) & 1)) ^ v3)))();
}

uint64_t sub_18CA68620@<X0>(uint64_t a1@<X0>, char a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  uint64_t v19;
  int v20;
  uint64_t v21;

  *(_QWORD *)(&a19 + v19 + a1) = 0x5959595959595959;
  return ((uint64_t (*)(void))(*(_QWORD *)(v21 + 8 * ((964 * (((v20 - 1247) | 0xC0u) - 1496 == (a2 & 0x38))) ^ v20))
                            - 8))();
}

uint64_t sub_18CA68674@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,char a21)
{
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  _BOOL4 v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  _BOOL4 v32;

  v27 = a4 < v24;
  v28 = *(_BYTE *)(v26 + (a1 + v23));
  v29 = ((a2 - 33973636) & 0x16E7 ^ a3) + a1;
  v30 = (a1 + 1);
  *(&a21 + (v22 - 2049433118)) = v28 - ((2 * v28) & 0xB2) + 89;
  v31 = v27 ^ (v29 < v24);
  v32 = v29 < a4;
  if (!v31)
    v27 = v32;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * ((v27 * v21) ^ a2)) - 8))(v30);
}

uint64_t sub_18CA686FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6
                                                      + 8
                                                      * ((((v5 - 1355993564) < 0x38)
                                                        * (((a5 + v7 - 83) | 0x4C8) ^ 0x573)) ^ (a5 + v7 + 3641)))
                                          - 4))(-1355993564);
}

uint64_t sub_18CA68758(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v1;
  v5 = a1 + v1;
  v6 = 56;
  if ((unint64_t)(v5 + 1) > 0x38)
    v6 = v5 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((395 * (v6 - v4 + (unint64_t)((v2 ^ 0x19Fu) + 1528) + 1355990689 > 7)) ^ v2))
                            - 4))();
}

uint64_t sub_18CA687B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(&a25 + 622 * (v25 ^ 0x541u) + v27 - 1244) = 0x5959595959595959;
  return (*(uint64_t (**)(void))(v28 + 8 * ((27 * ((v26 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ v25)))();
}

uint64_t sub_18CA68808(double a1)
{
  int v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(double *)(v5 + v3) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 0) * v2) ^ v1)))();
}

uint64_t sub_18CA6882C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((23 * (v8 ^ 0x4A1) - 191) * (v6 == v7)) ^ v8))
                            - ((a6 + (v8 ^ 0x4A1u) - 125) ^ (unint64_t)(v9 + 28))))();
}

void sub_18CA6887C()
{
  JUMPOUT(0x18CA67684);
}

uint64_t sub_18CA68C20@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * (int)(((((a2 + v4 - 1504) ^ 0xFFFFE25F) + v4 - a1 - 1401) * (v3 == a3)) ^ v4)))();
}

void sub_18CA68C68()
{
  JUMPOUT(0x18CA67684);
}

uint64_t sub_18CA68C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;

  *(&a25 + v26 + a1) = 89;
  return (*(uint64_t (**)(void))(v27 + 8 * ((25 * ((unint64_t)(v26 + 1 + a1) > 0x3F)) | (a5 + v25 + 1791))))();
}

uint64_t sub_18CA68D14@<X0>(uint64_t a1@<X1>, char a2@<W4>, char a3@<W6>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  _BOOL4 v40;

  v38 = *(_DWORD *)(&a21 + ((v36 + a4) & 0xFFFFFFFC) + 72);
  v39 = (v38 >> (a2 + (v34 ^ (a3 + 92)) - 87)) ^ 0xFFFFFFA3;
  *(_BYTE *)(a1 + (v36 + a4)) = (HIBYTE(v38) ^ 0x55) - ((2 * (HIBYTE(v38) ^ 0x55)) & 0xB2) + 89;
  *(_BYTE *)(a1 + (v36 + a4 + 1)) = v39 - ((2 * v39) & 0xB2) + 89;
  *(_BYTE *)(a1 + (v36 + a4 + 2)) = (BYTE1(v38) ^ 0x1D) + (~(2 * (BYTE1(v38) ^ 0x1D)) | 0x4D) + 90;
  *(_BYTE *)(a1 + (v36 + a4 + 3)) = v38 ^ 0x37;
  v40 = v36 - 1864562894 < (a33 + 2122100362);
  if (v36 - 1864562894 < v33 != a33 + 2122100362 < v33)
    v40 = a33 + 2122100362 < v33;
  return ((uint64_t (*)(void))(*(_QWORD *)(v37 + 8 * ((v40 * v35) ^ v34)) - 4))();
}

void sub_18CA68EB8()
{
  JUMPOUT(0x18CA68E84);
}

uint64_t sub_18CA68EC0()
{
  return 0;
}

void QgPp5PNq(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v6;

  if (a3)
    v5 = a5 == 0;
  else
    v5 = 1;
  v6 = !v5;
  __asm { BR              X8 }
}

uint64_t sub_18CA68F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  a16 = 31090337 * ((&a15 + 364954621 - 2 * ((unint64_t)&a15 & 0x15C0C3FD)) ^ 0xD241A3B4)
      - 849012913;
  v18 = sub_18CA83580(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17 + 8 * ((3767 * (a15 == 1556779682)) ^ v16)) - 4))(v18);
}

uint64_t sub_18CA69018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  a15 = &STACK[0x5D7153D4F79FA4BF];
  a17 = 3403 - 31090337 * ((2 * (&a15 & 0x3133E090) - &a15 + 1322000232) ^ 0x894D7F21);
  sub_18CA4ED30((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((1181 * (a16 == v18)) ^ 0x37Du)) - 4))(v19, v20, v21, v22, v23, v24, v25, v26);
}

uint64_t sub_18CA690A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19)
{
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v26 = v24 - ((2 * v24) & 0x49572A30);
  v27 = 366490169 * (&a15 ^ 0x16AE5644);
  LODWORD(a15) = v26 - 1532259048 + v27;
  a16 = a14;
  HIDWORD(a10) = v27 + 1904;
  LODWORD(a17) = v27 + 1904;
  sub_18C9B6420((uint64_t)&a15);
  v28 = 366490169 * ((((2 * &a15) | 0x5DC661A) - &a15 + 2098318579) ^ 0x94406549);
  LODWORD(a15) = v28 + HIDWORD(v23) - 1532259048 - ((2 * HIDWORD(v23)) & 0x49572A30);
  LODWORD(a17) = v28 + 1904;
  a16 = a14;
  sub_18C9B6420((uint64_t)&a15);
  v29 = 366490169 * ((&a15 & 0x444F3420 | ~(&a15 | 0x444F3420)) ^ 0xAD1E9D9B);
  a16 = a14;
  LODWORD(a15) = v23 - ((2 * v23) & 0x49572A30) - 1532259048 + v29;
  LODWORD(a17) = v29 + 1904;
  sub_18C9B6420((uint64_t)&a15);
  HIDWORD(a16) = (375636451 * (&a15 ^ 0x533E5A8C)) ^ 0x1AA;
  a15 = v22;
  a17 = a14;
  sub_18CA3DE14((uint64_t)&a15);
  LODWORD(a15) = v21 - ((2 * v21) & 0x49572A30) - 1532259048 + v27;
  a16 = a14;
  LODWORD(a17) = v27 + 1904;
  sub_18C9B6420((uint64_t)&a15);
  v30 = 31090337 * ((&a15 + 299237678 - 2 * (&a15 & 0x11D6012E)) ^ 0xD6576167);
  LODWORD(a17) = v30 + 3652;
  a18 = a14;
  a19 = (v20 ^ 0x7AFBAFCF) + ((2 * v20) & 0xF5F75F9E) - v30 - 1611235392;
  a16 = v19;
  sub_18CA65538((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 + 8 * ((663 * ((_DWORD)a15 == 1556779682)) ^ 0x4EAu)) - 8))(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10);
}

uint64_t sub_18CA69388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, int a20)
{
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1314530549 * (&a15 ^ 0xB10986CE);
  a16 = (v20 + 1106912702) ^ v22;
  a17 = a14;
  a20 = v22 ^ 0x4719F6BF;
  a18 = 2127270880 - v22;
  a15 = &STACK[0x7FBEEC3D5BCBFBE8];
  v23 = sub_18CA83938((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21
                                                      + 8
                                                      * (((a19 == (v20 ^ 0xA3CBF4A9) - 1191271841)
                                                        * ((v20 + 158) ^ 0xF61)) ^ v20))
                                          - 8))(v23);
}

uint64_t sub_18CA6944C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14, uint64_t a15, int a16, unsigned int a17, uint64_t a18, char *a19)
{
  unsigned int v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  a17 = (v19 - 22) ^ (((((2 * &a16) | 0xDD524D34) - &a16 + 290904422) ^ 0x5FA0A054) * v20);
  a18 = a12;
  a19 = &a14;
  off_1E2538470[v19 - 1394]((unint64_t **)&a16);
  LODWORD(a19) = v19 - 476588053 * (&a16 ^ 0xBDFD0443) + 1144;
  a18 = a12;
  v23 = sub_18CA3B9C4((uint64_t)&a16);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21
                                                      + 8
                                                      * ((38 * ((((727 * (v19 ^ 0x58A)) ^ (a16 == v22 + 893)) & 1) == 0)) | v19))
                                          - ((v19 - 336596245) & 0xA3DBF7CF ^ 0xA3CBF04FLL)))(v23);
}

uint64_t sub_18CA69548()
{
  void (*v0)(uint64_t *);
  int v1;
  int v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v8 = v5;
  v9 = v3
     + 366490169 * ((1146926644 - (&v7 | 0x445CB634) + (&v7 | 0xBBA349CB)) ^ 0xAD0D1F8F)
     + v1;
  v0(&v7);
  v9 = v3 + 366490169 * (&v7 ^ 0x16AE5644) + v1;
  v8 = v6;
  v0(&v7);
  return (v2 - 1556779682);
}

uint64_t sub_18CA6965C(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 375636451 * (((a1 | 0xE5461441) - (a1 & 0xE5461441)) ^ 0xB6784ECD);
  v2 = *(_DWORD *)(a1 + 12) - v1;
  v3 = *(_DWORD *)(a1 + 16) ^ v1;
  v4 = *(_DWORD *)(*(_QWORD *)a1 - 0x61D35839E4698502);
  v6 = v4 - 1194828854;
  v5 = v4 - 1194828854 < 0;
  v7 = 1194828854 - v4;
  if (!v5)
    v7 = v6;
  return (*((uint64_t (**)(void))off_1E2538470[v2 ^ 0x3B2]
          + ((3636 * ((((v2 - 24) ^ ((v3 - 632657255) < 4 * (unint64_t)v7)) & 1) == 0)) ^ v2)
          - 1))();
}

uint64_t sub_18CA6972C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * ((232
                                                                         * (v3 == ((v5 + 1706354711) & 0x9A4B16DF)
                                                                                + 632656648)) ^ v5)))(a1, a2, a3, 2033614636);
}

uint64_t sub_18CA69774(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 8) = a4;
  return result;
}

uint64_t sub_18CA6977C(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1
                                                               + 8
                                                               * ((((((v2 - 95) | 0x505) ^ 0x55A) == 607) << 6) | (((((v2 - 95) | 0x505) ^ 0x55A) == 607) << 11) | (v2 - 95) | 0x505))
                                                   - 8))(a1, 1627407321);
}

uint64_t sub_18CA6980C@<X0>(uint64_t a1@<X0>, int a2@<W2>, char a3@<W4>, int a4@<W5>, int a5@<W6>, int a6@<W8>)
{
  uint64_t v6;
  int v7;
  unsigned int v8;

  *(_BYTE *)(*(_QWORD *)(a1 + 24) + (a5 + a6)) = ((a4 ^ v8) >> (a3 - 1))
                                                             - ((2 * ((a4 ^ v8) >> (a3 - 1))) & 0xB2)
                                                             + 89;
  return (*(uint64_t (**)(void))(v6 + 8 * (a2 ^ (479 * (a5 - 1 == v7 + 607)))))();
}

uint64_t sub_18CA69868(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  int v7;
  int v8;

  v7 = 599 * (a3 ^ 0x25C);
  v8 = (v7 ^ 0x70D) + a5 == v6 + (v7 ^ 0x55A) - 575;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v8 << 6) | (v8 << 11) | v7)) - 8))();
}

uint64_t sub_18CA698B8(uint64_t a1, int a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  _BOOL4 v8;

  v8 = v4 > v7;
  if (v8 == a2 + 423392210 < (int)(((a4 - 1795) | 0x25D) ^ 0xFA3CB5F4))
    v8 = a2 + 423392210 < v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((3392 * v8) ^ a4)) - 8))();
}

uint64_t sub_18CA6992C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  _QWORD *v5;

  return sub_18CA6980C(a1, (a3 - 1778) | 0x24Cu, 1, *(_DWORD *)(*v5 + 4 * (int)((((a3 - 1778) | 0x24C) ^ 0x9EFFBE78) + a2)), v4, a4);
}

uint64_t sub_18CA69964(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(qword_1E252FB38[((3336 * (*(_DWORD *)(a2 + 4) == 756011385)) | 0x2F6u) - 1] - 4))();
}

uint64_t sub_18CA699A4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0x63F6F77E)
                       - 1632649568
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0xFC);
  return 0;
}

uint64_t sub_18CA699F0()
{
  return 4294925278;
}

uint64_t sub_18CA699F8(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))(qword_1E252FB30[(3952 * (*(_DWORD *)(a2 + 4) == 756011397)) ^ 0x654u] - 12))(4294925278);
}

uint64_t sub_18CA69A40@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 + 96) + 448) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 12);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2 + 7672) - 12))(0);
}

uint64_t sub_18CA69A98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;

  *(_BYTE *)(a1 + (v7 + v4)) = *(_BYTE *)(v3 + (v7 + v4));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * (((v7 - 1 == v2) * v5) ^ v6)) - 12))(0);
}

uint64_t sub_18CA69ACC(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  unsigned int v11;
  uint64_t result;
  unint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v2 = 366490169 * ((162752835 - (a1 | 0x9B36943) + (a1 | 0xF64C96BC)) ^ 0xE0E2C0F8);
  v3 = *(_DWORD *)(a1 + 52) - v2;
  v4 = *(_DWORD *)a1 + v2;
  v5 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_DWORD *)(a1 + 48) + v2;
  if (v4 == 434229062 || v4 == 434229059)
    __asm { BR              X4 }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = 1761959447 * ((&v13 & 0xC03070B9 | ~(&v13 | 0xC03070B9)) ^ 0x9E684E82);
  LODWORD(v13) = v8 + v11 + 1121358314;
  v14 = v7;
  v15 = v10;
  v18 = v6;
  v19 = v5;
  v17 = 1172902865 - v11 + v3 + 521;
  result = off_1E2538470[v3 + 1172902937](&v13);
  *(_DWORD *)(a1 + 24) = v16;
  return result;
}

void sub_18CA6A03C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 8) - 673918253 * ((-2 - ((a1 | 0x4C235D67) + (~(_DWORD)a1 | 0xB3DCA298))) ^ 0x2994B930);
  v2 = *(_QWORD *)a1 - 0x54E96C72700A9BC6;
  v3 = 1401278017 * ((&v4 - 2124654001 - 2 * ((unint64_t)&v4 & 0x815C5A4F)) ^ 0x857F2CA8);
  v4 = *(_QWORD *)a1 + 0x21FF85FDBE00F269;
  v7 = v3 ^ 0x3D71D9FB;
  v5 = v1 - v3 + 135;
  v8 = v2;
  sub_18CA3F150((uint64_t)&v4);
  __asm { BR              X8 }
}

uint64_t sub_18CA6A174()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t result;
  unsigned int v5;
  uint64_t v6;

  v6 = v2 - 0x4C47CABF7A49FB0CLL;
  v5 = v1
     + 1437274309
     * (((&v5 ^ 0x6593819E | 0xC17643A1)
       - (&v5 ^ 0x6593819E)
       + ((&v5 ^ 0x6593819E) & 0x3E89BC5E)) ^ 0x86EBBF0A)
     - 325979973;
  result = sub_18CA83D14((uint64_t)&v5);
  *(_DWORD *)(v0 + 12) = v3;
  return result;
}

void sub_18CA6A220()
{
  uint64_t v0;
  int v1;
  BOOL v2;
  int v3;

  v0 = MEMORY[0x1E0C80A78]();
  if (*(_QWORD *)(v0 + 16))
    v2 = *(_QWORD *)(v0 + 8) == 0x7FBEEC3D5BCBFBD0;
  else
    v2 = 1;
  v3 = v2;
  v1 = *(_DWORD *)(v0 + 24) - 31090337 * (((v0 | 0x4CC87C51) - v0 + (v0 & 0xB33783AE)) ^ 0x8B491C18);
  __asm { BR              X9 }
}

uint64_t sub_18CA6A348@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  int v7;

  v4 = a1 | 0x20C;
  *(_DWORD *)(v3 - 164) = 673918253
                        * ((((v3 - 192) | 0x310F4E71) - (v3 - 192) + ((v3 - 192) & 0xCEF0B188)) ^ 0xAB4755D9)
                        + (a1 | 0x20C)
                        + 1119;
  LOBYTE(STACK[0x1998]) = (45 * ((((v3 + 64) | 0x71) - (v3 + 64) + ((v3 + 64) & 0x88)) ^ 0xD9)) ^ 0x33;
  *(_QWORD *)(v3 - 176) = &STACK[0x18341B1156E52E4F];
  *(_QWORD *)(v3 - 192) = &STACK[0x2677A381FDE3C190];
  v5 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((a1 | 0x20C) ^ 0x336)) - 4);
  STACK[0x328] = v1;
  v6 = v5(v3 - 192);
  v7 = *(_DWORD *)(v3 - 168);
  LODWORD(STACK[0x4F4]) = v7;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x328]
                                                      + 8
                                                      * ((1265 * (v7 == ((v4 + 331) ^ 0x5CCA8C3A) + v4 + 1713)) ^ v4))
                                          - 8))(v6);
}

uint64_t sub_18CA6A454()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  int v7;

  *(_WORD *)(v3 - 172) = 699 - ((v3 - 192) ^ 0x6049) * v0;
  *(_QWORD *)(v3 - 184) = &STACK[0x6C1BF3FFDF60892F];
  *(_DWORD *)(v3 - 192) = ((v3 - 192) ^ 0xC7816049) * v0 + v1 - 51;
  v4 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v1 ^ 0x42B)) - 8))(v3 - 192);
  v5 = STACK[0x328];
  v6 = LOBYTE(STACK[0x52F]);
  v7 = (LOBYTE(STACK[0x52C]) << 24) | (LOBYTE(STACK[0x52D]) << 16) | (LOBYTE(STACK[0x52E]) << 8) | v6;
  LODWORD(STACK[0x4DC]) = v7 - 2 * (v7 & ((103 * (((v1 - 672) | 0x806) ^ 0xA16)) ^ 0x7620B212) ^ v6 & 0xC) - 165627887;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((103 * ((LODWORD(STACK[0x47C]) >> 4) & 1)) ^ v1))
                                          - 8))(v4);
}

void sub_18CA6A5D8()
{
  int v1;

  if (v1 != -177305590 && v1 != 1286764417 && v1 != 1201772637)
    __asm { BR              X8 }
  __asm { BR              X10 }
}

uint64_t sub_18CA6A9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  unsigned int v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  int v57;
  char *v59;

  LOBYTE(STACK[0x573]) = (v49 & 0x20) != 0;
  v54 = v48 + 3;
  if ((v49 & 0x20) != 0)
    v54 = v48;
  LODWORD(STACK[0x410]) = v54;
  if (v51 > 784756679)
  {
    if (v51 > 1667740204)
    {
      if (v51 <= 1792330266)
      {
        if (v51 == 1667740205)
          goto LABEL_50;
        if (v51 != 1678456890)
        {
          v55 = 1715361287;
          goto LABEL_49;
        }
        goto LABEL_46;
      }
      if ((v51 - 1792330267) < 2 || v51 == 1869125738)
        goto LABEL_50;
      v55 = 2070225196;
    }
    else
    {
      if (v51 <= 1201772636)
      {
        if (v51 == 784756680)
          goto LABEL_50;
        if (v51 != 796226571)
        {
          v55 = 1139018120;
          goto LABEL_49;
        }
        goto LABEL_46;
      }
      if (v51 > 1271054006)
      {
        if (v51 != 1271054007)
        {
          v55 = 1286764417;
          goto LABEL_49;
        }
        goto LABEL_46;
      }
      if (v51 == 1201772637)
        goto LABEL_50;
      v55 = 1212756297;
    }
  }
  else if (v51 <= 81679482)
  {
    if (v51 <= -317867730)
    {
      if (v51 == -1981454520 || v51 == -1070309725)
        goto LABEL_50;
      v57 = v52;
      if (v51 != -770881512)
        goto LABEL_9;
      goto LABEL_46;
    }
    if (v51 > 40392668)
    {
      if (v51 == 40392669)
        goto LABEL_50;
      v55 = 76015484;
    }
    else
    {
      if (v51 == -317867729)
        goto LABEL_50;
      v55 = -16651651;
    }
  }
  else
  {
    if (v51 <= 337381132)
    {
      if (v51 <= 188650032)
      {
        if (v51 != 81679483)
        {
          v55 = 83789930;
          goto LABEL_49;
        }
LABEL_50:
        *(_OWORD *)&STACK[0x18C0] = xmmword_18CF0E680;
        return ((uint64_t (*)(void))(*(_QWORD *)(v53
                                              + 8
                                              * (((((v52 - 2575) | 0x53) - 77) * ((v49 & 0x20) == 0)) ^ (v52 + 409)))
                                  - (v52 - 2422)
                                  + 149))();
      }
      if (v51 != 188650033)
      {
        v55 = 227890336;
        goto LABEL_49;
      }
LABEL_46:
      *(_OWORD *)&STACK[0x18C0] = xmmword_18CF0E690;
      return ((uint64_t (*)(void))(*(_QWORD *)(v53
                                            + 8
                                            * (int)(((((v52 - 2509) | 0x11) - 54) * ((v49 >> 5) & 1)) ^ (v52 - 1251)))
                                - 4))();
    }
    if (v51 <= 614514154)
    {
      if (v51 != 337381133)
      {
        v55 = 491132286;
        goto LABEL_49;
      }
      goto LABEL_46;
    }
    if (v51 == 614514155)
      goto LABEL_50;
    v55 = 698327726;
  }
LABEL_49:
  v57 = v52;
  if (v51 == v55)
    goto LABEL_50;
LABEL_9:
  STACK[0x320] = 0;
  v56 = v48 + 4;
  if ((v49 & 0x40) == 0)
    v56 = v48;
  if ((v49 & 2) == 0)
    v56 = v48 - 1;
  LODWORD(STACK[0x594]) = v56;
  LODWORD(STACK[0x2F8]) = 90618867;
  LODWORD(STACK[0x318]) = 2109109598;
  v59 = (char *)&STACK[0x610] + STACK[0x320];
  STACK[0x300] = (unint64_t)(v59 + 2048);
  STACK[0x308] = (unint64_t)(v59 + 2176);
  STACK[0x310] = (unint64_t)(v59 + 2304);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * ((25 * (LODWORD(STACK[0x4F4]) != (v57 ^ 0x9F8) + 1556777107 + ((v57 - 719) | 0x811) - 2361)) ^ (v57 + 760))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           v50,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

void sub_18CA6AD8C()
{
  JUMPOUT(0x18CA6ADA0);
}

void sub_18CA6ADB4()
{
  STACK[0x18B8] = 0x1A79A478F96A4166;
  STACK[0x18B0] = 0x15B0777F8CF4BD8DLL;
  JUMPOUT(0x18CA6ADF8);
}

uint64_t sub_18CA6AF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t (*a42)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t *, unint64_t, _QWORD, unint64_t *),uint64_t a43,uint64_t a44,int a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,unsigned int *a61,uint64_t (*a62)(_QWORD, unint64_t, _QWORD))
{
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  uint64_t v66;

  if (v62 == 1458445580 || v62 == 1458445577)
  {
    LOBYTE(STACK[0x18A7]) = LOBYTE(STACK[0x18BF]) ^ 0x59;
    LOBYTE(STACK[0x18A6]) = LOBYTE(STACK[0x18BE]) ^ 0x59;
    LOBYTE(STACK[0x18A5]) = LOBYTE(STACK[0x18BD]) ^ 0x59;
    LOBYTE(STACK[0x18A4]) = LOBYTE(STACK[0x18BC]) ^ 0x59;
    LOBYTE(STACK[0x18A3]) = LOBYTE(STACK[0x18BB]) ^ 0x59;
    LOBYTE(STACK[0x18A2]) = LOBYTE(STACK[0x18BA]) ^ 0x59;
    LOBYTE(STACK[0x18A1]) = LOBYTE(STACK[0x18B9]) ^ 0x59;
    LOBYTE(STACK[0x18A0]) = LOBYTE(STACK[0x18B8]) ^ 0x59;
    LOBYTE(STACK[0x189F]) = LOBYTE(STACK[0x18B7]) ^ 0x59;
    LOBYTE(STACK[0x189E]) = LOBYTE(STACK[0x18B6]) ^ 0x59;
    LOBYTE(STACK[0x189D]) = LOBYTE(STACK[0x18B5]) ^ 0x59;
    LOBYTE(STACK[0x189C]) = LOBYTE(STACK[0x18B4]) ^ 0x59;
    LOBYTE(STACK[0x189B]) = LOBYTE(STACK[0x18B3]) ^ 0x59;
    LOBYTE(STACK[0x189A]) = LOBYTE(STACK[0x18B2]) ^ 0x59;
    LOBYTE(STACK[0x1899]) = LOBYTE(STACK[0x18B1]) ^ 0x59;
    LOBYTE(STACK[0x1898]) = LOBYTE(STACK[0x18B0]) ^ 0x59;
  }
  v64 = a42(LODWORD(STACK[0x584]), (v62 - 1458445572), a46 ^ 0x3D36C3CEu, LODWORD(STACK[0x4DC]) ^ 0xF620B811, &STACK[0x1898], STACK[0x4C0], LODWORD(STACK[0x3A4]), &STACK[0x600]);
  v65 = ((2 * v64) & 0xFB7FEBFC) + (v64 ^ (((v63 - 2311) | 0x256) + 2109731488));
  v66 = a62(*a61, STACK[0x4C0], LODWORD(STACK[0x3A4]));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x328] + 8
                                                                     * ((1000 * (v65 != 2109732350)) ^ (v63 + 979)))
                                          - 12))(v66);
}

void sub_18CA6B120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;

  v43 = 5 * (v40 ^ 0x15D);
  v44 = 142545853 * ((v42 - 192) ^ 0x2AFFAF6F);
  *(_QWORD *)(v42 - 184) = a40;
  *(_DWORD *)(v42 - 192) = v41 - v44 + (v43 ^ 0xDF0A96AB);
  *(_DWORD *)(v42 - 176) = (v40 + 1596) ^ v44;
  sub_18CA4BFF4((_DWORD *)(v42 - 192));
  *(_DWORD *)(v42 - 192) = 1780978504 - 1697562443 * ((v42 - 192) ^ 0xD7903884) + v43;
  sub_18CA82E1C((_DWORD *)(v42 - 192));
  JUMPOUT(0x18CA6BCBCLL);
}

uint64_t sub_18CA6B180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t (*a39)(uint64_t),uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  int v53;
  char v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  int v58;

  if (v50 == 1458445577 || v50 == 1458445580)
  {
    v53 = (v51 - 815) | 3;
    LOBYTE(STACK[0x1897]) = LOBYTE(STACK[0x60F]) - ((2 * LOBYTE(STACK[0x60F])) & 0xB2) + 89;
    LOBYTE(STACK[0x1896]) = LOBYTE(STACK[0x60E])
                          - ((LOBYTE(STACK[0x60E]) << ((((v51 - 47) | 3) ^ 0xE0) & 0xFD)) & 0xB2)
                          + 89;
    LOBYTE(STACK[0x1895]) = LOBYTE(STACK[0x60D]) - ((2 * LOBYTE(STACK[0x60D])) & 0xB2) + 89;
    LOBYTE(STACK[0x1894]) = LOBYTE(STACK[0x60C]) - ((2 * LOBYTE(STACK[0x60C])) & 0xB2) + 89;
    LOBYTE(STACK[0x1893]) = LOBYTE(STACK[0x60B]) - ((2 * LOBYTE(STACK[0x60B])) & 0xB2) + 89;
    LOBYTE(STACK[0x1892]) = LOBYTE(STACK[0x60A]) - ((2 * LOBYTE(STACK[0x60A])) & 0xB2) + 89;
    LOBYTE(STACK[0x1891]) = LOBYTE(STACK[0x609]) - ((2 * LOBYTE(STACK[0x609])) & 0xB2) + 89;
    LOBYTE(STACK[0x1890]) = LOBYTE(STACK[0x608]) - ((2 * LOBYTE(STACK[0x608])) & 0xB2) + 89;
    LOBYTE(STACK[0x188F]) = LOBYTE(STACK[0x607]) - ((2 * LOBYTE(STACK[0x607])) & 0xB2) + 89;
    LOBYTE(STACK[0x188E]) = LOBYTE(STACK[0x606]) - ((2 * LOBYTE(STACK[0x606])) & 0xB2) + 89;
    LOBYTE(STACK[0x188D]) = LOBYTE(STACK[0x605]) - ((2 * LOBYTE(STACK[0x605])) & 0xB2) + 89;
    LOBYTE(STACK[0x188C]) = LOBYTE(STACK[0x604]) - ((2 * LOBYTE(STACK[0x604])) & 0xB2) + 89;
    LOBYTE(STACK[0x188B]) = LOBYTE(STACK[0x603]) - ((2 * LOBYTE(STACK[0x603])) & 0xB2) + 89;
    LOBYTE(STACK[0x188A]) = LOBYTE(STACK[0x602]) - ((2 * LOBYTE(STACK[0x602])) & 0xB2) + 89;
    LOBYTE(STACK[0x1889]) = LOBYTE(STACK[0x601]) - ((2 * LOBYTE(STACK[0x601])) & 0xB2) + 89;
    v50 = STACK[0x594];
    v54 = LOBYTE(STACK[0x600]) - ((2 * LOBYTE(STACK[0x600])) & 0xB2) + 89;
  }
  else
  {
    v53 = (v51 - 1614246432) & 0x60376EF3;
    LOBYTE(STACK[0x1897]) = STACK[0x18BF];
    LODWORD(STACK[0x1893]) = STACK[0x18BB];
    STACK[0x188B] = STACK[0x18B3];
    LOWORD(STACK[0x1889]) = STACK[0x18B1];
    v54 = STACK[0x18B0];
  }
  LOBYTE(STACK[0x1888]) = v54;
  v55 = STACK[0x4B0];
  v56 = 1314530549 * ((((v52 - 192) | 0x1689A6AE) - ((v52 - 192) & 0x1689A6AE)) ^ 0xA7802060);
  *(_DWORD *)(v52 - 152) = ((LODWORD(STACK[0x414]) ^ 0xFFACDF37)
                          + 1853877724
                          + ((2 * LODWORD(STACK[0x414])) & 0xFF59BE6E)) ^ v56;
  *(_QWORD *)(v52 - 160) = v55;
  LOBYTE(STACK[0x19A4]) = -11 * ((((v52 + 64) | 0xAE) - ((v52 + 64) & 0xAE)) ^ 0x60) + 28;
  *(_QWORD *)(v52 - 192) = &STACK[0x574];
  *(_QWORD *)(v52 - 184) = &STACK[0x1888];
  *(_DWORD *)(v52 - 168) = v56 + v53 - 1016;
  *(_DWORD *)(v52 - 176) = (v50 - 343170207 + ((v53 - 185465733) & 0xB0DF7FF) + 687) ^ v56;
  *(_QWORD *)(v52 - 144) = v49;
  *(_QWORD *)(v52 - 136) = a49;
  v57 = a39(v52 - 192);
  v58 = *(_DWORD *)(v52 - 164);
  LODWORD(STACK[0x4F4]) = v58;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x328] + 8 * ((448 * (v58 == 1556779682)) ^ v53)) - 8))(v57);
}

uint64_t sub_18CA6B468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53)
{
  uint64_t v53;
  unsigned int v54;

  return ((uint64_t (*)(void))(*(_QWORD *)(v53 + 8 * ((3451 * (LODWORD(STACK[0x574]) - a53 != -2072106409)) ^ v54))
                            - 8))();
}

void sub_18CA6B4A0()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x4F4]) = 1556737280;
  *(_DWORD *)(v1 - 192) = 1780978504 - 1697562443 * ((v1 - 192) ^ 0xD7903884) + ((v0 + 1188) | 0x20D);
  sub_18CA82E1C(v1 - 192);
  JUMPOUT(0x18CA6BCBCLL);
}

void sub_18CA6B4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,unsigned int *a60,void (*a61)(_QWORD, unint64_t, _QWORD))
{
  a61(*a60, STACK[0x4B0], LODWORD(STACK[0x414]));
  JUMPOUT(0x18CA6BC80);
}

uint64_t sub_18CA6B4E4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;

  v3 = ((uint64_t (*)(void))STACK[0x208])();
  v4 = STACK[0x328];
  LODWORD(STACK[0x358]) = v0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * ((((v1 + 722) ^ 0xD22) * v2) ^ (v1 + 721))) - 4))(v3);
}

void sub_18CA6B528()
{
  int v0;

  LODWORD(STACK[0x4F4]) = v0;
  JUMPOUT(0x18CA6B534);
}

uint64_t sub_18CA6B584@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x358]) = v2;
  STACK[0x380] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (a1 ^ (8 * (((a1 + 110) ^ (*(_DWORD *)STACK[0x200] == 0)) & 1))))
                            - 8))();
}

uint64_t sub_18CA6B5C8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t (*a65)(uint64_t);
  int v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;

  v67 = a1 - 1412;
  STACK[0x398] = 0;
  v68 = 1761959447 * ((v66 + 1218283671 - 2 * ((v66 - 192) & 0x489D8957)) ^ 0xE93A4893);
  *(_QWORD *)(v66 - 168) = a63;
  *(_QWORD *)(v66 - 192) = 0x7C59E15C5284905ELL;
  *(_QWORD *)(v66 - 184) = a62;
  *(_DWORD *)(v66 - 160) = -1678937309 - v68;
  *(_DWORD *)(v66 - 156) = v68 + v67 - 259;
  v69 = a65(v66 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x328]
                                                      + 8
                                                      * ((((v67 ^ (*(_DWORD *)(v66 - 176) == v65)) & 1)
                                                        * (v67 - 1582)) ^ v67))
                                          - 8))(v69);
}

uint64_t sub_18CA6B684()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((LODWORD(STACK[0x36C]) - 756013433 < ((v0 - 420) ^ 0xFFFFFFD6))
                                          * (((v0 - 2496) | 0xA02) - 2329)) ^ (v0 - 358)))
                            - 8))();
}

uint64_t sub_18CA6B6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,unsigned int *a60,void (*a61)(_QWORD, unint64_t *, uint64_t))
{
  int v61;
  int v62;
  int v63;

  a61(*a60, &STACK[0x380], 2048);
  v63 = ((uint64_t (*)(_QWORD, unint64_t *, _QWORD, uint64_t))off_1E2538470[v61 ^ 0x832])(*a60, &STACK[0x490], (LODWORD(STACK[0x36C]) + v62), 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x328]
                                        + 8
                                        * ((232
                                          * (((v63 << (((v61 - 30) | 4) - 14)) & 0xF7EF7F6C) + (v63 ^ 0xFBF7BFB6) == -67649610)) ^ v61))
                            - 8))();
}

uint64_t sub_18CA6B77C()
{
  int v0;
  uint64_t v1;
  unsigned int v2;

  STACK[0x380] = STACK[0x490];
  v2 = ((v0 + 486) ^ 0xBFA)
     + LODWORD(STACK[0x36C])
     - ((2 * LODWORD(STACK[0x36C]) - 1512022768) & 0xBCE771EC)
     - 1318853239;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1456
                                          * (((2 * v2) & 0xB6FD469C ^ 0xB4E5408C) + (v2 ^ 0x850D1BB8) - 2760772 != 1532265226)) ^ v0))
                            - 8))();
}

uint64_t sub_18CA6B840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                          + 8
                                                                                          * (((((v3 + 20) | 0x806) - 1780)
                                                                                            * ((v5 + v4 - 1535025998) > 7)) ^ v3))
                                                                              - 8))(a1, a2, a3, 2762702069, 1532265226);
}

uint64_t sub_18CA6B898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((2823 * (v1 - a1 >= (v2 ^ 0x1D5uLL))) ^ v2))
                            - ((v2 + 980) ^ 0x5C1)))();
}

uint64_t sub_18CA6B8DC(int a1)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((27 * (v1 < (((a1 ^ 0xE5B) - 355) ^ (a1 + 1094)))) ^ a1))
                            - 8))();
}

uint64_t sub_18CA6B914@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v8 = -v5;
  v9 = v3 + v8 + (((v6 ^ 0xCE) - 123336551) & 0x759EDFF ^ (a1 + 11));
  *(_QWORD *)(a2 - 7 + v9) = *(_QWORD *)(v2 - 7 + v9);
  return (*(uint64_t (**)(void))(v7 + 8 * ((206 * ((((v6 ^ 0xCE) - 2916) & v4) + v8 != 8)) ^ v6 ^ 0xCE)))();
}

void sub_18CA6B980()
{
  JUMPOUT(0x18CA6B944);
}

uint64_t sub_18CA6B988(unsigned int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)(((103 * (a1 ^ 0x1EC) - 827) * (v1 == v2)) ^ a1))
                            - (a1 ^ 0x1FDLL)))();
}

uint64_t sub_18CA6B9C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v7 = v5 - 1535025999 + v4;
  v8 = v1 + v7;
  v9 = *(_OWORD *)(v8 - 31);
  v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((4 * ((v2 & 0xFFFFFFE0) == 32)) | (((v2 & 0xFFFFFFE0) == 32) << 6)) ^ (v3 + 521)))
                            - ((v3 - 736651880) & 0x2BE86779)
                            + 1813))();
}

void sub_18CA6BA3C()
{
  JUMPOUT(0x18CA6B9F0);
}

uint64_t sub_18CA6BA48()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (14 * (v0 != v1))))
                            - (((v2 + 231) | 0x207u) ^ 0xA07)))();
}

uint64_t sub_18CA6BA7C()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1063 * ((((v0 & 0x18) == 0) ^ (v1 + 114)) & 1)) ^ (v1 - 1324)))
                            - 8))();
}

uint64_t sub_18CA6BACC@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(a3 + (v5 + a1)) = *(_BYTE *)(v3 + (v5 + a1));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v5 - 1 == a2) * v6) ^ (v4 + 973))) - 12))();
}

uint64_t sub_18CA6BB00()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((2178 * (STACK[0x398] != 0)) | (v0 - 1755))) - 4))();
}

uint64_t sub_18CA6BB38()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x358]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v1 + 722) ^ 0xD22) * v2) ^ (v1 + 721))) - 4))();
}

uint64_t sub_18CA6BB68@<X0>(int a1@<W8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;

  LODWORD(STACK[0x3F4]) = STACK[0x2F8];
  LODWORD(STACK[0x4F0]) = STACK[0x318];
  STACK[0x3E0] = STACK[0x300];
  STACK[0x3B8] = STACK[0x308];
  STACK[0x3D8] = STACK[0x310];
  STACK[0x468] = v2;
  LODWORD(STACK[0x528]) = 2;
  STACK[0x540] = 0;
  LODWORD(STACK[0x37C]) = 0;
  LODWORD(STACK[0x51C]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((((5 * (a1 ^ 0xEE2)) ^ 0xA0D) & v1) == 0) * (103 * (a1 ^ 0xCF8) - 2554)) ^ a1))
                            - 8))();
}

void sub_18CA6BBF8()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char *v4;

  LODWORD(STACK[0x524]) = 1315051280;
  LODWORD(STACK[0x44C]) = 1178486304;
  LODWORD(STACK[0x298]) = (LODWORD(STACK[0x37C]) ^ 0xFF5FD5FC)
                        + 766507900
                        + (((v0 + 383763676) & 0xE9203BF6 ^ 0xFEBFA11A) & (2 * LODWORD(STACK[0x37C])));
  STACK[0x4A0] = v2;
  STACK[0x558] = v1;
  v4 = (char *)&STACK[0x610] + v3;
  STACK[0x428] = (unint64_t)&STACK[0x610] + v3;
  STACK[0x500] = (unint64_t)&STACK[0x610] + v3 + 128;
  *(_QWORD *)v4 = 0x6370646600;
  v4[8] = 1;
  JUMPOUT(0x18CA6BF70);
}

uint64_t sub_18CA6BC20()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((109 * (STACK[0x4C0] == 0)) ^ ((v0 ^ 0x9F8) - 1756)))
                            - ((2 * (v0 ^ 0x9F8u)) ^ 0x1416)))();
}

void sub_18CA6BC64()
{
  JUMPOUT(0x18CA6BC78);
}

uint64_t sub_18CA6BD00()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  LODWORD(STACK[0x3F4]) = STACK[0x2F8];
  LODWORD(STACK[0x4F0]) = STACK[0x318];
  STACK[0x3E0] = STACK[0x300];
  STACK[0x3B8] = STACK[0x308];
  STACK[0x3D8] = STACK[0x310];
  v3 = ((2 * (v0 & 0xCC5863D1)) ^ 0xEA2) + STACK[0x320];
  ++*(_DWORD *)(v1 + 52);
  LODWORD(STACK[0x594]) = *(_DWORD *)(v1 + 360);
  STACK[0x320] = v3 - 2432;
  STACK[0x468] = v3 - 2432;
  LODWORD(STACK[0x4F4]) = 1556779682;
  LODWORD(STACK[0x318]) = STACK[0x4F0];
  LODWORD(STACK[0x2F8]) = STACK[0x3F4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((STACK[0x4A8] == 0)
                                               * (((((2 * (v0 & 0xCC5863D1)) ^ 0x6E6) - 1235287237) & 0x49A0FFDE) + 132)) ^ (2 * (v0 & 0xCC5863D1)) ^ 0x6E6))
                            - 8))();
}

void sub_18CA6BD58()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char *v5;

  LODWORD(STACK[0x3F4]) = STACK[0x2F8];
  v2 = (v1 ^ 0xA92u) + 383;
  LODWORD(STACK[0x4F0]) = STACK[0x318];
  STACK[0x3E0] = STACK[0x300];
  STACK[0x3B8] = STACK[0x308];
  STACK[0x3D8] = STACK[0x310];
  v3 = STACK[0x320] + v2 + 1186;
  LODWORD(STACK[0x358]) = v0;
  v4 = v3 - 5007 + 103 * (v2 ^ 0x4C7);
  STACK[0x320] = v4;
  STACK[0x468] = v4;
  LODWORD(STACK[0x4F4]) = v0;
  LODWORD(STACK[0x318]) = STACK[0x4F0];
  LODWORD(STACK[0x2F8]) = STACK[0x3F4];
  v5 = (char *)&STACK[0x610] + STACK[0x320];
  STACK[0x300] = (unint64_t)(v5 + 2048);
  STACK[0x308] = (unint64_t)(v5 + 2176);
  STACK[0x310] = (unint64_t)(v5 + 2304);
  JUMPOUT(0x18CA6B534);
}

uint64_t sub_18CA6BDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  int v38;
  char *v39;

  *(_DWORD *)(STACK[0x200] + 360) = 1458445574;
  v35 = ((uint64_t (*)(uint64_t, uint64_t, unint64_t *, unint64_t, _QWORD, uint64_t, unint64_t *, unint64_t *))off_1E2538470[v27 ^ 0xADC])(v30, 2, &STACK[0x528], STACK[0x380], (v32 - 756011384), a6, &STACK[0x540], &STACK[0x37C]);
  v36 = STACK[0x328];
  v37 = ((2 * v35) & 0xDDFF7E30) + (v35 ^ 0xEEFFBF18);
  LODWORD(STACK[0x524]) = v37 + 1600280568;
  if (v37 == -285229288)
  {
    LODWORD(STACK[0x44C]) = 1178486304;
    LODWORD(STACK[0x298]) = (LODWORD(STACK[0x37C]) ^ 0xFF5FD5FC)
                          + 766507900
                          + (((v33 + 383763676) & 0xE9203BF6 ^ 0xFEBFA11A) & (2 * LODWORD(STACK[0x37C])));
    STACK[0x4A0] = v29;
    STACK[0x558] = v28;
    v39 = (char *)&STACK[0x610] + v31;
    STACK[0x428] = (unint64_t)&STACK[0x610] + v31;
    STACK[0x500] = (unint64_t)&STACK[0x610] + v31 + 128;
    *(_QWORD *)v39 = 0x6370646600;
    v39[8] = 1;
    JUMPOUT(0x18CA6BF70);
  }
  if (v37 == -16793829)
  {
    LODWORD(STACK[0x358]) = 1556737498;
  }
  else
  {
    v38 = 142545853 * (((((v34 - 192) | 0x6A34E964) ^ 0xFFFFFFFE) - (~(v34 - 192) | 0x95CB169B)) ^ 0xBF34B9F4);
    *(_DWORD *)(v34 - 192) = v37 - v38 + 1842008970;
    *(_QWORD *)(v34 - 184) = a27;
    *(_DWORD *)(v34 - 176) = (v33 - 117) ^ v38;
    v35 = sub_18CA4BFF4((_DWORD *)(v34 - 192));
    v36 = STACK[0x328];
  }
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v36 + 8 * ((246 * (STACK[0x540] != 0)) ^ (v33 + 362)))
                                          - ((v33 - 1049061904) & 0x3E87635F)
                                          - ((979 * (v33 ^ 0xA0Cu)) ^ 0xFFFFFFFFFFFFF7D4)))(v35);
}

uint64_t sub_18CA6C25C()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  unsigned int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(void);

  LODWORD(STACK[0x18A8]) = v1;
  LODWORD(STACK[0x18AC]) = 195560750;
  v4 = *(_DWORD **)(v2 + 8 * (v0 ^ 0xB1C));
  STACK[0x268] = (unint64_t)v4;
  LODWORD(STACK[0x368]) = *v4;
  v5 = *(unsigned int **)(v2 + 8 * (v0 ^ 0xA62));
  STACK[0x290] = (unint64_t)v5;
  v6 = *v5;
  v7 = 673918253 * ((0xCD94925F34D3A7ACLL - ((v3 - 192) | 0xCD94925F34D3A7ACLL) + STACK[0x250]) ^ 0x7C024165516443FBLL);
  *(_DWORD *)(v3 - 184) = v0 + 1067119325 - v7;
  *(_QWORD *)(v3 - 192) = -(uint64_t)v7;
  *(_DWORD *)(v3 - 168) = v7;
  *(_DWORD *)(v3 - 164) = v7 + v0 + 1067119325 + 22;
  *(_DWORD *)(v3 - 156) = (v0 + 1067119571) ^ v7;
  *(_DWORD *)(v3 - 152) = v7 + v0 + 2126728701;
  *(_QWORD *)(v3 - 176) = v6 - v7;
  ((void (*)(uint64_t))STACK[0x258])(v3 - 192);
  v8 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x328] + 8 * *(int *)(v3 - 160)) - 12);
  STACK[0x318] = *(_QWORD *)(v2 + 8 * (v0 - 2301)) - 4;
  return v8();
}

uint64_t sub_18CA6C370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a67;
  uint64_t a68;
  unsigned int *v68;
  uint64_t (*v69)(uint64_t);
  uint64_t v70;
  int v71;
  unsigned int v72;
  unint64_t v73;

  STACK[0x310] = v69(a68);
  v72 = (*(uint64_t (**)(void))(v70 + 8 * a67))();
  v73 = STACK[0x328];
  *v68 = v72;
  v68[1] = 1812433253 * (v72 ^ (v72 >> 30)) + 1;
  return (*(uint64_t (**)(void))(v73 + 8 * (v71 + 588)))();
}

void sub_18CA6C3F0()
{
  JUMPOUT(0x18CA6C3C0);
}

uint64_t sub_18CA6C404@<X0>(int a1@<W8>)
{
  int v1;
  char v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BYTE *v8;
  unsigned int v9;
  unint64_t v10;
  char v11;
  char v12;

  v8 = (_BYTE *)(v5 + (((a1 ^ 0x723) - 1093873387) & 0x41332E6F ^ 0xC05B9C94) + v6);
  v9 = 1554976193
     * ((v8 ^ *(_DWORD *)(*(_QWORD *)STACK[0x2E0] + (*(_DWORD *)STACK[0x2D8] & 0x72E3224))) & 0x7FFFFFFF);
  v10 = (v9 ^ HIWORD(v9)) * ((a1 ^ 0x723) + 1554973495);
  v11 = *(_BYTE *)(*(_QWORD *)(v4 + 8 * (a1 ^ 0xD10)) + (v10 >> 24) - 8);
  v12 = *(_BYTE *)(*(_QWORD *)(v4 + 8 * ((a1 ^ 0x723) - 2602)) + (v10 >> 24) - 12) ^ *(_BYTE *)(*(_QWORD *)(v4 + 8 * (a1 ^ 0xDF5))
                                                                                                + (v10 >> 24)
                                                                                                - 7);
  LOBYTE(v10) = v10 ^ (57 * BYTE3(v10));
  *v8 = v11 ^ ((v1 ^ v3) >> (v2 - 70)) ^ v12 ^ v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((104
                                          * (v6
                                           - (((v11 ^ ((v1 ^ v3) >> (v2 - 70)) ^ v12) ^ v10) != 0) != 1067739492)) ^ a1 ^ 0x723))
                            - 8))();
}

uint64_t sub_18CA6CFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t (*a47)(void))
{
  unint64_t v47;

  STACK[0x458] = v47;
  STACK[0x390] = STACK[0x310];
  return a47();
}

uint64_t sub_18CA6CFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  unint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  BOOL v77;
  char v78;

  STACK[0x260] = v71;
  v74 = 101 * (v72 ^ 0xA1Eu);
  v75 = STACK[0x500];
  STACK[0x5A0] = *(_QWORD *)(v73 + 8 * (v72 - 2348)) + v74 - 1725;
  v76 = ((unint64_t)&STACK[0x370] ^ 0x7E577D51DFC3FB36)
      - 0x2451285188400024
      + ((2 * (_QWORD)&STACK[0x370]) & 0xFCAEFAA3BF87F660);
  STACK[0x240] = (unint64_t)&STACK[0x677];
  STACK[0x250] = v76;
  STACK[0x230] = v76 + 255;
  LODWORD(STACK[0x2D0]) = v72 + 770787467;
  LODWORD(STACK[0x220]) = v72 ^ 0xA59;
  STACK[0x468] = a71 + 112;
  STACK[0x388] = a46;
  if (a46)
    v77 = v75 == 0;
  else
    v77 = 1;
  v78 = v77;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v73
                                                                                         + 8
                                                                                         * (int)((2873
                                                                                                * (((101 * (v72 ^ 0x1E) + 34) ^ 0xD8 ^ v78) & 1)) ^ v74))
                                                                             - 4))(v75, 129, 3488, (__n128)0);
}

uint64_t sub_18CA6D108(uint64_t a1, __n128 a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v5 = (char *)&STACK[0x610] + v3;
  *(_DWORD *)v5 = 2121765338;
  *((_QWORD *)v5 + 1) = 0;
  *((_DWORD *)v5 + 4) = 44480030;
  *((_DWORD *)v5 + 6) = 756011384;
  *((_QWORD *)v5 + 4) = 0;
  *(_DWORD *)((char *)&STACK[0x610] + v3 + 40) = 756011384;
  STACK[0x400] = (unint64_t)&STACK[0x610] + v3 + 40;
  *(unint64_t *)((char *)&STACK[0x610] + v3 + 48) = 0;
  STACK[0x598] = (unint64_t)&STACK[0x610] + v3 + 48;
  *(_DWORD *)((char *)&STACK[0x610] + v3 + 56) = 756011384;
  STACK[0x548] = (unint64_t)&STACK[0x610] + v3 + 56;
  *(unint64_t *)((char *)&STACK[0x610] + v3 + 64) = 0;
  STACK[0x450] = (unint64_t)&STACK[0x610] + v3 + 64;
  *(_DWORD *)((char *)&STACK[0x610] + v3 + 72) = 756011384;
  STACK[0x530] = (unint64_t)&STACK[0x610] + v3 + 72;
  *(unint64_t *)((char *)&STACK[0x610] + v3 + 80) = 0;
  STACK[0x470] = (unint64_t)&STACK[0x610] + v3 + 80;
  v5[88] = 55;
  *(_DWORD *)a1 = 2121765338;
  *(__n128 *)(a1 + 4) = a2;
  *(_DWORD *)(a1 + 20) = 0;
  *(_DWORD *)(a1 + 24) = 756011384;
  *(_DWORD *)(a1 + 28) = 1882204253;
  STACK[0x2C8] = a1 + 28;
  *(__n128 *)(a1 + 436) = a2;
  *(__n128 *)(a1 + 452) = a2;
  *(_QWORD *)(a1 + 468) = 0;
  *(_DWORD *)(a1 + 232) = 1882204253;
  STACK[0x2B0] = a1 + 232;
  strcpy((char *)(a1 + 1128), "YYYYYYYYYYYYYYYYYYYY");
  *(_BYTE *)(a1 + 1149) = 0;
  *(_WORD *)(a1 + 1150) = 0;
  *(__n128 *)(a1 + 1152) = a2;
  *(__n128 *)(a1 + 1168) = a2;
  *(__n128 *)(a1 + 1184) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v2 & 0x34194E7E)) - (((v2 & 0x34194E7Eu) - 3123) ^ 0x227)))();
}

void sub_18CA6D240()
{
  JUMPOUT(0x18CA6D210);
}

uint64_t sub_18CA6D248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  int v64;
  uint64_t v65;
  uint64_t v66;

  STACK[0x468] = v66 - 112;
  STACK[0x320] = *(_QWORD *)(v65 + 8 * (v64 ^ 0xA1B)) - 8;
  return a9(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_18CA6D274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;

  *(_DWORD *)(a1 + 1424) = 1290064275;
  *(_DWORD *)(a1 + 1428) = 1531188517;
  *(_QWORD *)(a1 + 1432) = v65;
  *(_QWORD *)(a1 + 1440) = v65;
  *(_DWORD *)(a1 + 1448) = v66;
  *(__n128 *)(a1 + 1452) = a9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 8 * ((3326 * (((v64 + 922551315) & 0xC902F9FD) == 100)) ^ v64)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_18CA6D2E0@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(__n128 *)(v2 + v4) = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 + a1 == 100) * v5) ^ v3)))();
}

uint64_t sub_18CA6D304@<X0>(unint64_t a1@<X0>, int a2@<W6>, unsigned int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  int v10;

  *(_QWORD *)(a1 + 1516) = v3;
  *(_QWORD *)(a1 + 1524) = v3;
  *(_DWORD *)(a1 + 1532) = v4;
  *(_QWORD *)(v6 + 96) = a1;
  STACK[0x290] = a1;
  *(_DWORD *)(a1 + 476) = 2065295839;
  STACK[0x310] = STACK[0x388];
  v8 = STACK[0x468];
  v9 = (char *)&STACK[0x610] + STACK[0x468];
  STACK[0x2E8] = STACK[0x468];
  STACK[0x2D8] = v8 + (a3 ^ 0x184);
  STACK[0x320] = (unint64_t)v9;
  STACK[0x2A0] = (unint64_t)(v9 + 392);
  STACK[0x268] = v6;
  STACK[0x2E0] = v6;
  v10 = (a3 ^ 0xAB0) - 1883;
  STACK[0x308] = *(_QWORD *)(v7 + 8 * (int)a3) - 8;
  STACK[0x468] = STACK[0x2D8];
  LODWORD(STACK[0x588]) = 1575424071;
  LODWORD(STACK[0x300]) = -662643056;
  LODWORD(STACK[0x318]) = -1924046091;
  LODWORD(STACK[0x364]) = 756011384;
  STACK[0x550] = 0;
  LODWORD(STACK[0x520]) = 1722800633;
  *(_DWORD *)STACK[0x320] = a2;
  LODWORD(STACK[0x2F0]) = (v10 ^ 0x2F92244D) + 731295463;
  LODWORD(STACK[0x2F8]) = 1071997442;
  LODWORD(STACK[0x298]) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v10 ^ 0x5CE)) - 4))();
}

uint64_t sub_18CA6D478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((((v8 - 2399) | 0x210) ^ 0x46C) * (v9 == a8)) ^ v8))
                            - (v8 - 1575)
                            + 1910))();
}

uint64_t sub_18CA6D4B8()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((54
                                * ((((v0 ^ 0xD2F028DD) + v1) & ((v0 - 1609597021) & 0x5FF07F7F ^ 0xFFFFFA85))
                                 - LODWORD(STACK[0x298]) == -756011384)) ^ v0)))();
}

uint64_t sub_18CA6D51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  unsigned int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((230 * ((((v8 - 654157189) ^ (v7 == a7)) & 1) == 0)) ^ v8)) - 4))();
}

uint64_t sub_18CA6D568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  _BOOL4 v12;

  v12 = LODWORD(STACK[0x520]) - v9 == 966789249 && v8 != (((v7 + 779) | 0x520) ^ (a7 - 668));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((230 * v12) ^ v7)) - 4))();
}

uint64_t sub_18CA6D5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  _DWORD *v14;
  _DWORD *v15;
  int v16;

  v13 = (v8 - 121) | 0x8A4;
  v14 = (_DWORD *)STACK[0x320];
  *v14 = v9 - 1;
  v15 = &v14[6 * (v9 - 1881757818)];
  v16 = v15[2];
  STACK[0x310] = *((_QWORD *)v15 + 2);
  LODWORD(STACK[0x520]) = v15[6];
  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8 * ((*(_DWORD *)(v10 + (a5 + v16 + 3770) * (uint64_t)v11 + 36) != a8) ^ v13))
                            - ((((v13 - 3203) | 0x208u) + 1101) ^ ((v13 - 1840) | 0x10Au))))();
}

uint64_t sub_18CA6D684()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v3 = (v0 ^ 0x814) + LODWORD(STACK[0x520]) + 48287745;
  v4 = ((v1 + 1015080940) < 0x6990B964) ^ (v3 < 0x6990B964);
  v5 = v3 < v1 + 1015080940;
  if (v4)
    v5 = (v1 + 1015080940) < 0x6990B964;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((!v5 * (v0 - 1700)) ^ v0)) - 8))();
}

uint64_t sub_18CA6D6F4@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _BOOL4 v7;

  v7 = *(_DWORD *)(v4 + (((v3 + 828) ^ 0x993 ^ (a1 + 922) ^ (v3 + 830)) + v2) * (uint64_t)v5 + 36) == a2;
  return (*(uint64_t (**)(void))(v6 + 8 * (((2 * v7) | (4 * v7)) ^ (v3 + 828))))();
}

uint64_t sub_18CA6D750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  _BOOL4 v13;

  v13 = v8 == 1556779682 && v10 != a8 + ((v9 - 2235) | 0x128) - 809;
  return (*(uint64_t (**)(void))(v11 + 8 * ((v13 * ((v9 ^ 0x5F8) - 2306)) ^ v9)))();
}

uint64_t sub_18CA6D7A0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((58
                                          * ((*(_BYTE *)(v5 + (((v4 - 1333) ^ a4) + v7) * (uint64_t)v6 + 40) & 8) == 0)) | v4))
                            - ((v4 - 2782) | 0x280u)
                            + 1754))();
}

uint64_t sub_18CA6D7E8@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  _BOOL4 v9;
  int v10;

  v6 = *(_DWORD *)(v3 + v2 * (uint64_t)v4 + 36);
  v7 = ((a2 + 2142) ^ 0x222B6662) + v6;
  v9 = v7 > ((2 * a2) ^ 0x770) + 223434782 || v7 < SLODWORD(STACK[0x318]);
  v10 = !v9;
  if (v6 == a1)
    v10 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((485 * v10) ^ a2)) - 4))();
}

uint64_t sub_18CA6D850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;

  v9 = v6 - 1939;
  if (v7)
    v10 = 1556779682;
  else
    v10 = a6 + 5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((2477 * (v10 == 5 * (v9 ^ 0x12A) + 1556777107)) ^ v9)) - 4))();
}

void sub_18CA6DFE8()
{
  JUMPOUT(0x18CA6D42CLL);
}

uint64_t sub_18CA6DFF4()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = *(unsigned __int8 *)STACK[0x550]
     - (*(_BYTE *)(*(_QWORD *)(v1 + v2 * (uint64_t)v3 + 24) - 0x3BB27C11B53E30ECLL) - 40);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((2141
                                          * (((2 * v5) & 0xFD5ECF1E) + (v5 ^ 0x7EAF678F) == ((((v0 - 2101268143) & 0x7D3ECF6D)
                                                                                            - 223) | 0x20)
                                                                                          + 2125423909)) ^ (v0 - 2101268143) & 0x7D3ECF6D))
                            - 4))();
}

uint64_t sub_18CA6E0B0()
{
  unint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;
  unint64_t v5;
  int v6;
  _BOOL4 v7;

  v4 = v0 < 0xDE28C999;
  v5 = v1 - 0x61F4694D5F949DA8 + (v2 ^ 0x143u);
  v6 = v4 ^ (v5 < 0xDE28C999);
  v7 = v5 < v0;
  if (!v6)
    v4 = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3664 * !v4) ^ v2)) - 8))();
}

void sub_18CA6E118()
{
  JUMPOUT(0x18CA6E03CLL);
}

uint64_t sub_18CA6E124()
{
  STACK[0x468] = STACK[0x2E8];
  return ((uint64_t (*)(void))STACK[0x308])();
}

uint64_t sub_18CA6E140()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v1 - 2529) ^ (771 * (v2 == v0))))
                            - (STACK[0x2D0] & 0xD20EAD7D ^ 0x10)))();
}

void sub_18CA6E178()
{
  unint64_t *v0;

  v0 = (unint64_t *)STACK[0x598];
  STACK[0x2E0] = STACK[0x2C8];
  STACK[0x310] = *v0;
  JUMPOUT(0x18CA6D380);
}

uint64_t sub_18CA6E204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  int v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  int v75;

  v73 = STACK[0x290];
  *(_QWORD *)(v73 + 1560) = *(_QWORD *)STACK[0x470];
  *(_DWORD *)(v73 + 1552) = *(_DWORD *)STACK[0x530];
  v74 = STACK[0x268];
  *(_QWORD *)(*(_QWORD *)(STACK[0x268] + 96) + 488) = *(_QWORD *)(STACK[0x268] + 8);
  v75 = (v71 - 2319) | 0x51;
  *(_DWORD *)(*(_QWORD *)(v74 + 96) + 480) = *(_DWORD *)((char *)&STACK[0x610] + a71);
  *(_BYTE *)(STACK[0x240] + a71) = ((STACK[0x250] + (((v75 - 76) | 0xB0) ^ 0x5B)) ^ 0xBA) * STACK[0x230];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v72 + 8 * (v75 ^ 0xD1)) - 4))(91);
}

uint64_t sub_18CA6E2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  STACK[0x370] = 104 - a9;
  v67 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x5A0];
  STACK[0x468] = v66 - 112;
  STACK[0x320] = *(_QWORD *)(v65 + 8 * (((v64 - 1202) | 0x80C) ^ 0xA1B)) - 8;
  return v67(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_18CA6E30C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * ((((9 * LODWORD(STACK[0x220])) ^ 0x317) * (v2 == v0)) ^ (v1 - 1801)))
                            - 8))();
}

uint64_t sub_18CA6E33C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x500];
  STACK[0x3A8] = STACK[0x500];
  STACK[0x488] = 0;
  LODWORD(STACK[0x43C]) = 756011384;
  STACK[0x3E8] = 0;
  LODWORD(STACK[0x49C]) = 756011384;
  STACK[0x338] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8
                                             * ((((5 * (((a1 + 1286) | 0x203) ^ 0x80C)) ^ 0x25F) * (v2 != 0)) | a1))
                            - 8))();
}

uint64_t sub_18CA6E3A4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(unint64_t, uint64_t))(*(_QWORD *)(v3
                                                                        + 8
                                                                        * ((163
                                                                          * ((((91 * (v0 ^ 8)) ^ 0x64)
                                                                                             + *(_BYTE *)(v1 + 32)
                                                                                             - *(_BYTE *)(*(_QWORD *)(v2 + 8 * (v0 ^ 0xAC0)) - 8)) == 231)) ^ (v0 + 808)))
                                                            - ((v0 - 1805) ^ 0x306)))(0xD9773399F4355E47, 100);
}

uint64_t sub_18CA6E450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, unsigned __int8 a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v9 == (((v8 + a5) ^ a7) & 0x3F)) * a8) ^ v8))
                            - ((v8 + 1938) ^ 0xA07)))();
}

void sub_18CA6E484()
{
  JUMPOUT(0x18CA6E404);
}

uint64_t sub_18CA6E494()
{
  int v0;
  unint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  STACK[0x2E8] = v1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * (((((v2 - 2427) | 0x602) ^ 0x3DD) * (v3 == v0)) ^ (v2 - 2171)))
                                          - 8))(103);
}

uint64_t sub_18CA6E50C@<X0>(char a1@<W0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  int v7;
  uint64_t v8;
  int v9;

  v9 = (*(_BYTE *)(STACK[0x338] + 1516 + v3 + 0x52BC1164853CE537) ^ ((((a2 + 112) | v4) ^ v6) * a1) ^ v5)
     - (*(_BYTE *)(STACK[0x4E0] + v3 + 0x52BC1164853CE537) - 86);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((a2 - 1298) | (16 * ((v7 & (2 * v9)) + (v9 ^ v2) != v2)))) - 8))();
}

uint64_t sub_18CA6E584()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((61
                                          * (((v1 - 1298) ^ v3) + v0 == ((v1 - 1465) ^ (unint64_t)(v2 + 95)))) ^ v1))
                            - 4))();
}

uint64_t sub_18CA6E5C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1976
                                          * ((((v2 + 1208042744) ^ ((*(_BYTE *)(a2 + a1)
                                                                                    - **(_BYTE **)(v3
                                                                                                 + 8
                                                                                                 * ((v2 + 1805) ^ 0xAE3))
                                                                                    + 25) == ((v2 + 13) ^ 0xE8))) & 1) == 0)) ^ (v2 + 2211)))
                            - 12))();
}

uint64_t sub_18CA6E6C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8 * (((((v8 == 2) ^ ((v9 & a3) + a6)) & 1) * a8) ^ v9 & a3))
                            - 8))();
}

void sub_18CA6E6F4()
{
  JUMPOUT(0x18CA6E67CLL);
}

uint64_t sub_18CA6E700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((121
                                          * ((*(_BYTE *)(a2 + a1)
                                                             + ((3 * (v2 ^ 0xA) + 115) | 5)
                                                             - **(_BYTE **)(v3 + 8 * (515 * (v2 ^ 0xA0A) - 2352))) == 85)) ^ (515 * (v2 ^ 0xA0A) + 548)))
                            - 8))();
}

uint64_t sub_18CA6E7C0(uint64_t a1, char a2, char a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((((v5 == 2) ^ (((v4 + 120 + a2) & a3) - 108)) & 1) * a4) ^ (v4 - 2184)))
                            - 4))();
}

void sub_18CA6E7F4()
{
  JUMPOUT(0x18CA6E784);
}

uint64_t sub_18CA6E800()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  v1 = (v0 + 1099415092) & 0xBE784DE7;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x260])(1576);
  STACK[0x338] = v2;
  STACK[0x290] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x328] + 8 * (int)(((v2 == 0) * (((v1 - 3039) | 0xE10) - 4043)) ^ v1))
                            - ((25 * (v1 ^ 0xDC4)) ^ 0xA0BLL)))();
}

uint64_t sub_18CA6E8CC()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  STACK[0x2E8] = v1;
  v2 = ((uint64_t (*)(uint64_t))STACK[0x260])(1576);
  v3 = STACK[0x328];
  STACK[0x3C0] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((11 * (v2 == 0)) | v0))
                            - (((v0 - 1790919001) & 0x6ABF3DFDu)
                             - 618)
                            + 2571))();
}

uint64_t sub_18CA6E92C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((240 * (((v0 == 1577195897) ^ (((5 * (v1 ^ 0x20)) ^ 0xC7) + 1)) & 1)) ^ v1)))();
}

uint64_t sub_18CA6E97C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (a1 ^ (120 * (v2 == v1))))
                            - ((a1 + 827) ^ ((a1 + 675) | 0x1Au) ^ 0x86)))();
}

uint64_t sub_18CA6E9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t (*a72)(uint64_t);
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  unsigned int v76;
  uint64_t v77;

  v76 = ((~(v72 | 0xEFE047B7) + (v72 & 0xEFE047B7)) ^ 0xB1B8798C) * v73;
  *(_QWORD *)(v75 - 168) = a54;
  *(_DWORD *)(v75 - 160) = -1678937308 - v76;
  *(_DWORD *)(v75 - 156) = v76 + v74 + 1104;
  *(_QWORD *)(v75 - 192) = 0x7C59E15C5284905ELL;
  *(_QWORD *)(v75 - 184) = a53;
  v77 = a72(v75 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x328]
                                                      + 8
                                                      * (((2
                                                         * ((((v74 - 742) ^ (*(_DWORD *)(v75 - 176) == 1556779682)) & 1) == 0)) & 0x7F | ((((v74 + 26) ^ ~(*(_DWORD *)(v75 - 176) == 1556779682)) & 1) << 7)) ^ v74))
                                          - 12))(v77);
}

uint64_t sub_18CA6EAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t (*a72)(uint64_t);
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;

  v74 = 1761959447 * ((~((v73 - 192) | 0x47FA134F) + ((v73 - 192) & 0x47FA134F)) ^ 0x19A22D74);
  *(_QWORD *)(v73 - 168) = a54;
  *(_DWORD *)(v73 - 160) = -1678937306 - v74;
  *(_DWORD *)(v73 - 156) = v74 + v72 + 1104;
  *(_QWORD *)(v73 - 192) = 0x7C59E15C5284905ELL;
  *(_QWORD *)(v73 - 184) = a53;
  v75 = a72(v73 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x328]
                                                      + 8
                                                      * (((*(_DWORD *)(v73 - 176) != 1556779682)
                                                        * ((202 * (v72 ^ 0x478)) ^ 0x116)) ^ v72))
                                          - 12))(v75);
}

uint64_t sub_18CA6EB90()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((((2 * v0) ^ 0xD8A) - 746) | 4) - 90) * (v2 == v1)) ^ v0))
                            - 12))();
}

uint64_t sub_18CA6EBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v54;
  int v55;
  uint64_t (*v56)(uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;

  v61 = (((v54 | 0xD136E17A) - (v54 & 0xD136E17A)) ^ 0x709120BE) * v55;
  *(_QWORD *)(v60 - 168) = a54;
  *(_DWORD *)(v60 - 160) = -1678937306 - v61;
  *(_DWORD *)(v60 - 156) = v61 + v57 + 1104;
  *(_QWORD *)(v60 - 192) = v59;
  *(_QWORD *)(v60 - 184) = a53;
  v62 = v56(v60 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x328]
                                                      + 8 * (((*(_DWORD *)(v60 - 176) != v58) * (v57 ^ 0x4F8)) ^ v57))
                                          - 12))(v62);
}

uint64_t sub_18CA6EC84@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  uint64_t (*v46)(uint64_t);
  int v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  int v55;

  v52 = ((1344379750 - (v44 | 0x50219B66) + (v44 | 0xAFDE6499)) ^ 0xE79A55D) * v45;
  *(_QWORD *)(v51 - 192) = v49;
  *(_QWORD *)(v51 - 184) = a43;
  *(_DWORD *)(v51 - 160) = a1 - v52;
  *(_DWORD *)(v51 - 156) = v52 + v47 + 1846;
  *(_QWORD *)(v51 - 168) = a44;
  v53 = v46(v51 - 192);
  v54 = STACK[0x328];
  v55 = *(_DWORD *)(v51 - 176);
  STACK[0x4E0] = v50;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v54 + 8 * ((3370 * (v55 == v48)) ^ v47)) - (v47 - 215) - ((25 * (v47 ^ 0x1F3u)) ^ 0xFFFFFFFFFFFFF544)))(v53, 129, 3488, 2497317956, 2497312657, 1556737659, 1881757817, 1797650868, (__n128)0);
}

void sub_18CA6ED6C()
{
  JUMPOUT(0x18CA6ED8CLL);
}

uint64_t sub_18CA6EDBC()
{
  int v0;
  unint64_t v1;
  uint64_t v2;

  STACK[0x4E0] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((STACK[0x3E8] == 0) | (4 * (STACK[0x3E8] == 0)) | (((v0 + 1649) | 0x20A) - 669)))
                            - 8))();
}

uint64_t sub_18CA6F860()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * ((240 * (STACK[0x488] == 0)) ^ (v0 - 1436))))();
}

uint64_t sub_18CA6F88C()
{
  int v0;

  ((void (*)(void))STACK[0x208])();
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x328] + 8 * ((1564 * (STACK[0x338] != 0)) ^ (v0 - 322))) - 12))();
}

uint64_t sub_18CA6F8C4()
{
  int v0;

  ((void (*)(void))STACK[0x208])();
  return (*(uint64_t (**)(void))(STACK[0x328] + 8 * ((193 * (STACK[0x3C0] == 0)) ^ (v0 - 435))))();
}

uint64_t sub_18CA6F8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((((6 * (v5 ^ 0x848)) ^ 0xF3B) * (v7 == v6)) ^ (v5 + 923)))
                                                                                       - 4))(a1, a2, a3, a4, a5, 1556737659);
}

uint64_t sub_18CA6F938()
{
  int v0;

  ((void (*)(void))STACK[0x208])();
  return (*(uint64_t (**)(void))(STACK[0x328] + 8 * ((240 * (STACK[0x488] == 0)) ^ (v0 - 1436))))();
}

uint64_t sub_18CA6F970()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1564 * (STACK[0x338] != 0)) ^ (v0 - 322))) - 12))();
}

uint64_t sub_18CA6F99C()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * ((193 * (STACK[0x3C0] == 0)) ^ (v0 - 435))))();
}

uint64_t sub_18CA6F9C0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  v3 = ((uint64_t (*)(void))STACK[0x208])();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x328]
                                                      + 8 * ((((6 * (v0 ^ 0x848)) ^ 0xF3B) * (v2 == v1)) ^ (v0 + 923)))
                                          - 4))(v3);
}

uint64_t sub_18CA6FA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  uint64_t v47;

  LODWORD(STACK[0x44C]) = 1178486024;
  LODWORD(STACK[0x4EC]) = 128;
  v43 = STACK[0x500];
  v44 = STACK[0x428];
  v45 = STACK[0x4A0];
  v46 = 476588053 * ((v42 - 192) ^ 0xBDFD0443);
  *(_QWORD *)(v42 - 168) = 0;
  *(_QWORD *)(v42 - 160) = v44;
  *(_DWORD *)(v42 - 152) = 729592260 - v46;
  *(_QWORD *)(v42 - 184) = 0;
  *(_QWORD *)(v42 - 176) = v43 + 0x61D35839E4698716;
  *(_QWORD *)(v42 - 192) = v45;
  *(_DWORD *)(v42 - 128) = (v41 - 1489) ^ v46;
  *(_QWORD *)(v42 - 144) = v43 + 0x61D35839E4698826;
  *(_QWORD *)(v42 - 136) = a41;
  v47 = ((uint64_t (*)(uint64_t))STACK[0x320])(v42 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x328]
                                                      + 8
                                                      * (((*(_DWORD *)(v42 - 148) == ((v41 - 296) | 0x114) + 1556776204)
                                                        * ((v41 ^ 0x7A5) - 1742)) ^ v41))
                                          - 4))(v47);
}

uint64_t sub_18CA6FB04()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((923 * (((v1 + 41) ^ (v0 - STACK[0x558] < 0x20)) & 1)) ^ v1)))();
}

uint64_t sub_18CA6FB58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  uint64_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;

  v5 = (v2 ^ 0xDE0) - v1;
  v6 = vrev64q_s8(*(int8x16_t *)(v3 + v5 - 15));
  v7 = vextq_s8(v6, v6, 8uLL);
  v8 = vrev64q_s8(*(int8x16_t *)(v3 + v5 - 31));
  v9 = vextq_s8(v8, v8, 8uLL);
  v10 = a1 + v5;
  v11.i64[0] = 0xB2B2B2B2B2B2B2B2;
  v11.i64[1] = 0xB2B2B2B2B2B2B2B2;
  v12.i64[0] = 0x5959595959595959;
  v12.i64[1] = 0x5959595959595959;
  v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v7, vandq_s8(vaddq_s8(v7, v7), v11)), v12));
  *(int8x16_t *)(v10 - 15) = vextq_s8(v13, v13, 8uLL);
  v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v11)), v12));
  *(int8x16_t *)(v10 - 31) = vextq_s8(v14, v14, 8uLL);
  return (*(uint64_t (**)(void))(v4 + 8 * ((914 * (v1 != 96)) ^ v2)))();
}

uint64_t sub_18CA6FBEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(a1 + v1 - 2008050408 + (v4 ^ 0x79Du)) = *(_BYTE *)(v3 + v1 - 2008050408 + (v4 ^ 0x79Du))
                                                   - ((2 * *(_BYTE *)(v3 + v1 - 2008050408 + (v4 ^ 0x79Du))) & 0xB2)
                                                   + 89;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v1 - 1 == v2) | (8 * (v1 - 1 == v2))) ^ v4)))();
}

uint64_t sub_18CA6FC38()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x358]) = 1556779682;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1262
                                          * (*(_DWORD *)(STACK[0x200] + 360) - 1458445574 < ((v0 - 2121637468) & 0x7E759E5Fu)
                                                                                          - 2577)) ^ v0))
                            - 12))();
}

uint64_t sub_18CA6FC9C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = (*(uint64_t (**)(_QWORD, _QWORD, unint64_t))(v4 + 8 * (v1 ^ 0xACF)))(LODWORD(STACK[0x51C]), ((v1 - 1155710860) & 0x44E2BF8F ^ (v2 + 1529)) + a1, STACK[0x3B8]);
  v14 = STACK[0x328];
  v15 = (v7 ^ 0xFF6BFFDB) + 1324750645 + ((2 * v7) & 0xFED7FFB6);
  if (v15 != 1315051280)
  {
    if (v15 == 1583486739)
      JUMPOUT(0x18CA6FD34);
    JUMPOUT(0x18CA6FE7CLL);
  }
  STACK[0x568] = (unint64_t)&STACK[0x610] + v3;
  LODWORD(STACK[0x564]) = 138999112;
  STACK[0x468] = v5 - 192;
  STACK[0x510] = 0;
  LODWORD(STACK[0x3D0]) = 756011384;
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8 * ((v6 + 813) ^ (189 * ((unint64_t *)((char *)&STACK[0x610] + v3) == (unint64_t *)-248))));
  STACK[0x2F0] = STACK[0x3D8];
  STACK[0x310] = (unint64_t)&STACK[0x610] + v3;
  STACK[0x300] = (unint64_t)&STACK[0x610] + v3 + 228;
  return v16(v7, v8, v9, v10, v11, 1556737659, v12, v13);
}

uint64_t sub_18CA6FDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  STACK[0x468] = v6 - 16;
  return (*(uint64_t (**)(void))(v8 + 8 * ((2629 * (a6 == ((v7 - 871) | 0xA07) + 1556777107)) ^ v7)))();
}

uint64_t sub_18CA6FEAC()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;

  v2 = ((uint64_t (*)(unint64_t))STACK[0x208])(STACK[0x290]);
  v3 = STACK[0x328];
  STACK[0x468] = STACK[0x2E8] - 1824;
  LODWORD(STACK[0x358]) = v1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((246 * (STACK[0x540] != 0)) ^ (v0 + 362)))
                                          - ((v0 - 1049061904) & 0x3E87635F)
                                          - ((979 * (v0 ^ 0xA0Cu)) ^ 0xFFFFFFFFFFFFF7D4)))(v2);
}

uint64_t sub_18CA6FED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v20 = v18 ^ 0x1A5;
  *(_DWORD *)(v19 - 192) = (v20 - 2019206961) ^ (1314530549
                                               * ((-1367589968 - ((v19 - 192) | 0xAE7C3BB0) + ((v19 - 192) | 0x5183C44F)) ^ 0xE08A4281));
  nullsub_1(v19 - 192);
  v21 = ((uint64_t (*)(uint64_t))STACK[0x260])(336);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x328] + 8 * (((((v20 + 69) ^ (v21 == 0)) & 1) * (v20 + 2764)) ^ v20)) - 4))(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_18CA6FF8C(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((3882
                                          * ((unint64_t)off_1E2538470[v1 - 441]
                                           + -((v1 + 100) ^ 0x261)
                                           - a1
                                           + 331 < 0x20)) ^ (v1 + 100)))
                            - ((v1 - 416) | 0x201u)
                            + 803))();
}

uint64_t sub_18CA70018@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + (v3 - 474716405)) = *(_BYTE *)(a1 + (v3 - 474716405))
                                                  - ((2 * *(_BYTE *)(a1 + (v3 - 474716405))) & 0xB2)
                                                  + 89;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((106 * (((v1 - 1253) ^ 0xFFFFF95A) + v3 == v2)) ^ v1)) - 12))();
}

uint64_t sub_18CA7006C()
{
  unint64_t v0;
  int v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  STACK[0x4D0] = v0;
  *v2 = 0xA6A6A6A6A6A6A6A6;
  v2[1] = 0x595959595F59594BLL;
  v4 = 673918253 * ((((v3 - 192) | 0x9B121647) - (v3 - 192) + ((v3 - 192) & 0x64EDE9B8)) ^ 0x15A0DEF);
  *(_DWORD *)(v3 - 192) = (v1 - 2006517298) ^ v4;
  *(_DWORD *)(v3 - 184) = 1821947638 - v4;
  nullsub_1(v3 - 192);
  LODWORD(STACK[0x360]) = 756011720;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x260])(336);
  v6 = STACK[0x328];
  STACK[0x340] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((v5 == 0) * (((v1 - 1188) | 0x108) ^ ((v1 - 1179) | 0x805) ^ 0x91D)) ^ v1))
                            - 8))();
}

uint64_t sub_18CA70160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  int v27;
  uint64_t v28;

  LODWORD(STACK[0x5D0]) = a27;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * ((488 * (STACK[0x4D0] != 0)) ^ (v27 - 1861))) - 4))();
}

uint64_t sub_18CA70190@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  uint64_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;

  v5 = (335 - v1);
  v6 = vrev64q_s8(*(int8x16_t *)(a1 + v5 - 15));
  v7 = vextq_s8(v6, v6, 8uLL);
  v8 = vrev64q_s8(*(int8x16_t *)(a1 + v5 - 31));
  v9 = vextq_s8(v8, v8, 8uLL);
  v10 = v3 + v5;
  v11.i64[0] = 0xB2B2B2B2B2B2B2B2;
  v11.i64[1] = 0xB2B2B2B2B2B2B2B2;
  v12.i64[0] = 0x5959595959595959;
  v12.i64[1] = 0x5959595959595959;
  v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v7, vandq_s8(vaddq_s8(v7, v7), v11)), v12));
  *(int8x16_t *)(v10 - 15) = vextq_s8(v13, v13, 8uLL);
  v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v11)), v12));
  *(int8x16_t *)(v10 - 31) = vextq_s8(v14, v14, 8uLL);
  LODWORD(v10) = ((25 * (v2 ^ 0x34C)) ^ 0xA2F) + v1 != 320;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)((v10 | (4 * v10)) ^ v2)) - 8))();
}

uint64_t sub_18CA70230@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int8x8_t v6;

  v5 = (v1 - 320);
  v6 = vrev64_s8(*(int8x8_t *)(a1 + v5 - 7));
  *(int8x8_t *)(v3 - 7 + v5) = vrev64_s8(vadd_s8(vsub_s8(v6, vand_s8(vadd_s8(v6, v6), (int8x8_t)0xB2B2B2B2B2B2B2B2)), (int8x8_t)0x5959595959595959));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8 * ((109 * (((v2 + 1150166190) & 0xBB71D7E7 ^ 0x6AD) != 16)) ^ (v2 - 1107)))
                            - 8))();
}

uint64_t sub_18CA702B4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  int v6;
  uint64_t v7;

  STACK[0x468] = ((v6 + 17) ^ 0xFFFFFFFFFFFFFC4ALL) + STACK[0x2E8];
  STACK[0x480] = a1;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v7 + 8 * (v6 ^ (19 * (v5 <= a1)))) - 8))(a1, a2, a3, a4, a5, a1);
}

uint64_t sub_18CA70348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = (v11 - 1538419082);
  v15 = (((v10 - 754) | 0x310) - 809) & v14;
  *(_BYTE *)(a6 + v14) = *(_BYTE *)(v12 + v14) ^ *(_BYTE *)(v7 + v15) ^ *(_BYTE *)(v6 + v15) ^ *(_BYTE *)(v15 + v8 + 2) ^ (-73 * ((((v10 + 14) | 0x10) - 41) & (v11 + 118))) ^ 0x59;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((3509 * (v11 - 1 == v9)) ^ v10)) - 8))();
}

uint64_t sub_18CA703C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  *(_BYTE *)(a6 + (v9 + v10 + 823)) = *(_BYTE *)(v11 + (v9 + v10 + 823)) ^ *(_BYTE *)(v7 + ((v9 + v10 + 823) & 0xFLL)) ^ *(_BYTE *)(v6 + (((_BYTE)v9 + (_BYTE)v10 + 55) & 0xF)) ^ *(_BYTE *)((((_BYTE)v9 + (_BYTE)v10 + 55) & 0xF) + v8 + 2) ^ (-73 * ((v9 + v10 + 55) & 0xF)) ^ 0x59;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((3494 * ((v9 + v10 + v12 + 47) > 0x14F)) ^ v12))
                            - 8))();
}

uint64_t sub_18CA70434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, int a7@<W8>)
{
  int8x16_t *v7;
  int8x16_t *v8;
  uint64_t v9;

  *v7 = veorq_s8(*v8, (int8x16_t)xmmword_18CF0E6A0);
  STACK[0x5B0] += 32;
  STACK[0x5B8] = a6;
  STACK[0x5C0] = a6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v9 + 8 * (a7 ^ (7 * (v7 == (int8x16_t *)a6))))
                                                                                                - 617 * (a7 ^ 0x33Cu)
                                                                                                + 2460))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_18CA70494@<X0>(unsigned __int8 *a1@<X5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v57;
  unsigned __int8 *v58;
  uint64_t v59;
  int v60;
  char *v61;
  char *v62;
  char *v63;
  int v64;
  char v65;
  char *v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  uint64_t v79;
  unsigned int v80;
  int v81;
  unsigned __int8 v82;
  int v83;
  int v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  int v90;
  uint64_t v91;
  char v92;
  unsigned int v93;
  unsigned int v94;
  unsigned __int8 v95;
  int v96;
  int v97;
  unsigned int v98;
  int v99;
  int v100;
  BOOL v101;
  int v102;
  int v103;
  int v104;
  int v105;
  char v106;
  int v107;
  char *v108;
  int v109;
  char *v110;
  int v111;
  unint64_t v112;
  uint64_t v113;
  char *v114;
  int v115;
  uint64_t (*v116)(unint64_t **);
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  int v133;
  int v134;
  unsigned int v135;
  int v136;
  int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  int v152;
  int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  int v168;
  unsigned int v169;
  int v170;
  int v171;
  unsigned int v172;
  int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  int v179;
  unint64_t v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  unsigned int v186;
  int v187;
  int v188;
  int v189;
  unsigned int v190;
  int v191;
  int v192;
  int v193;
  unsigned int v194;
  int v195;
  int v196;
  unsigned int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  int v208;
  unsigned int v209;
  int v210;
  int v211;
  int v212;
  unsigned int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  unsigned int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  unsigned int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  unsigned int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  unsigned int v255;
  int v256;
  int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  int v261;
  unint64_t v262;
  int v263;
  unsigned int v264;
  int v265;
  int v266;
  unsigned int v267;
  uint64_t (*v268)(unint64_t **);
  char *v269;
  unsigned int v270;
  char *v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  char *v277;
  int v278;
  int v279;
  unsigned int v280;
  uint64_t v281;
  char *v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  uint64_t v286;
  char *v287;
  int v288;
  unsigned int v289;
  char *v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  unint64_t v298;
  unint64_t v299;
  int v300;
  int v301;
  int v302;
  int v303;
  int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  int v308;
  unint64_t v309;
  unsigned int v310;
  int v311;
  uint64_t v312;
  unint64_t v314;
  unsigned __int8 *v315;
  char *v316;
  char *v317;
  char *v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  unsigned int v329;
  unsigned int v330;
  char v331;
  int v332;
  int v333;
  int v334;
  unsigned int v335;
  int v336;
  int v337;

  v58 = (unsigned __int8 *)&STACK[0x18D0] + v57;
  *v58 = *a1;
  *(_QWORD *)(v58 + 1) = *(_QWORD *)(a1 + 1);
  *(_DWORD *)(v58 + 9) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v58 + 13) = *(_WORD *)(a1 + 13);
  v58[15] = a1[15];
  v59 = *((_QWORD *)a1 + 1);
  *((_QWORD *)v58 + 2) = *(_QWORD *)a1;
  *((_QWORD *)v58 + 3) = v59;
  v60 = 33 * ((a2 + 1644) ^ 0x9E1);
  v61 = (char *)off_1E2538470[a2 - 664] - 4;
  v62 = (char *)off_1E2538470[(a2 + 1644) ^ 0x8A6] - 12;
  v63 = (char *)off_1E2538470[a2 - 673] - 12;
  v64 = v63[v58[14] ^ 0x86];
  v65 = v63[v58[10] ^ 0xCBLL];
  v66 = (char *)off_1E2538470[(a2 + 1644) ^ 0x9C2] - 12;
  v67 = v66[v58[1] ^ 0x1ALL];
  v68 = ((((v67 ^ 0xAC) + (v67 & 0xD5 ^ 0x7B) + 1) ^ v67 & 0xDF) >> 4) ^ (v67 >> 1);
  v69 = ((v58[3] ^ 0xB8) + v61[v58[3] ^ 0x54] - 115) | ((v67 ^ 0xED ^ ((v68 ^ 0x39) - ((2 * v68) & 4) - 126)) << 16);
  v70 = (((v62[v58[8] ^ 0x65] + (v58[8] ^ 0x34) - 89) ^ 0xF5) << 24) | (((v65 ^ (16 * v65)) ^ 0xB1) << 8) | ((v58[11] ^ 0x3E) + v61[v58[11] ^ 0xD2] - 115);
  LOBYTE(v67) = v63[v58[6] ^ 0x2ELL];
  v71 = v66[v58[13] ^ 0x5BLL];
  v72 = ((v58[7] ^ 0x90) + v61[v58[7] ^ 0x7CLL] - 115) | ((((v58[4] ^ 0x13)
                                                                           + v62[v58[4] ^ 0x42]
                                                                           - 89) ^ 0xE6) << 24) | (((v67 ^ (16 * v67)) ^ 0xAD) << 8);
  v73 = v71 ^ 0x29 ^ (((v71 >> 4) ^ (v71 >> 1) ^ 0x3B) - ((2 * ((v71 >> 4) ^ (v71 >> 1) ^ 0x3B)) & 0xA0) + 80);
  v74 = ((v64 ^ 0x7D ^ (v64 << (v60 + 31))) << 8) | ((v73 - ((2 * v73) & 0x2E) + 23) << 16);
  LOBYTE(v73) = v66[v58[5] ^ 0xEDLL];
  v75 = ((v73 ^ 0x79) >> 4) ^ ((v73 ^ 0x79) >> 1);
  LOBYTE(v73) = v73 ^ 0x6C ^ (v75 - ((2 * v75) & 0x74) + 58);
  v316 = v66;
  v76 = v66[v58[9] ^ 0x38];
  v318 = v62;
  v319 = v61;
  v317 = v63;
  v77 = v69 & 0xFFFF00FF | (((v62[*v58 ^ 0x81] + (*v58 ^ 0xD0) - 89) ^ 0x3C) << 24) | (((v63[v58[2] ^ 0x22] ^ (16 * v63[v58[2] ^ 0x22])) ^ 0x83) << 8);
  LODWORD(STACK[0x320]) = (v74 & 0xFFFFFF00 | ((((v58[12] ^ 0x13) + v62[v58[12] ^ 0x42] - 89) ^ 0xE6) << 24) | (v61[v58[15] ^ 0x38] + (v58[15] ^ 0xD4) - 115)) ^ 0x10BF99EF;
  LODWORD(STACK[0x308]) = v77 ^ 0xBBAC3058;
  LODWORD(STACK[0x2F8]) = (v72 & 0xFF00FFFF | (v73 << 16)) ^ 0x528B0D66;
  LODWORD(STACK[0x318]) = (v70 & 0xFF00FFFF | ((v76 ^ 0xD3 ^ (((v76 >> 4) ^ (v76 >> 1) ^ 0x3B)
                                                                                              - 2
                                                                                              * (((v76 >> 4) ^ (v76 >> 1) ^ 0x3B) & 1)
                                                                                              + 1)) << 16)) ^ 0x8A13E5DC;
  v314 = STACK[0x5C0];
  v315 = (unsigned __int8 *)STACK[0x5B8];
  STACK[0x2E0] = 14;
  v78 = v63[v315[14] ^ 0xD9];
  STACK[0x2A0] = 4;
  HIDWORD(v326) = v60 + 191;
  v79 = v315[4];
  v80 = (((v78 << ((v60 - 65) ^ 0xA0)) ^ 0xFFFFFFE0)
       - ((((v78 << ((v60 - 65) ^ 0xA0)) ^ 0xFFFFFFE0) << (v60 ^ 0xE4)) & 0xFFFFFFC0)
       - 18) ^ v78;
  LOBYTE(v78) = v79 ^ 0xB7;
  LOBYTE(v58) = v62[v79 ^ 0xE6];
  STACK[0x230] = 10;
  STACK[0x2E8] = 15;
  v81 = v315[15];
  v82 = ((_BYTE)v58 + v78 - 89) ^ 0xE5;
  if ((v81 & 0x20) != 0)
    v83 = -32;
  else
    v83 = 32;
  v336 = v61[(v83 + v81) ^ 0xDDLL] + ((v83 + v81) ^ 0x31);
  STACK[0x2D8] = 6;
  v84 = v63[v315[6] ^ 0x51];
  STACK[0x2B0] = 12;
  STACK[0x290] = 0;
  HIDWORD(v85) = v84 ^ (((16 * v84) ^ 0xFFFFFFE0) - (((16 * v84) ^ 0xFFFFFFE0) >> 5 << 6) - 18) ^ 0x3F;
  LODWORD(v85) = BYTE4(v85) & 0xF8;
  v86 = ((v85 >> 3) | ((unint64_t)v82 << 13)) ^ 0x58F620A6;
  v330 = (v86 >> 21) | ((_DWORD)v86 << 11);
  v334 = v62[(v315[12] ^ 0xF7) - 2 * ((v315[12] ^ 0xFFFFFFE7) & 0xAE) + 174] + (v315[12] ^ 8);
  v87 = *v315;
  STACK[0x2C8] = 3;
  v88 = v315[3];
  v89 = v62[v87 ^ 0xD8] + (v87 ^ 0x76) - 2 * (v87 ^ 0x76);
  v90 = v319[v88 ^ 0x57];
  STACK[0x2D0] = 8;
  v332 = (v88 ^ 0xFFFFFFBB) + v90;
  LOBYTE(v87) = (v315[8] ^ 0xA7) + v62[v315[8] ^ 0xF6];
  v331 = v87 - ((2 * v87 + 78) & 0x4E);
  STACK[0x298] = 7;
  v91 = v315[7];
  v92 = v319[v91 ^ 5];
  STACK[0x268] = 13;
  v93 = v66[v315[13] ^ 0x12];
  LOBYTE(v91) = (v91 ^ 0xE9) + v92;
  v94 = ((((v93 >> 3) ^ 0xF) & 0xFFFFFFFB ^ v93 & 0x5A | ((v93 >> 3) ^ 0xF) & 4 ^ v93 & 0xA4) >> 1) ^ 0x3C;
  STACK[0x210] = 5;
  v95 = v93 ^ 0x48 ^ (v94 - ((2 * v94) & 0xDF) - 17);
  LOBYTE(v93) = v66[v315[5] ^ 0x9CLL];
  v96 = ((v93 ^ 0x79) >> 4) ^ ((v93 ^ 0x79) >> 1);
  STACK[0x240] = 9;
  v97 = (v91 - 115) | ((v93 ^ 0xE6 ^ (v96 - ((2 * v96) & 0x74) + 58)) << 16);
  v98 = v66[v315[9] ^ 0x76];
  v99 = (2 * (v98 & 8)) ^ 0x10 | v98 & 8;
  v100 = (v98 >> 3) ^ 0xF;
  v101 = ((v99 + 56) & v100) == 0;
  v102 = v99 + 8;
  v103 = v99 ^ 0x18;
  if (v101)
    v103 = v102;
  LODWORD(STACK[0x250]) = -1365879140;
  STACK[0x218] = 11;
  v329 = v98 ^ 0x4E ^ (((((v100 + v103 - 16) ^ v98 & 0xF7) >> 1) ^ 0x38)
                     - 2
                     * (((((v100 + v103 - 16) ^ v98 & 0xF7) >> 1) ^ 0x38) & 0x33333333 ^ ((((v100 + v103 - 16) ^ v98 & 0xFFFFFFF7) & 0xFE) >> 1) & 1)
                     + 50);
  STACK[0x220] = 1;
  v104 = v66[v315[1] ^ 0xCFLL] ^ 0x43;
  v105 = (v104 >> 4) ^ ((v66[v315[1] ^ 0xCFLL] ^ 0x43) >> 1);
  v106 = v63[v315[10] ^ 0xFBLL];
  v107 = ((v105 ^ 0x1E) - 2 * ((v105 ^ 0x1E) & 0x1F ^ v105 & 1) + 30) ^ v104;
  v108 = (char *)off_1E2538470[v60 ^ 0x85A] - 8;
  HIDWORD(v325) = v95;
  v109 = *(_DWORD *)&v108[4 * (v95 ^ 0xAB)];
  v337 = v60;
  v110 = (char *)off_1E2538470[v60 ^ 0x800] - 12;
  HIDWORD(v323) = (v106 ^ (16 * v106)) ^ 0xB7;
  v111 = *(_DWORD *)&v110[4 * ((v106 ^ (16 * v106)) ^ 0x38)];
  HIDWORD(v112) = v111 ^ 0xAB2D;
  LODWORD(v112) = v111 ^ 0x48A90000;
  LODWORD(v324) = v89 - 90;
  v113 = (v89 - 90) ^ 0xF9u;
  v114 = (char *)off_1E2538470[v60 ^ 0x812] - 12;
  v115 = (v112 >> 16) ^ *(_DWORD *)&v114[4 * v113] ^ (16 * (v109 ^ 0x6FC8B043)
                                                    + 1621028570
                                                    - ((32 * (v109 ^ 0x6FC8B043)) & 0xC13DDDA0));
  v116 = off_1E2538470[v60 - 2230];
  v117 = *((_DWORD *)v116 + ((v97 ^ v330) ^ 0x78u)) ^ v109;
  LODWORD(v326) = v80;
  v118 = *(_DWORD *)&v110[4 * (v80 ^ 0x71)];
  v119 = v117 ^ (v115 - 1451520510 - ((2 * v115) & 0x52F71C04));
  HIDWORD(v112) = v118 ^ 0xAB2D;
  LODWORD(v112) = v118 ^ 0x48A90000;
  LODWORD(v325) = v107;
  v120 = *(_DWORD *)&v108[4 * (v107 ^ 0x9B)] ^ 0x6FC8B043;
  v121 = (v112 >> 16) ^ (16 * v120 + 1621028570 - ((32 * v120) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4
                                                                                               * (HIBYTE(v330) ^ 0xDD)];
  LODWORD(v323) = (v319[v315[11] ^ 0x12] + (v315[11] ^ 0xFE) - 115);
  v122 = *((_DWORD *)v116 + (v323 ^ 0xB9)) ^ v120 ^ (v121 - 1451520510 - ((2 * v121) & 0x52F71C04));
  HIDWORD(v324) = v97 ^ v330;
  v123 = *(_DWORD *)&v108[4 * (((v97 ^ v330) >> 16) ^ 3)] ^ 0x6FC8B043;
  v124 = v63[v315[2] ^ 0x26] ^ 0x56;
  LODWORD(v322) = v124 ^ (16 * v124);
  v125 = *(_DWORD *)&v110[4 * (v322 ^ 0xFB)];
  HIDWORD(v112) = v125 ^ 0xAB2D;
  LODWORD(v112) = v125 ^ 0x48A90000;
  HIDWORD(v321) = (v331 - 50);
  v126 = (v112 >> 16) ^ *(_DWORD *)&v114[4 * (HIDWORD(v321) ^ 0x40)] ^ (16 * v123
                                                                      + 1621028570
                                                                      - ((32 * v123) & 0xC13DDDA0));
  v127 = *((_DWORD *)v116 + ((v336 - 115) ^ 0xEBu)) ^ v123 ^ (v126
                                                                             - 1451520510
                                                                             - ((2 * v126) & 0x52F71C04));
  HIDWORD(v320) = v329;
  v128 = *(_DWORD *)&v108[4 * (v329 ^ 0x79)];
  v129 = *(_DWORD *)&v110[4 * (BYTE1(v330) ^ 0x31)];
  HIDWORD(v112) = v129 ^ 0xAB2D;
  LODWORD(v112) = v129 ^ 0x48A90000;
  LODWORD(v321) = v334 - 89;
  v130 = (v112 >> 16) ^ *(_DWORD *)&v114[4 * ((v334 - 89) ^ 0xF7)] ^ (16 * (v128 ^ 0x6FC8B043)
                                                                                     + 1621028570
                                                                                     - ((32 * (v128 ^ 0x6FC8B043)) & 0xC13DDDA0));
  LODWORD(v320) = v332 - 115;
  v131 = *(_DWORD *)&v110[4 * (BYTE1(v127) ^ 0xF4)];
  HIDWORD(v112) = v131 ^ 0xAB2D;
  LODWORD(v112) = v131 ^ 0x48A90000;
  v132 = *((_DWORD *)v116 + ((v332 - 115) ^ 0x33u)) ^ v128 ^ (v130
                                                                             - 1451520510
                                                                             - ((2 * v130) & 0x52F71C04));
  v133 = *(_DWORD *)&v108[4 * (BYTE2(v132) ^ 0x73)] ^ 0x6FC8B043;
  v134 = *(_DWORD *)&v108[4 * (BYTE2(v119) ^ 0x24)];
  v135 = v133 ^ *(_DWORD *)&v114[4 * (HIBYTE(v119) ^ 0x38)] ^ *((_DWORD *)v116 + (v122 ^ 0xDBu)) ^ (16 * v133 + 1621028570 - ((32 * v133) & 0xC13DDDA0)) ^ (v112 >> 16);
  v136 = *(_DWORD *)&v110[4 * ((unsigned __int16)(v132 ^ 0xB26D) >> 8)];
  HIDWORD(v112) = v136 ^ 0xAB2D;
  LODWORD(v112) = v136 ^ 0x48A90000;
  v137 = (16 * (v134 ^ 0x6FC8B043) + 1621028570 - ((32 * (v134 ^ 0x6FC8B043)) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * (HIBYTE(v122) ^ 0xF)] ^ (v112 >> 16);
  v138 = *((_DWORD *)v116 + (v127 ^ 0x80u)) ^ v134 ^ (v137 - 1451520510 - ((2 * v137) & 0x52F71C04));
  v139 = *(_DWORD *)&v108[4 * (BYTE2(v122) ^ 0xD6)] ^ 0x6FC8B043;
  LODWORD(v113) = *(_DWORD *)&v110[4 * (BYTE1(v119) ^ 0x56)];
  HIDWORD(v112) = v113 ^ 0xAB2D;
  LODWORD(v112) = v113 ^ 0x48A90000;
  v140 = (16 * v139 + 1621028570 - ((32 * v139) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * (HIBYTE(v127) ^ 0x19)];
  v141 = *((_DWORD *)v116 + (v132 ^ 0x6Du)) ^ v139 ^ (v112 >> 16) ^ (v140
                                                                                    - 1451520510
                                                                                    - 2
                                                                                    * (v140 & 0x297B8E03 ^ *(_DWORD *)&v114[4 * (HIBYTE(v127) ^ 0x19)] & 1));
  v142 = *(_DWORD *)&v108[4 * (BYTE2(v127) ^ 0x32)];
  v143 = *(_DWORD *)&v110[4 * (BYTE1(v122) ^ 0xAD)];
  HIDWORD(v112) = v143 ^ 0xAB2D;
  LODWORD(v112) = v143 ^ 0x48A90000;
  v144 = (v112 >> 16) ^ *(_DWORD *)&v114[4 * (HIBYTE(v132) ^ 0xD2)] ^ (16 * (v142 ^ 0x6FC8B043)
                                                                     + 1621028570
                                                                     - ((32 * (v142 ^ 0x6FC8B043)) & 0xC13DDDA0));
  v145 = v142 ^ *((_DWORD *)v116 + (v119 ^ 0xE3u)) ^ 0x1E016687 ^ (v144
                                                                                  - 1451520510
                                                                                  - ((2 * v144) & 0x52F71C04));
  v146 = v145
       - ((2 * v145) & 0x5F186BF6)
       + 2000335929
       + (~(2 * (v145 - ((2 * v145) & 0x5F186BF6) + 797718011)) | 0x70A30385);
  v147 = *(_DWORD *)&v108[4 * (BYTE2(v146) ^ 0x6D)];
  v148 = *(_DWORD *)&v110[4 * (BYTE1(v141) ^ 0xDF)];
  v149 = (16 * (v147 ^ 0x6FC8B043) + 1621028570 - ((32 * (v147 ^ 0x6FC8B043)) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * (HIBYTE(v135) ^ 0x3F)] ^ (((v148 ^ 0x48A9AB2Du) >> (v135 & 0x10) >> (v135 & 0x10 ^ 0x10)) + ((v148 << 16) ^ 0xAB2D0000));
  v150 = *((_DWORD *)v116 + (v138 ^ 0x9Au)) ^ v147 ^ (v149 - 1451520510 - ((2 * v149) & 0x52F71C04));
  LOWORD(v149) = v135 ^ 0x58C6;
  v151 = *(_DWORD *)&v108[4 * (((v135 ^ 0xD8B258C6) >> 16) ^ 0x93)] ^ 0x6FC8B043;
  LODWORD(v113) = *(_DWORD *)&v110[4 * (BYTE1(v146) ^ 0xED)];
  HIDWORD(v112) = v113 ^ 0xAB2D;
  LODWORD(v112) = v113 ^ 0x48A90000;
  v152 = (16 * v151 + 1621028570 - ((32 * v151) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * (HIBYTE(v138) ^ 0x24)] ^ (v112 >> 16);
  v153 = *(_DWORD *)&v114[4 * (HIBYTE(v141) ^ 5)];
  HIDWORD(v112) = v153 ^ 0x2DA;
  LODWORD(v112) = v153 ^ 0x609EEC00;
  v154 = *((_DWORD *)v116 + (v141 ^ 0xF9u)) ^ v151 ^ (v152 - 1451520510 - ((2 * v152) & 0x52F71C04));
  v155 = *(_DWORD *)&v108[4 * (BYTE2(v138) ^ 0xFD)] ^ 0x6FC8B043;
  v156 = (((v112 >> 10) ^ 0x25EB099C) << 10) ^ (16 * v155) ^ (((v112 >> 10) ^ 0x25EB099C) >> 22);
  LODWORD(v113) = *(_DWORD *)&v110[4 * (BYTE1(v149) ^ 2)];
  HIDWORD(v112) = v113 ^ 0xAB2D;
  LODWORD(v112) = v113 ^ 0x48A90000;
  v157 = *((_DWORD *)v116 + (v146 ^ 0xEu)) ^ v155 ^ (v112 >> 16) ^ (v156
                                                                                   - 1451520510
                                                                                   - ((2 * v156) & 0x52F71C04));
  v158 = *(_DWORD *)&v110[4 * (BYTE1(v138) ^ 0x7D)];
  HIDWORD(v112) = v158 ^ 0xAB2D;
  LODWORD(v112) = v158 ^ 0x48A90000;
  v159 = *(_DWORD *)&v108[4 * (BYTE2(v141) ^ 0xEB)];
  v160 = (v112 >> 16) ^ (16 * (v159 ^ 0x6FC8B043) + 1621028570 - ((32 * (v159 ^ 0x6FC8B043)) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * (HIBYTE(v146) ^ 0xAE)];
  v161 = *((_DWORD *)v116 + (v149 ^ 0xD7u)) ^ v159 ^ (v160 - 1451520510 - ((2 * v160) & 0x52F71C04));
  v162 = *(_DWORD *)&v108[4 * (BYTE2(v161) ^ 0xAA)] ^ 0x6FC8B043;
  v163 = (16 * v162 + 1621028570 - ((32 * v162) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * (HIBYTE(v150) ^ 0xB2)];
  v164 = *(_DWORD *)&v110[4 * (BYTE1(v157) ^ 0xE4)];
  HIDWORD(v112) = v164 ^ 0xAB2D;
  LODWORD(v112) = v164 ^ 0x48A90000;
  v165 = *((_DWORD *)v116 + (v154 ^ 0x68u)) ^ v162 ^ (v112 >> 16) ^ (v163
                                                                                    - 1451520510
                                                                                    - ((2 * v163) & 0x52F71C04));
  v166 = *(_DWORD *)&v108[4 * (BYTE2(v150) ^ 0x93)];
  v167 = *(_DWORD *)&v110[4 * ((unsigned __int16)(v161 ^ 0x9914) >> 8)];
  HIDWORD(v112) = v167 ^ 0xAB2D;
  LODWORD(v112) = v167 ^ 0x48A90000;
  v168 = (16 * (v166 ^ 0x6FC8B043) + 1621028570 - ((32 * (v166 ^ 0x6FC8B043)) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * (HIBYTE(v154) ^ 0xCE)] ^ (v112 >> 16);
  v169 = *((_DWORD *)v116 + (v157 ^ 0x15u)) ^ v166 ^ (v168 - 1451520510 - ((2 * v168) & 0x52F71C04));
  v170 = *(_DWORD *)&v108[4 * (BYTE2(v154) ^ 0x60)] ^ 0x6FC8B043;
  LODWORD(v113) = *(_DWORD *)&v110[4 * (BYTE1(v150) ^ 0x2B)];
  HIDWORD(v112) = v113 ^ 0xAB2D;
  LODWORD(v112) = v113 ^ 0x48A90000;
  v171 = (16 * v170 + 1621028570 - ((32 * v170) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * (HIBYTE(v157) ^ 0xF1)] ^ (v112 >> 16);
  v172 = *((_DWORD *)v116 + (v161 ^ 0x14u)) ^ v170 ^ (v171 - 1451520510 - ((2 * v171) & 0x52F71C04));
  if ((v154 & 0x1000) != 0)
    v173 = -16;
  else
    v173 = 16;
  v174 = *(_DWORD *)&v108[4 * (BYTE2(v157) ^ 0xF7)] ^ 0x6FC8B043;
  v175 = *(_DWORD *)&v110[4 * (((BYTE1(v154) ^ 0xC) + v173) ^ 0x83)];
  v176 = *(_DWORD *)&v114[4 * (HIBYTE(v161) ^ 0xCE)] ^ HIWORD(v175) ^ (16 * v174
                                                                     + 1621028570
                                                                     - ((32 * v174) & 0xC13DDDA0));
  v177 = *((_DWORD *)v116 + (v150 ^ 0x20u)) ^ v174 ^ ((v176 ^ (v175 << 16) ^ 0xAB2D48A9)
                                                                     - 1451520510
                                                                     - 2
                                                                     * ((v176 ^ (v175 << 16) ^ 0xAB2D48A9) & 0x297B8E16 ^ v176 & 0x14));
  v178 = *(_DWORD *)&v108[4 * (BYTE2(v177) ^ 0xBC)];
  v179 = *(_DWORD *)&v110[4 * (BYTE1(v172) ^ 0x8D)];
  HIDWORD(v180) = v179 ^ 0xAB2D;
  LODWORD(v180) = v179 ^ 0x48A90000;
  v181 = (v180 >> 16) ^ *(_DWORD *)&v114[4 * (HIBYTE(v165) ^ 0xCC)] ^ (16 * (v178 ^ 0x6FC8B043)
                                                                     + 1621028570
                                                                     - ((32 * (v178 ^ 0x6FC8B043)) & 0xC13DDDA0));
  v182 = *((_DWORD *)v116 + (v169 ^ 0xEAu)) ^ v178 ^ (v181 - 1451520510 - ((2 * v181) & 0x52F71C04));
  v183 = *(_DWORD *)&v108[4 * (BYTE2(v165) ^ 0x9C)];
  v184 = *(_DWORD *)&v110[4 * (BYTE1(v177) ^ 0x3B)];
  HIDWORD(v180) = v184 ^ 0xAB2D;
  LODWORD(v180) = v184 ^ 0x48A90000;
  v185 = (v180 >> 16) ^ *(_DWORD *)&v114[4 * (HIBYTE(v169) ^ 0x6F)] ^ (16 * (v183 ^ 0x6FC8B043)
                                                                     + 1621028570
                                                                     - ((32 * (v183 ^ 0x6FC8B043)) & 0xC13DDDA0));
  v186 = *((_DWORD *)v116 + (v172 ^ 0x48u)) ^ v183 ^ (v185 - 1451520510 - ((2 * v185) & 0x52F71C04));
  v187 = *(_DWORD *)&v108[4 * ((v169 ^ 0x86FCA1EA) >> 16)] ^ 0x6FC8B043;
  v188 = *(_DWORD *)&v110[4 * (BYTE1(v165) ^ 0xD5)];
  HIDWORD(v180) = v188 ^ 0xAB2D;
  LODWORD(v180) = v188 ^ 0x48A90000;
  v189 = (16 * v187 + 1621028570 - ((32 * v187) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * (HIBYTE(v172) ^ 0x80)] ^ (v180 >> 16);
  v190 = *((_DWORD *)v116 + (v177 ^ 0x77u)) ^ v187 ^ (v189 - 1451520510 - ((2 * v189) & 0x52F71C04));
  v191 = *(_DWORD *)&v108[4 * (BYTE2(v172) ^ 0xBE)];
  v192 = *(_DWORD *)&v110[4 * (BYTE1(v169) ^ 0x32)];
  HIDWORD(v180) = v192 ^ 0xAB2D;
  LODWORD(v180) = v192 ^ 0x48A90000;
  v193 = (v180 >> 16) ^ *(_DWORD *)&v114[4 * (HIBYTE(v177) ^ 0xEF)] ^ (16 * (v191 ^ 0x6FC8B043)
                                                                     + 1621028570
                                                                     - ((32 * (v191 ^ 0x6FC8B043)) & 0xC13DDDA0));
  v194 = *((_DWORD *)v116 + (v165 ^ 0x83u)) ^ v191 ^ (v193 - 1451520510 - ((2 * v193) & 0x52F71C04));
  v195 = *(_DWORD *)&v108[4 * ((v194 ^ 0xFAC513DE) >> 16)] ^ 0x6FC8B043;
  v196 = *(_DWORD *)&v110[4 * (BYTE1(v190) ^ 0x89)];
  v197 = (16 * v195 + 1621028570 - ((32 * v195) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * ((v182 ^ 0x7E9AAB89u) >> 24)];
  HIDWORD(v180) = v196 ^ 0xAB2D;
  LODWORD(v180) = v196 ^ 0x48A90000;
  BYTE1(v184) = BYTE1(v186) ^ 0x61;
  v198 = v195 ^ *((_DWORD *)v116 + (v186 ^ 0xCBu)) ^ (v180 >> 16) ^ (v197
                                                                                    - 1451520510
                                                                                    - ((2 * v197) & 0x52F71C04));
  v199 = *(_DWORD *)&v108[4 * ((v182 ^ 0x7E9AAB89u) >> 16)];
  v200 = *(_DWORD *)&v110[4 * (BYTE1(v194) ^ 0x80)];
  v201 = (v198 ^ 0x71C9D6C4) - 2 * ((v198 ^ 0x71C9D6C4) & 0x71DB76B7 ^ v198 & 1);
  HIDWORD(v180) = v200 ^ 0xAB2D;
  LODWORD(v180) = v200 ^ 0x48A90000;
  v202 = (16 * (v199 ^ 0x6FC8B043) + 1621028570 - ((32 * (v199 ^ 0x6FC8B043)) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * (HIBYTE(v186) ^ 0xB0)] ^ (v180 >> 16);
  v203 = *((_DWORD *)v116 + (v190 ^ 0x43u)) ^ v199 ^ (v202 - 1451520510 - ((2 * v202) & 0x52F71C04));
  v204 = ((HIBYTE(v190) ^ 0xFFFFFF6C) + 234) ^ ((HIBYTE(v190) ^ 0xFFFFFF85) + 1);
  v205 = HIBYTE(v190) ^ 0xA9F933EA ^ (v204 - 1443286128 - ((2 * v204) & 0x53F26720));
  v206 = *(_DWORD *)&v108[4 * (BYTE2(v186) ^ 0x6F)] ^ 0x6FC8B043;
  v207 = *(_DWORD *)&v110[4 * (BYTE1(v182) ^ 0x38)];
  HIDWORD(v180) = v207 ^ 0xAB2D;
  LODWORD(v180) = v207 ^ 0x48A90000;
  v208 = (16 * v206 + 1621028570 - ((32 * v206) & 0xC13DDDA0)) ^ (v180 >> 16) ^ *(_DWORD *)&v114[4 * v205 + 932];
  v209 = *((_DWORD *)v116 + (v194 ^ 0xDEu)) ^ v206 ^ (v208 - 1451520510 - ((2 * v208) & 0x52F71C04));
  v210 = *(_DWORD *)&v108[4 * (BYTE2(v190) ^ 0x85)];
  v211 = *(_DWORD *)&v110[4 * BYTE1(v184)];
  HIDWORD(v180) = v211 ^ 0xAB2D;
  LODWORD(v180) = v211 ^ 0x48A90000;
  v212 = (v180 >> 16) ^ *(_DWORD *)&v114[4 * (HIBYTE(v194) ^ 0x13)] ^ (16 * (v210 ^ 0x6FC8B043)
                                                                     + 1621028570
                                                                     - ((32 * (v210 ^ 0x6FC8B043)) & 0xC13DDDA0));
  v213 = *((_DWORD *)v116 + (v182 ^ 0xBAu)) ^ v210 ^ (v212 - 1451520510 - ((2 * v212) & 0x52F71C04));
  v214 = *(_DWORD *)&v110[4 * (BYTE1(v209) ^ 0xDE)];
  v215 = HIBYTE(v213) ^ 0x7A;
  HIDWORD(v180) = v214 ^ 0xAB2D;
  LODWORD(v180) = v214 ^ 0x48A90000;
  v216 = *(_DWORD *)&v108[4 * (BYTE2(v213) ^ 0x4F)];
  v217 = v201 - 237275466;
  v218 = (v180 >> 16) ^ *(_DWORD *)&v114[4 * (((v201 - 237275466) >> 24) ^ 0x98)] ^ (16
                                                                                                 * (v216 ^ 0x6FC8B043)
                                                                                                 + 1621028570
                                                                                                 - ((32 * (v216 ^ 0x6FC8B043)) & 0xC13DDDA0));
  v219 = *((_DWORD *)v116 + (v203 ^ 0x90u)) ^ v216 ^ (v218 - 1451520510 - ((2 * v218) & 0x52F71C04));
  v220 = *(_DWORD *)&v110[4 * (BYTE1(v213) ^ 0x8F)];
  HIDWORD(v180) = v220 ^ 0xAB2D;
  LODWORD(v180) = v220 ^ 0x48A90000;
  v221 = *(_DWORD *)&v108[4 * (BYTE2(v217) ^ 0xB1)] ^ 0x6FC8B043;
  v222 = v221 ^ *(_DWORD *)&v114[4 * (HIBYTE(v203) ^ 0xB2)] ^ *((_DWORD *)v116 + (v209 ^ 0x69u)) ^ ((v180 >> 16) - 1451520510 - ((2 * (v180 >> 16)) & 0x52F71C04)) ^ (16 * v221 + 1621028570 - ((32 * v221) & 0xC13DDDA0));
  v223 = *(_DWORD *)&v108[4 * (BYTE2(v203) ^ 0x32)];
  v224 = *(_DWORD *)&v110[4 * (BYTE1(v217) ^ 0x1D)];
  HIDWORD(v180) = v224 ^ 0xAB2D;
  LODWORD(v180) = v224 ^ 0x48A90000;
  v225 = (16 * (v223 ^ 0x6FC8B043) + 1621028570 - ((32 * (v223 ^ 0x6FC8B043)) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * (HIBYTE(v209) ^ 0x5F)] ^ (v180 >> 16);
  v226 = *((_DWORD *)v116
         + (((v213 ^ 0xC) + (v213 ^ 0xFFFFFFC0) + 1) ^ 0xFFFFFFFE)
         + (v213 ^ 0xC)) ^ v223 ^ (v225 - 1451520510 - ((2 * v225) & 0x52F71C04));
  v227 = *(_DWORD *)&v110[4 * (BYTE1(v203) ^ 0x6F)];
  HIDWORD(v180) = v227 ^ 0xAB2D;
  LODWORD(v180) = v227 ^ 0x48A90000;
  v228 = *(_DWORD *)&v108[4 * (BYTE2(v209) ^ 0x2D)];
  v229 = (v180 >> 16) ^ *(_DWORD *)&v114[4
                                       * (v215 & 0x90 ^ 0x86 ^ (~(2 * (v215 | 0x90)) + (v215 | 0x90)))] ^ (16 * (v228 ^ 0x6FC8B043) + 1621028570 - ((32 * (v228 ^ 0x6FC8B043)) & 0xC13DDDA0));
  v230 = *((_DWORD *)v116 + (v217 ^ 0xEDu)) ^ v228 ^ (v229 - 1451520510 - ((2 * v229) & 0x52F71C04));
  v231 = *(_DWORD *)&v108[4 * ((v230 ^ 0x366D44F4) >> 16)];
  v232 = *(_DWORD *)&v110[4 * ((unsigned __int16)(v226 ^ 0x3768) >> 8)];
  HIDWORD(v180) = v232 ^ 0xAB2D;
  LODWORD(v180) = v232 ^ 0x48A90000;
  v233 = (16 * (v231 ^ 0x6FC8B043) + 1621028570 - ((32 * (v231 ^ 0x6FC8B043)) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * (HIBYTE(v219) ^ 0xBD)] ^ (v180 >> 16);
  v234 = *((_DWORD *)v116 + (v222 ^ 0xEEu)) ^ v231 ^ (v233 - 1451520510 - ((2 * v233) & 0x52F71C04));
  v235 = *(_DWORD *)&v108[4 * (BYTE2(v219) ^ 0xED)] ^ 0x6FC8B043;
  v236 = *(_DWORD *)&v110[4 * (BYTE1(v230) ^ 0xD7)];
  HIDWORD(v180) = v236 ^ 0xAB2D;
  LODWORD(v180) = v236 ^ 0x48A90000;
  v237 = v235 ^ *(_DWORD *)&v114[4 * (HIBYTE(v222) ^ 0xD6)] ^ *((_DWORD *)v116 + (v226 ^ 0x5Bu)) ^ (16 * v235 + 1621028570 - ((32 * v235) & 0xC13DDDA0)) ^ ((v180 >> 16) - 1451520510 - ((2 * (v180 >> 16)) & 0x52F71C04));
  v238 = *(_DWORD *)&v110[4 * (BYTE1(v219) ^ 0xB)];
  HIDWORD(v180) = v238 ^ 0xAB2D;
  LODWORD(v180) = v238 ^ 0x48A90000;
  v239 = *(_DWORD *)&v108[4 * (BYTE2(v222) ^ 0x56)] ^ 0x6FC8B043;
  v240 = *(_DWORD *)&v114[4 * ((v226 ^ 0xFED33768) >> 24)] ^ *(_DWORD *)&v108[4 * (BYTE2(v222) ^ 0x56)] ^ 0x289C23D ^ (16 * v239 + 1621028570 - ((32 * v239) & 0xC13DDDA0)) ^ (v180 >> 16);
  HIDWORD(v180) = *((_DWORD *)v116 + (v230 ^ 0xF4u)) ^ 0xB5F32AB8;
  LODWORD(v180) = HIDWORD(v180);
  LODWORD(v180) = (v180 >> 21) ^ __ROR4__(v240, 21) ^ 0x549BF9D9;
  HIDWORD(v180) = v180;
  v241 = (v180 >> 11) - ((2 * (v180 >> 11)) & 0x5F22D47E);
  v242 = *(_DWORD *)&v108[4 * (BYTE2(v226) ^ 0x10)] ^ 0x6FC8B043;
  v243 = *(_DWORD *)&v110[4 * (BYTE1(v222) ^ 0xE4)];
  HIDWORD(v180) = v243 ^ 0xAB2D;
  LODWORD(v180) = v243 ^ 0x48A90000;
  v244 = (v180 >> 16) ^ *(_DWORD *)&v114[4 * (HIBYTE(v230) ^ 0xDF)] ^ (16 * v242
                                                                     + 1621028570
                                                                     - ((32 * v242) & 0xC13DDDA0));
  v245 = *((_DWORD *)v116 + (v219 ^ 0xE5u)) ^ v242 ^ (v244 - 1451520510 - ((2 * v244) & 0x52F71C04));
  v246 = *(_DWORD *)&v108[4 * (BYTE2(v234) ^ 0xBC)] ^ 0x6FC8B043;
  v247 = *(_DWORD *)&v110[4 * (BYTE1(v245) ^ 0x66)];
  HIDWORD(v180) = v247 ^ 0xAB2D;
  LODWORD(v180) = v247 ^ 0x48A90000;
  v248 = *(_DWORD *)&v114[4 * (HIBYTE(v237) ^ 0x17)] ^ 0x6D41727E ^ v246 ^ (v180 >> 16) ^ (16 * v246
                                                                                         + 1621028570
                                                                                         - ((32 * v246) & 0xC13DDDA0));
  v249 = (v248 & 0x200 ^ 0x7F55D76E) + 2 * (v248 & 0x200);
  v250 = v241 - 1349424577;
  v251 = *(_DWORD *)&v110[4 * (BYTE1(v250) ^ 0xCA)];
  v252 = *((_DWORD *)v116 + (v250 ^ 0xD0u));
  v101 = ((v249 - 2136332142) & (v252 ^ 0xA97B8E02)) == 0;
  HIDWORD(v180) = v251 ^ 0xAB2D;
  LODWORD(v180) = v251 ^ 0x48A90000;
  v253 = *(_DWORD *)&v108[4 * (BYTE2(v245) ^ 0x72)];
  v254 = (v180 >> 16) ^ *(_DWORD *)&v114[4 * ((v234 ^ 0xBB7F8D04) >> 24)] ^ (16 * (v253 ^ 0x6FC8B043)
                                                                           + 1621028570
                                                                           - ((32 * (v253 ^ 0x6FC8B043)) & 0xC13DDDA0));
  v255 = *((_DWORD *)v116 + (v237 ^ 0xEAu)) ^ v253 ^ (v254 - 1451520510 - ((2 * v254) & 0x52F71C04));
  v256 = v249 - 16875840;
  v257 = -39178852 - v249;
  if (v101)
    v257 = v256;
  v258 = ((v252 ^ 0xB5F32AB8) - 2119456302 + v257) ^ v248 & 0xFFFFFDFF;
  v259 = *(_DWORD *)&v108[4 * (BYTE2(v237) ^ 0x7C)];
  v260 = (16 * (v259 ^ 0x6FC8B043) + 1621028570 - ((32 * (v259 ^ 0x6FC8B043)) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * ((v250 ^ 0xB13059D0) >> 24)];
  v261 = *(_DWORD *)&v110[4 * (BYTE1(v234) ^ 0x1E)];
  HIDWORD(v262) = v261 ^ 0xAB2D;
  LODWORD(v262) = v261 ^ 0x48A90000;
  v263 = *(_DWORD *)&v108[4 * (BYTE2(v250) ^ 0xF3)];
  v264 = *((_DWORD *)v116 + (v245 ^ 0xDu)) ^ v259 ^ (v262 >> 16) ^ (v260
                                                                                   - 1451520510
                                                                                   - ((2 * v260) & 0x52F71C04));
  v265 = *(_DWORD *)&v110[4 * (BYTE1(v237) ^ 0xD9)];
  HIDWORD(v262) = v265 ^ 0xAB2D;
  LODWORD(v262) = v265 ^ 0x48A90000;
  v266 = (16 * (v263 ^ 0x6FC8B043) + 1621028570 - ((32 * (v263 ^ 0x6FC8B043)) & 0xC13DDDA0)) ^ *(_DWORD *)&v114[4 * (HIBYTE(v245) ^ 0x32)] ^ (v262 >> 16);
  v267 = *((_DWORD *)v116 + (v234 ^ 0x37u)) ^ v263 ^ (v266 - 1451520510 - ((2 * v266) & 0x52F71C04));
  v268 = off_1E2538470[v337 - 2098];
  v269 = (char *)off_1E2538470[v337 ^ 0x875] - 12;
  v270 = *(_DWORD *)&v269[4 * (BYTE2(v255) ^ 0x51)];
  v271 = (char *)off_1E2538470[v337 - 1989] - 12;
  v272 = *(_DWORD *)&v271[4 * (BYTE1(v267) ^ 0xCC)] ^ 0x4E52768D;
  v273 = (v270 >> 4) ^ 0x333C643C ^ (v270 >> 2) ^ ((HIBYTE(v258) ^ 0x9FD529D8)
                                                 - 253275641
                                                 + *((_DWORD *)v268 + (HIBYTE(v258) ^ 0x45))) ^ (1515496080 * v272);
  v274 = HIBYTE(v255);
  LODWORD(v327) = *((_DWORD *)v268 + (HIBYTE(v255) ^ 0xBC));
  LODWORD(a40) = *((_DWORD *)v268 + (HIBYTE(v264) ^ 0xDB));
  LODWORD(a41) = *((_DWORD *)v268 + (HIBYTE(v267) ^ 0xFE));
  v275 = *(_DWORD *)&v269[4 * (BYTE2(v267) ^ 0xCD)];
  v276 = *(_DWORD *)&v269[4 * (BYTE2(v258) ^ 0x37)];
  v335 = *(_DWORD *)&v269[4 * (BYTE2(v264) ^ 0xC3)];
  LODWORD(v269) = *(_DWORD *)&v271[4 * (BYTE1(v264) ^ 0x73)];
  HIDWORD(v327) = *(_DWORD *)&v271[4 * (BYTE1(v255) ^ 6)];
  v333 = *(_DWORD *)&v271[4 * (BYTE1(v258) ^ 0x5E)];
  v277 = (char *)off_1E2538470[v337 - 2268] - 4;
  v278 = *(_DWORD *)&v277[4 * (v258 ^ 0x9D)];
  v279 = *(_DWORD *)&v277[4 * (v267 ^ 0xDD)];
  LODWORD(v328) = *(_DWORD *)&v277[4 * (v255 ^ 0xE7)];
  HIDWORD(v328) = v255;
  v280 = (~((2 * (v264 ^ 0x38) + 2044928224) & 0x49C3223A) + (v264 ^ 0x38) + 618474894) ^ LODWORD(STACK[0x2F8]) ^ *(_DWORD *)&v277[4 * (v264 ^ 0x3A)] ^ v270 ^ v272 ^ (v273 - ((2 * v273) & 0x6939AD6C) - 1264789834);
  v281 = v280 ^ 0x4492F723;
  v282 = (char *)off_1E2538470[v337 - 2137] - 8;
  *(_BYTE *)(v314 + STACK[0x210]) = v282[BYTE2(v281) ^ 0x5ELL] ^ BYTE2(v281) ^ 0x8A ^ ((BYTE2(v281) ^ 0x8A)
                                                                                     - ((2 * (BYTE2(v281) ^ 0x8A) + 46) & 0x3C)
                                                                                     - 107) ^ 0xB9;
  v283 = ((v274 ^ 0x9FD52921) - 253275641 + v327) ^ (v275 >> 2) ^ (v275 >> 4);
  v284 = v275 ^ LODWORD(STACK[0x308]) ^ v269 ^ 0x4E52768D ^ v278 ^ ((v258 ^ 0x9F)
                                                                                + 618474894
                                                                                + ((2
                                                                                  * (((v258 ^ 0x9F)
                                                                                    + 112) & 0xFFFFFF1F ^ (v258 ^ 0x9F | 0x7FFFFFFD))) ^ 0x49C32005)) ^ ((v283 ^ (1515496080 * (v269 ^ 0x4E52768D)) ^ 0x333C643C) - 2 * ((v283 ^ (1515496080 * (v269 ^ 0x4E52768D)) ^ 0x333C643C) & 0x1F2AC4D7 ^ v283 & 3) - 1624587052);
  v285 = v284 ^ 0xF6EE2CF9;
  v286 = (BYTE1(v285) | 0x88) ^ (v285 >> 8) & 0x88;
  v287 = (char *)off_1E2538470[v337 - 2166] - 8;
  *(_BYTE *)(v314 + 2) = (((unsigned __int16)(v284 ^ 0x2CF9) >> 8) | 0x88) ^ ((unsigned __int16)(v284 ^ 0x2CF9) >> 8) & 0x88 ^ 0x35 ^ ((v287[v286 ^ 0x14] ^ 0xA4) - ((2 * v287[v286 ^ 0x14]) & 0x20) - 112);
  LODWORD(v286) = ((HIBYTE(v264) ^ 0x9FD52946) - 253275641 + a40) ^ 0x333C643C ^ (v276 >> 2) ^ (v276 >> 4);
  v288 = (v286 - ((2 * v286) & 0x6CE96C3E) + 913618463) ^ v276;
  v289 = (v288 & 0x1000000 ^ 0xFF7FFF79) + 2 * (v288 & 0x1000000);
  v290 = (char *)off_1E2538470[v337 - 2192] - 4;
  LODWORD(v277) = v290[HIBYTE(v280) ^ 0xF9];
  HIDWORD(v262) = v277 ^ 0x17;
  LODWORD(v262) = (v277 ^ 0xFFFFFFBF) << 24;
  v291 = v289 + 8388743;
  *(_BYTE *)(v314 + STACK[0x2A0]) = (v262 >> 29) ^ 0x83;
  v292 = v289 + 2080350912;
  v293 = 2063573426 - v289;
  if ((v291 & (v279 ^ 0xA7000000)) == 0)
    v293 = v292;
  v294 = (1515496080 * (HIDWORD(v327) ^ 0x4E52768D)) ^ v288 & 0xFEFFFFFF ^ 0xC6B55C77 ^ ((v279 ^ ((v267 ^ 0xDF)
                                                                                                + 618474894
                                                                                                + ((2 * (v267 ^ 0xDF)
                                                                                                  + 224) & 0x23A ^ 0xB63CDFFF)))
                                                                                       - 2071962169
                                                                                       + v293);
  v295 = HIDWORD(v327) ^ LODWORD(STACK[0x318]) ^ (v294 - 1978407526 - ((2 * v294) & 0x1427CB34));
  v296 = (BYTE4(v327) ^ LOBYTE(STACK[0x318]) ^ (v294 - 102 - ((2 * v294) & 0x34))) ^ 0xA5;
  v297 = (char *)off_1E2538470[v337 - 2079] - 4;
  *(_BYTE *)(v314 + STACK[0x218]) = v297[v296] & 0xFB ^ ((v297[v296] | 0xFB) + 24) ^ 0x22;
  LODWORD(v296) = v290[HIBYTE(v284) ^ 0x2DLL];
  HIDWORD(v298) = v296 ^ 0x17;
  LODWORD(v298) = (v296 ^ 0xFFFFFFBF) << 24;
  v299 = STACK[0x290];
  *(_BYTE *)(v314 + STACK[0x290]) = (v298 >> 29) ^ 0xFB;
  *(_BYTE *)(v314 + STACK[0x220]) = BYTE2(v285) ^ 0x61 ^ ((BYTE2(v285) ^ 0x61)
                                                        - ((2 * (BYTE2(v285) ^ 0x61) + 46) & 0x3C)
                                                        - 107) ^ 0xB8 ^ v282[BYTE2(v285) ^ 0xB5];
  v300 = (HIBYTE(v267) ^ 0x9FD52963) - 253275641 + a41;
  v301 = (((v335 >> 4) ^ 0x333C643C ^ (v335 >> 2))
        - ((2 * ((v335 >> 4) ^ 0x333C643C ^ (v335 >> 2))) & 0x4300D6F2)
        + 1635806073) ^ v335;
  v302 = (v301 & 0x80000 ^ 0x69DB9FFD) + 2 * (v301 & 0x80000);
  v101 = ((v302 - 1776001021) & v300) == 0;
  v303 = v302 - 151126040;
  v304 = -894091294 - v302;
  if (v101)
    v304 = v303;
  v305 = (1515496080 * (v333 ^ 0x4E52768D)) ^ v301 & 0xFFF7FFFF ^ 0x91418111 ^ (v300 - 1624874981 + v304);
  v306 = v328 ^ ((HIDWORD(v328) ^ 0xE5) + 2096205936) ^ (v305 - ((2 * v305) & 0x4FD73A3A) - 1477731043);
  v307 = v333 ^ LODWORD(STACK[0x320]) ^ (v306 + 280992223 - ((2 * v306) & 0x217F33BE));
  *(_BYTE *)(v314 + STACK[0x268]) = v282[(BYTE2(v307) ^ 0xC9) + 213 + ((v307 >> 15) & 0x1A8 ^ 0xFFFFFE7F)] ^ BYTE2(v307) ^ ((BYTE2(v307) ^ 0xC9) + (~(2 * (BYTE2(v307) ^ 0xC9) + 46) | 0xC3) - 106) ^ 0x4F;
  v308 = v290[HIBYTE(v307) ^ 0xB4];
  HIDWORD(v309) = v308 ^ 0x17;
  LODWORD(v309) = (v308 ^ 0xFFFFFFBF) << 24;
  *(_BYTE *)(v314 + STACK[0x2B0]) = (v309 >> 29) ^ 0x50;
  *(_BYTE *)(v314 + STACK[0x240]) = ((v295 ^ 0x818FAFEA) >> 16) ^ 0x94 ^ ((((v295 ^ 0x818FAFEA) >> 16) ^ 0x94)
                                                                                      - ((2
                                                                                        * (((v295 ^ 0x818FAFEA) >> 16) ^ 0x94)
                                                                                        + 46) & 0x3C)
                                                                                      - 107) ^ v282[((v295 ^ 0x818FAFEA) >> 16) ^ 0x40] ^ 0xC;
  v310 = (((v307 ^ 0x1167E4A2) >> 4) & 0xF0 | ((unsigned __int16)(v307 ^ 0xE4A2) >> 12)) ^ 0xE6;
  *(_BYTE *)(v314 + STACK[0x2E0]) = v287[((v310 >> 4) & 0xFFFFFF0F | (16 * (v310 & 0xF))) ^ 0xAELL] ^ (((v310 >> 4) & 0xF | (16 * (v310 & 0xF))) - ((2 * ((v310 >> 4) & 0xF | (16 * (v310 & 0xF)))) & 0x48) - 92) ^ 0x2B;
  *(_BYTE *)(v314 + STACK[0x230]) = (((unsigned __int16)(v295 ^ 0xAFEA) >> 8)
                                   - (((v295 ^ 0x818FAFEA) >> 7) & 0x48)
                                   - 92) ^ 0xDB ^ v287[((unsigned __int16)(v295 ^ 0xAFEA) >> 8) ^ 0xA0];
  *(_BYTE *)(v314 + STACK[0x2D8]) = (BYTE1(v281) - ((v281 >> 7) & 0x48) - 92) ^ v287[BYTE1(v281) ^ 0x75] ^ 0x80;
  *(_BYTE *)(v314 + STACK[0x2C8]) = v297[v284 ^ 0xCALL] ^ 0x9C;
  *(_BYTE *)(v314 + STACK[0x298]) = v297[v280 ^ 0xEFLL] ^ 0xD;
  *(_BYTE *)(v314 + STACK[0x2E8]) = v297[v307 ^ 0xDLL] ^ 0xA2;
  v311 = v290[BYTE3(v295) ^ 7];
  HIDWORD(v309) = v311 ^ 0x17;
  LODWORD(v309) = (v311 ^ 0xFFFFFFBF) << 24;
  *(_BYTE *)(v314 + STACK[0x2D0]) = (v309 >> 29) ^ 0x2E;
  v312 = (int)v299 - 1365879124 - 2 * (((_DWORD)v299 + 16) & 0x2E96569F ^ STACK[0x250] & 3);
  HIDWORD(v322) = v336 - 115;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unsigned __int8 *, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x328] + 8 * (v337 | (2 * ((v312 ^ 0xAE965690) > 0x14F)))) - 4))(v299, 1515496080, v281, v295, 23, v287, v314, v312, a3, a4, a5, a6, a7, a8, a9, a10, v314, v315, v316,
           v317,
           v318,
           v319,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           v320,
           v321,
           v322,
           v323,
           v324,
           v325,
           v326,
           v327,
           v328,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

void sub_18CA729DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned __int8 a30,int a31,int a32,int a33,unsigned __int8 a34,__int16 a35,unsigned __int8 a36,int a37,int a38,int a39,int a40,unsigned __int8 a41,int a42,char a43,__int16 a44,char a45)
{
  char v45;

  LODWORD(STACK[0x308]) = (a30 | ((a39 ^ 0xC) << 24) | ((a34 ^ 0xEF) << 8) | ((a41 ^ 0xB6) << 16)) ^ 0x232CE383;
  LODWORD(STACK[0x2F8]) = a40 ^ 0x550A79CD;
  LODWORD(STACK[0x318]) = (a37 | (a33 << 24) | (a31 << 16) | (a38 << (a45 + 100))) ^ 0xA3CDCF25;
  LODWORD(STACK[0x320]) = (((a32 ^ 0x1A) << 24) | (a42 << 16) | a36 | ((a43 ^ v45) << 8)) ^ 0x32E304E;
  JUMPOUT(0x18CA7085CLL);
}

uint64_t sub_18CA72AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v17 = ((v15 ^ v14) - 1795632116) & 0x6B072BE1;
  v18 = STACK[0x480];
  STACK[0x5B0] += v17 ^ 0xFFFFFFFFFFFFF700;
  v19 = (((_DWORD)v17 - 1239247713) & 0x49DD63FF ^ 0xAF278C67) + 1356362807;
  *(_BYTE *)(v18 + v19) = *(_BYTE *)(a14 + v19) ^ *((_BYTE *)off_1E2538470[(int)v17 - 2149] + (v19 & 0xF) - 8) ^ *((_BYTE *)off_1E2538470[(int)v17 - 2269] + (v19 & 0xF) + 2) ^ (99 * (v19 & 0xF)) ^ *((_BYTE *)off_1E2538470[v17 ^ 0x82E] + (v19 & 0xF) + 3) ^ 0x59;
  return (*(uint64_t (**)(void))(v16 + 8 * (v17 + 18)))();
}

void sub_18CA72BA0()
{
  JUMPOUT(0x18CA72B34);
}

uint64_t sub_18CA72BA8()
{
  int v0;
  uint64_t v1;

  STACK[0x468] -= 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v0 - 2039277360) & 0x798CEFBF ^ ((v0 ^ 0xB70) + 921) ^ v0)) - 4))();
}

uint64_t sub_18CA72BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _BYTE *a13)
{
  int v13;
  uint64_t v14;
  _BYTE *v15;
  int v16;
  char v17;

  v15 = (_BYTE *)STACK[0x340];
  v16 = v13 - 1018;
  v17 = (v13 - 20) & 0x66 ^ 0x63;
  a13[12] = ((((1 << v17) & 0x1E560522u) + 13958509) >> 24)
          - (((((1 << v17) & 0x1E560522u) + 13958509) >> 23) & 0xB2)
          + 89;
  a13[13] = (((-13958510 - ((1 << v17) & 0x1E560522u)) >> 16) ^ 0x2B)
          - ((2 * (((-13958510 - ((1 << v17) & 0x1E560522u)) >> 16) ^ 0x2B)) & 0xB2)
          + 89;
  a13[14] = (((unsigned __int16)(658 - ((1 << v17) & 0x522)) >> 8) ^ 2)
          + (~((-13958510 - ((1 << v17) & 0x1E560522u)) >> 7) | 0x4D)
          + 90;
  a13[15] = (-110 - ((1 << v17) & 0x22)) ^ 0xC8;
  v15[16] ^= *a13 ^ 0x59;
  v15[17] ^= a13[1] ^ 0x59;
  v15[18] ^= a13[2] ^ 0x59;
  v15[19] ^= a13[3] ^ 0x59;
  v15[20] ^= a13[4] ^ 0x59;
  v15[21] ^= a13[5] ^ 0x59;
  v15[22] ^= a13[6] ^ 0x59;
  v15[23] ^= a13[7] ^ 0x59;
  v15[24] ^= a13[8] ^ 0x59;
  v15[25] ^= a13[9] ^ 0x59;
  v15[26] ^= a13[10] ^ 0x59;
  v15[27] ^= a13[11] ^ 0x59;
  v15[28] ^= a13[12] ^ 0x59;
  v15[29] ^= a13[13] ^ 0x59;
  v15[30] ^= a13[14] ^ 0x59;
  v15[31] ^= a13[15] ^ 0x59;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 8 * v16))(77, 200, 89);
}

void sub_18CA72E50()
{
  JUMPOUT(0x18CA72C58);
}

uint64_t sub_18CA72E58()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((LODWORD(STACK[0x360]) == (((v0 - 257) | 0x810) ^ 0x67E) + 756008809)
                                * (3 * (((v0 - 257) | 0x810) ^ 0xDB8) - 1137)) ^ ((v0 - 257) | 0x810))))();
}

uint64_t sub_18CA72EB8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((*(unsigned __int8 *)(v2 + (v1 - 756011385)) == (a1 - 2))
                                          * ((a1 ^ 0x424) - 326)) ^ a1))
                            - 12))();
}

uint64_t sub_18CA72EFC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 == ((a1 + 1814) ^ 0x67E) + 756008809) * (3 * ((a1 + 1814) ^ 0xDB8) - 1137)) ^ (a1 + 1814))))();
}

uint64_t sub_18CA72F40()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  LODWORD(STACK[0x360]) = 756011384;
  v2 = (v0 - 1972538002) & 0x759285D7;
  v3 = STACK[0x340];
  v4 = ((unint64_t)&STACK[0x3B0] ^ 0xFAFBE5DF0F37F7FALL)
     + ((2 * (_QWORD)&STACK[0x3B0]) & 0xF5F7CBBE1E6FEFF0)
     + 0x15EEFFF8FBFA55B1
     + v2;
  STACK[0x3B0] = 335;
  *(_BYTE *)(v3 + 335) = (v4 ^ 0xBA) * (v4 + 17);
  return (*(uint64_t (**)(void))(v1 + 8 * (((STACK[0x3B0] == 0) * (v2 ^ 0x102C)) ^ v2)))();
}

void sub_18CA73434()
{
  JUMPOUT(0x18CA73400);
}

uint64_t sub_18CA7343C()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;

  v2 = ((uint64_t (*)(void))STACK[0x208])();
  v3 = STACK[0x328];
  LODWORD(STACK[0x5D0]) = v1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((((v0 + 1510) ^ 0xA08) * (v1 != 1556779682)) ^ v0))
                                          - 4))(v2);
}

uint64_t sub_18CA73488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;

  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * ((488 * (STACK[0x4D0] != 0)) ^ (v18 - 1861))) - 4))(STACK[0x4D0], a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_18CA734B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;

  v7 = ((_DWORD)v5 - 1573709734) & 0x5DCCEFD4;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((v7 ^ 0xFFFFFFFFFFFFF724)
                                                                                             + *(_QWORD *)(v6 + 8 * v5));
  v9 = STACK[0x310];
  v10 = STACK[0x2F0];
  STACK[0x268] = STACK[0x2F0] + 49;
  STACK[0x260] = v9 + 49;
  STACK[0x250] = v10 + 29;
  STACK[0x240] = v9 + 29;
  STACK[0x230] = v10 + 9;
  STACK[0x220] = v9 + 9;
  STACK[0x2F8] = (unint64_t)&STACK[0x650];
  STACK[0x2D0] = ((unint64_t)&STACK[0x4B8] ^ 0x7F7FA7E96391FDBFLL)
               - 0x8260088030124BFLL
               + (((v7 ^ 0x2DF) - 0x100B02D38DC0E9FLL) & (2 * (_QWORD)&STACK[0x4B8]));
  v11 = STACK[0x330];
  v12 = 502 * (STACK[0x330] ^ 0xA0D);
  LODWORD(STACK[0x2E8]) = v12;
  LODWORD(STACK[0x2E0]) = v12 - 1002;
  STACK[0x308] = ((int)v11 + 1457870251) & 0xFFFFFFFFA91AA047;
  LODWORD(STACK[0x320]) = v11 ^ 0xFE7;
  LODWORD(STACK[0x298]) = 263 * (v11 ^ 0xA03);
  *(int32x4_t *)&STACK[0x2A0] = vdupq_n_s32(0xCC59F7E6);
  *(int32x4_t *)&STACK[0x2B0] = vdupq_n_s32(0x98B3EFCC);
  LODWORD(STACK[0x218]) = v11 + 690353648;
  LODWORD(STACK[0x210]) = v11 ^ 0x926;
  LODWORD(STACK[0x290]) = v11 ^ 0xA1E;
  LODWORD(STACK[0x2D8]) = v11 ^ 0xA04;
  STACK[0x2C8] = ((_DWORD)v11 - 1147356194) & 0x44633E9E;
  return v8(a1, a2, a3, a4, a5, 1556737659, 3249998608);
}

uint64_t sub_18CA73510(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(a1 + (v2 - 411252876)) = *(_BYTE *)(v3 + (v2 - 411252876));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((3454 * ((v1 ^ 0xB70) + v2 != 411253259)) ^ (v1 - 1438))) - 4))();
}

uint64_t sub_18CA7356C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((112 * (((STACK[0x330] - 2574) & v0) != 0)) ^ (STACK[0x330] - 982)))
                            - 8))();
}

uint64_t sub_18CA73598()
{
  int v0;
  uint64_t v1;
  int v2;
  unint64_t v3;

  v2 = STACK[0x3D0];
  v3 = STACK[0x510];
  STACK[0x4F8] = (LODWORD(STACK[0x3D0]) - 756011384);
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v1 + 8 * ((933 * (v2 != 756011384)) ^ (v0 + 790)))
                                                   - ((v0 + 1047155632) & 0xC195AF7A)
                                                   + 3378))(v3);
}

uint64_t sub_18CA73AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = (v2 - 21);
  v5 = ((unint64_t)&STACK[0x4F8] ^ 0xFEFFFE6BFFB0CE6FLL)
     + 0x6B878BDFFF4FFFD1
     + ((v4 ^ 0xFDFFFCD7FF6191F0) & (2 * (_QWORD)&STACK[0x4F8]));
  v6 = a2 - 1;
  STACK[0x4F8] = v6;
  *(_BYTE *)(a1 + v6) = ((v5 - 64) ^ 0xBA) * (v5 - 47);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)(((STACK[0x4F8] != 0) * ((5 * (v4 ^ 0xF26)) ^ 0xA10)) ^ v4))
                            - 8))();
}

void sub_18CA73B68()
{
  JUMPOUT(0x18CA73B24);
}

uint64_t sub_18CA73B70()
{
  int v0;

  ((void (*)(void))STACK[0x208])();
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x328] + 8 * ((488 * (STACK[0x4D0] != 0)) ^ (v0 - 1861))) - 4))();
}

uint64_t sub_18CA73BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  int v27;
  uint64_t v28;
  unint64_t v29;

  v28 = ((uint64_t (*)(void))STACK[0x208])();
  v29 = STACK[0x328];
  STACK[0x468] -= 16;
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * ((2629 * (a27 == (((v27 ^ 0x960) - 871) | 0xA07) + 1556777107)) ^ v27 ^ 0x960)))(v28);
}

uint64_t sub_18CA73C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  int v34;

  v31 = 1437274309 * ((((v30 - 192) | 0xF2D60DB3) - (v30 - 192) + ((v30 - 192) & 0xD29F248)) ^ 0xD0D87086);
  *(_DWORD *)(v30 - 156) = v31 + 138999112;
  *(_QWORD *)(v30 - 192) = a15;
  *(_QWORD *)(v30 - 184) = a28;
  *(_DWORD *)(v30 - 144) = v31 + v28 + 2662;
  *(_QWORD *)(v30 - 152) = 0;
  *(_QWORD *)(v30 - 136) = 0;
  *(_QWORD *)(v30 - 176) = v29;
  *(_QWORD *)(v30 - 168) = a16;
  v32 = off_1E2538470[v28 - 610]((unint64_t **)(v30 - 192));
  v33 = STACK[0x328];
  v34 = *(_DWORD *)(v30 - 160);
  LODWORD(STACK[0x5D4]) = v34;
  return (*(uint64_t (**)(uint64_t))(v33 + 8 * (((v34 == (v28 ^ 0x960) + 1556777107) * (v28 ^ 0xB8E)) ^ v28)))(v32);
}

void sub_18CA73CF8()
{
  JUMPOUT(0x18CA73D10);
}

void sub_18CA73EA8()
{
  JUMPOUT(0x18CA73EDCLL);
}

uint64_t sub_18CA73F4C()
{
  unint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned __int8 v6;

  STACK[0x318] = v0;
  v4 = STACK[0x4C8];
  *(_DWORD *)(STACK[0x5F8] + 4 * ((v4 + v1) >> LODWORD(STACK[0x2E0]))) = v2;
  v5 = STACK[0x2E8];
  v6 = LODWORD(STACK[0x2E8]) - 97;
  LODWORD(STACK[0x4C8]) = v4 + 4;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((2022 * ((((v4 + 4 + v1) < 0x40) ^ v6) & 1)) ^ v5)))(302, 702);
}

uint64_t sub_18CA755D0@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unint64_t v17;

  v12 = v9 + v5;
  v13 = *(_DWORD *)(a3 + 4 * (v9 + v5 - 14));
  v14 = *(_DWORD *)(a3 + 4 * (v9 + v5 - 8)) ^ *(_DWORD *)(a3 + 4 * (v9 + v5 - 3));
  v15 = v14 + v8 - ((v6 + (v3 ^ v7) * a1 - 1208) & (2 * v14));
  v16 = *(_DWORD *)(a3 + 4 * (v12 - 16)) ^ v13;
  HIDWORD(v17) = v16 ^ v10 ^ v15;
  LODWORD(v17) = v16 ^ ~v15;
  *(_DWORD *)(a3 + 4 * (v4 + v9)) = (v17 >> 31) + v8 - (v6 & (2 * (v17 >> 31)));
  return (*(uint64_t (**)(void))(v11 + 8 * ((((v4 + 1 + v9) > 0x4F) * a2) ^ v3)))();
}

uint64_t sub_18CA75660()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 4))();
}

void sub_18CA75738()
{
  JUMPOUT(0x18CA75694);
}

uint64_t sub_18CA75750()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((3510 * ((v1 + 21 + v2) < 0x28)) ^ ((v0 - 2182) | 0x430)))
                            - 12))();
}

void sub_18CA75810()
{
  JUMPOUT(0x18CA75770);
}

uint64_t sub_18CA75828(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1302 * ((a2 + 1 + v3) < 0x3C)) ^ v2)) - 12))();
}

uint64_t sub_18CA75910(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * ((57 * ((a4 + 1 + v5) < 0x50)) ^ v4))
                                          - 12))(a3);
}

void sub_18CA759D4()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unint64_t v9;
  int v10;

  LODWORD(STACK[0x590]) = v0;
  LODWORD(STACK[0x34C]) = v4;
  LODWORD(STACK[0x3CC]) = v1;
  LODWORD(STACK[0x53C]) = v3;
  LODWORD(STACK[0x464]) = v2;
  v9 = STACK[0x5E8];
  v10 = *(_DWORD *)(STACK[0x5E8] - 0x7503D0B735518C61);
  LODWORD(STACK[0x4C8]) = v6 + 80;
  *(_DWORD *)(v9 - 0x7503D0B735518C61) = (v10 ^ v7)
                                         + (v2 ^ v7)
                                         + ((v5 - 1811695281) & 0x6BFC4ACF ^ (v7 - 1549))
                                         - (v8 & (2 * ((v10 ^ v7) + (v2 ^ v7))));
  JUMPOUT(0x18CA75A48);
}

uint64_t sub_18CA75B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t v64;
  unint64_t v65;
  int v66;
  unint64_t v67;
  unint64_t v69;
  unint64_t v70;

  v65 = STACK[0x430];
  v66 = *(unsigned __int8 *)(STACK[0x430] - 0x7503D0B735518C59) ^ 0xBF;
  if (v66 == 2)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 + 8 * (int)((120 * (((LODWORD(STACK[0x320]) ^ (*(_DWORD *)(v65 - 0x7503D0B735518C5DLL) == 959153927)) & 1) == 0)) ^ (STACK[0x330] + 806))) - 8))(a1, a64, a63, a62, a59, a6, a7, 3757871565);
  v67 = STACK[0x330];
  if (v66 == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * (int)((125 * (*(_DWORD *)(v65 - 0x7503D0B735518C5DLL) != LODWORD(STACK[0x298]) + 959150771)) ^ (STACK[0x330] - 601))))(a1, a64, a63, a62, a59, a6, a7, 3757871565);
  v69 = STACK[0x2D0];
  v70 = STACK[0x300];
  STACK[0x4B8] = 91;
  *(_BYTE *)(v65 - 0x7503D0B735518C5ELL) = (v69 ^ 0xBA) * (v69 + 17);
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 + 8 * (int)(((STACK[0x4B8] != 0) * (((v67 + 781739360) & 0xD1679A9F) - 2547)) ^ (v67 - 195))) - 8))(v70, a64, a63, a62, a59, a6, a7, 3757871565);
}

void sub_18CA76418()
{
  JUMPOUT(0x18CA763D4);
}

uint64_t sub_18CA76420()
{
  return ((uint64_t (*)(void))STACK[0x3F8])();
}

uint64_t sub_18CA76428()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  v3 = (STACK[0x330] - 1551) | 0x104;
  v4 = STACK[0x330] - 1291;
  *(_DWORD *)(STACK[0x200] + 52) = ((((LODWORD(STACK[0x5CC]) ^ v0) + (v1 ^ v0)) % 0x2710) ^ 0xBBF92E3F)
                                 + 2115502040
                                 + ((2 * (((LODWORD(STACK[0x5CC]) ^ v0) + (v1 ^ v0)) % 0x2710)) & 0x5C7E);
  v5 = STACK[0x5D4];
  STACK[0x468] = v3 + STACK[0x468] - 2900;
  LODWORD(STACK[0x358]) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2576 * (v5 == 1556779682)) ^ v4)) - 12))();
}

uint64_t sub_18CA764D0@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;

  *v1 = STACK[0x51C];
  v1[85] = STACK[0x44C];
  v1[86] = STACK[0x4CC];
  v1[87] = STACK[0x35C];
  v1[88] = STACK[0x448];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((246 * (STACK[0x540] != 0)) ^ (((a1 + 768) | 0x20B) + 362)))
                            - ((((a1 + 768) | 0x20B) - 1049061904) & 0x3E87635F)
                            - ((979 * (((a1 + 768) | 0x20B) ^ 0xA0Cu)) ^ 0xFFFFFFFFFFFFF7D4)))();
}

void sub_18CA76508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  STACK[0x468] -= 1616;
  LODWORD(STACK[0x358]) = a6 - 162;
  JUMPOUT(0x18CA76528);
}

uint64_t sub_18CA76584@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,unsigned int *a54,uint64_t (*a55)(_QWORD, uint64_t, _QWORD))
{
  unsigned int v55;
  uint64_t v56;

  v55 = (a2 + 1043972102) & 0xC1C637DF;
  v56 = a55(*a54, a1, LODWORD(STACK[0x37C]));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x328]
                                                      + 8
                                                      * (int)(((((v55 - 1379626337) & 0x523B6EDF) - 1040)
                                                             * (LODWORD(STACK[0x358]) == 1556779682)) ^ v55))
                                          - 4))(v56);
}

void sub_18CA76604()
{
  JUMPOUT(0x18CA7660CLL);
}

uint64_t sub_18CA76684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  unsigned int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  unint64_t v62;
  int v63;

  v60 = 1437274309 * ((((v59 - 192) | 0x1F9B7203) - (v59 - 192) + ((v59 - 192) & 0xE0648DF8)) ^ 0x3D950F36);
  *(_DWORD *)(v59 - 176) = (v56 - 794 + LODWORD(STACK[0x594]) - 937904473) ^ v60;
  *(_DWORD *)(v59 - 168) = (v56 - 317) ^ v60;
  *(_QWORD *)(v59 - 192) = a44;
  *(_QWORD *)(v59 - 184) = a56;
  *(_QWORD *)(v59 - 160) = a43;
  *(_DWORD *)(v59 - 164) = v60 + a53 - 555373981;
  v61 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v58 + 8 * (v56 ^ 0x49A)) - 12))(v59 - 192);
  v62 = STACK[0x328];
  v63 = *(_DWORD *)(v59 - 172);
  LODWORD(STACK[0x4F4]) = v63;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v62
                                                      + 8
                                                      * ((56 * (v63 == (((v56 + 809) | 0x208) ^ (v57 + 1547)))) ^ v56))
                                          - 12))(v61);
}

uint64_t sub_18CA76780()
{
  int v0;
  uint64_t v1;

  STACK[0x4C0] = STACK[0x4A8];
  LODWORD(STACK[0x3A4]) = STACK[0x58C];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((LODWORD(STACK[0x594]) - 1458445573 < ((515 * ((v0 + 3239) ^ 0xE6E)) ^ 0xA0Du))
                                          * (((v0 + 3239) ^ 0xAB5) - 1027)) ^ (v0 + 3239)))
                            - 8))();
}

uint64_t sub_18CA767A0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((v0 - 1379626337) & 0x523B6EDF) - 1040)
                                          * (LODWORD(STACK[0x358]) == 1556779682)) ^ v0))
                            - 4))();
}

void sub_18CA76828()
{
  JUMPOUT(0x18CA76834);
}

uint64_t sub_18CA76888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  int v66;

  v62 = STACK[0x4C0];
  v63 = 366490169 * ((~((v61 - 192) | 0x572CBF56) + ((v61 - 192) & 0x572CBF56)) ^ 0xBE7D16ED);
  *(_DWORD *)(v61 - 144) = (LODWORD(STACK[0x58C]) ^ 0x3F69BBFF)
                         - v63
                         + ((2 * LODWORD(STACK[0x58C])) & 0x7ED377FE)
                         - 656408616;
  *(_DWORD *)(v61 - 140) = v63 - 1172903982 + v59;
  *(_DWORD *)(v61 - 192) = v58 - v63 - 1024216517;
  *(_QWORD *)(v61 - 184) = v62;
  *(_QWORD *)(v61 - 176) = v57;
  *(_QWORD *)(v61 - 160) = a56;
  *(_QWORD *)(v61 - 152) = a57;
  v64 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v60 + 8 * (v59 - 1068)) - 8))(v61 - 192);
  v65 = STACK[0x328];
  v66 = *(_DWORD *)(v61 - 168);
  LODWORD(STACK[0x4F4]) = v66;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v65 + 8 * ((884 * (v66 == (v59 ^ 0xED1) + 1556777107)) ^ v59))
                                          - 12))(v64);
}

uint64_t sub_18CA7698C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  uint64_t v67;
  unint64_t v68;
  int v69;

  v64 = *(_DWORD *)(STACK[0x200] + 52);
  v65 = STACK[0x3A4];
  v66 = 1761959447 * ((2 * ((v63 - 192) & 0x6EFC11E0) - (v63 - 192) - 1862013411) ^ 0x30A42FD9);
  *(_QWORD *)(v63 - 152) = &STACK[0x1898];
  *(_QWORD *)(v63 - 168) = v60;
  *(_QWORD *)(v63 - 184) = a60;
  *(_DWORD *)(v63 - 192) = ((a46 ^ 0x46C83E35)
                          - 696297619
                          + ((a46 << (((v61 + 46) | 0xB1) + 68)) & 0xF7FDFBF6 ^ 0x726D8394)) ^ v66;
  *(_DWORD *)(v63 - 188) = (v65 ^ (v61 - 293996771)) - v66 + ((2 * v65) & 0xDCF3F7F6) + 903872240;
  *(_DWORD *)(v63 - 160) = v66 + v64 + 409806673;
  *(_DWORD *)(v63 - 156) = v66 + v61 - 1044;
  v67 = ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v61 - 1172] - 4))((unint64_t **)(v63 - 192));
  v68 = STACK[0x328];
  v69 = *(_DWORD *)(v63 - 176);
  LODWORD(STACK[0x4F4]) = v69;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v68 + 8 * ((2579 * (v69 == v62)) ^ v61)) - 12))(v67);
}

uint64_t sub_18CA76AE0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v1 ^ 0xCB2) + 313) * ((v0 - 1458445574) < 0xFFFFFFFE)) ^ v1))
                            - 8))();
}

uint64_t sub_18CA76B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t (*a42)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t *, uint64_t, uint64_t, unint64_t *),uint64_t a43,uint64_t a44,int a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,unsigned int *a61,void (*a62)(_QWORD, uint64_t, uint64_t))
{
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  char *v74;
  int v75;
  int v77;
  unint64_t v78;
  int v79;
  unsigned int v80;
  int v81;
  uint64_t v82;
  int v83;

  v71 = a42(*(unsigned int *)STACK[0x200], (v62 + v63 + 2), a46 ^ 0x3D36C3CEu, (*(_DWORD *)(STACK[0x200] + 52) - 974204439), &STACK[0x1898], v64, v65, &STACK[0x600]);
  v73 = (v71 ^ 0xFFF6F7FF) + 2109701471 + (((_DWORD)v71 << v67) & 0xFFEDEFFE);
  if (v73 == -1917422239)
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x328]
                                                                 + 8
                                                                 * ((v68 - 1334) ^ (499
                                                                                  * ((LODWORD(STACK[0x2F8])
                                                                                                  - 90618867) < 3))))
                                                     - (v68 - 595)
                                                     + 1976))(v71, v72);
  if (v73 != 2109109598)
  {
    v75 = 142545853 * ((-1634267520 - ((v70 - 192) | 0x9E970E80) + ((v70 - 192) | 0x6168F17F)) ^ 0x4B975E10);
    *(_DWORD *)(v70 - 176) = (v68 - 117) ^ v75;
    *(_QWORD *)(v70 - 184) = a40;
    LODWORD(STACK[0x318]) = v73;
    *(_DWORD *)(v70 - 192) = v73 - v75 - 552329916;
    sub_18CA4BFF4((_DWORD *)(v70 - 192));
    v74 = (char *)&STACK[0x610] + STACK[0x320];
    STACK[0x300] = (unint64_t)(v74 + 2048);
    STACK[0x308] = (unint64_t)(v74 + 2176);
    STACK[0x310] = (unint64_t)(v74 + 2304);
    JUMPOUT(0x18CA6B534);
  }
  a62(*a61, v64, v65);
  STACK[0x4C0] = 0;
  LODWORD(STACK[0x3A4]) = 0;
  v77 = *(_DWORD *)(STACK[0x200] + 52);
  v78 = STACK[0x4B0];
  v79 = LODWORD(STACK[0x414]) ^ 0x6EDCFDF3;
  v80 = (2 * LODWORD(STACK[0x414])) & 0xDDB9FBE6;
  v81 = 1314530549 * ((242315108 - ((v70 - 192) | 0xE716F64) + ((v70 - 192) | 0xF18E909B)) ^ 0x40871655);
  *(_QWORD *)(v70 - 152) = &STACK[0x600];
  *(_DWORD *)(v70 - 144) = v81 + v79 + v80 - 738238736;
  *(_QWORD *)(v70 - 184) = a60;
  *(_DWORD *)(v70 - 160) = ((a46 & 0x7FFFFFFF ^ 0x43C82C21) + 2144301182 + ((v68 - 33696305) & v66 ^ 0x786D879C)) ^ v81;
  *(_DWORD *)(v70 - 192) = (v68 - 2397) ^ v81;
  *(_DWORD *)(v70 - 176) = v77 - v81 + 1153249878;
  *(_QWORD *)(v70 - 168) = v78;
  v82 = off_1E2538470[v68 ^ 0xA9D]((unint64_t **)(v70 - 192));
  v83 = *(_DWORD *)(v70 - 172);
  LODWORD(STACK[0x4F4]) = v83;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x328] + 8 * ((1089 * (v83 == v69)) ^ (v68 - 47))) - 4))(v82);
}

void sub_18CA76BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  LODWORD(STACK[0x4F4]) = a6 + 22;
  JUMPOUT(0x18CA76BB8);
}

void sub_18CA76BF0()
{
  JUMPOUT(0x18CA76BFCLL);
}

uint64_t sub_18CA76CEC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v0 ^ (((v1 - 1458445573) < 2) | (((v1 - 1458445573) < 2) << 6))))
                            - ((v0 - 1596759357) & 0x5F2C9F8F)
                            - ((v0 - 1976) | 0x420u)
                            + 3631))();
}

uint64_t sub_18CA76D4C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  unsigned int v56;
  int v57;
  uint64_t v58;
  unint64_t v59;
  int v60;

  v55 = a1 + 1515;
  v56 = (LODWORD(STACK[0x58C]) ^ 0x7F7FF17C) + ((a1 + 1515) ^ 0xCFFDF5DB) + ((2 * LODWORD(STACK[0x58C])) & 0xFEFFE2F8);
  v57 = 1761959447 * (((v54 - 192) & 0xA551526 | ~((v54 - 192) | 0xA551526)) ^ 0x540D2B1D);
  *(_QWORD *)(v54 - 144) = STACK[0x4A8];
  *(_DWORD *)(v54 - 168) = a1 - v57 + 1205610546;
  *(_QWORD *)(v54 - 176) = a50;
  *(_DWORD *)(v54 - 192) = v50 - v57 - 1382913342;
  *(_DWORD *)(v54 - 188) = v56 ^ v57;
  *(_QWORD *)(v54 - 160) = v51;
  *(_QWORD *)(v54 - 152) = a49;
  v58 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v53 + 8 * (a1 - 865)) - 4))(v54 - 192);
  v59 = STACK[0x328];
  v60 = *(_DWORD *)(v54 - 184);
  LODWORD(STACK[0x4F4]) = v60;
  LODWORD(STACK[0x318]) = -1917422239;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v59 + 8 * (((v60 == v52) * (v55 - 1789)) ^ (v55 - 1329)))
                                          - 12))(v58);
}

void sub_18CA76E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(uint64_t),uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  uint64_t v49;

  *(_DWORD *)(v49 - 192) = v48
                         + 1329
                         + 1780978504
                         - 1697562443
                         * ((((v49 - 192) ^ 0x2ED37319 | 0xE0151CEF)
                           - ((v49 - 192) ^ 0x2ED37319)
                           + (((v49 - 192) ^ 0x2ED37319) & 0x1FEAE310)) ^ 0x19565772);
  sub_18CA82E1C((_DWORD *)(v49 - 192));
  LOBYTE(STACK[0x1998]) = (45 * ((2 * ((v49 + 64) & 0x18) - (v49 + 64) - 27) ^ 0x4D)) ^ 0x34;
  *(_DWORD *)(v49 - 164) = 673918253 * ((2 * ((v49 - 192) & 0x45521918) - (v49 - 192) - 1163008283) ^ 0x20E5FD4D)
                         + v48
                         + 735;
  LODWORD(STACK[0x2F8]) = LODWORD(STACK[0x2F8]) + v48 + 1329 - 2574;
  *(_QWORD *)(v49 - 176) = a48;
  *(_QWORD *)(v49 - 192) = a25;
  a24(v49 - 192);
  JUMPOUT(0x18CA76BB4);
}

uint64_t sub_18CA770DC()
{
  uint64_t v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(v0 + 8
                                   * ((110 * (((13 * ((v2 + 1327) ^ 0xF71)) ^ 0xA911E6F8) + v1 < 2)) ^ (v2 + 1327))))();
}

uint64_t sub_18CA77128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t (*a39)(uint64_t),uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  int v58;
  int v59;
  int v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  int v66;

  v62 = STACK[0x4B0];
  v63 = ((((v61 - 192) ^ 0xD90B7856 | 0x3953ED46) - ((v61 - 192) ^ 0xD90B7856 | 0xC6AC12B9) - 961801543) ^ 0x515113DE)
      * v59;
  *(_DWORD *)(v61 - 152) = ((LODWORD(STACK[0x414]) ^ 0xEE6ECDF7)
                          + 2143158044
                          + ((2 * LODWORD(STACK[0x414])) & 0xDCDD9BEE)) ^ v63;
  *(_QWORD *)(v61 - 160) = v62;
  *(_QWORD *)(v61 - 144) = a56;
  *(_QWORD *)(v61 - 136) = a49;
  LOBYTE(STACK[0x19A4]) = ((((v61 + 64) ^ 0x56 | 0x46) - ((v61 + 64) ^ 0x56 | 0xB9) - 71) ^ 0xDE) * v59 + 28;
  *(_QWORD *)(v61 - 192) = &STACK[0x574];
  *(_QWORD *)(v61 - 184) = a57;
  *(_DWORD *)(v61 - 168) = v63 + v58 - 280;
  *(_DWORD *)(v61 - 176) = ((((v58 ^ 0xDE3) + 47) ^ 0xEB8BA361) + v57) ^ v63;
  v64 = a39(v61 - 192);
  v65 = STACK[0x328];
  v66 = *(_DWORD *)(v61 - 164);
  LODWORD(STACK[0x4F4]) = v66;
  return (*(uint64_t (**)(uint64_t))(v65 + 8 * ((75 * (v66 == v60)) ^ v58)))(v64);
}

uint64_t sub_18CA77234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53)
{
  uint64_t v53;
  uint64_t v54;
  int v55;

  return ((uint64_t (*)(void))(*(_QWORD *)(v53
                                        + 8 * (((LODWORD(STACK[0x574]) - a53 != -2072106409) * (v55 ^ 0xC2E)) ^ v55))
                            - v54
                            + 2571))();
}

uint64_t sub_18CA77278()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x4F4]) = v2 - 379;
  v4 = 673918253
     * (((v0 ^ 0x10811040200C0400 | 0x6756EFBFD573DB97) + (v0 ^ 0x754480DD1314205 | 0x98A910402A8C2468)) ^ 0x59BC74886B755DACLL);
  *(_QWORD *)(v3 - 192) = LODWORD(STACK[0x4F4]) - v4;
  *(_DWORD *)(v3 - 156) = v4 ^ (v1 - 2061137329) ^ 0x123;
  *(_DWORD *)(v3 - 152) = v4 + v1 + 2126728701;
  *(_QWORD *)(v3 - 176) = 1556737660 - v4;
  *(_DWORD *)(v3 - 184) = v1 - 2061137329 - v4;
  *(_DWORD *)(v3 - 168) = v4;
  *(_DWORD *)(v3 - 164) = ((v1 - 2061137329) ^ 0x14) + v4;
  v5 = ((uint64_t (*)(uint64_t))STACK[0x258])(v3 - 192);
  return (*(uint64_t (**)(uint64_t))(STACK[0x328] + 8 * *(int *)(v3 - 160)))(v5);
}

uint64_t sub_18CA774C0()
{
  int v0;
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(STACK[0x200] + 56);
  *(_DWORD *)(STACK[0x200] + 56) = v2 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((49
                                          * ((v0 ^ ((v2 - 1486566030) < 0xFFFFFFFA)) & 1)) ^ (v0 - 1609)))
                            - 8))();
}

void sub_18CA77508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(uint64_t),uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  uint64_t v49;

  *(_DWORD *)(v49 - 192) = 1780978504
                         - 1697562443 * ((((2 * (v49 - 192)) | 0x457FEFDC) - (v49 - 192) - 583006190) ^ 0xF52FCF6A)
                         + (v48 ^ 0x9F8)
                         + 1560;
  sub_18CA82E1C((_DWORD *)(v49 - 192));
  LOBYTE(STACK[0x1998]) = (45 * ((((v49 + 64) ^ 0x22) & 0xBA | ((v49 + 64) ^ 4) & 0x44) ^ 0x8E)) ^ 0x34;
  *(_DWORD *)(v49 - 164) = 673918253
                         * ((((v49 - 192) ^ 0x40928722) & 0xE396E7BA | ((v49 - 192) ^ 0x11804) & 0x1C691844) ^ 0xDADB848E)
                         + (v48 ^ 0x9F8)
                         + 966;
  *(_QWORD *)(v49 - 192) = a25;
  *(_QWORD *)(v49 - 176) = a48;
  a24(v49 - 192);
  JUMPOUT(0x18CA6BC28);
}

void sub_18CA77614(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) ^ (673918253 * (((a1 | 0xD0223462) - (a1 & 0xD0223462)) ^ 0x4A6A2FCA));
  __asm { BR              X14 }
}

uint64_t sub_18CA776FC(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  _BOOL4 v8;

  v6 = 9 * (v5 ^ 0x6D1);
  v8 = v3 + 955202536 < 2547742 && v3 + 955202536 >= a3 - 2144939209 + v6;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v4
                                                              + 8
                                                              * ((v8 * ((v6 - 830764329) & 0x31846FFF ^ 0x658)) ^ v6))
                                                  - ((v6 + 1202971384) & 0xB84C1D21 ^ 0xD05)))(0x42D20BBFE6A96B5DLL, 0);
}

uint64_t sub_18CA7785C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, _QWORD *a5@<X6>, unsigned int a6@<W7>, char a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL4 v22;

  v19 = a1 + v17 + (v11 ^ 0x851F6D8D) + a6 * (unint64_t)(*(_DWORD *)(*a5 + 4 * a2) ^ v11);
  *(_DWORD *)(v15 + 4 * v16) = v11 + a3 + 1321 + v19 - (((_DWORD)v19 << ((a3 + v18) & v14 ^ a7)) & 0xA3EDB1A) - 3303;
  v20 = (v13 ^ HIDWORD(v19)) + (v10 & (v19 >> 31)) + v7;
  v22 = a2 - 98686330 < v9 && a2 - 98686330 >= a4;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * (a3 ^ (v22 * v12))) - 12))(v20);
}

uint64_t sub_18CA7790C(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((88 * (a1 != ((v2 - 3012) ^ 0x42D20BBFE6A96992))) ^ v2))
                            - ((v2 - 1111452340) & 0x423F5EF2 ^ 0x2D6)))();
}

uint64_t sub_18CA7797C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _BOOL4 v9;

  v6 = a2 ^ 0x473;
  v7 = (a2 ^ 0x8680F4E4) + v4;
  v9 = v2 + 1061769717 > 109114922 || v2 + 1061769717 < v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t))(v3
                                                                                                 + 8
                                                                                                 * ((82 * v9) ^ v6)))(a1, 519976257, 3774992062, (v5 - 604), 0xCFD3EBFFEFEFEF5FLL, 0x1DFDFDEBELL);
}

uint64_t sub_18CA77A44(uint64_t a1, int a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;

  v15 = (v10 - 1048) | 0x18;
  v16 = a1 - 0x42D20BBFE6A96B5DLL + (*(_DWORD *)(v12 + 4 * v13) ^ a4 ^ (v15 + a2) & a3);
  *(_DWORD *)(v12 + 4 * v13) = v16 + v9 - ((2 * v16) & 0xA3EDB1A);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8 * ((((a5 ^ HIDWORD(v16)) + (a6 & (v16 >> 31)) + a8 != v14) * v11) ^ v15))
                            - 12))();
}

uint64_t sub_18CA77AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  _DWORD *v9;
  int v10;
  int v11;
  _BOOL4 v12;
  _BOOL4 v13;

  v10 = ((a7 - 1025595093) & 0x3D2156BE ^ 0xC2707220) + v7;
  v11 = *v9 - 1032818532;
  v12 = v10 < -1985473326;
  v13 = v10 > v11;
  if (v11 < -1985473326 != v12)
    v13 = v12;
  return (*(uint64_t (**)(void))(v8 + 8 * ((474 * !v13) ^ a7)))();
}

void sub_18CA77B4C()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

void sub_18CA77B70(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) ^ (1314530549 * ((a1 + 1146939819 - 2 * (a1 & 0x445CE9AB)) ^ 0xF5556F65));
  __asm { BR              X11 }
}

uint64_t sub_18CA77C54@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unint64_t *a6, int a7, unsigned int a8, unint64_t *a9)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  uint64_t v14;

  v12 = v9 ^ 0x18;
  v13 = 673918253 * ((-1817583131 - (&a4 | 0x93A9E1E5) + (&a4 | 0x6C561E1A)) ^ 0xF61E05B2);
  a7 = v13 + (v9 ^ 0x18) - 342;
  a8 = v13 + 949872136;
  a5 = v11;
  a6 = &STACK[0x34AA45F4469B4FBD];
  a9 = &STACK[0x3D131E0B80724DD8];
  v14 = ((uint64_t (*)(char *))(*(_QWORD *)(a1 + 8 * ((v9 ^ 0x18) - 1299)) - 8))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * (((*(_DWORD *)(v11 - 0x69A7616A48D05166) != 1556779682)
                                                        * ((((v12 - 253742452) & 0xF1FCD7B) + 2714) ^ 0x1014)) ^ v12))
                                          - 8))(v14);
}

uint64_t sub_18CA77D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  int v10;
  uint64_t v11;
  unsigned int v12;
  _BOOL4 v13;

  v13 = a10 != v10 + (v12 ^ 0x157E) - 1398;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((8 * v13) | (16 * v13)) ^ v12)) - 12))();
}

void sub_18CA77D94(_DWORD *a1@<X8>)
{
  _DWORD *v1;
  int v2;

  *a1 = v2;
  *v1 = 1556737495;
}

void sub_18CA77E44(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = 673918253 * ((-2 - ((~(_DWORD)a1 | 0x67D84099) + (a1 | 0x9827BF66))) ^ 0xFD905B31);
  v2 = *(_DWORD *)(a1 + 28) - v1;
  v3 = (*(_BYTE *)(a1 + 8) ^ v1);
  ((void (*)(char *, void (*)()))off_1E2538470[v2 - 1911])((char *)off_1E2538470[v2 ^ 0x727] - 12, sub_18CA83098);
  v4 = *(_QWORD *)((char *)off_1E2538470[v2 ^ 0x766] - 4);
  v5 = v2 - 1697562443 * (((&v5 | 0x1AF2AF33) - (&v5 & 0x1AF2AF33)) ^ 0xCD6297B7) + 899;
  v6 = v4;
  sub_18CA4F670((uint64_t)&v5);
  __asm { BR              X9 }
}

uint64_t sub_18CA77F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v20 = 1401278017 * ((~&a16 & 0xEFB0CCC | &a16 & 0xF104F333) ^ 0xAD87A2B);
  a17 = v20 + 7;
  a16 = v17 - v20 + 2005;
  sub_18C9B6678((uint64_t)&a16);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * (((**(_DWORD **)(v19 + 8 * (v17 ^ 0x752)) == 0) * ((v17 ^ 0x607) + 2643)) ^ v17 ^ 0x607))
                                                                                                - (((v17 ^ 0x607u) + 1539) ^ 0x7B5)))(v21, v22, v23, v24, v25, v26, v27);
}

uint64_t sub_18CA78050@<X0>(int a1@<W8>)
{
  uint64_t *v1;
  _DWORD *v2;
  _DWORD *v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t (*v13)(uint64_t, _BYTE *, _DWORD *);
  int v14;
  unsigned int v15;
  uint64_t v16;
  _BYTE *v17;
  int v18;
  unsigned int v19;
  int v20;
  uint64_t result;
  uint64_t v22;
  _BYTE v23[30];
  _BYTE v24[140];

  v8 = *(unsigned int **)(v6 + 8 * (a1 - 1922));
  v9 = *v8;
  v10 = *(_QWORD *)(v6 + 8 * (a1 - 1893));
  v11 = *(_BYTE **)(v10 - 4);
  v23[0] = *v11 - 103;
  v23[1] = v11[1] - 103;
  v23[2] = v11[2] - 103;
  v23[3] = v11[3] - 103;
  v23[4] = v11[4] - 103;
  v23[5] = v11[5] - 103;
  v23[6] = v11[6] - 103;
  v23[7] = v11[7] - 103;
  v23[8] = v11[8] - 103;
  v23[9] = v11[9] - 103;
  v23[10] = v11[10] - 103;
  v23[11] = v11[11] - 103;
  v23[12] = v11[12] - 103;
  v23[13] = v11[13] - 103;
  v23[14] = v11[14] - 103;
  v23[15] = v11[15] - 103;
  v23[16] = v11[16] - 103;
  v23[17] = v11[17] - 103;
  v23[18] = v11[18] - 103;
  v23[19] = v11[19] - 103;
  v23[20] = v11[20] - 103;
  v23[21] = v11[21] - 103;
  v12 = *(_BYTE **)(v10 - 4);
  v23[22] = v12[22] - 103;
  v23[23] = v12[23] - 103;
  v23[24] = v12[24] - 103;
  v23[25] = v12[25] - 103;
  v23[26] = v12[26] - 103;
  v23[27] = v12[27] - 103;
  v23[28] = v12[28] - 103;
  v23[29] = v12[29] - 103;
  v13 = *(uint64_t (**)(uint64_t, _BYTE *, _DWORD *))(v6 + 8 * (a1 ^ 0x6B2));
  v14 = v13(v9, v23, v2);
  v15 = ((2 * v14) & 0x95B7BF76) + (v14 ^ 0xCADBDFBB);
  if (v15 != -891560005)
  {
    if (v15 == -891558903)
    {
      v16 = *v8;
      v17 = *(_BYTE **)(*(_QWORD *)(v6 + 8 * (v4 - 1930)) - 4);
      v24[0] = *v17 - 92;
      v24[1] = v17[1] - 92;
      v24[2] = v17[2] - 92;
      v24[3] = v17[3] - 92;
      v24[4] = v17[4] - 92;
      v24[5] = v17[5] - 92;
      v24[6] = v17[6] - 92;
      v24[7] = v17[7] - 92;
      v24[8] = v17[8] - 92;
      v24[9] = v17[9] - 92;
      v24[10] = v17[10] - 92;
      v24[11] = v17[11] - 92;
      v24[12] = v17[12] - 92;
      v24[13] = v17[13] - 92;
      v24[14] = v17[14] - 92;
      v24[15] = v17[15] - 92;
      v24[16] = v17[16] - 92;
      v24[17] = v17[17] - 92;
      v24[18] = v17[18] - 92;
      v24[19] = v17[19] - 92;
      v18 = v13(v16, v24, v2);
      v19 = (2 * v18) & 0xFBBFFF7E;
      v15 = (v18 ^ 0x7DDFFFBF) - 1028005892;
    }
    else
    {
      v19 = 1975386112;
    }
    __asm { BR              X8 }
  }
  v20 = (v4 - 955) | 0x20;
  *(_DWORD *)(v7 + 352) |= v20 - 1048;
  *(_DWORD *)(v7 + 52) = 1486566025;
  result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, _DWORD *))(v6 + 8 * (v4 - 1966)))(*v2, v7 + 340, v7 + 344, v7 + 348, v3);
  v22 = *v1;
  *(_DWORD *)(v1[2] - 0x18341B1156E528CBLL) = *v2;
  *(_DWORD *)(v22 - 0x2677A381FDE3BD14) = *v3 - ((((v20 - 398) | 0x529) + 1472189323) & (2 * *v3)) + 736095652;
  *((_DWORD *)v1 + 6) = 1556779682;
  return result;
}

void sub_18CA784A0(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  BOOL v5;

  v1 = 375636451 * ((a1 & 0x668C9593 | ~(a1 | 0x668C9593)) ^ 0xCA4D30E0);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x69A7616A48D05172) + 860904233;
  v3 = *(_DWORD *)(a1 + 4) - v1 + 842600248;
  v4 = (v3 < 0x70C232FC) ^ (v2 < 0x70C232FC);
  v5 = v2 < v3;
  if (v4)
    v5 = v3 < 0x70C232FC;
  __asm { BR              X11 }
}

uint64_t sub_18CA785A0()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((v2 == 1403984202) ^ (v0 + 58)) & 1)
                                          * ((v0 - 1507) ^ 0x6B6)) ^ (v0 - 1478)))
                            - 12))();
}

uint64_t sub_18CA785DC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * ((61 * (*(_DWORD *)(v1 - 0x69A7616A48D0516ELL) == 1533203976)) ^ v0))
                            - ((v0 + 758108969) & 0xD2D02BFF ^ 0x3B7)))();
}

uint64_t sub_18CA78638@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  *(_BYTE *)(*(_QWORD *)(v3 - 0x69A7616A48D0517ELL) + (v5 + 1357779117 + v2)) = *(_BYTE *)(*(_QWORD *)(v3 - 0x69A7616A48D0517ELL) + (v2 - 1533203977));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1812 * (v2 - 1 == a1)) ^ v1)) - (v1 + 1722) + 2665))();
}

uint64_t sub_18CA786A0@<X0>(int a1@<W8>)
{
  int v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(*v2 + (v3 + v6)) = *(_BYTE *)(*v2 + (v6 + v5));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v6 - 1 == a1) * v7) ^ v1)) - v4 + 2665))();
}

uint64_t sub_18CA786D8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((52 * (*(_BYTE *)(v1 - 0x69A7616A48D0516ALL) & 1)) ^ v0))
                            - ((1129 * (v0 ^ 0xE96) - 2197) | 9u)
                            + 1195))();
}

uint64_t sub_18CA78728@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  va_list va;

  va_start(va, a2);
  v5 = (*(uint64_t (**)(_QWORD, char *, _QWORD, uint64_t))(v3 + 8 * (v4 & 0xA7B429B)))(**(unsigned int **)(v3 + 8 * (v4 - 3269)), va, ((((v4 << 10) ^ 0xC142003B) + a1) & (((v4 - 2320) | 0x84) - 5295) ^ 0xFD71D7DB)+ ((2 * (((v4 << 10) ^ 0xC142003B) + a1)) & 0xFAE3A000)+ 42870821, 1);
  return (*(uint64_t (**)(void))(v2 + 8 * ((126 * (((2 * v5) & 0xF7EF3FFC) + (v5 ^ 0x7BF79FFE) != 2079825918)) ^ v4)))();
}

uint64_t sub_18CA787DC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_QWORD *)(v0 - 0x69A7616A48D0517ELL) != 0)
                                          * ((((v2 ^ 0x34E400) - 1012) | 0x182) - 121)) | v2 ^ 0x34E400))
                            - 8))();
}

uint64_t sub_18CA78838()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v3 = *(_DWORD *)(v1 - 0x69A7616A48D0516ELL)
     - ((2 * *(_DWORD *)(v1 - 0x69A7616A48D0516ELL) + 1228559344) & ((v0 ^ 0xEC1) - 1069900487))
     - 2068152772;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2988
                                * (((v3 << (v0 + 115)) & 0xB3CF7716 ^ 0x800A2000) + (v3 ^ 0x39FAEFCF) + 1050377472 != 411252875)) ^ v0)))();
}

uint64_t sub_18CA788E0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((200 * (v2 + v1 + ((207 * (v0 ^ 0xB42)) ^ 0x26184EF6u) > 7)) ^ v0))
                            - ((v0 - 267) | 0x31u)
                            + 2673))();
}

uint64_t sub_18CA78958(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a4 ^ (1658 * ((unint64_t)(a2 - v5 - a3) > 0x1F))))
                            - (((a4 ^ 0xB74u) + 2174) ^ 0xA79)))();
}

uint64_t sub_18CA78998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)((((2 * a5 + 1662207876) & 0x9CECBFBD ^ 0xB2D) * (v5 > 0x1F)) ^ (2 * a5)))
                            - 12))();
}

uint64_t sub_18CA789DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v9 = v6 + v4 + v7;
  v10 = a2 + v9;
  v11 = *(_OWORD *)(v10 - 31);
  v12 = v2 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v3 & 0xFFFFFFE0) == 32) * (((v5 + 1671) ^ 0x23) - 1471)) ^ (v5 + 1279))))();
}

void sub_18CA78A34()
{
  JUMPOUT(0x18CA78A00);
}

void sub_18CA78A40()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 0x69A7616A48D05166) = 1556737654;
}

void sub_18CA78C54(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_18CA78CDC@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2633 * (**(_BYTE **)(a1 + 8) == 0)) ^ a2)) - 12))();
}

uint64_t sub_18CA78D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;

  *(_QWORD *)(*(_QWORD *)(a17 + 96) + 504) = v44 + 1;
  *(_DWORD *)(*(_QWORD *)(a17 + 96) + 496) = a19 - 1;
  v47 = 673918253 * ((((v46 - 160) | 0xEB969899) - (v46 - 160) + ((v46 - 160) & 0x14696760)) ^ 0x71DE8331);
  *(_DWORD *)(v46 - 156) = v47 ^ 0x8E0939CC;
  *(_DWORD *)(v46 - 152) = v47 - 1676530937;
  STACK[0x390] = (unint64_t)&STACK[0x7503D0B735518D85];
  v48 = sub_18CA1DCF0(v46 - 160);
  return (*(uint64_t (**)(uint64_t))(v45
                                            + 8
                                            * ((47
                                              * (a19 + 357873272 + ((2 * (a44 & 0xF)) ^ 8) + (a44 & 0x3F ^ 0xBD9B77FB) > 0xFFFFFFBF)) ^ 0x6D9u)))(v48);
}

uint64_t sub_18CA78EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  uint64_t v20;
  int v21;
  _BOOL4 v22;

  v22 = v19 + 886317752 < (a19 + 151221541);
  if ((a19 + 151221541) < 0x3613469E != (v19 + 886317752) < 0x3613469E)
    v22 = (a19 + 151221541) < 0x3613469E;
  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * ((v22 * ((v21 ^ 0x138) - 209)) ^ v21)) - 12))();
}

uint64_t sub_18CA78F64(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;

  v47 = (a2 - 1336914279) & 0x4FAFBFFE;
  v48 = a4 + a2 - 246;
  v49 = 375636451 * ((v46 - 160) ^ 0x533E5A8C);
  STACK[0x388] = a16;
  *(_DWORD *)(v46 - 160) = v49 + a2 + 991;
  *(_DWORD *)(v46 - 156) = v49 + a19 + 1350209416;
  v50 = sub_18CA422D0(v46 - 160);
  v51 = a45 & 0x3F;
  *(&a36 + (v51 ^ 0x34)) = -39;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v45
                                                      + 8
                                                      * ((((v51 ^ 0x34) > (v48 ^ 0x89CA0621))
                                                        * (v47 - 2767)) ^ a2))
                                          - 8))(v50);
}

uint64_t sub_18CA79060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  unsigned int v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = v7 == a7 + ((v8 + 151647858) | 0x80C00016) - 611;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (((4 * ((((v8 - 2060) ^ v10) & 1) == 0)) & 0xDF | (32
                                                                                           * (((v8 - 12) ^ ~v10) & 1))) ^ v8))
                            - 12))();
}

uint64_t sub_18CA790B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9 + 8 * ((28 * ((v7 ^ 0xBu) >= a7 + ((v8 - 2122318192) | 0x84A0004u) - 666)) | v8)))();
}

uint64_t sub_18CA790F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35)
{
  unsigned int v35;
  char v36;
  int v37;
  uint64_t v38;

  *(_QWORD *)(&a35 + v35 + 1) = 0x5959595959595959;
  return ((uint64_t (*)(void))(*(_QWORD *)(v38 + 8 * ((125 * ((v36 & 0x38) == 8)) ^ (v37 - 482)))
                            - ((v37 - 768) | 0x300u)
                            + 1918))();
}

uint64_t sub_18CA79148(double a1)
{
  uint64_t v1;
  int v2;
  double *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *v3 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 == 0) * v4) ^ v2)) - v1 + 1918))();
}

uint64_t sub_18CA79170()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (v0 ^ (v2 == v1))))();
}

uint64_t sub_18CA79194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int32x4_t a55,int32x4_t a56,int32x4_t a57,int32x4_t a58)
{
  int v58;
  uint64_t v59;
  int v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t (*v66)(__n128, __n128, __n128, __n128, __n128);
  __n128 v67;
  __n128 v68;
  __n128 v69;
  __n128 v70;
  __n128 v71;
  uint64_t v72;
  int v73;
  uint8x16_t v74;
  uint16x8_t v75;
  int8x16_t v76;
  uint16x8_t v77;
  int8x16_t v78;
  uint8x16_t v79;
  uint16x8_t v80;
  uint16x8_t v81;
  int8x16_t v82;
  int8x16_t v83;
  int8x16_t v84;
  int8x16_t v85;
  uint8x16_t v86;
  int8x16_t v89;
  int8x16_t v94;
  int32x4_t v95;
  int32x4_t v96;
  int32x4_t v97;
  int v98;
  uint8x16_t v100;
  uint16x8_t v101;
  uint16x8_t v102;
  uint8x16_t v103;
  uint8x16_t v108;
  uint16x8_t v109;
  uint16x8_t v110;
  int32x4_t v111;
  int32x4_t v112;
  int32x4_t v113;
  int32x4_t v114;
  _DWORD *v115;
  int v116;
  int v117;
  int v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int8x16x4_t v124;
  int8x16x4_t v125;

  v66 = (uint64_t (*)(__n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v63 + 8 * ((int)a7 + v58 - 428))
                                                                       - 8);
  LODWORD(v120) = HIDWORD(a18) - 764334453;
  v67.n128_u64[0] = 0x5959595959595959;
  v67.n128_u64[1] = 0x5959595959595959;
  v68 = (__n128)vdupq_n_s32(0x4C59F7FEu);
  v69 = (__n128)vdupq_n_s32(0xCC59F7E6);
  v123 = v64 - 16;
  v70.n128_u64[0] = 0xB2B2B2B2B2B2B2B2;
  v70.n128_u64[1] = 0xB2B2B2B2B2B2B2B2;
  v71 = (__n128)vdupq_n_s32(0x98B3EFCC);
  LODWORD(a26) = 205;
  v72 = a44;
  HIDWORD(a24) = HIDWORD(a43);
  v122 = a44;
  v73 = BYTE4(a46) ^ 0xBF;
  HIDWORD(a21) = BYTE4(a46) ^ 0xFFFFFFBF;
  if (v73 == 2)
  {
    HIDWORD(v120) = a45;
    v121 = *(_QWORD *)(v63 + 8 * ((int)a7 + v58 - 428)) - 8;
    v125 = vld4q_s8((const char *)&a34 + 4);
    LODWORD(a21) = HIDWORD(a45);
    v100 = (uint8x16_t)veorq_s8(v125.val[0], (int8x16_t)v67);
    v101 = vmovl_u8(*(uint8x8_t *)v100.i8);
    v102 = vmovl_high_u8(v100);
    v103 = (uint8x16_t)veorq_s8(v125.val[1], (int8x16_t)v67);
    _Q22 = vmovl_u8(*(uint8x8_t *)v103.i8);
    _Q21 = vmovl_high_u8(v103);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v108 = (uint8x16_t)veorq_s8(v125.val[2], (int8x16_t)v67);
    v109 = vmovl_high_u8(v108);
    v110 = vmovl_u8(*(uint8x8_t *)v108.i8);
    v125.val[0] = veorq_s8(v125.val[3], (int8x16_t)v67);
    v125.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v125.val[0]);
    v125.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v125.val[1]);
    v125.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v125.val[1].i8);
    v125.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v125.val[0].i8);
    v125.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v125.val[0]);
    v125.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v125.val[0].i8);
    v111 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v110.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v101.i8), 0x18uLL)), v125.val[0]);
    v112 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v110, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v101), 0x18uLL)), v125.val[3]);
    v113 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v109.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v102.i8), 0x18uLL)), v125.val[1]);
    v114 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v109, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v102), 0x18uLL)), v125.val[2]);
    v125.val[0] = veorq_s8(vandq_s8((int8x16_t)v111, (int8x16_t)v68), (int8x16_t)(*(_OWORD *)v125.val & __PAIR128__(0xFFFFFF18FFFFFF18, 0xFFFFFF18FFFFFF18)));
    v125.val[3] = veorq_s8(vandq_s8((int8x16_t)v112, (int8x16_t)v68), (int8x16_t)(*(_OWORD *)&v125.val[3] & __PAIR128__(0xFFFFFF18FFFFFF18, 0xFFFFFF18FFFFFF18)));
    v125.val[1] = veorq_s8(vandq_s8((int8x16_t)v113, (int8x16_t)v68), (int8x16_t)(*(_OWORD *)&v125.val[1] & __PAIR128__(0xFFFFFF18FFFFFF18, 0xFFFFFF18FFFFFF18)));
    v125.val[2] = veorq_s8(vandq_s8((int8x16_t)v114, (int8x16_t)v68), (int8x16_t)(*(_OWORD *)&v125.val[2] & __PAIR128__(0xFFFFFF18FFFFFF18, 0xFFFFFF18FFFFFF18)));
    a57 = vaddq_s32(vsubq_s32(v113, vaddq_s32((int32x4_t)v125.val[1], (int32x4_t)v125.val[1])), (int32x4_t)v69);
    a58 = vaddq_s32(vsubq_s32(v114, vaddq_s32((int32x4_t)v125.val[2], (int32x4_t)v125.val[2])), (int32x4_t)v69);
    a55 = vaddq_s32(vsubq_s32(v111, vaddq_s32((int32x4_t)v125.val[0], (int32x4_t)v125.val[0])), (int32x4_t)v69);
    a56 = vaddq_s32(vsubq_s32(v112, vaddq_s32((int32x4_t)v125.val[3], (int32x4_t)v125.val[3])), (int32x4_t)v69);
    v115 = (_DWORD *)&a55 + v59 + 1679579072;
    v116 = *((_DWORD *)&a55 + v59 + 1679579064) ^ *(v115 - 3);
    v117 = v116 + v61 - (a5 & (2 * v116));
    v118 = *(v115 - 16) ^ *(v115 - 14);
    HIDWORD(v119) = v118 ^ 0x4C59F7E6 ^ v117;
    LODWORD(v119) = v118 ^ ~v117;
    *v115 = (v119 >> 31) + v61 - (a5 & (2 * (v119 >> 31)));
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8 * ((28 * (v64 == 1679579009)) ^ 0x2A6u)))(608, v123, 1129081815, 94575982, a5, 1818, a7, v72, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             v120,
             v121,
             a24,
             v122,
             a26,
             v123,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54);
  }
  else if (v73 == 1)
  {
    HIDWORD(v120) = a45;
    v124 = vld4q_s8((const char *)&a34 + 4);
    v74 = (uint8x16_t)veorq_s8(v124.val[0], (int8x16_t)v67);
    v75 = vmovl_high_u8(v74);
    v76 = (int8x16_t)vmovl_high_u16(v75);
    v77 = vmovl_u8(*(uint8x8_t *)v74.i8);
    v78 = (int8x16_t)vmovl_high_u16(v77);
    v79 = (uint8x16_t)veorq_s8(v124.val[1], (int8x16_t)v67);
    v80 = vmovl_u8(*(uint8x8_t *)v79.i8);
    v81 = vmovl_high_u8(v79);
    v82 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v80.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v77.i8));
    v83 = vorrq_s8((int8x16_t)vshll_high_n_u16(v80, 8uLL), v78);
    v84 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v81.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v75.i8));
    v85 = vorrq_s8((int8x16_t)vshll_high_n_u16(v81, 8uLL), v76);
    v86 = (uint8x16_t)veorq_s8(v124.val[2], (int8x16_t)v67);
    _Q22 = (int8x16_t)vmovl_high_u8(v86);
    _Q21 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v86.i8);
    v89 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v94 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    v124.val[0] = veorq_s8(v124.val[3], (int8x16_t)v67);
    v124.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v124.val[0].i8);
    v124.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v124.val[0]);
    v95 = (int32x4_t)vorrq_s8(vorrq_s8(v82, v89), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v124.val[1].i8), 0x18uLL));
    v124.val[1] = vorrq_s8(vorrq_s8(v83, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v124.val[1]), 0x18uLL));
    v96 = (int32x4_t)vorrq_s8(vorrq_s8(v84, v94), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v124.val[0].i8), 0x18uLL));
    v97 = (int32x4_t)vorrq_s8(vorrq_s8(v85, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v124.val[0]), 0x18uLL));
    a57 = vaddq_s32(vsubq_s32(v96, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v96, v96), (int8x16_t)v71)), (int32x4_t)v69);
    a58 = vaddq_s32(vsubq_s32(v97, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v97, v97), (int8x16_t)v71)), (int32x4_t)v69);
    a55 = vaddq_s32(vsubq_s32(v95, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v95, v95), (int8x16_t)v71)), (int32x4_t)v69);
    a56 = vaddq_s32(vsubq_s32((int32x4_t)v124.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v124.val[1], (int32x4_t)v124.val[1]), (int8x16_t)v71)), (int32x4_t)v69);
    v98 = (HIDWORD(a43) ^ v62)
        + v65
        + ((a45 ^ v62) & (a44 ^ 0xAA5CE291) | (a44 ^ v62) & (HIDWORD(a44) ^ v62))
        + dword_18CF157E0[v123 + v59]
        + (a55.i32[(*(_BYTE *)(v123 + v59 + 0x18CF13D7ALL) - 40)] ^ v61);
    return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t (**)(unint64_t **), uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 + 4864) - 12))(608, 230, ((v98 + v62 - (v60 & (2 * v98))) ^ v62) << (*(_BYTE *)(v123 + v59 + 0x18CF13EC0) - 24), off_1E2538470, 2750273681, 1818, 1679579072, a44, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             v120,
             v66,
             a24,
             a44,
             a26,
             v64 - 16,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54);
  }
  else
  {
    HIDWORD(a43) = 2 * (HIDWORD(a43) ^ v62) + v62 - (v60 & (4 * (HIDWORD(a43) ^ v62)));
    LODWORD(a44) = 2 * (a44 ^ v62) + v62 - (v60 & (4 * (a44 ^ v62)));
    HIDWORD(a44) = 2 * (HIDWORD(a44) ^ v62) + v62 - (v60 & (4 * (HIDWORD(a44) ^ v62)));
    LODWORD(a45) = 2 * (a45 ^ v62) + v62 - (v60 & (4 * (a45 ^ v62)));
    return v66(v67, v68, v69, v70, v71);
  }
}

uint64_t sub_18CA7A0EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,unsigned int a22)
{
  uint64_t v22;
  unsigned int v23;
  _BOOL4 v24;
  _BOOL4 v25;
  _BOOL4 v26;

  v23 = a20 - 29239869 + 19 * (a4 ^ (a4 + 57));
  v24 = v23 < ((a7 + a4 - 212) ^ 0xFF8101CA);
  v25 = v23 > a22;
  if (a22 < 0xFF810004 != v24)
    v26 = v24;
  else
    v26 = v25;
  return (*(uint64_t (**)(void))(v22 + 8 * ((2498 * !v26) ^ (a7 + a4 + 1108))))();
}

uint64_t sub_18CA7A188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * ((3413 * (v7 + v9 + 63 >= (v7 + v9))) ^ v8)) - 4))(a1, a2, a3, 214, a5, a6, a7, 1591);
}

uint64_t sub_18CA7A1CC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  uint64_t v13;
  uint64_t v14;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * (int)((27
                                               * (~a12
                                                + v13
                                                - (unint64_t)(((104 * (a1 ^ 0x89CA0606)) ^ 0xFEC0DA9A) + v12) < 0x10)) | (104 * (a1 ^ 0x89CA0606))))
                            - 4))();
}

uint64_t sub_18CA7A230@<X0>(unint64_t a1@<X3>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  *(_BYTE *)(v6 + v5) = *(_BYTE *)(v10 + (v4 + v7))
                      - (v11 & (2 * *(_BYTE *)(v10 + (v4 + v7))))
                      + 89;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((((a3 + a4 - 609) | v8) ^ a1) + v5 == 64) * a2) ^ (a3 + a4 + 2281))))();
}

uint64_t sub_18CA7A280@<X0>(int a1@<W1>, unsigned int a2@<W2>, int a3@<W6>, int a4@<W8>, int8x16_t a5@<Q0>, int8x16_t a6@<Q3>)
{
  int v6;
  int8x16_t *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int8x16_t v11;

  v11 = *(int8x16_t *)(v10 + v8 + v6 + ((a4 + a1) & a2) - 215);
  *v7 = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), a6)), a5);
  return (*(uint64_t (**)(void))(v9 + 8 * (a3 + a4 + 2052)))();
}

uint64_t sub_18CA7A2E0@<X0>(int a1@<W3>, int a2@<W6>, int a3@<W8>)
{
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v3 + 8 * ((491 * (a3 - 153968432 < ((2 * (v4 ^ (a1 - 1323))) ^ 0xDC2u))) ^ (v4 + a2))))();
}

uint64_t sub_18CA7A320@<X0>(int a1@<W6>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = a2;
  v5 = a2 - 153968431;
  if (v5 <= 0x38)
    v5 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((v5 - v4 + 153965682 + a1 + ((v2 - 1076921892) & 0xC9FA7E3F) + 2076 < 8) ^ v2))
                            - 8))();
}

uint64_t sub_18CA7A38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35)
{
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)(&a35 + v37 + ((v35 - 2076) ^ 0xFFFFFFFFF6D2A272)) = 0x5959595959595959;
  return ((uint64_t (*)(void))(*(_QWORD *)(v38 + 8 * ((71 * ((v36 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ v35)) - 8))();
}

uint64_t sub_18CA7A3E0(double a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(double *)(v6 + (v3 ^ v2)) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v5 == 0) * v4) ^ v1)) - 8))();
}

uint64_t sub_18CA7A40C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((2419 * (((v0 == v1) ^ (v2 - 1)) & 1)) ^ v2)))();
}

void sub_18CA7A44C()
{
  JUMPOUT(0x18CA7950CLL);
}

uint64_t sub_18CA7A8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  int v47;
  unsigned int v48;
  int v49;
  int v50;
  uint64_t v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  _BOOL4 v55;

  v52 = (((v49 + 164232287) | a6) ^ 0x7D4ED345) + v50;
  v53 = *(_DWORD *)(&a35 + (v52 & 0xFFFFFFFC) + 72);
  v54 = v50 + v47;
  *(_BYTE *)(a5 + v52) = (HIBYTE(v53) ^ 0x55) - ((2 * (HIBYTE(v53) ^ 0x55)) & 0xB2) + 89;
  *(_BYTE *)(a5 + v54) = (BYTE2(v53) ^ 0xA3) - ((2 * (BYTE2(v53) ^ 0xA3)) & 0xB2) + 89;
  *(_BYTE *)(a5 + v54 + 1) = (BYTE1(v53) ^ 0x1D) + (~(2 * (BYTE1(v53) ^ 0x1D)) | 0x4D) + 90;
  *(_BYTE *)(a5 + v54 + 2) = v53 ^ 0x37;
  v55 = v50 + 63649899 < (a47 - 702882803);
  if (v50 + 63649899 < v48 != a47 - 702882803 < v48)
    v55 = a47 - 702882803 < v48;
  return ((uint64_t (*)(void))(*(_QWORD *)(v51 + 8 * ((3076 * v55) ^ v49)) - 8))();
}

void sub_18CA7AA70()
{
  JUMPOUT(0x18CA7AA40);
}

uint64_t sub_18CA7AA7C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  uint64_t v40;

  *(_DWORD *)(&a40 + a22) = 34654560;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v40 + 8 * ((a1 - 64) ^ (a1 - 1929))) - 4))(1556779682);
}

uint64_t sub_18CA7AB24()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(v1 + *(_QWORD *)(v3 + 8 * (v0 ^ (120 * (v4 == v2)))) - ((v0 + 8912483) | 0x89420210) + 4))();
}

uint64_t sub_18CA7AB74(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  uint64_t v20;

  return ((uint64_t (*)(void))(*(_QWORD *)(v20
                                        + 8
                                        * ((56
                                          * (((a2 - 756012897 + ((v19 - 1047) | 0x460)) & ((v19 + 73) ^ 0xFFFFFA10))
                                           - a19 == -756011385)) ^ (v19 + 363)))
                            - 8))();
}

uint64_t sub_18CA7ABD0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((972 * (v4 == ((a4 + v5 - 1516) ^ 0x8BDACF76))) ^ v5))
                            - (((v5 - 1260) | 0x18u) ^ 0x114)))();
}

uint64_t sub_18CA7AC1C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  int v29;
  uint64_t v30;
  unsigned __int8 v31;
  int v32;
  unsigned int v33;
  int v34;
  BOOL v35;

  v31 = a7 + v29 + 15;
  v32 = a7 + v29 - 376;
  v33 = a7 + v29 + 894 + a29 + 1066799218;
  v34 = (v33 < 0xA645F08B) ^ ((a2 + 2033590035) < 0xA645F08B);
  v35 = v33 < a2 + 2033590035;
  if (v34)
    v35 = (a2 + 2033590035) < 0xA645F08B;
  return (*(uint64_t (**)(void))(v30 + 8 * ((115 * ((v31 ^ v35) & 1)) ^ v32)))();
}

uint64_t sub_18CA7ADB4@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;

  v5 = *(_DWORD *)(v2 + 48 * (v4 + v1) + 36) == v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((4 * v5) | (8 * v5)) ^ (a1 | 0x202)))
                            - ((5 * ((a1 | 0x202) ^ 0xB58) + 1867120928) & 0x90B5FEDF)
                            + 1167))();
}

uint64_t sub_18CA7AE1C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14)
{
  int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;

  v18 = 142545853 * ((1027059260 - ((v17 - 160) | 0x3D37AE3C) + ((v17 - 160) | 0xC2C851C3)) ^ 0xE837FEAC);
  STACK[0x3A0] = a11;
  STACK[0x398] = a12;
  STACK[0x3B0] = a14;
  STACK[0x388] = v16;
  *(_DWORD *)(v17 - 120) = v14 - v18 + 670;
  *(_DWORD *)(v17 - 116) = a2 - v18 + 490055785;
  STACK[0x380] = a13;
  ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v14 ^ 0x729] - 12))((unint64_t **)(v17 - 160));
  return ((uint64_t (*)(void))(*(_QWORD *)(v15
                                        + 8
                                        * (((*(_DWORD *)(v17 - 144) == 1556779682) * ((v14 - 979) ^ (v14 + 596))) ^ v14))
                            - 12))();
}

uint64_t sub_18CA7AF38(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10
                                                              + 8
                                                              * (((*(_DWORD *)(v9 + 48 * (v11 + v7)) == ((v8 - 989) ^ 0x6386485E))
                                                                * ((v8 - a7 - 1490) ^ (a4 + 7))) | v8)))(a1, v12, v9);
}

uint64_t sub_18CA7AF90@<X0>(int a1@<W3>, int a2@<W6>, int a3@<W8>)
{
  if ((a3 - 1575424075) <= 0x10 && ((1 << (a3 - 75)) & 0x14301) != 0)
    __asm { BR              X10 }
  return 4294925278;
}

void sub_18CA7B42C(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 - 366490169 * ((2 * (a1 & 0x2A540D67) - (_DWORD)a1 + 1437332120) ^ 0x4305A4DC);
  __asm { BR              X10 }
}

uint64_t sub_18CA7B4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_DWORD *)(*(_QWORD *)(a1 + 8) + a2) == v3) * ((v4 - 2639) ^ 0x362)) ^ v4))
                            - ((v4 - 2699) | 0xC10u)
                            + 3910))();
}

uint64_t sub_18CA7B528@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  _QWORD v4[2];
  unsigned int v5;

  v5 = v2
     + 476588053 * ((1769695709 - (v4 | 0x697B69DD) + (v4 | 0x96849622)) ^ 0x2B799261)
     + 754;
  v4[0] = v1;
  v4[1] = a1;
  return sub_18CA8284C((uint64_t)v4);
}

void sub_18CA7B6AC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) - 1434876433 * ((-2 - ((a1 | 0xE0125E80) + (~(_DWORD)a1 | 0x1FEDA17F))) ^ 0xEB8F95D2);
  __asm { BR              X16 }
}

uint64_t sub_18CA7B7E8()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((2659 * ((v0 ^ 0xB45C8EE5) != ((v1 - 870171387) & 0x33DDC7FF ^ 0x6FD))) ^ v1)))();
}

uint64_t sub_18CA7B848@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;

  *(_BYTE *)(a1 + (v9 - 623330623)) = *(_BYTE *)(v4 + (((_BYTE)v9 - 63) & 0xF)) ^ *(_BYTE *)(v2 + (v9 - 623330623)) ^ *(_BYTE *)(v5 + (((_BYTE)v9 - 63) & 0xF)) ^ *(_BYTE *)(((v9 - 623330623) & 0xFLL) + v3 + 1) ^ (((v9 - 63) & 0xF) * ((v6 - 39) ^ 0xC1));
  v11 = v7 > 0xE3430814;
  if (v11 == v9 - 141184339 < v1)
    v11 = v9 - 141184339 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((2802 * v11) ^ v6)) - 8))();
}

uint64_t sub_18CA7B8E0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v0 ^ (3086
                                               * ((((v0 - 662) ^ 0x4BCF8B52) & (2 * v1) ^ (((v0 - 574429447) & 0x223D16DF)
                                                                                         + 1216940074))
                                                + (v1 ^ 0x91BB497F)
                                                - 75957509 != 559989397))))
                            - 8))();
}

uint64_t sub_18CA7B964(int a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * ((607 * (a2 + a1 + (a4 ^ 0x65Au) - 635946907 - 572 >= (a4 ^ 0x46Fu))) ^ a4)))();
}

uint64_t sub_18CA7B9AC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((11 * (a3 + (((a4 ^ 0xB72) - 3333) | 0x2Du) + v4 - 589 < 0xFFFFFFF0)) ^ a4 ^ 0xB72))
                            - 12))();
}

uint64_t sub_18CA7B9F0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL4 v19;

  v10 = a4 - 2752;
  v11 = (a2 + a1 + a3) + a5;
  v12 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  v13 = v12 + v7 - v11;
  v14 = (v12 | v8) - v11;
  v15 = (v12 | v6) - v11 + (v10 - 536) - 572;
  v19 = (unint64_t)(v5 - a5) < 0x10 || v13 < 0x10 || v14 < 0x10 || v15 < ((v10 + 2795) ^ 0xF50uLL);
  return (*(uint64_t (**)(void))(v9 + 8 * ((50 * v19) ^ v10)))();
}

uint64_t sub_18CA7BA68()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((v1 < ((v0 - 695896258) & 0x297A7BBDu) - 556)
                                               * ((v0 + 803029183) & 0xD022BDB8 ^ 0xDBF)) ^ v0))
                            - 4))();
}

uint64_t sub_18CA7BAC4@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  unsigned int v60;
  int8x16_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16x4_t v65;
  int8x16x4_t v66;

  *(_DWORD *)(v59 - 120) = v57 - 1;
  *(_DWORD *)(v59 - 128) = v57 + 14;
  v65.val[1].i64[0] = ((_BYTE)v57 + 5) & 0xF;
  v65.val[1].i64[1] = ((_BYTE)v57 + 4) & 0xF;
  v65.val[2].i64[0] = ((_BYTE)v57 + 3) & 0xF;
  v65.val[2].i64[1] = ((_BYTE)v57 + 2) & 0xF;
  v65.val[3].i64[0] = ((_BYTE)v57 + 1) & 0xF;
  v65.val[3].i64[1] = v57 & 0xF;
  v60 = a2 + a1 + a3;
  v61.i64[0] = 0x1717171717171717;
  v61.i64[1] = 0x1717171717171717;
  v65.val[0].i64[0] = v60 & 0xF;
  v65.val[0].i64[1] = ((_BYTE)v57 + 6) & 0xF;
  v62.i64[0] = vqtbl4q_s8(v65, (int8x16_t)xmmword_18CF0E650).u64[0];
  v66.val[0].i64[1] = *(_DWORD *)(v59 - 128) & 0xF;
  v66.val[1].i64[1] = ((_BYTE)v57 + 12) & 0xF;
  v66.val[2].i64[1] = ((_BYTE)v57 + 10) & 0xF;
  v66.val[3].i64[1] = ((_BYTE)v57 + 8) & 0xF;
  v66.val[0].i64[0] = *(_DWORD *)(v59 - 120) & 0xF;
  v66.val[1].i64[0] = ((_BYTE)v57 + 13) & 0xF;
  v66.val[2].i64[0] = ((_BYTE)v57 + 11) & 0xF;
  v66.val[3].i64[0] = (v57 + 9) & 0xF;
  v62.i64[1] = vqtbl4q_s8(v66, (int8x16_t)xmmword_18CF0E650).u64[0];
  v63 = vrev64q_s8(vmulq_s8(v62, v61));
  *(int8x16_t *)(a5 - 15 + v60) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v55 + v65.val[0].i64[0] - 15), *(int8x16_t *)(v53 - 15 + v60)), veorq_s8(*(int8x16_t *)(v56 + v65.val[0].i64[0] - 15), *(int8x16_t *)(v65.val[0].i64[0] + v54 - 14))), vextq_s8(v63, v63, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a53 + 8 * ((998 * ((v58 & 0xFFFFFFF0) == 16)) ^ a4))
                            - 10 * (a4 ^ 0xD8Au)
                            + 492))();
}

void sub_18CA7BC38()
{
  JUMPOUT(0x18CA7BBB8);
}

uint64_t sub_18CA7BC44()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((619 * (v1 ^ 0x1F6) - 1142) | 0x407) ^ 0x46B) * (v0 == v2)) ^ v1)))();
}

uint64_t sub_18CA7BC84()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((2332 * (((v0 ^ 0x46F) & v1) != 0)) ^ v0)))();
}

uint64_t sub_18CA7BCC4@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  char v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  int8x16x4_t v66;

  *(_DWORD *)(v62 - 152) = v59;
  *(_QWORD *)(v62 - 128) = a4 - 7;
  *(_QWORD *)(v62 - 120) = v52 - 7;
  *(_DWORD *)(v62 - 140) = v61 & 0xFFFFFFF8;
  *(_DWORD *)(v62 - 136) = v61;
  *(_DWORD *)(v62 - 132) = 8 - (v61 & 0xFFFFFFF8);
  v63 = a2 + a1 + v58;
  v64 = (a2 + a1 + a3 - v60);
  v66.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3 - (_BYTE)v60) & 0xF;
  v66.val[0].i64[1] = (v63 - 7 - (_BYTE)v60) & 0xF;
  v66.val[1].i64[0] = (v63 - (_BYTE)v60 + 42 * (v57 ^ 0x30)) & 0xF;
  v66.val[1].i64[1] = (v63 - 9 - (_BYTE)v60) & 0xF;
  v66.val[2].i64[0] = (v63 - 10 - (_BYTE)v60) & 0xF;
  v66.val[2].i64[1] = (v63 - 11 - (_BYTE)v60) & 0xF;
  v66.val[3].i64[0] = (v63 - 12 - (_BYTE)v60) & 0xF;
  v66.val[3].i64[1] = (v56 - v60) & 0xFLL;
  *(int8x8_t *)(*(_QWORD *)(v62 - 128) + v64) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v54 + (v64 & 0xF) - 7), *(int8x8_t *)(*(_QWORD *)(v62 - 120) + v64)), veor_s8(*(int8x8_t *)(v55 + (v64 & 0xF) - 7), *(int8x8_t *)((v64 & 0xF) + v53 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v66, (int8x16_t)xmmword_18CF0E660), (int8x8_t)0x1717171717171717)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a52 + 8 * ((4072 * (*(_DWORD *)(v62 - 132) == -v60)) ^ v57))
                                         - 8))((__n128)xmmword_18CF0E660);
}

void sub_18CA7BE10()
{
  JUMPOUT(0x18CA7BD34);
}

uint64_t sub_18CA7BE18(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((191 * (a3 ^ 0x1FB)) ^ 0x7A2) * (*(_DWORD *)(v4 - 136) != *(_DWORD *)(v4 - 140))) ^ a3)))();
}

uint64_t sub_18CA7BE5C@<X0>(int a1@<W5>, unsigned int a2@<W7>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = (a1 - 559989897);
  *(_BYTE *)(a3 + v9) = *(_BYTE *)(v5 + (v9 & 0xF)) ^ *(_BYTE *)(v3 + v9) ^ *(_BYTE *)(v6 + (v9 & 0xF)) ^ *(_BYTE *)(v4 + (v9 & 0xF) + (a2 ^ 0x23CLL)) ^ (23 * (v9 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (int)((58 * (a1 - 1 == v7)) ^ (a2 + 1162))) - 8))();
}

uint64_t sub_18CA7BED4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  int v54;

  v52 = *(_QWORD *)(v49 + 48);
  *(int8x16_t *)(v51 - 112) = veorq_s8(*(int8x16_t *)*(_QWORD *)(v49 + 40), (int8x16_t)xmmword_18CF0E6B0);
  if (a8)
    v53 = v52 == 0x2B6480F0AD2A3701;
  else
    v53 = 1;
  v54 = !v53;
  HIDWORD(a25) = 2 * v48;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * (int)((498 * v54) ^ a4)))(v52, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_18CA7BF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57)
{
  int v57;
  uint64_t v58;
  unsigned int v59;
  _BOOL4 v61;

  v59 = ((a57 ^ 0xF7BBE658) & HIDWORD(a25)) + (v57 ^ 0x7BDDF769);
  v61 = v59 != 2078144361 && (((_BYTE)v59 + 7) & 0xF) == ((9 * (a5 ^ 0x4F3)) ^ 0x9C6) - 2187;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * (int)((3312 * v61) ^ a5)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_18CA7BFC0@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  unsigned __int8 *v50;
  int v51;
  int v52;
  uint64_t v53;
  char *v54;
  int v55;
  char *v56;
  int v57;
  int v58;
  uint64_t (*v59)(unint64_t **);
  int v60;
  int v61;
  unint64_t v62;
  char *v63;
  int v64;
  int v65;
  char v66;
  int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  char *v73;
  uint64_t v74;
  uint64_t (*v75)(unint64_t **);
  unsigned int v76;
  uint64_t (*v77)(unint64_t **);
  int v78;
  int v79;
  char *v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  char *v133;
  unsigned int v134;
  char *v135;
  int v136;
  char *v137;
  char *v138;
  unsigned int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  int v199;
  int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  char *v208;
  char *v209;
  uint64_t (*v210)(unint64_t **);
  uint64_t (*v211)(unint64_t **);
  unsigned int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  int v217;
  int v218;
  unsigned __int8 v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  int v226;
  uint64_t v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  unsigned int v232;
  int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  uint64_t v238;
  int v239;
  uint64_t v240;
  unsigned int v241;
  char *v242;
  char *v243;
  unsigned int v244;
  char *v245;
  int v246;
  int v247;
  unint64_t v248;
  int v249;
  char *v250;
  int v251;
  int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  int v266;
  int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  int v277;
  int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  int v283;
  int v284;
  unsigned int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  int v318;
  unsigned int v319;
  int v320;
  unsigned int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  unsigned int v335;
  int v336;
  int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  unsigned int v345;
  int v346;
  int v347;
  unsigned int v348;
  int v349;
  char *v350;
  char *v351;
  int v352;
  int v353;
  char *v354;
  uint64_t v355;
  int v356;
  int v357;
  char *v358;
  int v359;
  int v360;
  int v361;
  int v362;
  uint64_t v363;
  uint64_t (*v364)(unint64_t **);
  char *v365;
  char *v366;
  int v367;
  unsigned int v368;
  unsigned int v369;
  uint64_t v370;
  int v371;
  char *v372;
  int v373;
  uint64_t v374;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  unsigned int v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  unsigned int v384;
  uint64_t v385;
  unsigned int v386;
  uint64_t v387;
  uint64_t v388;
  unsigned int v389;
  uint64_t v390;
  int v391;
  unsigned int v392;
  int v393;
  uint64_t v394;
  unsigned __int8 v395;
  int v396;
  uint64_t v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  uint64_t v401;
  unsigned __int8 v402;
  unsigned int v403;
  unsigned int v404;
  int v405;
  uint64_t v406;
  int v407;
  unsigned int v408;
  int v409;
  unsigned int v410;
  unsigned int v411;
  uint64_t v412;
  unsigned int v413;
  int v414;
  unsigned int v415;
  int v416;
  uint64_t v417;
  unsigned int v418;
  int v419;
  unsigned int v420;
  unsigned int v421;
  uint64_t v422;
  unsigned int v423;
  int v424;
  unsigned __int8 v425;
  int v426;
  unsigned int v427;
  uint64_t v428;
  unsigned int v429;
  unsigned int v430;
  uint64_t v431;
  int v432;
  unsigned int v433;
  unsigned int v434;
  uint64_t v435;
  int v436;
  unsigned int v437;
  int v438;
  unsigned int v439;
  unsigned int v440;
  uint64_t v441;
  unsigned int v442;
  int v443;
  int v444;
  int v445;
  uint64_t v446;
  unsigned int v447;
  int v448;
  unsigned int v449;
  unsigned int v450;
  uint64_t v451;
  int v452;
  int v453;
  unsigned int v454;
  unsigned int v455;
  uint64_t v456;
  int v457;
  unsigned __int8 v458;
  unsigned int v459;
  int v460;
  unsigned int v461;
  uint64_t v462;
  int v463;
  int v464;
  unsigned int v465;
  int v466;
  uint64_t v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  int v473;
  uint64_t v474;
  int v475;
  int v476;
  unsigned int v477;
  uint64_t v478;
  int v479;
  unsigned int v480;
  int v481;
  int v482;
  uint64_t v483;
  int v484;
  int v485;
  unsigned int v486;
  unsigned int v487;
  uint64_t v488;
  int v489;
  unsigned int v490;
  int v491;
  int v492;
  unsigned int v493;
  uint64_t v494;
  unsigned int v495;
  unsigned int v496;
  int v497;
  uint64_t v498;
  int v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;
  uint64_t (*v503)(unint64_t **);
  unsigned int v504;
  char *v505;
  int v506;
  char *v507;
  uint64_t v508;
  uint64_t v509;
  unint64_t v510;
  uint64_t v511;
  unsigned int v512;
  int v513;
  unsigned int v514;
  int v515;
  int v516;
  int v517;
  unsigned int v518;
  int v519;
  unsigned int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  int v525;
  int v526;
  unsigned int v527;
  int v528;
  int v529;
  int v530;
  unsigned int v531;
  int v532;

  *(_DWORD *)(v53 - 120) = (v52 + 1459234290) & 0xA905DAFD;
  v54 = (char *)off_1E2538470[v52 ^ 0x16D] - 12;
  v55 = v54[*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36FFLL) ^ 0xD7] ^ 0x29;
  v56 = (char *)off_1E2538470[v52 ^ 0x175] - 12;
  v57 = v56[*v50 ^ 0xB1];
  *(_DWORD *)(v53 - 200) = v51;
  v58 = (v57 ^ 0xA4) << ((v52 - 14) & 0xFD ^ 0x25);
  v59 = off_1E2538470[v52 ^ 0x145];
  v60 = *((unsigned __int8 *)v59 + (*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36F4) ^ 0x49));
  v61 = v58 | (v55 << 8);
  HIDWORD(v62) = ~v60;
  LODWORD(v62) = (v60 ^ 0x80) << 24;
  LOBYTE(v55) = v62 >> 26;
  v63 = (char *)off_1E2538470[v52 ^ 0x165] - 12;
  v64 = v56[*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36F5) ^ 0xB8];
  v65 = *((unsigned __int8 *)v59 + (*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36F8) ^ 0x6BLL));
  HIDWORD(v62) = ~v65;
  LODWORD(v62) = (v65 ^ 0x80) << 24;
  v66 = v54[*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36F3) ^ 0x2ELL];
  v67 = ((v62 >> 26) ^ 0x53) << 16;
  v68 = *((unsigned __int8 *)v59 + (*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A3700) ^ 0x47));
  HIDWORD(v62) = ~v68;
  LODWORD(v62) = (v68 ^ 0x80) << 24;
  v69 = v61 | (v63[*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36FELL) ^ 0xECLL] - 91) ^ 9 | (((v62 >> 26) ^ 0x1E) << 16);
  LODWORD(v59) = *((unsigned __int8 *)v59 + (*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36FCLL) ^ 0xCBLL));
  v70 = ((v55 ^ 0xFB) << 16) | ((v64 ^ 0x1C) << 24) | ((v66 ^ 0xEC) << 8);
  HIDWORD(v62) = ~(_DWORD)v59;
  LODWORD(v62) = (v59 ^ 0x80) << 24;
  v71 = ((v63[*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36FALL) ^ 0xA9] - 91) | ((v54[*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36FBLL) ^ 0x30] ^ 0x1C) << 8)) & 0xFF00FFFF | (((v62 >> 26) ^ 0xBA) << 16) | ((v56[*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36FDLL) ^ 0x35] ^ 0x6B) << 24);
  LODWORD(v56) = v67 & 0xFFFFFF00 | ((v54[*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36F7) ^ 0x77] ^ 0xE6) << 8) | ((v56[*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36F9) ^ 0xBFLL] ^ 0x72) << 24) | (v63[*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36F6) ^ 0xB5] - 91) ^ 0xA8;
  v72 = (_DWORD)v56
      - 2
      * (v56 & 0x7A93BDDF ^ ((v63[*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36F6) ^ 0xB5]
                                                           - 91) ^ 0xA8) & 0x10)
      - 90980913;
  LOBYTE(v61) = v63[*(unsigned __int8 *)(a1 - 0x2B6480F0AD2A36F2) ^ 0x36] - 91;
  v73 = (char *)off_1E2538470[v52 - 105] - 4;
  v74 = v55 ^ 0x61u;
  v75 = off_1E2538470[v52 - 290];
  v76 = *(_DWORD *)&v73[4 * (v61 ^ 0xFD)] ^ 0xA61E2135 ^ *((_DWORD *)v75 + v74);
  v77 = off_1E2538470[v52 ^ 0x194];
  v78 = (v76 - ((2 * v76) & 0x179E848C) + 198132294) ^ *((_DWORD *)v77 + (v64 ^ 0x89u));
  v79 = v78 - ((2 * v78) & 0x7708D18E);
  v80 = (char *)off_1E2538470[v52 ^ 0x174] - 12;
  LOBYTE(v61) = v61 ^ 0x2A;
  LODWORD(v511) = v70 & 0xFFFFFF00 | v61;
  v510 = __PAIR64__(v69, v71);
  v398 = *(_DWORD *)&v80[4 * (v66 ^ 0xD4)] ^ v69 ^ (v79 + 998533319);
  v459 = v398 ^ v71 ^ 0xB4E8DC02;
  v81 = v398 ^ v71;
  *(_DWORD *)(v53 - 160) = v398 ^ v71;
  *(_DWORD *)(v53 - 140) = v459 ^ v72;
  v82 = v459 ^ v72 ^ (v511 - 2 * ((v70 & 0x748C4C00 | v61 & 0x2D) ^ v61 & 4) - 192132055);
  v444 = BYTE1(v82);
  v426 = BYTE2(v82);
  v83 = *(_DWORD *)&v80[4 * (BYTE1(v82) ^ 0xD7)] ^ *((_DWORD *)v75 + (BYTE2(v82) ^ 0x49u)) ^ 0xDA8EA78D;
  v436 = v82;
  v84 = (v83 - ((2 * v83) & 0x8E29DCFE) + 1192554111) ^ *(_DWORD *)&v73[4 * (v82 ^ 0x80)];
  v433 = HIBYTE(v82);
  v85 = v398 ^ *((_DWORD *)v77 + (HIBYTE(v82) ^ 0x65)) ^ (v84 - ((2 * v84) & 0x179E848C) + 198132294);
  HIDWORD(v509) = v72;
  *(_DWORD *)(v53 - 136) = v85 ^ v72;
  v86 = v85 ^ v72 ^ 0x2035B5F0;
  v87 = v86 ^ v82;
  v463 = ((v86 ^ v82) >> 16);
  v453 = ((unsigned __int16)(v86 ^ v82) >> 8);
  v88 = *((_DWORD *)v75 + (v463 ^ 0x88u)) ^ *(_DWORD *)&v80[4 * (v453 ^ 0x93)] ^ 0xDA8EA78D;
  v529 = (v86 ^ v82);
  v89 = (v88 - ((2 * v88) & 0x8E29DCFE) + 1192554111) ^ *(_DWORD *)&v73[4 * (v529 ^ 0xED)];
  v442 = (v86 ^ v82) >> 24;
  v90 = (v89 - ((2 * v89) & 0x179E848C) + 198132294) ^ *((_DWORD *)v77 + (v442 ^ 0xB3));
  v402 = v81 ^ 0x4D;
  v91 = v90 ^ v81 ^ 0x4D ^ 0x600D74C4;
  v479 = v90 ^ v81 ^ 0x4D;
  HIDWORD(v511) = v91 ^ v82;
  v489 = ((v91 ^ v82 ^ 0x202D7111) >> 16);
  v471 = v91 ^ v82 ^ 0x202D7111;
  v92 = *((_DWORD *)v75 + (v489 ^ 0xCFu)) ^ *(_DWORD *)&v80[4
                                                          * (((unsigned __int16)(v91 ^ v82) >> 8) ^ 0xF4)] ^ 0xDA8EA78D;
  v93 = (v92 - ((2 * v92) & 0x8E29DCFE) + 1192554111) ^ *(_DWORD *)&v73[4 * (BYTE4(v511) ^ 0x83)];
  v468 = v90 ^ v85;
  v94 = (HIDWORD(v511) ^ 0x202D7111u) >> 24;
  *(_DWORD *)(v53 - 204) = v94;
  v95 = v90 ^ v85 ^ *((_DWORD *)v77 + (v94 ^ 0x26)) ^ (v93 - ((2 * v93) & 0x179E848C) + 198132294);
  v527 = v95 ^ v479;
  v96 = v95;
  v531 = v95;
  v97 = v95 ^ v479 ^ 0xFD839AAA ^ v87;
  *(_DWORD *)(v53 - 224) = BYTE1(v97);
  v98 = *(_DWORD *)&v80[4 * (BYTE1(v97) ^ 0x91)];
  *(_DWORD *)(v53 - 216) = BYTE2(v97);
  v99 = v98 ^ *((_DWORD *)v75 + (BYTE2(v97) ^ 0xFu)) ^ 0xDA8EA78D;
  *(_DWORD *)(v53 - 248) = HIBYTE(v97);
  v100 = (v99 - ((2 * v99) & 0x179E848C) + 198132294) ^ *((_DWORD *)v77 + (HIBYTE(v97) ^ 0x28));
  v521 = v97;
  *(_DWORD *)(v53 - 232) = v97;
  v101 = (v100 - ((2 * v100) & 0x8E29DCFE) + 1192554111) ^ *(_DWORD *)&v73[4 * (v97 ^ 0x94)];
  v484 = v91 ^ v86;
  v102 = (v101 - ((2 * v101) & 0xB5F4B2DA) - 621127315) ^ v91;
  v518 = v95 ^ v479 ^ 0xFD839AAA ^ v91 ^ v86;
  *(_DWORD *)(v53 - 168) = v102 ^ v518;
  v400 = v102;
  v103 = v102 ^ v518 ^ 0x507BBB8F;
  v104 = v103 ^ v97 ^ 0x9947EF8A;
  v430 = HIBYTE(v104);
  v105 = *((_DWORD *)v77 + (HIBYTE(v104) ^ 0xB3)) ^ *((_DWORD *)v75 + (BYTE2(v104) ^ 0xC8u)) ^ 0xEAC58D0C;
  *(_DWORD *)(v53 - 240) = BYTE1(v104);
  v106 = (v105 - ((2 * v105) & 0x7708D18E) + 998533319) ^ *(_DWORD *)&v80[4 * (BYTE1(v104) ^ 0xCC)];
  v392 = v101 ^ v96;
  v414 = (v103 ^ v97 ^ 0x8A);
  v107 = v101 ^ v96 ^ *(_DWORD *)&v73[4 * (v414 ^ 0x97)] ^ (v106 - ((2 * v106) & 0x8E29DCFE) + 1192554111);
  v425 = BYTE2(v102) ^ 0x16;
  v513 = v107 ^ v102 ^ 0x7C166C11;
  *(_DWORD *)(v53 - 128) = v107;
  v108 = v513 ^ 0x3A1431BB ^ v97 ^ 0x9947EF8A;
  v502 = HIBYTE(v108);
  v499 = v513 ^ 0xBB ^ v97 ^ 0x8A;
  v109 = *((_DWORD *)v77 + (HIBYTE(v108) ^ 0x95)) ^ *(_DWORD *)&v73[4 * (v499 ^ 0xB1)] ^ 0x4CDBAC39;
  v481 = BYTE1(v108);
  v110 = (v109 - ((2 * v109) & 0x7708D18E) + 998533319) ^ *(_DWORD *)&v80[4 * (BYTE1(v108) ^ 0x80)];
  v476 = BYTE2(v108);
  v465 = v108;
  v111 = (v110 - ((2 * v110) & 0xC2159E94) - 519385270) ^ *((_DWORD *)v75 + (BYTE2(v108) ^ 0xFEu));
  v447 = (v111 - ((2 * v111) & 0xB8265462) + 1544759857) ^ v107;
  *(_DWORD *)(v53 - 132) = v513 ^ 0x3A1431BB ^ v103;
  v438 = v447 ^ 0x4BE6B923 ^ v513 ^ 0x3A1431BB;
  v112 = v447 ^ 0x4BE6B923 ^ v103;
  *(_DWORD *)(v53 - 152) = v112;
  v113 = v108 ^ 0xF3603E17;
  v114 = v112 ^ 0x1D2D5646;
  v115 = v112 ^ 0x1D2D5646 ^ v108 ^ 0xF3603E17;
  *(_DWORD *)(v53 - 256) = BYTE1(v115);
  v515 = v115;
  v116 = *(_DWORD *)&v80[4 * (BYTE1(v115) ^ 0x10)] ^ *(_DWORD *)&v73[4 * (v115 ^ 0x10)] ^ 0x7C9086B8;
  v117 = BYTE2(v115);
  v118 = (v116 - ((2 * v116) & 0xC2159E94) - 519385270) ^ *((_DWORD *)v75 + (BYTE2(v115) ^ 0x23u));
  v449 = HIBYTE(v115);
  LODWORD(v74) = (v118 - ((2 * v118) & 0x179E848C) + 198132294) ^ *((_DWORD *)v77 + (HIBYTE(v115) ^ 0x55)) ^ v447 ^ 0xA190B09B;
  v119 = v438 ^ v74 ^ 0x5D917241;
  v120 = v119 ^ v113;
  v121 = (v119 ^ v113) >> 24;
  v525 = BYTE1(v120);
  v122 = *((_DWORD *)v77 + (v121 ^ 0x55)) ^ *(_DWORD *)&v80[4 * (BYTE1(v120) ^ 0x2D)] ^ 0x304B2A81;
  v492 = v120;
  v123 = (v122 - ((2 * v122) & 0x8E29DCFE) + 1192554111) ^ *(_DWORD *)&v73[4 * (v120 ^ 0x8F)];
  v124 = v123 - ((2 * v123) & 0xC2159E94);
  v125 = BYTE2(v120);
  v126 = v74 ^ *((_DWORD *)v75 + (BYTE2(v120) ^ 0x88u)) ^ (v124 - 519385270);
  v127 = v126 ^ 0x50DE5C36;
  v128 = v126;
  *(_DWORD *)(v53 - 176) = v126;
  v129 = v119 ^ v114;
  v130 = v127 ^ v119;
  v396 = v127 ^ v119;
  v131 = v127 ^ v114;
  v132 = v127 ^ v114 ^ v120;
  *(_DWORD *)(v53 - 184) = v131;
  v523 = BYTE1(v132);
  LODWORD(v77) = *(_DWORD *)&v80[4 * (BYTE1(v132) ^ 0x9C)] ^ *((_DWORD *)v77 + (HIBYTE(v132) ^ 0xB4)) ^ 0x304B2A81;
  v407 = v132;
  v410 = HIBYTE(v132);
  LODWORD(v73) = ((_DWORD)v77 - ((2 * (_DWORD)v77) & 0x8E29DCFE) + 1192554111) ^ *(_DWORD *)&v73[4
                                                                                               * (v132 ^ 0xCE)];
  v391 = BYTE2(v132);
  LODWORD(v73) = ((_DWORD)v73 - ((2 * (_DWORD)v73) & 0xC2159E94) - 519385270) ^ *((_DWORD *)v75 + (BYTE2(v132) ^ 0x8Du));
  LODWORD(v73) = ((_DWORD)v73 - ((2 * (_DWORD)v73) & 0xDB9A0E4E) + 1842153255) ^ v128;
  LODWORD(v509) = v73 ^ 0xED3A2A8E;
  HIDWORD(v508) = ((v73 ^ 0xED3A2A8E)
                 - 108013215
                 + ((2 * ((v73 ^ 0xED3A2A8E) & 0x798FD964 ^ v73 & 4)) ^ 0xFFFFFFF7)) ^ v130;
  LODWORD(v508) = v131 ^ 0xA7671327 ^ HIDWORD(v508);
  HIDWORD(a44) = (v508 - ((2 * v508) & 0x338E8DF2) + 432490233) ^ v132;
  v133 = (char *)off_1E2538470[v52 ^ 0x117] - 8;
  LODWORD(v75) = (((v74 ^ 0x1B9155BD) >> 16)
                - 469173318
                + ((2 * ((v74 ^ 0x1B9155BD) >> 16) + 88) & 0x31A ^ 0xF77BFFFF)) ^ *(_DWORD *)&v133[4 * (((v74 ^ 0x1B9155BD) >> 16) ^ 0x2D)];
  v134 = ((v125 ^ 0xA9) - 469173318 + ((2 * (v125 ^ 0xA9) + 88) & 0x31A ^ 0xF77BFFFF)) ^ *(_DWORD *)&v133[4 * (v125 ^ 0x84)];
  LODWORD(v77) = (_DWORD)v75 - ((2 * (_DWORD)v75) & 0x843E9A3E);
  v135 = (char *)off_1E2538470[v52 - 74] - 4;
  v136 = ((_DWORD)v77 - 1038136033) ^ *(_DWORD *)&v135[4 * (BYTE1(v74) ^ 0x47)];
  v506 = v52;
  v137 = (char *)off_1E2538470[v52 ^ 0x170] - 4;
  v138 = (char *)off_1E2538470[v52 - 213] - 12;
  LODWORD(v63) = *(_DWORD *)&v138[4 * (v129 ^ 0x96)];
  v139 = (v134 - ((2 * v134) & 0xA4E33E3A) - 764305635) ^ *(_DWORD *)&v137[4 * (v121 ^ 0x9C)];
  v140 = *(_DWORD *)&v133[4 * (BYTE2(v129) ^ 0xE1)] ^ *(_DWORD *)&v137[4 * (HIBYTE(v129) ^ 0x40)] ^ ((BYTE2(v129) ^ 0xCC) - 469173318 + ((2 * (BYTE2(v129) ^ 0xCC) + 88) & 0x31A ^ 0xF77BFFFF)) ^ (181304767 * (_DWORD)v63 - ((362609534 * (_DWORD)v63 - 1451436662) & 0xA4E33E3A) - 1490023966);
  LODWORD(v63) = *(_DWORD *)&v138[4 * ((v438 ^ v74) ^ 0x77)];
  v413 = v438 ^ v74;
  LODWORD(v63) = (181304767 * (_DWORD)v63 - ((362609534 * (_DWORD)v63 - 1451436662) & 0x843E9A3E) - 1763854364) ^ *(_DWORD *)&v135[4 * (((unsigned __int16)(v438 ^ v74) >> 8) ^ 0x62)];
  v504 = (_DWORD)v63 - ((2 * (_DWORD)v63) & 0xA4E33E3A);
  v495 = v139 - ((2 * v139) & 0x843E9A3E);
  v486 = v140 - ((2 * v140) & 0x843E9A3E);
  v512 = (v136 - ((2 * v136) & 0xA4E33E3A) - 764305635) ^ *(_DWORD *)&v137[4 * ((v74 ^ 0x1B9155BD) >> 24)] ^ (181304767 * *(_DWORD *)&v138[4 * (v74 ^ 0x7D)] - 725718331);
  LODWORD(v80) = v85 ^ v459 ^ 0xE7ABAF8A;
  BYTE1(v104) = BYTE1(v85) ^ BYTE1(v459);
  v395 = v85 ^ v459;
  *(_DWORD *)(v53 - 192) = -469173319;
  v141 = *(_DWORD *)&v133[4 * (BYTE2(v80) ^ 0xF5)] ^ ((BYTE2(v80) ^ 0xD8)
                                                    - 469173319
                                                    - ((2 * (BYTE2(v80) ^ 0xD8) + 160207960) & 0x884031A));
  v142 = *(_DWORD *)(v53 - 136) ^ 0xCBF4D2B7;
  LODWORD(v74) = *(_DWORD *)&v133[4 * (BYTE2(v142) ^ 0x7B)] ^ ((BYTE2(v142) ^ 0x56)
                                                             - 469173318
                                                             + ((2 * (BYTE2(v142) ^ 0x56) + 88) & 0x31A ^ 0xF77BFFFF));
  v143 = (v74 - ((2 * v74) & 0xA4E33E3A) - 764305635) ^ *(_DWORD *)&v137[4 * HIBYTE(v142)];
  LODWORD(v74) = *(_DWORD *)&v133[4 * (v463 ^ 0x92)] ^ ((v463 ^ 0xBF)
                                                      - 469173318
                                                      + ((2 * (v463 ^ 0xBF) + 88) & 0x31A ^ 0xF77BFFFF));
  v144 = (v74 - ((2 * v74) & 0x843E9A3E) - 1038136033) ^ *(_DWORD *)&v135[4 * (v453 ^ 0xD)];
  v458 = BYTE1(v85);
  v460 = v143 - ((2 * v143) & 0x843E9A3E);
  v464 = v144 - ((2 * v144) & 0xA4E33E3A);
  v145 = *(_DWORD *)&v138[4 * (v85 ^ 0xDF)];
  v146 = *(_DWORD *)&v137[4 * ((v85 ^ 0x5A18571Fu) >> 24)] ^ ((((v85 ^ 0x5A18571Fu) >> 16) ^ 0xC1)
                                                            - 469173318
                                                            + ((2
                                                              * (((v85 ^ 0x5A18571Fu) >> 16) ^ 0xC1)
                                                              + 88) & 0x31A ^ 0xF77BFFFF)) ^ *(_DWORD *)&v133[4 * (((v85 ^ 0x5A18571Fu) >> 16) ^ 0xEC)] ^ (181304767 * v145 - ((362609534 * v145 - 1451436662) & 0xA4E33E3A) - 1490023966);
  v454 = v146 - ((2 * v146) & 0x843E9A3E);
  v147 = *(_DWORD *)&v137[4 * (v80 >> 24)] ^ (v141 - ((2 * v141) & 0xA4E33E3A) - 764305635);
  v432 = v147 - 1038136032 + (~(2 * v147) | 0x7BC165C1);
  LOWORD(v141) = v438 ^ 0xB6A7;
  LODWORD(v63) = v438 ^ 0xE5A6B4D6;
  LODWORD(v80) = *(_DWORD *)&v133[4 * (v117 ^ 0x74)] ^ ((v117 ^ 0x59)
                                                      - 469173319
                                                      - ((2 * (v117 ^ 0x59) + 160207960) & 0x884031A));
  v148 = *(_DWORD *)&v133[4 * (((v438 ^ 0xE5A6B4D6) >> 16) ^ 0xFE)] ^ ((((v438 ^ 0xE5A6B4D6) >> 16) ^ 0xD3)
                                                                                      - 469173318
                                                                                      + ((2
                                                                                        * (((v438 ^ 0xE5A6B4D6) >> 16) ^ 0xD3)
                                                                                        + 88) & 0x31A ^ 0xF77BFFFF));
  v149 = *(_DWORD *)(v53 - 152);
  v150 = *(_DWORD *)&v138[4 * (v149 ^ 4)];
  LODWORD(v80) = ((_DWORD)v80 - ((2 * (_DWORD)v80) & 0xA4E33E3A) - 764305635) ^ *(_DWORD *)&v137[4 * (v449 ^ 0x7E)];
  v151 = *(_DWORD *)&v133[4 * (BYTE2(v447) ^ 0xBC)] ^ ((BYTE2(v447) ^ 0x91)
                                                     - 469173318
                                                     + ((2 * (BYTE2(v447) ^ 0x91) + 88) & 0x31A ^ 0xF77BFFFF));
  v152 = (v151 - ((2 * v151) & 0x843E9A3E) - 1038136033) ^ *(_DWORD *)&v135[4
                                                                          * (((unsigned __int16)(v447 ^ 0xB09B) >> 8) ^ 0x8B)];
  v439 = (_DWORD)v80 - ((2 * (_DWORD)v80) & 0x843E9A3E);
  v450 = v152 - ((2 * v152) & 0xA4E33E3A);
  v153 = *(_DWORD *)&v135[4 * (BYTE1(v149) ^ 0x68)] ^ ((BYTE2(v149) ^ 0xDD)
                                                     - 469173318
                                                     + ((2
                                                       * (((BYTE2(v149) ^ 0xDD) + 44) & 0xFFFFFF8F ^ (HIWORD(v149) | 0xFFFFFFFD))) ^ 0x8840005)) ^ *(_DWORD *)&v133[4 * (BYTE2(v149) ^ 0xF0)] ^ (181304767 * v150 - ((362609534 * v150 - 1451436662) & 0x843E9A3E) - 1763854364);
  LODWORD(v63) = (v148 - ((2 * v148) & 0xA4E33E3A) - 764305635) ^ *(_DWORD *)&v137[4 * (v63 >> 24)] ^ (181304767 * *(_DWORD *)&v138[4 * (v141 ^ 0x99)] - 725718331);
  v404 = BYTE1(v141) ^ 0x14;
  v420 = (_DWORD)v63 - ((2 * (_DWORD)v63) & 0x843E9A3E);
  v429 = v153 - ((2 * v153) & 0xA4E33E3A);
  v403 = v398 ^ 0x2BEAE26B;
  v154 = *(_DWORD *)&v133[4 * (((v398 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v398 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                       - 469173318
                                                                                       + ((2
                                                                                         * (((v398 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                         + 88) & 0x31A ^ 0xF77BFFFF)) ^ (181304767 * *(_DWORD *)&v138[4 * (v398 ^ 0x1E)] - 725718331);
  v155 = (v154 - ((2 * v154) & 0x843E9A3E) - 1038136033) ^ *(_DWORD *)&v135[4 * (BYTE1(v398) ^ 8)];
  v156 = *(_DWORD *)&v133[4 * (v426 ^ 0xD7)] ^ ((v426 ^ 0xFA)
                                              - 469173318
                                              + ((2 * (((v426 ^ 0xFA) + 44) & 0xFFFFFF8F ^ (v426 ^ 0xFA | 0xFFFFFFFD))) ^ 0x8840005));
  LODWORD(v63) = *(_DWORD *)&v138[4 * (v402 ^ 0x55)];
  HIDWORD(v401) = v155 - ((2 * v155) & 0xA4E33E3A);
  v157 = *(_DWORD *)(v53 - 140);
  v427 = (BYTE2(v157) ^ 0xDC) - 469173318 + ((2 * (BYTE2(v157) ^ 0xDC) + 88) & 0x31A ^ 0xF77BFFFF);
  v399 = v433 ^ 0x4B;
  v158 = (v156 - ((2 * v156) & 0x843E9A3E) - 1038136033) ^ *(_DWORD *)&v135[4 * (v444 ^ 0xBD)] ^ (181304767
                                                                                                * *(_DWORD *)&v138[4 * (v436 ^ 0xF3)]
                                                                                                - 725718331);
  v434 = v158 - ((2 * v158) & 0xA4E33E3A);
  v159 = *(_DWORD *)(v53 - 160);
  v160 = (181304767 * (_DWORD)v63 - ((362609534 * (_DWORD)v63 - 1451436662) & 0xA4E33E3A) - 1490023966) ^ ((BYTE2(v159) ^ 0xBA) - 469173318 + ((2 * (BYTE2(v159) ^ 0xBA) + 88) & 0x31A ^ 0xF77BFFFF)) ^ *(_DWORD *)&v137[4 * (HIBYTE(v159) ^ 0x2F)] ^ *(_DWORD *)&v133[4 * (BYTE2(v159) ^ 0x97)];
  v389 = v160 - ((2 * v160) & 0x843E9A3E);
  v161 = *(_DWORD *)(v53 - 192);
  v162 = *(_DWORD *)&v133[4 * (BYTE2(*(_DWORD *)(v53 - 168)) ^ 0x2D)] ^ (BYTE2(*(_DWORD *)(v53 - 168))
                                                                                        + v161
                                                                                        - ((2
                                                                                          * BYTE2(*(_DWORD *)(v53 - 168))
                                                                                          + 160207960) & 0x884031A));
  v163 = *(_DWORD *)&v133[4 * (BYTE2(v392) ^ 0x56)] ^ ((BYTE2(v392) ^ 0x7B)
                                                     + v161
                                                     - ((2 * (BYTE2(v392) ^ 0x7B) + 160207960) & 0x884031A));
  v164 = (v162 - 1038136032 + (~(2 * v162) | 0x7BC165C1)) ^ *(_DWORD *)&v135[4
                                                                           * (BYTE1(*(_DWORD *)(v53 - 168)) ^ 0x1C)] ^ (181304767 * *(_DWORD *)&v138[4 * (*(_DWORD *)(v53 - 168) ^ 0xCB)] - 725718331);
  LODWORD(v63) = *(_DWORD *)&v138[4 * (v400 ^ 0xFB)];
  LODWORD(v63) = (181304767 * (_DWORD)v63 - ((362609534 * (_DWORD)v63 - 1451436662) & 0x843E9A3E) - 1763854364) ^ *(_DWORD *)&v135[4 * (BYTE1(v400) ^ 0xEF)];
  HIDWORD(v388) = v164 - ((2 * v164) & 0xA4E33E3A);
  LODWORD(v388) = (_DWORD)v63 - ((2 * (_DWORD)v63) & 0xA4E33E3A);
  v165 = (v163 - ((2 * v163) & 0xA4E33E3A) - 764305635) ^ *(_DWORD *)&v137[4 * (HIBYTE(v392) ^ 0xD9)] ^ (181304767 * *(_DWORD *)&v138[4 * (v392 ^ 0x79)] - 725718331);
  v166 = *(_DWORD *)&v133[4 * (BYTE2(v104) ^ 0xC7)] ^ ((BYTE2(v104) ^ 0xEA)
                                                     - 469173318
                                                     + ((2 * (BYTE2(v104) ^ 0xEA) + 88) & 0x31A ^ 0xF77BFFFF));
  v167 = (v166 - ((2 * v166) & 0xA4E33E3A) - 764305635) ^ *(_DWORD *)&v137[4 * (v430 ^ 0xAE)];
  v384 = v414 ^ 0x31;
  v418 = v167 - ((2 * v167) & 0x843E9A3E);
  v415 = BYTE1(v392) ^ 0xD7;
  v445 = v165 - 1038136032 + (~(2 * v165) | 0x7BC165C1);
  v393 = v425;
  v437 = (v425 ^ 0x65) - 469173318 + ((2 * (v425 ^ 0x65) + 88) & 0x31A ^ 0xF77BFFFF);
  v168 = *(_DWORD *)&v133[4 * (v391 ^ 0xCD)] ^ ((v391 ^ 0xE0)
                                              - 469173318
                                              + ((2 * (v391 ^ 0xE0) + 88) & 0x31A ^ 0xF77BFFFF));
  v169 = *(_DWORD *)(v53 - 184);
  v423 = HIBYTE(v400) ^ 0xE8;
  v170 = *(_DWORD *)(v53 - 176);
  v171 = *(_DWORD *)&v133[4 * (BYTE2(v170) ^ 0xE8)] ^ ((BYTE2(v170) ^ 0xC5)
                                                     - 469173318
                                                     + ((2 * (BYTE2(v170) ^ 0xC5) + 88) & 0x31A ^ 0xF77BFFFF));
  v172 = (181304767 * *(_DWORD *)&v138[4 * (v170 ^ 0xCA)] - 725718331) ^ *(_DWORD *)&v137[4 * (HIBYTE(v170) ^ 0x8E)] ^ (v171 - ((2 * v171) & 0xA4E33E3A) - 764305635);
  LODWORD(v401) = v396 ^ 0x992E8CDE;
  v173 = (181304767 * *(_DWORD *)&v138[4 * (v396 ^ 0xAF)] - 725718331) ^ (((v396 ^ 0x992E8CDE) >> 16)
                                                                                         - 469173318
                                                                                         + ((2
                                                                                           * ((v396 ^ 0x992E8CDE) >> 16)
                                                                                           + 88) & 0x31A ^ 0xF77BFFFF)) ^ *(_DWORD *)&v133[4 * (((v396 ^ 0x992E8CDE) >> 16) ^ 0x2D)];
  v386 = v172 - ((2 * v172) & 0x843E9A3E);
  v174 = (v173 - ((2 * v173) & 0x843E9A3E) - 1038136033) ^ *(_DWORD *)&v135[4 * (BYTE1(v396) ^ 0xD6)];
  v175 = *(_DWORD *)&v137[4 * (v410 ^ 0xD1)] ^ (181304767 * *(_DWORD *)&v138[4 * (v407 ^ 0xE5)] - 725718331) ^ (v168 - ((2 * v168) & 0xA4E33E3A) - 764305635);
  v411 = v174 - ((2 * v174) & 0xA4E33E3A);
  v408 = v175 - ((2 * v175) & 0x843E9A3E);
  v176 = *(_DWORD *)&v138[4 * (v468 ^ 0xEC)];
  v177 = *(_DWORD *)&v133[4 * (v489 ^ 0x74)] ^ ((v489 ^ 0x59)
                                              - 469173318
                                              + ((2 * (((v489 ^ 0x59) + 44) & 0xFFFFFF8F ^ (HIWORD(v471) | 0xFFFFFFFD))) ^ 0x8840005));
  v178 = *(_DWORD *)&v138[4 * (v479 ^ 0xE6)];
  v179 = *(_DWORD *)&v137[4 * (HIBYTE(v468) ^ 0xCA)] ^ *(_DWORD *)&v133[4 * (BYTE2(v468) ^ 2)] ^ ((BYTE2(v468) ^ 0x2F)
                                                                                                - 469173318
                                                                                                + ((2
                                                                                                  * (((BYTE2(v468) ^ 0x2F) + 44) & 0xFFFFFF8F ^ (BYTE2(v468) ^ 0x2F | 0xFFFFFFFD))) ^ 0x8840005)) ^ (181304767 * v176 - ((362609534 * v176 - 1451436662) & 0xA4E33E3A) - 1490023966);
  LODWORD(v80) = (v177 - ((2 * v177) & 0x843E9A3E) - 1038136033) ^ *(_DWORD *)&v135[4 * (BYTE5(v511) ^ 0x42)] ^ (181304767 * *(_DWORD *)&v138[4 * (BYTE4(v511) ^ 0xBE)] - 725718331);
  v180 = *(_DWORD *)&v137[4 * ((v479 ^ 0x49A657C7u) >> 24)] ^ ((((v479 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                             - 469173318
                                                             + ((2
                                                               * (((v479 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                               + 88) & 0x31A ^ 0xF77BFFFF)) ^ *(_DWORD *)&v133[4 * (((v479 ^ 0x49A657C7u) >> 16) ^ 0x18)] ^ (181304767 * v178 - ((362609534 * v178 - 1451436662) & 0xA4E33E3A) - 1490023966);
  LODWORD(v74) = *(_DWORD *)&v133[4 * (((v484 ^ 0x1ED0676Eu) >> 16) ^ 0x2D)] ^ (((v484 ^ 0x1ED0676Eu) >> 16)
                                                                                               + v161
                                                                                               - ((2
                                                                                                 * ((v484 ^ 0x1ED0676Eu) >> 16)
                                                                                                 + 160207960) & 0x884031A));
  HIDWORD(v511) = (v179 - ((2 * v179) & 0x843E9A3E) - 1038136033) ^ *(_DWORD *)&v135[4 * (BYTE1(v468) ^ 0x2E)];
  v501 = (_DWORD)v80 - ((2 * (_DWORD)v80) & 0xA4E33E3A);
  v181 = (v74 - ((2 * v74) & 0xA4E33E3A) - 764305635) ^ *(_DWORD *)&v137[4 * ((v484 ^ 0x1ED0676Eu) >> 24)] ^ (181304767 * *(_DWORD *)&v138[4 * (v484 ^ 0xFE)] - 725718331);
  v472 = BYTE1(v484) ^ 0xE7;
  v490 = v180 - ((2 * v180) & 0x843E9A3E);
  v485 = v181 - ((2 * v181) & 0x843E9A3E);
  LODWORD(v80) = *(_DWORD *)&v133[4 * (v476 ^ 0x35)] ^ ((v476 ^ 0x18)
                                                      - 469173318
                                                      + ((2 * (v476 ^ 0x18) + 88) & 0x31A ^ 0xF77BFFFF));
  v182 = ((_DWORD)v80 - ((2 * (_DWORD)v80) & 0x843E9A3E) - 1038136033) ^ *(_DWORD *)&v135[4
                                                                                        * (((v481 ^ 0xBA)
                                                                                          + ((v465 >> 7) & 0x166 ^ 0xFFFFFE9B)
                                                                                          + 180) ^ 0x54)] ^ (181304767 * *(_DWORD *)&v138[4 * (v499 ^ 0x62)] - 725718331);
  LODWORD(v80) = *(_DWORD *)&v138[4 * (*(_DWORD *)(v53 - 132) ^ 0xC2)];
  v183 = *(_DWORD *)(v53 - 132);
  LODWORD(v80) = (181304767 * (_DWORD)v80 - ((362609534 * (_DWORD)v80 - 1451436662) & 0xA4E33E3A) - 1490023966) ^ *(_DWORD *)&v137[4 * (HIBYTE(v183) ^ 0xF3)];
  v500 = v182 - ((2 * v182) & 0xA4E33E3A);
  v469 = (_DWORD)v80 - ((2 * (_DWORD)v80) & 0x843E9A3E);
  v477 = v513 ^ 0xEEA2BFA8;
  LODWORD(v80) = *(_DWORD *)&v133[4 * (((v513 ^ 0xEEA2BFA8) >> 16) ^ 0x86)] ^ ((((v513 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                              - 469173318
                                                                                              + ((2
                                                                                                * (((v513 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                                + 88) & 0x31A ^ 0xF77BFFFF));
  v184 = (181304767 * *(_DWORD *)&v138[4 * (v513 ^ 0x68)] - 725718331) ^ *(_DWORD *)&v135[4 * (BYTE1(v513) ^ 0x55)] ^ ((_DWORD)v80 - ((2 * (_DWORD)v80) & 0x843E9A3E) - 1038136033);
  LODWORD(v74) = *(_DWORD *)(v53 - 128);
  LODWORD(v80) = ((v74 ^ 0x231B9DB5) >> 16);
  v380 = v80 ^ 0xEC;
  v514 = (v80 ^ 0xC1) - 469173318 + ((2 * (v80 ^ 0xC1) + 88) & 0x31A ^ 0xF77BFFFF);
  v185 = *(_DWORD *)&v138[4 * (v492 ^ 0xCA)];
  v493 = v184 - ((2 * v184) & 0xA4E33E3A);
  v186 = *(_DWORD *)&v138[4 * (v529 ^ 0xC4)];
  v187 = *(_DWORD *)(v53 - 136);
  v188 = *(_DWORD *)&v138[4 * (v395 ^ 0x4A)];
  v530 = (BYTE2(v183) ^ 0xF1) + v161 - ((2 * (BYTE2(v183) ^ 0xF1) + 160207960) & 0x884031A);
  LODWORD(v80) = *(_DWORD *)&v138[4 * (v521 ^ 0xC5)];
  v522 = 181304767 * v185 - 725718331;
  HIDWORD(v394) = 181304767 * *(_DWORD *)&v138[4 * (v187 ^ 0x77)] - 725718331;
  LODWORD(v397) = 181304767 * v188 - 725718331;
  HIDWORD(v383) = 181304767 * *(_DWORD *)&v138[4 * (v447 ^ 0x38)] - 725718331;
  LODWORD(v383) = 181304767 * *(_DWORD *)&v138[4 * (v515 ^ 0x4A)] - 725718331;
  v516 = 181304767 * *(_DWORD *)&v138[4 * (v157 ^ 0xD7)] - 725718331;
  HIDWORD(v387) = 181304767 * *(_DWORD *)&v138[4 * v384] - 725718331;
  HIDWORD(v382) = 181304767 * *(_DWORD *)&v138[4 * (v169 ^ 0xC9)] - 725718331;
  LODWORD(v385) = 181304767 * *(_DWORD *)&v138[4 * (v74 ^ 0x75)] - 725718331;
  LODWORD(v387) = 181304767 * *(_DWORD *)&v138[4 * (v531 ^ 0x2D)] - 725718331;
  v189 = (181304767 * (_DWORD)v80 - ((362609534 * (_DWORD)v80 - 1451436662) & 0xA4E33E3A) - 1490023966) ^ *(_DWORD *)&v137[4 * (*(_DWORD *)(v53 - 248) ^ 0xD6)];
  v190 = *(_DWORD *)&v133[4 * (BYTE2(v518) ^ 0x73)] ^ ((BYTE2(v518) ^ 0x5E)
                                                     - 469173318
                                                     + ((2 * (BYTE2(v518) ^ 0x5E) + 88) & 0x31A ^ 0xF77BFFFF)) ^ (181304767 * *(_DWORD *)&v138[4 * (v518 ^ 0xF9)] - 725718331);
  v191 = (v190 - ((2 * v190) & 0x843E9A3E) - 1038136033) ^ *(_DWORD *)&v135[4 * (BYTE1(v518) ^ 0x4F)];
  LODWORD(v80) = *(_DWORD *)&v133[4 * (BYTE2(v531) ^ 0x9E)] ^ ((BYTE2(v531) ^ 0xB3)
                                                             - 469173318
                                                             + ((2 * (BYTE2(v531) ^ 0xB3) + 88) & 0x31A ^ 0xF77BFFFF));
  v192 = (181304767 * *(_DWORD *)&v138[4 * (v527 ^ 0x2A)] - 725718331) ^ ((BYTE2(v527) ^ 0x37)
                                                                                         + v161
                                                                                         - ((2 * (BYTE2(v527) ^ 0x37)
                                                                                           + 160207960) & 0x884031A)) ^ *(_DWORD *)&v133[4 * (BYTE2(v527) ^ 0x1A)];
  v193 = *(_DWORD *)(v53 - 224) ^ 0x7A;
  HIDWORD(v381) = *(_DWORD *)&v133[4 * (BYTE2(v413) ^ 3)];
  *(_DWORD *)(v53 - 224) = *(_DWORD *)&v133[4 * (BYTE2(v157) ^ 0xF1)];
  LODWORD(v63) = v189 - ((2 * v189) & 0x843E9A3E);
  *(_DWORD *)(v53 - 248) = *(_DWORD *)&v133[4 * (v393 ^ 0x48)];
  LODWORD(v381) = *(_DWORD *)&v133[4 * (BYTE2(v169) ^ 0xC4)];
  LODWORD(v394) = *(_DWORD *)&v133[4 * v380];
  v475 = *(_DWORD *)&v133[4 * (BYTE2(v183) ^ 0xDC)];
  v194 = (v192 - ((2 * v192) & 0xA4E33E3A) - 764305635) ^ *(_DWORD *)&v137[4 * (HIBYTE(v527) ^ 0xF9)];
  v195 = *(_DWORD *)(v53 - 216);
  *(_DWORD *)(v53 - 216) = *(_DWORD *)&v133[4 * (v195 ^ 0xBD)];
  LODWORD(v138) = ((*(_DWORD *)(v53 - 232) >> 15) & 0x58) + (v195 ^ 0x4C64ABC);
  *(_DWORD *)(v53 - 232) = (_DWORD)v138 - ((2 * (_DWORD)v138) & 0x884031A) - 549277299;
  *(_DWORD *)(v53 - 192) = *(_DWORD *)&v135[4 * (v525 ^ 0xF2)];
  HIDWORD(v379) = *(_DWORD *)&v135[4 * (BYTE1(v129) ^ 2)];
  LODWORD(v138) = BYTE1(v527) ^ 0x2E;
  v528 = *(_DWORD *)&v135[4 * (BYTE1(v187) ^ 0x38)];
  HIDWORD(v390) = *(_DWORD *)&v135[4 * (v458 ^ 0xBD)];
  v526 = *(_DWORD *)&v135[4 * (BYTE1(v104) ^ 0x45)];
  v452 = *(_DWORD *)&v135[4 * (*(_DWORD *)(v53 - 256) ^ 0x30)];
  LODWORD(v379) = *(_DWORD *)&v135[4 * v404];
  v196 = *(_DWORD *)(v53 - 140);
  *(_DWORD *)(v53 - 256) = *(_DWORD *)&v135[4 * (BYTE1(v196) ^ 0x94)];
  v405 = *(_DWORD *)&v135[4 * (BYTE1(*(_DWORD *)(v53 - 160)) ^ 0xD6)];
  *(_DWORD *)(v53 - 240) = *(_DWORD *)&v135[4 * (*(_DWORD *)(v53 - 240) ^ 0x18)];
  v457 = *(_DWORD *)&v135[4 * v415];
  v497 = *(_DWORD *)&v135[4 * (BYTE1(v169) ^ 0xEC)];
  v197 = *(_DWORD *)&v135[4 * (BYTE1(*(_DWORD *)(v53 - 176)) ^ 0x16)];
  HIDWORD(v376) = *(_DWORD *)&v135[4 * (v523 ^ 0x66)];
  *(_DWORD *)(v53 - 176) = *(_DWORD *)&v135[4 * (BYTE1(v479) ^ 0xB9)];
  v524 = *(_DWORD *)&v135[4 * v472];
  HIDWORD(v377) = *(_DWORD *)&v135[4 * (BYTE1(*(_DWORD *)(v53 - 128)) ^ 0x77)];
  v473 = *(_DWORD *)&v135[4 * (BYTE1(*(_DWORD *)(v53 - 132)) ^ 1)];
  v416 = *(_DWORD *)&v135[4 * v193];
  HIDWORD(v378) = *(_DWORD *)&v135[4 * v138];
  LODWORD(v138) = *(_DWORD *)&v135[4 * (BYTE1(v531) ^ 0xC8)];
  *(_DWORD *)(v53 - 160) = v495 - 1038136033;
  v487 = v486 - 1038136033;
  LODWORD(v382) = v460 - 1038136033;
  LODWORD(v378) = v454 - 1038136033;
  v480 = v439 - 1038136033;
  v461 = v420 - 1038136033;
  v421 = v389 - 1038136033;
  v455 = v418 - 1038136033;
  v198 = v386 - 1038136033;
  v496 = v408 - 1038136033;
  v440 = v490 - 1038136033;
  v409 = v485 - 1038136033;
  v470 = v469 - 1038136033;
  HIDWORD(v385) = (_DWORD)v63 - 1038136033;
  LODWORD(v377) = v194 - ((2 * v194) & 0x843E9A3E) - 1038136033;
  v491 = *(_DWORD *)&v137[4 * (HIBYTE(v413) ^ 0x62)];
  v419 = *(_DWORD *)&v137[4 * (v442 ^ 0xDD)];
  v482 = *(_DWORD *)&v137[4 * (HIBYTE(v447) ^ 0x4D)];
  LODWORD(v376) = *(_DWORD *)&v137[4 * (HIBYTE(*(_DWORD *)(v53 - 152)) ^ 0xFB)];
  LODWORD(v390) = *(_DWORD *)&v137[4 * (HIBYTE(v196) ^ 0xF6)];
  *(_DWORD *)(v53 - 152) = *(_DWORD *)&v137[4 * HIBYTE(v403)];
  LODWORD(a17) = *(_DWORD *)&v137[4 * v399];
  v448 = *(_DWORD *)&v137[4 * (HIBYTE(*(_DWORD *)(v53 - 168)) ^ 0x85)];
  v443 = *(_DWORD *)&v137[4 * v423];
  v199 = *(_DWORD *)&v137[4 * (HIBYTE(*(_DWORD *)(v53 - 184)) ^ 5)];
  v200 = *(_DWORD *)&v137[4 * BYTE3(v401)];
  *(_DWORD *)(v53 - 168) = *(_DWORD *)&v137[4 * (*(_DWORD *)(v53 - 204) ^ 0x91)];
  HIDWORD(v397) = *(_DWORD *)&v137[4 * ((v74 ^ 0x231B9DB5) >> 24)];
  v466 = *(_DWORD *)&v137[4 * (v502 ^ 0x36)];
  LODWORD(v401) = *(_DWORD *)&v137[4 * HIBYTE(v477)];
  v519 = *(_DWORD *)&v137[4 * (HIBYTE(v518) ^ 0x77)];
  v424 = *(_DWORD *)&v137[4 * (HIBYTE(v531) ^ 0x91)];
  v201 = v504 - 764305635;
  v532 = v464 - 764305635;
  *(_DWORD *)(v53 - 184) = HIDWORD(v401) - 764305635;
  *(_DWORD *)(v53 - 204) = v434 - 764305635;
  v202 = v500 - 764305635;
  v203 = v493 - 764305635;
  v204 = v191 - ((2 * v191) & 0xA4E33E3A) - 764305635;
  v205 = (v138 ^ ((_DWORD)v80 - ((2 * (_DWORD)v80) & 0x843E9A3E) - 1038136033))
       - ((2 * (v138 ^ ((_DWORD)v80 - ((2 * (_DWORD)v80) & 0x843E9A3E) - 1038136033))) & 0xA4E33E3A)
       - 764305635;
  v206 = v512 ^ HIDWORD(v511) ^ 0x6285F181;
  v207 = v198 ^ v197 ^ v206;
  v208 = (char *)off_1E2538470[v506 - 124] - 12;
  v209 = (char *)off_1E2538470[v506 ^ 0x1F9] - 12;
  v210 = off_1E2538470[v506 - 115];
  v211 = off_1E2538470[v506 - 251];
  v212 = (*((unsigned __int8 *)v211 + (*(unsigned __int8 *)(v53 - 109) ^ 0x41)) ^ 0xE) & 0xFF00FFFF | (((v208[*(unsigned __int8 *)(v53 - 111) ^ 0x40] + 117) ^ 0x5A) << 16) | ((*((unsigned __int8 *)v210 + (*(unsigned __int8 *)(v53 - 110) ^ 0xBBLL)) ^ 0x81) << 8) | ((v209[*(unsigned __int8 *)(v53 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v53 - 112) - ((2 * *(unsigned __int8 *)(v53 - 112)) & 0xDA) + 109) ^ 0x84) << 24);
  v503 = v210;
  v505 = v209;
  v213 = *((unsigned __int8 *)v211 + (*(unsigned __int8 *)(v53 - 97) ^ 0x74)) ^ 0xA9 | (((v208[*(unsigned __int8 *)(v53 - 99) ^ 0xF3] + 117) ^ 2) << 16) | ((*((unsigned __int8 *)v210 + (*(unsigned __int8 *)(v53 - 98) ^ 0x20)) ^ 0x6B) << 8) | ((v209[*(unsigned __int8 *)(v53 - 100) ^ 0xF3] ^ (*(unsigned __int8 *)(v53 - 100) - ((2 * *(unsigned __int8 *)(v53 - 100)) & 0xDA) + 109) ^ 0x85) << 24);
  v214 = (*((unsigned __int8 *)v211 + (*(unsigned __int8 *)(v53 - 105) ^ 0xE4)) ^ 0x38) & 0xFF00FFFF | ((v209[*(unsigned __int8 *)(v53 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v53 - 108) + (~(2 * *(unsigned __int8 *)(v53 - 108)) | 0x25) + 110) ^ 0xFFFFFFE1) << 24) | (((v208[*(unsigned __int8 *)(v53 - 107) ^ 0x27] + 117) ^ 0x96) << 16) | ((*((unsigned __int8 *)v210 + (*(unsigned __int8 *)(v53 - 106) ^ 9)) ^ 0x84) << 8);
  v507 = v208;
  v215 = (*((unsigned __int8 *)v211 + (*(unsigned __int8 *)(v53 - 101) ^ 0xF2)) ^ 0x81) & 0xFF00FFFF | ((v209[*(unsigned __int8 *)(v53 - 104) ^ 0xD3] ^ (*(unsigned __int8 *)(v53 - 104) - ((2 * *(unsigned __int8 *)(v53 - 104)) & 0xDA) + 109) ^ 0xE0) << 24) | ((*((unsigned __int8 *)v210 + (*(unsigned __int8 *)(v53 - 102) ^ 0xBELL)) ^ 0x23) << 8) & 0xFF00FFFF | (((v208[*(unsigned __int8 *)(v53 - 103) ^ 0xE9] + 117) ^ 0x8A) << 16);
  if ((v207 & 0x80) != 0)
    v216 = -128;
  else
    v216 = 128;
  *(_DWORD *)(v53 - 128) = v213 ^ 0xB7844C96;
  *(_DWORD *)(v53 - 132) = v212 ^ 0xD45B970C;
  *(_DWORD *)(v53 - 136) = v214 ^ 0xA2D1398;
  *(_DWORD *)(v53 - 140) = v215 ^ 0xB82FF31B;
  HIDWORD(v498) = v496 ^ HIDWORD(v376);
  LODWORD(v498) = v199 ^ ((BYTE2(v169) ^ 0xE9) + v161 - ((2 * (BYTE2(v169) ^ 0xE9) + 160207960) & 0x884031A)) ^ v497 ^ v381 ^ HIDWORD(v382);
  HIDWORD(v494) = (v411 - 764305635) ^ v200;
  LODWORD(v494) = v487 ^ HIDWORD(v379);
  HIDWORD(v488) = v491 ^ ((BYTE2(v413) ^ 0x2E) - 469173319 - ((2 * (BYTE2(v413) ^ 0x2E) + 160207960) & 0x884031A)) ^ HIDWORD(v381) ^ v201;
  LODWORD(v488) = v461 ^ v379;
  HIDWORD(v483) = v480 ^ v452 ^ v383;
  LODWORD(v483) = (v450 - 764305635) ^ v482 ^ HIDWORD(v383);
  HIDWORD(v478) = (v429 - 764305635) ^ v376;
  LODWORD(v478) = HIDWORD(v377) ^ HIDWORD(v397) ^ v514 ^ v394 ^ v385;
  HIDWORD(v474) = v473 ^ v530 ^ v475 ^ v470;
  LODWORD(v474) = v203 ^ v401;
  HIDWORD(v467) = v202 ^ v466;
  LODWORD(v467) = v445 ^ v457;
  HIDWORD(v462) = v443 ^ v437 ^ *(_DWORD *)(v53 - 248) ^ (v388 - 764305635);
  LODWORD(v462) = (HIDWORD(v388) - 764305635) ^ v448;
  HIDWORD(v456) = HIDWORD(v387) ^ *(_DWORD *)(v53 - 240) ^ v455;
  LODWORD(v456) = v387 ^ v424 ^ v205;
  HIDWORD(v451) = v377 ^ HIDWORD(v378);
  LODWORD(v451) = v204 ^ v519;
  HIDWORD(v446) = v416 ^ *(_DWORD *)(v53 - 232) ^ *(_DWORD *)(v53 - 216) ^ HIDWORD(v385);
  LODWORD(v446) = (v501 - 764305635) ^ *(_DWORD *)(v53 - 168);
  HIDWORD(v441) = *(_DWORD *)(v53 - 176) ^ v440;
  LODWORD(v441) = v409 ^ v524;
  HIDWORD(v435) = v378 ^ HIDWORD(v390);
  LODWORD(v435) = v382 ^ v528 ^ HIDWORD(v394);
  HIDWORD(v431) = v397 ^ v526 ^ v432;
  LODWORD(v431) = (181304767 * v186 - 725718331) ^ v419 ^ v532;
  HIDWORD(v428) = v421 ^ v405;
  LODWORD(v428) = *(_DWORD *)(v53 - 256) ^ v427 ^ v390 ^ *(_DWORD *)(v53 - 224) ^ v516;
  HIDWORD(v422) = *(_DWORD *)(v53 - 204) ^ a17;
  LODWORD(v422) = *(_DWORD *)(v53 - 184) ^ *(_DWORD *)(v53 - 152);
  LODWORD(v417) = (v216 + (v207 ^ 0x2497E332)) ^ v206;
  HIDWORD(v417) = *(_DWORD *)(v53 - 200) - 2078144361;
  HIDWORD(v412) = *(_DWORD *)(v53 - 160) ^ *(_DWORD *)(v53 - 192) ^ v522;
  v217 = *(_DWORD *)(v53 - 120);
  LODWORD(v412) = v217 ^ 0x278;
  HIDWORD(v406) = v217 ^ 0x223;
  LODWORD(v406) = v217 ^ 0x295;
  v218 = v217;
  *(_QWORD *)(v53 - 176) = 13;
  v219 = v208[a2[13] ^ 0xF3] + 117;
  v220 = (((v217 - 564) | 0x882) ^ 0xFFFFF775) & 0x5C6F6B2 ^ 0x5C6F6B3;
  *(_QWORD *)(v53 - 152) = v220;
  v221 = (v219 ^ 2) << 16;
  v222 = a2[v220] ^ 0x57;
  *(_QWORD *)(v53 - 160) = 10;
  v223 = a2[10] ^ 0xB6;
  v224 = ((v507[v222] + 117) ^ 0xF6) << 16;
  *(_QWORD *)(v53 - 192) = 4;
  LODWORD(v223) = (*((unsigned __int8 *)v210 + v223) ^ 0xE) << 8;
  v225 = a2[4];
  v226 = v505[v225 ^ 0x9A];
  *(_DWORD *)(v53 - 204) = 96925367;
  LODWORD(v225) = v226 ^ (v225 - ((2 * v225) & 0xDA) + 109) ^ 0xFFFFFFCF;
  v227 = a2[7] ^ 0xD6;
  *(_QWORD *)(v53 - 232) = 7;
  *(_QWORD *)(v53 - 224) = 2;
  LODWORD(v225) = *((unsigned __int8 *)v211 + v227) ^ 0x6B | ((_DWORD)v225 << 24);
  LODWORD(v227) = *((unsigned __int8 *)v210 + a2[2]);
  *(_QWORD *)(v53 - 184) = 3;
  v228 = *((unsigned __int8 *)v211 + (a2[3] ^ 0x74));
  *(_QWORD *)(v53 - 168) = 12;
  v229 = v224 | ((v227 ^ 0x1C) << 8) | v228 ^ 0xA9;
  v230 = v505[a2[12] ^ 0x6ELL] ^ (a2[12] - ((2 * a2[12]) & 0xDA) + 109) ^ 0x51;
  *(_QWORD *)(v53 - 216) = 0;
  v231 = v229 | ((v505[*a2 ^ 0x15] ^ (*a2 - ((2 * *a2) & 0xDA) + 109) ^ 0xAE) << 24);
  v232 = v505[a2[8] ^ 0x46] ^ (a2[8] - ((2 * a2[8]) & 0xDA) + 109) ^ 0xFFFFFFE7;
  *(_QWORD *)(v53 - 200) = 14;
  LODWORD(v223) = v223 | (v232 << 24);
  v233 = *((unsigned __int8 *)v210 + (a2[14] ^ 0xD5)) ^ 0x94;
  v234 = (v233 << 8) + 1100532475 - ((v233 << 9) & 0x19400);
  v235 = ((v221 | (v230 << 24)) ^ 0xAF77DFFD) + 1351098371 + ((2 * (v221 | (v230 << 24))) & 0x5EEE0000);
  *(_QWORD *)(v53 - 240) = 5;
  v236 = (v235 - (v234 ^ 0x4198CAFB | v235)) ^ ((v234 ^ 0xBE673504) + 1);
  v237 = ((v236 + 1100532475 - ((2 * v236) & 0x833195F6)) ^ v234) + v235;
  v238 = a2[5];
  *(_QWORD *)(v53 - 256) = 11;
  LOBYTE(v235) = (v507[v238 ^ 0x9D] + 117) ^ 0xF7;
  v239 = *((unsigned __int8 *)v211 + (a2[11] ^ 0xC2)) ^ 0x8C | v223;
  v240 = a2[6] ^ 0xA4;
  v241 = v239 & 0xFF00FFFF | (((v507[a2[9] ^ 0x3ELL] + 117) ^ 0xDF) << 16);
  *(_QWORD *)(v53 - 248) = 15;
  v520 = v225 & 0xFF00FFFF | (v235 << 16) | ((*((unsigned __int8 *)v210 + v240) ^ 0xC4) << 8);
  v242 = (char *)off_1E2538470[v218 - 390] - 12;
  LODWORD(v220) = ((((unsigned __int16)(v520 ^ WORD2(v508)) >> 8) ^ 0x4C)
                 - 1713330063
                 - 2 * ((((v520 ^ HIDWORD(v508)) >> 8) ^ 0xB71C4C) & 0x73 ^ ((v520 ^ HIDWORD(v508)) >> 8) & 2)) ^ *(_DWORD *)&v242[4 * (((unsigned __int16)(v520 ^ WORD2(v508)) >> 8) ^ 0x21)];
  LODWORD(v240) = v220 - 884584916 - ((2 * v220) & 0x968C9C58);
  v243 = (char *)off_1E2538470[v218 - 509] - 8;
  LODWORD(v220) = v231 ^ v509;
  LODWORD(v240) = v240 ^ *(_DWORD *)&v243[4 * ((v231 ^ v509) ^ 0xAA)];
  v517 = *((unsigned __int8 *)v211 + (a2[15] ^ 0x47)) ^ 0xA9 ^ v237;
  v244 = (~((unsigned __int16)(WORD2(a44) ^ v517) >> 8)
        - 1713330063
        - ((2 * (((HIDWORD(a44) ^ v517) >> 8) ^ 0xBC71FF)) & 0xE2)) ^ *(_DWORD *)&v242[4 * (~((unsigned __int16)(WORD2(a44) ^ v517) >> 8) ^ 0x6D)];
  v245 = (char *)off_1E2538470[v218 - 479] - 8;
  v246 = *(_DWORD *)&v245[4 * (((v241 ^ v508) >> 16) ^ 0x68)];
  HIDWORD(v248) = v246 ^ 0x54F;
  LODWORD(v248) = v246 ^ 0x627C5000;
  v247 = v248 >> 12;
  v249 = *(_DWORD *)&v245[4 * ((v231 ^ v509) >> 16)];
  HIDWORD(v248) = v249 ^ 0x54F;
  LODWORD(v248) = v249 ^ 0x627C5000;
  v250 = (char *)off_1E2538470[(int)v412] - 8;
  v251 = (v244 - 417049607 - ((2 * v244) & 0xCE48A7F2)) ^ *(_DWORD *)&v250[4 * (((v520 ^ HIDWORD(v508)) >> 24) ^ 0xB7)] ^ (v248 >> 12);
  v252 = *(_DWORD *)&v245[4 * (((HIDWORD(a44) ^ v517) >> 16) ^ 0x71)];
  HIDWORD(v248) = v252 ^ 0x54F;
  LODWORD(v248) = v252 ^ 0x627C5000;
  v253 = ((unsigned __int16)(v241 ^ v508) >> 8) ^ *(_DWORD *)&v243[4
                                                                                  * ((v520 ^ BYTE4(v508)) ^ 0xFB)] ^ *(_DWORD *)&v242[4 * (((unsigned __int16)(v241 ^ v508) >> 8) ^ 0x23)] ^ (v248 >> 12);
  LODWORD(v225) = *(_DWORD *)&v245[4 * (((v520 ^ HIDWORD(v508)) >> 16) ^ 0x1C)];
  HIDWORD(v248) = v225 ^ 0x54F;
  LODWORD(v248) = v225 ^ 0x627C5000;
  LODWORD(v225) = *(_DWORD *)&v250[4 * (((v241 ^ v508) >> 24) ^ 0xF6)] ^ ((BYTE1(v220) ^ 0x32)
                                                                                      - 1713330063
                                                                                      - ((2
                                                                                        * ((v220 >> 8) ^ 0x730032)) & 0xE2)) ^ ((v248 >> 12) - 417049607 - ((2 * (v248 >> 12)) & 0xCE48A7F2)) ^ *(_DWORD *)&v242[4 * (BYTE1(v220) ^ 0x5F)];
  v254 = v251 - 884584916 - ((2 * v251) & 0x968C9C58);
  v255 = HIDWORD(v498) ^ v247 ^ (v240 - 417049607 - ((2 * v240) & 0xCE48A7F2)) ^ *(_DWORD *)&v250[4
                                                                                                * (((HIDWORD(a44) ^ v517) >> 24) ^ 0xBC)];
  v256 = v498 ^ (v225 - 884584916 - ((2 * v225) & 0x968C9C58)) ^ *(_DWORD *)&v243[4
                                                                                * ((BYTE4(a44) ^ v517) ^ 0xAD)];
  LODWORD(v225) = HIDWORD(v494) ^ *(_DWORD *)&v243[4 * ((v241 ^ v508) ^ 0x5F)] ^ v254;
  LODWORD(v220) = v417 ^ *(_DWORD *)&v250[4 * (BYTE3(v220) ^ 0x73)] ^ ((v253 ^ 0x52A6E613)
                                                                     - 417049606
                                                                     + ((2
                                                                       * ((v253 ^ 0x52A6E613) & 0x672453FB ^ v253 & 2)) ^ 0xFFFFFFFB));
  v257 = *(_DWORD *)&v245[4 * (BYTE2(v255) ^ 0x38)];
  HIDWORD(v248) = v257 ^ 0x54F;
  LODWORD(v248) = v257 ^ 0x627C5000;
  v258 = v248 >> 12;
  LODWORD(v240) = *(_DWORD *)&v245[4 * (BYTE2(v256) ^ 0x16)];
  HIDWORD(v248) = v240 ^ 0x54F;
  LODWORD(v248) = v240 ^ 0x627C5000;
  LODWORD(v238) = v248 >> 12;
  v259 = *(_DWORD *)&v245[4 * (BYTE2(v225) ^ 0x66)];
  HIDWORD(v248) = v259 ^ 0x54F;
  LODWORD(v248) = v259 ^ 0x627C5000;
  v260 = (v248 >> 12) ^ *(_DWORD *)&v242[4 * (BYTE1(v220) ^ 5)] ^ ((BYTE1(v220) ^ 0x68)
                                                                 - 1713330063
                                                                 - ((2 * ((v220 >> 8) ^ 0x42BD68)) & 0xE2));
  v261 = (v258 - 884584916 - ((2 * v258) & 0x968C9C58)) ^ *(_DWORD *)&v243[4 * (v225 ^ 0xB6)];
  v262 = (v260 - 884584916 - ((2 * v260) & 0x968C9C58)) ^ *(_DWORD *)&v243[4 * (v255 ^ 0x61)];
  v263 = ((BYTE1(v255) ^ 0x8C) - 1713330063 - ((v255 >> 7) & 0xE2)) ^ 0xD678EAEF ^ *(_DWORD *)&v242[4 * (BYTE1(v255) ^ 0xE1)];
  v264 = *(_DWORD *)&v250[4 * (BYTE3(v225) ^ 0x43)] ^ 0x453E0847;
  v265 = v263 + v264;
  v266 = v263 & v264;
  v267 = *(_DWORD *)&v245[4 * (BYTE2(v220) ^ 0xBD)];
  v268 = v265 - 2 * v266;
  HIDWORD(v248) = v267 ^ 0x54F;
  LODWORD(v248) = v267 ^ 0x627C5000;
  v269 = *(_DWORD *)&v250[4 * (HIBYTE(v255) ^ 0xF9)] ^ (v238 - 417049607 - ((2 * v238) & 0xCE48A7F2));
  v270 = (v269 - 884584916 - ((2 * v269) & 0x968C9C58)) ^ *(_DWORD *)&v243[4 * (v220 ^ 0xAB)];
  v271 = *(_DWORD *)&v250[4 * (BYTE3(v220) ^ 0x42)] ^ v512 ^ *(_DWORD *)&v242[4 * (BYTE1(v256) ^ 0x24)] ^ ((BYTE1(v256) ^ 0x49) - 1713330063 - ((2 * ((v256 >> 8) ^ 0xC51649)) & 0xE2)) ^ (v261 - 417049607 - ((2 * v261) & 0xCE48A7F2));
  LODWORD(v220) = HIDWORD(v412) ^ *(_DWORD *)&v242[4 * (BYTE1(v225) ^ 0x39)] ^ (v270
                                                                              - 1713330063
                                                                              - ((2 * v270) & 0x33C150E2));
  v272 = v494 ^ *(_DWORD *)&v250[4 * (HIBYTE(v256) ^ 0xC5)] ^ (v262 - 417049607 - ((2 * v262) & 0xCE48A7F2));
  LODWORD(v238) = HIDWORD(v488) ^ *(_DWORD *)&v243[4 * (v256 ^ 0x6A)] ^ ((v268 ^ (v248 >> 12))
                                                                                        - 884584916
                                                                                        - ((2 * (v268 ^ (v248 >> 12))) & 0x968C9C58));
  v273 = *(_DWORD *)&v245[4 * (BYTE2(v238) ^ 0x79)];
  HIDWORD(v248) = v273 ^ 0x54F;
  LODWORD(v248) = v273 ^ 0x627C5000;
  LODWORD(v240) = ((v248 >> 12) - 417049607 - ((2 * (v248 >> 12)) & 0xCE48A7F2)) ^ *(_DWORD *)&v250[4 * (HIBYTE(v272) ^ 0x22)];
  v274 = ((BYTE1(v238) ^ 0xD0) - 1713330063 - ((2 * ((v238 >> 8) ^ 0x679D0)) & 0xE2)) ^ *(_DWORD *)&v242[4 * (BYTE1(v238) ^ 0xBD)];
  v275 = (v274 - 884584916 - ((2 * v274) & 0x968C9C58)) ^ *(_DWORD *)&v243[4 * (v271 ^ 0x76)];
  v276 = ((BYTE1(v220) ^ 0xEC) - 1713330063 - ((2 * ((v220 >> 8) ^ 0xE5FEC)) & 0xE2)) ^ *(_DWORD *)&v242[4 * (BYTE1(v220) ^ 0x81)];
  v277 = *(_DWORD *)&v245[4 * (BYTE2(v220) ^ 0x5F)];
  HIDWORD(v248) = v277 ^ 0x54F;
  LODWORD(v248) = v277 ^ 0x627C5000;
  v278 = v248 >> 12;
  HIDWORD(v248) = *(_DWORD *)&v243[4 * (v272 ^ 0x5E)] ^ 0x225169A4;
  LODWORD(v248) = HIDWORD(v248);
  v279 = (v248 >> 28) ^ __ROR4__(*(_DWORD *)&v250[4 * (BYTE3(v238) ^ 6)] ^ 0x7462B151 ^ (v276- 417049607- ((2 * v276) & 0xCE48A7F2)), 28);
  v280 = (v278 - 417049607 - ((2 * v278) & 0xCE48A7F2)) ^ *(_DWORD *)&v250[4 * (HIBYTE(v271) ^ 0xD2)];
  v281 = (v280 - 884584916 - ((2 * v280) & 0x968C9C58)) ^ *(_DWORD *)&v243[4 * (v238 ^ 0x4C)];
  LODWORD(v238) = *(_DWORD *)&v245[4 * (BYTE2(v272) ^ 0x1B)];
  HIDWORD(v248) = v238 ^ 0x54F;
  LODWORD(v248) = v238 ^ 0x627C5000;
  LODWORD(v238) = v248 >> 12;
  v282 = ((v271 >> 8) ^ 0xD2CCC0) & 0x7D ^ (v271 >> 8) & 0xC;
  v283 = BYTE1(v271) ^ 0xC0;
  v284 = *(_DWORD *)&v245[4 * (BYTE2(v271) ^ 0xCC)];
  HIDWORD(v248) = v284 ^ 0x54F;
  LODWORD(v248) = v284 ^ 0x627C5000;
  v285 = v488 ^ (v248 >> 12) ^ __ROR4__(v279 ^ 0x78071371, 4);
  LOBYTE(v225) = v220 ^ BYTE1(v225) ^ 0x54;
  LODWORD(v238) = HIDWORD(v483) ^ *(_DWORD *)&v250[4 * (BYTE3(v220) ^ 0xE)] ^ v238 ^ (v275
                                                                                    - 417049607
                                                                                    - ((2 * v275) & 0xCE48A7F2));
  LODWORD(v220) = v483 ^ *(_DWORD *)&v242[4 * (BYTE1(v272) ^ 5)] ^ (v281 - 1713330063 - ((2 * v281) & 0x33C150E2));
  LODWORD(v225) = HIDWORD(v478) ^ (v283 - 1713330063 - 2 * v282) ^ *(_DWORD *)&v243[4 * (v225 ^ 0xCA)] ^ *(_DWORD *)&v242[4 * (v283 ^ 0x6D)] ^ (v240 - 884584916 - ((2 * v240) & 0x968C9C58));
  LODWORD(v240) = *(_DWORD *)&v245[4 * (BYTE2(v220) ^ 0x52)];
  HIDWORD(v248) = v240 ^ 0x54F;
  LODWORD(v248) = v240 ^ 0x627C5000;
  LODWORD(v240) = v248 >> 12;
  v286 = *(_DWORD *)&v245[4 * (BYTE2(v285) ^ 0xFE)];
  HIDWORD(v248) = v286 ^ 0x54F;
  LODWORD(v248) = v286 ^ 0x627C5000;
  v287 = ((BYTE1(v220) ^ 0x95) - 1713330063 - ((2 * ((v220 >> 8) ^ 0x455295)) & 0xE2)) ^ *(_DWORD *)&v243[4 * (v238 ^ 0x72)] ^ *(_DWORD *)&v242[4 * (BYTE1(v220) ^ 0xF8)] ^ ((v248 >> 12) - 884584916 - ((2 * (v248 >> 12)) & 0x968C9C58));
  v288 = *(_DWORD *)&v245[4 * (BYTE2(v225) ^ 2)];
  HIDWORD(v248) = v288 ^ 0x54F;
  LODWORD(v248) = v288 ^ 0x627C5000;
  v289 = *(_DWORD *)&v245[4 * (BYTE2(v238) ^ 0x3B)];
  v290 = *(_DWORD *)&v243[4 * ((v220 ^ BYTE1(v272)) ^ 0x54)] ^ *(_DWORD *)&v250[4
                                                                                               * (BYTE3(v238) ^ 0xA7)] ^ 0x2C621DD5 ^ (v248 >> 12);
  HIDWORD(v248) = v289 ^ 0x54F;
  LODWORD(v248) = v289 ^ 0x627C5000;
  v291 = v478 ^ *(_DWORD *)&v243[4 * (v285 ^ 0x1E)] ^ *(_DWORD *)&v250[4 * (BYTE3(v220) ^ 0x61)] ^ ((BYTE1(v225) ^ 0xD9) - 1713330063 - 2 * (((v225 >> 8) ^ 0x9802D9) & 0x77 ^ (v225 >> 8) & 6)) ^ *(_DWORD *)&v242[4 * (BYTE1(v225) ^ 0xB4)] ^ (v248 >> 12);
  v292 = HIDWORD(v474) ^ *(_DWORD *)&v250[4 * (BYTE3(v225) ^ 0x98)] ^ (v287 - 417049607 - ((2 * v287) & 0xCE48A7F2));
  LODWORD(v220) = v474 ^ ((BYTE1(v238) ^ 0x29) - 1713330063 - ((2 * ((v238 >> 8) ^ 0xA73B29)) & 0xE2)) ^ *(_DWORD *)&v243[4 * (v225 ^ 0x3D)] ^ *(_DWORD *)&v250[4 * (HIBYTE(v285) ^ 0x99)] ^ *(_DWORD *)&v242[4 * (BYTE1(v238) ^ 0x44)] ^ v240;
  LODWORD(v225) = HIDWORD(v467) ^ *(_DWORD *)&v242[4 * (BYTE1(v285) ^ 0x8A)] ^ (v290
                                                                              - 1713330063
                                                                              - ((2 * v290) & 0x33C150E2));
  v293 = *(_DWORD *)&v245[4 * (BYTE2(v291) ^ 0xEA)];
  HIDWORD(v248) = v293 ^ 0x54F;
  LODWORD(v248) = v293 ^ 0x627C5000;
  v294 = v248 >> 12;
  LODWORD(v240) = *(_DWORD *)&v245[4 * (BYTE2(v220) ^ 0x8A)];
  HIDWORD(v248) = v240 ^ 0x54F;
  LODWORD(v248) = v240 ^ 0x627C5000;
  v295 = BYTE1(v220) ^ 0xE2;
  LODWORD(v240) = v295 - 1713330063 - ((2 * ((v220 >> 8) ^ 0xF98AE2)) & 0xE2);
  v296 = *(_DWORD *)&v243[4
                        * ((BYTE4(v467) ^ v242[4 * (BYTE1(v285) ^ 0x8A)] ^ (v290
                                                                                           + 113
                                                                                           - ((2 * v290) & 0xE2)) ^ BYTE1(v285)) ^ 0xA6)] ^ ((BYTE1(v291) ^ 0x57) - 1713330063 + (~(2 * ((v291 >> 8) ^ 0xAA9057)) | 0xFFFFFF1D) + 1) ^ *(_DWORD *)&v242[4 * (BYTE1(v291) ^ 0x3A)] ^ ((v248 >> 12) - 884584916 - ((2 * (v248 >> 12)) & 0x968C9C58));
  v297 = *(_DWORD *)&v245[4 * (BYTE2(v225) ^ 0x81)];
  HIDWORD(v248) = v297 ^ 0x54F;
  LODWORD(v248) = v297 ^ 0x627C5000;
  v298 = ((v248 >> 12) - 417049607 - ((2 * (v248 >> 12)) & 0xCE48A7F2)) ^ *(_DWORD *)&v250[4 * (HIBYTE(v291) ^ 0xAA)];
  v299 = (v298 - 884584916 - ((2 * v298) & 0x968C9C58)) ^ *(_DWORD *)&v243[4 * (v220 ^ 0xD0)];
  v300 = *(_DWORD *)&v245[4 * (BYTE2(v292) ^ 0xC6)];
  v301 = ((BYTE1(v225) ^ 0xA0)
        - 1713330063
        - 2 * (((v225 >> 8) ^ 0x6881A0) & 0x79 ^ (v225 >> 8) & 8)) ^ (v294
                                                                                                - 884584916
                                                                                                - ((2 * v294) & 0x968C9C58)) ^ *(_DWORD *)&v243[4 * (v292 ^ 0xFC)] ^ *(_DWORD *)&v242[4 * (BYTE1(v225) ^ 0xCD)];
  LODWORD(v248) = __ROR4__((v300 >> 12) ^ 0x26BFAE7, 17) ^ 0xEE910136;
  HIDWORD(v248) = v248;
  LODWORD(v238) = v467 ^ *(_DWORD *)&v242[4 * (BYTE1(v292) ^ 0x75)] ^ (v299 - 1713330063 - ((2 * v299) & 0x33C150E2));
  v302 = HIDWORD(v462) ^ *(_DWORD *)&v250[4 * (BYTE3(v220) ^ 0xF9)] ^ (v301 - 417049607 - ((2 * v301) & 0xCE48A7F2));
  LODWORD(v220) = v462 ^ *(_DWORD *)&v250[4 * (HIBYTE(v292) ^ 0x5A)] ^ (v296 - 417049607 - ((2 * v296) & 0xCE48A7F2));
  LODWORD(v225) = HIDWORD(v456) ^ v240 ^ *(_DWORD *)&v243[4 * (v291 ^ 0x77)] ^ *(_DWORD *)&v242[4 * (v295 ^ 0x6D)] ^ *(_DWORD *)&v250[4 * (BYTE3(v225) ^ 0x68)] ^ ((v248 >> 15) + (v300 << 20));
  v303 = ((BYTE1(v238) ^ 0x9D) - 1713330063 - ((2 * ((v238 >> 8) ^ 0xC2489D)) & 0xE2)) ^ *(_DWORD *)&v242[4 * (BYTE1(v238) ^ 0xF0)];
  v304 = *(_DWORD *)&v245[4 * (BYTE2(v302) ^ 0x8F)];
  v305 = *(_DWORD *)&v243[4 * (v225 ^ 0x5F)] ^ (v304 << 20) ^ (v304 >> 12) ^ (v303
                                                                                             - 884584916
                                                                                             - ((2 * v303) & 0x968C9C58));
  LODWORD(v240) = *(_DWORD *)&v245[4 * (BYTE2(v220) ^ 0xB8)];
  HIDWORD(v248) = v240 ^ 0x54F;
  LODWORD(v248) = v240 ^ 0x627C5000;
  v306 = ((v248 >> 12) - 884584916 - ((2 * (v248 >> 12)) & 0x968C9C58)) ^ *(_DWORD *)&v243[4
                                                                                         * ((v467 ^ v242[4 * (BYTE1(v292) ^ 0x75)] ^ (v299 + 113 - ((2 * v299) & 0xE2)) ^ BYTE1(v292)) ^ 0x3F)];
  v307 = *(_DWORD *)&v245[4 * (BYTE2(v238) ^ 0x48)];
  HIDWORD(v248) = v307 ^ 0x54F;
  LODWORD(v248) = v307 ^ 0x627C5000;
  v308 = ((BYTE1(v225) ^ 0x7D) - 1713330063 - ((2 * ((v225 >> 8) ^ 0x5E197D)) & 0xE2)) ^ *(_DWORD *)&v243[4 * (v220 ^ 0xCC)] ^ *(_DWORD *)&v242[4 * (BYTE1(v225) ^ 0x10)] ^ ((v248 >> 12) - 884584916 - ((2 * (v248 >> 12)) & 0x968C9C58));
  v309 = *(_DWORD *)&v245[4 * (BYTE2(v225) ^ 0x19)];
  HIDWORD(v248) = v309 ^ 0x54F;
  LODWORD(v248) = v309 ^ 0x627C5000;
  v310 = v456 ^ ((BYTE1(v220) ^ 0xD7) - 1713330063 - ((2 * ((v220 >> 8) ^ 0xCFB8D7)) & 0xE2)) ^ *(_DWORD *)&v243[4 * (v302 ^ 0x50)] ^ *(_DWORD *)&v242[4 * (BYTE1(v220) ^ 0xBA)] ^ *(_DWORD *)&v250[4 * (BYTE3(v238) ^ 0xC2)] ^ (v248 >> 12);
  v311 = v377 ^ HIDWORD(v378) ^ *(_DWORD *)&v250[4 * (HIBYTE(v302) ^ 0xC7)] ^ (v308
                                                                             - 417049607
                                                                             - ((2 * v308) & 0xCE48A7F2));
  v312 = v451 ^ *(_DWORD *)&v250[4 * (BYTE3(v220) ^ 0xCF)] ^ ((v305 ^ 0x54F627C5)
                                                            - 417049607
                                                            - 2 * ((v305 ^ 0x54F627C5) & 0x672453FB ^ v305 & 2));
  LODWORD(v225) = HIDWORD(v446) ^ ((BYTE1(v302) ^ 0xD9) - 1713330063 - ((2 * ((v302 >> 8) ^ 0xC78FD9)) & 0xE2)) ^ *(_DWORD *)&v242[4 * (BYTE1(v302) ^ 0xB4)] ^ *(_DWORD *)&v250[4 * (BYTE3(v225) ^ 0x5E)] ^ (v306 - 417049606 + ~((2 * v306) & 0xCE48A7F2));
  v313 = ((unsigned __int16)((v194 - ((2 * v194) & 0x9A3E) + 19743) ^ WORD2(v378) ^ *(_WORD *)&v250[4 * (HIBYTE(v302) ^ 0xC7)] ^ (v308 + 21497 - ((2 * v308) & 0xA7F2))) >> 8) ^ 0xB4;
  LODWORD(v240) = ((BYTE1(v225) ^ 0xCC) - 1713330063 - ((2 * ((v225 >> 8) ^ 0x33C8CC)) & 0xE2)) ^ *(_DWORD *)&v242[4 * (BYTE1(v225) ^ 0xA1)];
  v314 = *(_DWORD *)&v245[4 * (BYTE2(v311) ^ 0xE6)];
  HIDWORD(v248) = v314 ^ 0x54F;
  LODWORD(v248) = v314 ^ 0x627C5000;
  v315 = v248 >> 12;
  v316 = *(_DWORD *)&v245[4 * (BYTE2(v312) ^ 0x1C)];
  HIDWORD(v248) = v316 ^ 0x54F;
  LODWORD(v248) = v316 ^ 0x627C5000;
  LODWORD(v220) = (v248 >> 12) ^ *(_DWORD *)&v242[4 * (v313 ^ 0x6D)] ^ (v313
                                                                      - 1713330063
                                                                      - ((2 * ((v311 >> 8) ^ 0x4FE6B4)) & 0xE2));
  LODWORD(v220) = (v220 - 884584916 - ((2 * v220) & 0x968C9C58)) ^ *(_DWORD *)&v243[4 * (v310 ^ 0x3F)];
  v317 = (v240 - 884584916 - ((2 * v240) & 0x968C9C58)) ^ *(_DWORD *)&v243[4 * (v312 ^ 0x3A)];
  v318 = *(_DWORD *)&v243[4
                        * (((v194 - ((2 * v194) & 0x3E) + 31) ^ BYTE4(v378) ^ v250[4 * (HIBYTE(v302) ^ 0xC7)] ^ (v308 - 7 - ((2 * v308) & 0xF2))) ^ 0x96)];
  HIDWORD(v248) = v318 ^ 0xB464E2C;
  LODWORD(v248) = v318 ^ 0xC0000000;
  HIDWORD(v248) = (v248 >> 29) ^ 0x6615DA09;
  LODWORD(v248) = HIDWORD(v248);
  v319 = (v315 - 884584916 - ((2 * v315) & 0x968C9C58)) ^ *(_DWORD *)&v243[4 * (v225 ^ 0xA2)] ^ ((BYTE1(v310) ^ 9) - 1713330063 - 2 * (((v310 >> 8) ^ 0x355109) & 0x77 ^ (v310 >> 8) & 6)) ^ *(_DWORD *)&v242[4 * (BYTE1(v310) ^ 0x64)];
  v320 = (v248 >> 3) - 1713330063 - ((2 * (v248 >> 3)) & 0x33C150E2);
  LODWORD(v240) = v317 - 417049607 - ((2 * v317) & 0xCE48A7F2);
  v321 = v319 - 417049607 - ((2 * v319) & 0xCE48A7F2);
  v322 = *(_DWORD *)&v245[4 * (BYTE2(v310) ^ 0x51)];
  HIDWORD(v248) = v322 ^ 0x54F;
  LODWORD(v248) = v322 ^ 0x627C5000;
  v323 = v248 >> 12;
  v324 = *(_DWORD *)&v245[4 * (BYTE2(v225) ^ 0xC8)];
  HIDWORD(v248) = v324 ^ 0x54F;
  LODWORD(v248) = v324 ^ 0x627C5000;
  LODWORD(v238) = v446 ^ *(_DWORD *)&v250[4 * (BYTE3(v225) ^ 0x17)] ^ (v220 - 417049607 - ((2 * v220) & 0xCE48A7F2));
  LODWORD(v225) = v320 ^ *(_DWORD *)&v242[4 * (BYTE1(v312) ^ 0xD1)] ^ (v248 >> 12);
  LODWORD(v225) = *(_DWORD *)&v250[4 * (HIBYTE(v310) ^ 0x11)] ^ HIDWORD(v511) ^ (v225
                                                                               - 417049607
                                                                               - ((2 * v225) & 0xCE48A7F2));
  LODWORD(v220) = v441 ^ *(_DWORD *)&v250[4 * (HIBYTE(v312) ^ 0x1B)] ^ v321;
  v325 = *(_DWORD *)&v245[4 * (BYTE2(v220) ^ 0x7E)];
  HIDWORD(v248) = v325 ^ 0x54F;
  LODWORD(v248) = v325 ^ 0x627C5000;
  v326 = v248 >> 12;
  LODWORD(v240) = HIDWORD(v441) ^ *(_DWORD *)&v250[4 * (HIBYTE(v311) ^ 0x4F)] ^ v323 ^ v240;
  v327 = *(_DWORD *)&v245[4 * (BYTE2(v240) ^ 1)];
  HIDWORD(v248) = v327 ^ 0x54F;
  LODWORD(v248) = v327 ^ 0x627C5000;
  v328 = ((v248 >> 12) - 884584916 - ((2 * (v248 >> 12)) & 0x968C9C58)) ^ *(_DWORD *)&v243[4
                                                                                         * (v238 ^ 0xC6)];
  v329 = ((BYTE1(v238) ^ 0x71) - 1713330063 - ((2 * ((v238 >> 8) ^ 0xF25B71)) & 0xE2)) ^ *(_DWORD *)&v242[4 * (BYTE1(v238) ^ 0x1C)];
  v330 = (v329 - 417049607 - ((2 * v329) & 0xCE48A7F2)) ^ *(_DWORD *)&v250[4 * (BYTE3(v240) ^ 0x1F)];
  v331 = *(_DWORD *)&v245[4 * (BYTE2(v238) ^ 0x5B)];
  HIDWORD(v248) = v331 ^ 0x54F;
  LODWORD(v248) = v331 ^ 0x627C5000;
  v332 = v248 >> 12;
  v333 = *(_DWORD *)&v245[4 * (BYTE2(v225) ^ 0xF4)];
  HIDWORD(v248) = v333 ^ 0x54F;
  LODWORD(v248) = v333 ^ 0x627C5000;
  v334 = v248 >> 12;
  HIDWORD(v248) = v326 ^ ((BYTE1(v240) ^ 0x81)
                        - 1713330063
                        - 2 * (((v240 >> 8) ^ 0x1F0181) & 0x79 ^ (v240 >> 8) & 8)) ^ 0xD678EAEF ^ *(_DWORD *)&v242[4 * (BYTE1(v240) ^ 0xEC)];
  LODWORD(v248) = HIDWORD(v248);
  LODWORD(v248) = (v248 >> 11) ^ __ROR4__(*(_DWORD *)&v250[4 * (BYTE3(v238) ^ 0xF2)] ^ 0x453E0847, 11) ^ 0xD490839A;
  HIDWORD(v248) = v248;
  v335 = v378 ^ HIDWORD(v390) ^ *(_DWORD *)&v243[4 * (v240 ^ 0xB8)] ^ ((BYTE1(v220) ^ 0xAA)
                                                                                      - 1713330063
                                                                                      - ((2
                                                                                        * ((v220 >> 8) ^ 0x967EAA)) & 0xE2)) ^ *(_DWORD *)&v250[4 * (BYTE3(v225) ^ 0x57)] ^ *(_DWORD *)&v242[4 * (BYTE1(v220) ^ 0xC7)] ^ v332;
  LOBYTE(v332) = v225 ^ BYTE1(v312);
  LODWORD(v240) = v435 ^ *(_DWORD *)&v250[4 * (BYTE3(v220) ^ 0x96)] ^ ((BYTE1(v225) ^ 0xE0)
                                                                     - 1713330063
                                                                     - 2
                                                                     * (((v225 >> 8) ^ 0x73F4E0) & 0x73 ^ (v225 >> 8) & 2)) ^ *(_DWORD *)&v242[4 * (BYTE1(v225) ^ 0x8D)] ^ (v328 - 417049607 - ((2 * v328) & 0xCE48A7F2));
  LODWORD(v225) = HIDWORD(v431) ^ *(_DWORD *)&v243[4 * (v220 ^ 0x88)] ^ v334 ^ (v330
                                                                                               - 884584916
                                                                                               - ((2 * v330) & 0x968C9C58));
  LODWORD(v220) = v431 ^ *(_DWORD *)&v243[4 * (v332 ^ 0xAF)] ^ ((v248 >> 21)
                                                                               - 884584916
                                                                               - ((2 * (v248 >> 21)) & 0x968C9C58));
  v336 = *(_DWORD *)&v245[4 * (BYTE2(v335) ^ 0x89)];
  HIDWORD(v248) = v336 ^ 0x54F;
  LODWORD(v248) = v336 ^ 0x627C5000;
  v337 = v248 >> 12;
  v338 = *(_DWORD *)&v242[4 * (BYTE1(v240) ^ 0x96)] ^ ((BYTE1(v240) ^ 0xFB)
                                                     - 1713330063
                                                     - ((2 * ((v240 >> 8) ^ 0x3EA2FB)) & 0xE2));
  v339 = (v338 - 884584916 - ((2 * v338) & 0x968C9C58)) ^ *(_DWORD *)&v243[4 * (v225 ^ 0x75)];
  v340 = *(_DWORD *)&v245[4 * (BYTE2(v240) ^ 0xA2)];
  HIDWORD(v248) = v340 ^ 0x54F;
  LODWORD(v248) = v340 ^ 0x627C5000;
  v341 = ((BYTE1(v225) ^ 0xF0)
        - 1713330063
        - 2 * (((v225 >> 8) ^ 0xB54AF0) & 0x73 ^ (v225 >> 8) & 2)) ^ (v248 >> 12) ^ *(_DWORD *)&v242[4 * (BYTE1(v225) ^ 0x9D)];
  v342 = *(_DWORD *)&v250[4 * (BYTE3(v225) ^ 0x91)];
  v343 = *(_DWORD *)&v250[4 * (BYTE3(v240) ^ 0x3E)];
  v344 = *(_DWORD *)&v250[4 * (HIBYTE(v335) ^ 0xEB)];
  v345 = (v341 - 417049607 - ((2 * v341) & 0xCE48A7F2)) ^ *(_DWORD *)&v250[4 * (BYTE3(v220) ^ 0xED)];
  v346 = *(_DWORD *)&v243[4 * (v335 ^ 0xBA)];
  LODWORD(v250) = *(_DWORD *)&v245[4 * (BYTE2(v220) ^ 0xAF)];
  LODWORD(v225) = *(_DWORD *)&v245[4 * (BYTE2(v225) ^ 0x4A)];
  HIDWORD(v248) = v225 ^ 0x54F;
  LODWORD(v248) = v225 ^ 0x627C5000;
  LODWORD(v225) = (v335 >> 8) ^ 0xEB89DD;
  v347 = *(_DWORD *)&v242[4 * (BYTE1(v220) ^ 0x70)];
  LODWORD(v242) = *(_DWORD *)&v242[4 * (v225 ^ 0x6D)];
  LODWORD(v245) = v225 - 1713330063 - ((2 * v225) & 0xE2);
  LODWORD(v225) = HIDWORD(v428) ^ *(_DWORD *)&v243[4 * (v240 ^ 0x9A)] ^ v337 ^ ((BYTE1(v220) ^ 0x1D)
                                                                                               - 1713330063
                                                                                               - ((2
                                                                                                 * ((v220 >> 8) ^ 0xC9AF1D)) & 0xE2)) ^ v342 ^ v347;
  LODWORD(v220) = v428 ^ v245 ^ v343 ^ v242 ^ *(_DWORD *)&v243[4
                                                                                         * (v220 ^ 0x8F)] ^ (v248 >> 12);
  v348 = HIDWORD(v422) ^ v346 ^ (v345 - 884584916 - ((2 * v345) & 0x968C9C58));
  LODWORD(v238) = v422 ^ v344 ^ (v250 >> 12) ^ ((_DWORD)v250 << 20) ^ (v339
                                                                                   - 417049607
                                                                                   - ((2 * v339) & 0xCE48A7F2));
  v349 = *(_DWORD *)(v53 - 120);
  v350 = (char *)off_1E2538470[v349 - 408] - 8;
  v351 = (char *)off_1E2538470[SHIDWORD(v406)] - 4;
  v352 = *(_DWORD *)&v351[4 * (BYTE1(v238) ^ 4)] ^ *(_DWORD *)&v350[4 * (v348 ^ 7)];
  v353 = *(_DWORD *)&v351[4 * (BYTE1(v225) ^ 0x6C)];
  LODWORD(v250) = *(_DWORD *)&v351[4 * ((unsigned __int16)(v348 ^ 0x6F07) >> 8)];
  LODWORD(v242) = *(_DWORD *)&v351[4 * (BYTE1(v220) ^ 0x8A)];
  v354 = (char *)off_1E2538470[v349 - 348] - 8;
  v355 = *(unsigned int *)&v354[4 * (HIBYTE(v348) ^ 0xEF)];
  v356 = *(_DWORD *)&v354[4 * (BYTE3(v220) ^ 0xC2)];
  v357 = *(_DWORD *)&v354[4 * (BYTE3(v238) ^ 0xC9)];
  LODWORD(v240) = (v352 ^ 0x8CE8491B) - 1028534640 - 2 * ((v352 ^ 0x8CE8491B) & 0x42B1CE94 ^ v352 & 4);
  LODWORD(v354) = *(_DWORD *)&v354[4 * (BYTE3(v225) ^ 0x1D)];
  v358 = (char *)off_1E2538470[v349 - 459] - 4;
  v359 = *(_DWORD *)&v358[4 * (BYTE2(v238) ^ 0x4A)];
  v360 = *(_DWORD *)&v358[4 * (BYTE2(v348) ^ 0x2A)];
  v361 = *(_DWORD *)&v358[4 * (BYTE2(v220) ^ 0x86)];
  LODWORD(v240) = (v240 ^ v356) - 588775945 - ((2 * (v240 ^ v356)) & 0xB9CFFBEE);
  v362 = *(_DWORD *)&v350[4 * (v225 ^ 9)];
  LODWORD(v220) = *(_DWORD *)&v350[4 * (v220 ^ 0xF0)];
  LODWORD(v225) = *(_DWORD *)&v358[4 * (BYTE2(v225) ^ 0xE9)] ^ v240;
  LODWORD(v240) = *(_DWORD *)&v350[4 * (v238 ^ 0x1E)];
  v363 = *(_DWORD *)(v53 - 140) ^ HIDWORD(v509) ^ (v225 - ((2 * (_DWORD)v225) & 0x755AE332) + 984445337);
  v364 = off_1E2538470[v349 - 457];
  a2[8] = *((_BYTE *)v364 + (BYTE3(v363) ^ 0x2DLL)) ^ 0xD1;
  LODWORD(v354) = ((v359 ^ 0x92429322 ^ v250)
                 - 1028534640
                 - ((2 * (v359 ^ 0x92429322 ^ v250)) & 0x85639D20)) ^ v354;
  LODWORD(v220) = ((_DWORD)v354 - 1035130930 - ((2 * (_DWORD)v354) & 0x849A4F9C)) ^ v220;
  LODWORD(v354) = *(_DWORD *)(v53 - 136) ^ v510 ^ (v220 - ((2 * v220) & 0x115F2234) - 2001759974);
  v365 = (char *)off_1E2538470[(int)v406] - 12;
  a2[*(_QWORD *)(v53 - 232)] = (v365[(*(_BYTE *)(v53 - 136) ^ v510 ^ (v220 - ((2 * v220) & 0x34) + 26)) ^ 0xC7]
                              - 91) ^ 0x5F;
  v366 = (char *)off_1E2538470[v349 - 294] - 4;
  v367 = v366[BYTE1(v354) ^ 0x13];
  HIDWORD(v248) = v367 ^ 0x1D;
  LODWORD(v248) = v367 << 24;
  a2[6] = (v248 >> 30) ^ 0x40;
  v368 = ((v362 ^ 0x1EAADA39 ^ v360) - 1028534640 - ((2 * (v362 ^ 0x1EAADA39 ^ v360)) & 0x85639D20)) ^ v357;
  v369 = (v368 - ((2 * v368) & 0x9D4ADDAA) + 1319464661) ^ v242;
  v370 = *(unsigned int *)(v53 - 132);
  LODWORD(v350) = v370 ^ HIDWORD(v510) ^ (v369 - ((2 * v369) & 0xADB22B1C) + 1457067406);
  v371 = v366[BYTE1(v350)];
  HIDWORD(v248) = v371 ^ 0x1D;
  LODWORD(v248) = v371 << 24;
  a2[*(_QWORD *)(v53 - 224)] = (v248 >> 30) ^ 0x7E;
  v372 = (char *)off_1E2538470[v349 - 415] - 8;
  a2[9] = v372[BYTE2(v363) ^ 0x68] ^ 0xC3;
  v373 = ((v353 ^ 0x8C14A045 ^ v355) - 588775945 - ((2 * (v353 ^ 0x8C14A045 ^ v355)) & 0xB9CFFBEE)) ^ v361;
  LODWORD(v240) = v240 ^ (v373 - 1035130930 - ((2 * v373) & 0x849A4F9C));
  LODWORD(v240) = *(_DWORD *)(v53 - 128) ^ v511 ^ (v240 - ((2 * v240) & 0x6A0D9D6E) + 889638583);
  a2[*(_QWORD *)(v53 - 176)] = v372[BYTE2(v240) ^ 0xB8] ^ 0x10;
  a2[*(_QWORD *)(v53 - 256)] = (v365[v363 ^ 0xD4] - 91) ^ 0x7D;
  a2[*(_QWORD *)(v53 - 240)] = v372[BYTE2(v354) ^ 3] ^ 0x6E;
  a2[*(_QWORD *)(v53 - 192)] = *((_BYTE *)v364 + ((v354 >> 24) ^ 0x6DLL)) ^ 0x29;
  LODWORD(v354) = v366[BYTE1(v363) ^ 0x2FLL];
  HIDWORD(v248) = v354 ^ 0x1D;
  LODWORD(v248) = (_DWORD)v354 << 24;
  a2[*(_QWORD *)(v53 - 160)] = (v248 >> 30) ^ 0xD2;
  v374 = *(_QWORD *)(v53 - 216);
  a2[v374] = *((_BYTE *)v364 + ((v350 >> 24) ^ 0x53)) ^ 0xC5;
  a2[*(_QWORD *)(v53 - 184)] = (v365[v350 ^ 0x95] - 91) ^ 0xAF;
  a2[*(_QWORD *)(v53 - 248)] = (v365[v240 ^ 0x64] - 91) ^ 0x27;
  a2[*(_QWORD *)(v53 - 168)] = *((_BYTE *)v364 + (BYTE3(v240) ^ 0x6ELL)) ^ 0x53;
  LODWORD(v364) = v366[BYTE1(v240) ^ 0x1FLL];
  HIDWORD(v248) = v364 ^ 0x1D;
  LODWORD(v248) = (_DWORD)v364 << 24;
  a2[*(_QWORD *)(v53 - 200)] = (v248 >> 30) ^ 0x58;
  a2[*(_QWORD *)(v53 - 152)] = v372[BYTE2(v350) ^ 0xC8] ^ 0x41;
  return (*(uint64_t (**)(uint64_t, uint64_t (**)(unint64_t **), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(unint64_t **), uint64_t (*)(unint64_t **), char *, char *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(a50 + 8 * ((2305 * ((((_DWORD)v374 + 96925378 - 2 * (((_DWORD)v374 + 16) & *(_DWORD *)(v53 - 204))) ^ 0x5C6F6B2u) < HIDWORD(v417))) ^ (v349 + 665))))(v374, off_1E2538470, 110, 3266432656, v370, 3259836366, v355, v363, v376, v377, v378, v379, v381, v382, v383, v385, v387, v388, v390,
           v394,
           v397,
           v401,
           a17,
           a18,
           a19,
           a2,
           v406,
           v412,
           v417,
           v422,
           v428,
           v431,
           v435,
           v441,
           v446,
           v451,
           v456,
           v462,
           v467,
           v474,
           v478,
           v483,
           v488,
           v494,
           v498,
           v211,
           v503,
           v505,
           v507,
           a44,
           v508,
           v509,
           v510,
           v511);
}

void sub_18CA8070C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,int a59,int a60,int a61)
{
  uint64_t v61;

  *(_DWORD *)(v61 - 128) = a58 ^ 0xEE34959B;
  *(_DWORD *)(v61 - 140) = a60 ^ 0x81F41036;
  *(_DWORD *)(v61 - 132) = a61 ^ 0x22CFDC76;
  *(_DWORD *)(v61 - 136) = a59 ^ 0x71F30E06;
  JUMPOUT(0x18CA7E978);
}

uint64_t sub_18CA80760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,int a26,int a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59)
{
  uint64_t v59;
  int v60;

  v60 = ((2 * (a24 - (a27 & 0x4B713FF0) + 216041239)) & 0xF7FFBFE8 ^ 0x43713FE0)
      + ((a24 - (a27 & 0x4B713FF0) + 216041239) ^ 0x5E47400C)
      - 589037728 != 1491328852;
  return (*(uint64_t (**)(void))(v59 + 8 * (a59 | (4 * v60) | (v60 << 6))))();
}

uint64_t sub_18CA80838(int a1, int a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 2294) ^ 0x231) * ((a2 + a1 - 2080366580) > 7)) | v2)))();
}

uint64_t sub_18CA808AC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8
                                             * ((7067 * (a4 + a7 - 16 >= ((a5 + 1029) ^ 0xFFFFF9B2))) ^ a5 ^ 0x9A9))
                            - 12))();
}

uint64_t sub_18CA808F0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v20;
  int v23;

  v9 = (a2 + a1 + a4);
  v10 = v9 + a5 + 1;
  v11 = ((a3 ^ 0x47F) - 558) & v9;
  v12 = v11 - v9;
  v13 = v7 + v12;
  ++v11;
  v14 = v7 + v11;
  v15 = v6 + v12;
  v16 = v6 + v11;
  v17 = v5 + v12;
  v18 = v5 + v11;
  v20 = v14 > a5 && v13 < v10;
  if (v16 > a5 && v15 < v10)
    v20 = 1;
  v23 = v18 > a5 && v17 < v10 || v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v23 ^ 1) * (((a3 + 987) | 0x20) - 2583)) ^ a3)) - 8))();
}

uint64_t sub_18CA8097C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (a8 ^ (172 * (v8 > 0xF))))
                                                           - ((a8 - 2165) ^ 0x664u)
                                                           + 1952))(a1, a2, 0);
}

uint64_t sub_18CA809B0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  int8x16_t v12;
  int8x16_t v13;
  uint64_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16x4_t v19;
  int8x16x4_t v20;

  v19.val[1].i64[0] = ((_BYTE)v8 + 9) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)v8 + 8) & 0xF;
  v19.val[2].i64[0] = ((_BYTE)v8 + 7) & 0xF;
  v19.val[2].i64[1] = ((_BYTE)v8 + 6) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)v8 + 5) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)v8 + 4) & 0xF;
  v20.val[0].i64[0] = ((_BYTE)v8 + 3) & 0xF;
  v20.val[0].i64[1] = ((_BYTE)v8 + 2) & 0xF;
  v20.val[1].i64[0] = (v8 + 1) & 0xF;
  v20.val[1].i64[1] = v8 & 0xF;
  v11 = a2 + a1 + a3;
  v20.val[2].i64[0] = (v8 - 1) & 0xF;
  v20.val[2].i64[1] = (v8 + 14) & 0xF;
  v20.val[3].i64[0] = ((_BYTE)v8 + 13) & 0xF;
  v20.val[3].i64[1] = ((_BYTE)v8 + 12) & 0xF;
  v12.i64[0] = 0x505050505050505;
  v12.i64[1] = 0x505050505050505;
  v13.i64[0] = 0x5959595959595959;
  v13.i64[1] = 0x5959595959595959;
  v14 = (((a4 + 1728) | 3) ^ 0x884) & v11;
  v19.val[0].i64[0] = v14;
  v19.val[0].i64[1] = ((_BYTE)v8 + 10) & 0xF;
  v15.i64[0] = vqtbl4q_s8(v19, (int8x16_t)xmmword_18CF0E650).u64[0];
  v15.i64[1] = vqtbl4q_s8(v20, (int8x16_t)xmmword_18CF0E650).u64[0];
  v16 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a5 - 15 + v11), *(int8x16_t *)(v7 + v14 - 15)), veorq_s8(*(int8x16_t *)(v6 + v14 - 15), *(int8x16_t *)(v5 + v14 - 15))));
  v17 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v16, v16, 8uLL), v13), vmulq_s8(v15, v12)));
  *(int8x16_t *)(a5 - 15 + v11) = vextq_s8(v17, v17, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((21 * ((v9 & 0xFFFFFFF0) == 16)) | a4)) - 12))();
}

void sub_18CA80B14()
{
  JUMPOUT(0x18CA80A88);
}

uint64_t sub_18CA80B20(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * ((1726 * (((v3 == a3) ^ v4 ^ 0xB6) & 1)) ^ v4)))();
}

uint64_t sub_18CA80B50(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  char v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8
                                             * ((425 * ((v4 & 8) == ((a4 + 1903582658) & 0x8E899FAC) - 1964)) ^ a4))
                            - 12))();
}

uint64_t sub_18CA80B98@<X0>(char a1@<W0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  char v59;
  uint64_t v60;
  int v61;
  unsigned int v62;
  int v63;
  char v64;
  uint64_t v65;
  int8x16x4_t v67;

  *(_DWORD *)(v60 - 132) = v58;
  *(_DWORD *)(v60 - 128) = v61;
  v62 = v58 & 0xFFFFFFF8;
  *(_DWORD *)(v60 - 136) = v62;
  *(_DWORD *)(v60 - 120) = 8 - v62;
  v63 = -a3;
  v64 = v59 + a2 + a1;
  v65 = v57 + v63 + ((v52 - 362) ^ (v53 + 1598));
  v67.val[0].i64[0] = ((_BYTE)v57 + (_BYTE)v63 + ((v52 - 106) ^ (v53 + 62))) & 0xF;
  v67.val[0].i64[1] = (v64 + 10 + (_BYTE)v63) & 0xF;
  v67.val[1].i64[0] = (v64 + 9 + (_BYTE)v63) & 0xF;
  v67.val[1].i64[1] = (v64 + 8 + (_BYTE)v63) & 0xF;
  v67.val[2].i64[0] = (v64 + 7 + (_BYTE)v63) & 0xF;
  v67.val[2].i64[1] = (v64 + 6 + (_BYTE)v63) & 0xF;
  v67.val[3].i64[0] = (v64 + 5 + (_BYTE)v63) & 0xF;
  v67.val[3].i64[1] = (v64 + 4 + (_BYTE)v63) & 0xF;
  *(int8x8_t *)(a4 - 7 + v65) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a4 - 7 + v65), *(int8x8_t *)(v56 + (v65 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v55 + (v65 & 0xF) - 7), *(int8x8_t *)(v54 + (v65 & 0xF) - 7)))), (int8x8_t)0x5959595959595959), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v67, (int8x16_t)xmmword_18CF0E660), (int8x8_t)0x505050505050505)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a52 + 8 * ((2829 * (*(_DWORD *)(v60 - 120) == v63)) ^ v52))
                                         - 8))((__n128)xmmword_18CF0E660);
}

void sub_18CA80CE0()
{
  JUMPOUT(0x18CA80BF8);
}

uint64_t sub_18CA80CE8(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((191 * (a1 ^ 0x641)) ^ 0xD62)
                                          * (*(_DWORD *)(v2 - 132) == *(_DWORD *)(v2 - 136))) ^ a1))
                            - 8))();
}

uint64_t sub_18CA80D24@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = (a2 + v4);
  *(_BYTE *)(a3 + v9) ^= *(_BYTE *)(v7 + (v9 & 0xF)) ^ *(_BYTE *)(v6 + (v9 & 0xF)) ^ *(_BYTE *)(v5 + (v9 & 0xF)) ^ (5 * (v9 & 0xF)) ^ 0x59;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((4039 * (a2 - 1 == v3)) ^ (a1 + 1181))) - 8))();
}

void sub_18CA80D84()
{
  int v0;
  int v1;
  int *v2;

  if (v0 == 2049780684)
    v1 = 1556779682;
  else
    v1 = 1556737658;
  *v2 = v1;
}

void sub_18CA80DE8(_DWORD *a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  uint64_t (*v7)(unint64_t **);

  v1 = 1437274309 * ((a1 & 0x3868D84 | ~(a1 | 0x3868D84)) ^ 0xDE770F4E);
  v2 = a1[1] ^ v1;
  v3 = a1[2] + v1;
  v4 = *a1 + v1;
  v5 = a1[3] ^ v1;
  v6 = a1[4] + v1;
  v7 = off_1E2538470[v2 ^ 0xA71];
  *((_DWORD *)v7 - 1) = v3;
  *(_DWORD *)v7 = v4;
  *((_DWORD *)v7 + 1) = v5;
  *((_DWORD *)v7 + 2) = v6;
  __asm { BR              X8 }
}

uint64_t sub_18CA80EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, unsigned int a11, unsigned int a12, int a13, unsigned int a14)
{
  int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  v16 = 1761959447 * ((-223139716 - (&a10 | 0xF2B3287C) + (&a10 | 0xD4CD783)) ^ 0xACEB1647);
  a13 = v14 - v16 - 234;
  a14 = 364107954 - v16;
  a11 = 1704007289 - v16;
  a12 = 604167369 - v16;
  v17 = sub_18CA4F4B0((uint64_t)&a10);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((15 * ((a10 - 1996830696) < 0x901E1125)) ^ v14)))(v17);
}

void sub_18CA80F60()
{
  int v0;
  uint64_t v1;
  unsigned int v2;

  v2 = *(_DWORD *)(v1 + 8) & 0xFFFFFFF7 ^ (v0 + 8);
  *(_DWORD *)(v1 + 8) = v2 + v0 - ((2 * v2) & 0x408767AA);
}

void sub_18CA80FBC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) ^ (1697562443 * (a1 ^ 0xD7903884));
  __asm { BR              X8 }
}

uint64_t sub_18CA8105C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;

  a16 = v17
      + 31090337
      * (((&a15 | 0x88C0232B) - &a15 + (&a15 & 0x773FDCD0)) ^ 0x4F414362)
      - 849014568;
  v18 = sub_18CA83580(&a15);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((2383 * (a15 == 1556779682)) ^ v17)))(v18);
}

uint64_t sub_18CA810D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  a15 = &STACK[0x5D7153D4F79FA4BF];
  a17 = v18 - (((&a15 | 0xB983C660) - (&a15 & 0xB983C660)) ^ 0x7E02A629) * v20 + 1748;
  sub_18CA4ED30((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (((a16 == v19) * (v18 ^ 0xB41)) ^ v18)))(v21, v22, v23, v24, v25, v26, v27, v28);
}

uint64_t sub_18CA81158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, unsigned int a17, uint64_t a18, int a19)
{
  uint64_t *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  void (*v25)(uint64_t *);
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v24 = v21 ^ 0x715;
  v28 = v19[5];
  v29 = *v19;
  a15 = v19[1];
  a18 = a14;
  a17 = ((v21 ^ 0x715) + 72) ^ (375636451
                              * (((&a15 | 0xB9FD897F) - (&a15 & 0xB9FD897F)) ^ 0xEAC3D3F3));
  v25 = *(void (**)(uint64_t *))(v22 + 8 * (v21 ^ 0x688));
  v25(&a15);
  a18 = a14;
  a15 = v28;
  a17 = (v24 + 72) ^ (375636451 * (&a15 ^ 0x533E5A8C));
  v25(&a15);
  a15 = a14;
  a18 = v29;
  a16 = v24
      + ((2 * ((&a15 ^ 0x9292D997) & 0xEB0CB53) - (&a15 ^ 0x9292D997) + 1901016236) ^ 0x344DD5BF)
      * v23
      + 363;
  v26 = ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v22 + 8 * (v24 ^ 0x1A8)) - 12))(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * ((3464 * (a19 == 1556779682)) ^ v24))
                                          - ((v24 - 1659052515) & 0x62E326F7)
                                          + 1647))(v26);
}

uint64_t sub_18CA812CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, int a20)
{
  uint64_t v20;
  int v21;
  int v22;
  unsigned int v23;
  uint64_t v24;

  v23 = 1314530549
      * (((&a15 | 0x72721CB1) - &a15 + (&a15 & 0x8D8DE348)) ^ 0xC37B9A7F);
  a16 = (v22 + 1106913606) ^ v23;
  a20 = v23 ^ 0x4719F6BF;
  a18 = -132734983 - v23;
  a15 = &STACK[0x7FBEEC3D5BCBFBE8];
  a17 = a14;
  v24 = sub_18CA83938((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8
                                                      * (((a19 == v21) * ((v22 + 1301) ^ 0x187 ^ (23 * (v22 ^ 0x179)))) ^ v22))
                                          - 8))(v24);
}

uint64_t sub_18CA813A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, __int16 a14, char a15, uint64_t a16, int a17, unsigned int a18, uint64_t a19, char *a20)
{
  uint64_t v20;
  int v21;
  uint64_t v22;
  void (*v23)(int *);
  uint64_t v24;

  a19 = a12;
  a20 = &a13;
  a18 = (v21 + 773) ^ (1314530549
                     * ((1044234901 - (&a17 | 0x3E3DC295) + (&a17 | 0xC1C23D6A)) ^ 0x70CBBBA4));
  v23 = *(void (**)(int *))(v22 + 8 * (v21 ^ 0x27B));
  v23(&a17);
  a18 = (v21 + 773) ^ (1314530549
                     * ((&a17 + 687197710 - 2 * (&a17 & 0x28F5CE0E)) ^ 0x99FC48C0));
  a19 = a12;
  a20 = &a15;
  v23(&a17);
  LODWORD(a20) = v21
               - 476588053 * (((&a17 | 0xD40530F1) + (~&a17 | 0x2BFACF0E)) ^ 0x69F834B3)
               + 1939;
  a19 = a12;
  v24 = sub_18CA3B9C4((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8
                                                      * (((a17 == 1556779682) * (((v21 + 471) | 0x233) + 813)) ^ v21))
                                          - 8))(v24);
}

uint64_t sub_18CA814E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  uint64_t v14;
  int v15;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((1852 * (a14 == (v15 ^ 0x26D))) ^ v15)) - 8))();
}

uint64_t sub_18CA8154C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _DWORD *v2;
  void (*v3)(uint64_t *);
  uint64_t result;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  *v2 = v7;
  v11 = a1 + 366490169 * ((2 * (&v9 & 0x4C23F80) - &v9 - 79839105) ^ 0xED93963B) - 1316;
  v10 = v6;
  v3(&v9);
  v10 = v8;
  v11 = a1
      + 366490169
      * ((2 * ((&v9 ^ 0xD8027F00) & 0x6B238DF8) - (&v9 ^ 0xD8027F00) + 349991431) ^ 0xDA705B43)
      - 1316;
  result = ((uint64_t (*)(uint64_t *))v3)(&v9);
  *(_DWORD *)(v1 + 16) = 1556779682;
  return result;
}

uint64_t sub_18CA81654(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = *(_DWORD *)(*(_QWORD *)a1 - 0x61D35839E4698502) + 2123350281;
  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x61D35839E4698502) + 2123350281;
  v4 = (v2 < 1170695487) ^ (v3 < 1170695487);
  v5 = v2 > v3;
  if (v4)
    v6 = v2 < 1170695487;
  else
    v6 = v5;
  v1 = *(_DWORD *)(a1 + 12) ^ (366490169 * ((2 * (a1 & 0x19FAA4E9) - a1 + 1711627030) ^ 0x70AB0D52));
  return (*((uint64_t (**)(void))off_1E2538470[v1 - 1118] + ((!v6 * ((v1 ^ 0x925) - 3460)) ^ v1) - 1))();
}

uint64_t sub_18CA81730()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v4 = v1 + v2 + 693043493;
  v5 = v4 < -259607792;
  v6 = v3 + 693047002 < v4;
  if (v3 + 693047002 < -259607792 != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (int)((v6 * (((v2 + 500504062) & 0xE22ADFDC) - 902)) ^ v2)) - 4))();
}

uint64_t sub_18CA817AC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  if (v2 + 952654794 < 0)
    v3 = v2;
  else
    v3 = (v1 ^ 0x8E6F4BFC) - v2;
  return (*(uint64_t (**)(void))(v0 + 8 * ((3424 * (v3 - 1194828855 >= 0)) ^ v1 ^ 0x700)))();
}

uint64_t sub_18CA8182C()
{
  uint64_t v0;
  int v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  unsigned int v5;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((3596
                                * (((((v2 - 1168) | 0x390u) + v1) ^ *(_DWORD *)(*v3 + 4 * v5)) <= (*(_DWORD *)(*v4 + 4 * v5) ^ (v1 + 912)))) ^ v2)))();
}

uint64_t sub_18CA8187C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v3;
  unsigned int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((a2 - 768) | 0x400) + 1805) * (v4 < a3)) ^ a2)) - 8))();
}

uint64_t sub_18CA818A4()
{
  uint64_t v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(v0 + 8 * ((3424 * (v2 - 1194828855 >= 0)) ^ v1)))();
}

uint64_t sub_18CA818D4(uint64_t result)
{
  int v1;
  int v2;

  *(_DWORD *)(result + 8) = v1 + 2351 - v2 - 1293677657;
  return result;
}

uint64_t sub_18CA818F0(_DWORD *a1)
{
  unsigned int v2;
  unsigned int v3;
  int v4;
  uint64_t result;
  unsigned int v6;
  _BOOL4 v7;
  unsigned int v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v2 = 366490169 * ((247343528 - (a1 | 0xEBE29A8) + (a1 | 0xF141D657)) ^ 0xE7EF8013);
  v3 = a1[2] + v2;
  v4 = a1[3] - v2;
  v8 = (1314530549 * ((&v8 & 0x9AF76D8D | ~(&v8 | 0x9AF76D8D)) ^ 0xD40114BC)) ^ (v3 - 1567048077);
  result = nullsub_1(&v8);
  if (v4 > 892430054)
  {
    if (v4 == 1177642726)
    {
      v6 = 3;
    }
    else
    {
      if (v4 != 892430055)
        goto LABEL_11;
      v6 = 1;
    }
LABEL_10:
    v7 = off_1E2538470[v3 ^ 0xE50C9D3A]((unint64_t **)(*((_DWORD *)off_1E2538470[v3 + 452158211] + 6 * v6 + 3)
                                                            + ((56 * (v3 ^ 0xE50C9D2E)) ^ 0xD2F02F48))) != 0;
    __asm { BR              X9 }
  }
  if (v4 == 892430051)
  {
    v6 = 0;
    goto LABEL_10;
  }
  if (v4 == 892430054)
  {
    v6 = 2;
    goto LABEL_10;
  }
LABEL_11:
  a1[4] = 1556737630;
  return result;
}

void sub_18CA81F1C(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (31090337 * ((-2 - ((a1 | 0xA6D0CF48) + (~(_DWORD)a1 | 0x592F30B7))) ^ 0x9EAE50FE));
  __asm { BR              X9 }
}

uint64_t sub_18CA82004@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unint64_t *a6, int a7, unsigned int a8, unint64_t *a9)
{
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 673918253 * ((-1773475545 - (&a4 | 0x964AE927) + (&a4 | 0x69B516D8)) ^ 0xF3FD0D70);
  a9 = &STACK[0x3D131E0B80724DD8];
  a7 = v12 + v11 + 259;
  a8 = v12 + 942392308;
  a5 = v10;
  a6 = &STACK[0x34AA45F4469B4FBD];
  v13 = ((uint64_t (*)(char *))(*(_QWORD *)(a1 + 8 * (v11 - 698)) - 8))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (((*(_DWORD *)(v10 - 0x69A7616A48D05166) == 1556779682)
                                                        * ((v11 ^ 0x864) + 519)) ^ v11))
                                          - 8))(v13);
}

uint64_t sub_18CA820F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  unsigned int v10;
  uint64_t v11;
  int v12;

  return (*(uint64_t (**)(void))(v11 + 8 * ((((a10 ^ v10) > ((v12 - 81) ^ 0xB30u)) * (v12 - 2747)) ^ v12)))();
}

void sub_18CA82124(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;

  *a1 = v2;
  *(_DWORD *)(v1 + 16) = *a1;
}

void sub_18CA8257C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) - 673918253 * ((a1 & 0xD8AC91B6 | ~(a1 | 0xD8AC91B6)) ^ 0xBD1B75E1);
  __asm { BR              X11 }
}

uint64_t sub_18CA8264C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unint64_t *a6, int a7, unsigned int a8, unint64_t *a9)
{
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;

  v13 = (((&a4 | 0x4801B16) - (&a4 & 0x4801B16)) ^ 0x9EC800BE) * a1;
  a7 = v13 + v11 - 196;
  a8 = v13 + 949872136;
  a5 = v12;
  a6 = &STACK[0x34AA45F4469B4FC5];
  a9 = &STACK[0x3D131E0B80724DD0];
  v14 = ((uint64_t (*)(char *))(*(_QWORD *)(v9 + 8 * (v11 ^ 0x48F)) - 8))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * ((2253
                                                        * (*(_DWORD *)(v12 - 0x69A7616A48D05166) == ((v11 - 1166) | 0x410) + 1556778568)) ^ v11))
                                          - 4))(v14);
}

uint64_t sub_18CA82734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  uint64_t v12;
  int v13;

  return (*(uint64_t (**)(void))(v12 + 8 * ((254 * (a11 == ((v13 + 126) ^ v11))) ^ v13)))();
}

void sub_18CA8275C(_DWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 *v3;

  v2 = ((unint64_t)(*v3 ^ 0x59u) << 56) | ((unint64_t)(v3[1] ^ 0x59u) << 48) | ((unint64_t)(v3[2] ^ 0x59u) << 40) | ((unint64_t)(v3[3] ^ 0x59u) << 32) | ((v3[4] ^ 0x59) << 24) | ((v3[5] ^ 0x59) << 16) | ((v3[6] ^ 0x59) << 8) | v3[7] ^ 0x59;
  **(_QWORD **)v1 = (v2 - ((2 * v2) & 0xD8F8073A186A48DALL) - 0x1383FC62F3CADB93) ^ 0xEC7C039D0C35246DLL;
  *(_DWORD *)(v1 + 24) = *a1;
}

uint64_t sub_18CA8284C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 476588053 * ((2 * (a1 & 0x438627AE) - a1 + 1014618193) ^ 0x8184DC12);
  return (*((uint64_t (**)(void))off_1E2538470[v1 - 1598]
          + (((*(_QWORD *)(a1 + 8) == *(_QWORD *)a1) * ((v1 + 41) ^ 0x670)) ^ v1)
          - 1))();
}

uint64_t sub_18CA828C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  v4 = *(_DWORD *)(v2 - 0x61D35839E4698502);
  v5 = v4 - 1194828854;
  if (v4 - 1194828854 < 0)
    v5 = 1194828854 - v4;
  *(_DWORD *)(v1 - 0x61D35839E4698502) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((v3 - 366651084) & 0x15DAA7FF) + (v5 ^ 0x3FFFFE7E) + ((2 * v5) & 0x7FFFFCFC) != 1073743435)
                                * (v3 + 374)) ^ v3)))();
}

uint64_t sub_18CA82960@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;

  v6 = (v5 - 460) | 0x98;
  *(_DWORD *)(*(_QWORD *)(v2 - 0x61D35839E46984FELL) + 4 * (int)(((v6 + 1181100248) & 0xB999D6FE ^ 0xD206E5D7) + v4)) = *(_DWORD *)(*(_QWORD *)(v3 - 0x61D35839E46984FELL) + 4 * (int)(((v6 + 1181100248) & 0xB999D6FE ^ 0xD206E5D7) + v4));
  return (*(uint64_t (**)(void))(a1 + 8 * ((340 * (v4 - 1 != v1)) ^ v6)))();
}

void sub_18CA829E0()
{
  JUMPOUT(0x18CA829ACLL);
}

void sub_18CA829EC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) ^ (1401278017 * ((-2 - ((a1 | 0xD1E13745) + (~(_DWORD)a1 | 0x2E1EC8BA))) ^ 0x2A3DBE5D));
  __asm { BR              X10 }
}

uint64_t sub_18CA82ABC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unint64_t *a6, int a7, unsigned int a8, unint64_t *a9)
{
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 673918253 * ((2 * (&a4 & 0x7DD953A8) - &a4 - 2111394732) ^ 0x186EB7FC);
  a9 = &STACK[0x3D131E0B80724DD8];
  a5 = v11;
  a6 = &STACK[0x34AA45F4469B4FBD];
  a7 = v12 + v10 - 928;
  a8 = v12 + 939691320;
  v13 = ((uint64_t (*)(char *))(*(_QWORD *)(a1 + 8 * (v10 ^ 0x7E3)) - 8))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((3603
                                              * (*(_DWORD *)(v11 - 0x69A7616A48D05166) == (((v10 - 1938) | 0x410) ^ 0x5CCA9690))) ^ v10)))(v13);
}

uint64_t sub_18CA82BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  int v10;
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((a10 != v10) * (17 * (v12 ^ 0x446) - 1958)) ^ v12)) - 4))();
}

uint64_t sub_18CA82BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;

  *(_BYTE *)(v11 + v13 + v12 + 58 * (v16 ^ 0x410u)) = *(_BYTE *)(a11 + v13 + v12 + 58 * (v16 ^ 0x410u)) ^ 0x59;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((14 * (v13 + v12 + 1973 < (a10 ^ v14))) ^ v16)) - 4))();
}

void sub_18CA82C50(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t *v3;
  uint64_t v4;

  v4 = *v3;
  *(_QWORD *)(v3[4] - 0x516274174B07DC2ELL) = v1;
  *(_DWORD *)(v4 - 0x2DAA78D81EED049BLL) = v2;
  *((_DWORD *)v3 + 6) = *a1;
}

uint64_t sub_18CA82CBC(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  _BOOL4 v9;
  _BOOL4 v10;

  v1 = 673918253 * (((result | 0xF0C24170EE78F065) - result + (result & 0xF3DBE8F11870F9ALL)) ^ 0xBEAB6DB57430EBCDLL);
  v2 = *(_QWORD *)(result + 16);
  v3 = v2 + v1;
  v4 = *(_DWORD *)(result + 36) ^ v1;
  v5 = *(_QWORD *)result + v1;
  v6 = *(_DWORD *)(result + 24) ^ v1;
  v7 = *(_DWORD *)(result + 28) - v1;
  v8 = *(_DWORD *)(result + 8) + v1;
  v9 = v3 > v5;
  v10 = v2 == *(_QWORD *)result;
  if ((v6 & 1) != 0)
    v10 = v9;
  if (!v10)
    v8 = v7;
  *(_DWORD *)(result + 32) = v4 ^ v8;
  return result;
}

uint64_t sub_18CA82D64(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t result;
  int v6;

  v2 = *(_QWORD *)a1;
  v3 = (*(_DWORD *)(a1 + 8) ^ (375636451 * ((-2 - ((a1 | 0xB1ACC8E3) + (~(_DWORD)a1 | 0x4E53371C))) ^ 0x1D6D6D90)))
     - 1655392209;
  v4 = ((uint64_t (*)(void))off_1E2538470[(int)((*(_DWORD *)(a1 + 8) ^ (375636451
                                                                     * ((-2
                                                                       - ((a1 | 0xB1ACC8E3)
                                                                        + (~(_DWORD)a1 | 0x4E53371C))) ^ 0x1D6D6D90)))
                                             - 1655392206)])();
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))off_1E2538470[v3])(v4, v2, 4096);
  if ((int)result >= 1)
    v6 = 1556779682;
  else
    v6 = 1556737633;
  *(_DWORD *)(a1 + 12) = v6;
  return result;
}

void sub_18CA82E1C(_DWORD *a1)
{
  unsigned int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v1 = *a1 + 1697562443 * ((-2 - ((a1 | 0xD3B995B7) + (~(_DWORD)a1 | 0x2C466A48))) ^ 0xFBD652CC);
  v2 = *(_QWORD *)((char *)off_1E2538470[v1 ^ 0x6A279D8C] - 4);
  v3 = v1
     - 1437274309 * ((2 * (&v2 & 0x69D46630) - &v2 - 1775527479) ^ 0xB425E4FC)
     - 1780980827;
  sub_18CA4F3AC((uint64_t)&v2);
}

uint64_t VLxCLgDpiF(int a1)
{
  unint64_t v1;
  unsigned int v2;
  _BYTE v4[12];
  _DWORD v5[3];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = (unint64_t)&v4[qword_1EE056930 ^ qword_1EE056970];
  qword_1EE056970 = (864964861 * v1) ^ 0x30AB163F3BCF6666;
  qword_1EE056930 = 864964861 * (v1 ^ 0x30AB163F3BCF6666);
  v2 = 375636451 * ((583027076 - (v5 | 0x22C04984) + (v5 | 0xDD3FB67B)) ^ 0x8E01ECF7);
  v5[2] = v2 ^ ((a1 ^ 0x7FFF98FF) - 1107300553 + ((2 * a1) & 0xFFFF31FE));
  v5[0] = v2 + 2645;
  ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[((-3
                                                                                        * ((qword_1EE056930
                                                                                          - qword_1EE056970) ^ 0x66)) ^ byte_18CF18070[byte_18CF13710[(-3 * ((qword_1EE056930 - qword_1EE056970) ^ 0x66))] ^ 0x4E])
                                                                     - 86]
                                               - 4))((unint64_t **)v5);
  return (v5[1] - 1556779682);
}

uint64_t sub_18CA83080(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 8);
  return 0;
}

void sub_18CA83098()
{
  unsigned int v0;
  uint64_t v1;
  unsigned int v2;
  char v3;
  uint64_t (*v4)(unint64_t **);
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  qword_1EE0569D8 = 864964861 * ((qword_1EE056930 - qword_1EE0569D8) ^ (unint64_t)&v1 ^ 0x30AB163F3BCF6666);
  qword_1EE056930 = qword_1EE0569D8;
  v2 = 1513 - 1697562443 * ((2 * (&v2 & 0x2604B910) - &v2 + 1509639919) ^ 0x8E6B7E6B);
  v4 = (uint64_t (*)(unint64_t **))&unk_1EE060A10;
  sub_18CA653A4(&v2);
  v4 = off_1E2538470[((-3 * ((qword_1EE056930 + qword_1EE0569D8) ^ 0x66)) ^ byte_18CF13810[~byte_18CF23E40[(-3 * ((qword_1EE056930 + qword_1EE0569D8) ^ 0x66))]])
                   + 218];
  v2 = 1513
     - 1697562443
     * (((&v2 | 0x28CF6007) - &v2 + (&v2 & 0xD7309FF8)) ^ 0xFF5F5883);
  sub_18CA653A4(&v2);
  v0 = 1401278017 * (&v2 ^ 0x42376E7);
  v2 = 3986 - v0;
  v3 = v0 + 6;
  sub_18C9B6678((uint64_t)&v2);
}

uint64_t sub_18CA83280(uint64_t result)
{
  unint64_t v1;
  _DWORD *v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  _BOOL4 v6;
  int v7;

  v1 = 366490169 * ((((2 * result) | 0xB519E94AB63FBE24) - result + 0x25730B5AA4E020EELL) ^ 0xF01241B14DB18956);
  v2 = (_DWORD *)(result + 16);
  v3 = *(_QWORD *)(result + 8) + v1;
  v4 = *(_QWORD *)(result + 32) + v1;
  v5 = (uint64_t)v3 < (uint64_t)v4;
  v6 = v3 < v4;
  v7 = v5;
  if (((*(_DWORD *)(result + 40)
       - 366490169 * ((((2 * (_DWORD)result) | 0xB63FBE24) - (_DWORD)result - 1528815378) ^ 0x4DB18956)) & 1) != 0)
    v6 = v7;
  if (v6)
    v2 = (_DWORD *)result;
  *(_DWORD *)(result + 24) = (*v2 + 366490169 * ((((2 * result) | 0xB63FBE24) - result - 1528815378) ^ 0x4DB18956)) ^ (*(_DWORD *)(result + 20) + 366490169 * ((((2 * result) | 0xB63FBE24) - result - 1528815378) ^ 0x4DB18956));
  return result;
}

_BYTE *sub_18CA83320(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_18CA833B0 + 4 * byte_18CF13917[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

uint64_t sub_18CA83414(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_18CA8342C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  void (*v4)(uint64_t *);
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 + 366490169 * (a1 ^ 0x16AE5644);
  v2 = *(_QWORD *)(a1 + 8);
  v3 = v1 + 1014252626;
  v7 = *(_QWORD *)(v2 - 0x58473EE936503118);
  v8 = v1
     + 1014252626
     + 366490169 * ((&v6 + 814311116 - 2 * (&v6 & 0x308966CC)) ^ 0x26273088);
  v4 = (void (*)(uint64_t *))((char *)off_1E2538470[v1 ^ 0xC38BBD7F] - 8);
  v4(&v6);
  v7 = *(_QWORD *)(v2 - 0x58473EE936503120);
  v8 = v3
     + 366490169 * ((-1134843911 - (&v6 | 0xBC5BA7F9) + (&v6 | 0x43A45806)) ^ 0x550A0E42);
  return ((uint64_t (*)(uint64_t *))v4)(&v6);
}

uint64_t sub_18CA83580(int *a1)
{
  unsigned int v2;
  uint64_t result;
  int v4;

  v2 = a1[1] - 31090337 * (a1 ^ 0xC7816049);
  result = ((uint64_t (*)(uint64_t (*)(unint64_t **), char *))off_1E2538470[v2 & 0x309828F6])(off_1E2538470[v2 + 849012939], (char *)off_1E2538470[v2 ^ 0xCD651721] - 12);
  v4 = *(_DWORD *)off_1E2538470[v2 ^ 0xCD65177E];
  if ((_DWORD)result)
    v4 = 1556737376;
  *a1 = v4;
  return result;
}

uint64_t sub_18CA83624(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  uint64_t result;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = 673918253 * ((-1848987273 - (&v8 | 0x91CAB177) + (&v8 | 0x6E354E88)) ^ 0xF47D5520);
  v6 = *(_DWORD *)(a1 + 24) - 1761959447 * ((a1 + 1955828336 - 2 * (a1 & 0x74939270)) ^ 0xD53453B4) - 166308332;
  v11 = v6 + v5 + 957;
  v12 = v5 + 939691320;
  v13 = v2;
  v9 = v4;
  v10 = v3;
  result = ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v6] - 8))(&v8);
  *(_DWORD *)(a1 + 28) = (_DWORD)v8;
  return result;
}

void sub_18CA83744()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  char *v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v0 = (qword_1EE056930 ^ qword_1EE056978) - (_QWORD)&v1;
  qword_1EE056978 = (864964861 * v0) ^ 0x30AB163F3BCF6666;
  qword_1EE056930 = 864964861 * (v0 ^ 0x30AB163F3BCF6666);
  v3 = (char *)off_1E2538470[((-3 * ((qword_1EE056930 - qword_1EE056978) ^ 0x66)) ^ byte_18CF18070[byte_18CF13710[(-3 * ((qword_1EE056930 - qword_1EE056978) ^ 0x66))] ^ 0xC3])
                           - 27]
     - 4;
  v2 = 1513 - 1697562443 * (&v2 ^ 0xD7903884);
  sub_18CA653A4(&v2);
}

uint64_t sub_18CA83850(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  _QWORD v5[2];
  int v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)a1;
  v3 = *(_DWORD *)(a1 + 8) - 1314530549 * (a1 ^ 0xB10986CE) - 1805053821;
  v6 = (375636451 * ((v5 + 1205184797 - 2 * ((unint64_t)v5 & 0x47D5A91D)) ^ 0x14EBF391)) ^ (*(_DWORD *)(a1 + 8) - 1314530549 * (a1 ^ 0xB10986CE) - 1805051078);
  v5[0] = v1;
  v5[1] = v2;
  return off_1E2538470[v3]((unint64_t **)v5);
}

uint64_t sub_18CA83920(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_18CA83938(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t result;
  _DWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v2 = 1314530549 * ((a1 & 0xFE5EE54A | ~(a1 | 0xFE5EE54A)) ^ 0xB0A89C7B);
  v3 = *(_DWORD *)(a1 + 8) ^ v2;
  v4 = *(_DWORD *)(a1 + 24) + v2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)a1;
  v7 = 1028399815 * (*(_DWORD *)(a1 + 32) ^ v2) - 2074619000;
  v8 = 31090337 * (v10 ^ 0xC7816049);
  v3 -= 1106913693;
  v13 = v3 + v8 + 2308;
  v11 = v6;
  v12 = v5;
  v10[0] = v8 + (v7 ^ 0xFFAFD5EB) + ((2 * v7) & 0xFF5FABD6) + 2077360062;
  v10[1] = v8 + (v4 ^ 0xE199A0EF);
  result = ((uint64_t (*)(unint64_t **))((char *)off_1E2538470[v3] - 4))((unint64_t **)v10);
  *(_DWORD *)(a1 + 28) = v14;
  return result;
}

uint64_t XtCqEf5X(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  _BYTE v6[8];
  _QWORD v7[2];
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v4 = (unint64_t)&v6[qword_1EE056940 + qword_1EE056930];
  qword_1EE056940 = (864964861 * v4) ^ 0x30AB163F3BCF6666;
  qword_1EE056930 = 864964861 * (v4 ^ 0x30AB163F3BCF6666);
  v10 = (1697562443 * ((v7 & 0x4D04600B | ~(v7 | 0x4D04600B)) ^ 0x656BA770)) ^ 0x677;
  v9 = a4;
  v11 = a2;
  v7[0] = a3;
  v7[1] = a1;
  off_1E2538470[((-3 * ((qword_1EE056930 - qword_1EE056940) ^ 0x66)) ^ byte_18CF13810[byte_18CF23E40[(-3 * ((qword_1EE056930 - qword_1EE056940) ^ 0x66))] ^ 0x9B])
              + 53]((unint64_t **)v7);
  return (v8 - 1556779682);
}

uint64_t sub_18CA83BC8(uint64_t result)
{
  unint64_t v1;
  int v2;
  int v3;
  unint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;
  int v11;

  v1 = 1314530549 * (((result | 0x7B0834BC1D5378BFLL) - (result & 0x7B0834BC1D5378BFLL)) ^ 0xDC2DB421AC5AFE71);
  v2 = *(_DWORD *)(result + 20) + v1;
  v3 = *(_DWORD *)(result + 32) - v1;
  v4 = *(_QWORD *)(result + 40) ^ v1;
  v5 = *(_DWORD *)(result + 24) ^ v1;
  v6 = *(_DWORD *)(result + 28) ^ v1;
  v7 = *(_QWORD *)(result + 8) - v1;
  v8 = v7 == v4;
  v9 = v7 > v4;
  v10 = v8;
  if ((v3 & 1) == 0)
    v9 = v10;
  if (v9)
    v11 = v6;
  else
    v11 = v2;
  *(_DWORD *)(result + 16) = v5 ^ v11;
  return result;
}

uint64_t sub_18CA83C54(uint64_t result)
{
  unint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  int v7;
  _BOOL4 v8;
  _BOOL4 v9;
  _BOOL4 v10;
  int v11;

  v1 = 31090337 * ((-2 - ((~result | 0x4C7FCC96781261BELL) + (result | 0xB380336987ED9E41))) ^ 0xEBDDE768BF9301F7);
  v2 = *(_DWORD *)(result + 16) - v1;
  v3 = *(_QWORD *)(result + 8) + v1;
  v4 = *(_DWORD *)result - v1;
  v5 = *(_QWORD *)(result + 24) - v1;
  v6 = *(_DWORD *)(result + 40) + v1;
  v7 = *(_DWORD *)(result + 20) - v1;
  v8 = v5 >= v3;
  v9 = v5 != v3;
  if ((v2 & 1) != 0)
    v10 = v8;
  else
    v10 = v9;
  if (v10)
    v11 = v6;
  else
    v11 = v4;
  *(_DWORD *)(result + 36) = v11 ^ v7;
  return result;
}

uint64_t sub_18CA83CFC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 24);
  return 0;
}

uint64_t sub_18CA83D14(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(result + 8) - 0xBFF7429BC06360CLL) = 0x69A7616A48D0517ELL;
  *(_DWORD *)(result + 4) = 763479373;
  return result;
}

uint64_t sub_18CA83D4C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 88) = 55;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_18CA83D6C(uint64_t a1)
{
  int v1;
  uint64_t (*v2)(unint64_t **);
  unsigned __int8 *v3;
  int v4;
  int v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t (*v8)(unint64_t **);
  unint64_t v9;
  uint64_t (*v10)(unint64_t **);
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  __int128 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  BOOL v151;
  unint64_t v152;
  __int128 v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unsigned __int8 v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  __int128 v180;
  unint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t v196;
  unint64_t v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  unint64_t v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t v204;
  unint64_t v205;
  __int128 v206;
  uint64_t v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  char v211;
  char v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t (*v216)(unint64_t **);
  uint64_t (*v217)(unint64_t **);
  int v218;
  int v219;
  _BYTE *v220;
  unsigned __int8 *v221;
  char *v222;
  char v223;
  char v224;
  unsigned __int8 v225;
  uint64_t v226;
  unint64_t v227;
  _BYTE *v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  unint64_t v243;
  unint64_t v244;
  uint64_t v245;
  unint64_t v246;
  char *v247;
  uint64_t v248;
  unint64_t v249;
  char v250;
  char v251;
  unint64_t v252;
  __int128 v253;
  unint64_t v254;
  uint64_t v255;
  unsigned int v256;
  unint64_t v257;
  unint64_t v258;
  uint64_t v259;
  unint64_t v260;
  unint64_t v261;
  unint64_t v262;
  unint64_t v263;
  unint64_t v264;
  uint64_t v265;
  unint64_t v266;
  unint64_t v267;
  unint64_t v268;
  unint64_t v269;
  unint64_t v270;
  unint64_t v271;
  unint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t v278;
  unint64_t v279;
  uint64_t v280;
  unint64_t v281;
  unint64_t v282;
  unint64_t v283;
  uint64_t v284;
  uint64_t v285;
  unint64_t v286;
  unint64_t v287;
  unint64_t v288;
  unint64_t v289;
  uint64_t v290;
  unint64_t v291;
  uint64_t v292;
  unint64_t v293;
  uint64_t v294;
  unint64_t v295;
  unint64_t v296;
  unint64_t v297;
  unint64_t v298;
  unint64_t v299;
  __int128 v300;
  unint64_t v301;
  uint64_t v302;
  unint64_t v303;
  uint64_t v304;
  uint64_t v305;
  unint64_t v306;
  uint64_t v307;
  uint64_t v308;
  unint64_t v309;
  uint64_t v310;
  uint64_t v311;
  unint64_t v312;
  unint64_t v313;
  unint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  unint64_t v320;
  uint64_t v321;
  unint64_t v322;
  unint64_t v323;
  uint64_t v324;
  unint64_t v325;
  unint64_t v326;
  unint64_t v327;
  uint64_t v328;
  unint64_t v329;
  unint64_t v330;
  unint64_t v331;
  unint64_t v332;
  unint64_t v333;
  unint64_t v334;
  unint64_t v335;
  unint64_t v336;
  unint64_t v337;
  unint64_t v338;
  unint64_t v339;
  unint64_t v340;
  uint64_t v341;
  unint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  unint64_t v346;
  uint64_t v347;
  uint64_t v348;
  unint64_t v349;
  uint64_t v350;
  uint64_t v351;
  unint64_t v352;
  unint64_t v353;
  unint64_t v354;
  uint64_t v355;
  __int128 v356;
  unint64_t v357;
  uint64_t v358;
  unint64_t v359;
  unint64_t v360;
  unint64_t v361;
  unint64_t v362;
  unint64_t v363;
  unint64_t v364;
  unint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  unint64_t v369;
  unint64_t v370;
  unint64_t v371;
  unint64_t v372;
  unint64_t v373;
  uint64_t v374;
  uint64_t v375;
  unint64_t v376;
  unint64_t v377;
  uint64_t v378;
  unint64_t v379;
  uint64_t v380;
  unint64_t v381;
  unint64_t v382;
  uint64_t v383;
  unint64_t v384;
  __int128 v385;
  uint64_t v386;
  unint64_t v387;
  uint64_t v388;
  uint64_t v389;
  unint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  unint64_t v394;
  unint64_t v395;
  uint64_t v396;
  unint64_t v397;
  unint64_t v398;
  uint64_t v399;
  uint64_t v400;
  unint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  unint64_t v405;
  unint64_t v406;
  unint64_t v407;
  uint64_t v408;
  uint64_t v409;
  unint64_t v410;
  unint64_t v411;
  unint64_t v412;
  unint64_t v413;
  unint64_t v414;
  uint64_t v415;
  uint64_t v416;
  unint64_t v417;
  unint64_t v418;
  unint64_t v419;
  unint64_t v420;
  uint64_t v421;
  unint64_t v422;
  __int128 v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  unint64_t v431;
  unint64_t v432;
  unint64_t v433;
  uint64_t v434;
  unint64_t v435;
  unint64_t v436;
  uint64_t v437;
  unint64_t v438;
  unint64_t v439;
  uint64_t v440;
  char v441;
  char v442;
  char v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  unint64_t v447;
  unint64_t v448;
  uint64_t v449;
  uint64_t v450;
  unint64_t v451;
  unint64_t v452;
  unint64_t v453;
  unint64_t v454;
  unint64_t v455;
  unint64_t v456;
  uint64_t v457;
  unint64_t v458;
  unint64_t v459;
  uint64_t v460;
  uint64_t v461;
  unint64_t v462;
  unint64_t v463;
  unint64_t v464;
  unint64_t v465;
  unint64_t v466;
  unint64_t v467;
  __int128 v468;
  unint64_t v469;
  int v470;
  char v471;
  int v472;
  unsigned int v473;
  unsigned int v474;
  unint64_t v475;
  unsigned int v476;
  unint64_t v477;
  char v478;
  uint64_t v479;
  unint64_t v480;
  unint64_t v481;
  char v482;
  uint64_t result;
  char *v484;
  uint64_t v485;
  uint64_t (*v487)(unint64_t **);

  v1 = *(_DWORD *)(a1 + 8) - 1314530549 * (a1 ^ 0xB10986CE);
  v2 = off_1E2538470[v1 ^ 0x26930AFD];
  v3 = *(unsigned __int8 **)v2;
  v4 = *(_DWORD *)(*(_QWORD *)v2 + 8);
  v5 = v4 ^ 0x1BBEFEBF;
  v6 = (2 * v4) & 0x377DFD7E;
  v487 = off_1E2538470[v1 ^ 0x26930A34];
  v7 = *(unsigned __int8 **)((char *)v487 - 4);
  v8 = off_1E2538470[v1 ^ 0x26930A08];
  HIDWORD(v9) = *((unsigned __int8 *)v8 + 12);
  LODWORD(v9) = (HIDWORD(v9) ^ 0xAC) << 24;
  v10 = off_1E2538470[v1 ^ 0x26930AED];
  v11 = ((unint64_t)v7[4] << 56)
      - (((unint64_t)v7[4] << 57) & 0x9600000000000000)
      - 0x34315ABC5DB13E86;
  v12 = v7[10] | ((unint64_t)v3[7] << 8) | ((unint64_t)*v3 << 16) | ((unint64_t)v3[26] << 24);
  v13 = ((unint64_t)v3[17] << 32) - (((unint64_t)v3[17] << 33) & 0x10C00000000) + 0x239B4B86ED9EA1D4;
  v14 = (((*((_BYTE *)v10 + ((v9 >> 26) ^ 0xB4) + 3) - 116) ^ 0x82) - 75) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)v2 + 22) << 8) | ((unint64_t)v7[16] << 16) | ((*((unsigned __int8 *)v8 + 13) ^ 0xACLL) << 24) | ((unint64_t)v7[1] << 32);
  v15 = (v12 ^ 0x7ECF7F9EB9FBEFFBLL) - 0x7ECF7F9EB9FBEFFBLL + ((2 * v12) & 0x173F7DFF6);
  v16 = (v15 - (v15 | v13 ^ 0x239B4B86ED9EA1D4)) ^ ((v13 ^ 0xDC64B47912615E2BLL) + 1);
  v17 = v16 - ((2 * v16) & 0x4736970DDB3D43A8) + 0x239B4B86ED9EA1D4;
  v18 = *(unsigned __int8 *)(*(_QWORD *)v2 + 1);
  v19 = ((unint64_t)v7[2] << (v7[2] & 0x28) << (v7[2] & 0x28 ^ 0x28u)) ^ ((unint64_t)(*((unsigned __int8 *)v8 + 16) ^ 0xACu) << 48) ^ ((v17 ^ v13) + v15);
  v20 = (v19 + (v11 ^ 0x34315ABC5DB13E85 ^ v19) + 1) ^ ((v11 ^ 0x34315ABC5DB13E85) + 1);
  v22 = ((v20 - ((2 * v20) & 0x979D4A87449D82F4) - 0x34315ABC5DB13E86) ^ v11) + v19;
  v23 = ((unint64_t)v3[18] << 32) | ((unint64_t)v3[5] << 24) | ((unint64_t)v7[27] << 40) | v18 | ((*((unsigned __int8 *)v8 + 9) ^ 0xACLL) << 8) | ((*((unsigned __int8 *)v8 + 1) ^ 0xACLL) << 16);
  v24 = (((unint64_t)v7[14] << 49) & 0x1DA000000000000)
      + (((unint64_t)v7[14] << 48) ^ 0xF9EDF6D7FFF79F77)
      + 0x612092800086089;
  v25 = v23 - 2 * (v23 & 0x914BCA94467ELL ^ v18 & 0x18) + 0x7AE914BCA944666;
  v26 = (v24 - (v25 ^ 0x7AE914BCA944666 | v24)) ^ ((v25 ^ 0xF8516EB4356BB999) + 1);
  v27 = (v6 + v5 - 465501887);
  v28 = ((unint64_t)v3[15] << 24) - ((v3[15] << 25) & 0x72000000) - 0x6242941CC63D6EC7;
  v29 = ((v26 - ((2 * v26) & 0xF5D229795288CCCLL) + 0x7AE914BCA944666) ^ v25) + v24;
  if (v7[7])
    v30 = v28 ^ 0x23B4000000;
  else
    v30 = 1912602624;
  v31 = v3[23];
  v32 = v22 ^ v27;
  v33 = ((v29 ^ ((unint64_t)v7[7] << 56))
       - ((2 * (v29 ^ ((unint64_t)v7[7] << 56))) & 0x5F324AE29702E37CLL)
       + 0x2F9925714B8171BELL) ^ v32;
  v21 = *((_BYTE *)v10 + ((((2 * v7[28]) & 0x76) + (v7[28] ^ 0x3B)) ^ 0x7FLL) + 792);
  v34 = v3[21] | (unint64_t)(((((2 * v7[28]) & 0x76) + (v7[28] ^ 0x3B)) ^ 0x8Au ^ (((2 * (v21 & 0x8E)) ^ (v21 - 114)) - 4 * (v21 & 0x8E) + 2 * ((2 * (v21 & 0x8E)) & (v21 - 114)))) << 8) | ((unint64_t)v7[5] << 24) | ((unint64_t)(((v7[8] + 59) ^ *((_BYTE *)v10 + ((((v7[8] + 59) ^ 0xFFFFFF80) + ((v7[8] + 59) ^ 0x84) + 1) ^ 0xFFFFFFFE) + ((v7[8] + 59) ^ 0x84) + 792)) ^ 4u) << 16) | ((unint64_t)v7[18] << 32) | ((unint64_t)v3[2] << 56) | ((unint64_t)v3[14] << 40) | ((unint64_t)v3[4] << 48);
  v35 = v31 | (*(unsigned __int8 *)(*(_QWORD *)v2 + 19) << 16) | (v7[13] << 8);
  v36 = v34
      - ((2 * v34) & 0x366D3A3585B65836)
      - 0x64C962E53D24D3E5
      - ((2 * (v34 - ((2 * v34) & 0x366D3A3585B65836) - 0x64C962E53D24D3E5)) & 0x181726A2BD4E0FF8)
      - 0x73F46CAEA158F804;
  v37 = ((v30 & (v28 ^ 0x9DBD6BE339C29139) | *(_QWORD *)&v35 & 0x8E29EELL) ^ (v28 & 0x8D000000 | *(_QWORD *)&v35 & 0x71D611) | ((unint64_t)v3[6] << 32)) ^ (((unint64_t)v3[24] << 40) | ((unint64_t)v7[15] << 56) | ((unint64_t)*v7 << 48));
  *((_QWORD *)&v38 + 1) = v37 ^ 0x9000000;
  *(_QWORD *)&v38 = v37;
  v39 = (v38 >> 63) - ((2 * (v38 >> 63)) & 0xAC958D205777F7E0) - 0x29B5396FD4440410;
  v40 = v36 ^ v37;
  v41 = ((v39 ^ 0xEACA3F6F71811CDFLL) - 0x3C80F9FF5A3AE72FLL) ^ ((v39 ^ 0x29B5396FD444040FLL) + 1);
  *(_QWORD *)&v38 = __ROR8__((((v41 - ((2 * v41) & 0xAC958D205777F7E0) - 0x29B5396FD4440410) ^ v39) - 0x3C80F9FF5A3AE730) ^ __ROR8__((((unint64_t)v7[26] << 48) | ((unint64_t)v7[6] << 56) | ((unint64_t)v3[12] << 40) | v14) ^ 0xF2B7463F7A3C2131, 63), 1);
  v42 = v32 ^ 0xD794350938DD5B3BLL;
  v32 ^= 0x286BCAF6C722A4C4uLL;
  v43 = v38
      - ((2 * v38) & 0xC37F0600A5C518D0)
      + 0x5DA042A58DA69C03
      - ((2 * (v38 - ((2 * v38) & 0xC37F0600A5C518D0) + 0x61BF830052E28C68)) & 0xF7C17F4A75881F36);
  v44 = v33 ^ 0x4E39AB0AAE8858DBLL;
  v45 = (v36 ^ 0x8C0B93515EA707FCLL) & (v33 ^ 0xB1C654F55177A724) ^ v32;
  v46 = v43 ^ ((v44 & v42) - ((2 * (v44 & v42)) & 0xF7C17F4A75881F36) - 0x41F405AC53BF065);
  v47 = (v43 ^ 0xECDFD8D643FE119BLL) & v32 ^ v40 ^ 0x7EBCD56E2D9B26CDLL;
  v48 = (((2 * v36) ^ 0xE7E8D95D42B1F007) + (v36 ^ 0x8C0B93515EA707FCLL)) & (v40 ^ 0x7EBCD56E2D9B26CDLL) ^ v44;
  v49 = v45 ^ v46;
  v50 = (((v43 ^ 0x13202729BC01EE64) & (v40 ^ 0x81432A91D264D932))
       + (v36 ^ 0x8C0B93515EA707FCLL)
       - 2 * ((v43 ^ 0x13202729BC01EE64) & (v40 ^ 0x81432A91D264D932) & (v36 ^ 0xC0B93515EA707FCLL))) ^ v48;
  *((_QWORD *)&v38 + 1) = v47 ^ v46 ^ 0x697E3;
  *(_QWORD *)&v38 = v47 ^ v46 ^ 0xFFE2A0842DA00000;
  v51 = (v45 ^ v46 ^ 0x912FEFC4BAC1ECC6) >> ((v43 + 64) & 0x27 ^ 0x24) >> ((v43 + 64) & 0x27 ^ 3);
  v52 = (v38 >> 19) ^ ((v47 ^ v46) >> 28) ^ 0xFFE2A0842;
  v53 = __ROR8__(v47 ^ v46, 12) & 0xFFF000000000FFFFLL ^ __ROR8__(v47 ^ v46 ^ 0x85AD72463254F516 ^ (v52- ((2 * v52) & 0xF49FA5843FE4C5EALL)+ 0x7A4FD2C21FF262F5), 48) ^ 0xC5139A8D3A0CA64;
  v54 = (((8 * v49) ^ (v49 << 25)) & 0xFFFFFFFFFFFFFFF8 | (v49 >> 61)) ^ v49 ^ v51;
  *((_QWORD *)&v38 + 1) = v50 ^ 0x12A;
  *(_QWORD *)&v38 = v50;
  v55 = (v48 >> 6) ^ __ROR8__((((v48 & 1) << 38) | 0x6DAECE372B150E59) ^ __ROR8__(__ROR8__(v48 ^ 0xBC9966DDE4717632 ^ (((v48 >> 1) ^ 0x3A1178CCBCA43386) - ((2 * ((v48 >> 1) ^ 0x3A1178CCBCA43386)) & 0x91772E893A72227ELL) - 0x374468BB62C6EEC1), 19) ^ 0x9F023A8151C3D0C2, 6), 39) ^ 0x3B8C2FC4512A8411;
  v56 = __ROR8__(((v47 & 0x7F) << 37) ^ __ROR8__(v47 ^ 0xF811A33A69C4FC55 ^ (((v47 >> 7) ^ 0x5B93901C4D14C5)- ((2 * ((v47 >> 7) ^ 0x5B93901C4D14C5)) & 0x3B0D6689E9D3D9CLL)- 0x2A2794CBB0B16132), 20) ^ 0x75C9533B766CABABLL, 44) ^ __ROR8__(v47, 41);
  v57 = v55 & 0xE8C1659D54841599 ^ ((v48 << 58) ^ 0x3400000000000000) & 0xE800000000000000 | v55 & 0x173E9A62AB7BEA66 ^ ((v48 << 58) ^ 0x3400000000000000) & 0x1400000000000000;
  v58 = v56 ^ __ROR8__(v53, 16);
  v59 = __ROR8__(__ROR8__(v50, 23) & 0xFC0001FFFFFFFFFFLL ^ __ROR8__(v50 ^ 0x7154882812C23B30 ^ ((v38 >> 10)- ((2 * (v38 >> 10)) & 0x5FDFD68B9EED1734)- 0x501014BA30897466), 6) ^ 0x5F891B3DE7DA0724, 58) ^ (v50 << 47);
  v60 = v54 ^ v57;
  v61 = v59 ^ v56;
  v62 = v59 ^ 0xE2D3A03F96AF2C74;
  v63 = v54 ^ v57 ^ 0x6EDAEDC71F31750DLL;
  v64 = (v54 ^ 0x6EDAEDC71F31750DLL) & v57;
  v65 = (((v58 ^ 0xED56AE653176942ELL) & (v54 ^ 0x91251238E0CE8AF2))
       - ((2 * ((v58 ^ 0xED56AE653176942ELL) & (v54 ^ 0x91251238E0CE8AF2))) & 0x1AE65DB9E76E85E6)
       + 0xD732EDCF3B742F3) ^ v61;
  v66 = (v61 ^ 0xE07783C4618E9405) & (v59 ^ 0x1D2C5FC06950D38BLL);
  LOBYTE(v48) = v18 & 1;
  v67 = (v64 - ((2 * v64) & 0x3F0FA27437DBB31ALL) + 0x1F87D13A1BEDD98DLL) ^ v58 ^ 0x1894D40B567B3D69;
  v68 = v60 ^ 0x91251238E0CE8AF2;
  v69 = v66 + (v60 ^ 0x91251238E0CE8AF2);
  v70 = (v62 & v63) + 0x75E0C82E0DADBF1CLL + (~(2 * (v62 & v63)) | 0x143E6FA3E4A481C9);
  v71 = v65 ^ v67;
  v72 = v67 ^ v54;
  v73 = v72 ^ v70;
  v74 = v66 & v68;
  v75 = v58 ^ 0x12A9519ACE896BD1;
  v76 = (v61 ^ 0x1F887C3B9E716BFALL) & (v58 ^ 0x12A9519ACE896BD1) ^ v62;
  v77 = v69 - (v74 << v48 << (v48 ^ 1u));
  v78 = v77 - ((2 * v77) & 0x54EC87AC43564DC2) + 0x2A7643D621AB26E1;
  v79 = v72 ^ ~v70;
  *((_QWORD *)&v38 + 1) = v71 ^ 0xAAF6B16;
  *(_QWORD *)&v38 = v71 ^ 0x419E77B400000000;
  v80 = v38 >> 28;
  v81 = v78 ^ (v76 - ((2 * v76) & 0x54EC87AC43564DC2) + 0x2A7643D621AB26E1);
  *((_QWORD *)&v38 + 1) = v77;
  *(_QWORD *)&v38 = v78 ^ 0xF4ADA1508B1A798ALL;
  v82 = v38 >> 1;
  *((_QWORD *)&v38 + 1) = v81 ^ 0x2D1;
  *(_QWORD *)&v38 = v81 ^ 0xF15F74F258F9C00;
  v83 = v38 >> 10;
  v84 = v73 & 0x8000000 | (v79 >> 61);
  *((_QWORD *)&v38 + 1) = v65 ^ 0x23;
  *(_QWORD *)&v38 = v65 ^ 0x4BB4FF0AD8D0A080;
  v85 = v38 >> 7;
  v86 = v81 ^ __ROR8__(v81, 17) ^ v83;
  v87 = (8 * v73) ^ 0xDBE87C145FF70B88;
  v88 = v73 & 0xFFFFFFFFF7FFFFFFLL ^ (v73 >> 39) ^ (v73 << 25) ^ v84 ^ v87;
  *(_QWORD *)&v38 = __ROR8__(v78, 6);
  v89 = v78 ^ 0x5AEE419A52F73308 ^ ((v82 ^ v38 ^ 0x2FD2B685422C69E6)
                                    - ((2 * (v82 ^ v38 ^ 0x2FD2B685422C69E6)) & 0x5C87C195B3DA9506)
                                    - 0x51BC1F352612B57DLL);
  v90 = v89 - ((2 * v89) & 0xDFF42D1D5DB1F2D8);
  v91 = v65 ^ (v65 << 23) ^ v85 ^ (((v65 >> 41) ^ 0x25DA7F | 0x349C8FC38C59D7EFLL)
                                 - (((v65 >> 41) ^ 0x25DA7F | 0x349C8FC38C59D7EFLL) ^ (v65 >> 41) ^ 0x25DA7F));
  v92 = v80 ^ v71 ^ __ROR8__(v71 ^ 0xAF52BEDBE21A617, 19) ^ v91;
  v93 = v92 ^ 0x419E77B40AAF6B16 ^ v89 & (v88 ^ 0x1950DBF97F7E491);
  v94 = (v86 ^ v91 ^ 0xF15A1860A887534ALL) & (v92 ^ 0x56E6C983E874FD24);
  v95 = v88 ^ 0x1190E4CEC6D0E202;
  v96 = v86 ^ v91 ^ (v92 ^ 0xA919367C178B02DBLL) & (v88 ^ 0xFE6AF24068081B6ELL);
  v97 = (v94 - ((2 * v94) & 0xFC2C29373E7A05C4) + 0x7E16149B9F3D02E2) ^ v86;
  v98 = (v90 - 0x1005E97151270694) ^ v88 ^ 0x1190E4CEC6D0E202;
  v99 = v98 ^ (v86 ^ 0x3F828F3A21D7F3E9) & (v91 ^ 0xCED8975A8950A0A3);
  v100 = ((v96 ^ 0xEA5E79F5778ACB5) - ((2 * (v96 ^ 0xEA5E79F5778ACB5)) & 0x64851C96C415815CLL) + 0x32428E4B620AC0AELL) ^ v93;
  v101 = ((v93 ^ 0x1778BE37E2DB9632 ^ (v86 ^ 0xC07D70C5DE280C16) & ~v98)
        - ((2 * (v93 ^ 0x1778BE37E2DB9632 ^ (v86 ^ 0xC07D70C5DE280C16) & ~v98)) & 0xDFF42D1D5DB1F2D8)
        - 0x1005E97151270694) ^ v95;
  v102 = v100 ^ ((v100 ^ 0x253A307C80D1569CuLL) >> 19);
  v103 = v102 ^ 0xE04F10FD1D618A71;
  v102 ^= 0x2CE8CA07F87D6EAEuLL;
  v104 = (v101 ^ 0x92F095738C504AF7) << (v94 & 3) << (v94 & 3 ^ 3);
  v105 = (((v100 ^ 0x253A307C80D1569CLL) << 45) ^ 0x8399400000000000)
       - ((2 * (((v100 ^ 0x253A307C80D1569CLL) << 45) ^ 0x8399400000000000)) & 0x66B0400000000000)
       + 0x335825051AE31B20;
  v106 = (v102 + (v103 ^ v105) + 1) ^ ((v105 ^ 0xCCA7DAFAE51CE4DFLL) + 1);
  v107 = ((v106 - ((2 * v106) & 0x66B04A0A35C63640) + 0x335825051AE31B20) ^ v105) + v102;
  v108 = (v101 ^ 0x92F095738C504AF7) >> (v73 & 0x3D ^ 0x31) >> (v73 & 0x3D ^ 0xC);
  v109 = v104 + ((v101 >> 39) ^ 0x125E12A) - 2 * (v104 & ((v101 >> 39) ^ 0x125E12A));
  v110 = v108 ^ v101;
  v111 = v109 - ((2 * v109) & 0x3250FAC7B896D65ALL) - 0x66D7829C23B494D3;
  *((_QWORD *)&v38 + 1) = v96 ^ 0x38;
  *(_QWORD *)&v38 = v96 ^ 0x7199B2F60644580;
  v112 = ((((((v110 ^ 0x92F095738C504AF7) + (v110 ^ 0xF42717EFAFE4DE25 ^ v111) + 1) ^ ((v111 ^ 0x66D7829C23B494D2)
                                                                                         + 1))
          - ((2
            * (((v110 ^ 0x92F095738C504AF7) + (v110 ^ 0xF42717EFAFE4DE25 ^ v111) + 1) ^ ((v111 ^ 0x66D7829C23B494D2)
                                                                                           + 1))) & 0x3250FAC7B896D65ALL)
          - 0x66D7829C23B494D3) ^ v111)
        + (v110 ^ 0x92F095738C504AF7)) ^ ((v101 ^ 0x92F095738C504AF7) << (v31 & 0x19) << (v31 & 0x19 ^ 0x19u));
  v113 = (v38 >> 7) ^ (v96 >> 41) ^ 0x38CCD;
  v114 = v96 ^ 0xFC70B1304E3A486 ^ (v113 - ((2 * v113) & 0x11BD2078C90FC27CLL) + 0x8DE903C6487E13ELL);
  v115 = (v99 << 58) ^ (v99 >> 1) ^ ((v99 >> 6) | ((unint64_t)~(_DWORD)v99 << 63)) ^ 0xBD0FD3F85AB755D3;
  v116 = v97 ^ v99;
  v117 = v99 ^ 0xB47A3E6EA5A0529DLL ^ (v115 - ((2 * v115) & 0xAADA42CCAEB2647CLL) - 0x2A92DE99A8A6CDC2);
  v118 = (v96 << 23) ^ 0x97B03222DC000000;
  *((_QWORD *)&v38 + 1) = v116 ^ 0xC1C1C1C1;
  *(_QWORD *)&v38 = v116 ^ 0xBE6B645E41150C00;
  v119 = v38 >> 10;
  v120 = v114 + v118 - 2 * (v114 & v118);
  *((_QWORD *)&v38 + 1) = v100 ^ 0x253A307C80D1569CLL;
  *(_QWORD *)&v38 = v100;
  v121 = v120 ^ (v38 >> 28) ^ v107;
  v122 = v116 ^ __ROR8__(v116, 17) ^ v119;
  v123 = v120 ^ v122;
  v124 = v122 ^ 0x41777AB03B4A6C59;
  v125 = (v120 ^ v122 ^ 0x41777AB03B4A6C59) & (v122 ^ 0xBE88854FC4B593A6);
  v126 = v112 ^ 0xB5CFE8A5EB03FA03 ^ (v117 - ((2 * v117) & 0x6B9FD14BD607F406) - 0x4A30175A14FC05FDLL);
  v127 = ((v124 & ~v126) - ((2 * (v124 & ~v126)) & 0x6B9FD14BD607F406) - 0x4A30175A14FC05FDLL) ^ v112 ^ 0xB5CFE8A5EB03FA03;
  v128 = v117 & ~v112 ^ v121;
  v129 = v126 ^ v125;
  v130 = v124 ^ (v121 ^ 0x7C41CCA2CE8CB3DALL) & (v123 ^ 0xBE88854FC4B593A6);
  v131 = v127 + (v128 ^ 0x7C41CCA2CE8CB3DALL) - 2 * (v127 & (v128 ^ 0x7C41CCA2CE8CB3DALL));
  v132 = v130 - ((2 * v130) & 0x8274DC931217482) - 0x7BEC591B676F45BFLL;
  v133 = ((v131 >> 39) & 0x800000 ^ 0xBFFBFFAEEFBFF6EFLL) + 2 * ((v131 >> 39) & 0x800000);
  v134 = v133 + 0x6A45FFF772DE6C00;
  v135 = v133 + 0x4004005110400911;
  v136 = 0xEA3DFF55525E59DELL - v133;
  v137 = (8 * v131) ^ 0x9BEAFA9C2CD36788;
  if ((v135 & v137) == 0)
    v136 = v134;
  v138 = (v137 - 0x2A41FFA6629E62EFLL + v136) ^ (((v131 >> 39) ^ 0xA6FABE) + ((v131 >> 39) | 0xFFFFFFFFFF7FFFFFLL) + 1);
  v139 = __ROR8__(v131 ^ 0xC277D7249DFDC4B5 ^ ((v131 >> 61) - 8 * (v131 >> 63) + 0x510A88771867A844), 55);
  *((_QWORD *)&v141 + 1) = v139 ^ 0x3BB8CA15 ^ (v138 >> 55);
  *(_QWORD *)&v141 = v139 ^ 0x262576DB3BB8CA15 ^ (v138 << 9);
  v140 = v141 >> 9;
  v142 = v129 ^ v132;
  *((_QWORD *)&v141 + 1) = v129 ^ v132 ^ 0x1A2;
  *(_QWORD *)&v141 = v129 ^ v132 ^ 0x3CD4FAC4F8A07800;
  v143 = v141 >> 10;
  v144 = v129 ^ 0xAE613706C75B82F1;
  if (v101)
    v144 = ~v129;
  v145 = (v144 << 63) & ~v129 ^ __ROR8__(v129, 6) ^ ((((v129 >> 1) ^ 0x48B432268DB06DE8)
                                                    - 2
                                                    * (((v129 >> 1) ^ 0x48B432268DB06DE8) & 0x3F09534BDC3B5925 ^ (v129 >> 1) & 5)
                                                    + 0x3F09534BDC3B5920) ^ v129 ^ 0xAE613706C75B82F1 | (v144 << 63));
  v146 = v142 ^ __ROR8__(v142, 17) ^ v143;
  v147 = v140 ^ (v131 << 25);
  v148 = v145 ^ v147;
  v149 = (v148 ^ 0x9422780C440FA0F5) & (v146 ^ 0x5E4AE85C205F2);
  v150 = (v149 & 0x10 | (32 * (((v149 & 0x10) >> 4) & 1))) ^ 0x37E8B3FFEFBFBDDELL;
  v151 = ((v150 - 0x37E8B3FFEFBFBDDELL) & v140) == 0;
  v152 = v112 & (v121 ^ 0x83BE335D31734C25) ^ v123;
  *((_QWORD *)&v153 + 1) = (v152 >> 16) ^ 0x41777AB03B4ALL;
  *(_QWORD *)&v153 = (*((_QWORD *)&v153 + 1) | (v152 << 48)) ^ 0x6C59000000000000;
  v154 = __ROR8__(__ROR8__((v153 >> 40) ^ __ROR8__(__ROR8__(v128 ^ 0xA80D46F8F6BCE766, 16) ^ 0x969F8A84B4EEFE54, 40) ^ 0xABF63CE0877C09ALL, 24) ^ 0x77C09A0ABF63CE08, 48);
  *((_QWORD *)&v153 + 1) = v154 ^ 0x6FE54969FLL;
  *(_QWORD *)&v153 = v154 ^ 0x8A84B4E800000000;
  *(_QWORD *)&v153 = __ROR8__((v153 >> 35) ^ 0xDF4B0BC9233602F3 ^ __ROR8__(v154 ^ 0x8A84B4EEFE500000, 54) & 0xFFFFFFFFE00003FFLL, 29);
  v155 = (((v154 >> 28) ^ v153 ^ 0x19B01796521310A6) & 0xC5A03FDF88AFF1D0 ^ ((v154 << 45) ^ 0x92D3E00000000000) & 0xC5A0200000000000 | ((v154 >> 28) ^ v153 ^ 0x19B01796521310A6) & 0x3A5FC02077500E2FLL ^ ((v154 << 45) ^ 0x92D3E00000000000) & 0x3A5FC00000000000) ^ (v154 << 36) ^ 0xE54969F000000000;
  v156 = v152 ^ (v152 << 23) ^ (v152 >> 7) ^ ((v152 >> 41) | (v152 << 57));
  v157 = v156 ^ 0xC5870878C5FD3F4CLL;
  v158 = v155 + (v156 ^ 0xC5870878C5FD3F4CLL) - 2 * (v155 & (v156 ^ 0x45870878C5FD3F4CLL));
  v159 = v147 ^ 0x2D9826628F9DDC65;
  v160 = v158 - ((2 * v158) & 0x634682A2E611F374) - 0x4E5CBEAE8CF70646;
  v161 = (((v148 ^ 0x6BDD87F3BBF05F0ALL) & (v147 ^ 0xD267D99D7062239ALL))
        - ((2 * ((v148 ^ 0x6BDD87F3BBF05F0ALL) & (v147 ^ 0xD267D99D7062239ALL))) & 0x634682A2E611F374)
        - 0x4E5CBEAE8CF70646) ^ v160;
  v162 = v161 - ((2 * v161) & 0x34663FFF91D7C9AALL) + 0x1A331FFFC8EBE4D5;
  v163 = v146 ^ v156;
  v164 = (v160 ^ 0x4E5CBEAE8CF70645) & v159 ^ v163;
  v165 = (v160 ^ 0xB1A341517308F9BALL) & (v163 ^ 0x3A7D1329BFC0C541);
  v166 = v150 - 0x1548200286861110;
  if (!v151)
    v166 = 0x5A8947FD58F96AACLL - v150;
  v167 = v148 ^ (((v146 ^ 0xFFFA1B517A3DFA0DLL) & v157)
               - ((2 * ((v146 ^ 0xFFFA1B517A3DFA0DLL) & v157)) & 0x420B73D07CF55B12)
               - 0x5EFA4617C1855277);
  v168 = v161 ^ v149 & 0xFFFFFFFFFFFFFFEFLL ^ (v159 - 0x22A093FD6939ACCELL + v166);
  v169 = v162 ^ v164 ^ 0xDFB1F32988D4DE6BLL;
  v170 = ((unint64_t)((((_DWORD)v161 - ((2 * (_DWORD)v161) & 0x91D7C9AA) - 924064555) ^ v164 ^ 0x88D4DE6B) & 0x7FFFF) << 8) ^ __ROR8__(v162 ^ v164 ^ 0x8DBE47B606E76AC2 ^ ((((v162 ^ (unint64_t)v164) >> 19) ^ 0x8E5EC461FE0) - ((2 * (((v162 ^ (unint64_t)v164) >> 19) ^ 0x8E5EC461FE0)) & 0xB0DF3C6351ALL) - 0x356EDA79061CE573), 37) ^ 0x4DB7BCAC2A553FCCLL;
  v171 = (v167 >> 6) ^ 0xB1DFB6E34C0A54;
  v172 = v167 ^ v146 ^ (v165 - ((2 * v165) & 0xDE62AB0369E93354) + 0x6F315581B4F499AALL);
  v173 = *((_BYTE *)v10 + ((4 * (v168 >> 61)) ^ 0x28) + 272) ^ 0xC3;
  v174 = ((2 * v164) & 0x657E40CDEB44B768 ^ 0xFEFBBF737FBBCA97) + (v164 ^ 0xC582ECD6403F3ABELL);
  v175 = v174 - ((2 * v174 + 0x657E40CDEB44B76ALL) & 0xEB9F5004BE9185C0) + 0x288EC86954EB1E95;
  v176 = ((v167 ^ 0xD339CDF1CFB160A3 ^ (v167 >> 6)) + v171 + 1) ^ ((v167 ^ 0xD38812472CFD6AF7) + 1);
  v177 = ((16 * v173) | 0x60u) ^ v173 ^ (8 * v168) ^ (v168 >> 39) ^ 0xB2F7D070576B5DFCLL;
  v178 = v168 ^ 0xEE8EAF1E8D2F5DCBLL ^ (v177 - ((2 * v177) & 0xF1A0AA210F8F4394) - 0x72FAAEF78385E36);
  v179 = v178
       + ((v168 << 25) ^ 0x1C15D1F802000000)
       - 2 * (v178 & ((v168 << 25) ^ 0x1C15D1F802000000))
       - 2
       * ((v178 + ((v168 << 25) ^ 0x1C15D1F802000000) - 2 * (v178 & ((v168 << 25) ^ 0x1C15D1F802000000))) & 0x374884F45C60C0BDLL ^ v178 & 0x1C);
  *((_QWORD *)&v180 + 1) = v175 ^ 0x60;
  *(_QWORD *)&v180 = v175 ^ 0xF5CFA8025F48C280;
  v181 = (((v167 >> 1) ^ 0xE9C40923967EB57BLL) + 1) ^ (v167 << 58) ^ ((v167 << 63)
                                                                    + (__ROR8__(v167, 1) ^ 0xE9C40923967EB57BLL)
                                                                    + 1) ^ ((v167 ^ 0xE65C342F8C0365F6 ^ (v176 - ((2 * v176) & 0x9457B32EBE03E1FCLL) - 0x35D42668A0FE0F02))
                                                                          + v171);
  v182 = (v167 >> 1) ^ 0x111BD141F44C5FDALL ^ ((v181 ^ 0x2000000000000000)
                                             - ((2 * v181) & 0xE404F3B3B9A2ABCLL)
                                             + 0x720279D9DCD155ELL);
  v183 = (v182 - ((2 * v182) & 0xE78E539557DE4A2CLL) + 0x73C729CAABEF2516) ^ (((unint64_t)v167 << 63) | 0x73C729CAABEF2516);
  v184 = ((v180 >> 7) - 0xA3057FDA0B73D80 - ((2 * (v180 >> 7)) & 0xEB9F5004BE9185C0) + 96) ^ v175;
  v185 = v172 ^ (v172 << 47) ^ ((v172 >> 10) ^ (v172 >> 17) | (v172 << 54));
  v186 = v184 & 0x3CBBB4AACB9B8D41 ^ ((v175 >> 41) ^ 0x7AE7D4) & 0x1B8D41 | v184 & 0xC3444B55346472BELL ^ ((v175 >> 41) ^ 0x7AE7D4) & 0x6472BE;
  v187 = v186 + ((v175 << 23) ^ 0x12FA46170000000) - 2 * (v186 & ((v175 << 23) ^ 0x12FA46170000000));
  v188 = v187 - 2 * (v187 & 0x4A513AA9D59A4FEFLL ^ v186 & 9);
  v189 = __ROR8__(v170, 27) ^ __ROR8__(v169, 28);
  v190 = v179 + 0x374884F45C60C0A1;
  v191 = (v179 + 0x374884F45C60C0A1) ^ (v183 - ((2 * v183) & 0x6E9109E8B8C18142) + 0x374884F45C60C0A1);
  v192 = v191 ^ 0xDC;
  v193 = (v179 + 0x374884F45C60C0A1) ^ 0xC8B77B0BA39F3F82;
  v194 = v190 ^ 0x374884F45C60C07DLL;
  v195 = (v191 ^ 0xFFFFFFFFFFFFFF23) & (v185 ^ 0x96115576ED3F5FCDLL);
  v196 = v188 + 0x4A513AA9D59A4FE6;
  v197 = v189 ^ v196;
  v198 = v197 ^ 0xBA623951EE4E7DEALL ^ ((v192 & v193)
                                      - ((2 * (v192 & v193)) & 0x1A73C363647A4736)
                                      - 0x72C61E4E4DC2DC65);
  if (v75)
    v199 = v193;
  else
    v199 = 0;
  v200 = (v196 ^ 0x4A513AA9D59A4FE6) & (v185 ^ 0x69EEAA8912C0A032);
  v201 = (v199 ^ v197 ^ 0x97C75E96157B340BLL) & v194 ^ v196 ^ v185;
  v202 = v198 ^ __ROR8__(__ROR8__(v195 ^ v194, 17) ^ 0xFBA1AC310EE2F857, 47);
  v203 = (v198 ^ v201 ^ 0x832316568E5285AELL)
       + (v198 ^ v201 ^ 0x2FB1C6AB54AA10A1)
       + (v198 ^ v201 ^ 0x832316568E5285AELL)
       + 1
       - (((v198 ^ v201 ^ 0x2FB1C6AB54AA10A1) + (v198 ^ v201 ^ 0x832316568E5285AELL) + 1) >> 5 << 6)
       - 32;
  v204 = v203 - ((2 * v203) & 0x5B5A7783642CDFE2) - 0x5252C43E4DE9900FLL;
  v205 = v200 ^ v192 ^ v185 ^ (((v197 ^ 0x6838A169EA84CBF4) & (v196 ^ v185 ^ 0x23BF9020C75AEFD4))
                             - ((2 * ((v197 ^ 0x6838A169EA84CBF4) & (v196 ^ v185 ^ 0x23BF9020C75AEFD4))) & 0xFE001D526D66E842)
                             + 0x7F000EA936B37421);
  *((_QWORD *)&v206 + 1) = v204 ^ 0x66FF1;
  *(_QWORD *)&v206 = v204 ^ 0xADAD3BC1B2100000;
  v207 = v204 ^ __ROR8__(v204, 28) ^ (v206 >> 19);
  *((_BYTE *)v8 + 12) = v207 ^ 0x46;
  *((_QWORD *)&v206 + 1) = ~(v200 ^ v192);
  *(_QWORD *)&v206 = v200 ^ v192 ^ 0xB6014E3F62F5C29ALL;
  v208 = v202 ^ (v202 >> 61) ^ (v202 >> 39) ^ (8 * v202) ^ ((v202 ^ 0xCE7FA4163DC90F20) << (v87 & 0x18) << (v87 & 0x18 ^ 0x19));
  v7[16] = BYTE2(v207) ^ 0xC5;
  v209 = v205 ^ (v205 << 47) ^ (v205 >> 10) ^ ((v205 >> 17) | (v205 << 54));
  v3[22] = BYTE1(v207) ^ 0xD3;
  *((_BYTE *)v8 + 13) = (BYTE3(v207) ^ 0x68) - 2 * ((BYTE3(v207) ^ 0x68) & 0x2E ^ BYTE3(v207) & 2) - 84;
  v3[12] = BYTE5(v207) ^ 0xC4;
  v210 = v200 ^ v192 ^ __ROR8__(v200 ^ v192, 6) ^ (v206 >> 1);
  v7[6] = HIBYTE(v207) ^ 0x8C;
  v7[1] = BYTE4(v207) ^ 0xDB;
  v7[26] = BYTE6(v207) ^ 0xCB;
  v211 = *((_BYTE *)v10 + (((v208 >> 6) | (4 * (v208 & 0x3F))) ^ 0x91) + 272);
  v3[26] = BYTE3(v208) ^ 0xD2;
  v3[7] = BYTE1(v208) ^ 0x89;
  v3[17] = BYTE4(v208) ^ 0xA7;
  v7[10] = v211 ^ 0x6F ^ (16 * v211) & 0x9F;
  *v3 = BYTE2(v208) ^ 0x1D;
  LOBYTE(v204) = (BYTE5(v208) ^ 0x84) - ((2 * (BYTE5(v208) ^ 0x84) + 118) & 0xB2) - 108;
  v212 = *((_BYTE *)v10 + (v204 ^ 0x26) + 792);
  v3[1] = v210 ^ 0x91;
  v7[4] = HIBYTE(v208) ^ 0xBD;
  v7[2] = v212 ^ v204 & 0xDF ^ (v204 & 0x20 | 0x1C) ^ 0x41;
  *((_BYTE *)v8 + 9) = (BYTE1(v210) ^ 0x15) - 2 * ((BYTE1(v210) ^ 0x15) & 0x2E ^ BYTE1(v210) & 2) - 84;
  *((_BYTE *)v8 + 16) = BYTE6(v208) ^ 0x2E;
  v3[18] = BYTE4(v210) ^ 7;
  v7[27] = BYTE5(v210) ^ 0x4B;
  v7[14] = BYTE6(v210) ^ 0xD9;
  v7[5] = BYTE3(v209) ^ 0xA;
  v213 = __ROR8__(((v201 & 0x7F) << 16) ^ __ROR8__(v201 ^ 0xB3E7D2793FDC8D7FLL ^ (((v201 >> 7) ^ 0x1F738C7A55DBFA7)- ((2 * ((v201 >> 7) ^ 0x1F738C7A55DBFA7)) & 0xF763572206BDF0)+ 0x487BB1AB91035EF8), 41) ^ 0xB4F231FF959E5408, 23) ^ (v201 >> 41);
  v214 = v213 ^ (v201 << 23);
  v7[13] = BYTE1(v213) ^ 0x31;
  v3[4] = BYTE6(v209) ^ 0xF0;
  v7[7] = HIBYTE(v210) ^ 0xD8;
  *((_BYTE *)v8 + 1) = (BYTE2(v210) ^ 0x7E) - ((2 * (BYTE2(v210) ^ 0x7E)) & 0x58) - 84;
  v7[28] = BYTE1(v209) ^ 0xBC;
  v7[8] = BYTE2(v209) ^ 0xDD;
  v3[21] = v209 ^ 0x83;
  v3[5] = BYTE3(v210) ^ 0x9F;
  v3[23] = v213 ^ 0x1A;
  v3[14] = BYTE5(v209) ^ 0xA6;
  v7[18] = BYTE4(v209) ^ 0x75;
  v3[2] = HIBYTE(v209) ^ 0xD5;
  v3[19] = (*((_BYTE *)v10 + ((-85 * (BYTE2(v214) ^ 0x9E)) ^ 0x48) + 530) ^ 0x1B) + 98;
  v3[15] = ((v213 ^ ((_DWORD)v201 << 23)) >> 24) ^ 0x27;
  v3[6] = BYTE4(v214) ^ 0x80;
  v3[24] = BYTE5(v214) ^ 0x7E;
  *v7 = ~BYTE6(v214);
  LODWORD(v204) = *((unsigned __int8 *)v10 + ((-85 * (HIBYTE(v214) ^ 0xDB)) ^ 0x48) + 530);
  LODWORD(v204) = ~((v204 >> 7) | (2 * v204));
  LODWORD(v214) = ((2 * v204) & 0xFFFFFFFC | (v204 >> 7) & 1) ^ 0x62;
  v7[15] = (((v214 >> 2) | ((_BYTE)v214 << 6)) ^ (((_BYTE)v204 << 7) | 0x7C)) + 98;
  *(_DWORD *)(*(_QWORD *)v2 + 8) = v27 + 1;
  v215 = *(_QWORD *)((char *)v487 - 4);
  v216 = off_1E2538470[v1 ^ 0x26930ABD];
  LODWORD(v201) = *(_DWORD *)(v215 + 20);
  v217 = off_1E2538470[v1 - 647170308];
  v218 = v201 ^ 0x7BADDE8F;
  v219 = (2 * v201) & 0xF75BBD1E;
  v220 = *(_BYTE **)off_1E2538470[v1 ^ 0x26930A6A];
  v221 = *(unsigned __int8 **)v2;
  v222 = (char *)v217 + 544;
  v223 = *((_BYTE *)v217 + ((-103 * (*((_BYTE *)v8 + 15) ^ 0xAC)) ^ 0x8ELL) + 544) + 12;
  v224 = (v223 ^ 2) - ((2 * v223) & 0xD0);
  v225 = *((_BYTE *)v217 + ((-103 * *v220) ^ 0x8ELL) + 544) + 12;
  v226 = *((unsigned __int8 *)v8 + 2);
  v227 = ((unint64_t)v221[25] << 24) | ((unint64_t)v221[16] << 16) | *(unsigned __int8 *)(v215 + 3) | ((unint64_t)(v225 ^ 0x6Au) << 32) | ((v226 ^ 0xAC) << 8);
  v228 = *(_BYTE **)v216;
  v229 = *((unsigned __int8 *)v8 + 8) ^ 0xACLL;
  v230 = ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)v216 + 4) << 8) | ((*(unsigned __int8 *)v8 ^ 0xACLL) << 24) | ((unint64_t)*(unsigned __int8 *)(*(_QWORD *)v216 + 2) << 16) | v229;
  v231 = v230 - 2 * (v230 & 0x14ED301F ^ v229 & 0xC) + 0x29625A8214ED3013;
  v232 = v231 & 0xD03C62663C9C88C7 ^ 0x2FE3DF9BD7EF773BLL;
  v151 = (_DWORD)v226 == 172;
  v233 = v231 ^ 0xF95E38E42871B8D4;
  v234 = v231 ^ 0x29625A8214ED3013;
  if (v151)
    v233 = 0xD03C62663C9C88C7;
  v235 = (*((unsigned __int8 *)v8 + 6) ^ 0x3F3FF6EFFFEB2F73)
       + ((2 * (*((unsigned __int8 *)v8 + 6) ^ 0x8Cu)) & 0x1BELL)
       - 0x3F3FF6EFFFEB2FDFLL;
  v236 = (v233 | v234) - 0x58E9302A81819C1 + (~(2 * (v233 | v234)) | 0xB1D260550303381) + 1;
  v237 = v236 ^ 0xFA716CFD57E7E63FLL;
  v238 = v236 ^ 0x58E9302A81819C0;
  v239 = v236 & 0xD03C62663C9C88C7 ^ 0xFFF3FDFDD7E7F73FLL;
  v240 = (v224 + 104);
  v241 = v221[13];
  v242 = ((unint64_t)v221[3] << 8) - ((v221[3] << 9) & 0xFA00) + 0x7C44A45E0BC17D41;
  v243 = (v235 - (v235 | v242 ^ 0x7C44A45E0BC17D41)) ^ ((v242 ^ 0x83BB5BA1F43E82BELL) + 1);
  v244 = (v241 << 40) | (v240 << 48) | v227 | ((unint64_t)(*((unsigned __int8 *)v8 + 14) ^ 0xACu) << 56);
  v245 = v238 - v232 + v239 + 2 * (v237 & v232);
  v246 = ((v243 - ((2 * v243) & 0xF88948BC1782FA82) + 0x7C44A45E0BC17D41) ^ v242) + v235;
  v247 = (char *)v217 + 274;
  v248 = (*((unsigned __int8 *)v217 + (((*v228 >> 7) | (2 * *v228)) ^ 0x59) + 274) ^ 0x90) << 16;
  v249 = *((unsigned __int8 *)v8 + 3) ^ 0xACLL | ((unint64_t)v228[1] << 8) | ((*((unsigned __int8 *)v8 + 7) ^ 0xACLL) << 16) | ((unint64_t)v228[3] << 24);
  v484 = (char *)v217 + 16;
  v250 = *((_BYTE *)v217 + ((-27 * *(_BYTE *)(v215 + 29)) ^ 0x31) + 16);
  v251 = v250 ^ -v250 ^ ((v250 ^ 0xEB) + 21);
  v252 = (((unint64_t)*(unsigned __int8 *)(v215 + 12) << 48) | ((unint64_t)(*((unsigned __int8 *)v8 + 18) ^ 0xACu) << 56) | ((unint64_t)v220[1] << 40) | ((unint64_t)*(unsigned __int8 *)(v215 + 24) << 32) | ((unint64_t)*(unsigned __int8 *)(v215 + 17) << 24)) ^ (v246 + v248 - 2 * (v246 & v248));
  v485 = (v219 + v218 - 2074992271);
  *((_QWORD *)&v253 + 1) = v249;
  *(_QWORD *)&v253 = v249 | ((unint64_t)(*((unsigned __int8 *)v8 + 10) ^ 0xACu) << 32) | ((unint64_t)*(unsigned __int8 *)(v215 + 25) << 56) | ((unint64_t)(*((unsigned __int8 *)v8 + 11) ^ 0xACu) << 48) | ((unint64_t)*(unsigned __int8 *)(v215 + 11) << 40);
  v254 = (v245 + 1) ^ (((unint64_t)*(unsigned __int8 *)(v215 + 9) << 40) | ((unint64_t)v228[5] << 32) | v485 | ((unint64_t)v228[6] << 48) | ((unint64_t)v220[2] << 56));
  v255 = (v253 >> 26) ^ 0x308174E32699F1F2;
  v256 = *((unsigned __int8 *)v8 + 20);
  v257 = (unint64_t)(v251 + 20) << 8;
  *((_QWORD *)&v253 + 1) = v257 | *(unsigned __int8 *)(v215 + 19);
  *(_QWORD *)&v253 = v257 | ((*((unsigned __int8 *)v217
                              + (((2 * v256) | ((~v256 & 0x80) != 0)) ^ 1)
                              + 274) ^ 0x90) << 16);
  v258 = ((*((unsigned __int8 *)v8 + 4) ^ 0xACLL) << (v241 & 0x20) << (v241 & 0x20 ^ 0x20)) | ((unint64_t)(*((unsigned __int8 *)v8 + 5) ^ 0xACu) << 48) | ((unint64_t)v221[20] << 40);
  v259 = (*((unsigned __int8 *)v8 + 19) ^ 0xACLL)
       - ((2 * (*((unsigned __int8 *)v8 + 19) ^ 0xACu)) & 0x1C2)
       + 0x13F499A7E5C250E1;
  v260 = (v258 | (v259 << 56)) ^ __ROR8__(((v253 >> 9) | ((*((unsigned __int8 *)v8 + 17) ^ 0xACLL) << 15)) ^ 0xE03B086D69709BFDLL, 55);
  v261 = (v252 - 2 * (v252 & 0x78F5729CCE623337 ^ v246 & 0x15) - 0x70A8D63319DCCDELL) ^ v254 ^ 0xF8F5729CCE623322;
  v262 = v261 ^ 0xD801AE4F6C69C981;
  v261 ^= 0x27FE51B09396367EuLL;
  v263 = v260 ^ (v249 | ((unint64_t)(*((unsigned __int8 *)v8 + 10) ^ 0xACu) << 32) | ((unint64_t)*(unsigned __int8 *)(v215 + 25) << 56) | ((unint64_t)(*((unsigned __int8 *)v8 + 11) ^ 0xACu) << 48) | ((unint64_t)*(unsigned __int8 *)(v215 + 11) << 40));
  v264 = ((v260 ^ v244) & 0xFDFFFFFFFFFFFFFFLL ^ 0x9510DAD2E137FBC0)
       + ((v260 ^ v244) & 0x200000000000000 ^ 0x3A77C3AC4389F8BCLL)
       + ((2 * (v260 ^ v244)) & 0x70EF87588713F178 ^ 0xDFDE7AFF7DFC0EFFLL);
  *(_QWORD *)&v253 = __ROR8__(v255, 38);
  v265 = v253 ^ 0x489B6450DB7B0A27;
  v266 = (((v253 ^ 0x489B6450DB7B0A27) & v261)
        - ((2 * ((v253 ^ 0x489B6450DB7B0A27) & v261)) & 0xF1EAE5399CC46644)
        - 0x70A8D63319DCCDELL) ^ v254 ^ 0xF8F5729CCE623322;
  v267 = ++v264 ^ v262 & (v254 ^ 0xE86EB7CD7E9B7546);
  v268 = v267 ^ (v266 - ((2 * v266) & 0x8F09FA699037A16CLL) + 0x4784FD34C81BD0B6);
  v269 = (((v264 ^ 0xF5801825D3E28441) & (v254 ^ 0x1791483281648AB9))
        - ((2 * ((v264 ^ 0xF5801825D3E28441) & (v254 ^ 0x1791483281648AB9))) & 0xD66579DEBB1A2770)
        + 0x6B32BCEF5D8D13B8) ^ v263;
  v270 = (v263 ^ 0x6B661AE9B1070C88) & (v253 ^ 0xB7649BAF2484F5D8);
  v271 = (v264 ^ 0xA7FE7DA2C1D7BBELL) & (v263 ^ 0x9499E5164EF8F377);
  *((_QWORD *)&v253 + 1) = v269 ^ 0x330;
  *(_QWORD *)&v253 = v269 ^ 0x54A606EC8A1C00;
  v272 = v270 ^ v262;
  v273 = ((v253 >> 10) - ((2 * (v253 >> 10)) & 0x14E9A8F44DF3358) - 0x7F58B2B85D906654) ^ (((v267 ^ 0xA7FE7DA2C1D7BBELL) >> (v261 & 0xA) >> (v261 & 0xA ^ 0xA))
                                                                                             + ((v267 << 54) ^ 0xEF80000000000000));
  *((_QWORD *)&v253 + 1) = v268 ^ 0x385259459662C88;
  *(_QWORD *)&v253 = v268 ^ 0x4000000000000000;
  v274 = v253 >> 61;
  v275 = __ROR8__(v273, 54);
  *((_QWORD *)&v253 + 1) = v275 ^ 0x5C41E;
  *(_QWORD *)&v253 = v275 ^ 0x8A17268115000000;
  v276 = v253 >> 19;
  *((_QWORD *)&v253 + 1) = v269 ^ 0xA606EC8A1F30;
  *(_QWORD *)&v253 = v269 ^ 0x54000000000000;
  v277 = v272 ^ v265 ^ v271;
  v278 = (v253 >> 48) ^ 0xF38655192B15930ELL;
  *(_QWORD *)&v253 = __ROR8__(v268, 39);
  v279 = ((v274 ^ v253 ^ 0x28B2CC5910470A4BLL)
        - ((2 * (v274 ^ v253 ^ 0x28B2CC5910470A4BLL)) & 0xCAE9D02B242453A0)
        + 0x6574E815921229D0) ^ v268;
  v280 = (v272 >> 1) ^ (v272 >> 6) ^ (v272 << 58) ^ 0xFC1F30AD941121ALL;
  v281 = ((v280 ^ ((unint64_t)~(_DWORD)v272 << 63))
        - ((2 * v280) & 0xB28F2A951790A40ELL)
        - 0x26B86AB57437ADF9) ^ v272;
  *(_QWORD *)&v253 = __ROR8__(v273, 18);
  v282 = ((v276 ^ v253 ^ 0x505C41E8A1726811)
        - ((2 * (v276 ^ v253 ^ 0x505C41E8A1726811)) & 0xE28CD4A3F6E56BC6)
        - 0xEB995AE048D4A1DLL) ^ v275;
  v283 = __ROR8__(v278, 16);
  *((_QWORD *)&v253 + 1) = v283 ^ 0xE;
  *(_QWORD *)&v253 = v283 ^ 0xBEC73B8873934980;
  v284 = v253 >> 7;
  *((_QWORD *)&v253 + 1) = v277 ^ 0x12A;
  *(_QWORD *)&v253 = v277 ^ 0xDE8CC05DCAC60000;
  v285 = v253 >> 10;
  v286 = (v283 << 23) ^ 0xC439C9A4C7000000;
  *((_QWORD *)&v253 + 1) = v279 ^ 0xA4;
  *(_QWORD *)&v253 = v279 ^ 0xB90E327E348BFA00;
  v287 = v283 ^ 0x97DF7E7C083FF326 ^ ((v284 ^ (v283 >> 41) ^ 0x5F639D)
                                      - 2
                                      * ((v284 ^ (v283 >> 41) ^ 0x5F639D) & 0x291845F47BACBAE8 ^ (v284 ^ (v283 >> 41)) & 0x40)
                                      + 0x291845F47BACBAA8);
  *(_QWORD *)&v253 = __ROR8__((v253 >> 9) ^ 0xE3884F4382330DFLL, 55);
  v288 = v287 & v286;
  v289 = v287 | v286;
  v290 = v289 & 0x4CB7F4488FD33927;
  v291 = v289 & 0xB3480BB7702CC6D8;
  v292 = v288 & 0x4CB7F4488F800000;
  v293 = v288 & 0xB3480BB770000000;
  v294 = v292 ^ v290;
  v295 = v281 ^ v279;
  v296 = v281 ^ v279 ^ 0x6562BEDD806A71B2 ^ (v253 - ((2 * v253) & 0xB3C0E10EE0A9A68ELL) + 0x59E070877054D347);
  v151 = v225 == 0;
  v297 = v295 ^ 0xB274D9D549A0E316;
  if (!v151)
    v297 = v296;
  v298 = (v294 | v293) ^ v291;
  v299 = v277 ^ __ROR8__(v277, 17) ^ v285;
  *((_QWORD *)&v300 + 1) = v295 ^ 0x295239F43051;
  *(_QWORD *)&v300 = v295 ^ 0xEB94800000000000;
  v301 = v282 ^ v298;
  v302 = v301 ^ 0x7B514CD0EE7771FDLL;
  *(_QWORD *)&v300 = __ROR8__(__ROR8__(__ROR8__((v300 >> 46) ^ 0x54A476B8DCB47526, 18) ^ 0xE2B66AD6E251C8D2, 38) ^ __ROR8__(v298, 38) ^ 0x64627C3933140D3ALL, 26);
  v303 = (((v297 ^ 0x59E070877054D347) & (v279 ^ 0xB90E327E348BFAA4))
        - ((2 * ((v297 ^ 0x59E070877054D347) & (v279 ^ 0xB90E327E348BFAA4))) & 0x85E8BF9B7A2F4386)
        - 0x3D0BA03242E85E3DLL) ^ v301 ^ 0xB9A5131D5360D03ELL;
  v304 = (((2 * v301) ^ 0x95D665E23111C05) + (v301 ^ 0x7B514CD0EE7771FDLL)) & (v279 ^ 0x46F1CD81CB74055BLL);
  v305 = v298 & (v299 ^ 0x21E650E455171BB6) ^ v295;
  v306 = (v298 ^ 0x8CA86EE5B720E8C3 ^ (v300 - ((2 * v300) & 0x935640F95F7FCD1ELL) + 0x49AB207CAFBFE68FLL)) & (v299 ^ 0xDE19AF1BAAE8E449);
  *((_QWORD *)&v300 + 1) = v305 ^ 0x4A95239F43051;
  *(_QWORD *)&v300 = v305 ^ 0xEB90000000000000;
  v307 = v303 - ((2 * v303) & 0x74A70704549F7FEELL) - 0x45AC7C7DD5B04009;
  v308 = (v300 >> 52) ^ 0x5C527B737A69B555;
  v309 = v303 ^ v279 ^ (v306 - ((2 * v306) & 0xD9C712E366C826ACLL) + 0x6CE38971B3641356);
  v310 = v304 ^ v298 ^ v299;
  *((_QWORD *)&v300 + 1) = v309 ^ 0x10C5CF9D924DA0;
  *(_QWORD *)&v300 = v309 ^ 0x2000000000000000;
  v311 = v300 >> 61;
  v312 = v299 ^ 0x1CB13AD80A22D493 ^ ((v302 & (v298 ^ v299 ^ 0x21E650E455171BB6))
                                      - ((2 * (v302 & (v298 ^ v299 ^ 0x21E650E455171BB6))) & 0x85512B87419461B4)
                                      - 0x3D576A3C5F35CF26);
  v313 = (v312 - ((2 * v312) & 0xE2923D3F0C8FC7B0) - 0xEB6E16079B81C28) ^ v305;
  v314 = __ROR8__(v308, 12);
  *((_QWORD *)&v300 + 1) = ~(_DWORD)v314;
  *(_QWORD *)&v300 = v314 ^ 0x8B8E27A11D86F9F0;
  v315 = v300 >> 1;
  v316 = v310 ^ v307;
  *((_QWORD *)&v300 + 1) = v310 ^ v307 ^ 0x6696B;
  *(_QWORD *)&v300 = v310 ^ v307 ^ 0xDD6AA29E9B280000;
  v317 = v300 >> 19;
  *((_QWORD *)&v300 + 1) = v310 ^ 0x2449;
  *(_QWORD *)&v300 = v310 ^ 0xDE19AF1BAAE8C000;
  v318 = ((v315 ^ (v314 >> 6) ^ 0x22E389E84761BE7)
        - 2 * ((v315 ^ (v314 >> 6) ^ 0x22E389E84761BE7) & 0x7EC976354499766ELL ^ (v315 ^ (v314 >> 6)) & 8)
        - 0x13689CABB66899ALL) ^ v314;
  v319 = v318 & 0x20000000000 | (v314 << 58);
  v320 = ((v317 ^ ((v316 ^ 0x644A2C9980A75BBEuLL) >> 28) ^ ((v316 ^ 0x644A2C9980A75BBELL) << 36) ^ 0xB8932D5B9208E071)
        - 2
        * ((v317 ^ ((v316 ^ 0x644A2C9980A75BBEuLL) >> 28) ^ ((v316 ^ 0x644A2C9980A75BBELL) << 36) ^ 0xB8932D5B9208E071) & 0x3680A756BC33E0FBLL ^ (v317 ^ ((v316 ^ 0x644A2C9980A75BBEuLL) >> 28)) & 2)
        + 0x3680A756BC33E0F9) ^ v316;
  v321 = (v300 >> 14) ^ 0xFB4BDF13B948AE0BLL;
  *((_QWORD *)&v300 + 1) = v313 ^ 0x158;
  *(_QWORD *)&v300 = v313 ^ 0x15C840829A3C4C00;
  v322 = v309 ^ __ROR8__(v309, 39) ^ v311;
  v323 = __ROR8__(v321, 50);
  v324 = v313 ^ __ROR8__(v313, 17) ^ (v300 >> 10);
  v325 = (((v323 >> 7) ^ 0xA2E97880C2D711) & 0x53B52AA68E5620 ^ v323 & 0x8853B52AA68E5620 | ((v323 >> 7) ^ 0xA2E97880C2D711) & 0x1AC4AD55971A9DFLL ^ v323 & 0x77AC4AD55971A9DFLL) ^ (v323 << 57) ^ 0x5F74BC40616B8887;
  v326 = (v325 ^ (v323 >> 41) ^ 0x28BA5E | (v323 << 23) ^ 0x2030B5C443800000) & 0xB09B2D90042F5EA9 ^ ((v323 << 23) ^ 0x2030B5C443800000) & 0xB09B2D9004000000 & v325 | (v325 ^ (v323 >> 41) ^ 0x28BA5E) & 0x4F64D26FFBD0A156 ^ ((v323 << 23) ^ 0x2030B5C443800000) & 0x4F64D26FFB800000;
  v327 = v319 ^ v318 & 0xFFFFFDFFFFFFFFFFLL ^ v322;
  v328 = v326 - ((2 * v326) & 0x79DAEA0061589CC2) - 0x43128AFFCF53B19FLL;
  v329 = v320 ^ v328;
  v330 = (v320 ^ v328 ^ 0xA8F88F37E84E380CLL) & (v322 ^ 0xBF2BE154DDD26C2BLL);
  v331 = ((((v322 ^ 0x2763E3632C5D13FCLL) + (v322 & 0x98480237F18F7FD7 ^ 0xFFBFFDDCDFF2EC2BLL) + 1) | v322 & 0x98480237F18F7FD7 ^ 0x400223200D13D4) ^ 0x67B7FDC80E708028) & (v327 ^ 0xE6CB0C084CDE3BCLL);
  v332 = (((v328 ^ 0xBCED750030AC4E61) & (v324 ^ 0xCC9BB5994582FFB9))
        - ((2 * ((v328 ^ 0xBCED750030AC4E61) & (v324 ^ 0xCC9BB5994582FFB9))) & 0x75742E1590598B06)
        - 0x4545E8F537D33A7DLL) ^ v327;
  v333 = v327 ^ 0xF1934F3F7B321C43;
  v334 = v324 ^ 0xA245B032CB4987CFLL;
  v335 = ((v333 & (v324 ^ 0x33644A66BA7D0046))
        - ((2 * (v333 & (v324 ^ 0x33644A66BA7D0046))) & 0xFDF9CF243786BDD6)
        + 0x7EFCE7921BC35EEBLL) ^ v322;
  v336 = (((2 * ((v330 ^ 0x1A632588813D5437) & 0x75579D7D95FC9653 ^ 0x66B122B04F1D2E3DLL)) | 0xBC927CC2DE2800BALL)
        - ((v330 ^ 0x1A632588813D5437) & 0x75579D7D95FC9653 ^ 0x66B122B04F1D2E3DLL)
        + 0x21B6C19E90EBFFA3) ^ (v330 ^ 0x1A632588813D5437) & 0x75579D7D95BC9653;
  v337 = (v336 & 0x923D72F6AA8F46A5 ^ 0x120462260A8A4484) + (v336 & 0x6DC28D095570B95ALL ^ 0x2882090901303853);
  v338 = v329 ^ (v331 - ((2 * v331) & 0xE92E21A1008B91FALL) + 0x749710D08045C8FDLL) ^ 0x2390601897F40F0ELL;
  v339 = v328 ^ v334;
  v340 = (v329 ^ 0x570770C817B1C7F3) & (v328 ^ v334 ^ 0xD23370ABBE673617) ^ 0xB4D6A7CA4CE1263FLL;
  *((_QWORD *)&v300 + 1) = v332;
  *(_QWORD *)&v300 = v332 ^ 0xD5C1B8C2BE18469CLL;
  v341 = v332 ^ 0xDC0D2767429FD2B2 ^ ((v300 >> 1) - ((2 * (v300 >> 1)) & 0x13993F4BF90F285CLL) + 0x9CC9FA5FC87942ELL);
  v342 = v335 ^ v338;
  v343 = ((v335 ^ v338) >> 39) ^ 0xA64F27;
  v344 = v343 & 0x1F0549;
  v345 = v343 & 0x1E0FAB6;
  v346 = v339 ^ 0xF4464D27D57FA4AALL;
  v347 = v339 ^ 0x2DCC8F544198C9E8;
  v348 = --v337 ^ 0x26753D8C6B1892BDLL;
  v349 = v346 ^ v337;
  v350 = (v337 ^ 0x7D818801D44CAD49)
       - 0x5BF4B58DBF543FF5
       - ((2 * (v337 ^ 0x7D818801D44CAD49) + 2) & 0x481694E481578016);
  if (!*v228)
    v349 = v348;
  if (((v349 ^ 0xA40B4A7240ABC00BLL) & v347) != 0)
    v351 = v350 + 1;
  else
    v351 = v348;
  v352 = ((v351 ^ 0xA40B4A7240ABC00BLL) + v347) ^ v330 & 0xFFFFFFFFFFBFFFFFLL;
  v353 = ((v340 ^ v332) - ((2 * (v340 ^ v332)) & 0x2243F4A8E2690F12) - 0x6EDE05AB8ECB7877) ^ v334;
  v354 = v352 ^ v338;
  *((_QWORD *)&v356 + 1) = v352 ^ v338 ^ 0x41CCA;
  *(_QWORD *)&v356 = v352 ^ v338 ^ 0x9D2FB4127C00000;
  v355 = v356 >> 19;
  v357 = v342 ^ 0x4AD2E8C36B6C7CF4 ^ (((8 * v342) ^ 0x993C9DAA520BC1B8)
                                      - ((2 * ((8 * v342) ^ 0x993C9DAA520BC1B8)) & 0x33EAF6EC425A0980)
                                      + 0x19F57B76212D04C3);
  v358 = v357 & 0x251BE21573E0FAB6;
  v359 = v357 & 0xDAE41DEA8C1F0549 ^ v344 | v345;
  v360 = v352 ^ (v352 << 23) ^ (v352 >> 7) ^ ((v352 >> 41) | (v352 << 57));
  v361 = ((v259 ^ 0x13F499A7E5C250E1)
        + ((2 * v259) ^ 0xD816CCB0347B5E3DLL)
        + ((v259 ^ 0x13F499A7E5C250E1 | (v342 << 25)) ^ 0x6A9482F06E000000)
        + 1) ^ (v342 >> 61) ^ v358 ^ v359;
  *(_QWORD *)&v356 = __ROR8__(__ROR8__(v332, 48) & 0xFFFFFFFFFFC0FFFFLL ^ __ROR8__(v341, 42) ^ 0x3E9372F45911B3F0, 22);
  v362 = v360 ^ (v354 << 36) ^ (((v355 ^ v354) & 0x366C6BAAC00136BCLL ^ 0x406B0000001488 | ((v354 >> 28) ^ 0x9D2FB412) & 0xAC00136BCLL) ^ (v355 ^ v354 ^ 0x1488) & ((v354 >> 28) ^ 0x9D2FB412) & 0xAC00136BCLL | (v355 ^ v354) & 0xC99394553FFEC943 ^ ((v354 >> 28) ^ 0x9D2FB412) & 0x53FFEC943);
  v363 = v353 ^ (v353 << 47) ^ (v353 >> 10) ^ ((v353 >> 17) | (v353 << 54));
  v364 = v360 ^ v363;
  v365 = (v362 ^ 0xC198292309CDF95CLL) & (v361 ^ 2) ^ v360 ^ v363;
  v366 = v365 ^ 0x2ADE41BC21B6187ALL;
  v367 = ((v365 ^ 0x2ADE41BC21B6187ALL) & 0x4000000000000 ^ 0x7F5CFC9AFFF7BFFDLL)
       + 2 * ((v365 ^ 0x2ADE41BC21B6187ALL) & 0x4000000000000);
  v368 = ((v356 ^ (v332 << 58) ^ 0x7000000000000000)
        - 2 * ((v356 ^ (v332 << 58) ^ 0x7000000000000000) & 0x2868338E72C72BBFLL ^ v356 & 0x20)
        + 0x2868338E72C72B9FLL) ^ v361 ^ 0x2868338E72C72B9DLL;
  v369 = v362 ^ (v368 ^ 0x4598C6194733B07ELL) & (v361 ^ 0xFFFFFFFFFFFFFFFDLL);
  v151 = ((v367 - 0x7F5CFC9AFFF7BFFDLL) & (v369 ^ 0x3E64000000000000)) == 0;
  v370 = v363 & 0x965D39ED1DD8884ALL ^ 0x824D388409C08040 ^ (v360 ^ 0xDDE9B3D0CC2E86ABLL) & (v363 ^ 0x4AD9BE24378FBDD8);
  v371 = ((2 * v370) & 0xEC1069493301C40CLL) - v370 - 0x760834A49980E207;
  v372 = (((v368 ^ 0xBA6739E6B8CC4F81) & (v363 ^ 0xB52641DBC8704227))
        - ((2 * ((v368 ^ 0xBA6739E6B8CC4F81) & (v363 ^ 0xB52641DBC8704227))) & 0x50D0671CE58E573ELL)
        + 0x2868338E72C72B9FLL) ^ v361 ^ 0x2868338E72C72B9DLL;
  v373 = v368 ^ 0xB384F21DC2FB5A70 ^ v371;
  v374 = v371 ^ 0x9E3CBFB7A3715F1;
  v375 = (v362 ^ 0x3E67D6DCF63206A3) & (v364 ^ 0x16D3419E679B339);
  v376 = (v373 + v374 + 1) ^ ((v368 ^ 0xBA6739E6B8CC4F81) + 1);
  v377 = v368 ^ 0xA318DBA193DFEE93 ^ (v376 - ((2 * v376) & 0xCD003B71A9D8BDDALL) - 0x197FE2472B13A113);
  *((_QWORD *)&v356 + 1) = v369 ^ 0x27D6DCF63206A3;
  *(_QWORD *)&v356 = v369 ^ 0x3E40000000000000;
  v378 = v356 >> 54;
  v379 = (v375 - ((2 * v375) & 0xC6F8407CDF06EFC8) + 0x637C203E6F8377E4) ^ v363;
  v380 = v367 - 0x1100301258D29130;
  v381 = 0xEDB9C923A71CEECALL - v367;
  if (v151)
    v381 = v380;
  v382 = v378 ^ __ROR8__(v372, 54) ^ 0xB648E73E945CA90ALL;
  v383 = __ROR8__(v382, 10);
  v384 = v377 + v374;
  *((_QWORD *)&v385 + 1) = v383 ^ 0x11D0CD6A4A3F7BDBLL;
  *(_QWORD *)&v385 = v383 ^ 0x4000000000000000;
  v386 = v383 ^ __ROR8__(v382, 49) ^ (v385 >> 61);
  v387 = v379 ^ v384;
  *((_QWORD *)&v385 + 1) = v387 ^ 0x220;
  *(_QWORD *)&v385 = v387 ^ 0x6E9D3DC5C7C3F400;
  v388 = v385 >> 10;
  *((_QWORD *)&v385 + 1) = ~(_DWORD)v384;
  *(_QWORD *)&v385 = v384 ^ 0x9168644D1B60DBD0;
  v389 = v385 >> 1;
  v390 = v387 ^ 0xF39639EE3DB516EDLL ^ ((v388 ^ (v387 << 47) ^ 0xFB10000000000000)
                                      - 2
                                      * ((v388 ^ (v387 << 47) ^ 0xFB10000000000000) & 0x1D0B042BFA76E0FDLL ^ v388 & 0x30)
                                      - 0x62F4FBD405891F33);
  *(_QWORD *)&v385 = __ROR8__(v384, 6);
  v391 = v384 ^ 0x36F8918B6D01C6D4 ^ ((v389 ^ v385 ^ 0x4645A191346D836FLL)
                                      - ((2 * (v389 ^ v385 ^ 0x4645A191346D836FLL)) & 0x4F21EB8CECC23A0ALL)
                                      - 0x586F0A39899EE2FBLL);
  *((_QWORD *)&v385 + 1) = v365 ^ 0x16;
  *(_QWORD *)&v385 = v365 ^ 0x45EEDF0ED22DD980;
  v392 = v365 ^ 0xB8B4334E474AC7BALL ^ ((v385 >> 7) - ((2 * (v385 >> 7)) & 0xFAB5D8812ACE3C58) - 0x2A513BF6A98E1D4);
  v393 = (v387 >> 17) ^ 0x374E9EE2E3E1;
  v394 = (v365 << 23) ^ 0x876916ECCB000000;
  v395 = v392 & v394;
  v396 = v392 + v394;
  v397 = v390 + v393;
  v398 = v390 & v393;
  v399 = v396 - 2 * v395;
  v400 = v397 - 2 * v398 - 2 * ((v397 - 2 * v398) & 0x1CD880FF4AE93C2FLL ^ v397 & 1);
  v401 = v399 ^ (v365 >> 41);
  v402 = v400 - 0x63277F00B516C3D2;
  v403 = ((v400 - 0x63277F00B516C3D2) ^ 0x63277F00B516C3D1) & (v401 ^ 0x22F76F);
  v404 = (v403 & 0x40000 ^ 0x3FAFBB7FBEFEFF7FLL) + 2 * (v403 & 0x40000);
  v151 = ((v404 - 0x3FAFBB7FBEFEFF7FLL) & (v391 ^ v386 ^ 0x8544B39DFC9C0000)) == 0;
  v405 = ((v369 ^ 0x3E67D6DCF63206A3) - 0x6E5CCC88A7252ECDLL + v381) ^ v366 & 0xFFFBFFFFFFFFFFFFLL;
  v406 = (2 * (v391 ^ v386)) & 0xD3398F425FB99478 ^ 0xFDF6F8FDA6C66BFFLL;
  v407 = v391 ^ v386 ^ 0x8544B39DFC9CDA41;
  v408 = v405 ^ v401 ^ (v405 << 36) ^ ((v405 >> 28) | (v405 << 45)) ^ ((v405 >> 19)
                                                                     - ((v405 >> 18) & 0x1FAD9F2D48A0)
                                                                     - 0x2572502930695BB0);
  v409 = ((v391 & (v386 ^ 0x7ABB4C62036325BELL))
        - ((2 * (v391 & (v386 ^ 0x7ABB4C62036325BELL))) & 0x1E064E76E9FC3786)
        - 0x70FCD8C48B01E43DLL) ^ v408 ^ 0x558E88EDBB4A48FCLL;
  v410 = (v402 ^ 0x9CD880FF4AE93C2ELL) & ((v407 - 0x1663385ED02335C3 + v406) ^ 0x1663385ED02335C3);
  v411 = v409 ^ v386 ^ (v410 - ((2 * v410) & 0x360A269B69662EE0) + 0x1B05134DB4B31770);
  v412 = v402 ^ v401;
  v413 = v412 ^ 0x37A4CD8FF88E8CB5 ^ (((v408 ^ 0x25725029304BACC0) & (v386 ^ 0x8544B39DFC9CDA41))
                                      - ((2 * ((v408 ^ 0x25725029304BACC0) & (v386 ^ 0x8544B39DFC9CDA41))) & 0x56F89AE1648A8FE8)
                                      - 0x5483B28F4DBAB80CLL);
  v414 = (((2 * (v412 ^ 0x37A4CD8FF88E8CB5)) ^ 0xA907651E9B757017) + (v412 ^ 0x9CD880FF4ACBCB41)) & (v408 ^ 0xDA8DAFD6CFB4533FLL);
  v415 = v404 - 0x304B10400261F30;
  v416 = 0x7C5AC5FB7DD7DFCELL - v404;
  if (v151)
    v416 = v415;
  v417 = v407 - 0x3CAB0A7BBED8E04FLL + v416;
  v418 = v403 & 0xFFFFFFFFFFFBFFFFLL;
  v419 = v417 ^ v403 & 0xFFFFFFFFFFFBFFFFLL;
  v420 = v417 ^ ~v418;
  v421 = v411 ^ (v411 >> 61) ^ (v411 >> 39) ^ (8 * v411) ^ (v411 << 25);
  v422 = (v414 - 0x63277F00B516C3D2 + (~(2 * v414) | 0xC64EFE016A2D87A3) + 1) ^ v402;
  *((_QWORD *)&v423 + 1) = v413 ^ v409 ^ 0xAE24;
  *(_QWORD *)&v423 = v413 ^ v409 ^ 0x989E911977D00000;
  v424 = v413 ^ v409 ^ __ROR8__(v413 ^ v409, 28) ^ (v423 >> 19);
  *((_QWORD *)&v423 + 1) = v413 ^ 0x34;
  *(_QWORD *)&v423 = v413 ^ 0x32BF2066F5A25B80;
  v425 = v423 >> 7;
  *((_QWORD *)&v423 + 1) = v413 ^ 0x66F5A25BB4;
  *(_QWORD *)&v423 = v413 ^ 0x32BF200000000000;
  v426 = v425 ^ v413 ^ (v423 >> 41);
  v427 = ((v426 ^ 0x32BF2066F5A25BB4) + (v426 ^ v424 ^ 0x28D4ACC9F4641BF8) + 1) ^ ((v424 ^ 0x1A6B8CAF01C6404CLL) + 1);
  v428 = (v427 - ((2 * v427) & 0x16CB9258CF23D7B2) - 0x749A36D3986E1427) ^ v424;
  v429 = (v428 ^ 0x6EF1BA7C99A8546ALL)
       - 2 * ((v428 ^ 0x6EF1BA7C99A8546ALL) & 0x1D464076857C7FAELL ^ v428 & 4)
       - 0x62B9BF897A838056;
  v430 = (v428 ^ 0x6EF1BA7C99A8546ALL) & (v426 ^ 0x32BF2066F5A25BB4);
  v431 = (v420 << 63) & ~v419 ^ __ROR8__(v419, 6) ^ 0x2E31185A0AF7FC6CLL ^ ((((v419 >> 1) ^ 0x7357E9D1AB4433C5)
                                                                           - ((2 * ((v419 >> 1) ^ 0x7357E9D1AB4433C5)) & 0xCE08E96FA24B74F2)
                                                                           - 0x18FB8B482EDA4587) ^ v419 | (v420 << 63));
  v432 = v431 - ((2 * v431) & 0x196BAC9DD905863CLL);
  v433 = v431 & (v421 ^ 0x8B9FFDB1CA1179FELL);
  *((_QWORD *)&v423 + 1) = v422 ^ v419;
  *(_QWORD *)&v423 = v422 ^ v419 ^ 0xF7AD6319A4D1A000;
  v434 = v423 >> 10;
  *(_QWORD *)&v423 = __ROR8__(v422 ^ v419, 17);
  v435 = ((v434 ^ v423 ^ 0xD129FBD6B18CD268)
        - ((2 * (v434 ^ v423 ^ 0xD129FBD6B18CD268)) & 0x22C1A71891D3C0B0)
        + 0x1160D38C48E9E058) ^ v422 ^ v419;
  v436 = v426 ^ 0xAFF9601070DE241ELL;
  v437 = v421 ^ 0x78D5D400D96C451FLL;
  v438 = (v429 ^ v426 ^ 0xAFF9601070DE241ELL)
       + 2 * v430
       - ((2 * ((v429 ^ v426 ^ 0xAFF9601070DE241ELL) + 2 * v430)) & 0x33A4EFA7C5652DC6)
       + 0x19D277D3E2B296E3;
  v439 = ((v438 ^ 0xE62D882C1D4D691CLL) & (v421 ^ 0x7460024E35EE8601))
       - ((2 * ((v438 ^ 0xE62D882C1D4D691CLL) & (v421 ^ 0x7460024E35EE8601))) & 0xCF5685D99379B408);
  v440 = v435 ^ 0x8E0B20FA0F8E7A5;
  v441 = v426 & 0x3D;
  LOBYTE(v426) = 2 * v426;
  v442 = v426 & 0x5A;
  v443 = v426 & 0x7A ^ 0x68;
  v444 = (v432 + 0xCB5D64EEC82C31ELL) ^ v437;
  v445 = v437 ^ (((v435 ^ 0x720DB095EC38420BLL) & ~v444)
               - ((2 * ((v435 ^ 0x720DB095EC38420BLL) & ~v444)) & 0x196BAC9DD905863CLL)
               + 0xCB5D64EEC82C31ELL);
  v446 = v435 ^ 0x8E0B20FA0F8E7A5 ^ v436;
  v447 = v439 - 0x1854BD13364325FCLL;
  v448 = v444 ^ (v446 ^ 0xE7AB42ECC9BCDA04) & (v435 ^ 0x8DF24F6A13C7BDF4);
  v449 = v438 ^ (v433 - ((2 * v433) & 0x33A4EFA7C5652DC6) + 0x19D277D3E2B296E3);
  v450 = v447 ^ v446;
  v451 = v449 ^ v445;
  v452 = v447 ^ v446 ^ v449;
  v453 = ((v452 ^ 0x53160F4BEC64CD01) + (v452 ^ 0xACE9FAD6D2724F72 ^ (v452 >> 19)) + 1) ^ (((v452 >> 19) ^ 0xFFFFF59D3E168273)
                                                                                             + 1);
  v454 = (v438 ^ 0x19D277D3E2B296E3) & (((2 * v446) ^ 0xCF5685D99379B408)
                                        + (v446 ^ 0xE7AB42ECC9BCDA04)
                                        + ((4 * v446) ^ 0x6152F44CD90C97EFLL));
  v455 = ((v452 >> 19) ^ 0x4B03C5FFC8C0FAA9 ^ (v453 - ((2 * v453) & 0x96079F3A12530E4ALL) + 0x4B03CF9D09298725))
       + (v452 ^ 0x53160F4BEC64CD01);
  v456 = (v454 - ((2 * v454) & 0xF5DA053499814B5CLL) + 0x7AED029A4CC0A5AELL) ^ v440;
  v457 = v448 ^ 0x371115D972033C4DLL ^ (v456 - ((2 * v456) & 0x6E222BB2E406789ALL) + 0x371115D972033C4DLL);
  v458 = v457
       - ((2 * v457) & 0xFE4449C2E00C079ELL)
       + 0x7F2224E1700603CFLL
       - ((2 * (v457 - ((2 * v457) & 0xFE4449C2E00C079ELL) + 0x7F2224E1700603CFLL)) & 0xD4DC912479D484D2)
       - 0x1591B76DC315BD97;
  v459 = (v452 << 45) ^ 0x99A0200000000000;
  v460 = 0xA1EF4FAE9D82174 - (v455 & 0x1000000000000000 | 0x50F7A7D74EC10BALL);
  if ((v455 & 0x1000000000000000 & v459) == 0)
    v460 = v455 & 0x1000000000000000 | 0x50F7A7D74EC10BALL;
  v461 = v484[(-27
                                               * ((v451 ^ 0x1DB3027CD7398621) >> (v441 ^ 0x34u) >> ((v441 ^ 0xDB) + (v442 ^ 0x48) + ((v443 - 61) ^ 0xFEu) + 17))) ^ 0x31];
  v462 = v455 & 0xEFFFFFFFFFFFFFFFLL ^ (v452 >> 28);
  v463 = v462 ^ 0x91BA406E08EB1B11;
  v462 ^= 0x53160F4BEuLL;
  v464 = v459
       - 0x50F7A7D74EC10BALL
       + v460
       - ((2 * (v459 - 0x50F7A7D74EC10BALL + v460)) & 0xDC8B7F298CE820E8)
       + 0x6E45BF94C6741050;
  v465 = (v462 + (v463 ^ v464) + 1) ^ ((v464 ^ 0x91BA406B398BEFAFLL) + 1);
  v466 = ((v465 - ((2 * v465) & 0xDC8B7F298CE820A0) + 0x6E45BF94C6741050) ^ v464) + v462;
  v467 = v466 - ((2 * v466) & 0xBD4523A764D72A68) + 0x5EA291D3B26B9534;
  *((_QWORD *)&v468 + 1) = v450 ^ 0x37;
  *(_QWORD *)&v468 = v450 ^ 0x507ED11A8C40BF80;
  *((_BYTE *)v8 + 2) = (BYTE1(v467) ^ 0x95) - ((2 * (BYTE1(v467) ^ 0x95)) & 0x58) - 84;
  *(_BYTE *)(v215 + 3) = v467 ^ 0x34;
  v469 = v467 ^ (v452 << 36);
  v470 = ((unint64_t)(BYTE2(v467) ^ 0x6Bu) >> ((v256 >> 7) ^ 1) >> (((~(_BYTE)v256 & 0x80) != 0) ^ 7u)) | (2 * ((BYTE2(v467) ^ 0x6B) & 0x7F));
  v471 = v470 + 31;
  v472 = v470 + 1514143263 - 2 * v470 - 32;
  v473 = ((v471 & 1) + (v472 & 0x58 ^ 0x83267B0D) - 1) ^ 0x9B327A74;
  v474 = (v473 | 0x15C72947) - (v473 | 0xEA38D6B8) - 365373768;
  v475 = v458 ^ (v458 << 47) ^ (v458 >> 10) ^ (__ROR8__((((v458 << 54) ^ 0x9A40000000000000) >> 27) & 0x120000000 ^ __ROR8__(__ROR8__(__ROR8__((v458 >> 17) ^ 0x9321E5C302E10EALL, 44) ^ __ROR8__((v458 >> 17) & 0x1494EB98F160 ^ 0x9327F7F346F1EFFLL, 44) ^ 0xB4623C56D4295067, 20) ^ 0x95067B4623C56D42, 27) ^ 0x88875A1A2109C4C0, 37) ^ 0xD1084E2604443AD0 | (((v458 >> 17) ^ 0x9321E5C302E10EALL)+ ((v458 >> 17) & 0x6B6B14670E9FLL ^ 0xF6CDF5B7EFD9FF75)+ 1) ^ ((v458 << 54) ^ 0x9A40000000000000) & 0xF6C0000000000000);
  v476 = v472 & 0xFFFFFFA6 ^ 0x5A3FFDFF ^ -(v472 & 0xFFFFFFA6 ^ 0x5A3FFDFF) ^ ((v472 ^ 0xA5C00259)
                                                                             + (v474 ^ 0xDD32866)
                                                                             + 1);
  LODWORD(v462) = v476 & (v474 ^ 0xDD32866);
  LODWORD(v465) = v474 ^ 0xF5F361BE ^ (v476 - ((2 * v476) & 0xF04093B0) - 132101672);
  v477 = v448 ^ (v448 << 58) ^ (v448 >> 1) ^ ((v448 >> 6) | (v448 << 63));
  v478 = v247[(v465 + 2 * v462)];
  v221[25] = ((v466 - ((2 * (_DWORD)v466) & 0x64D72A68) - 1301572300) >> 24) ^ 0xB2;
  v221[16] = v478 ^ 0x90;
  v479 = v450 ^ __ROR8__(v450, 41) ^ (v468 >> 7);
  LOBYTE(v466) = v247[((v469 >> 31) & 0xFE | (v469 >> 39) & 1) ^ 0xDE];
  *((_BYTE *)v8 + 14) = (HIBYTE(v469) ^ 0x98) + (~(2 * (HIBYTE(v469) ^ 0x98)) | 0xA7) - 83;
  v221[13] = BYTE5(v469) ^ 0x41;
  v480 = v451 ^ v461 ^ (8 * v451) ^ (v451 >> 39);
  v481 = v480 ^ (v451 << 25);
  v228[4] = BYTE1(v480) ^ 0xD1;
  *((_BYTE *)v8 + 8) = v480 ^ 0x95;
  *v220 = v466 ^ 0x90;
  *((_BYTE *)v8 + 15) = (BYTE6(v469) ^ 0xEE) - ((2 * (BYTE6(v469) ^ 0xEE)) & 0x58) - 84;
  LOBYTE(v480) = v247[((v480 >> 15) & 0xFE | (v480 >> 23) & 1) ^ 0xC4];
  *((_BYTE *)v8 + 6) = v477 ^ 0xE9;
  v220[2] = HIBYTE(v481) ^ 9;
  v228[5] = BYTE4(v481) ^ 0x96;
  v228[6] = BYTE6(v481) ^ 0x85;
  v228[2] = v480 ^ 0x90;
  *(_BYTE *)v8 = (BYTE3(v481) ^ 0x2C) - 2 * ((BYTE3(v481) ^ 0x2C) & 0x2F ^ BYTE3(v481) & 3) - 84;
  *(_BYTE *)(v215 + 9) = BYTE5(v481) ^ 0x62;
  v482 = v222[(-103 * (BYTE1(v477) ^ 0x3A)) ^ 0x8ELL];
  v228[1] = (v475 ^ 0xCB605300186578F9) >> ((v361 ^ 0xFD) & 8) >> (v361 & 8);
  *(_BYTE *)(v215 + 24) = BYTE4(v477) ^ 0xE8;
  *((_BYTE *)v8 + 7) = (BYTE2(v475) ^ 0x65) - ((2 * (BYTE2(v475) ^ 0x65)) & 0x58) - 84;
  *(_BYTE *)(v215 + 17) = ((v477 ^ 0xE12A49C3) + (v477 & 0x87386 ^ 0xFFF7BE7D) + 1) >> 24;
  *v228 = BYTE2(v477) ^ 0x22;
  *((_BYTE *)v8 + 18) = (HIBYTE(v477) ^ 0x85) - 2 * ((HIBYTE(v477) ^ 0x85) & 0x2E ^ HIBYTE(v477) & 2) - 84;
  v220[1] = BYTE5(v477) ^ 0x4E;
  *((_BYTE *)v8 + 3) = v475 ^ 0x55;
  v228[3] = BYTE3(v475) ^ 0x18;
  v221[3] = (v482 + 12) ^ 0x6A;
  *(_BYTE *)(v215 + 25) = HIBYTE(v475) ^ 0xCB;
  *((_BYTE *)v8 + 10) = BYTE4(v475) - ((2 * BYTE4(v475)) & 0x58) - 84;
  *(_BYTE *)(v215 + 11) = BYTE5(v475) ^ 0x53;
  v475 >>= 48;
  result = (v475 ^ 0x60) & 0x2E;
  *(_BYTE *)(v215 + 12) = BYTE6(v477) ^ 0x82;
  *((_BYTE *)v8 + 11) = (v475 ^ 0x60) - 2 * ((v475 ^ 0x60) & 0x2E ^ v475 & 2) - 84;
  LOBYTE(v466) = v222[(-103 * (v479 ^ 0xDF)) ^ 0x8ELL];
  *((_BYTE *)v8 + 20) = (BYTE2(v479) ^ 0xE8) - 2 * ((BYTE2(v479) ^ 0xE8) & 0x2E ^ BYTE2(v479) & 2) - 84;
  *((_BYTE *)v8 + 4) = (BYTE4(v479) ^ 0x45) - ((2 * (BYTE4(v479) ^ 0x45)) & 0x58) - 84;
  *(_BYTE *)(v215 + 29) = BYTE1(v479) ^ 0x80;
  *(_BYTE *)(v215 + 19) = (v466 + 12) ^ 0x6A;
  *((_BYTE *)v8 + 17) = (BYTE3(v479) ^ 0x57) - ((2 * (BYTE3(v479) ^ 0x57)) & 0x58) - 84;
  LOBYTE(v466) = v247[(((v479 ^ 0xDD38F14557E880DFLL) >> (v353 & 0x28 ^ 0x20) >> (v353 & 0x28 ^ 8) >> 7) & 1 | (2 * (((v479 ^ 0xDD38F14557E880DFLL) >> (v353 & 0x28 ^ 0x20) >> (v353 & 0x28 ^ 8)) & 0x7F))) ^ 0x59];
  *((_BYTE *)v8 + 5) = (BYTE6(v479) ^ 0x38) - 2 * ((BYTE6(v479) ^ 0x38) & 0x2E ^ BYTE6(v479) & 2) - 84;
  *((_BYTE *)v8 + 19) = (HIBYTE(v479) ^ 0xDD) - 2 * ((HIBYTE(v479) ^ 0xDD) & 0x2E ^ HIBYTE(v479) & 2) - 84;
  v221[20] = v466 ^ 0x90;
  *(_DWORD *)(*(_QWORD *)((char *)v487 - 4) + 20) = v485 + 1;
  *(_QWORD *)a1 = v469 ^ 0xA2FF6995D7FF6D33;
  return result;
}

void fd3fa4R8(int a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_18CA88B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  int v21;
  int v22;

  v22 = -7 * v21 - 191875505 * (v21 ^ 1) + 8;
  *(&a21 + 16 * (_QWORD)&a21 - 144 * (((unint64_t)&a9 - 0x36F214C141B3E0AELL) / 9) - 0x6F214C141B3E10D1) = *((_BYTE *)*(&off_1E2538DB0 + v22 + 17) + 5) ^ *(_BYTE *)(a2 + 15) ^ 0xD1 ^ *((_BYTE *)*(&off_1E2538DB0 + v22 + 22) + 16) ^ *((_BYTE *)*(&off_1E2538DB0 + v22 + 12) + 12);
  return ((uint64_t (*)(void))((char *)&loc_18CA88C54 + *(int *)(a5 + 4 * v22)))();
}

void sub_18CA88C50()
{
  JUMPOUT(0x18CA88BDCLL);
}

uint64_t sub_18CA88C60()
{
  return 4294925273;
}

uint64_t sub_18CA8C5A4(__SecKey *a1, const UInt8 *a2, CFIndex length, UInt8 **a4, unsigned int *a5)
{
  const __CFData *v8;
  const __CFData *v9;
  const __CFData *v10;
  unsigned int v11;
  UInt8 *v12;
  UInt8 *v13;
  uint64_t v14;
  CFErrorRef error;
  CFRange v17;

  error = 0;
  v8 = CFDataCreate(0, a2, length);
  v9 = SecKeyCreateSignature(a1, (SecKeyAlgorithm)*MEMORY[0x1E0CD6DF8], v8, &error);
  if (!v9)
  {
    v14 = 4294925247;
    if (!v8)
      return v14;
    goto LABEL_8;
  }
  v10 = v9;
  v11 = CFDataGetLength(v9);
  v12 = (UInt8 *)malloc_type_malloc(v11, 0xF748375AuLL);
  if (v12)
  {
    v13 = v12;
    v17.length = CFDataGetLength(v10);
    v17.location = 0;
    CFDataGetBytes(v10, v17, v13);
    v14 = 0;
    *a4 = v13;
    *a5 = v11;
  }
  else
  {
    v14 = 4294925268;
  }
  CFRelease(v10);
  if (v8)
LABEL_8:
    CFRelease(v8);
  return v14;
}

uint64_t sub_18CA8C694()
{
  NSObject *v0;
  const __CFString **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  dispatch_time_t v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  void (*v11)(uint64_t);
  uint64_t v12;
  const __CFString *v13;
  uint64_t v14;
  _QWORD v15[3];
  _QWORD v16[4];

  v16[3] = *MEMORY[0x1E0C80C00];
  v7 = 0;
  v8 = &v7;
  v9 = 0x3052000000;
  v10 = sub_18CA8C868;
  v11 = sub_18CA8C878;
  v12 = 0;
  v0 = dispatch_semaphore_create(0);
  if (v0)
  {
    if (getenv("RunningTestSUInfoRefetch"))
    {
      v15[0] = CFSTR("IgnoreExistingCollection");
      v16[0] = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedChar:", 1);
      v16[1] = MEMORY[0x1E0C9AAB0];
      v15[1] = CFSTR("scheduleCollectionForCurrentBuild");
      v15[2] = CFSTR("NetworkTimeoutInterval");
      v16[2] = &unk_1E25AEF30;
      v1 = (const __CFString **)v15;
      v2 = v16;
      v3 = 3;
    }
    else
    {
      v13 = CFSTR("scheduleCollectionForCurrentBuild");
      v14 = MEMORY[0x1E0C9AAB0];
      v1 = &v13;
      v2 = &v14;
      v3 = 1;
    }
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v2, v1, v3);
    MAEPerformCollectionWithCompletion();
    v5 = dispatch_time(0, 70000000000);
    v4 = 4294924355;
    if (!dispatch_semaphore_wait(v0, v5))
    {
      if (v8[5])
        v4 = 4294924355;
      else
        v4 = 0;
    }
  }
  else
  {
    v4 = 4294925268;
  }
  dispatch_release(v0);
  _Block_object_dispose(&v7, 8);
  return v4;
}

void sub_18CA8C850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18CA8C868(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void sub_18CA8C878(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

intptr_t sub_18CA8C884(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_18CA8C898(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 32), *(const void **)(a2 + 32), 3);
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 8);
}

void sub_18CA8C8D4(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 8);
  _Block_object_dispose(*(const void **)(a1 + 32), 3);
}

void sub_18CA8C904(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_18CA8C9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;

  v10 = v9 + v6;
  if (a6)
    v11 = v8 == (v9 ^ 0x68D9B4BF) - 1818;
  else
    v11 = 1;
  v12 = !v11;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8 * ((2027 * v12) ^ v10))
                                                                              - 8))(a1, a2, a3, a4, a5);
}

uint64_t sub_18CA8C9F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;

  v10 = v9 + v6;
  if (a6)
    v11 = v8 == 0;
  else
    v11 = 1;
  v12 = !v11;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * (((((v9 + 1632529369) & 0x35D7E79B)
                                                                                             + 209)
                                                                                            * v12) ^ v10))
                                                                              - 8))(a1, a2, a3, a4, a5);
}

uint64_t sub_18CA8CA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  int v12;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (v12 | (32 * (a11 != 1)))))(a1, a2, a3, a4, a5);
}

uint64_t sub_18CA8CAA8()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((v2 - 945) ^ (1906 * (v1 ^ 1))))
                            + v3
                            - ((v2 + 1776020643) & 0xFEFDBFE7)))();
}

void sub_18CA8CAE4(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;

  v12 = a1;
  v13 = 0;
  v4 = 562267567 * (((&v7 | 0xBF346368) - (&v7 & 0xBF346368)) ^ 0xACAE9F2B);
  v15 = v4 ^ 0x3C8333C8;
  v16 = (v2 + 868) ^ v4;
  v17 = 0x483CF90335B0B89FLL;
  v10 = 0;
  v11 = &v6;
  v8 = v1;
  v9 = &v5;
  v7 = (char *)&v5 + 4;
  sub_18CA8D39C();
  *(_DWORD *)(v3 + 28) = v14;
}

void sub_18CA8CC60(uint64_t a1)
{
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  const UInt8 *v4;
  CFIndex v5;
  uint64_t v6;
  UInt8 *v7;
  unsigned int v8;

  v1 = 755310587 * ((a1 + 704913948 - 2 * (a1 & 0x2A04221C)) ^ 0x6B0879D5);
  v2 = *(_DWORD *)(a1 + 8) - v1;
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(const UInt8 **)(a1 + 16);
  v5 = *(_DWORD *)(a1 + 48) ^ v1;
  v7 = 0;
  v8 = 0;
  v6 = qword_1E2538EC0[v2 | (16
                           * (sub_18CA8C5A4((__SecKey *)(*(_QWORD *)(v3 - 0x6262E0568D5240A8) - 0x30B75577B6EAB23ELL), v4, v5, &v7, &v8) != 0))]- ((v2 - 1342710291) & 0x50081DFE ^ 0x1F2);
  __asm { BR              X9 }
}

uint64_t sub_18CA8CD50@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((a4 != 0) * (((a1 + 532) | 0x200) ^ 0x12A)) ^ a1))
                            - ((a1 - 1485734520) & 0x588E868B ^ 0x60ELL)))();
}

void sub_18CA8CDA0(void *a1)
{
  uint64_t v1;
  int v2;

  free(a1);
  *(_DWORD *)(v1 + 24) = v2;
}

uint64_t sub_18CA8D328(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  int v6;
  int v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;
  int v11;

  v1 = 516615401 * (result ^ 0x88BC887B73630632);
  v2 = *(_QWORD *)(result + 16) ^ v1;
  v3 = *(_DWORD *)(result + 24) ^ v1;
  v4 = *(_DWORD *)result - v1;
  v5 = *(_QWORD *)(result + 32) - v1;
  v6 = *(_DWORD *)(result + 4) + v1;
  v7 = *(_DWORD *)(result + 44) - v1;
  v8 = v5 == v2;
  v9 = v5 > v2;
  v10 = v8;
  if ((v4 & 1) == 0)
    v9 = v10;
  if (v9)
    v11 = v6;
  else
    v11 = v3;
  *(_DWORD *)(result + 8) = v11 ^ v7;
  return result;
}

void sub_18CA8D39C()
{
  uint64_t v0;
  int v1;
  unsigned int v2;

  v0 = MEMORY[0x1E0C80A78]();
  v1 = 562267567 * ((~(_DWORD)v0 & 0xCACA2F0 | v0 & 0xF3535D0F) ^ 0x1F365EB3);
  v2 = ((*(_DWORD *)(v0 + 64) ^ v1) + 1104762671) & 0xBE26A337;
  __asm { BR              X13 }
}

uint64_t sub_18CA8D5DC()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v0 >= ((v1 - 921658553) & 0x36EF65FB ^ 0x6A9584DB);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((4 * v3) | (16 * v3)) ^ v1)) - 8))();
}

uint64_t sub_18CA8D624()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (25 * (v0 >= 1883888767))))
                            - (v1 - 254)
                            - (v1 ^ 0x102u)
                            + 392))();
}

uint64_t sub_18CA8D664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * (((v8 == a7 + v7) * ((39 * (a7 ^ 0xC3)) ^ 0x593)) ^ a7))
                                                                                                - 4))(a1, a2, a3, a4, a5, a6, 4294924373);
}

uint64_t sub_18CA8D6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v7
                                                                                                 + 8
                                                                                                 * (((((*(_QWORD *)STACK[0x650] == 0) ^ (43 * (v6 ^ 0x5C))) & 1) * (((v6 + 1326) | 0x40) ^ 0x481)) ^ v6)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_18CA8D6EC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((188 * (a1 ^ 0x386) - 626) | 0x100) ^ 0x381)
                                          * (*(_QWORD *)(v1 + 48) == 0)) ^ a1))
                            - 4))();
}

void sub_18CA8D72C()
{
  uint64_t v1;

  *(_DWORD *)(v1 + 56) = -1279805853;
  __asm { BR              X10 }
}

uint64_t sub_18CA90D84()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + 72) = 286036353;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_QWORD *)(v0 + 120) != 0x6262E0568D5240A8)
                                * (444 * (((v1 - 868) | 0x4CC) ^ 0x6CF) - 265)) ^ v1)))();
}

uint64_t sub_18CA91008@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((a1 + 843) * (v2 != v1)) ^ a1)) - 138 * (a1 ^ 0x373u) + 1514))();
}

uint64_t sub_18CA9103C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((*(_QWORD *)(v1 - 0x6262E0568D5240A0) == 0) ^ v0))
                            - ((v0 + 223) ^ ((v0 - 941) | 0x48Cu) ^ 0xCLL)))();
}

uint64_t sub_18CA91080()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((*(_QWORD *)(v1 - 0x6262E0568D524090) == 0) | (8
                                                                                  * (*(_QWORD *)(v1
                                                                                               - 0x6262E0568D524090) == 0)) | (v0 - 935))))();
}

uint64_t sub_18CA910B0(void *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  free(a1);
  free((void *)(v3 - 0x6262E0568D5240A8));
  *(_QWORD *)(v2 + 120) = 0x6262E0568D5240A8;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1287
                                             * (((*(_QWORD *)(v2 + 104) == 0) ^ (5
                                                                                                  * (((v1 + 115) | 0x32) ^ 0x5D))) & 1)) ^ (v1 - 1506)]
                            - 4))();
}

uint64_t sub_18CA910BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * ((1954 * ((v7 & (v7 ^ a7) | (v7 - a7) & ~(v7 ^ a7)) >= 0)) ^ ((v7 ^ (v9 - 378)) + v7 + ((v7 - v8) ^ 0x48F04B67))))
                                                                                                - 8))(a1, a2, a3, a4, a5, a6, 4294925295);
}

uint64_t sub_18CA91114()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  STACK[0x688] = 0;
  v3 = (uint64_t (*)(void))(*(_QWORD *)(v2
                                     + 8 * ((1946 * (v1 == v0 + 1097664314 + ((v0 - 1074594600) & 0xFE9FF6DF))) ^ v0))
                         - 8);
  LODWORD(STACK[0x680]) = 44010;
  STACK[0x678] = STACK[0x628];
  return v3();
}

uint64_t sub_18CA91174(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  char v4;
  uint64_t v5;

  STACK[0x820] = STACK[0x688];
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (int)((1141
                                               * (((((((a4 + 1097665145) | 0x60D) - 1390) ^ 0xBE92F718) - (v4 & 1) - a4) | (a4 - (((((a4 + 1097665145) | 0x60D) - 1390) ^ 0xBE92F718) - (v4 & 1)))) >> 31)) ^ (a4 + 1097665370)))
                            - 12))();
}

uint64_t sub_18CA911E0()
{
  int v0;
  int v1;
  unsigned int v2;
  size_t v3;
  void *v4;

  v2 = ((v0 << ((v1 ^ 0x92) + 19 * (v1 ^ 0x79) + 98)) & 0x2D5F1BA0) + (v0 & 0xFFFFFFF0 ^ 0x96AF8DDE);
  STACK[0x960] = 0x5C13350084191667;
  LODWORD(STACK[0x8B4]) = 2046997083;
  LODWORD(STACK[0x660]) = v2;
  v3 = v2 + 1766879794;
  STACK[0x668] = v3;
  v4 = malloc_type_malloc(v3, 0x68517D9BuLL);
  STACK[0x670] = (unint64_t)v4;
  return ((uint64_t (*)(void))qword_1E2538EC0[(1933 * (v4 != 0)) ^ v1])();
}

uint64_t sub_18CA91290()
{
  int v0;
  uint64_t (*v1)(void);

  v1 = (uint64_t (*)(void))(qword_1E2538EC0[((malloc_type_malloc(STACK[0x668], 0x2DFD1FE4uLL) != 0)
                                          * (((v0 - 1414597335) & 0x54510BFC) + 252)) ^ v0]
                         - 8);
  return v1();
}

uint64_t sub_18CA912E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (v4 ^ (1305 * (v3 != 0))))
                            - ((167 * (v4 ^ 0x3FDu)) ^ 0x34FLL)))();
}

uint64_t sub_18CA91360@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  _BOOL4 v10;
  unint64_t v11;

  v10 = v8 > 0xB33E00DD;
  v11 = a3 + v4 + ((unint64_t)(v4 < v3) << 32);
  *(_BYTE *)(v9 + v11) = ((*(_BYTE *)(a2 + v11) << ((v6 - 55) ^ 0xAB)) & 0x72) + (*(_BYTE *)(a2 + v11) ^ 0x39);
  if (v10 == v4 - 249188345 < v5)
    v10 = v4 - 249188345 < v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((19 * !v10) ^ v6)) - 12))();
}

uint64_t sub_18CA913FC@<X0>(uint64_t a1@<X2>, unint64_t a2@<X4>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  _BOOL4 v8;

  v6 = (v4 + 1276985653) & 0xEAABBB63;
  STACK[0x608] = a2;
  *(_BYTE *)(a2 + ((unint64_t)(v5 < v3 + v6 - 835) << 32) + a3 + v5 - 0x353232397341B08CLL) = -71;
  v7 = LODWORD(STACK[0x660]) + 1830568236;
  v8 = v5 - 1473282081 < v7;
  if (v7 < 0x3CBCEFA != v5 - 1473282081 < 0x3CBCEFA)
    v8 = v7 < 0x3CBCEFA;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((11 * !v8) ^ v6)) - (v6 ^ 0x34BLL)))();
}

void sub_18CA9142C()
{
  JUMPOUT(0x18CA91788);
}

uint64_t sub_18CA914C4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (a1 ^ (2
                                               * (((*(_DWORD *)(v1 + 112) == 1494274718) ^ (a1 - 102) ^ 0x79) & 1u))))
                            - 4))();
}

uint64_t sub_18CA914FC()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  _BYTE *v4;

  STACK[0x748] = (unint64_t)&STACK[0x40AF9B25784C1C2D];
  STACK[0x990] = (unint64_t)&STACK[0xC28];
  STACK[0x8A0] = 224;
  STACK[0x6D8] = (unint64_t)&STACK[0xBE4];
  v3 = (v0 + 1885773067) & 0x8F996459;
  v4 = sub_18CBC7C80(&STACK[0xBE4], 0, 0x40uLL);
  STACK[0x878] = v2 + 104;
  STACK[0x770] = 0;
  LODWORD(STACK[0x8DC]) = v1;
  return ((uint64_t (*)(_BYTE *))(qword_1E2538EC0[(178
                                                           * ((int)(v3 ^ 0x45C01460) >= (int)((((v3 ^ 0x13B) - 640) ^ 0x320)
                                                                                            + 1170214517))) ^ v3 ^ 0x13B]
                                          - 12))(v4);
}

uint64_t sub_18CA915F8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v1 >= v2 + (v0 ^ 0x3C73702E) - 1014198538 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v4 | (8 * v4)) ^ v0)) - 12))();
}

uint64_t sub_18CA91630()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((966 * (v0 == ((5 * (v2 ^ 0x154)) ^ (v1 + 1109)))) ^ v2)) - 8))();
}

uint64_t sub_18CA91664()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v2 + 515) * (v0 >= v1 + 449)) ^ v2)) - 8))();
}

uint64_t sub_18CA9168C()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  int v4;
  char v5;

  v4 = v0 - 1014198538;
  v5 = arc4random();
  *((_BYTE *)&STACK[0xBB0] + v3) = (v5 + 61 - ((2 * v5) & 0x7A)) ^ 0xC8;
  return ((uint64_t (*)(void))(qword_1E2538EC0[((v4 + 173) | 0x83) ^ ((v3 == 15) * v1)]
                            - ((((((v4 + 173) | 0x83) - 755) | 8u) + 1104) ^ v2)))();
}

void sub_18CA9171C()
{
  JUMPOUT(0x18CA915B0);
}

uint64_t sub_18CA91728(void *a1)
{
  uint64_t v1;
  int v2;

  free(a1);
  return ((uint64_t (*)(void))qword_1E2538EC0[(*(_QWORD *)(v1 - 0x6262E0568D524090) == 0) | (8
                                                                                              * (*(_QWORD *)(v1 - 0x6262E0568D524090) == 0)) | (v2 - 935)])();
}

uint64_t sub_18CA917E4(void *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v4 = (v1 + 85) | 0x32;
  free(a1);
  *(_QWORD *)(v2 + 104) = 0;
  *(_DWORD *)(v2 + 112) = 1494274718;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((*(_QWORD *)(v2 + 136) != 0)
                                               * (((v4 + 1937937245) & 0x8C7D6BFA) + 1656)) ^ v4))
                            - 8))();
}

void sub_18CA91844(void *a1)
{
  uint64_t v1;

  free(a1);
  *(_QWORD *)(v1 + 136) = 0;
  *(_DWORD *)(v1 + 144) = 495404763;
  *(_DWORD *)v1 = 2023518720;
  JUMPOUT(0x18CA918ACLL);
}

uint64_t sub_18CA918F8()
{
  int v0;
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v1 & 1 ^ 0x8E44B413) & ((v0 ^ 0x29C) - 2080103743))
                                          + (v0 ^ 0xCE4D2751 ^ v1 & 1 ^ 0x8E44B413)
                                          + 294666848
                                          - ((v0 ^ 0xCE4D2751 ^ v1 & 1 ^ 0x8E44B413) & 0x4009008D) != -1785399693) ^ v0))
                            - 4))();
}

uint64_t sub_18CA91980()
{
  int v0;
  unsigned int v1;
  _BOOL4 v2;

  v1 = ((LODWORD(STACK[0x9E4]) - 546355592 + ((v0 + 1188019835) & 0xB93046FF) - 1741) & 0xFFFFFFF0 ^ 0x6DE2FFFB)
     + ((v0 - 607781234) & (2 * (LODWORD(STACK[0x9E4]) - 546355592 + ((v0 + 1188019835) & 0xB93046FF) - 1741)));
  STACK[0x778] = 0x5C13350084191667;
  LODWORD(STACK[0xA8C]) = 2046997083;
  v2 = malloc_type_malloc(v1 - 1843593195, 0x68517D9BuLL) == 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(43 * v2) ^ v0] - 4))();
}

uint64_t sub_18CA91A3C()
{
  int v0;
  size_t v1;
  _BOOL4 v2;

  v2 = malloc_type_malloc(v1, 0x2DFD1FE4uLL) != 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1332 * v2) ^ (v0 + 186)]
                            - ((v0 + 186) ^ 0x655 ^ (v0 + 450157947) & 0xE52B27FF ^ 0x290)))();
}

uint64_t sub_18CA91AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;

  return (*(uint64_t (**)(void))(a5 + 8 * ((692 * (((v6 == 546355592) ^ (v5 + 116)) & 1)) ^ v5)))();
}

uint64_t sub_18CA91B04@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  _BOOL4 v7;

  v6 = a2 + 1860990888 + ((unint64_t)(v2 > 0x6EEC77A8) << 32);
  *(_BYTE *)(v4 + v6) = (*(_BYTE *)(STACK[0x648] + v6) ^ 0x7D) + ((2 * *(_BYTE *)(STACK[0x648] + v6)) & 0xFB) - 68;
  v7 = (v5 + 174257720) > 0x2AF3AFC1;
  if ((v5 + 174257720) < 0x2AF3AFC0)
    v7 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((403 * !v7) ^ (v3 - 1498))) - 4))();
}

void sub_18CA91BB0()
{
  JUMPOUT(0x18CA91B40);
}

uint64_t sub_18CA91BB8()
{
  int v0;
  int v1;
  _BOOL4 v2;

  STACK[0x810] = 0x5C13350084191667;
  LODWORD(STACK[0x998]) = 2046997083;
  v2 = malloc_type_malloc(((v1 - 546355592 + ((v0 + 1761581363) & 0x970064C3) - 129) & 0xFFFFFFF0 ^ 0x2B75BAEE)+ ((2 * (v1 - 546355592 + ((v0 + 1761581363) & 0x970064C3) - 129)) & 0x56EB75C0)- 729135838, 0x68517D9BuLL) == 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1475 * ((((v0 - 122) ^ v2) & 1) == 0)) ^ v0] - 12))();
}

uint64_t sub_18CA91C7C(unint64_t a1)
{
  int v1;
  int v2;
  size_t v3;
  uint64_t (*v4)(void);

  LODWORD(STACK[0x688]) = v2;
  STACK[0x690] = a1;
  STACK[0x680] = v3;
  v4 = (uint64_t (*)(void))(qword_1E2538EC0[(1670
                                          * (((malloc_type_malloc(v3, 0x2DFD1FE4uLL) == 0) ^ ((((v1 | 0xA0) + 29) ^ 0x45) + 1)) & 1)) ^ (v1 | 0xA0)]
                         - 8);
  return v4();
}

uint64_t sub_18CA91CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * (v4 ^ 0x2090BB5E ^ (1259
                                                            * ((((v4 - 546354594) ^ 0x52B ^ (((v5 - v4) | (v4 - v5)) >> 31)) & 1) == 0))))
                            - 4))();
}

uint64_t sub_18CA91D68@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  int v7;
  unint64_t v8;
  _BOOL4 v9;

  v6 = v3 - 72;
  v7 = v3 - 496;
  v8 = a2 + 200571139 + ((unint64_t)(v2 > 0xBF47903) << 32);
  *(_BYTE *)(v4 + v8) = (v6 ^ *(_BYTE *)(STACK[0x648] + v8) ^ 0x78) + ((2 * *(_BYTE *)(STACK[0x648] + v8)) & 0xFB) + 60;
  v9 = (v5 + 1655910843) > 0x8343EB44;
  if ((v5 + 1655910843) < 0x8343EB43)
    v9 = 1;
  return (*(uint64_t (**)(void))(a1 + 8 * ((2 * !v9) | (32 * !v9) | v7)))();
}

void sub_18CA91E1C()
{
  JUMPOUT(0x18CA91DA8);
}

uint64_t sub_18CA91E24()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  _BOOL4 v7;

  v2 = v0 + 668;
  LOBYTE(STACK[0xBC0]) = LOBYTE(STACK[0xBB0]) ^ 0xF5;
  LOBYTE(STACK[0xBC1]) = LOBYTE(STACK[0xBB1]) ^ 0xF5;
  LOBYTE(STACK[0xBC2]) = LOBYTE(STACK[0xBB2]) ^ 0xF5;
  LOBYTE(STACK[0xBC3]) = LOBYTE(STACK[0xBB3]) ^ 0xF5;
  LOBYTE(STACK[0xBC4]) = LOBYTE(STACK[0xBB4]) ^ 0xF5;
  LOBYTE(STACK[0xBC5]) = (v0 - 100) ^ LOBYTE(STACK[0xBB5]) ^ 0x51;
  LOBYTE(STACK[0xBC6]) = LOBYTE(STACK[0xBB6]) ^ 0xF5;
  LOBYTE(STACK[0xBC7]) = LOBYTE(STACK[0xBB7]) ^ 0xF5;
  LOBYTE(STACK[0xBC8]) = LOBYTE(STACK[0xBB8]) ^ 0xF5;
  LOBYTE(STACK[0xBC9]) = LOBYTE(STACK[0xBB9]) ^ 0xF5;
  LOBYTE(STACK[0xBCA]) = LOBYTE(STACK[0xBBA]) ^ 0xF5;
  LOBYTE(STACK[0xBCB]) = LOBYTE(STACK[0xBBB]) ^ 0xF5;
  LOBYTE(STACK[0xBCC]) = LOBYTE(STACK[0xBBC]) ^ 0xF5;
  LOBYTE(STACK[0xBCD]) = LOBYTE(STACK[0xBBD]) ^ 0xF5;
  LOBYTE(STACK[0xBCE]) = LOBYTE(STACK[0xBBE]) ^ 0xF5;
  LOBYTE(STACK[0xBCF]) = LOBYTE(STACK[0xBBF]) ^ 0xF5;
  LODWORD(STACK[0xC88]) = -366034007;
  STACK[0xC68] = 0x6205527E24145F56;
  STACK[0xC70] = 0x6396BFB8EB1E3730;
  STACK[0xC78] = 0x9C69404714E1C8CFLL;
  LODWORD(STACK[0xC80]) = 1334441409;
  LODWORD(STACK[0xC84]) = 1279171888;
  v3 = STACK[0x990];
  v4 = STACK[0x9E4];
  v5 = *(_QWORD *)(v1 + 8 * v0) - 4;
  v6 = STACK[0x648];
  STACK[0x918] = v5;
  STACK[0xA98] = v3;
  LODWORD(STACK[0x914]) = v4;
  STACK[0x9A0] = v6;
  v7 = v4
     - 1064500308
     + ((2 * *(_DWORD *)(v3 + 68)) & 0x3A ^ 0x38)
     + (*(_DWORD *)(v3 + 68) & 0x3F ^ 0x5EFE4FE3)
     + ((v2 + 476) ^ 0x2Cu)
     - 1075581437 > 0xFFFFFFBF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((2 * v7) | (8 * v7)) ^ v2)) - 4))();
}

uint64_t sub_18CA91F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (((a7 == v8) * (((v7 - 1713) | 0x143) ^ 0x279)) ^ (v7 - 1539)))
                                                                                               - 4))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_18CA91FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v8
                                                                                                 + 8
                                                                                                 * ((799 * (((v6 - 349) & *(_DWORD *)(v7 + 96)) != 0)) ^ v6)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_18CA91FD4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((v0 + 1390) ^ 0x6D4) * ((__int16)LODWORD(STACK[0x680]) < -21510)) ^ (v0 + 848)))
                            - 8))();
}

uint64_t sub_18CA92010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  unsigned __int16 v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * (((v7 == ((unsigned __int16)a7 ^ 0xAA95)) * ((2 * a7) ^ 0x619)) ^ a7)))(a1, a2, a3, a4, a5, a6, 4294924368);
}

uint64_t sub_18CA92044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  STACK[0xA08] = (unint64_t)&STACK[0x40AF9B25784C1C1D];
  STACK[0x8A0] = 208;
  v9 = *(_QWORD *)(v7 + 104);
  STACK[0x908] = v7 + 104;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((1181 * (v9 != 0)) ^ v6 ^ 0x274))
                                                                                                - ((((v6 ^ 0x274) - 197) | 0x120u) ^ ((v6 ^ 0x473u) - 1452))))(a1, a2, a3, a4, a5, a6, 4294924366);
}

uint64_t sub_18CA920BC@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(qword_1E2538EC0[((((*(_DWORD *)(v1 + 112) < 1494274782) ^ ((a1 ^ 0xC3) - 41)) & 1)
                                             * ((a1 ^ 0x298) - 930)) ^ a1 ^ 0x3C3]
                            - 8))();
}

uint64_t sub_18CA92110()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(qword_1E2538EC0[(92 * (v0 == v1 + ((v2 + 1412615184) & 0xABCD36FF) - 1086 - 591)) ^ v2]
                            - 12))();
}

uint64_t sub_18CA9215C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  _BOOL4 v6;

  v6 = (v5 + 731383719) < 0x4C28C12F;
  *(_BYTE *)(v4 + a2 + 969041580 + ((unint64_t)(v2 > 0x39C266AC) << 32)) = (*(_BYTE *)(STACK[0x648]
                                                                                            + a2
                                                                                            + 969041580
                                                                                            + ((unint64_t)(v2 > 0x39C266AC) << 32)) ^ 0xFD)
                                                                                + ((2
                                                                                  * *(_BYTE *)(STACK[0x648]
                                                                                             + a2
                                                                                             + 969041580
                                                                                             + ((unint64_t)(v2 > 0x39C266AC) << 32))) & 0xFB)
                                                                                + 60;
  if ((v5 + 731383719) >= 0x4C28C12F)
    v6 = (v5 + 731383719) > 0x4C28C130;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((419 * !v6) ^ (v3 - 59))) - 12))();
}

void sub_18CA92200()
{
  JUMPOUT(0x18CA92194);
}

void sub_18CA92208()
{
  JUMPOUT(0x18CA92218);
}

uint64_t sub_18CA922D8@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  unsigned int v2;
  unsigned int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  _BOOL4 v10;
  uint64_t v11;

  v10 = v3 < v8;
  v11 = (v4 + 1);
  *(_BYTE *)(v9 + v11 + a2 + ((unint64_t)(v11 < v2) << 32)) = 57;
  if (v10 == (int)v11 + v5 < v6)
    v10 = (int)v11 + v5 < v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((!v10 * ((v7 + 265) ^ 0x265)) ^ v7)) - 8))();
}

uint64_t sub_18CA92340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v10 = *(_QWORD *)(v7 + 64);
  v11 = *(_DWORD *)(v7 + 72);
  v12 = 1448877107 * ((2 * ((v9 - 192) & 0x6AB54B10) - (v9 - 192) + 357217515) ^ 0x6471A9C1);
  *(_DWORD *)(v9 - 128) = v8 - v12 + 22;
  *(_DWORD *)(v9 - 192) = v11 - v12 + (((v8 - 618) | 0x6C8) ^ (v8 + 657864034));
  *(_DWORD *)(v9 - 188) = v12 + 1940630650;
  *(_DWORD *)(v9 - 160) = v12 ^ 0x7B0FA0C7;
  *(_QWORD *)(v9 - 152) = v7 + 0x8ED1C57AC03BA9CLL;
  *(_QWORD *)(v9 - 144) = v7 + 0x511395B3EF1E7D5;
  *(_QWORD *)(v9 - 120) = v7 + 0xC2C3062343A3C9FLL;
  *(_DWORD *)(v9 - 112) = v12 + 2085568962;
  *(_QWORD *)(v9 - 176) = v6;
  *(_QWORD *)(v9 - 168) = v10;
  *(_QWORD *)(v9 - 136) = v5;
  sub_18CB9D144(v9 - 192);
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((22 * (*(_DWORD *)(v9 - 184) == 0)) ^ v8)) - 8))();
}

uint64_t sub_18CA92468()
{
  uint64_t v0;
  int v1;
  size_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;

  v4 = STACK[0x690];
  bzero((void *)STACK[0x690], v2);
  v5 = STACK[0x7A8];
  v6 = STACK[0x6B0];
  v7 = STACK[0x688];
  v8 = 176504963 * ((((v3 - 192) | 0x5EA181C6) - (v3 - 192) + ((v3 - 192) & 0xA15E7E38)) ^ 0xD40768D9);
  *(_DWORD *)(v3 - 160) = v1 - v8 - 996;
  *(_QWORD *)(v3 - 152) = STACK[0x680];
  *(_QWORD *)(v3 - 136) = v4;
  *(_QWORD *)(v3 - 176) = &unk_18CF2FC04;
  *(_QWORD *)(v3 - 168) = v5;
  LOBYTE(STACK[0x16F4]) = -125 * ((((v3 + 64) | 0xC6) - (v3 + 64) + ((v3 + 64) & 0x38)) ^ 0xD9) + 52;
  *(_DWORD *)(v3 - 144) = v7 - v8 + ((v1 + 1548832628) & 0xA3AEAF67) - 390366531;
  *(_DWORD *)(v3 - 128) = v8 + 290818466;
  *(_DWORD *)(v3 - 188) = v8 + v7 - (((v7 << (((v1 - 8) | 0x40) ^ 0xC1)) + 1006670394) & 0x83001420) - 545238224;
  *(_DWORD *)(v3 - 184) = v6 - v8 - 1406209041;
  sub_18CB18E30(v3 - 192);
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 | ((*(_DWORD *)(v3 - 192) == 0) << 6))) - 12))();
}

uint64_t sub_18CA925C0()
{
  int v0;
  void *v1;
  int v2;
  unint64_t v3;
  int v4;
  int v5;

  STACK[0xA68] = v3;
  LODWORD(STACK[0x8FC]) = v2 - 416087949 + v4;
  free((void *)(STACK[0x7A8] - 0x5C13350084191667));
  free(v1);
  return ((uint64_t (*)(void))qword_1E2538EC0[(v0 - 715342939) & 0xA0A217FE | (2
                                                                            * (((v5 == ((((v0 - 715342939) & 0xA0A217FE)
                                                                                       + 873) ^ 0x6CD)) ^ (((v0 - 91) & 0xFE) - 99)) & 1))])();
}

uint64_t sub_18CA926DC()
{
  int v0;
  void *v1;

  v1 = malloc_type_malloc(0x10uLL, 0x87509263uLL);
  STACK[0x9D8] = (unint64_t)v1;
  return ((uint64_t (*)(void))qword_1E2538EC0[((v1 != 0) * (((v0 | 0x52) - 210) ^ 0x6FF)) ^ (v0 | 0x52)])();
}

uint64_t sub_18CA92724(_BYTE *a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _BYTE *v6;
  void *v7;

  v5 = (v1 + 177) | 0x43;
  v6 = (_BYTE *)((v2 | ((unint64_t)(v2 < 0x4E7C351B) << 32)) + v3 + 0x24AC37F30D6E635BLL);
  *a1 = v6[((v5 ^ 0x2C6u) + 180) ^ 0xDB53C80CA41566BFLL];
  v6 -= 0x24AC37F35BEA9941uLL;
  a1[1] = v6[204];
  a1[2] = v6[205];
  a1[3] = v6[206];
  a1[4] = v6[207];
  a1[5] = v6[208];
  a1[6] = v6[209];
  a1[7] = v6[210];
  a1[8] = v6[211];
  a1[9] = v6[212];
  a1[10] = v6[213];
  a1[11] = v6[214];
  a1[12] = v6[215];
  a1[13] = v6[216];
  a1[14] = v6[217];
  a1[15] = v6[218];
  LOWORD(STACK[0x936]) = 14940;
  v7 = malloc_type_malloc(*(_DWORD *)(v4 + 56) ^ 0xB3B7B663, 0xCE56C7F9uLL);
  STACK[0x7A0] = (unint64_t)v7;
  return ((uint64_t (*)(void))(qword_1E2538EC0[((v7 == 0) | (32 * (v7 == 0))) ^ v5] - 12))();
}

uint64_t sub_18CA92858()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((92
                                * ((*(_DWORD *)(v2 + 56) ^ v1 ^ 0xCE62FFF57FE3FF99)
                                 + 0x319D000AB77F716BLL
                                 + ((((v0 + 111) | 0x203u) + 4291296139) & (2 * (*(_DWORD *)(v2 + 56) ^ v1))) != 929263876)) ^ v0)))();
}

uint64_t sub_18CA92900@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v4 < a2;
  *(_BYTE *)(v6 + a1 - 0xD419D851AD1D08) = *(_BYTE *)(v5 + v3 - 0x237A1252698E1FBBLL) - 60;
  if (v9 == v7 - 0x78D8BADE373AC89FLL < a2)
    v9 = v7 - 0x78D8BADE373AC89FLL < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((97 * v9) ^ v2)) - 8))();
}

uint64_t sub_18CA9299C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  LOWORD(STACK[0x76E]) = (((unsigned __int16)*(_DWORD *)(v8 + 56) << (v6 + 52)) & 0xF36E ^ 0x6046)
                       + (*(_DWORD *)(v8 + 56) ^ 0xCFD4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (((v7 != 0) * ((v6 - 1612) ^ 0x266)) ^ (v6 - 1612)))
                                                                                               - 12))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_18CA929A4(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, unsigned __int16 a6)
{
  uint64_t v6;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1757 * (((a3 + 15925) & 0xC7CD ^ 0xAD33) == a6)) ^ a3)) - 4);
  LODWORD(STACK[0x680]) = a4;
  return v7();
}

uint64_t sub_18CA929E8(int a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  __int16 v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v8 = (a1 + a2 + 660497543);
  v9 = (unsigned __int16)(v5 - ((2 * (a2 + 2183)) & 0x164E) + ((a2 + 2183) ^ (a5 + v6) ^ (v6 + 1664) ^ 0xF765) - 23806) < 0xFFFDu;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7 + 8 * ((v9 | (v9 << 7)) ^ (a5 - 440))) - 8))(v8);
}

uint64_t sub_18CA92A54(int a1, uint64_t a2, int a3)
{
  unsigned __int16 v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  int v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int16 v12;

  v10 = ((unsigned __int16)(a1 - 19449) ^ (v5 + 1)) + ((v7 + 1620) & (2 * (a1 + 46087)));
  v11 = (v10 | ((unint64_t)(v10 < v5) << 32)) + v4 + STACK[0x628] + 0x19A31ED8AB7D63A1;
  v12 = (((*(unsigned __int8 *)v11 - 2 * (*(_BYTE *)v11 & 0xF)) << 8) - 28928) ^ 0x8F00;
  LOWORD(v11) = (v12 - ((2 * v12) & 0xCC00) - 6405) ^ 0xE6FB | (*(unsigned __int8 *)(v11 + 1)
                                                              - ((2 * *(unsigned __int8 *)(v11 + 1)) & 0x174)
                                                              + 698) ^ 0x2BA;
  LODWORD(v11) = (unsigned __int16)((v11 - ((2 * v11) & 0x57D4) - 21526) ^ v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((1667
                                          * ((v3 | ((v3 < ((unsigned __int16)a3 ^ 0x6B9Eu)) << 16))
                                           - 880735259 >= ((v6 + 1275) & (2 * (_DWORD)v11))
                                                        + (v11 ^ 0xFCFDF77C)
                                                        - 830243697)) ^ a3))
                            - 12))();
}

uint64_t sub_18CA92B78(int a1, uint64_t a2, int a3)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((100
                                          * (*(char *)(STACK[0x628] + (a1 - 670167033)) < (char)(18 * (a3 ^ 0xA7) + 46))) ^ ((a3 ^ 0x570) - 956)))
                            - 4))();
}

uint64_t sub_18CA92BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((a7 == (((a8 ^ 0xDA) + 120) ^ 0x8E))
                                          * ((((a8 ^ 0xDA) - 914) | 0x448) - 1582)) ^ a8 ^ 0xDA))
                            - 4))();
}

uint64_t sub_18CA92C24(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int16 a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((a6 - 1642554256) & 0x61E767CD ^ 0x7B0) * (a4 == 44026)) ^ a6))
                            - 8))();
}

uint64_t sub_18CA92C68(int a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  v5 = a3 + 3;
  STACK[0x678] = v5;
  return sub_18CA929E8(a1, a2, v5, a4, a5);
}

uint64_t sub_18CA92C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((((v8 + 291425579 + v7) | 0x2C0) - 329) ^ (v8 + 291425579) & (v7 + 703)) * (a7 == 2)) ^ v8)))();
}

uint64_t sub_18CA92CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;

  STACK[0x688] = a3 + 3;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a6 < (__int16)(a8 - 23247)) * ((a8 - 1539) ^ 0x99)) ^ (a8 - 1303))))();
}

uint64_t sub_18CA92CEC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t (*v9)(void);

  v9 = *(uint64_t (**)(void))(v8
                           + 8
                           * (int)(((((a8 - 1473375982) & 0x57D1EEED) + (a8 ^ 0xFFFFFF73)) * (a6 == -21554)) ^ (a8 - 1390)));
  LODWORD(STACK[0x680]) = a4;
  return v9();
}

uint64_t sub_18CA92D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((v7 != 0) * (v6 ^ 0x266)) ^ v6))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 4294925268);
}

uint64_t sub_18CA92D6C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  *(_BYTE *)(a2 + 1860990888 + ((v2 - 647803102) & 0x269CAABC) + v4 - 0x353232397341B138) = -71;
  v5 = (v3 + 1675682312) > 0xD1C3E1F4;
  if ((v3 + 1675682312) < 0xD1C3E1F3)
    v5 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((4 * !v5) | (8 * !v5) | (v2 - 1194)))
                            - ((v2 - 1040245906) & 0x3E00DFE7 ^ 0x227)))();
}

uint64_t sub_18CA92E54@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  _BOOL4 v9;
  uint64_t v10;

  v9 = v4 < v5;
  v10 = (v3 + 1);
  *(_BYTE *)(v8 + v10 + a2 + ((unint64_t)(v10 < v2) << 32)) = 57;
  if (v9 == (int)v10 + v6 < v5)
    v9 = (int)v10 + v6 < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((!v9 * ((2 * (v7 ^ 0x275)) ^ 0xA0)) | v7)) - 4))();
}

uint64_t sub_18CA92EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  v10 = STACK[0x698];
  v11 = *(_QWORD *)(STACK[0x698] + 64);
  v12 = *(_DWORD *)(STACK[0x698] + 72);
  v13 = 1448877107 * (((v9 - 192) & 0x8D583415 | ~((v9 - 192) | 0x8D583415)) ^ 0x39CD6C0);
  *(_DWORD *)(v9 - 160) = v13 ^ 0x7B0FA0C7;
  *(_DWORD *)(v9 - 112) = v13 + 2085568962;
  *(_QWORD *)(v9 - 152) = v10 + 0x8ED1C57AC03BA9CLL;
  *(_QWORD *)(v9 - 144) = v10 + 0x511395B3EF1E7D5;
  *(_QWORD *)(v9 - 136) = a8;
  *(_DWORD *)(v9 - 192) = v12 - v13 + 657862940;
  *(_DWORD *)(v9 - 188) = v13 + 1940630650;
  *(_DWORD *)(v9 - 128) = v8 - v13 + 473;
  *(_QWORD *)(v9 - 120) = v10 + 0xC2C3062343A3C9FLL;
  *(_QWORD *)(v9 - 176) = a7;
  *(_QWORD *)(v9 - 168) = v11;
  sub_18CB9D144(v9 - 192);
  return (*(uint64_t (**)(void))(a5 + 8 * (((*(_DWORD *)(v9 - 184) != 0) * (((v8 - 164) | 0x1D7) - 375)) ^ v8)))();
}

uint64_t sub_18CA92FDC()
{
  void *v0;
  void *v1;
  int v2;

  free(v1);
  free(v0);
  return ((uint64_t (*)(void))qword_1E2538EC0[((STACK[0xA68] != 0) * ((v2 + 1899831602) & 0x8EC2D9EF ^ 0x771)) ^ (v2 - 866)])();
}

uint64_t sub_18CA92FEC()
{
  int v0;
  void *v1;
  uint64_t v2;
  size_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;

  bzero(v1, v3);
  v8 = STACK[0x778];
  v9 = 176504963 * ((2 * ((v7 - 192) & 0x61636310) - (v7 - 192) + 513580264) ^ 0x943A75F7);
  v10 = LODWORD(STACK[0xA8C]) - v9 - 1406209041;
  *(_DWORD *)(v7 - 188) = v9 + v0 - (((v0 << (v4 ^ 0xCC)) + 607780906) & 0x83001420) - 744682968;
  *(_DWORD *)(v7 - 184) = v10;
  *(_QWORD *)(v7 - 152) = v2;
  LOBYTE(STACK[0x16F4]) = -125 * ((2 * ((v7 + 64) & 0x10) - (v7 + 64) - 24) ^ 0xF7) + 52;
  *(_DWORD *)(v7 - 128) = v9 + 290818466;
  *(_QWORD *)(v7 - 176) = &unk_18CF2FC04;
  *(_QWORD *)(v7 - 168) = v8;
  *(_DWORD *)(v7 - 160) = v5 - v9 - 315;
  *(_QWORD *)(v7 - 136) = v1;
  *(_DWORD *)(v7 - 144) = v0 - v9 - 589810407;
  sub_18CB18E30(v7 - 192);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((2022 * (*(_DWORD *)(v7 - 192) == 0)) ^ v5)) - 12))();
}

uint64_t sub_18CA93108()
{
  int v0;
  int v1;
  unint64_t v2;
  void *v3;
  int v4;
  int v5;

  v5 = v0;
  STACK[0xA68] = v2;
  LODWORD(STACK[0x8FC]) = v1 - 615530983;
  free((void *)(STACK[0x778] - 0x5C13350084191667));
  free(v3);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(194 * (v5 == 13 * (v4 ^ 0x6D0) - 377)) | (v4 - 1217)] - 4))();
}

uint64_t sub_18CA93124@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;

  v4 = STACK[0x688];
  *(_BYTE *)(v3 + a2 + 200571139 - 0x353232397341B08CLL) = -71;
  if ((v4 - 2113406977) < 0xAD7DB2DD != (v2 - 1384272136) < 0xAD7DB2DD)
    v5 = (v4 - 2113406977) < 0xAD7DB2DD;
  else
    v5 = v2 - 1384272136 < (v4 - 2113406977);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((2023 * v5) ^ v2)) - 4))();
}

uint64_t sub_18CA931D8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  _BOOL4 v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;

  v10 = v7 < v5;
  *(_BYTE *)(a2 + (v4 + 1) + (v3 ^ 0x47u) + ((unint64_t)(v4 + 1 < v2) << 32) + v9 - 929) = 57;
  v11 = v6 + v4 + 930;
  v12 = v10 ^ (v11 < v5);
  v13 = v11 < v7;
  if (!v12)
    v10 = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v10 * v8) ^ v3)) - 4))();
}

uint64_t sub_18CA93248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;

  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_DWORD *)(v6 + 72);
  v11 = 1448877107 * ((-15257655 - ((v8 - 192) | 0xFF172FC9) + ((v8 - 192) | 0xE8D036)) ^ 0x71D3CD1C);
  *(_DWORD *)(v8 - 160) = v11 ^ 0x7B0FA0C7;
  *(_QWORD *)(v8 - 120) = v6 + 0xC2C3062343A3C9FLL;
  *(_DWORD *)(v8 - 192) = v10 - v11 + 657862940;
  *(_DWORD *)(v8 - 188) = v11 + 1940630650;
  *(_QWORD *)(v8 - 136) = v5;
  *(_DWORD *)(v8 - 112) = v11 + 2085568962;
  *(_QWORD *)(v8 - 176) = v4;
  *(_QWORD *)(v8 - 168) = v9;
  *(_DWORD *)(v8 - 128) = v7 - v11 - 284;
  *(_QWORD *)(v8 - 152) = v6 + 0x8ED1C57AC03BA9CLL;
  *(_QWORD *)(v8 - 144) = v6 + 0x511395B3EF1E7D5;
  sub_18CB9D144(v8 - 192);
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((102 * (*(_DWORD *)(v8 - 184) == ((v7 - 161973690) & 0x9A782FC) - 228)) ^ v7))
                            - 8))();
}

uint64_t sub_18CA9337C()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  int v9;

  v6 = STACK[0x690];
  bzero((void *)STACK[0x690], STACK[0x680]);
  v7 = STACK[0x810];
  v8 = STACK[0x998];
  v9 = 176504963 * (((~(v5 - 192) | 0x4034B360) + ((v5 - 192) | 0xBFCB4C9F)) ^ 0x356DA581);
  *(_QWORD *)(v5 - 136) = v6;
  *(_DWORD *)(v5 - 160) = v2 - v9 - 64;
  *(_QWORD *)(v5 - 152) = v3;
  *(_QWORD *)(v5 - 176) = &unk_18CF2FC04;
  *(_QWORD *)(v5 - 168) = v7;
  LOBYTE(STACK[0x16F4]) = -125 * (((~(v5 + 64) | 0x60) + ((v5 + 64) | 0x9F)) ^ 0x81) + 52;
  *(_DWORD *)(v5 - 144) = v1 - v9 + 524646950;
  *(_DWORD *)(v5 - 128) = v9 + 290818466;
  *(_DWORD *)(v5 - 188) = v9 + v1 - ((v0 - 2097148589) & (2 * v1 - 1458271676)) + 369774389;
  *(_DWORD *)(v5 - 184) = (((v2 + 805) | 0x2C4) ^ 0xAC2EF522) - v9 + v8;
  sub_18CB18E30(v5 - 192);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((496 * (*(_DWORD *)(v5 - 192) != 0)) ^ v2)) - 12))();
}

uint64_t sub_18CA934A8()
{
  int v0;
  int v1;
  void *v2;

  free((void *)(STACK[0x810] - 0x5C13350084191667));
  free(v2);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1051 * (v1 == ((v0 + 1162892241) & 0x3AAFA76F) - 526)) ^ (v0 - 1053)]
                            - 8))();
}

uint64_t sub_18CA934B8()
{
  int v0;
  void *v1;

  free(v1);
  free((void *)STACK[0x690]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(((v0 - 1978300128) & 0x75EA725F ^ 0x2CC) + 70) ^ (v0 - 1978300128) & 0x75EA725F]
                            - 12))();
}

uint64_t sub_18CA934C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  unsigned __int16 v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((973 * (v7 == (unsigned __int16)((a7 ^ 0x1DC) - 22296 + 5 * (a7 ^ 0x1DC)))) ^ a7)))(a1, a2, a3, a4, a5, a6, 4294924368);
}

uint64_t sub_18CA93504()
{
  int v0;
  int v1;
  void *v2;

  STACK[0x9B0] = 0x5C13350084191667;
  LODWORD(STACK[0x898]) = 2046997083;
  v2 = malloc_type_malloc((((v0 ^ 0x84) + 1218) ^ 0xC0220C58) + (v1 & 0xFFFFFFF0 ^ 0x3FDDF57B) + ((2 * v1) & 0x7FBBEAE0), 0x68517D9BuLL);
  STACK[0x690] = (unint64_t)v2;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1879 * (v2 != 0)) ^ v0] - 8))();
}

uint64_t sub_18CA935A0()
{
  uint64_t v0;
  size_t v1;
  int v2;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))(*(_QWORD *)(v0
                                     + 8
                                     * (((malloc_type_malloc(v1, 0x2DFD1FE4uLL) != 0) * (((v2 - 2) | 4) - 390)) ^ v2))
                         - 12);
  return v3();
}

uint64_t sub_18CA935E0(uint64_t a1)
{
  int v1;
  int v2;

  STACK[0x680] = a1 + 0x353232397341B08CLL;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1231 * (v2 == ((v1 - 424) | 0x190) - 501)) ^ v1] - 4))();
}

uint64_t sub_18CA93664@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  int v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;

  *(_BYTE *)(STACK[0x680] + a1 + v1 - 0x353232397341B08CLL) = -71;
  v4 = ((v2 + 812414074) & 0xCF938BFE ^ 0x7F9EDA0A) + v3;
  v5 = v1 - 2008234524 < v4;
  if (v1 - 2008234524 < 0xBF7CCDCF != v4 < 0xBF7CCDCF)
    v5 = v4 < 0xBF7CCDCF;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(2 * !v5) | (4 * !v5) | (v2 - 141)] - 8))();
}

uint64_t sub_18CA937C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  _BOOL4 v9;
  unsigned int v10;
  int v11;
  _BOOL4 v12;

  v9 = v7 < v5;
  v10 = (v3 ^ 0x306 ^ (v6 + 423)) + v4;
  *(_BYTE *)(v8 + (v4 + 1) + a2 + ((unint64_t)(v4 + 1 < v2) << 32)) = 57;
  v11 = v9 ^ (v10 < v5);
  v12 = v10 < v7;
  if (!v11)
    v9 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((2 * !v9) | (4 * !v9) | v3)) - 8))();
}

uint64_t sub_18CA93834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;

  v7 = *(_QWORD *)(v2 + 64);
  v8 = *(_DWORD *)(v2 + 72);
  v9 = 1448877107 * ((((v6 - 192) | 0xC561C967) + (~(v6 - 192) | 0x3A9E3698)) ^ 0xB45AD44C);
  *(_QWORD *)(v6 - 120) = v2 + 0xC2C3062343A3C9FLL;
  *(_DWORD *)(v6 - 160) = v9 ^ 0x7B0FA0C7;
  *(_DWORD *)(v6 - 128) = v3 - v9 + 23;
  *(_QWORD *)(v6 - 136) = v5;
  *(_DWORD *)(v6 - 192) = v8 - v9 + 657862940;
  *(_DWORD *)(v6 - 188) = v9 + 1940630650;
  *(_QWORD *)(v6 - 176) = v4;
  *(_QWORD *)(v6 - 168) = v7;
  *(_QWORD *)(v6 - 152) = v2 + 0x8ED1C57AC03BA9CLL;
  *(_QWORD *)(v6 - 144) = v2 + 0x511395B3EF1E7D5;
  *(_DWORD *)(v6 - 112) = v9 + 2085568962;
  sub_18CB9D144(v6 - 192);
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((251
                                          * (*(_DWORD *)(v6 - 184) == ((v3 - 352912115) & 0x778B47AF)
                                                                    + ((v3 - 604) | 0x80)
                                                                    - 1652705213)) ^ v3))
                            - 8))();
}

uint64_t sub_18CA93970()
{
  size_t v0;
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  int v7;

  v4 = STACK[0x690];
  bzero((void *)STACK[0x690], v0);
  v5 = STACK[0x9B0];
  v6 = STACK[0x898];
  v7 = 176504963 * ((((v3 - 192) | 0x7D73C2A0) - ((v3 - 192) | 0x828C3D5F) - 2104738465) ^ 0xF7D52BBF);
  *(_DWORD *)(v3 - 128) = v7 + 290818466;
  *(_QWORD *)(v3 - 152) = STACK[0x680];
  *(_DWORD *)(v3 - 188) = v7 + v1 - ((2 * v1 - 2143021782) & 0x83001420) + 27399336;
  *(_DWORD *)(v3 - 184) = v6 - v7 - 1406209041;
  *(_DWORD *)(v3 - 144) = v1 - v7 + 182271897;
  *(_QWORD *)(v3 - 176) = &unk_18CF2FC04;
  *(_QWORD *)(v3 - 168) = v5;
  *(_DWORD *)(v3 - 160) = v2 - v7 + 18;
  *(_QWORD *)(v3 - 136) = v4;
  LOBYTE(STACK[0x16F4]) = -125 * ((((v3 + 64) | 0xA0) - ((v3 + 64) | 0x5F) + 95) ^ 0xBF) + 52;
  sub_18CB18E30(v3 - 192);
  return ((uint64_t (*)(void))(qword_1E2538EC0[((*(_DWORD *)(v3 - 192) == 0) * ((v2 + 248374761) & 0xF1321B8F ^ 0x7B6)) ^ v2]
                            - 12))();
}

uint64_t sub_18CA93AB8()
{
  int v0;
  void *v1;
  int v2;
  int v3;

  STACK[0x7C8] = STACK[0x690];
  LODWORD(STACK[0x8B0]) = v2 - 86721661;
  free((void *)(STACK[0x9B0] - 0x5C13350084191667));
  free(v1);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(((v3 - 250771931) & 0xEF279E8 ^ 0x4AF) * (v0 == 0)) ^ (v3 + 377)] - 12))();
}

uint64_t sub_18CA93B78@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  _BOOL4 v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;

  v10 = v7 < v6;
  *(_BYTE *)(v9 + ((v3 + 998) ^ 0x728u) + v4 + a2 + ((unint64_t)(((v3 + 998) ^ 0x728u) + v4 < v2) << 32)) = 57;
  v11 = v5 + v4 + 1;
  v12 = v10 ^ (v11 < v6);
  v13 = v11 < v7;
  if (!v12)
    v10 = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((!v10 * v8) ^ v3)) - 8))();
}

uint64_t sub_18CA93BE4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_DWORD *)(v0 + 72);
  v7 = 1448877107 * ((v4 - 192) ^ 0x713B1D2A);
  *(_DWORD *)(v4 - 128) = v1 - v7 - 1188;
  LODWORD(STACK[0x640]) = 10 * (v1 ^ 0x772);
  *(_DWORD *)(v4 - 160) = v7 ^ 0x7B0FA0C7;
  *(_QWORD *)(v4 - 144) = v0 + 0x511395B3EF1E7D5;
  *(_QWORD *)(v4 - 136) = v3;
  *(_DWORD *)(v4 - 112) = v7 + 2085568962;
  *(_QWORD *)(v4 - 120) = v0 + 0xC2C3062343A3C9FLL;
  *(_QWORD *)(v4 - 176) = v2;
  *(_QWORD *)(v4 - 168) = v5;
  *(_QWORD *)(v4 - 152) = v0 + 0x8ED1C57AC03BA9CLL;
  *(_DWORD *)(v4 - 192) = v6 - v7 + ((v1 - 1380192298) & 0x52440FCD ^ 0x273637D1);
  *(_DWORD *)(v4 - 188) = v7 + 1940630650;
  sub_18CB9D144(v4 - 192);
  return ((uint64_t (*)(void))(qword_1E2538EC0[((*(_DWORD *)(v4 - 184) != 0) * (LODWORD(STACK[0x640]) ^ 0x395)) ^ v1]
                            - 4))();
}

void sub_18CA93D10()
{
  void *v0;

  free(v0);
  free((void *)STACK[0x670]);
  JUMPOUT(0x18CA918B4);
}

uint64_t sub_18CA93D20()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  int v5;
  int v6;

  v1 = STACK[0x640];
  v2 = STACK[0x670];
  bzero((void *)STACK[0x670], STACK[0x668]);
  v3 = STACK[0x960];
  v4 = STACK[0x8B4];
  v5 = STACK[0x660];
  v6 = 176504963 * ((~(v0 - 192) & 0x4183DB2 | (v0 - 192) & 0xFBE7C24D) ^ 0x8EBED4AD);
  *(_QWORD *)(v0 - 136) = v2;
  *(_DWORD *)(v0 - 128) = v6 + 290818466;
  *(_QWORD *)(v0 - 152) = STACK[0x608];
  *(_DWORD *)(v0 - 160) = v1 - v6 - 746;
  *(_DWORD *)(v0 - 144) = v5 - v6 + (v1 ^ 0xB40BA4B8);
  *(_DWORD *)(v0 - 188) = v6 + v5 - ((2 * v5 - 761207708) & 0x83001420) + ((v1 + 178) | 0x28D) - 1429179016;
  *(_DWORD *)(v0 - 184) = v4 - v6 - 1406209041;
  *(_QWORD *)(v0 - 176) = &unk_18CF2FC04;
  *(_QWORD *)(v0 - 168) = v3;
  LOBYTE(STACK[0x16F4]) = -125 * ((~(v0 + 64) & 0xB2 | (v0 + 64) & 0x4D) ^ 0xAD) + 52;
  sub_18CB18E30(v0 - 192);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1801 * (*(_DWORD *)(v0 - 192) == 0)) ^ v1] - 8))();
}

uint64_t sub_18CA93E64()
{
  int v0;
  void *v1;
  int v2;
  int v3;

  STACK[0x7C8] = STACK[0x670];
  LODWORD(STACK[0x8B0]) = v3 - 1543298272;
  free((void *)(STACK[0x960] - 0x5C13350084191667));
  free(v1);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(104 * (((v0 - (v2 - 1741)) | (v2 - 1741 - v0)) >> 31)) ^ (v2 - 1043)]
                            - ((v2 - 1420) ^ 0x149)))();
}

uint64_t sub_18CA93EEC()
{
  int v0;
  void *v1;

  v1 = malloc_type_malloc(0x10uLL, 0xA3FE12B2uLL);
  STACK[0xA78] = (unint64_t)v1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(992 * (v1 != 0)) ^ v0] - 4))();
}

uint64_t sub_18CA93F50(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((21
                                          * (a1
                                           - STACK[0xA68]
                                           - (LODWORD(STACK[0x8FC]) - 584873627)
                                           - ((unint64_t)((LODWORD(STACK[0x8FC]) - 584873627) < 0x26564779) << 32)
                                           + 643188601 > 0xF)) ^ v1))
                            - (v1
                             - 1137)
                            + 365))();
}

void sub_18CA94008(int8x16_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;

  v5 = *(int8x16_t *)(v2 + v3 + a2 + (v4 ^ 0x7B4u));
  v6.i64[0] = 0xD5D5D5D5D5D5D5D5;
  v6.i64[1] = 0xD5D5D5D5D5D5D5D5;
  v7 = veorq_s8(v5, v6);
  v8.i64[0] = 0xAAAAAAAAAAAAAAAALL;
  v8.i64[1] = 0xAAAAAAAAAAAAAAAALL;
  v9 = vandq_s8(vaddq_s8(v5, v5), v8);
  v8.i64[0] = 0x2C2C2C2C2C2C2C2CLL;
  v8.i64[1] = 0x2C2C2C2C2C2C2C2CLL;
  *a1 = vaddq_s8(vaddq_s8(v7, v8), v9);
  JUMPOUT(0x18CA94108);
}

uint64_t sub_18CA94054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  *(_BYTE *)(v5 + a1 - 0x3C44038ACD509433) = (*(_BYTE *)(a2 + v4 + v2 + 1741) ^ 0xD5)
                                             + ((2 * *(_BYTE *)(a2 + v4 + v2 + 1741)) & 0xAA)
                                             + 44;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((677 * (v6 + 1 == v3 + 16)) ^ v7)) - 12))();
}

uint64_t sub_18CA94154@<X0>(void *a1@<X0>, int a2@<W6>, int a3@<W8>)
{
  int v3;
  int v4;

  v4 = 11 * (v3 ^ (a3 + 1698));
  free(a1);
  STACK[0xA68] = 0;
  LODWORD(STACK[0x8FC]) = 1228062212;
  return ((uint64_t (*)(void))(qword_1E2538EC0[((((v4 - 485) | 0x280) + 274) * (a2 == 0)) ^ v4] - 8))();
}

uint64_t sub_18CA941B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((((v7 - 485) | 0x280) + 274) * (a7 == 0)) ^ v7)) - 8))();
}

uint64_t sub_18CA941E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 + 8 * ((((STACK[0x938] | STACK[0x770] | STACK[0xA78]) != 0) * (a7 ^ 0x28D)) ^ a7))
                                                                                               - (a7 ^ 0x20Bu)
                                                                                               + 117))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_18CA94230@<X0>(int a1@<W8>)
{
  uint64_t v1;

  LOWORD(STACK[0x936]) = 14927;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1199 * (LODWORD(STACK[0xA24]) != (a1 ^ 0x4A) + 369822296)) ^ a1 ^ 0x4A))
                            - 12))();
}

uint64_t sub_18CA9427C@<X0>(int a1@<W8>)
{
  __int16 v1;
  int v2;
  uint64_t v3;
  int v4;

  v4 = a1 + 315674944;
  LOWORD(STACK[0x936]) = ((v1 - 3352) ^ 0x5F6F) - 9501 + (((v1 - 3352) << ((v4 ^ 1) & 0xCF)) & 0xBEDE);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((v4 | 0x210A30) ^ 0x12F1DCE8 ^ (1243
                                                                              * (((v2 - (v4 | 0x210A30)) | ((v4 | 0x210A30u) - v2)) >> 31))))
                            - 82 * ((v4 | 0x210A30) ^ 0x12F1DE38u)
                            + 648))();
}

uint64_t sub_18CA94324()
{
  int v0;
  __int16 v1;
  __int16 v2;
  uint64_t v3;
  int v4;

  v4 = (4 * v0) ^ 0x9F0;
  LOWORD(STACK[0x936]) = ((v2 + 8656) ^ 0xFFE2) + v1 + ((v4 + 32052) & (2 * (v2 + 8656))) + 33;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1632 * (LODWORD(STACK[0x8DC]) != -510232870)) ^ v4)) - 8))();
}

uint64_t sub_18CA94390@<X0>(int a1@<W8>)
{
  __int16 v1;
  __int16 v2;
  int v3;
  __int16 v4;
  void *v5;
  uint64_t v6;

  v3 = a1 - 6;
  v4 = v2 + (v1 ^ 0xB75);
  LOWORD(STACK[0x936]) = v4 + ((v3 ^ 0xF9D4) & (2 * v1) ^ 0xE914) - 32172;
  v5 = malloc_type_malloc((unsigned __int16)(v4 + ((v3 ^ 0xF9D4) & (2 * v1) ^ 0xE914) - 32172 - 14924), 0x21A57AD4uLL);
  v6 = qword_1E2538EC0[((v5 != 0) * (v3 + 1016)) ^ v3];
  STACK[0x9D8] = (unint64_t)v5;
  return ((uint64_t (*)(void))(v6 - ((v3 + 589986095) & 0xDCD584C7 ^ 0x8DLL)))();
}

uint64_t sub_18CA94478(_BYTE *a1)
{
  __int16 v1;
  int v2;
  uint64_t v3;

  *a1 = 1;
  a1[1] = (((((unsigned __int16)(v1 - 14927) >> 8)
           - (((unsigned __int16)(v1 - 14927) >> 8 << (((v2 + 67) ^ 0xEC) - 32)) & 0xE2)
           + 1) ^ 2)
         - 16) ^ 0xF3;
  a1[2] = (v1 + (~(2 * v1 + 98) | 0xF) - 86) ^ 0xF8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((LODWORD(STACK[0xA24]) != 369823000) << 8) | ((LODWORD(STACK[0xA24]) != 369823000) << 9)) ^ (v2 - 263)))
                            - 8))();
}

uint64_t sub_18CA94514@<X0>(_BYTE *a1@<X0>, int a2@<W8>)
{
  char v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  _BOOL4 v6;

  a1[3] = 4;
  v5 = LOWORD(STACK[0xA24]) - (((LOWORD(STACK[0xA24]) + 29416) & 0x460F ^ STACK[0xA24] & 5) << ((a2 ^ v2) + 52)) - 18190;
  a1[4] = BYTE1(v5) ^ 0xC6;
  a1[5] = v5 ^ 0xA;
  v6 = (LODWORD(STACK[0xA24]) | ((unint64_t)(LODWORD(STACK[0xA24]) < v3) << 32)) == 369823000;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v6 | (2 * v6)) ^ a2)) - 4))();
}

uint64_t sub_18CA945E4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 - 117) ^ (251 * (v1 ^ 1)))) - 173 * (v0 ^ 0x6CAu) + 1207))();
}

uint64_t sub_18CA946DC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  _BYTE *v6;

  *(_BYTE *)(a1 + (a2 + v2)) = 1;
  v6 = (_BYTE *)(((a2 - 380576369) | ((unint64_t)((a2 - 380576369) < 0x3EF18C4D) << 32))
               + a1
               - 1056017493
               + ((v3 - 1211) | 8u));
  *v6 = ((unsigned __int16)(v4 - 2 * ((v4 + 8656) & 0x330F ^ v4 & 8) + 21719) >> 8) ^ 0x33;
  v6[1] = (v4 - 2 * ((v4 - 48) & 0xF ^ v4 & 8) - 41) ^ 7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v3 ^ (446 * (v4 > 0x12F1DE30)))) - 8))();
}

uint64_t sub_18CA947B0(uint64_t a1, unsigned int a2)
{
  unsigned int v2;
  uint64_t v3;
  int v4;

  v4 = ((v2 - 317840944 - a2) & ~(v2 - 317840944)) >= 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((((a2 + 103891030) & 0xF9CEBFB1) + 1400) ^ a2 ^ ((v4 << 7) | (v4 << 9))))
                            - 8))();
}

uint64_t sub_18CA94890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v8
                                                     + 8
                                                     * (int)((226
                                                            * ((((a7 ^ (unint64_t)(a1 - v7 + a3)) & a7) >> (__clz(a7 ^ (unint64_t)(a1 - v7 + a3) | 1) ^ 0x3Fu)) & 1)) ^ (a7 | 0x667))))(a1, 0x5E15CF25B1259CECLL);
}

uint64_t sub_18CA94900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((1997 * (v7 >= (unint64_t)(a7 + 1725) - 1725)) ^ (a7 + 967)))
                            - (((a7 + 246) | 0x251u) ^ 0x35FLL)))();
}

uint64_t sub_18CA94944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int8x16_t *v5;
  uint64_t v6;
  int8x16_t *v7;
  uint64_t v8;
  int8x16_t v9;

  v9.i64[0] = -1;
  v9.i64[1] = -1;
  *v5 = vaddq_s8(*v7, v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((((v6 & 0xFFFFFFFFFFFFFFF0) == 16) * (((a5 - 428) | 0x200) - 116)) ^ (a5 - 1344)))
                            - 4))();
}

void sub_18CA94990()
{
  JUMPOUT(0x18CA94968);
}

uint64_t sub_18CA94998()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v0 ^ 0x235) - 761) * (v2 != v1)) ^ v0 ^ 0x235)) - 12))();
}

void sub_18CA949C4()
{
  int v0;

  STACK[0xA68] = STACK[0x690];
  LODWORD(STACK[0x8FC]) = v0 + 498926374;
  JUMPOUT(0x18CA949E0);
}

uint64_t sub_18CA94A4C()
{
  int v0;
  void *v1;

  v1 = malloc_type_malloc(0x10uLL, 0x2FA76BCuLL);
  STACK[0x770] = (unint64_t)v1;
  return ((uint64_t (*)(void))qword_1E2538EC0[((((31 * (v0 ^ 0x21D) - 461) | 0x245) ^ 0x2FF) * (v1 == 0)) ^ v0])();
}

uint64_t sub_18CA94AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((v7 == 0) * ((v6 ^ 0x2CC) + 70)) ^ v6))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 4294925268);
}

uint64_t sub_18CA94B2C@<X0>(int a1@<W6>, int a2@<W8>)
{
  void *v2;
  int v4;

  v4 = (a2 - 242054099) & 0xE6D6F8F;
  free(v2);
  STACK[0xA68] = 0;
  LODWORD(STACK[0x8FC]) = 1228062212;
  return ((uint64_t (*)(void))(qword_1E2538EC0[((a1 == 0) * ((v4 - 71437107) & 0xF77E3AE9 ^ 0xF33C37C5)) ^ v4]
                            - ((v4 + 1836221489) & 0x928D79C5 ^ 0x8DLL)))();
}

void sub_18CA94B70()
{
  JUMPOUT(0x18CA94B7CLL);
}

uint64_t sub_18CA94BF8()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((5 * (v1 ^ 0x175)) ^ 0x45)) - 4))();
}

void sub_18CA94C78()
{
  JUMPOUT(0x18CA94C30);
}

uint64_t sub_18CA94C80@<X0>(void *a1@<X0>, int a2@<W8>)
{
  int v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;
  unsigned int v6;

  v3 = (a2 >> (((v2 - 98) ^ 0xF9) & 0xCF)) ^ 9 | a2 ^ 0xFFFFFF9D;
  v4 = ((v3 - ((2 * v3) & 0x78) + 60) >> 2) ^ 0xF | (v3 - ((2 * v3) & 0x78) + 60) ^ 0x3C;
  v5 = ((1 - (v4 | ~(((v4 - 2 * (v4 & 1) + 3) & 0xFE) >> 1))) & 1) == 0;
  v6 = -42022 * ((v5 ^ 0xB70BFCD7) + 2 * v5) - 641645590;
  free(a1);
  STACK[0x7C8] = 0;
  LODWORD(STACK[0x8B0]) = 984789230;
  return ((uint64_t (*)(void))qword_1E2538EC0[(1029 * (v6 == 0)) ^ v2])();
}

uint64_t sub_18CA94D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (((*(_DWORD *)(v6 + 4) == v7) * ((((v8 & 0x760C7FCF) - 1713) | 0x143) ^ 0x279)) ^ ((v8 & 0x760C7FCF) - 1539)))
                                                                                               - 4))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_18CA94DF8(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v2 + 1898111181 + ((v1 + 141034823) | 0x80022030);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((21
                                          * (a1
                                           - v3
                                           - v5
                                           - ((unint64_t)(v5 < 0x42BFC71D) << 32)
                                           + 1119864605 < 0x10)) ^ v1))
                            - 8))();
}

uint64_t sub_18CA94EC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v5 + a1 - 0x5B62404DAF3DBB47) = *(_BYTE *)(v7 + v4 + v1)
                                             - ((*(unsigned __int8 *)(v7 + v4 + v1) << ((v3 ^ 0x1D) + 52)) & 0xEA)
                                             - 11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((37 * (v6 + 1 == v2 + 16)) ^ v3)) - 8))();
}

void sub_18CA94F30()
{
  int v0;

  LODWORD(STACK[0x8DC]) = v0 - 16;
  JUMPOUT(0x18CA94B30);
}

uint64_t sub_18CA94F74()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(qword_1E2538EC0[(92 * (v0 == (((v2 ^ 0x33E) + 1610) ^ (v1 + 1118) ^ (5 * (v2 ^ 0x33E))))) ^ v2]
                            - 12))();
}

uint64_t sub_18CA94FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  BOOL v8;
  int v9;

  if (STACK[0x648])
    v8 = STACK[0x688] == 0;
  else
    v8 = 1;
  v9 = !v8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * (a7 ^ (1713 * v9)))
                                                                                                - ((a7 - 629) ^ ((a7 - 14) | 0x44Cu) ^ 0x6DFLL)))(a1, a2, a3, a4, a5, a6, 4294925273);
}

void sub_18CA95004(int a1@<W8>)
{
  uint64_t v1;
  _BYTE *v2;

  STACK[0x980] = (unint64_t)&STACK[0xC18];
  STACK[0xAB8] = (unint64_t)&STACK[0xBD4];
  v2 = (_BYTE *)STACK[0x688];
  LOBYTE(STACK[0xBB0]) = *(_BYTE *)STACK[0x688];
  LOBYTE(STACK[0xBB1]) = v2[1];
  LOBYTE(STACK[0xBB2]) = v2[2];
  LOBYTE(STACK[0xBB3]) = v2[3];
  LOBYTE(STACK[0xBB4]) = v2[4];
  LOBYTE(STACK[0xBB5]) = v2[5];
  LOBYTE(STACK[0xBB6]) = v2[6];
  LOBYTE(STACK[0xBB7]) = v2[7];
  LOBYTE(STACK[0xBB8]) = v2[8];
  LOBYTE(STACK[0xBB9]) = v2[9];
  LOBYTE(STACK[0xBBA]) = v2[10];
  LOBYTE(STACK[0xBBB]) = v2[11];
  LOBYTE(STACK[0xBBC]) = v2[12];
  LOBYTE(STACK[0xBBD]) = v2[13];
  LOBYTE(STACK[0xBBE]) = v2[14];
  LOBYTE(STACK[0xBBF]) = v2[15];
  LODWORD(STACK[0xC78]) = -366034007;
  STACK[0xC58] = 0x6205527E24145F56;
  STACK[0xC60] = 0x6396BFB8EB1E3730;
  STACK[0xC68] = 0x9C69404714E1C8CFLL;
  LODWORD(STACK[0xC70]) = 1334441409;
  LODWORD(STACK[0xC74]) = 1279171888;
  STACK[0x918] = (a1 + 650) + *(_QWORD *)(v1 + 8 * a1) - 680;
  JUMPOUT(0x18CAF8FC0);
}

uint64_t sub_18CA95148(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 + ((a2 - 1325770690) & 0x7FF7BBE5) + 3) * (v3 != a3)) ^ a2)))();
}

uint64_t sub_18CA95184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v6
                                                               + 8
                                                               * ((((v4 + 855) ^ 0x500) * ((v3 & 8) == 0)) ^ (v4 + 983)))
                                                   - 8))(a1, a3 + v5);
}

uint64_t sub_18CA951DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  v12.n128_u64[0] = -1;
  v12.n128_u64[1] = -1;
  *(int8x8_t *)(v7 + a3) = vadd_s8(*(int8x8_t *)(v10 + a3), (int8x8_t)-1);
  return ((uint64_t (*)(uint64_t, unint64_t, __n128))(*(_QWORD *)(v11
                                                                                + 8
                                                                                * ((53
                                                                                  * (((173 * (a7 ^ 0x350u)) ^ 0x4B3)
                                                                                   + a3 == (v8 & 0xFFFFFFFFFFFFFFF8))) ^ a7))
                                                                    - 4))(a1, (v8 & 0xFFFFFFFFFFFFFFF8) + v9, v12);
}

uint64_t sub_18CA9523C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v11
                                                                                                  + 8 * ((315 * (((v9 == a8) ^ (v10 - 10)) & 1)) ^ v10))
                                                                                      + v8
                                                                                      - ((v10 + 4324422) | 0x30B01A44u)))(a1, a2, a3, a4, a5, (v10 + 101319669) | 0x41815140u);
}

uint64_t sub_18CA952A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(a4 + v6 - 0x60DA7C9A38CA41A8) = *(_BYTE *)(a5 + v8 - 0x591752146C914B2ALL) - 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (((8 * (a2 == v7 + 0x5E15CF259E33BEBBLL)) | (32
                                                                                     * (a2 == v7 + 0x5E15CF259E33BEBBLL))) ^ a6 ^ 0x478B5EE5))
                            - 12))();
}

void sub_18CA95330()
{
  JUMPOUT(0x18CA952F8);
}

uint64_t sub_18CA95348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (((106 * (a7 ^ 0x30F21B49) - 761) * (v8 != v7)) ^ (106 * (a7 ^ 0x30F21B49))))
                            - 12))();
}

uint64_t sub_18CA95388@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  _BYTE *v7;

  *(_BYTE *)(a1 + (a2 + v2)) = 2;
  v7 = (_BYTE *)(((a2 + 446535665) | ((unint64_t)(a2 + 446535665 < 218 * (v3 ^ 0x4FEu) + 1883128211) << 32))
               + a1
               - 1883129519);
  *v7 = BYTE1(v5) ^ 0x76;
  v7[1] = v5 ^ 0xDA;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (v3 ^ (510
                                               * ((v5 ^ v4 ^ 0x5AE9D9BEE63E3EFFLL)
                                                - 0x5AE9D9BE45DF04ECLL
                                                + ((2 * (v5 ^ v4)) & 0x1CC7C7DFELL) != 2690595347))))
                            - 12))();
}

uint64_t sub_18CA954A8@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v1 < v3;
  *(_BYTE *)(v5 + a1 - 0x3B94F1D0679FCA93) = *(_BYTE *)(v4 + v7 - 0x428925971CC71AF8) ^ 0xF5;
  if (v9 == v6 - 0x3E842CD1238108C4 < v3)
    v9 = v6 - 0x3E842CD1238108C4 < v1;
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(v8 + 8 * ((510 * v9) ^ v2)) - 12))(v6 - 0x3E842CD1238108C4 < v1);
}

uint64_t sub_18CA9554C()
{
  int v0;
  int v1;
  uint64_t v2;

  LOWORD(STACK[0x76E]) = 31162;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((LODWORD(STACK[0xA24]) != v1) * (((v0 + 1549065379) & 0xA3AB1FDB) - 213)) ^ v0))
                            - 8))();
}

uint64_t sub_18CA95590()
{
  int v0;
  int v1;
  uint64_t v2;

  LOWORD(STACK[0x76E]) = ((LOWORD(STACK[0xAB4]) - 30064) ^ 0x3F3E)
                       + 14975
                       + (((v0 + 4287) & 0xEBBF ^ 0x7FE7) & (2 * (LOWORD(STACK[0xAB4]) - 30064)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 - 843050817) & 0x323FEBBF ^ (49 * v1)))
                            - ((((v0 - 843050817) & 0x323FEBBF) + 334) ^ ((((v0 - 843050817) & 0x323FEBBF) + 409675621) | 0x211400D0u) ^ 0x397F2B3DLL)))();
}

uint64_t sub_18CA9561C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((65 * (v0 ^ 0x2E3) - 570) | 0x82) + 278) * (v2 == v1)) ^ v0))
                            - 12))();
}

uint64_t sub_18CA95654()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (49 * v1)))
                            - ((v0 + 334) ^ ((v0 + 409675621) | 0x211400D0u) ^ 0x397F2B3DLL)))();
}

uint64_t sub_18CA9569C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  __int16 v3;
  uint64_t v4;

  LOWORD(STACK[0x76E]) = v3
                       + (*(_WORD *)(STACK[0x698] + 56) ^ 0x5B9C)
                       + 4612
                       + ((a1 - 9959) ^ 0x4A2F ^ (2 * *(_WORD *)(STACK[0x698] + 56)) & 0xDBFE);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((((65 * ((a1 - 964634343) ^ 0x2E3) - 570) | 0x82) + 278) * (v2 == v1)) ^ (a1 - 964634343)))
                            - 12))();
}

uint64_t sub_18CA95718@<X0>(int a1@<W8>)
{
  __int16 v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0x698];
  LOWORD(STACK[0x76E]) = v1
                       + ((2 * *(_WORD *)(STACK[0x698] + 56)) & 0x779E ^ 0x6486)
                       + 17460
                       + ((10 * (a1 ^ 0x93) + 2850) ^ *(_WORD *)(STACK[0x698] + 56));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((699 * (*(_QWORD *)(v3 + 136) != 0)) ^ a1)) - 4))();
}

uint64_t sub_18CA95780@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * ((1431 * (*(_DWORD *)(v1 + 144) != ((a1 + 440) ^ 0x1D874451))) ^ a1))
                            - 4))();
}

uint64_t sub_18CA957B8()
{
  __int16 v0;
  __int16 v1;
  int v2;
  __int16 v3;
  void *v4;

  v3 = v1 + ((2 * (v0 - 18139)) & 0x7FD4) + ((v0 - 18139) ^ 0xBD60 ^ v2) + 16409;
  LOWORD(STACK[0x76E]) = v3;
  v4 = malloc_type_malloc((unsigned __int16)(v3 - 31159), 0xEF940A81uLL);
  STACK[0x7A0] = (unint64_t)v4;
  return ((uint64_t (*)(void))(qword_1E2538EC0[((v4 != 0) * (((v2 - 672757387) & 0x28197481) + 1071)) ^ v2] - 12))();
}

uint64_t sub_18CA95848(_BYTE *a1)
{
  __int16 v1;
  int v2;
  int v3;
  uint64_t v4;

  *a1 = 1;
  a1[1] = (unsigned __int16)((((((v2 + 374) | 0x91) + 432) | 0x8C) ^ 0x808B) + v1) >> 8;
  a1[2] = (v1 - ((2 * v1 + 12) & 0x7A) - 125) ^ 0x3D;
  return (*(uint64_t (**)(void))(v4 + 8 * ((518 * (LODWORD(STACK[0xA24]) != v3)) | (v2 + 374) | 0x91)))();
}

uint64_t sub_18CA958C0@<X0>(_BYTE *a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  __int16 v3;

  a1[3] = 4;
  v3 = LOWORD(STACK[0xAB4])
     - 2 * ((((((a2 - 788) ^ 0x7B0) - 649) ^ 0xED4) + LOWORD(STACK[0xAB4])) & 0x6DEE ^ STACK[0xAB4] & 4)
     - 1926;
  a1[4] = HIBYTE(v3) ^ 0x6D;
  a1[5] = v3 ^ 0xEA;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((596
                                          * ((LODWORD(STACK[0xAB4]) | ((unint64_t)(LODWORD(STACK[0xAB4]) < 0x33E27570uLL) << 32)) != 870479216)) ^ (a2 - 788)))
                            - 8))();
}

uint64_t sub_18CA9599C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  unint64_t v11;
  int v12;
  _BOOL8 v13;

  v10 = v5 < a2;
  *(_BYTE *)(v7 + v3 - 0x50CDA7F03CDBFF96) = *(_BYTE *)(v6 + v4 - 0x391FE43E0D85B0D1) ^ 0xAF;
  v11 = v8 - 0x4EA9755B7FB1D946 + (v2 ^ 0x289u);
  v12 = v10 ^ (v11 < a2);
  v13 = v11 < v5;
  if (!v12)
    v10 = v13;
  return (*(uint64_t (**)(uint64_t, _BOOL8))(v9 + 8 * ((v10 | (16 * v10)) ^ v2)))(a1, v13);
}

uint64_t sub_18CA95A34()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((v0 - 1065750236) & 0x3F8609EF ^ 0x196) * (v1 ^ 1)) ^ (v0 - 432)))
                            - (v0 ^ 0x6C5)))();
}

uint64_t sub_18CA95AB0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;

  *(_BYTE *)(a1 + (v4 + v2)) = 1;
  v6 = ((v4 - 1428037066) | ((unint64_t)((v4 - 1428037066) < 0xB21D678) << 32))
     + 0x4B8550ABEE0D9DB5;
  v7 = STACK[0x698];
  v8 = *(_DWORD *)(STACK[0x698] + 56);
  *(_BYTE *)(v6 + (v3 ^ 0x5DAu) + a1 - 0x4B8550ABF92F7AF9 + 577) = BYTE1(v8) ^ 0xB6;
  *(_BYTE *)(v6 + (v3 + 1404) + a1 - 0x4B8550ABF92F7AF9) = v8 ^ 0x63;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1469
                                          * ((*(_DWORD *)(v7 + 56) ^ a2 ^ 0x1DE6E36CEEFFEC5BLL)
                                           - 0x1DE6E36C1EF1C31DLL
                                           + ((2 * (*(_DWORD *)(v7 + 56) ^ a2)) & 0x1DDFFD8B6) != 3490588990)) ^ v3))
                            - 8))();
}

uint64_t sub_18CA95BE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = a3 < v7;
  *(_BYTE *)(a4 + v8 - 0x13A9A13F3DB8447FLL) = *(_BYTE *)(v6 + v9 - 0x13F56C0F97482529) - 60;
  if (v11 == a5 - 0x7F8319AAD8EAF347 < ((v5 + 578) ^ (v7 + 1717)))
    v11 = a5 - 0x7F8319AAD8EAF347 < a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((103 * v11) ^ v5)) - 8))();
}

uint64_t sub_18CA95C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unsigned int a6@<W8>)
{
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10 + 8 * ((37 * (v7 ^ 0x6C0)) | (14 * (v9 == v8))))
                                                                                              - ((43
                                                                                                * ((37 * (v7 ^ 0x6C0)) ^ 0x1E2)
                                                                                                - 8803266) & 0x3ABED7F7 ^ 0x3A3884BFLL)))(a1, *(_DWORD *)(v6 + 56) ^ a6, a2, a3, a4, a5, 0);
}

uint64_t sub_18CA95D2C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  _BYTE *v8;
  unint64_t v9;

  *(_BYTE *)(a1 + (v3 + v2)) = 2;
  v6 = STACK[0x698];
  v7 = *(_DWORD *)(STACK[0x698] + 56);
  v8 = (_BYTE *)(((v3 - 121380428 + (v4 ^ 0x3A38827A)) | ((unint64_t)(v3
                                                                                         - 121380428
                                                                                         + (v4 ^ 0x3A38827A) < 0x5903DCC3) << 32))
               + a1
               - 1493425347);
  *v8 = (v4 + 58) ^ BYTE1(v7) ^ 0x47;
  v8[1] = v7 ^ 0x63;
  v9 = (*(_DWORD *)(v6 + 56) ^ a2 ^ 0xDCBEFBB365FDFFDFLL)
     + ((2 * (*(_DWORD *)(v6 + 56) ^ a2)) & 0xCBFBFFBE)
     + 0x2341044CD43A84D8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)((121 * (((v9 - v4) | (v4 - v9)) >> 63)) ^ (v4 - 976781871)))
                            - 4))();
}

uint64_t sub_18CA95E74(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = a2 < v4;
  *(_BYTE *)(a3 + v6 - 0x77A07387ACA3CC6) = *(_BYTE *)(v8 + v7 - 0x1DB2B44047C06B2FLL) - 60;
  if (v10 == a4 - 0x7ABCD7CAEFC29FB8 < v4)
    v10 = a4 - 0x7ABCD7CAEFC29FB8 < a2;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9 + 8 * ((453 * !v10) ^ v5)) - 4))(a1);
}

uint64_t sub_18CA95F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8 + 8 * ((370 * (*(_QWORD *)(v6 + 136) != 0)) ^ (v7 - 1515)))
                                                                                               - 4))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_18CA95F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (int)((((((*(_DWORD *)(v7 + 144) - (v8 - 1707)) | (v8 - 1707 - *(_DWORD *)(v7 + 144))) >> (((v8 + 85 + a7) ^ 0xA3) - 98)) & 1) * (((v8 - 1707 + a7) | 0x80) + 1386)) | (v8 - 1707) ^ 0x1D874639))
                                                                                               - 4))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_18CA95FE0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  char v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  _BYTE *v10;

  v8 = (((v6 + v3) << (v4 ^ 0x80)) & 0xFB5EBEFE) + ((v6 + v3) ^ 0x7DAF5F7F);
  *(_BYTE *)(a1 + v8 - 2108645376 + a2 - 33) = 5;
  v9 = *(_WORD *)(v2 + 144) - ((2 * *(_WORD *)(v2 + 144) + 29258) & 0x654C) + 27595;
  v10 = (_BYTE *)(((v8 - 1795885240) | ((unint64_t)(v8 - 1795885240 < 0x12A456C6) << 32)) + a1 - 312760006);
  *v10 = HIBYTE(v9) ^ 0xB2;
  v10[1] = v9 ^ 0xA6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (a2 ^ (((*(unsigned int *)(v2 + 144) | ((unint64_t)(*(_DWORD *)(v2 + 144) < v5) << 32)) == 495404763) << 6)))
                            - 4))();
}

uint64_t sub_18CA96128@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  *(_BYTE *)(v3 + v7 + v4 - 0x65ED23AE14A34B90) = *(_BYTE *)(v6 + v1 - 0x1F43A200490039DALL) - 108;
  v10 = v5 < v2;
  if (v10 == v8 - 0x2C4122141F957E10 < v2)
    v10 = v8 - 0x2C4122141F957E10 < v5;
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(v9 + 8 * (a1 ^ (!v10 << 6))) - 4))(v8 - 0x2C4122141F957E10 < v5);
}

void sub_18CA961C0()
{
  void *v0;

  free(v0);
  free((void *)STACK[0x690]);
  JUMPOUT(0x18CA918B4);
}

uint64_t sub_18CA96234()
{
  uint64_t v0;
  unint64_t v1;

  v1 = STACK[0x7C8];
  ++STACK[0x688];
  return ((uint64_t (*)(unint64_t))(qword_1E2538EC0[(30 * (v0 == 145)) | v0] - 4))(v1);
}

void sub_18CA962A8()
{
  JUMPOUT(0x18CA96260);
}

void sub_18CA962C4(void *a1)
{
  free(a1);
  JUMPOUT(0x18CA918B4);
}

uint64_t sub_18CA96318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  uint64_t v9;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v9
                                                                      + 8
                                                                      * ((88 * (v8 >= ((a8 - 1550) | 0x168u) - 492)) ^ a8)))(a1, a2, a3, 0);
}

uint64_t sub_18CA96348(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int8x16_t v17;
  int8x16_t v18;
  uint64_t v19;
  int8x16_t v20;
  int8x16x4_t v22;
  int8x16x4_t v23;

  v16 = (a8 - 1698) | 0x185;
  v22.val[1].i64[0] = ((_BYTE)a2 + 7) & 0xF;
  v22.val[1].i64[1] = ((_BYTE)a2 + 8) & 0xF;
  v22.val[2].i64[0] = ((_BYTE)a2 + 9) & 0xF;
  v22.val[2].i64[1] = ((_BYTE)a2 + 10) & 0xF;
  v22.val[3].i64[0] = ((_BYTE)a2 + 11) & 0xF;
  v22.val[3].i64[1] = ((_BYTE)a2 + 12) & 0xF;
  v23.val[0].i64[0] = ((_BYTE)a2 + 13) & 0xF;
  v23.val[0].i64[1] = ((_BYTE)a2 + 14) & 0xF;
  v23.val[1].i64[0] = ((_BYTE)a2 - 1) & 0xF;
  v23.val[1].i64[1] = a2 & 0xF;
  v23.val[2].i64[0] = (a2 + 1) & 0xF;
  v23.val[2].i64[1] = (a2 + 2) & 0xF;
  v23.val[3].i64[0] = ((_BYTE)a2 + 3) & 0xF;
  v23.val[3].i64[1] = ((_BYTE)a2 + 4) & 0xF;
  v17.i64[0] = 0x1919191919191919;
  v17.i64[1] = 0x1919191919191919;
  v18.i64[0] = 0xB1B1B1B1B1B1B1B1;
  v18.i64[1] = 0xB1B1B1B1B1B1B1B1;
  v19 = a2 + ((v16 + 2060805706) & 0x852A9F75 ^ (v9 + 1723));
  v22.val[0].i64[0] = ((_BYTE)a2 + ((((a8 + 94) | 0x85) + 74) & 0x75 ^ (v9 - 69))) & 0xF;
  v22.val[0].i64[1] = ((_BYTE)a2 + 6) & 0xF;
  v20.i64[0] = vqtbl4q_s8(v22, (int8x16_t)xmmword_18CF0E650).u64[0];
  v20.i64[1] = vqtbl4q_s8(v23, (int8x16_t)xmmword_18CF0E650).u64[0];
  *(int8x16_t *)(v14 + (v8 + v10)) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v11 + v19), *(int8x16_t *)(v13 + (v19 & 0xF))), veorq_s8(*(int8x16_t *)((v19 & 0xF) + a1 + 3), *(int8x16_t *)((v19 & 0xF) + a3 + 2))), v18), vmulq_s8(v20, v17));
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((645 * ((v12 & 0xFFFFFFF0) == 16)) ^ v16)) - 8))();
}

void sub_18CA964C0()
{
  JUMPOUT(0x18CA9644CLL);
}

uint64_t sub_18CA964D0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (int)((((((a6 + 420137058) ^ 0x190AC9E8) + 111) ^ (a6 + 420137058) & 0xE6F536FA)
                                               * (v6 == a4)) ^ a6))
                            - 4))();
}

uint64_t sub_18CA96514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  char v9;
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(v10
                                                                                               + 8
                                                                                               * ((22
                                                                                                 * ((v9 & 8) == ((a8 - 1206) | 0x10) - 508)) ^ a8)))(a1, a2, a3, a4, (a4 + v8), (a4 + a2), (a8 - 146));
}

uint64_t sub_18CA9654C(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  int8x16x4_t v15;

  v12 = (v10 - 436) | 0x196;
  v13 = (v12 ^ 0xFFFFFE26) & v8;
  LODWORD(STACK[0x688]) = v13;
  v15.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)v5 + (_BYTE)a4) & 0xF;
  v15.val[0].i64[1] = ((_BYTE)a2 + (_BYTE)a4 + 6) & 0xF;
  v15.val[1].i64[0] = ((_BYTE)a2 + (_BYTE)a4 + 7) & 0xF;
  v15.val[1].i64[1] = ((_BYTE)a2 + (_BYTE)a4 + ((((v10 + 76) | 0x96) + 5) & 0xBD ^ 0xF9)) & 0xF;
  v15.val[2].i64[0] = ((_BYTE)a2 + (_BYTE)a4 + 9) & 0xF;
  v15.val[2].i64[1] = ((_BYTE)a2 + (_BYTE)a4 + 10) & 0xF;
  v15.val[3].i64[0] = ((_BYTE)a2 + (_BYTE)a4 + 11) & 0xF;
  v15.val[3].i64[1] = ((_BYTE)a2 + (_BYTE)a4 + 12) & 0xF;
  *(int8x8_t *)(v11 + (v4 + v6 + a4)) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v7 + (a2 + v5 + a4)), *(int8x8_t *)(v9 + v15.val[0].i64[0])), veor_s8(*(int8x8_t *)(v15.val[0].i64[0] + a1 + 3), *(int8x8_t *)(v15.val[0].i64[0] + a3 + 2))), (int8x8_t)0xB1B1B1B1B1B1B1B1), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v15, (int8x16_t)xmmword_18CF0E660), (int8x8_t)0x1919191919191919));
  return ((uint64_t (*)(__n128))(qword_1E2538EC0[((2 * (v13 - 8 != a4)) | (32 * (v13 - 8 != a4))) ^ v12] - 4))((__n128)xmmword_18CF0E660);
}

void sub_18CA9667C()
{
  JUMPOUT(0x18CA965A4);
}

uint64_t sub_18CA96684()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((97 * (v0 ^ 0x2B1)) ^ (v0 - 548)) * (v1 == LODWORD(STACK[0x688]))) ^ v0))
                            - 12))();
}

uint64_t sub_18CA966D0@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  int v2;
  uint64_t v3;

  *v1 = v1[623];
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((11
                                * ((((a1 ^ 0x45) - 113) ^ (((v2 - 1 - (a1 ^ 0x7B451845)) | ((a1 ^ 0x7B451845) - (v2 - 1))) < 0)) & 1)) | ((a1 ^ 0x7B451845) - 2068125674))))();
}

uint64_t sub_18CA9672C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  unint64_t v8;
  uint64_t v9;

  v5 = 4 * (v2 - 2053560048);
  v6 = *(_DWORD *)(v1 + 4 * (v2 - 2053560049));
  v7 = (*(_DWORD *)(v1 + v5) ^ 0x4EA00 ^ (1566083941 * (v6 ^ 0xBB91B304 ^ ((v6 >> 30) | 0xECF0ED38))
                                        - ((-1162799414 * (v6 ^ 0xBB91B304 ^ ((v6 >> 30) | 0xECF0ED38))) & 0xAECB687A)
                                        + 1466283069))
     - v2;
  *(_DWORD *)(v1 + v5) = v7 - ((2 * v7 - 187847200) & 0xAEC2BC7A) - 775408339;
  v8 = 1606104089 * ((v4 - 192) ^ 0xC2BEFB347517423ELL);
  *(_DWORD *)(v4 - 164) = -1231242123 - v8 + a1;
  *(_DWORD *)(v4 - 172) = ((a1 - 1340772326) ^ 0x5D) + v8;
  *(_DWORD *)(v4 - 168) = (a1 - 1340772326) ^ v8;
  *(_DWORD *)(v4 - 180) = v8;
  *(_DWORD *)(v4 - 176) = (a1 - 1340772322) ^ v8;
  *(_QWORD *)(v4 - 192) = (v2 - 1805776513) + v8;
  *(_QWORD *)(v4 - 160) = 247783534 - v8;
  v9 = sub_18CB18D94(v4 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * *(int *)(v4 - 184)) - 4))(v9);
}

uint64_t sub_18CA9688C()
{
  unsigned int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v0 < ((LODWORD(STACK[0x690]) - 850) ^ 0xEC4E315u))
                                * ((LODWORD(STACK[0x690]) + 2068124785) ^ 0x7B451D18)) ^ (LODWORD(STACK[0x690]) - 850))))();
}

uint64_t sub_18CA968D8()
{
  unsigned int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v0 > (LODWORD(STACK[0x690]) ^ 0xEC4E410u))
                                * (((LODWORD(STACK[0x690]) + 1782909257) | 0x11000B28) ^ 0x7B451D18)) ^ (LODWORD(STACK[0x690]) - 850))))();
}

uint64_t sub_18CA96938@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int8x16_t v3;
  uint64_t v4;
  int8x16_t v5;
  int32x4_t v6;
  int32x4_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int32x4_t v13;
  int8x16_t v14;

  v2 = ((a1 ^ 0x692) + 942) | 0x2C0;
  *(_DWORD *)&aHAwAwAwAwAwAwA[4] = -681484739;
  free((void *)STACK[0x678]);
  v3 = (int8x16_t)vld1q_dup_f32((const float *)&aHAwAwAwAwAwAwA[4]);
  v4 = (v2 - 968);
  v5.i64[0] = 0x8000000080000000;
  v5.i64[1] = 0x8000000080000000;
  v6 = vdupq_n_s32(0xCD31BD79);
  v7.i64[0] = -1;
  v7.i64[1] = -1;
  v8.i32[0] = *(_DWORD *)&aHAwAwAwAwAwAwA[8];
  v8.i32[1] = *(_DWORD *)&aHAwAwAwAwAwAwA[4 * v4 - 3080];
  v8.i32[2] = *(_DWORD *)&aHAwAwAwAwAwAwA[16];
  v9 = vextq_s8(v3, v8, 0xCuLL);
  v10 = v8;
  v10.i32[3] = *(_DWORD *)&aHAwAwAwAwAwAwA[20];
  v11 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v9, v5), (int8x16_t)vdupq_n_s32(0xBFDDEF53)), vdupq_n_s32(0xEBFFFDFE));
  v12 = veorq_s8(vandq_s8(v10, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x592192A4u));
  v13 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v12, (int8x16_t)vdupq_n_s32(0x32CE4286u)), (int32x4_t)vorrq_s8(v12, (int8x16_t)v6)), v6), (int8x16_t)vdupq_n_s32(0x548F2AFu)), v7), (int8x16_t)vdupq_n_s32(0x39C67CB0u));
  v14.i32[0] = *((_DWORD *)&STACK[0x15C8] + ((aHAwAwAwAwAwAwA[8] & 1) == 0));
  v14.i32[1] = *((_DWORD *)&STACK[0x15C8] + ((*(_DWORD *)&aHAwAwAwAwAwAwA[4 * v4 - 3080] & 1) == 0));
  v14.i32[2] = *((_DWORD *)&STACK[0x15C8] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[16] & 1));
  v14.i32[3] = *((_DWORD *)&STACK[0x15C8] + ((aHAwAwAwAwAwAwA[20] & 1) == 0));
  *(int8x16_t *)&aHAwAwAwAwAwAwA[4] = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)&aHAwAwAwAwAwAwA[1592], v14), (int8x16_t)vdupq_n_s32(0xDC79EF4u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v13, veorq_s8(v11, (int8x16_t)vdupq_n_s32(0xABDDED51))), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v13, v13), (int8x16_t)vdupq_n_s32(0x4C305472u))), vdupq_n_s32(0xA6182A39)), 1uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v2 - 867) ^ 0x727)) - 12))();
}

uint64_t sub_18CA969A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unint64_t v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  uint64_t v73;

  v9 = LODWORD(STACK[0x37C]) ^ LODWORD(STACK[0x214]);
  v10 = (((v7 + 902781206) >> 8) ^ 0xDE9EF66F) + v7 + (((v7 + 902781206) >> 7) & 0x13DECDE);
  v11 = v10 + (((v10 + 1462788775) >> 5) ^ 0x4800908C) - (((v10 + 1462788775) >> 4) & 0xFFEDEE6) + 1;
  v12 = v11 - ((2 * v11 + 509584436) & 0xBC548298) + 1834619750;
  v13 = ((2 * ((v12 ^ 0x5E2A414C) - 1879573490)) & 0xDFBFF776) + (((v12 ^ 0x5E2A414C) - 1879573490) ^ 0x6FDFFBBB);
  v14 = (((v13 - 1876949947) >> 10) ^ 0x827DFADE) + v13 + (((v13 - 1876949947) >> 9) & 0x7BF5BC);
  v15 = ((v14 + 228723047) & 0xDB3EFDFE) + v14 + (((v14 + 228723047) >> 1) ^ 0x6D9F7EFF);
  v16 = v15 - ((2 * v15 + 1074074832) & 0xBCCB2E6C) - 26730082;
  v17 = ((2 * ((v16 ^ 0x5E659736) + 1287124013)) & 0xFB7B21E6) + (((v16 ^ 0x5E659736) + 1287124013) ^ 0x7DBD90F3);
  v18 = v17 + (((v17 - 2109575411) >> 13) ^ 0x1A004600) - ((2 * ((v17 - 2109575411) >> 13)) & 0xF73FE);
  v19 = v18 + (((v18 + 1749166349) >> 6) ^ 0xB10CA840) - (((v18 + 1749166349) >> 5) & 0x5E6AF7E) + 2;
  v20 = v19 - ((2 * v19 + 1852506518) & 0x8F4EB030) + 2128402659;
  v21 = ((2 * ((v20 ^ 0xC7A75818) - 1282870125)) & 0xFFBBDCFE) + (((v20 ^ 0xC7A75818) - 1282870125) ^ 0xFFDDEE7F);
  v22 = (((v21 + 2232705) >> 8) ^ 0x99F7B7BF) + v21 + (((v21 + 2232705) >> 7) & 0x1EF6F7E);
  v23 = (((v22 + 1714051522) >> 2) ^ 0xFFCFF8C9) + v22 + (((v22 + 1714051522) >> 1) & 0x7F9FF192);
  v24 = v23 - ((2 * v23 - 860569102) & 0xA7354E0E) + 972359680;
  v25 = ((2 * ((v24 ^ 0xD39AA707) + 707258702)) & 0xBEF8ED38) + (((v24 ^ 0xD39AA707) + 707258702) ^ 0xDF7C769C);
  v26 = (((v25 + 545491300) >> 13) ^ 0xE712DFFD) + v25 + (((v25 + 545491300) >> 12) & 0x5BFFA);
  v27 = (((v26 + 963684711) >> 3) ^ 0x7F907FEC) + v26 + (((v26 + 963684711) >> 2) & 0x3F20FFD8);
  v28 = v27 - ((2 * v27 + 62935798) & 0xD9AE4DC) - 1062364183;
  v29 = (v28 ^ 0x8D4224E4) + ((v28 >> 11) ^ 0xC010AD66) + ((v28 >> 10) & 0x3DF5BA ^ 0xFFDEAF77) + 1073674975;
  v30 = (((((2 * v29) & 0xBFFFFFBC) + (v29 ^ 0x5FFFFFDE) - 1610612702) >> 5) ^ 0xD7637DC9)
      + ((2 * v29) & 0xBFFFFFBC)
      + (v29 ^ 0x5FFFFFDE)
      + (((((2 * v29) & 0xBFFFFFBC) + (v29 ^ 0x5FFFFFDE) - 1610612702) >> 4) & 0xEC6FB92);
  v31 = v30 - ((2 * v30 - 1858534222) & 0xA2EB2CB2) - 1710090062;
  v32 = (v31 ^ 0xE52942A1) + ((v31 >> 12) ^ 0xE19CD216) + ((v31 >> 11) & 0x1AFEFA ^ 0xFFE75BD7) + 510492543;
  v33 = (((((2 * v32) & 0xBDFFF4FE) + (v32 ^ 0x5EFFFA7F) - 1593834111) >> 7) ^ 0x7FD57BFD)
      + ((2 * v32) & 0xBDFFF4FE)
      + (v32 ^ 0x5EFFFA7F)
      + (((((2 * v32) & 0xBDFFF4FE) + (v32 ^ 0x5EFFFA7F) - 1593834111) >> 6) & 0x3AAF7FA);
  v34 = v33 - ((2 * v33 + 1112871688) & 0xF548E5BA) + 466549857;
  v35 = ((2 * ((v34 ^ 0xFAA472DD) - 2045107421)) & 0xFDFDEDE6) + (((v34 ^ 0xFAA472DD) - 2045107421) ^ 0x7EFEF6F3);
  v36 = (((v35 - 2130638579) >> 11) ^ 0x7B6E3597) + v35 + ((2 * ((v35 - 2130638579) >> 11)) & 0x1C6B2E);
  v37 = v36 + (((v36 + 93508470) >> 8) ^ 0xA2080080) - (((v36 + 93508470) >> 7) & 0x1EFFEFE) + 1;
  v38 = v37 - ((2 * v37 + 1192601066) & 0x6104C42A) - 1811073782;
  v39 = v6 & ((v24 ^ v12 ^ v34) >> 1) ^ 0x7D8A5432;
  v40 = v39 - ((2 * v39) & 0xEE002070) + 1996757240;
  v41 = v6 & ((v28 ^ v16 ^ v38) >> 1) ^ 0xE329A11A;
  v42 = (((2 * v41) | 0x9E2468CC) - v41 - 1326593126) ^ 0x9A28A453;
  v43 = (v38 ^ 0xA12EC46) + ((v38 >> 8) ^ 0x80D14BC) + ((v38 >> 7) & 0x1F1F35E ^ 0xFFEFDEA7) - 134678095;
  v44 = (((((2 * v43) & 0xFEFEDFFE) + (v43 ^ 0xFF7F6FFF) + 8425473) >> 8) ^ 0x396FFE6F)
      + ((2 * v43) & 0xFEFEDFFE)
      + (v43 ^ 0xFF7F6FFF)
      + (((((2 * v43) & 0xFEFEDFFE) + (v43 ^ 0xFF7F6FFF) + 8425473) >> 7) & 0xDFFCDE);
  v45 = v44 - ((2 * v44 + 2171684) & 0x31F30A) + 1193904919;
  v46 = ((((v31 ^ v20 ^ v45) >> 1) & v6 ^ 0x2BA1A008)
       + (((v31 ^ v20 ^ v45) >> 1) & 0x57D88010 ^ 0x54581990)
       - ((((v31 ^ v20 ^ v45) >> 1) & v6 ^ 0x2BA1A008) & 0x57D88010)) ^ 0x77982992;
  v47 = (v46 | 0xAFEBF002) - (v46 | 0x50140FFD) + 1343492093;
  v48 = LODWORD(STACK[0x264]) ^ LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x4A0]) ^ 0xA2C14FC7 ^ ((((LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x4A0])) >> 1) & v6 ^ 0x42CB442C)
                                                                                            + (((LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x4A0])) >> 1) & 0x60F9A41A ^ 0xA030A8D2)
                                                                                            - ((((LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x4A0])) >> 1) & v6 ^ 0x42CB442C) & 0x60F9A41A));
  v49 = (v48 & 0xFF188309 ^ 0x3E080209) - ((2 * (v48 & 0xFF188309 ^ 0x3E080209)) & 0x84010400) - 1033770396;
  v50 = ((v48 & 0x450866 ^ 0x4511084B | v48 & 0xA27490) - 1) ^ 0x45523C7A;
  HIDWORD(v51) = LODWORD(STACK[0x608]) ^ 0x2D40;
  LODWORD(v51) = LODWORD(STACK[0x608]) ^ 0x2F2F4000;
  v52 = v12 ^ ((v49 & 0xFF3F8F09 ^ 0x84318900 | v50)
             - 2 * ((v49 & 0xFF3F8F09 ^ 0x84318900 | v50) & 0x3A1DB91F ^ v50 & 0x1C)
             + 975026443) ^ a6 ^ v24 ^ v34 ^ v40;
  v53 = (v51 >> 14) - ((2 * (v51 >> 14)) & 0xB3531918) + 1504283788;
  HIDWORD(v51) = v52 ^ 0x11C6;
  LODWORD(v51) = v52 ^ 0x370B8000;
  v54 = ((v51 >> 14) - ((2 * (v51 >> 14)) & 0xB2A46A72) - 648923847) ^ v53;
  v55 = (((2 * (v6 & (LODWORD(STACK[0x580]) >> 1) ^ 0x45986006)) | 0x375C63A)
       - (v6 & (LODWORD(STACK[0x580]) >> 1) ^ 0x45986006)
       + 2118458595) ^ 0x33B8AB0F;
  LODWORD(STACK[0x608]) = v55 - ((2 * v55) & 0x67CC1F4C) + 870715303;
  HIDWORD(v51) = v54 ^ 0x1FCC6;
  LODWORD(v51) = v54 ^ 0x1D800000;
  v56 = v51 >> 18;
  LODWORD(STACK[0x5D0]) = (2 * v56) & 0x81EB06F0;
  LODWORD(STACK[0x5A0]) = v56 + 1089831800;
  v57 = LODWORD(STACK[0x5B0]) ^ LODWORD(STACK[0x428]) ^ LODWORD(STACK[0x5C0]);
  v58 = ((v6 & (LODWORD(STACK[0x428]) >> 1) ^ 0x1DAB642A)
       - ((2 * (v6 & (LODWORD(STACK[0x428]) >> 1) ^ 0x1DAB642A)) & 0xA9738050)
       - 726019863) ^ 0xFC8DDAE1;
  v59 = STACK[0x640];
  v60 = ((LODWORD(STACK[0x540]) ^ LODWORD(STACK[0x590])) ^ LODWORD(STACK[0x640])) >> 1;
  v61 = ((v60 & v6 ^ 0x65E0A030) + (v60 & 0x15A8008 ^ 0x801E1B88) - ((v60 & v6 ^ 0x65E0A030) & 0x15A8008)) ^ 0x8D5F9B80;
  v62 = (((2 * (v6 & (LODWORD(STACK[0x590]) >> 1) ^ 0x34A10000)) | 0xB397B022)
       - (v6 & (LODWORD(STACK[0x590]) >> 1) ^ 0x34A10000)
       + 640952303) ^ 0xFBFA0891;
  LODWORD(STACK[0x380]) ^= LODWORD(STACK[0x428]) ^ LODWORD(STACK[0x3B0]) ^ LODWORD(STACK[0x5B0]) ^ LODWORD(STACK[0x5F0]) ^ LODWORD(STACK[0x210]) ^ v57 ^ (((v57 >> 1) & 0x5AD2E022 ^ 0x5A56B3A3 | (v57 >> 1) & 0x2529041C) - 1) ^ LODWORD(STACK[0x268]) ^ (v58 - ((2 * v58) & 0xE53D4430) - 224484840) ^ v8 ^ v16 ^ v28 ^ v38 ^ ((v42 | 0xEFA03C10) - (v42 | 0x105FC3EF) + 274711535);
  v63 = (((2 * v62) & 0x969EF3D8) - v62 + 883983890) ^ LODWORD(STACK[0x3B4]) ^ v59 ^ (v61
                                                                                    - ((2 * v61) & 0xE2AAC9EC)
                                                                                    + 1901422071) ^ a3 ^ v20 ^ v31 ^ v45 ^ v47;
  LODWORD(STACK[0x264]) = v63;
  LODWORD(STACK[0x37C]) = v63 ^ 0x4A1A9754;
  v64 = LODWORD(STACK[0x498]) ^ 0xD;
  LODWORD(STACK[0x3B8]) = LODWORD(STACK[0x3D8]) ^ 0x1673F742;
  LODWORD(STACK[0x3B4]) = LODWORD(STACK[0x350]) ^ 0xE963221A;
  LODWORD(STACK[0x3B0]) = LODWORD(STACK[0x408]) ^ 0x5A7F88F8;
  v65 = STACK[0xB88];
  v66 = (LODWORD(STACK[0x680]) + 11632030) | 0x7C005284;
  LODWORD(STACK[0x640]) = v66;
  v67 = (((v66 - 728609101) ^ 0x51442178) - ((2 * ((v66 - 728609101) ^ 0x51442178)) & 0xFC1E613C) + 2114924702) ^ 0x284D2E0C;
  LOBYTE(v66) = ((v67 ^ 0xFFFFFF92) << v64) - ((2 * ((v67 ^ 0xFFFFFF92) << v64)) & 0xB4);
  v68 = ((((v67 ^ 0x92) & LOBYTE(STACK[0x3B8]))
                         - ((2 * ((v67 ^ 0x92) & LOBYTE(STACK[0x3B8]))) & 0x66)
                         + 51) ^ 0x33) >> STACK[0x668];
  v69 = 2 * ((STACK[0x3C4] & 0x48FF756B) - ((2 * (STACK[0x3C4] & 0x48FF756B)) & 0x3F4B794C));
  v70 = (((v69 - 1085572788) ^ 0xBF4B794C)
       + 1031620332
       - 2 * (((v69 - 1085572788) ^ 0xBF4B794C) & 0x3D7D46EE ^ ((_BYTE)v69 + 96) & 2)) ^ 0x75823387;
  v71 = (v70 & STACK[0x3B4]) + 1845085777 - ((2 * (v70 & STACK[0x3B4])) & 0xDBF38CA2);
  v72 = (((v70 & STACK[0x3B0]) + 1470285986 - ((2 * (v70 & STACK[0x3B0])) & 0xAF459144)) ^ 0x57A2C8A2) >> STACK[0x3C8];
  v73 = 4
      * ((LODWORD(STACK[0x670]) ^ (v66 - 38)) ^ 0xF4u ^ (v68 - ((2 * v68) & 0x8C) + 70));
  *(_DWORD *)(STACK[0xB78] + v73) = v9 ^ (((v71 ^ 0x6DF9C651) << LODWORD(STACK[0x3BC]))
                                        - 1799203340
                                        - ((2 * ((v71 ^ 0x6DF9C651) << LODWORD(STACK[0x3BC]))) & 0x2984ABE8)) ^ (v72 - ((2 * v72) & 0x98031038) + 1275168796) ^ 0xC8827751;
  *(_DWORD *)(v65 + v73) = v9 ^ 0xDC01E2E0 ^ ((unsigned __int16)(word_18CF4F3A8[0] - 17707)
                                            - ((2 * (word_18CF4F3A8[0] - 17707)) & 0xE518)
                                            + 156594828);
  return ((uint64_t (*)(void))qword_1E2538EC0[SLODWORD(STACK[0x680])])();
}

#error "18CA97874: too big function (funcsize=0)"

void sub_18CAAC4A4()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  int v6;
  int v7;
  int v8;

  v0 = LODWORD(STACK[0x260]) + 30;
  LODWORD(STACK[0x36C]) = LODWORD(STACK[0x688]) - 526657;
  LODWORD(STACK[0x3E0]) = LODWORD(STACK[0x3D4]) - 805306432;
  LODWORD(STACK[0x368]) = LODWORD(STACK[0x254]) ^ 0x5BB61277;
  LODWORD(STACK[0x680]) = v0;
  LODWORD(STACK[0x360]) = LODWORD(STACK[0x25C]) ^ v0 ^ 0xDAFBA0;
  LODWORD(STACK[0x35C]) = LODWORD(STACK[0x258]) ^ 0x4E3DC60B;
  LODWORD(STACK[0x364]) = LODWORD(STACK[0x250]) ^ 0x3A769662;
  v1 = STACK[0x26C];
  v2 = STACK[0x3DC];
  if ((STACK[0x24C] & 1) != 0)
    v3 = STACK[0x3DC];
  else
    v3 = STACK[0x26C];
  if ((STACK[0x24C] & 1) != 0)
    v4 = STACK[0x264];
  else
    v4 = STACK[0x268];
  if ((STACK[0x24C] & 1) != 0)
    v2 = STACK[0x268];
  else
    v1 = STACK[0x264];
  v5 = (STACK[0x3D8] & 2) == 0;
  if ((STACK[0x3D8] & 2) != 0)
    v6 = v3;
  else
    v6 = v4;
  LODWORD(STACK[0x26C]) = v6;
  if (!v5)
    v3 = v4;
  LODWORD(STACK[0x268]) = v3;
  if (v5)
    v7 = v2;
  else
    v7 = v1;
  LODWORD(STACK[0x264]) = v7;
  if (v5)
    v8 = v1;
  else
    v8 = v2;
  LODWORD(STACK[0x3DC]) = v8;
  JUMPOUT(0x18CAA0518);
}

uint64_t sub_18CAAC580()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t (*v2)(void);
  int v4;
  uint64_t v5;

  v0 = STACK[0xAD0];
  v1 = STACK[0x8A0];
  v4 = 5 * ((((LODWORD(STACK[0x680]) ^ 0x662) - 175) | 0x21) ^ 0x4FE);
  free((void *)STACK[0xB88]);
  free((void *)STACK[0xB78]);
  STACK[0xAD0] = v0 - 32;
  v5 = ((v4 ^ 0x42E811AC) - 1122504011) | 8u;
  STACK[0x8A0] = (v5 ^ 0xFFFFFFFFFFFFFAFCLL) + v1;
  v2 = (uint64_t (*)(void))qword_1E2538EC0[(int)(((STACK[0x7C0] != 0) * ((((v5 ^ 0x758) - 116) ^ 0x414) + 450)) ^ v5 ^ 0x758)];
  LODWORD(STACK[0x5F0]) = 0;
  return v2();
}

uint64_t sub_18CAAC5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 + v1 - 0xA798352C87C9315) = (*(_BYTE *)(v0 + v2 - 0xD99DA20C2B2A323) ^ 0xFC)
                                            + ((*(unsigned __int8 *)(v0 + v2 - 0xD99DA20C2B2A323) << (((v5 + 67) ^ 0x15) & 0x77)) & 0xF8)
                                            + 44;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1194 * (v6 + 1 != v4 + 16)) ^ v5)) - 12))();
}

uint64_t sub_18CAAC65C(int a1)
{
  int v1;
  int v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;

  LODWORD(STACK[0x72C]) = v2 + 64;
  v5 = (_BYTE *)STACK[0x950];
  *v5 = v3[16];
  v5[1] = v3[17];
  v5[2] = v3[18];
  v5[3] = v3[19];
  v5[4] = v3[20];
  v5[5] = v3[21];
  v5[6] = v3[22];
  v5[7] = v3[23];
  v5[8] = v3[24];
  v5[9] = v3[25];
  v5[10] = v3[26];
  v5[11] = v3[27];
  v5[12] = v3[28];
  v5[13] = v3[29];
  v5[14] = v3[30];
  v5[15] = v3[31];
  LODWORD(STACK[0x82C]) = v1 + 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((972
                                          * (((STACK[0x7B8] == 0) ^ (((((a1 | 0x88) - 15) | 0x40) ^ 0x19)
                                                                                    + 1)) & 1)) ^ (((a1 | 0x88) - 15) | 0x640) ^ 0x73A))
                            - 12))();
}

uint64_t sub_18CAAC668@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unsigned int a5@<W4>, int a6@<W5>, int a7@<W8>)
{
  uint64_t v7;
  char v8;
  char v9;
  int v10;
  char v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  unint64_t v21;

  v19 = (v8 - (v9 & v11));
  v20 = *(_DWORD *)(v13 + 4 * (v17 ^ v16 ^ v18 ^ v12 ^ v19));
  HIDWORD(v21) = v20 ^ a7;
  LODWORD(v21) = v20 ^ a1;
  *(_DWORD *)(v7 + 4 * (v19 ^ a5)) = a4 ^ ((v21 >> 20) - (a2 & (2 * (v21 >> 20))) + a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((v10 == 0) * a6) ^ v14)) - 8))();
}

uint64_t sub_18CAAC6C8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unsigned int a5@<W4>, int a6@<W5>, int a7@<W8>)
{
  return sub_18CAAC668(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_18CAAC6D8()
{
  unsigned int v0;
  void *v1;

  v1 = malloc(0x404uLL);
  STACK[0xB20] = (unint64_t)v1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(23 * (((v1 == 0) ^ (v0 + 94 + v0 - 59)) & 1)) ^ v0]
                            - 12))();
}

uint64_t sub_18CAAC720(uint64_t a1)
{
  int v1;
  char v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  char v11;
  char v12;
  unsigned int v13;
  char v14;
  int v15;
  int v16;

  v4 = v1 | 0x204;
  v5 = ((LODWORD(STACK[0x550]) ^ LODWORD(STACK[0x620]) ^ 0x548D5268)
      - ((2 * (LODWORD(STACK[0x550]) ^ LODWORD(STACK[0x620]) ^ 0x548D5268) + 363524808) & 0xC1FC930E)
      + 1809040107) ^ 0x548D5268;
  v6 = ((v5 - ((2 * v5 + 363524808) & 0xC1FC930E) + 1809040107) ^ 0x60FE4987) + LODWORD(STACK[0x5B0]);
  v7 = (v6 ^ 0xFB5FAEBB) + 77615429 + ((2 * v6) & 0xF6BF5D76);
  v8 = (v7 & 0xFFFFFFFE) - ((2 * v7) & 0xF6B1BE4C) - 78061786;
  v9 = v2 & 8 ^ 0xFF3F967D;
  v10 = v9 + 12609931;
  v11 = -22 - v9;
  v13 = ((-448883050 * (v8 ^ 0x5ED1B3F1)) & 0x77F77AF6) + ((1923042123 * (v8 ^ 0x5ED1B3F1)) ^ 0xBBFBBD7B);
  if (((v13 + ((v4 + 34) ^ 0xFFFFFFFD)) & v10) - 1361342896 - 2 * ((v13 + ((v4 + 34) ^ 0xFFFFFFFD)) & v10) == -1361342896)
    v14 = v2 & 8 ^ 0x7D;
  else
    v14 = v11;
  v12 = ((v2 & 0xF7 ^ 0x4F) + 72 + ((2 * (v2 & 0xF7)) | 0x72)) ^ 0x2C;
  v15 = (((v12 | 0xD7) - (v12 | 0x28) + 40) ^ LOBYTE(STACK[0x4A0]) ^ LOBYTE(STACK[0x498]) ^ (v14 + v13 - ((2 * (v14 + v13) + 32) & 0xFC) - 114));
  v16 = ((2 * (v15 ^ 0x18A94BA)) & 0x20129DA) - (v15 ^ 0x18A94BA) - 760607982;
  LOWORD(v15) = ((2 * (v15 ^ 0xDB)) & 0xF6) - (v15 ^ 0xDB) + 6020;
  *(_DWORD *)(a1 + 4 * (v13 - 123)) = LODWORD(STACK[0x540]) ^ LODWORD(STACK[0x530]) ^ v3 ^ v16 ^ ((v16 ^ 0xD3209F98) - ((2 * (v16 ^ 0xD3209F98) + 963012762) & 0x35A066C0) - 1736218707) ^ 0xC95C9ABF ^ dword_18CF4D190[((v15 & 0x88F ^ 0x7B1C000B) + (v15 & 0x1770 ^ 0x1701) - 1) ^ 0x7B1C00F9];
  return ((uint64_t (*)(void))(qword_1E2538EC0[v4] - 4))();
}

void sub_18CAACA20()
{
  JUMPOUT(0x18CAAC8F8);
}

uint64_t sub_18CAACA30()
{
  int v0;
  void *v1;

  v1 = malloc(0x408uLL);
  STACK[0xAD8] = (unint64_t)v1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[((5 * (v0 ^ 0x2D7) - 263) * (v1 != 0)) ^ v0]
                            - 233 * (v0 ^ 0x2BAu)
                            + 458))();
}

uint64_t sub_18CAACA84(uint64_t a1)
{
  int v1;
  unsigned int v2;
  char v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unint64_t v15;
  int v16;

  v2 = ((LODWORD(STACK[0x590]) ^ LODWORD(STACK[0x470]) ^ 0x6472FDD4)
      - ((2 * (LODWORD(STACK[0x590]) ^ LODWORD(STACK[0x470]) ^ 0x6472FDD4) + 1383897270) & 0xF1859088)
      - 1576987489) ^ 0x854F6868;
  v3 = (((LOBYTE(STACK[0x590]) ^ LOBYTE(STACK[0x470]) ^ 0xD4)
       - ((2 * (LOBYTE(STACK[0x590]) ^ LOBYTE(STACK[0x470]) ^ 0xD4) - 74) & 0x88)
       - 97) ^ 0x68)
     - 73;
  v4 = ((v2 - 1576987465 - ((2 * v2 + 1383897270) & 0xF1859088) - 24) ^ 0xF8C2C844) + LODWORD(STACK[0x5B0]);
  v5 = (v4 - ((2 * v4) & 0xDC9B0E6E) - 296909001) ^ 0x9A04E060 | (((-(v3 & 1) - 1368328761) & 0x4A ^ 0x8004810B)
                                                                + ((-(v3 & 1) - 1368328761) & 0x35)
                                                                - 1) ^ 0x8004814D;
  v6 = (v5 - ((2 * v5) & 0xEBF82244) + 1979453730) ^ 0x75FC1122;
  v7 = LODWORD(STACK[0x5F0]) ^ 0x68E4;
  v8 = (v1 + 411919656) & 0xE7729BBD;
  LODWORD(STACK[0x668]) = v8;
  v9 = ((1648467110 * v6) & 0xBEAED7FE) + ((-1323250093 * v6) ^ 0xDF576BFF);
  v10 = 2 * (((v9 + 37889) & v7) - ((((v9 + 37889) & v7) << (v8 ^ 0xB9)) & 0x165F2)) - 1783011854;
  v11 = ((2 * (v7 + 547918849 + v9)) & 0xEFFFEDFE)
      + ((v7 + 547918849 + v9) ^ 0xF7FFF6FF)
      + (v10 ^ 0xB41965F3)
      + ((2 * v10) & 0xBCBFFFFC ^ 0xD7CD341B);
  v12 = LODWORD(STACK[0x610]) ^ LODWORD(STACK[0x670]) ^ (v11 - ((2 * v11 - 859827710) & 0xA940D1BA) - 1157598754);
  v13 = (((v12 >> 2) | 0xE1) - (v12 >> 3) - 113) ^ 0x62 | (((32 * v12) ^ 0xE772B2A0)
                                                                                           + 248545684) ^ 0xED08194;
  v14 = v13 - 2 * (v13 & 0x1F);
  HIDWORD(v15) = (v14 + 63) ^ 0x1B;
  LODWORD(v15) = (v14 << 24) - 1627389952;
  v16 = dword_18CF2B220[((v15 >> 29) - ((2 * (v15 >> 29)) & 0xB2) - 39) ^ 0x27];
  HIDWORD(v15) = v16 ^ 0xBB3DBE9;
  LODWORD(v15) = v16 ^ 0xC0000000;
  *(_DWORD *)(a1 + 4 * (-90 * v6 + ~(83 * v6) + 1)) = LODWORD(STACK[0x520]) ^ LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x618]) ^ 0x22C2B395 ^ ((v15 >> 29) - ((2 * (v15 >> 29)) & 0x17559DC8) + 195743460);
  return ((uint64_t (*)(void))qword_1E2538EC0[v1])();
}

void sub_18CAACDC4()
{
  JUMPOUT(0x18CAACC5CLL);
}

uint64_t sub_18CAACDD4()
{
  int v0;
  void *v1;

  v0 = STACK[0x668];
  v1 = malloc(0x404uLL);
  STACK[0xB10] = (unint64_t)v1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[((v1 != 0) * (((v0 ^ 0x6B2) - 479) ^ 0x785)) ^ v0] - 8))();
}

uint64_t sub_18CAACE1C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;

  v3 = (((LODWORD(STACK[0x424]) ^ 0x7735FF4A)
       - ((2 * (LODWORD(STACK[0x424]) ^ 0x7735FF4A) + 1225213828) & 0x757198A6)
       - 549687275) ^ 0x3AB8CC53)
     + LODWORD(STACK[0x690]);
  v4 = (((((2 * v3) & 0xDFB37FBC) + (v3 ^ 0xEFD9BFDE)) & 0xFFFFFFFE)
      - ((2 * (((2 * v3) & 0xDFB37FBC) + (v3 ^ 0xEFD9BFDE)) + 541884484) & 0xB033B924)
      - 398451531) ^ 0x1F443B2E;
  v5 = (302203643 * v4 + 148 - ((-10 * (_BYTE)v4) & 0x28)) & ((v1 - 338) ^ 0x247);
  v6 = (1573064880 - (v5 ^ 0x3F) + ((2 * (v5 ^ 0x3F)) & 0x1AE) + 3192) ^ 0x59CB1700;
  v7 = dword_18CF39AA0[LODWORD(STACK[0x5E0]) ^ LODWORD(STACK[0x608]) ^ LODWORD(STACK[0x630]) ^ 0x78E476D3 ^ (v6 - ((2 * v6) & 0x81009E0) - 9603856)];
  v8 = LODWORD(STACK[0x5A0]) ^ LODWORD(STACK[0x450]) ^ LODWORD(STACK[0x458]) ^ LODWORD(STACK[0x688]) ^ LODWORD(STACK[0x680]) ^ LODWORD(STACK[0x500]) ^ LODWORD(STACK[0x640]) ^ LODWORD(STACK[0x44C]) ^ LODWORD(STACK[0x440]) ^ LODWORD(STACK[0x464]) ^ v7 ^ (v7 >> 2) ^ (v7 >> 6);
  *(_DWORD *)(a1 + 4 * (v5 ^ 0x94u)) = LODWORD(STACK[0x678]) ^ LODWORD(STACK[0x510]) ^ 0xA58DD7A7 ^ ((v8 ^ 0x51D274C9) + 755752175 - 2 * ((v8 ^ 0x51D274C9) & 0x2D0BDCFF ^ v8 & 0x10));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * v1) - 8))();
}

void sub_18CAAD040()
{
  JUMPOUT(0x18CAACF94);
}

uint64_t sub_18CAAD050()
{
  int v0;
  void *v1;

  v1 = malloc(0x404uLL);
  STACK[0xB18] = (unint64_t)v1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(284 * (v1 != 0)) ^ v0] - ((v0 - 141) ^ 0x2D3u) + 240))();
}

uint64_t sub_18CAAD094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  char v11;
  int v12;

  v9 = ((LODWORD(STACK[0x4F0]) ^ LODWORD(STACK[0x470]) ^ 0xE939CF0)
      - ((2 * (LODWORD(STACK[0x4F0]) ^ LODWORD(STACK[0x470]) ^ 0xE939CF0) + 654657334) & 0x3A9DCC6E)
      - 1865315886) ^ 0xE939CF0;
  v10 = ((v9 - ((2 * v9 + 654657334) & 0x3A9DCC6E) - 1865315886) ^ 0x1D4EE637) + LODWORD(STACK[0x5B0]);
  LOBYTE(v10) = (v10 ^ 0xAB) + 85 + ((2 * v10) & 0x56);
  LOBYTE(v10) = ((v10 & 0xFE) - ((2 * v10) & 0xDC) + 110) ^ 0xFB;
  v11 = -111 * v10 - 125;
  v12 = (LOBYTE(STACK[0x610]) ^ LOBYTE(STACK[0x670]) ^ LOBYTE(STACK[0x5F0]) ^ (v11
                                                                                              - ((34 * v10) & ((v8 - 64) ^ 0xBE))));
  *(_DWORD *)(a1 + 4 * ((v11 - ((34 * v10) & ((v8 - 64) ^ 0xBE))) ^ 0x83u)) = LODWORD(STACK[0x4C0]) ^ LODWORD(STACK[0x510]) ^ LODWORD(STACK[0x464]) ^ v12 ^ 0x808E4DF9 ^ dword_18CF2DDB0[v12 ^ 0x92];
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * v8) - 8))();
}

void sub_18CAAD218()
{
  JUMPOUT(0x18CAAD1C4);
}

uint64_t sub_18CAAD228()
{
  int v0;
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  unint64_t v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  char v41;
  char v42;
  unsigned int v43;
  int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  char v82;
  unint64_t v83;
  unint64_t v84;
  unsigned int v85;
  unint64_t v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unint64_t v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unint64_t v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  char v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  char v129;
  char v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unint64_t v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  int v230;
  unsigned int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  unint64_t v240;
  int v241;
  int v242;
  int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  uint64_t v252;
  unsigned int v253;
  char v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  int v262;
  int v263;
  uint64_t v264;
  unsigned int v265;
  int v266;
  char v267;
  char v268;
  int v269;
  int v270;
  int v271;
  unsigned int v272;
  int v273;
  unint64_t v274;
  int v275;
  unsigned int v276;
  int v277;
  unsigned int v278;
  char v279;
  int v280;
  char v281;
  char v282;
  int v283;
  int v284;
  unint64_t v285;

  v1 = byte_18CF2E2B0[(LOBYTE(STACK[0xBBD]) - (((v0 ^ 0x7C) + 2 * LOBYTE(STACK[0xBBD])) & 0x58) - 114) ^ 0x1DLL];
  v2 = (v1 - ((2 * (_BYTE)v1 + 30) & 0x1E) + 78) ^ 0xBB;
  v3 = (((v2 - ((2 * v2) & 0x7C)) << 16) - 1690435584) ^ 0x9B3E0000;
  v4 = byte_18CF38430[(LOBYTE(STACK[0xBBF]) + ((54 - 2 * LOBYTE(STACK[0xBBF])) | 9) + 96) ^ 0xC1] ^ 0x3D;
  v5 = (v4 - ((2 * v4) & 0xFFFFFFCF) - 1903880473) ^ 0x8E8516E7 | (v3 - ((2 * v3) & 0x28160000) - 1811180413) ^ 0x940B9483;
  v6 = byte_18CF4CE70[(LOBYTE(STACK[0xBBC]) - ((2 * LOBYTE(STACK[0xBBC]) + 66) & 0x68) - 43) ^ 0x4ALL] ^ (LOBYTE(STACK[0xBBC]) - ((2 * LOBYTE(STACK[0xBBC]) + 66) & 0x68) - 43) ^ 0x81;
  v7 = (((v6 - 2 * (v6 & 7)) << 24) - 2030043136) ^ 0x87000000;
  v8 = (v7 - ((2 * v7) & 0x12000000) + 167455886) ^ 0x9FB2C8E | (v5 - ((2 * v5) & 0xFDFF60A) + 133167877) ^ 0x7EFFB05;
  v9 = byte_18CF4FD30[(LOBYTE(STACK[0xBBE]) + (~(2 * LOBYTE(STACK[0xBBE]) + 70) | 0x43) - 126) ^ 0xA4];
  v10 = v9 ^ 0xE6 ^ (((16 * v9) ^ 0x70) - ((2 * ((16 * v9) ^ 0x70)) & 0xA0) - 37);
  v11 = (((v10 - ((2 * v10) & 0x14A)) << 8) + 1873126656) ^ 0x6FA5A500;
  v12 = (v11 - ((2 * v11) & 0x74EC8600) - 1166654665) ^ 0xBA764337 | (v8 - ((2 * v8) & 0xAC196168) + 1443672244) ^ 0x560CB0B4;
  v13 = (v12 - ((2 * v12) & 0x271EA0C4) - 1819324318) ^ LODWORD(STACK[0x590]);
  v14 = ((7 - LODWORD(STACK[0x438])) & 0x40000 ^ 0x77ADEBFF) + 2 * ((7 - LODWORD(STACK[0x438])) & 0x40000);
  v15 = byte_18CF4FD30[(LOBYTE(STACK[0xBB6]) - 101) ^ 0xF0];
  v16 = ((v13 ^ 0x24840000) & (v14 - 2007886847)) == ((2 * ((v13 ^ 0x24840000) & (v14 - 2007886847))) & 0x14700000);
  v17 = byte_18CF2E2B0[(LOBYTE(STACK[0xBB5]) - ((2 * LOBYTE(STACK[0xBB5]) + 52) & 0x48) - 2) ^ 0xEALL];
  v18 = v15 ^ (((16 * v15) ^ 0x70) - ((2 * ((16 * v15) ^ 0x70)) & 0x40) + 43) ^ 0x1F;
  v19 = (((v18 - ((2 * v18) & 0x1B6)) << 8) - 1102652672) ^ 0xBE46DB00;
  v20 = (((((v17 - ((2 * v17 + 126) & 0xDA) + 44) ^ 0x7E)
         - ((2 * ((v17 - ((2 * v17 + 126) & 0xDA) + 44) ^ 0x7E)) & 0x4E)) << 16)
       + 489095168) ^ 0x1D270000;
  v21 = (v20 - ((2 * v20) & 0x6160000) + 1124856247) ^ 0x430BF1B7 | (v19 - ((2 * v19) & 0x1C92F200) + 1313438049) ^ 0x4E497961;
  v22 = byte_18CF4CE70[(LOBYTE(STACK[0xBB4]) - ((2 * LOBYTE(STACK[0xBB4]) + 50) & 0xDA) - 122) ^ 0xB3] ^ (LOBYTE(STACK[0xBB4]) - ((2 * LOBYTE(STACK[0xBB4]) + 50) & 0xFFFFFFDA) - 122) ^ 0xBF;
  v23 = (((v22 - ((2 * v22) & 0xA8)) << 24) + 1409286144) ^ 0x54000000;
  v24 = byte_18CF38430[(LOBYTE(STACK[0xBB7]) - ((2 * LOBYTE(STACK[0xBB7]) - 72) & 0x96) + 39) ^ 0x12];
  HIDWORD(v25) = v24 ^ 0x1D;
  LODWORD(v25) = (v24 ^ 0x20) << 24;
  v26 = (v23 - ((2 * v23) & 0xA000000) + 89995601) ^ 0x55D3951 | (v21 - ((2 * v21) & 0x876FD6A) - 2076475723) ^ 0x843B7EB5;
  v27 = (v25 >> 29) + (~(2 * (v25 >> 29)) | 0x53) - 41;
  HIDWORD(v25) = v27 ^ 4;
  LODWORD(v25) = (v27 ^ 0x68) << 24;
  v28 = ((((v25 >> 27) - ((2 * (v25 >> 27)) & 0x4E) - 89) ^ 0xA7)
       - ((2 * (((v25 >> 27) - ((2 * (v25 >> 27)) & 0x4E) - 89) ^ 0xA7)) & 0x15E)
       + 2046299823) ^ 0x79F80EAF | (v26 - ((2 * v26) & 0x4604100A) - 1560147963) ^ 0xA3020805;
  v29 = STACK[0x640];
  v30 = LODWORD(STACK[0x640]) ^ LODWORD(STACK[0x4F0]) ^ (v28 - ((2 * v28) & 0x22870B20) - 1857845872);
  v31 = v14 - 42493960;
  v32 = -321687562 - v14;
  if (!v16)
    v31 = v32;
  v33 = STACK[0x678];
  v34 = (LODWORD(STACK[0x678]) ^ 0xB66C2AB4 ^ v30) + 1;
  v35 = v30 ^ 0x4A1F9A55;
  v36 = v35 + (v34 ^ 0x6DE5E5FE) + ((2 * v34) & 0xDBCBCBFC) - 1843783166;
  v37 = (LODWORD(STACK[0x678]) ^ ((LODWORD(STACK[0x4B0]) ^ 0xD31C3AF9)
                                - 2
                                * (((LODWORD(STACK[0x4B0]) ^ 0xD31C3AF9) + 259348080) & 0x56FB687B ^ (LODWORD(STACK[0x4B0]) ^ 0xD31C3AF9) & 1)
                                - 428818710) ^ 0x154DA7E3 ^ (v36 - ((2 * v36) & 0x8075010E) + 1077575815))
      + v35;
  v38 = STACK[0x430];
  v39 = (v37 - ((2 * v37) & 0x60BF475C) - 1335909458) ^ LODWORD(STACK[0x430]);
  v40 = (v39 ^ 0xD87528A3) % 0x3A5E0577;
  LOBYTE(v35) = LOBYTE(STACK[0xBBB]) - ((2 * LOBYTE(STACK[0xBBB]) + 22) & 0x2A) + 96;
  v41 = (((2 * v35) ^ 0x2A) - ((2 * ((2 * v35) ^ 0x2A)) & 0x18) + 45) & 0x2A;
  LOBYTE(v35) = v35 + (v41 ^ 0xD6) + ((2 * v41) ^ 0x50) + 2;
  v42 = v35 + (~(2 * v35) | 0xAD);
  v43 = LOBYTE(STACK[0xBB1]) - ((2 * LOBYTE(STACK[0xBB1]) - 84) & 0xFFFFFFD2) + 63;
  v44 = (v43 ^ 0x69) - ((2 * (v43 ^ 0x69)) & 0xBE) - 686001313;
  v45 = ((2 * (v43 ^ 0x95)) & 0x1C6) + (v43 ^ 0x7BF5F976);
  LODWORD(STACK[0x690]) = v0;
  v46 = v44 ^ (-1783342500 - v45 - ((938210750 - 2 * v45) & 0x337CBEFA)) ^ 0x36DFBBDF ^ ((v44 ^ 0x28E38CA0)
                                                                                       - ((2 * (v44 ^ 0x28E38CA0) + 2) & 0xF0FB2FFA)
                                                                                       - 125986818);
  v47 = v46 + 1500547863 - ((2 * v46 + 504) & 0xB2E11618) + 241;
  v48 = ((v47 ^ 0xFC | 0x4351FA7B) - (v47 ^ 0xFC | 0xBCAE0584) - 1129446012) ^ 0x23106AEB;
  v49 = v47 ^ 0x59708B17;
  v50 = ((v48 | 0xC204EEC8) - (v48 | 0x3DFB1137) + 1039864119) ^ v47;
  v51 = ((2 * (v50 & 0x53 ^ 0x50)) | 0x91C0789A) - (v50 & 0x53 ^ 0x50) + 924828595;
  v52 = ((v51 & 0x4E307632 ^ 0x4A005432) + (v51 ^ 0xA4F9AB4D) - ((v51 ^ 0xA4F9AB4D) & 0x4E307632)) ^ 0x2229E163 | (((v50 ^ 0x764FA80C) & 8 | (v50 ^ 0x764FA80C) & 0xA4 ^ 0x21) + 335) ^ 0x1D0;
  v53 = ((v52 - ((2 * v52) & 0x98) - 52) ^ 0x33)
      + byte_18CF2E2B0[v49]
      + ((2 * (v52 - ((2 * v52) & 0x98) - 52)) ^ 0xFFFFFF98);
  v54 = ((v53 - ((2 * v53 + 110) & 0xFFFFFF92) + 2) ^ 1) - 2;
  LODWORD(STACK[0x688]) = v54;
  v55 = ((((v54 ^ 0x9C) - ((2 * (v54 ^ 0x9C)) & 0xC)) << 16) - 100270080) ^ 0xFA060000;
  v56 = v55 - ((2 * v55) & 0xD0E0000);
  v57 = LOBYTE(STACK[0xBB0]) + (~(2 * LOBYTE(STACK[0xBB0]) + 42) | 0x33) - 4;
  v58 = byte_18CF4CE70[(LOBYTE(STACK[0xBB0]) + (~(2 * LOBYTE(STACK[0xBB0]) + 42) | 0x33) - 4) ^ 0xEALL] ^ v57 ^ 0x9B;
  v59 = (((v58 - ((2 * v58) & 0xD6)) << 24) - 352321536) ^ 0xEB000000;
  v60 = byte_18CF2E2B0[(LOBYTE(STACK[0xBB9]) - ((2 * LOBYTE(STACK[0xBB9]) + 28) & 0x12) - 25) ^ 0xEALL];
  v61 = (v60 - ((2 * (_BYTE)v60 + 6) & 4) + 65) ^ 0xE9;
  v62 = (((v61 - ((2 * v61) & 0xEE)) << 16) + 2071396352) ^ 0x7B770000;
  v63 = byte_18CF38430[(v42 - 86) ^ 0x16] ^ 0x3D;
  v64 = (v62 - ((2 * v62) & 0x26200000) - 1827640003) ^ 0x93106D3D | (v63 - 2 * (v63 & 0x7F) + 1694937215) ^ 0x6506B07F;
  v65 = byte_18CF4FD30[(LOBYTE(STACK[0xBBA]) - ((2 * LOBYTE(STACK[0xBBA]) + 62) & 0xB0) + 119) ^ 0x17];
  v66 = v65 ^ 0x4A ^ (((16 * v65) ^ 0x70) - 126);
  v67 = (((v66 - ((2 * v66) & 0x136)) << 8) - 825582848) ^ 0xCECA9B00;
  v68 = (v64 - ((2 * v64) & 0x34B9E29A) - 1705184947) ^ 0x9A5CF14D | (v67 - ((2 * v67) & 0x6C9AFC00) + 1984790045) ^ 0x764D7E1D;
  v69 = byte_18CF4CE70[(LOBYTE(STACK[0xBB8]) - ((2 * LOBYTE(STACK[0xBB8]) + 58) & 0x8A) + 98) ^ 0x9ALL] ^ (LOBYTE(STACK[0xBB8]) - ((2 * LOBYTE(STACK[0xBB8]) + 58) & 0xFFFFFF8A) + 98) ^ 0xDD;
  v70 = (((v69 + (~(2 * v69) | 0x99999999)) << 24) - 1275068416) ^ 0xB3000000;
  v71 = (v68 - ((2 * v68) & 0xA0619156) - 802109269) ^ 0xD030C8AB | (v70 - ((2 * v70) & 0xEC000000) + 1981010410) ^ 0x7613D1EA;
  v72 = byte_18CF4FD30[(LOBYTE(STACK[0xBB2]) - ((2 * LOBYTE(STACK[0xBB2]) + 6) & 6) + 26) ^ 0x79];
  v73 = v72 ^ 0xB3 ^ (((16 * v72) ^ 0xFFFFFFA0) - ((2 * ((16 * v72) ^ 0xFFFFFFA0)) & 0xC0) + 109);
  v74 = (((v73 + 13243025 - ((2 * v73) & 0x190)) << 8) + 407296) ^ 0xCA18C800;
  v75 = (v74 - ((2 * v74) & 0x6A1A5800) + 1963797554) ^ 0x750D2C32 | (v59 - ((2 * v59) & 0x64000000) - 1295638857) ^ 0xB2C61EB7;
  v76 = byte_18CF38430[(LOBYTE(STACK[0xBB3]) - ((2 * LOBYTE(STACK[0xBB3]) + 48) & 0x2A) - 19) ^ 0x4BLL] ^ 0x3D;
  v77 = (v75 - ((2 * v75) & 0xD33E370C) - 375448698) ^ 0xE99F1B86 | (v76 - ((2 * v76) & 0x55555555) + 695041194) ^ 0x296D7CAA;
  v78 = (v56 + 109570760) ^ 0x687EAC8 | (v77 - ((2 * v77) & 0x9C5CBF34) + 1311661978) ^ 0x4E2E5F9A;
  v79 = v38 ^ LODWORD(STACK[0x550]) ^ v33 ^ v29 ^ (v71 - ((2 * v71) & 0xE628DAE) + 120669911);
  v80 = v38 ^ LODWORD(STACK[0x480]) ^ v33 ^ v29 ^ (v78 - ((2 * v78) & 0x9B1ABEEC) - 846373002);
  v81 = v33 ^ v38 ^ v29 & 0xFFFBFFFF ^ ((v13 ^ 0x2486C8C6)
                                      - 1965392887
                                      + v31
                                      - ((2 * ((v13 ^ 0x2486C8C6) - 1965392887 + v31)) & 0xB436E6DE)
                                      - 635735185);
  v82 = (v40 ^ 0x93) + 109 + ((2 * v40) & 0x26);
  if (((2 * v40) & 0x7A7FFB7A) + (v40 ^ 0xFD3FFDBD) != -46137923)
    v82 = 0;
  v83 = STACK[0xB18];
  v84 = STACK[0xB10];
  v85 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v39) ^ 0x75u)) ^ 0xD89FD9A6 ^ *(_DWORD *)(STACK[0xB10]
                                                                                        + 4 * (HIBYTE(v80) ^ 0xD7));
  v86 = STACK[0xB00];
  v87 = *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v79) ^ 0xDu)) ^ 0xEFD5817D;
  v88 = (v87 & v85) - ((2 * (v87 & v85)) & 0x3B817694);
  v89 = ((v87 + v85) ^ 0x7DDD9DEF)
      + ((2 * (v87 + v85)) & 0xFBBB3BDE)
      + ((2 * v88 - 1149143404) ^ 0x71C6A585)
      + ((2 * (2 * v88 - 1149143404)) & 0x6B7059DC ^ 0x9CFFB6F7);
  v90 = (BYTE2(v80) ^ 0x11) - ((2 * (BYTE2(v80) ^ 0x11)) & 0x1F4) + 1943770874;
  v91 = BYTE1(v80) ^ 0xFA;
  v92 = STACK[0xB08];
  v93 = *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v81) ^ 0x52u)) ^ *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v79) ^ 0x39u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v39) ^ 0xD8)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v80 ^ 0x55u));
  v94 = (v89 + 1 - 2 * ((v89 + 937070337) & 0x2DD1D71F ^ (v89 + 1) & 8) - 441686505) ^ *(_DWORD *)(STACK[0xB08]
                                                                                                 + 4
                                                                                                 * (v81 ^ 0x74u));
  v95 = HIBYTE(v81) ^ 0x51;
  v96 = *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v79) ^ 0x37)) ^ *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v81) ^ 0xCBu)) ^ *(_DWORD *)(STACK[0xB00] + 4 * v91) ^ *(_DWORD *)(STACK[0xB08] + 4 * ((((v39 ^ 0xA3) - v82) ^ 0xEF) + ((2 * ((v39 ^ 0xA3) - v82)) & 0xDF) + 17));
  v97 = *(_DWORD *)(STACK[0xB18]
                  + 4
                  * (((v90 & 0x509B862A) + (v90 ^ 0x70DB876A) - ((v90 ^ 0x70DB876A) & 0x100122A) + 134498304) ^ 0x5A9FCF79u)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v39) ^ 0x28u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * v95) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v79 ^ 0x9Au));
  v98 = ((BYTE1(v97) ^ 0xB3) - ((2 * (BYTE1(v97) ^ 0xB3)) & 0x46) - 1384337629) ^ 0x6C74BF2B;
  v99 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v93) ^ 0xC6u)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v96) ^ 0x42u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v97 ^ 0xBFu)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v94) ^ 0x68));
  v100 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v96) ^ 0x7Bu)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v93) ^ 0xC)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v94 ^ 0x84u)) ^ *(_DWORD *)(STACK[0xB00] + 4 * ((((2 * v98) & 0x8210476E) - v98 + 149986376) ^ 0xC9F88C57));
  v101 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v97) ^ 0x24u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v96) ^ 0x94)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v93 ^ 0xEAu)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v94) ^ 0xCBu));
  v102 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v94) ^ 0x12u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v97) ^ 0xB5)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v93) ^ 0x2Cu)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v96 ^ 0xA4u));
  v103 = v101 ^ 0x39;
  v104 = *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v100) ^ 9)) ^ *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v101) ^ 0x2Cu)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v102) ^ 0x99u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v99 ^ 0x77u));
  v105 = *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v99) ^ 0xAA)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v101) ^ 0x97u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v102 ^ 0x6Cu)) ^ *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v100) ^ 0x48u));
  v106 = (v105 ^ 0xC838AACB) + 61136;
  v107 = v106 ^ 0x3FDBAF75;
  v108 = (2 * v106) & 0x7FB75EEA;
  v109 = ((2 * v105) ^ 0x5E3F55D4) - ((2 * ((2 * v105) ^ 0x5E3F55D4)) & 0x1D598) + 256716;
  v110 = HIBYTE(v101) ^ 0x32;
  v111 = HIBYTE(v102) ^ 0x28;
  v112 = *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v99) ^ 0xF9u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * v110) ^ *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v102) ^ 0x17u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v100 ^ 0x77u));
  v113 = v107 + v108 + (v109 & 0x1DDA0 ^ 0xC10089C1) + ((2 * v109) & 0x13940 ^ 0xFFFEEEFF) - 14479541;
  v114 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v99) ^ 0x91u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * v103) ^ *(_DWORD *)(STACK[0xB10] + 4 * v111) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v100) ^ 0x7Fu));
  v115 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v112) ^ 0x5Cu)) ^ *(_DWORD *)(STACK[0xB00] + 4
                                                                                            * (BYTE1(v114) ^ 0x71u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v104) ^ 0x6E)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v105 ^ 0xCBu));
  v116 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v104) ^ 0x6Fu)) ^ *(_DWORD *)(STACK[0xB08]
                                                                             + 4 * (v114 ^ 3u)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v112) ^ 0x42u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v105) ^ 0xC8));
  v117 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v114) ^ 0x54u)) ^ *(_DWORD *)(STACK[0xB10] + 4
                                                                                            * (HIBYTE(v112) ^ 0xF3)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v105) ^ 0xAAu)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v104 ^ 0x56u));
  v118 = *(_DWORD *)(STACK[0xB18] + 4 * ((BYTE2(v113) - ((v113 >> 15) & 0x88) - 60) ^ 0xC4u)) ^ *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v114) ^ 0x74)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v104) ^ 0x7Fu)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v112 ^ 0x85u));
  v119 = STACK[0xB10];
  v120 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v115) ^ 0x7Fu)) ^ *(_DWORD *)(STACK[0xB10] + 4
                                                                                            * (HIBYTE(v116) ^ 0x85)) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v117) ^ 9u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v118 ^ 0x3Au));
  v121 = ((2 * v120) & 0xFDBFFBBE ^ 0x24199B34) + (v120 ^ 0x6DD33265);
  v122 = *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v117) ^ 0x3Cu)) ^ *(_DWORD *)(STACK[0xB10] + 4
                                                                                            * (HIBYTE(v115) ^ 0x44)) ^ *(_DWORD *)(STACK[0xB08] + 4 * v116) ^ *(_DWORD *)(STACK[0xB00] + 4 * (BYTE1(v118) ^ 0xD2u));
  v123 = *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v117) ^ 0x18)) ^ *(_DWORD *)(STACK[0xB00] + 4
                                                                                            * (BYTE1(v116) ^ 0x34u)) ^ *(_DWORD *)(STACK[0xB08] + 4 * (v115 ^ 0xBCu)) ^ *(_DWORD *)(STACK[0xB18] + 4 * (BYTE2(v118) ^ 0x77u));
  v124 = v121 - 2128608735;
  if (v121 - 511484153 >= 0x9F9CA31A)
    v125 = 70;
  else
    v125 = 96;
  v126 = *(_DWORD *)(v92 + 4 * (v117 ^ 0xD3u)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v116) ^ 0xFu)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v115) ^ 0xE1u)) ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v118) ^ 0xC3));
  v127 = ((v123 ^ 0x4F4F27D5) >> (BYTE2(v118) & 0x10 ^ 0x10))
       - ((2 * ((v123 ^ 0x4F4F27D5) >> (BYTE2(v118) & 0x10 ^ 0x10))) & 0x8DB71696);
  v128 = ((((v127 - 958690485) ^ 0xC6DB8B4B) >> (BYTE2(v118) & 0x10))
                         - ((2 * (((v127 - 958690485) ^ 0xC6DB8B4B) >> (BYTE2(v118) & 0x10))) & 0xD6)
                         - 21) ^ 0xEB;
  if (v124 >= 0x9F9CA31A)
    v129 = 36;
  else
    v129 = 10;
  v130 = v121 + v129;
  if (v124 < 0x9F9CA31A)
    v125 = 122;
  v131 = *(_DWORD *)(v86 + 4 * (BYTE1(v126) ^ 0x5Fu)) ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v122) ^ 0xF8)) ^ *(_DWORD *)(v92 + 4 * (v130 + v125 - 99)) ^ *(_DWORD *)(v83 + 4 * v128);
  v132 = *(_DWORD *)(v83 + 4 * (BYTE2(v122) ^ 0x6Cu)) ^ *(_DWORD *)(v92 + 4 * (v126 ^ 5u)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v123) ^ 0x27u)) ^ *(_DWORD *)(v84 + 4 * HIBYTE(v124));
  v133 = v123 ^ 0xD5;
  v134 = *(_DWORD *)(v83 + 4 * (BYTE2(v126) ^ 0x27u)) ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v123) ^ 0x4F)) ^ *(_DWORD *)(v92 + 4 * (v122 ^ 0xECu)) ^ *(_DWORD *)(v86 + 4 * ((BYTE1(v124) - ((v124 >> 7) & 0x5A) + 45) ^ 0x2Du));
  v135 = (v131 & 0x20 ^ 0xDE46A3B4) - 1144360908;
  v136 = ((v131 & 0xFFFFFFDF ^ 0x5746C18B) - ((2 * (v131 & 0xFFFFFFDF ^ 0x5746C18B)) & 0x345DC61A) + 439280397) ^ 0xDA7F834D;
  v137 = (((2 * v136) & 0x83B2C9B6) - v136 + 1042717476) ^ v135;
  v138 = *(_DWORD *)(v83 + 4 * ((BYTE2(v124) - ((v124 >> 15) & 0x24) - 110) ^ 0x92u)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v126) ^ 0x23)) ^ *(_DWORD *)(v92 + 4 * v133) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v122) ^ 0x84u));
  LOBYTE(v136) = ((v57 & 8 | 0x52) - (v57 & 0x10 | 0x2D) + 45) & 0x78;
  v139 = ((((v134 ^ 0x91098441) >> (v136 ^ 0x50))
         - ((2 * ((v134 ^ 0x91098441) >> (v136 ^ 0x50))) & 0x3D519150)
         - 1633105752) ^ 0x9EA8C8A8) >> (v136 ^ 0x48);
  v140 = *(_DWORD *)(v86 + 4 * (BYTE1(v134) ^ 0x84u)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v132) ^ 0x26)) ^ *(_DWORD *)(v92 + 4 * ((*(_BYTE *)(v83 + 4 * ((BYTE2(v124) - ((v124 >> 15) & 0x24) - 110) ^ 0x92u)) ^ *(_BYTE *)(v119 + 4 * (HIBYTE(v126) ^ 0x23)) ^ *(_BYTE *)(v92 + 4 * v133) ^ *(_BYTE *)(v86 + 4 * (BYTE1(v122) ^ 0x84u))) ^ 0xAEu)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v137) ^ 0x79u));
  v141 = STACK[0xB10];
  v142 = *(_DWORD *)(v83 + 4 * (BYTE2(v134) ^ 9u)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v138) ^ 0x71u)) ^ *(_DWORD *)(v92 + 4 * (v132 ^ 0x78u)) ^ *(_DWORD *)(v119 + 4 * (HIBYTE(v137) ^ 0x42));
  v143 = *(_DWORD *)(v92 + 4 * (v137 ^ 0x79u)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v138) ^ 0x31u)) ^ *(_DWORD *)(v119 + 4 * ((v139 - ((2 * v139) & 0xB4) + 90) ^ 0x5Au)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v132) ^ 0x27u));
  v144 = *(_DWORD *)(v119 + 4 * (HIBYTE(v138) ^ 0x1D)) ^ *(_DWORD *)(v92 + 4 * (v134 ^ 0x41u)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v132) ^ 0x2Au)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v137) ^ 0x20u));
  v145 = (v142 ^ 0xAF1FAAEA)
       + 67072
       + (((v142 ^ 0x33A42FD9) + 1) ^ 0xFFFEF6BF)
       + ((2 * ((v142 ^ 0x33A42FD9) + 1)) & 0xFFFDED7E)
       + 833;
  v146 = ((v145 - ((2 * v145) & 0xBFDC5FCA) + 1609445349) ^ 0xA011D01D) + (v142 ^ 0xAF1FAAEA);
  v147 = v146 - ((2 * v146) & 0xCDB0678E) + 1725445063;
  v148 = *(_DWORD *)(v86 + 4 * (BYTE1(v140) ^ 0x73u));
  v149 = *(_DWORD *)(v83 + 4 * (BYTE2(v144) ^ 0x63u));
  v150 = *(_DWORD *)(v119 + 4 * (HIBYTE(v143) ^ 0xF2)) ^ v149 ^ v148 ^ *(_DWORD *)(v92
                                                                                   + 4
                                                                                   * ((v146 - ((2 * v146) & 0x8E) - 57) ^ 0xC7u));
  v16 = ((2 * (v150 & 0x40000 ^ 0x8004428C)) & 0xFFFFFC0F) - (v150 & 0x40000 ^ 0x8004428C) == -2147466884;
  v151 = (((2 * (v143 & 0x9A958C13 ^ 0x18858C10)) & 0x352A1820) - (v143 & 0x9A958C13 ^ 0x18858C10) - 1056382077) ^ 0xA300F382;
  v152 = ((2 * v143) & 0x152A1806 ^ 0x4CDEFCD2)
       + (v143 & 0x9A958C13 ^ 0xD9908186)
       + (((v143 ^ 0x68D8729E) + 1) ^ 0x17EF4F38)
       + ((2 * ((v143 ^ 0x68D8729E) + 1)) & 0x2FDE9E70);
  v153 = (v152 - ((2 * v152 + 1914856634) & 0x66185C30) + 1813864565) ^ (((2 * v151) & 0x6BC57184) - v151 - 904051651);
  v154 = BYTE1(v142) ^ 0xD0;
  v155 = *(_DWORD *)(v119 + 4 * (HIBYTE(v140) ^ 0x12));
  v156 = *(_DWORD *)(v119 + 4 * (HIBYTE(v142) ^ 0xCC));
  v157 = *(_DWORD *)(v92 + 4 * (v144 ^ 0xC9u));
  v158 = *(_DWORD *)(v86 + 4 * (BYTE1(v144) ^ 0x25u));
  v159 = *(_DWORD *)(v83 + 4 * (BYTE2(v142) ^ 0x5Bu)) ^ v155 ^ v157 ^ *(_DWORD *)(v86
                                                                                  + 4
                                                                                  * (((unsigned __int16)((v152 - ((2 * v152 + 25786) & 0x5C30) + 24693) ^ (((2 * v151) & 0x7184) - v151 + 17469)) >> 8) ^ 0x7Au));
  v160 = *(_DWORD *)(v92 + 4 * (v140 ^ 0xB2u));
  v161 = v156 ^ v158 ^ v160 ^ *(_DWORD *)(v83 + 4 * (BYTE2(v153) ^ 0x99u));
  v162 = v148 ^ *(_DWORD *)(v92 + 4 * (v142 ^ 0x26u)) ^ v149 ^ *(_DWORD *)(STACK[0xB10]
                                                                                            + 4
                                                                                            * (HIBYTE(v153) ^ 0x91));
  v163 = ((v162 & 0x91B46B49 ^ 0x11A40149)
        + (v162 & 0x90304B00 ^ 0xE851CE22)
        - ((v162 & 0x91B46B49 ^ 0x11A40149) & 0x90304B00)) ^ 0x7071F7B7;
  v164 = (v163 - ((2 * v163) & 0xF8301C30) - 65532358) ^ 0xE4A81DAE | ((v162 & 0x484A94B0 ^ 0x49F841C1)
                                                                     + (v162 & 0x26010006 ^ 0x26010003)
                                                                     + 2147483646) & 0x6E4B95F6 ^ 0x40428160;
  v165 = v164 - ((2 * v164) & 0x62D04D1E) + 828909199;
  v166 = *(_DWORD *)(STACK[0xB10] + 4 * (HIBYTE(v144) ^ 0x40)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v140) ^ 0x1Du));
  v167 = v166 ^ *(_DWORD *)(v86 + 4 * v154) ^ *(_DWORD *)(v92 + 4 * (v153 ^ 0x35u));
  v168 = v155 ^ v157 ^ *(_DWORD *)(v86 + 4 * (BYTE1(v143) ^ 0xFEu)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v147) ^ 0xD8u));
  v169 = v143 ^ 0x8D;
  v170 = *(_DWORD *)(v83 + 4 * (BYTE2(v143) ^ 0x4Du)) ^ v158 ^ v160 ^ *(_DWORD *)(STACK[0xB10]
                                                                                  + 4 * (HIBYTE(v147) ^ 0x66));
  v171 = v166 ^ *(_DWORD *)(v92 + 4 * v169) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v147) ^ 0x33u));
  v172 = v150 ^ 0xAF1FAAEA;
  if (v16)
    v173 = 0x40000;
  else
    v173 = -262144;
  v174 = v173 + v172 - 1811180413 - 2 * ((v173 + v172) & 0x140B88FE ^ v172 & 0xC) - 2961;
  v175 = *(_DWORD *)(v83 + 4 * (BYTE2(v161) ^ 0x31u));
  LODWORD(STACK[0x670]) = *(_DWORD *)(v83 + 4 * (BYTE2(v165) ^ 0x14u));
  LODWORD(STACK[0x680]) = *(_DWORD *)(v83 + 4 * (BYTE2(v167) ^ 0x1Fu));
  LODWORD(STACK[0x678]) = *(_DWORD *)(v83 + 4 * (BYTE2(v159) ^ 0x75u));
  v176 = *(_DWORD *)(v83 + 4 * (BYTE2(v168) ^ 0x75u));
  v177 = *(_DWORD *)(v92 + 4 * (v171 ^ 0xF4u)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v170) ^ 0x31u)) ^ *(_DWORD *)(v141 + 4 * (HIBYTE(v168) ^ 8)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v174) ^ 0xB5u));
  v178 = *(_DWORD *)(v86 + 4 * (BYTE1(v167) ^ 0x18u));
  v179 = v165;
  v180 = *(_DWORD *)(v86 + 4 * (BYTE1(v165) ^ 0x1Bu));
  v181 = *(_DWORD *)(v86 + 4 * (BYTE1(v159) ^ 0xB9u));
  v182 = *(_DWORD *)(v86 + 4 * (BYTE1(v161) ^ 0xC3u));
  v183 = *(_DWORD *)(v86 + 4 * (BYTE1(v171) ^ 0x18u));
  v184 = *(_DWORD *)(v86 + 4 * (BYTE1(v168) ^ 0xB9u));
  v185 = *(_DWORD *)(v86 + 4 * (BYTE1(v170) ^ 0xC3u));
  v186 = *(_DWORD *)(v141 + 4 * (HIBYTE(v170) ^ 0x6B)) ^ v183;
  v187 = *(_DWORD *)(v141 + 4 * (HIBYTE(v159) ^ 8)) ^ v175 ^ *(_DWORD *)(v92 + 4 * (v167 ^ 0xF4u));
  v188 = ((2 * ((v187 ^ 0x3B05010C ^ v180) - 1202274211)) & 0x46F9F6FE)
       + (((v187 ^ 0x3B05010C ^ v180) - 1202274211) ^ 0x237CFB7F);
  v189 = v184 ^ *(_DWORD *)(v83 + 4 * (BYTE2(v171) ^ 0x1Fu)) ^ *(_DWORD *)(v92 + 4 * (v170 ^ 0xB0u)) ^ *(_DWORD *)(v141 + 4 * (HIBYTE(v174) ^ 0xD));
  v190 = v186 ^ *(_DWORD *)(v92 + 4 * (v168 ^ 0x7Cu)) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v174) ^ 0x73u));
  v191 = v179;
  v192 = *(_DWORD *)(v92 + 4 * (v174 ^ 0xCFu));
  v193 = v177;
  v194 = v188 + (v177 ^ 0xC4FAFEF3) - ((2 * (v188 + (v177 ^ 0xC4FAFEF3)) + 956696836) & 0x7EE3CC62) - 1678447949;
  v195 = (*(_DWORD *)(v141 + 4 * (HIBYTE(v161) ^ 0x6B)) ^ v178 ^ *(_DWORD *)(v92
                                                                             + 4 * (v159 ^ 0x7Cu)) ^ 0xFF2B6856 ^ LODWORD(STACK[0x670]))
       + 758658806;
  v196 = ((2 * v195) & 0xFEFADE36) + (v195 ^ 0xFF7D6F1B);
  v197 = v185 ^ v176 ^ *(_DWORD *)(v141 + 4 * (HIBYTE(v171) ^ 0xD9)) ^ v192;
  v198 = (*(_DWORD *)(v141 + 4 * (HIBYTE(v167) ^ 0xD9)) ^ LODWORD(STACK[0x678]) ^ v182 ^ 0x1057E775 ^ *(_DWORD *)(v92 + 4 * (v179 ^ 0xB2u)))
       - 907041214;
  v199 = ((2 * v198) & 0xBDFE77A6) + (v198 ^ 0xDEFF3BD3) + (v197 ^ 0xEFA8188A);
  v200 = (*(_DWORD *)(v92 + 4 * (v161 ^ 0xB0u)) ^ LODWORD(STACK[0x680]) ^ v181 ^ 0x6657556B ^ *(_DWORD *)(v141 + 4 * (HIBYTE(v179) ^ 0xA8)))
       + 1794750297;
  v201 = ((2 * v200) & 0xBFFA3EBE) + (v200 ^ 0xDFFD1F5F) + (v189 ^ 0x99A8AA94);
  v202 = (v201 - 2 * ((v201 + 188578) & 0xDD3C6DF ^ v201 & 1) - 1378441344) ^ 0x3AAA8A55;
  v203 = ((-1397497827 * v202) ^ 0x674FDE53) + ((1499971642 * v202) & 0xCE9FBCA6);
  v204 = (v196 + (v190 ^ 0xD497A9) - ((2 * (v196 + (v190 ^ 0xD497A9)) + 17113548) & 0x61E14172) - 1317850721) ^ 0x8C0180E8;
  v205 = ((1339632071 * v204) ^ 0x49CDCFBD) + ((-1615703154 * v204) & 0x939B9F7A);
  v206 = (v199 - ((2 * v199 + 33654876) & 0x16B34960) + 744122590) ^ 0x9D085E27;
  v207 = ((-193647233 * v206) ^ 0xEA799EAF) + ((-387294466 * v206) & 0xD4F33D5E);
  v208 = ((-619630751 * (v194 ^ 0x799E9A03)) ^ 0x7FD27693) + ((-1239261502 * (v194 ^ 0x799E9A03)) & 0xFFA4ED26) + v205;
  v209 = v207 - v208 - ((2 * (v207 - v208) - 1102229694) & 0xB0D91196) - 1215090580;
  v210 = v205
       + ((v203 - 1733287507 + (v209 ^ 0xD86C88CB)) ^ 0x84506902)
       - ((2 * (v203 - 1733287507 + (v209 ^ 0xD86C88CB))) & 0xF75F2DFA);
  v211 = v207 + v203 + 554822865 + (~(2 * (v207 + v203) + 1550648828) | 0x1A492C5B);
  v212 = (v211 ^ 0x8D24962D) + v208 - ((2 * ((v211 ^ 0x8D24962D) + v208) + 213873506) & 0x1BC15FB2) + 1145072010;
  v213 = (v210 + 1 - 2 * ((v210 + 836880193) & 0x31EFA4DB ^ (v210 + 1) & 2) + 1674669081) ^ v209;
  v214 = (v193 ^ 0x3B05010C) + (v212 ^ 0x1B9C7C34 ^ v213) + 1;
  v215 = (v212 ^ v209 ^ 0xD58C2712) + (v211 ^ 0x7F3BC60B ^ v212);
  v216 = ((2 * v214) & 0xF6FFFB9E)
       + (v214 ^ 0x7B7FFDCF)
       - ((2 * (((2 * v214) & 0xF6FFFB9E) + (v214 ^ 0x7B7FFDCF)) + 411399066) & 0x364C45B2)
       - 412558170;
  v217 = (v190 ^ 0xFF2B6856) + (v212 ^ v209 ^ 0x2A73D8ED) + 1;
  v218 = ((2 * v217) & 0xFF6FE0CA)
       + (v217 ^ 0xFFB7F065)
       - ((2 * (((2 * v217) & 0xFF6FE0CA) + (v217 ^ 0xFFB7F065)) + 1072832630) & 0x5782433E)
       + 196751834;
  v219 = v215 - ((2 * v215) & 0xE32FA072) - 241708999;
  v220 = ((2 * ((v189 ^ 0x6657556B) + (v219 ^ 0xE682FC6) + 1)) & 0xFCBA5F6A)
       + (((v189 ^ 0x6657556B) + (v219 ^ 0xE682FC6) + 1) ^ 0x7E5D2FB5);
  v221 = v213 ^ 0xE9832C12;
  v222 = ((v213 ^ 0xE9832C12) & (v219 ^ 0xF197D039)) - ((2 * ((v213 ^ 0xE9832C12) & (v219 ^ 0xF197D039))) & 0x4D84B03A);
  v223 = (v213 ^ 0xE9832C12) + (v219 ^ v213 ^ 0xE7EB03D4) + 1;
  v224 = v220 - ((2 * v220 + 1826018322) & 0x656BA3BA) + 1763785702;
  v225 = (v219 ^ ((v219 ^ 0xE682FC6) - ((2 * (v219 ^ 0xE682FC6) + 2) & 0x55BC4B38) + 719201693) ^ (v223
                                                                                                 - ((2 * v223) & 0xADC3C9F0)
                                                                                                 - 689838856) ^ 0xDA8115D)
       + v221;
  v226 = (v197 ^ 0x1057E775)
       + ((2 * v222 - 846942150) ^ 0x8DA27093)
       + ((2 * (2 * v222 - 846942150)) & 0x7FB27EAC ^ 0xE4FF9FDB)
       + (v225 ^ 0x820115A1)
       - ((2 * v225) & 0xFBFDD4BC)
       + 1037576631;
  v227 = ((2 * v226) & 0xD7C9BDDE)
       + (v226 ^ 0xEBE4DEEF)
       - ((2 * (((2 * v226) & 0xD7C9BDDE) + (v226 ^ 0xEBE4DEEF)) - 1171567220) & 0xF28B2130)
       + 1448818526;
  v228 = (((2 * v226) & 0xDE)
                         + (v226 ^ 0xEF)
                         - ((2 * (((2 * v226) & 0xDE) + (v226 ^ 0xEF)) - 116) & 0x30)
                         + 94) ^ 0x98;
  v229 = *(_DWORD *)(STACK[0xAE0] + 4 * (HIBYTE(v224) ^ 0xB2));
  v230 = *(_DWORD *)(STACK[0xAD8] + 4 * (BYTE2(v227) ^ 0x45u));
  v231 = (v230 ^ ((v230 ^ 0xF8D7059D) - ((2 * (v230 ^ 0xF8D7059D) + 2) & 0x86F727B6) + 1132172252) ^ ((v229 ^ 0x7D93C5C3) + (v229 ^ 0x8544C05E ^ v230) + 1 - ((2 * ((v229 ^ 0x7D93C5C3) + (v229 ^ 0x8544C05E ^ v230) + 1)) & 0xDF425312) + 1872832905) ^ 0x2BF24030)
       + (v229 ^ 0x7D93C5C3);
  v232 = *(_DWORD *)(STACK[0xAD8] + 4 * (BYTE2(v216) ^ 0x26u));
  v233 = *(_DWORD *)(STACK[0xAF0] + 4 * (v216 ^ 0xD9u));
  v234 = *(_DWORD *)(STACK[0xB20] + 4 * (BYTE1(v216) ^ 0x22u));
  v235 = LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x4D0]);
  v236 = v235 ^ LODWORD(STACK[0x4E0]) ^ *(_DWORD *)(STACK[0xAD8] + 4 * (BYTE2(v218) ^ 0xC1u)) ^ *(_DWORD *)(STACK[0xAE0] + 4 * (HIBYTE(v216) ^ 0x1B)) ^ *(_DWORD *)(STACK[0xB20] + 4 * (BYTE1(v224) ^ 0xD1u)) ^ *(_DWORD *)(STACK[0xAF0] + 4 * v228);
  v237 = v235 ^ *(_DWORD *)(STACK[0xAD8] + 4 * (BYTE2(v224) ^ 0xB5u)) ^ v233 ^ *(_DWORD *)(STACK[0xAE0]
                                                                                           + 4 * (HIBYTE(v218) ^ 0x2B)) ^ *(_DWORD *)(STACK[0xB20] + 4 * (BYTE1(v227) ^ 0x90u));
  v238 = v235 ^ LODWORD(STACK[0x4E0]) ^ *(_DWORD *)(STACK[0xAF0] + 4 * (v218 ^ 0x9Fu)) ^ v234 ^ (v231 - ((2 * v231) & 0x69324F5C) + 882452398);
  v239 = v235 ^ LODWORD(STACK[0x4E0]) ^ *(_DWORD *)(STACK[0xAF0] + 4 * (v224 ^ 0xDDu)) ^ v232 ^ *(_DWORD *)(STACK[0xB20] + 4 * (BYTE1(v218) ^ 0x21u)) ^ *(_DWORD *)(STACK[0xAE0] + 4 * (HIBYTE(v227) ^ 0x79));
  HIDWORD(v240) = LODWORD(STACK[0x4E0]) ^ 0xD4E5BB;
  LODWORD(v240) = LODWORD(STACK[0x4E0]) ^ 0x62000000;
  v241 = (v240 >> 24) - ((2 * (v240 >> 24)) & 0x8553A4F0) + 1118425720;
  HIDWORD(v240) = v237 ^ 0xB3CFD8;
  LODWORD(v240) = v237 ^ 0xE3FFFFFF;
  v242 = ((v240 >> 24) - ((2 * (v240 >> 24)) & 0xB4F35100) + 1517922432) ^ v241;
  HIDWORD(v240) = v242 ^ 7;
  LODWORD(v240) = v242 ^ 0x486D1E00;
  v243 = (v240 >> 8) - ((2 * (v240 >> 8)) & 0xF0712146) + 2016972963;
  if (LODWORD(STACK[0x688]) == 156)
    v244 = -1388463546;
  else
    v244 = -1385353630;
  v245 = v243 ^ v244;
  v246 = (((2 * ((v243 ^ v244) & 0xFF0E6B48 ^ 0x310C1509)) | 0xEE418740)
        - ((v243 ^ v244) & 0xFF0E6B48 ^ 0x310C1509)
        + 148847712) ^ 0xEC28D5A9 | ((v243 & 0xF194B7 ^ 0xC0648503 | 0xD79029F8)
                                   - (v243 & 0xF194B7 ^ 0xC0648503 | 0x286FD607)
                                   + 678417927) ^ 0x1794A87C;
  v247 = v246 - ((2 * v246) & 0x889F516) - 2075854197;
  v248 = ((2 * (BYTE1(v239) ^ 0x27)) | 0xF965F344) - (BYTE1(v239) ^ 0x27) - 2092104098;
  v249 = byte_18CF4D6F0[((v248 & 0x482259B8 ^ 0x1000011) + (v248 & 0x3490A247) - 1) ^ 0x7DB2F9C4];
  v250 = v249 - ((2 * v249 + 46) & 0x6E) + 14;
  LOBYTE(STACK[0xBBE]) = ((v250 & 0x41 ^ 0xBF) + ((2 * (v250 & 0x41)) ^ 0x9D) + 114) ^ (((2 * (v250 & 0xBE ^ 0xF6)) & 0x24)
                                                                                      - (v250 & 0xBE ^ 0xF6)
                                                                                      + 109) ^ 0x93 ^ (((((v250 >> 2) & 0x1D ^ 0xE7) + ((2 * ((v250 >> 2) & 0x1D)) | 0xB0) + 1) ^ 2) + 40);
  v251 = (((2 * (v239 ^ 0xF55B2CDE)) & 0x28B6415E) - (v239 ^ 0xF55B2CDE) + 1636044624) ^ 0xCD7F43E7;
  LOBYTE(STACK[0xBBF]) = byte_18CF27BB0[(((2 * v251) | 0x75A2904C) - v251 + 1160689626) ^ 0xE3712832] ^ 0xB0;
  v252 = HIBYTE(v238);
  v253 = ((((v252 ^ 0x32) - ((2 * (v252 ^ 0x32)) & 0x96)) << 24) + 1258291200) ^ 0x4B000000;
  v254 = byte_18CF28AD0[HIBYTE(v239) ^ 0x3ALL];
  LOBYTE(STACK[0xBBC]) = (v254 - ((2 * v254 - 38) & 0xD2) + 86) ^ 0x58;
  v255 = (((v252 ^ 0x32) - ((v238 >> 23) & 2)) << 24) + 0x1000000;
  v256 = ((v255 ^ 0x1000000) - ((2 * v255) & 0xAC000000) + 1444541527) ^ 0x6A833C8E;
  v257 = (v253 - ((2 * v253) & 0x46000000) - 1548354262) ^ 0x423A36EB;
  v258 = (v257 & v256) - ((2 * (v257 & v256)) & 0x5854502E);
  v259 = ((v257 + v256) ^ 0x7E9F766E)
       + ((2 * (v257 + v256)) & 0xFD3EECDC)
       + ((2 * v258 - 665563090) ^ 0x9C54712F)
       + 1029728402
       + ((2 * (2 * v258 - 665563090)) & 0x77FFBDFC ^ 0xCF575FA3);
  v260 = ((v259 >> 22) - ((v259 >> 21) & 0x4CE) - 149024153) ^ 0xF71E1294;
  v261 = (((v260 >> 2) - ((v260 >> 1) & 0xDC) - 18) ^ 0xB) + 1;
  LOBYTE(v252) = (v261 ^ 0xBB) + byte_18CF28AD0[v252 ^ 0x17] + ((2 * v261) & 0x76);
  v262 = (HIWORD(v238) ^ 0xEF63) + (HIWORD(v238) ^ 0xEF7C);
  LOBYTE(STACK[0xBB8]) = (v252 + (~(2 * v252 + 90) | 0x35) + 19) ^ 0xA8;
  v263 = (BYTE2(v238) ^ 0xB6) - ((2 * (BYTE2(v238) ^ 0xB6)) & 0x146) + 137027235;
  v264 = ((v263 & 0x2A96EE ^ 0x6285002E) + (v263 ^ 0x102AFED0) - ((v263 ^ 0x102AFED0) & 0x100022EEu)) ^ 0x6AAF96E3;
  LOBYTE(v263) = ((2 * v262) & 0xEC) + (v262 ^ 0xF6) + 10;
  LOBYTE(STACK[0xBB9]) = ((v263 ^ 0xE7)
                        + ((2 * v263) & 0xCF)
                        + byte_18CF4AFB0[v264]
                        - ((2 * ((v263 ^ 0xE7) + ((2 * v263) & 0xCF) + byte_18CF4AFB0[v264]) + 30) & 0x87)
                        + 82) ^ 0xF2;
  LOBYTE(v245) = byte_18CF28AD0[HIBYTE(v245) ^ 0xE3];
  LOBYTE(v264) = v245 - ((2 * v245 + 90) & 0x4A) - 110;
  LOBYTE(v245) = ((88 - v245 - ((38 - 2 * v245) & 0x8A)) ^ v264 ^ 0x69 ^ ((v264 ^ 0x38)
                                                                        - ((2 * (v264 ^ 0x38) + 6) & 0x12)
                                                                        - 20))
               + 98;
  LOBYTE(STACK[0xBB4]) = (v245 ^ 0x5F) + ((2 * v245) & 0xBF) - 95;
  v265 = (((2 * (BYTE2(v239) ^ 0xF1)) & 0xF0) - (BYTE2(v239) ^ 0xF1) - 1282317945) ^ 0x9026CEDF;
  v266 = (HIWORD(v239) ^ 0x8183) + (HIWORD(v239) ^ 0x819C);
  LOBYTE(v252) = ((2 * v266) & 0xF6) + (v266 ^ 0x7B) - 123;
  LOBYTE(v252) = byte_18CF4AFB0[(((2 * v265) & 0x422F01FA) - v265 - 895467774) ^ 0xE9179083]
               + (v252 ^ 0x1F)
               + 2 * (v252 & 0x1F);
  LOBYTE(STACK[0xBBD]) = (v252 - ((2 * v252 - 82) & 0xDA) - 60) ^ 0x40;
  LODWORD(v252) = ((v247 ^ 0xD8)
                 + (v247 & 0x55 ^ 0xAD969705)
                 - ((v247 ^ 0xD8) & 0x55555555)) ^ 0xBD560D05;
  LOBYTE(STACK[0xBB7]) = byte_18CF27BB0[((v252 | 0x1FB616E3)
                                       - (v252 | 0xE049E91C)
                                       - 532027108) ^ 0xF768C21] ^ 0xE7;
  LODWORD(v252) = (v236 ^ 0xEC34D2BE)
                - ((2 * (v236 ^ 0xEC34D2BE)) & 0x186181E6)
                + 514966771;
  LOBYTE(STACK[0xBB3]) = byte_18CF27BB0[((v252 & 0xB00003FE ^ 0x26588187) - (v252 | 0xB77ADBFE) - 2) ^ 0x9E58A3BELL] ^ 0xB8;
  LOBYTE(v252) = byte_18CF4D6F0[((BYTE1(v238) ^ 0xBD | 0xFE265739) - (BYTE1(v238) ^ 0xBD | 0x1D9A8C6) + 31041734) ^ 0xFE265721];
  v267 = v252 - ((2 * v252 + 46) & 0x76) - 110;
  v268 = v267 ^ 0xB3;
  if (!((v191 ^ 0xA8000000) >> 24))
    v268 = 116;
  LOBYTE(STACK[0xBBA]) = v267 ^ ((((v268 & (v267 ^ 0x3B)) - ((2 * (v268 & (v267 ^ 0x3B))) & 0xC3) + 97) & 0xFC) >> 2) ^ 0xF2;
  LOBYTE(STACK[0xBBB]) = byte_18CF27BB0[v238 ^ 0x80] ^ 0x16;
  v269 = (HIWORD(v236) ^ 0xE8C4) + (HIWORD(v236) ^ 0xE8DB);
  v270 = (HIWORD(v236) & 0x95) - 2070797313 + (HIWORD(v236) & 0x6A ^ 0x30051103);
  v271 = ((2 * v269) & 0xF2) + (v269 ^ 0x79) - 121;
  v272 = (v271 ^ 0xFFFFFFEF)
       + ((2 * v271) & 0xFFFFFFDF)
       + byte_18CF4AFB0[((v270 & 0x2080071A ^ 0x4248081A) + (v270 ^ 0xB9B43700) - ((v270 ^ 0xB9B43700) & 0xD02071A)) ^ 0x62E90D68];
  HIDWORD(v274) = v272 - 1;
  LODWORD(v274) = (v272 << 24) + 117440512;
  v273 = v274 >> 27;
  v275 = (2 * v273) & 0x60;
  v273 += 48;
  HIDWORD(v274) = v273 ^ 0x1B;
  LODWORD(v274) = ((v273 - v275) ^ 0xFFFFFFBF) << 24;
  LOBYTE(STACK[0xBB1]) = ((v274 >> 29) - ((2 * (v274 >> 29)) & 0xA0) + 80) ^ 0x5A;
  v276 = (((2 * (BYTE1(v236) ^ 0xAF)) & 0x2E) - (BYTE1(v236) ^ 0xAF) - 854789144) ^ 0xC94DF969;
  v277 = byte_18CF4D6F0[(((2 * v276) & 0x8001F80) - v276 + 686133311) ^ 0x2CA49A64];
  v278 = v277 - ((2 * v277 - 82) & 0xFFFFFF8F) + 30;
  LOBYTE(STACK[0xBB2]) = v278 ^ (v278 >> 2) & 0x1D ^ 0x30;
  LOBYTE(v278) = byte_18CF4D6F0[((BYTE1(v247) ^ 0x44014B8) - ((2 * (BYTE1(v247) ^ 0x44014B8)) & 0x80021E8u) + 2089021940) ^ 0x78C3E543];
  LOBYTE(v278) = v278 - ((2 * v278 - 82) & 0xDA) - 60;
  v279 = ((2 * ~((v278 & 0xFC) >> 2)) & 0x20) - (~((v278 & 0xFC) >> 2) & 0x1D) + 109;
  v280 = (HIWORD(v247) ^ 0x8497) + (HIWORD(v247) ^ 0x8488);
  LOBYTE(STACK[0xBB6]) = v278 ^ 0xA4 ^ ((v279 & 0x64 ^ 0x45) + (v279 & 0x99) - 1);
  LOWORD(v278) = (BYTE2(v247) ^ 0x9A) - ((2 * (BYTE2(v247) ^ 0x9A)) & 0xB2) + 25433;
  v281 = 2 * (v280 & 0x3F) + (v280 ^ 0xBF) + 65;
  LOBYTE(v278) = ((2 * v281) & 0x7A)
               + (v281 ^ 0xBD)
               + byte_18CF4AFB0[((v278 & 0x8AE ^ 0x7086882B) + (v278 & 0x3751) - 1) ^ 0x7086ABCALL];
  LOBYTE(STACK[0xBB5]) = (v278 - ((2 * v278 + 50) & 0x34) + 83) ^ 0x45;
  v282 = byte_18CF28AD0[HIBYTE(v236) ^ 0xABLL];
  LOBYTE(STACK[0xBB0]) = (v282 - ((2 * v282 + 90) & 0x77) + 40) ^ 0x38;
  v283 = LODWORD(STACK[0x690]) ^ 0x93;
  LODWORD(STACK[0xAFC]) = 0;
  free((void *)STACK[0xAE0]);
  free((void *)STACK[0xB08]);
  free((void *)STACK[0xAD8]);
  free((void *)STACK[0xB20]);
  free((void *)STACK[0xAF0]);
  free((void *)STACK[0xB00]);
  free((void *)STACK[0xB10]);
  free((void *)STACK[0xB18]);
  if (LODWORD(STACK[0xAFC]) == v283 - 555)
    v284 = 0;
  else
    v284 = -42885;
  v285 = STACK[0xA58];
  STACK[0xAD0] -= 32;
  return ((uint64_t (*)(unint64_t))(qword_1E2538EC0[(2046 * (v284 == ((v283 + 25) | 0x489) - 1741)) ^ (v283 - 210)]
                                                   - 13 * ((v283 - 210) ^ 0x142u)
                                                   + 343))(v285);
}

uint64_t sub_18CAB05D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7, __int16 a8)
{
  int v8;
  unsigned int v9;
  int v10;
  __int16 v11;
  int v12;
  __int16 v13;
  unsigned __int8 *v14;
  __int16 v15;
  unsigned int v16;
  _BOOL4 v17;
  _BOOL4 v18;

  v14 = (unsigned __int8 *)(((v8 + 1414261415) | ((unint64_t)((v8 + 1414261415) < 0x73591987) << 32))
                          + a4);
  v15 = (a6 + ((*v14 - (((unsigned __int16)v12 ^ 0xEB) & (unsigned __int16)(2 * *v14))) << 8)) ^ a6;
  LOWORD(v14) = (v15 - ((2 * v15) & 0xAC00) + a8) ^ a8 | (v14[1] - ((2 * v14[1]) & 0x42) + v11) ^ v11;
  LODWORD(v14) = (unsigned __int16)(((_WORD)v14 - ((2 * (_WORD)v14) & 0xA5AE) + v13) ^ v13);
  v16 = v8 + (v14 ^ 0x7D9FD2CA) + (v10 & (2 * (_DWORD)v14)) - 2041966662;
  v17 = v16 < 0x22F71162;
  v18 = v16 > v9;
  if (v9 < 0x22F71162 == v17)
    v17 = v18;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(25 * v17) ^ (v12 - 1510)] - 12))();
}

uint64_t sub_18CAB06D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;

  v8 = (v7 ^ 0xAC) - 1110;
  v9 = v8 | 0xB4;
  v10 = v5 + a5 + a2 + 0x3749BB5A36714EC3;
  v11 = (((*(unsigned __int8 *)v10 - ((*(unsigned __int8 *)v10 << ((v8 ^ 0xA) & 0x4B)) & 0xFC)) << 8) + 32256) ^ 0x7E00;
  LODWORD(v10) = (v11 - (v11 >> 10 << 11) - 993) ^ 0xFFFFFC1F | (*(unsigned __int8 *)(v10 + 1)
                                                               - ((2 * *(unsigned __int8 *)(v10 + 1)) & 0xFFEF)
                                                               + v6) ^ v6;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(116
                                             * (((7 * (v9 ^ 0x9C)) ^ ((__int16)(v10
                                                                                               - ((2 * v10) & 0x3AAC)
                                                                                               - 25242) < (__int16)((7 * (v9 ^ 0x29C)) ^ 0x9D99))) & 1)) ^ v9]
                            - 8))();
}

uint64_t sub_18CAB07C4()
{
  uint64_t v0;
  unsigned int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (int)(((((v1 - 187) | 0xC4) + 300) * (v2 == -25236)) ^ v1))
                            - (v1 ^ 0xF9)))();
}

uint64_t sub_18CAB0804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  __int16 v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a5 ^ (1166 * (v5 == 21206))))
                            - ((35 * ((a5 + 1111971329) & 0xBDB8AFCD ^ 0x6CA)) ^ 0xF9)))();
}

uint64_t sub_18CAB085C@<X0>(unint64_t a1@<X8>)
{
  int v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  _BOOL4 v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  _BOOL4 v12;

  v5 = v1 + 44;
  v6 = *(unsigned __int8 *)(STACK[0x648] + (v2 - 520957662));
  v7 = v2 + 5;
  LODWORD(STACK[0x670]) = v6 + 1985812931 - ((v6 << (v5 ^ 0x20)) & 0x186);
  v8 = v3 < a1;
  v9 = v5 ^ 0x7ECu;
  v10 = v7 + 1174004454 + ((unint64_t)(v7 < (int)v9 + 520955925) << 32);
  v11 = v8 ^ (v10 < a1 + v9 - 1741);
  v12 = v10 <= v3;
  if (!v11)
    v8 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1570 * !v8) ^ v5)) - 12))();
}

uint64_t sub_18CAB0A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7, __int16 a8)
{
  return sub_18CAB05D0(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_18CAB0AA0()
{
  LODWORD(STACK[0x890]) = STACK[0x670];
  free((void *)(STACK[0x678] - 0x4E36C53A99817805));
  JUMPOUT(0x18CA918B4);
}

uint64_t sub_18CAB0AAC()
{
  int v0;
  void *v1;

  LODWORD(STACK[0x890]) = STACK[0x670];
  v1 = malloc_type_malloc(LODWORD(STACK[0x9E8]) ^ 0xB3B7B663, 0x8139508FuLL);
  STACK[0x8D0] = (unint64_t)v1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[((v1 != 0) * (v0 - 798)) ^ (v0 - 439)] - 4))();
}

uint64_t sub_18CAB0ABC()
{
  int v0;
  void *v1;
  unint64_t v2;

  v1 = malloc_type_malloc(STACK[0x850], 0xA6908726uLL);
  v2 = STACK[0x958];
  STACK[0x688] = STACK[0x958];
  *(_QWORD *)(v2 + 104) = v1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[((v1 == 0) * ((v0 - 429811226) & 0x199E647F ^ 0x471)) ^ v0] - 4))();
}

void sub_18CAB0B1C()
{
  int v0;
  _DWORD *v1;
  int v2;
  void *v3;

  v1 = (_DWORD *)STACK[0x688];
  v2 = STACK[0x690];
  *v1 = v0;
  v1[1] = v2;
  v3 = (void *)STACK[0x8D0];
  STACK[0x678] = STACK[0xA80];
  free(v3);
  STACK[0x8D0] = 0;
  JUMPOUT(0x18CAE7D48);
}

uint64_t sub_18CAB0B24()
{
  unsigned int v0;

  return ((uint64_t (*)(void))(qword_1E2538EC0[(56 * (STACK[0x850] == 0)) ^ v0] - (v0 - 30) + 997))();
}

void sub_18CAB0BB0()
{
  int v0;
  int v1;
  unsigned int v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;

  v2 = (v0 - 1225398002) & 0xEDBBFBBF;
  *(_DWORD *)(STACK[0x688] + 112) = 1494274718;
  STACK[0x678] = STACK[0xA80];
  v3 = LOWORD(STACK[0x872]);
  v4 = STACK[0x8D0];
  LODWORD(STACK[0x670]) = STACK[0x9E8];
  LODWORD(STACK[0x680]) = 2 * (v3 ^ 0xF90A);
  v5 = STACK[0x688];
  *(_QWORD *)(v5 + 64) = STACK[0x678];
  *(_DWORD *)(v5 + 72) = (STACK[0x680] & 0x1B356) + (v2 ^ v3 ^ 0xD54CCB3A) - 1626425386;
  *(_QWORD *)(v5 + 48) = v4;
  *(_DWORD *)(v5 + 56) = STACK[0x670];
  v6 = STACK[0x690];
  *(_DWORD *)v5 = v1;
  *(_DWORD *)(v5 + 4) = v6;
  JUMPOUT(0x18CA918B4);
}

uint64_t sub_18CAB0CE8()
{
  int v0;
  char v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v0 = STACK[0x3F8];
  if (LODWORD(STACK[0x668]) != -961433487)
    v0 = STACK[0x3C4];
  LODWORD(STACK[0x28C]) = v0;
  LODWORD(STACK[0x4B0]) -= 1092274346;
  LODWORD(STACK[0x660]) = LODWORD(STACK[0x670]) ^ 0x69C08E65;
  v1 = *(_BYTE *)(STACK[0x688]
                + (*(_BYTE *)(STACK[0x688]
                            + ((*(_BYTE *)(STACK[0x688] + ((*(_BYTE *)(STACK[0x688] + 5) + 12) & 0xF)) + 6) & 0xF)) & 0xF))
     + 14;
  v2 = ((v1 & 0xF) - 2 * (v1 & 3) + 19) ^ 0x13;
  v3 = ((2 * v2) & 0x1FC) + (v2 ^ 0x7DFDEBFE);
  v4 = v3 < 0x7DFDEBFE || v3 + 229082880 > 0x8BA572FF;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(int)((53 * !v4) ^ STACK[0x678])] - 12))();
}

uint64_t sub_18CAB1E08()
{
  int v0;
  int v1;

  LODWORD(STACK[0x284]) = LODWORD(STACK[0x3AC]) - LODWORD(STACK[0x3BC]);
  LODWORD(STACK[0x350]) = LODWORD(STACK[0x500]) ^ LODWORD(STACK[0x4F0]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(527 * ((v1 + 1) > 0xF)) ^ v0] - 8))();
}

#error "18CAB5078: call analysis failed (funcsize=2137)"

void sub_18CAB507C()
{
  JUMPOUT(0x18CAB4698);
}

uint64_t sub_18CAB5094(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  int a69;
  int a70;
  int a71;
  int v71;
  _BOOL4 v72;

  STACK[0x668] = LODWORD(STACK[0x25C]) ^ 0x34u;
  LODWORD(STACK[0x3A0]) = a71 - LODWORD(STACK[0x204]);
  LODWORD(STACK[0x408]) = LODWORD(STACK[0x4F0]) ^ LODWORD(STACK[0x20C]);
  LODWORD(STACK[0x204]) = a69 - 2 * a70;
  LODWORD(STACK[0x530]) = LODWORD(STACK[0x660]) ^ LODWORD(STACK[0x4E0]) ^ a63 ^ LODWORD(STACK[0x4A0]) ^ (LODWORD(STACK[0x37C]) - 2 * LODWORD(STACK[0x3E8]));
  LODWORD(STACK[0x20C]) = LODWORD(STACK[0x470]) - LODWORD(STACK[0x340]);
  LODWORD(STACK[0x3E8]) = LODWORD(STACK[0x3EC]) ^ 0x2764CD19;
  LODWORD(STACK[0x470]) = a62 - LODWORD(STACK[0x580]);
  LODWORD(STACK[0x580]) = a58 - a59;
  LODWORD(STACK[0x25C]) = a61 - a60;
  LODWORD(STACK[0x37C]) = LODWORD(STACK[0x480]) ^ 0x500D359B;
  LODWORD(STACK[0x678]) = a3 ^ 0x52C;
  v72 = STACK[0x680] <= v71 - 38938702;
  return ((uint64_t (*)(void))qword_1E2538EC0[(v72 | (8 * v72)) ^ a3])();
}

void sub_18CAB5BDC()
{
  JUMPOUT(0x18CAB51D8);
}

uint64_t sub_18CAB5C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a68;
  int a71;
  int a72;
  int a73;
  int a74;
  int v74;
  uint64_t v75;
  int v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  int v83;
  int v84;
  unsigned int v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  int v98;
  unsigned int v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  uint64_t v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  int v129;
  uint64_t v130;
  _BOOL4 v131;

  LODWORD(STACK[0x340]) = LODWORD(STACK[0x4C0]) ^ LODWORD(STACK[0x4F0]);
  LODWORD(STACK[0x480]) = LODWORD(STACK[0x268]) - a64;
  LODWORD(STACK[0x39C]) = LODWORD(STACK[0x258]) - 2 * LODWORD(STACK[0x264]);
  LODWORD(STACK[0x264]) = a74 - LODWORD(STACK[0x214]);
  LODWORD(STACK[0x268]) = a71 - a72;
  LODWORD(STACK[0x4F0]) = a73 ^ LODWORD(STACK[0x394]) ^ a68;
  LODWORD(STACK[0x4C0]) = a61 - a62;
  v76 = STACK[0x250];
  LODWORD(STACK[0x258]) = a65 - a66;
  LODWORD(STACK[0x214]) = v76 ^ 0x9C59701F;
  v77 = v75
      + (((unint64_t)(v75 - 0x6975AE8E8E223E0BLL) >> 24) ^ 0x890003C414111880)
      - (((unint64_t)(v75 - 0x6975AE8E8E223E0BLL) >> 23) & 0x77D7DDCEFELL);
  v78 = v77
      + (((v77 + 0xD8A4DAD5DCCA975) >> 14) ^ 0x78FDC87AFBEFCEFALL)
      + (((v77 + 0xD8A4DAD5DCCA975) >> 13) & 0x390F5F7DF9DF4);
  v79 = v78
      + (((v78 - 0x6B737ACD9E232585) >> 7) ^ 0x12280402026CE000)
      - (((v78 - 0x6B737ACD9E232585) >> 6) & 0x3AFF7FBFB263FFELL);
  v80 = (((v79 - 0x5F393259E8BDB120) >> 28) ^ 0x4FFD6F1EB72EFFD5)
      + v79
      + 2
      + (((v79 - 0x5F393259E8BDB120) >> 27) & 0x1D6E5DFFAALL);
  v81 = (((v80 + 0x50C95E8760134F09) >> 8) ^ 0xAFFBDBFBD7B5FEBELL)
      + v80
      + (((v80 + 0x50C95E8760134F09) >> 7) & 0x1F7B7F7AF6BFD7CLL);
  v82 = v81
      + (((v81 - 0x5F327D7477A2AFB5) >> 2) ^ 0x2A860A4842304202)
      - (((v81 - 0x5F327D7477A2AFB5) >> 1) & 0x2AF3EB6F7B9F7BFALL);
  v83 = v82 + 1 - 2 * ((v82 + 103616073) & 0x1139C807 ^ (v82 + 1) & 4) + 1466357323;
  v84 = 2 * (v82 + 1 - ((2 * (v82 + 1) + 207232144) & 0x437C524A) + 669726598) - 50;
  v85 = ((v84 ^ 0xC37C524A) - 2 * ((v84 ^ 0xC37C524A) & 0x1A293022 ^ v84 & 0x20) + 1512648707) & 0x7F199778 ^ 0x24090218;
  v86 = (((v82 - 0x1032FAC88D643CEELL) >> 27) ^ 0x736DEB9FBDFFDE35)
      + v82
      + 1
      + (((v82 - 0x1032FAC88D643CEELL) >> 26) & 0x3F7BFFBC6ALL);
  v87 = v86
      + (((v86 + 0x7C5F1997B49BE4DCLL) >> 14) ^ 0x2C02230A1054400)
      - (((v86 + 0x7C5F1997B49BE4DCLL) >> 13) & 0x7BB9EBDF577FELL);
  v88 = v87
      + (((v87 + 0x799EF7671396A0DCLL) >> 6) ^ 0xB2020064C0380811)
      - (((v87 + 0x799EF7671396A0DCLL) >> 5) & 0x3FBFF367F8FEFDCLL);
  v89 = v88
      + 2
      + (((v88 - 0x1007A85D317E68C6) >> 27) ^ 0x8008054820185244)
      - (((v88 - 0x1007A85D317E68C6) >> 26) & 0x2FBFCF5B76);
  v90 = v89
      + (((v89 + 0x6FF0525AAE6944F4) >> 11) ^ 0x4089241091140003)
      - (((v89 + 0x6FF0525AAE6944F4) >> 10) & 0x2DB7DEDDD7FFF8);
  v91 = v90
      + (((v90 + 0x2F672E4A1D5544F1) >> 7) ^ 0x2BFDFBBBF66F75F6)
      + (((v90 + 0x2F672E4A1D5544F1) >> 6) & 0x3FBF777ECDEEBECLL)
      + 2;
  v92 = v91 - ((2 * v91 + 0x6D2651C4DCB9DF2) & 0xEF6B77B529BBB71CLL) - 0x4E11197443C5579;
  v93 = ((2 * ((v92 ^ 0xF7B5BBDA94DDDB8ELL) + 0x2CA9E7BAB642E976)) & 0xD53D8ACEEE635F7ELL)
      + (((v92 ^ 0xF7B5BBDA94DDDB8ELL) + 0x2CA9E7BAB642E976) ^ 0x6A9EC5677731AFBFLL);
  v94 = (((v93 - 0x6A9EC5677731AFBFLL) >> 27) ^ 0xBFFEDDDCFFE7F7FFLL)
      + v93
      + (((v93 - 0x6A9EC5677731AFBFLL) >> 26) & 0x39FFCFEFFELL);
  v95 = v94
      + (((v94 - 0x2A9DA3447719A7BELL) >> 8) ^ 0x10CA45002840A834)
      - (((v94 - 0x2A9DA3447719A7BELL) >> 7) & 0x6B75FFAF7EAF96);
  v96 = v95
      + (((v95 - 0x3B67E8449F5A4FF2) >> 6) ^ 0x7CFB759F7FBFFEFDLL)
      + (((v95 - 0x3B67E8449F5A4FF2) >> 5) & 0x1F6EB3EFF7FFDFALL)
      + 1;
  v97 = v96 - ((2 * v96 + 0xF394437C1CB6220) & 0x6F845E24F7F91852) - 0xA12ED1A31DC2C7;
  v98 = (((2 * v97) ^ 0xF7F91852) - ((2 * ((2 * v97) ^ 0xF7F91852)) & 0x3318845C) + 1502364207) & 0x7F199778 ^ 0x61081520;
  v99 = ((2 * v98) & 0xAC120410) - v98 + 688971255;
  v100 = (v97 ^ 0x8D37346EEB644AEDLL)
       + ((v97 >> 24) ^ 0x228928C353567CFLL)
       + ((v97 >> 23) & 0x1FDFBFDEDB6 ^ 0xFFFFFEE795973269)
       - 0x228920102010923;
  v101 = (((((2 * v100) & 0xFF6DFFEFF777DAFCLL) + (v100 ^ 0xFFB6FFF7FBBBED7ELL) + 0x49000804441282) >> 10) ^ 0x3F77CE7E7EFEB97FLL)
       + ((2 * v100) & 0xFF6DFFEFF777DAFCLL)
       + (v100 ^ 0xFFB6FFF7FBBBED7ELL)
       + (((((2 * v100) & 0xFF6DFFEFF777DAFCLL) + (v100 ^ 0xFFB6FFF7FBBBED7ELL) + 0x49000804441282) >> 9) & 0x6F9CFCFDFD72FELL);
  v102 = v101
       + (((v101 - 0x3F2ECE767ABAA6FDLL) >> 5) ^ 0x403A4A005058875)
       - (((v101 - 0x3F2ECE767ABAA6FDLL) >> 4) & 0x7F8B6BFF5F4EF14)
       + 1;
  v103 = v102 - ((2 * v102 + 0x799B19D3007FA11ALL) & 0x43E535205A3F0560) - 0x213FD88652A0ACC3;
  v104 = ((2 * ((v103 ^ 0x21F29A902D1F82B0) - 0x5F6C9CB288BB47ADLL)) & 0xED9FB7BBA7BF77F6)
       + (((v103 ^ 0x21F29A902D1F82B0) - 0x5F6C9CB288BB47ADLL) ^ 0xF6CFDBDDD3DFBBFBLL);
  v105 = v104
       + (((v104 + 0x93024222C204405) >> 29) ^ 0x96502CB202989062)
       - (((v104 + 0x93024222C204405) >> 28) & 0xBFACEDF3ALL);
  v106 = v105
       + (((v105 + 0x72DFF7702987B3A3) >> 11) ^ 0x4EF7EDDED7FDFFEFLL)
       + (((v105 + 0x72DFF7702987B3A3) >> 10) & 0x2FDBBDAFFBFFDELL);
  v107 = v106
       + (((v106 + 0x23E809915189B3B4) >> 8) ^ 0x20204000088C000ELL)
       - (((v106 + 0x23E809915189B3B4) >> 7) & 0x1BF7FFFEEE7FFE2)
       + 2;
  v108 = v107 - ((2 * v107 + 0x78F932291FB6748) & 0x73463CA994B0E14ALL) + 0x3D6AE7E613562449;
  v109 = (v108 ^ 0x8C8F525E37AEC3ACLL)
       + ((v108 >> 31) ^ 0x73FF5BEE7445BA43)
       + ((v108 >> 30) & 0x2DAB63DFELL ^ 0x212340978)
       - 0x73FF5BEF6D5B1EFFLL;
  v110 = ((2 * v109) & 0xFBA498C1FD2DEB1ELL)
       + (v109 ^ 0xFDD24C60FE96F58FLL)
       + (((((2 * v109) & 0xFBA498C1FD2DEB1ELL) + (v109 ^ 0xFDD24C60FE96F58FLL) + 0x22DB39F01690A71) >> 13) ^ 0x56980882112A060FLL)
       - (((((2 * v109) & 0xFBA498C1FD2DEB1ELL) + (v109 ^ 0xFDD24C60FE96F58FLL) + 0x22DB39F01690A71) >> 12) & 0xFEEFBDDABF3E0);
  v111 = v110 - 0x546A54E30FC0FB9ELL;
  v112 = v110 + (((v110 - 0x546A54E30FC0FB9ELL) >> 6) ^ 0x377BC9DB7FFF1FF9) + 1;
  v113 = v112
       + ((v111 >> 5) & 0x6F793B6FFFE3FF2)
       - 2 * ((v112 + ((v111 >> 5) & 0x6F793B6FFFE3FF2) + 0x1E141703FE468) & 0x4D29C22CE13CFLL ^ v112 & 1)
       + 0x741EB3DD930DF836;
  LODWORD(v111) = ((2 * v113) ^ 0x459C279C) - 2 * (((2 * v113) ^ 0x459C279C) & 0x26EA239E ^ (2 * v113) & 2) - 1494604900;
  LODWORD(v111) = ((v111 & 0x67198770 ^ 0xE72F6A27 | v111 & 0x18001008) - 1) ^ 0xCBAF637E;
  v114 = v74 ^ v83 ^ (((2 * v85) & 0x26010630) - v85 + 1822375013) ^ v97 ^ v99 & 0xFFFFFFF9 ^ 0x7C72955B ^ (((2 * v111) | 0x5A60A39A) - v111 + 1389342259) ^ v113;
  LODWORD(STACK[0x4E0]) = LODWORD(STACK[0x500]) ^ 0xF647B4EC;
  LOBYTE(v111) = *(_BYTE *)(STACK[0x688]
                          + ((*(_BYTE *)(STACK[0x688]
                                       + ((*(_BYTE *)(STACK[0x688] + ((*(_BYTE *)(STACK[0x688] + 13) + 10) & 0xF)) + 9) & 0xF))
                            + 3) & 0xF));
  v115 = ((((v111 + 11) & 0xF) - ((2 * (v111 + 11)) & 0x1A) - 3) ^ 0x79FEFD02)
       + 2 * ((((v111 + 11) & 0xF) - ((2 * (v111 + 11)) & 0x1A) - 3) ^ 0xFDu);
  v116 = (LODWORD(STACK[0x678]) + 33554136) | 0xE422A144;
  v117 = (v115 + 1261038279);
  LODWORD(STACK[0x394]) = LODWORD(STACK[0x640]) >> 3;
  LODWORD(v87) = ((*(unsigned __int8 *)STACK[0x688] << (v116 ^ 0xC4)) & 0xB2)
               + (*(unsigned __int8 *)STACK[0x688] ^ 0xFE6D7559);
  v118 = 1364176807 * v87 - ((-1566613682 * v87 - 1479329822) & 0xF97AAF72) + 1353118634;
  LODWORD(v87) = ((2 * (v118 ^ 0x94BDA38D)) & 0x3FFD7EFC) + (v118 ^ 0x8B431CF3);
  LODWORD(v87) = (((v87 - 536788862) >> 16) ^ 0x73EBEFD7)
               + v87
               + ((2 * ((v87 - 536788862) >> 16)) & 0x1DFAE);
  v119 = (v87 + 1813336235) >> 8;
  LODWORD(v87) = (v119 ^ 0xB9BBED73) + v87;
  v120 = v87 + ((2 * v119) & 0x177DAE6);
  v121 = v120 - ((2 * v120 + 1966408530) & 0xC938C8CA) - 1623792114;
  v122 = ((2 * v121) ^ 0xC938C8CA) - 2 * (((2 * v121) ^ 0xC938C8CA) & 0x1C4DFCB6 ^ (2 * v121) & 0x10) - 1672610650;
  v123 = (v122 & 0x7F199778 ^ 0x21119478)
       + (v122 & 0x7C098200 ^ 0x5C4E6285)
       - ((v122 & 0x7F199778 ^ 0x21119478) & 0x7C098200);
  LODWORD(v102) = v120 - 2 * ((v120 + 47947802) & 0x1B2AFE5D ^ v87 & 1) + 1577492086;
  LODWORD(v87) = (((2 * v102) ^ 0x3655FCB8) - ((2 * ((2 * v102) ^ 0x3655FCB8)) & 0x5AE91DDC) + 762613487) & 0x7F199778 ^ 0x59119300;
  LODWORD(v87) = (((2 * v87) | 0xE96FC3D0) - v87 + 189275672) ^ 0x90B7E400;
  v124 = ((2 * (_DWORD)v87) | 0x502A2E74) - v87;
  LODWORD(v87) = ((2 * (v118 ^ 0xE797A9E5 ^ v102)) & 0xFBB36F2E) + (v118 ^ 0xE797A9E5 ^ v102 ^ 0x7DD9B797);
  LODWORD(v87) = (((v87 - 2111420311) >> 16) ^ 0xEAFFFFB7)
               + v87
               + ((2 * ((v87 - 2111420311) >> 16)) & 0x1FF6E);
  LODWORD(v87) = (((v87 - 1759098702) >> 8) ^ 0x7FBCFE3E)
               + v87
               + (((v87 - 1759098702) >> 7) & 0x179FC7C);
  v125 = v87 - ((2 * v87 + 1062523338) & 0x8EC5516C) + 1728909723;
  v126 = (((2 * v125) ^ 0x8EC5516C) - 2 * (((2 * v125) ^ 0x8EC5516C) & 0x32EF096E ^ (2 * v125) & 2) + 1928268140) & 0x7F199778 ^ 0x4F110028;
  v127 = (167560514 - v126 + ((2 * v126) | 0xEC06757C)) ^ 0x7F0332BE;
  v128 = v87 - ((2 * v87 + 265752236) & 0x2F2C1FE0) + 1065457478;
  LODWORD(v113) = ((2 * (v118 ^ 0x6B2B5849 ^ v128)) & 0xF7BBEFB6) + (v118 ^ 0x6B2B5849 ^ v128 ^ 0xFBDDF7DB);
  LODWORD(v113) = (((v113 + 69339173) >> 16) ^ 0xE7FD797B)
                + v113
                + (((v113 + 69339173) >> 15) & 0xF2F6);
  LODWORD(v113) = (((v113 + 472157866) >> 8) ^ 0xE9EF77DF)
                + v113
                + (((v113 + 472157866) >> 7) & 0x1DEEFBE);
  LODWORD(v113) = v113 - ((2 * v113 + 74067350) & 0x12366FBA) + 995118760;
  v129 = (v113 ^ 0x91B37DD) - ((2 * (v113 ^ 0x91B37DD) + 276970722) & 0x84D15C7E) + 1252641968;
  LODWORD(v113) = (((2 * v129) ^ 0x84D15C7E) - ((2 * ((2 * v129) ^ 0x84D15C7E)) & 0x7839DA7C) + 2082270527) & 0x7F199778 ^ 0x3080428;
  v130 = v114 ^ v121 ^ v123 & 0xFF7FFF78 ^ v125 ^ (-1325927548 - (v127 | 0xB0F7F384) + (v127 | 0x4F080C7B)) ^ v129 ^ 0xA366C157 ^ (-128439306 - (_DWORD)v113 + ((2 * (_DWORD)v113) | 0xF4F8B90) + 3650);
  v131 = v117 > 0xC528E8C7;
  if (v115 < 0x79FEFDFF)
    v131 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(1491 * !v131) ^ LODWORD(STACK[0x678])] - 12))(v116, v115, v117, 815300168, 1024203611, v130, 791420896, v124, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

uint64_t sub_18CAB7584(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a71;
  int a72;
  int a73;
  int v73;

  LODWORD(STACK[0x3DC]) ^= LODWORD(STACK[0x3AC]);
  LODWORD(STACK[0x254]) -= LODWORD(STACK[0x26C]);
  LODWORD(STACK[0x210]) = LODWORD(STACK[0x208]) - LODWORD(STACK[0x210]);
  LODWORD(STACK[0x26C]) = a71 - a72;
  LODWORD(STACK[0x3AC]) = a73 - LODWORD(STACK[0x200]);
  LODWORD(STACK[0x678]) = 23 * (a1 ^ 0xE622A1EE);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[(4 * ((v73 + 1) > 0xF)) | (8 * ((v73 + 1) > 0xF)) | a1 ^ 0xE622A556]
                                          - 8))(235930672);
}

uint64_t sub_18CAB7DE4()
{
  int v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  unint64_t v41;
  uint64_t v42;
  int v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  _BOOL4 v71;

  LODWORD(STACK[0x3A8]) ^= LODWORD(STACK[0x660]) ^ LODWORD(STACK[0x4A0]) ^ LODWORD(STACK[0x204]);
  LODWORD(STACK[0x4B0]) = LODWORD(STACK[0x24C]) - LODWORD(STACK[0x388]);
  v2 = (((v0 + 936178000) >> 8) ^ 0x256E77C7) + v0 + (((v0 + 936178000) >> 7) & 0xDCEF8E);
  v3 = v2 + (((v2 + 308181385) >> 5) ^ 0xA00054B2) - (((v2 + 308181385) >> 4) & 0xFFF569A) + 1;
  v4 = v3 - ((2 * v3 + 79448492) & 0x726705E) + 1978752261;
  v5 = ((2 * ((v4 ^ 0x393382F) - 1879573490)) & 0xDCFAFFF6) + (((v4 ^ 0x393382F) - 1879573490) ^ 0xEE7D7FFB);
  v6 = (((v5 + 293765125) >> 10) ^ 0xFFAEE3FB) + v5 + (((v5 + 293765125) >> 9) & 0x5DC7F6);
  v7 = ((v6 + 299080714) & 0xF3DD9BE6) + v6 + (((v6 + 299080714) >> 1) ^ 0xF9EECDF3);
  v8 = v7 - ((2 * v7 + 801741870) & 0x4D186A3A) + 1047593780;
  v9 = ((2 * ((v8 ^ 0x268C351D) + 1287124013)) & 0xD5CAFDBE) + (((v8 ^ 0x268C351D) + 1287124013) ^ 0x6AE57EDF);
  v10 = v9 + (((v9 - 1793425119) >> 13) ^ 0x18043448) - (((v9 - 1793425119) >> 12) & 0x7976E);
  v11 = (((v10 + 2098613465) >> 5) & 0x4DE9994) + (((v10 + 2098613465) >> 6) ^ 0xFE6F4CCA);
  v12 = v10 + v11 + 1;
  v13 = v12 + ((2 * v11 + 52520556) ^ 0x14019405) - ((2 * (2 * v11 + 52520556)) & 0xD7FCD7F4);
  v14 = v13 - 2 * ((v13 + 178613257) & 0x1194A65F ^ v12 & 1) + 2084180583;
  v15 = ((2 * ((v14 ^ 0x1194A65E) - 1282870125)) & 0xCDFDDDFA) + (((v14 ^ 0x1194A65E) - 1282870125) ^ 0xE6FEEEFD);
  v16 = (((v15 + 419500291) >> 8) ^ 0xFB7D7EF1) + v15 + (((v15 + 419500291) >> 7) & 0xFAFDE2);
  v17 = (((v16 + 495161874) >> 2) ^ 0x77F9FDDE) + v16 + (((v16 + 495161874) >> 1) & 0x6FF3FBBC);
  v18 = v17 - ((2 * v17 + 1259546728) & 0xB3EE8AE8) + 2139150760;
  v19 = ((2 * ((v18 ^ 0xD9F74574) + 707258702)) & 0xCFB2FFF0) + (((v18 ^ 0xD9F74574) + 707258702) ^ 0xE7D97FF8);
  v20 = (((v19 + 405176328) >> 13) ^ 0x3657BF0E) + v19 + (((v19 + 405176328) >> 12) & 0xF7E1C);
  v21 = (((v20 - 506543878) >> 3) ^ 0xDDCFCFBF) + v20 + (((v20 - 506543878) >> 2) & 0x3B9F9F7E);
  v22 = v21 - ((2 * v21 + 134079094) & 0x459882D4) + 650850981;
  LODWORD(STACK[0x208]) = v8;
  v23 = v22 ^ v8;
  LODWORD(STACK[0x200]) = v22;
  v24 = (v22 ^ 0xA94317E0) + ((v22 >> 11) ^ 0x9095016A) + ((v22 >> 10) & 0x3FADEE ^ 0xFFD5FF3B) + 1870649081;
  v25 = (((((2 * v24) & 0xBFFFDFCC) + (v24 ^ 0x5FFFEFE6) - 1610608614) >> 5) ^ 0x6DFCDF5F)
      + ((2 * v24) & 0xBFFFDFCC)
      + (v24 ^ 0x5FFFEFE6)
      + (((((2 * v24) & 0xBFFFDFCC) + (v24 ^ 0x5FFFEFE6) - 1610608614) >> 4) & 0xBF9BEBE);
  v26 = v25 - ((2 * v25 + 1678139766) & 0xC1D0B2CE) + 317426210;
  v27 = (v26 ^ 0xD4B48D9F) + ((v26 >> 12) ^ 0xCA5DCA0C) + 900693693 + ((2 * (v26 >> 12)) & 0x1EFD76 ^ 0xFFE56BEF);
  v28 = (((((2 * v27) & 0xFEF8FFEE) + (v27 ^ 0x7F7C7FF7) - 2138865655) >> 7) ^ 0xF06BFBFD)
      + ((2 * v27) & 0xFEF8FFEE)
      + (v27 ^ 0x7F7C7FF7)
      + (((((2 * v27) & 0xFEF8FFEE) + (v27 ^ 0x7F7C7FF7) - 2138865655) >> 6) & 0xD7F7FA);
  v29 = v28 - ((2 * v28 + 539953176) & 0x9A3F8426) + 1563903519;
  v30 = ((2 * ((v29 ^ 0xCD1FC213) - 2045107421)) & 0x378D6C96) + (((v29 ^ 0xCD1FC213) - 2045107421) ^ 0x9BC6B64B);
  v31 = (((v30 + 1681476021) >> 11) ^ 0x6BFFD7FF) + v30 + (((v30 + 1681476021) >> 10) & 0x3FAFFE);
  v32 = v31 + (((v31 - 130453066) >> 8) ^ 0x5004DCC0) - (((v31 - 130453066) >> 7) & 0x1F6467E) + 1;
  v33 = v32 + 2033713749 + (~(2 * v32 + 1349069290) | 0x5DF92541);
  v34 = ((2 * (v23 ^ v33)) ^ 0xAA863250) - ((2 * ((2 * (v23 ^ v33)) ^ 0xAA863250)) & 0x49C55DC) - 2108806417;
  v35 = ((v34 & 0x80450 ^ 0x2648C7) + (v34 & 0x7F119328) - 1) ^ 0x9B0F9886;
  v36 = STACK[0x608];
  v37 = LODWORD(STACK[0x5F0]) ^ LODWORD(STACK[0x608]);
  v38 = STACK[0x480];
  LODWORD(STACK[0x4A0]) = v37;
  v39 = ((((2 * (v38 ^ v37)) ^ 0xD1338870)
        - 2 * (((2 * (v38 ^ v37)) ^ 0xD1338870) & 0xD7580BE ^ (2 * (v38 ^ v37)) & 2)
        + 225804477) & v1 ^ 0xA69BA67B)
      - 1;
  v40 = STACK[0x430];
  v41 = STACK[0xB70];
  v42 = *(_QWORD *)(STACK[0xB70] + 8 * (0x8EA31169 % STACK[0x680]));
  v43 = (2 * v38) ^ 0x3462D6D6;
  v44 = STACK[0x5A0];
  v45 = (*(_QWORD *)(STACK[0xB70]
                   + 8
                   * (((((v42 ^ 0xC9C9C9C9C9C9C9C9) + 1547586649) ^ 0xFDB157BC8FFFDD3BLL)
                     + 0x24EA843700022C5
                     + ((2 * ((v42 ^ 0xC9C9C9C9C9C9C9C9) + 1547586649)) & 0xFB62AF791FFFBA76))
                    % STACK[0x5A0])) ^ 0xC9C9C9C9C9C9C9C9)
      + 2207661067u;
  v46 = (*(_QWORD *)(STACK[0xB70]
                   + 8
                   * (((v45 ^ 0xCFFFBF67EB671B32) + 0x300040981498E4CELL + ((2 * v45) & 0x9FFF7ECFD6CE3664))
                    % STACK[0x5A0])) ^ 0xC9C9C9C9C9C9C9C9)
      + 1300402492;
  v47 = ((v46 ^ 0x7EF7A94FFFFEFDDFLL) - 0x7EF7A94FFFFEFDDFLL + ((2 * v46) & 0xFDEF529FFFFDFBBELL)) % STACK[0x5A0];
  STACK[0x660] = STACK[0xB70];
  v48 = (*(_QWORD *)(v41 + 8 * v47) ^ 0xC9C9C9C9C9C9C9C9) + 214590498;
  LODWORD(STACK[0x5A0]) = (((v43 - ((2 * v43) & 0x362A8980) - 1693104960) & 0xD111538 ^ 0xD4771AB)
                         + ((v43 - ((2 * v43) & 0x362A8980) - 1693104960) & 0x72088240 ^ 0x20000201)
                         + 2147483646) & 0x7F1B9778;
  LODWORD(STACK[0x24C]) = v40 ^ 0x1C30839F;
  LODWORD(STACK[0x204]) = v14;
  LODWORD(v48) = ((v48 ^ 0xE79DD77BFDEFFF5FLL) + 0x18622884021000A1 + ((2 * v48) & 0xCF3BAEF7FBDFFEBELL)) % v44;
  v49 = ((v48 - ((2 * v48) & 0x131C4CA2) - 1987172783) ^ 0x6871FDE9)
      + 1604957643
      + ((2 * (v48 - ((2 * v48) & 0x131C4CA2) - 1987172783)) & 0xC3FFB770 ^ 0x31C0420);
  LODWORD(STACK[0x5E0]) = LODWORD(STACK[0x510]) ^ 0xF044B00B;
  LODWORD(STACK[0x3B8]) = v35;
  LODWORD(STACK[0x5D0]) = (v39 & 0x7081778 ^ 0x56C145B | v39 & 0x78118000) - 1;
  v50 = (LODWORD(STACK[0x678]) - 6459973) - 4288508312;
  v51 = *(_QWORD *)(STACK[0x660] + 8 * v50) ^ 0xC9C9C9C9C9C9C9C9;
  v52 = 0xC76BB339E9ED63B1 * v51 - ((0xED76673D3DAC762 * v51) & 0x2B2B6343A0A2CD30) + 0x1595B1A1D0516698;
  v53 = ((2 * ((v52 ^ 0xD0E8AC51DC95D622) + v50)) & 0xF6BFCE795BFF6FFELL)
      + (((v52 ^ 0xD0E8AC51DC95D622) + v50) ^ 0x7B5FE73CADFFB7FFLL);
  v54 = v53
      + (((v53 - 0x7B5FE73CADFFB7FFLL) >> 32) ^ 0x1582248065440A08)
      - (((v53 - 0x7B5FE73CADFFB7FFLL) >> 31) & 0x13577EBEELL);
  v55 = v54
      + (((v54 + 0x6F1DF442ECBC3DF9) >> 16) ^ 0xD6B7EFFBFFFEEE7ELL)
      + (((v54 + 0x6F1DF442ECBC3DF9) >> 15) & 0x1DFF7FFFDDCFCLL);
  v56 = v55
      + (((v55 - 0x6799FBB91342B085) >> 8) ^ 0xE3DF7AFF9BE92FE7)
      + (((v55 - 0x6799FBB91342B085) >> 7) & 0x1BEF5FF37D25FCELL)
      + 1;
  v57 = v56 - ((2 * v56 + 0x690D128EA1A83F26) & 0xDF87C0151023E418) - 0x5BB596AE2719EE61;
  LODWORD(v56) = ((v56 - ((2 * (_DWORD)v56 - 1582809306) & 0x1023E418) - 656010849) >> 1) & 0x7FFBE43E ^ 0x4C63D106;
  v58 = (v57 ^ 0xEFC3E00A8811F20CLL)
      - ((2 * (v57 ^ 0xEFC3E00A8811F20CLL) + 0x45D043FB4117B934) & 0x7FFF4E1498E50982)
      - 0x1D1836F813019EA5;
  v59 = ((2 * ((v52 ^ 0x2A6A16AB9C23E259 ^ v58) + v50)) & 0xBAF7F6BECB6CA98CLL)
      + (((v52 ^ 0x2A6A16AB9C23E259 ^ v58) + v50) ^ 0xDD7BFB5F65B654C6);
  v60 = v59
      + (((v59 + 0x228404A09A49AB3ALL) >> 32) ^ 0xC90820221148430)
      - (((v59 + 0x228404A09A49AB3ALL) >> 31) & 0x1BDD6F79ELL);
  v61 = v60
      + (((v60 + 0x15F3829E7935270ALL) >> 16) ^ 0xF3F07DFB7EEE6F7BLL)
      + (((v60 + 0x15F3829E7935270ALL) >> 15) & 0xFBF6FDDCDEF6);
  v62 = v61
      + (((v61 + 0x220304A2FA46B78FLL) >> 8) ^ 0xAAFF7BA7BFFBF77ELL)
      + (((v61 + 0x220304A2FA46B78FLL) >> 7) & 0x1FEF74F7FF7EEFCLL);
  v63 = v62 + 1 - 2 * ((v62 + 0x170388FB3A4AC011) & 0x11582A01D61061A5 ^ (v62 + 1) & 4) + 0x85BB2FD105B21B1;
  LODWORD(v59) = ((v63 >> 1) & 0x7FFBE43E ^ 0x2CCB2420)
               - ((2 * ((v63 >> 1) & 0x7FFBE43E ^ 0x2CCB2420)) & 0xEB724034)
               - 172414182;
  LODWORD(v59) = ((v59 & 0xD8008080 ^ 0xC8009081 | v59 & 0x27FF657E) - 1) ^ v63;
  v64 = (v63 ^ 0x91582A01D61061A1)
      - ((2 * (v63 ^ 0x91582A01D61061A1) + 0x5D043FB4117B934) & 0x2454B4C2D55DDC82)
      + 0x35127C5F0B3ACADBLL;
  v65 = ((2 * ((v52 ^ 0x87BFEBC0BAFF88D9 ^ v64) + v50)) & 0x57F6DDCEDB53FDD8)
      + (((v52 ^ 0x87BFEBC0BAFF88D9 ^ v64) + v50) ^ 0x2BFB6EE76DA9FEECLL);
  v66 = v65
      + (((v65 - 0x2BFB6EE76DA9FEECLL) >> 32) ^ 0x8430520420102094)
      - (((v65 - 0x2BFB6EE76DA9FEECLL) >> 31) & 0x1BFDFBED6);
  v67 = v66
      + (((v66 + 0x4FD43F147245E080) >> 16) ^ 0xFAEFFD69CFF3623DLL)
      + (((v66 + 0x4FD43F147245E080) >> 15) & 0x1FAD39FE6C47ALL);
  v68 = v67
      + (((v67 + 0x54E441AAA2527E43) >> 8) ^ 0xFFFD7EBBDF6F7434)
      + (((v67 + 0x54E441AAA2527E43) >> 7) & 0x1FAFD77BEDEE868)
      + 1;
  LODWORD(v52) = (((v68 - 1025308146) >> 1) - ((v68 - 1025308146) & 0x73711906) + 968395907) & 0x7FFBE43E ^ 0x31FBC414;
  v69 = (v68 - 1025308146) ^ 0x7EF8C7DA ^ (v52 - ((2 * v52) & 0xED770818) + 1992001484);
  v70 = v36 ^ 0x27DDD98B ^ v57 ^ (((2 * (_DWORD)v56) & 0x47A2AA5C) - (_DWORD)v56 - 600921519) ^ v59 ^ 0x62269185 ^ (v69 - ((2 * v69) & 0x243059A6) - 1843909421);
  v71 = v49 > 0x41A99184;
  if (v49 < 0x41A99183)
    v71 = 1;
  return ((uint64_t (*)(uint64_t, unint64_t))(qword_1E2538EC0[(1294 * !v71) ^ LODWORD(STACK[0x678])]
                                                            - 12))(v70, 0xA2E821FDA08BDC9ALL);
}

uint64_t sub_18CAB94F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a64;
  int a66;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int v77;
  int v78;
  int v79;
  int v80;

  LODWORD(STACK[0x250]) = LODWORD(STACK[0x410]) ^ 0x9BE2957A;
  LODWORD(STACK[0x388]) = LODWORD(STACK[0x218]) - LODWORD(STACK[0x220]);
  v79 = LODWORD(STACK[0x3B8]) - a64 + 1209439824;
  LODWORD(STACK[0x3B8]) = a72 - a74;
  v80 = a68 ^ LODWORD(STACK[0x5B0]) ^ a69 ^ a71 ^ a70 ^ LODWORD(STACK[0x640]) ^ LODWORD(STACK[0x394]) ^ a73 ^ LODWORD(STACK[0x20C]) ^ a6 ^ LODWORD(STACK[0x208]) ^ LODWORD(STACK[0x200]) ^ a76 ^ v79;
  LODWORD(STACK[0x398]) ^= LODWORD(STACK[0x640]) ^ v77 ^ LODWORD(STACK[0x204]) ^ a77 ^ a75 ^ (a66 - 1);
  LODWORD(STACK[0x660]) = v80;
  LODWORD(STACK[0x678]) = v80 ^ 0xACFEF0BC;
  return ((uint64_t (*)(void))qword_1E2538EC0[(44 * (STACK[0x680] <= v78 - 1089807004)) ^ ((a8 + 6458996) | 0x483)])();
}

void sub_18CAB9E74()
{
  JUMPOUT(0x18CAB962CLL);
}

uint64_t sub_18CAB9EA0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  _BOOL4 v9;

  LODWORD(STACK[0x394]) = LODWORD(STACK[0x228]) - LODWORD(STACK[0x384]);
  v4 = LODWORD(STACK[0x5A0]) ^ LODWORD(STACK[0x5F0]) ^ LODWORD(STACK[0x5D0]) ^ LODWORD(STACK[0x3B8]);
  LODWORD(STACK[0x218]) = v4;
  LODWORD(STACK[0x384]) = v4 ^ 0x420E6C66;
  v5 = *(unsigned __int8 *)(STACK[0x688]
                          + ((*(_BYTE *)(STACK[0x688]
                                       + ((*(_BYTE *)(STACK[0x688] + ((*(_BYTE *)(STACK[0x688] + 8) + 9) & 0xF)) + 9) & 0xF))
                            + 5) & 0xF)) ^ 0xFFFFFFBF;
  v6 = v5 & 0xFFFFFF97 ^ 0x7B ^ ((v5 & 0x18 | 0xFFFFFFE3) - (v5 & 0xFFFFFF80 | 0x1C) + 28);
  v7 = ((v6 | 0x4B) - (v6 | 0xB4) - 76) ^ 0xDC;
  v8 = (v7 ^ 0xF7B7FCC5) + ((2 * v7) & 0x18A) + 1425125060;
  v9 = v8 > 0x4CA9AB8A;
  if (v8 < 0x4CA9AB89)
    v9 = 1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1043 * !v9) ^ a4] - 12))();
}

uint64_t sub_18CABB494()
{
  int v0;
  int v1;

  LODWORD(STACK[0x220]) = LODWORD(STACK[0x3F0]) ^ 0x84102664;
  LODWORD(STACK[0x680]) = v0 ^ 0x46E;
  return ((uint64_t (*)(uint64_t))qword_1E2538EC0[(733 * ((v1 + 1) > 0xF)) ^ (v0 - 487)])(1536300254);
}

void sub_18CABBD98()
{
  JUMPOUT(0x18CABBDB8);
}

uint64_t sub_18CABBE04(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t (*v10)(void);

  v7 = (v3 - 429);
  v8 = ((unint64_t)&STACK[0x728] ^ 0x6DFFFDBBEB56AFDELL)
     - 0x6DFFFDBBEB56AFDELL
     + ((2 * (_QWORD)&STACK[0x728]) & 0xDBFFFB77D6AD5FB8);
  STACK[0x5E0] = ((2 * (v8 % 0x25)) & 0x36)
               + ((v8 % 0x25) ^ v7 ^ 0xF9E8FFF6EFE7F1DCLL)
               + 0x617000910180A75;
  v9 = STACK[0x8A0];
  v10 = (uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)v7) - (((((_DWORD)v7 - 707) | 0x470u) + 217) ^ 0x6C5));
  STACK[0x5C0] = STACK[0x8A0];
  STACK[0x678] = STACK[0xA48];
  STACK[0x688] = (unint64_t)&STACK[0xBB0] + v9;
  STACK[0x5D0] = (unint64_t)&STACK[0xBB0] + v9 + 16;
  LODWORD(STACK[0x660]) = v5;
  STACK[0x680] = v4;
  STACK[0x608] = a3;
  return v10();
}

uint64_t sub_18CABBF58()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  LODWORD(STACK[0x640]) = v1;
  STACK[0x15C8] = 0xC7C33B375ECB8BE8;
  LODWORD(STACK[0x728]) = dword_1EE0569E8 + v4;
  v6 = ((((v5 - 192) | 0x4E4EC8390FF411A2) - (v5 - 192) + ((v5 - 192) & 0xB1B137C6F00BEE58)) ^ 0xA35A5FA2419DC75CLL)
     * v2;
  v7 = v6 ^ (v0 + 624098254);
  v8 = *(unsigned int *)aHAwAwAwAwAwAwA;
  *(_DWORD *)(v5 - 188) = v7 ^ 0x74;
  *(_DWORD *)(v5 - 184) = v7 ^ 0x2B;
  *(_DWORD *)(v5 - 180) = v0 + 624098254 + v6;
  *(_QWORD *)(v5 - 176) = v3 - v6;
  *(_QWORD *)(v5 - 168) = v8 ^ v6;
  *(_DWORD *)(v5 - 160) = v6 + v0 + 1123495836;
  *(_DWORD *)(v5 - 156) = v6;
  v9 = sub_18CBBB420(v5 - 192);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[*(int *)(v5 - 192)] - 8))(v9);
}

uint64_t sub_18CABC040()
{
  int v0;
  uint32_t v1;

  STACK[0x678] = (unint64_t)malloc_type_malloc(STACK[0x5E0], 0xC5732911uLL);
  v1 = arc4random();
  *(_DWORD *)&aHAwAwAwAwAwAwA[4] = v1 + 1465998909 - ((2 * v1) & 0xAEC2BC7A);
  *(_DWORD *)&aHAwAwAwAwAwAwA[8] = ((1812433253
                                   * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))) ^ 0xBDFED639)
                                 + ((1477382858
                                   * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))) & (v0 ^ 0x7BFDAABF))
                                 - 1721595899
                                 - ((2
                                   * (((1812433253
                                      * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))) ^ 0xBDFED639)
                                    + ((1477382858
                                      * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))) & (v0 ^ 0x7BFDAABF)))
                                   - 2080222320) & 0xAEC2BC7A);
  return ((uint64_t (*)(void))qword_1E2538EC0[v0 ^ 0x4DE])();
}

void sub_18CABC168()
{
  JUMPOUT(0x18CABC100);
}

void sub_18CABC188()
{
  JUMPOUT(0x18CABC194);
}

uint64_t sub_18CABC36C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;

  v9 = v7 + (v6 & 0x80000000 ^ 0xBFDDEF53) - 514;
  v10 = *(_DWORD *)(a2 + 4 * (a3 + v5 + (a5 + 92)));
  v11 = (((v8 - (v10 & 0x7FFFFFFE ^ 0x592192A4 | v8) + (v10 & 0x7FFFFFFE ^ 0x592192A4 | 0x32CE4286)) ^ 0x548F2AF) - 1) ^ 0x39C67CB0;
  *(_DWORD *)(a2 + 4 * (a3 + v5) + 3456) = *(_DWORD *)(a2 + 4 * (a3 + v5) + 5044) ^ *((_DWORD *)&STACK[0x15C8]
                                                                                    + ((v10 & 1) == 0)) ^ (((v11 | v9 ^ 0xABDDED51) - ((2 * v11) & 0x4C305472) - 1508365767) >> 1) ^ 0xDC79EF4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((111 * (v5 + 1 != a4 + 3)) ^ a5)) - 12))();
}

uint64_t sub_18CABC460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  int8x16_t v7;
  const float *v8;
  int8x16_t v9;
  int8x16_t v10;
  int32x4_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int32x4_t v14;
  int8x16_t v15;

  v8 = (const float *)&aHAwAwAwAwAwAwA[912];
  v9 = (int8x16_t)vld1q_dup_f32(v8);
  v10.i64[0] = 0x8000000080000000;
  v10.i64[1] = 0x8000000080000000;
  v11.i64[0] = -1;
  v11.i64[1] = -1;
  v7.i64[0] = *(_QWORD *)&aHAwAwAwAwAwAwA[916];
  v7.i32[2] = *(_DWORD *)&aHAwAwAwAwAwAwA[924];
  v12 = vextq_s8(v9, v7, 0xCuLL);
  v13 = v7;
  v13.i32[3] = *(_DWORD *)&aHAwAwAwAwAwAwA[928];
  v14 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(vorrq_s8(veorq_s8(vandq_s8(v13, (int8x16_t)vdupq_n_s32(0x1BD31FACu)), (int8x16_t)vdupq_n_s32(0x9C20081u)), vandq_s8(v13, (int8x16_t)vdupq_n_s32(0x642CE052u))), vandq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vorrq_s8(vandq_s8(v12, v10), (int8x16_t)vdupq_n_s32(0x3F7C12F8u)), (int8x16_t)vdupq_n_s32(0xC0A4CD98)), vdupq_n_s32(0x435F0D18u)), v10)), v11), (int8x16_t)vdupq_n_s32(0x5EA35EBCu));
  v15.i32[0] = *(_DWORD *)(v6 + 4 * ((aHAwAwAwAwAwAwA[916] & 1) == 0));
  v15.i32[1] = *(_DWORD *)(v6 + 4 * ((aHAwAwAwAwAwAwA[920] & 1) == 0));
  v15.i32[2] = *(_DWORD *)(v6 + 4 * (*(unsigned int *)&aHAwAwAwAwAwAwA[924] & ((v5 + 184) ^ 0x418) ^ 1));
  v15.i32[3] = *(_DWORD *)(v6 + 4 * ((aHAwAwAwAwAwAwA[928] & 1) == 0));
  *(int8x16_t *)&aHAwAwAwAwAwAwA[912] = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)&aHAwAwAwAwAwAwA[4], v15), (int8x16_t)vdupq_n_s32(0x41F5D8ACu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v14, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0x7CF94D10u))), vdupq_n_s32(0x3E7CA688u)), 1uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * v5) - 4))();
}

void sub_18CABC5DC()
{
  JUMPOUT(0x18CABC4FCLL);
}

uint64_t sub_18CABC5E8@<X0>(uint64_t a1@<X4>, _DWORD *a2@<X5>, int a3@<W8>)
{
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v3 = (a2[623] & 0x80000000) + ((a3 + 1689414326) & 0x9B4D97FD) - 1290167109;
  v4 = ((*a2 & 0x477AE7AA ^ 0x457847A9 | *a2 & 0x38851854) - 1) ^ 0xEA8B6B81;
  v5 = (-651567013 - (v4 | 0xD929E05B) + (v4 | 0x26D61FA4)) ^ 0xDE446DB1 | ((v3 & 0x8110A088 ^ 0x80E45460)
                                                                          + (v3 ^ 0x318A298)
                                                                          - ((v3 ^ 0x318A298) & 0x80010110)) ^ 0x31F4F4E8;
  a2[623] = a2[396] ^ *((_DWORD *)&STACK[0x15C8] + ((*a2 & 1) == 0)) ^ ((v5 - ((2 * v5) & 0xADF6EA2) - 2056276143) >> 1) ^ 0x1C7C5040;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((58 * (LODWORD(STACK[0x728]) > 0x26F)) ^ a3)) - 8))();
}

uint64_t sub_18CABC738@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  LODWORD(STACK[0x728]) = 0;
  v3 = LODWORD(STACK[0x728])++;
  *(_DWORD *)(v1 + 2536) = v3 + 73583858;
  v4 = (*(_DWORD *)aHAwAwAwAwAwAwA - 1809948821);
  v5 = 516615401 * (((~(v2 - 192) | 0x967625B7CF70BE42) + ((v2 - 192) | 0x6989DA48308F41BDLL)) ^ 0xE135523343EC478ELL);
  *(_QWORD *)(v2 - 160) = v5 + 3179136936u;
  *(_DWORD *)(v2 - 152) = (a1 - 185256850) ^ v5;
  *(_DWORD *)(v2 - 148) = v5 + a1 + 1249268378 + 66;
  *(_DWORD *)(v2 - 192) = v5 + 1;
  *(_DWORD *)(v2 - 188) = a1 + 1249268378 - v5;
  *(_DWORD *)(v2 - 168) = v5 ^ (a1 + 1249268378) ^ 0x28;
  *(_QWORD *)(v2 - 176) = v4 ^ v5;
  v6 = sub_18CA8D328(v2 - 192);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[*(int *)(v2 - 184)] - 12))(v6);
}

uint64_t sub_18CABCDEC()
{
  unsigned int v0;
  unsigned int v1;
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  _BYTE *v16;
  unint64_t v17;

  v7 = STACK[0x608];
  if (v1 >= v2)
    v8 = *(_DWORD *)aHAwAwAwAwAwAwA + 1;
  else
    v8 = v4;
  *(_DWORD *)aHAwAwAwAwAwAwA = v8;
  v9 = v0 ^ (v0 >> 11);
  v10 = (v5 ^ (v9 << 7)) - ((2 * (v5 ^ (v9 << 7))) & 0x59A72E00) + ((v3 - 217) ^ 0xACD392B3);
  v11 = ((v10 & 0x9D2C5680 ^ 0xDE003740)
       + (v10 & 0x992C5200 ^ 0x1FCC025)
       - ((v10 & 0x9D2C5680 ^ 0xDE003740) & 0x992C5200)) ^ v9;
  v12 = ((v11 << 15) ^ 0xA0B98000) - ((2 * ((v11 << 15) ^ 0xA0B98000)) & 0x2AB10000) + 358136438;
  v13 = ((((v12 & 0xEFC60000 ^ 0x82800000)
         + (v12 & 0x6E800000 ^ 0x6C0812E2)
         - ((v12 & 0xEFC60000 ^ 0x82800000) & 0x6E800000)) ^ 0xA7051BD9)
       - 1) ^ v11;
  v14 = v13 ^ (v13 >> 18) ^ 0xB341BA7C;
  v15 = STACK[0x640];
  v16 = (_BYTE *)(v7 + LODWORD(STACK[0x640]) - 1921022209 + ((v3 - 1741) | 0x254u));
  *v16 = (((v3 + 39) ^ 0xB3) + (v14 ^ 0x83) - ((2 * (v14 ^ 0x83)) & 0x26) + 76) ^ 0x1F;
  LODWORD(v16) = 1755343967
               * ((*(_DWORD *)(qword_1EE0605B8 + (int)(dword_1EE0607C0 & 0xC7090E2C)) ^ v16) & 0x7FFFFFFF);
  v17 = 1755343967 * (v16 ^ (v16 >> 16));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((13
                                          * (v15
                                           - ((byte_18CF28C10[v17 >> 24] ^ byte_18CF35520[v17 >> 24] ^ byte_18CF296B0[(v17 >> 24) + 5] ^ v17 ^ (79 * BYTE3(v17))) != ((((v3 + 39) ^ 0xB3) + (v14 ^ 0x83) - ((2 * (v14 ^ 0x83)) & 0x26) + 76) ^ 0x1F)) == 1921021612)) ^ (v3 - 217)))
                            - 8))();
}

uint64_t sub_18CABCF40()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((((v0 + 108) | 0x481) - 920) * (STACK[0x848] != 0)) ^ v0)) - 8))();
}

uint64_t sub_18CABCF74@<X0>(unint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(void);

  v5 = 3 * (a2 ^ 0x204u);
  v6 = ((unint64_t)&STACK[0xA44] ^ 0x7FBBFFFE7FEFFFFCLL)
     - 0x7FBBFFFE7FEFFFFCLL
     + ((2 * (_QWORD)&STACK[0xA44]) & 0xFF77FFFCFFDFFFF8);
  STACK[0x608] = ((v6 % 0x25) ^ 0xBDFFCEAF9FBFFFFFLL) + 2 * (v6 % 0x25) + v5 + 0x42003150603FFF96;
  v7 = STACK[0x8A0];
  STACK[0x678] = STACK[0x8F0];
  STACK[0x5D0] = v7;
  STACK[0x688] = (unint64_t)&STACK[0xBB0] + v7;
  STACK[0x5E0] = (unint64_t)&STACK[0xBB0] + v7 + 16;
  v8 = *(uint64_t (**)(void))(v4
                           + 8
                           * (int)((208
                                  * ((((_DWORD)v5 - 1487276188) & 0x58A60EED ^ ((_DWORD)v5 + 1672702539)) != 1672702987)) ^ v5));
  LODWORD(STACK[0x660]) = v3;
  STACK[0x680] = v2;
  STACK[0x640] = a1;
  return v8();
}

uint64_t sub_18CABD0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  LODWORD(STACK[0x668]) = a6;
  STACK[0x15D0] = 0x190E3877800688A8;
  LODWORD(STACK[0xA44]) = dword_1EE0569E8 + v9;
  v11 = *(unsigned int *)aHAwAwAwAwAwAwA;
  v12 = ((v10 - 192) ^ 0xED14979B4E69D6FELL) * v7;
  *(_DWORD *)(v10 - 180) = v6 - 2107019248 + v12;
  *(_DWORD *)(v10 - 188) = v12 ^ (v6 - 2107019248) ^ 0x1F;
  *(_DWORD *)(v10 - 184) = (v6 - 2107019306) ^ v12;
  *(_DWORD *)(v10 - 160) = v12 + v6 + 1123495836;
  *(_DWORD *)(v10 - 156) = v12;
  *(_QWORD *)(v10 - 176) = v11 - v12;
  *(_QWORD *)(v10 - 168) = v12 ^ v8;
  v13 = sub_18CBBB420(v10 - 192);
  return ((uint64_t (*)(uint64_t))qword_1E2538EC0[*(int *)(v10 - 192)])(v13);
}

uint64_t sub_18CABD16C()
{
  int v0;
  int v1;
  uint32_t v2;

  v1 = (v0 - 649) | 0xA0;
  STACK[0x678] = (unint64_t)malloc_type_malloc(STACK[0x608], 0xC5732911uLL);
  v2 = arc4random();
  *(_DWORD *)&aHAwAwAwAwAwAwA[4] = v2 + 1465998909 - ((v2 << (((v0 + 119) | 0xA0) ^ 0xE5)) & 0xAEC2BC7A);
  *(_DWORD *)&aHAwAwAwAwAwAwA[8] = ((1812433253
                                   * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))) ^ 0xBD73FDBF)
                                 + (((*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))
                                   * (v1 ^ 0x580F162E)) & 0x7AE7FB7E)
                                 - 1712496513
                                 - ((2
                                   * (((1812433253
                                      * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))) ^ 0xBD73FDBF)
                                    + (((*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0x57615E3C ^ (*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30))
                                      * (v1 ^ 0x580F162E)) & 0x7AE7FB7E))
                                   - 2062023548) & 0xAEC2BC7A);
  return ((uint64_t (*)(void))qword_1E2538EC0[v1])();
}

void sub_18CABD294()
{
  JUMPOUT(0x18CABD230);
}

uint64_t sub_18CABD2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int32x4_t v16;
  int32x4_t v17;
  int8x16_t v18;

  v8 = (int8x16_t)vld1q_dup_f32((const float *)&aHAwAwAwAwAwAwA[4]);
  v9.i64[0] = 0x8000000080000000;
  v9.i64[1] = 0x8000000080000000;
  v10.i64[0] = 0x1000000010;
  v10.i64[1] = 0x1000000010;
  v7.i64[0] = *(_QWORD *)&aHAwAwAwAwAwAwA[8];
  v7.i32[2] = *(_DWORD *)&aHAwAwAwAwAwAwA[16];
  v11 = vextq_s8(v8, v7, 0xCuLL);
  v12 = v7;
  v12.i32[3] = *(_DWORD *)&aHAwAwAwAwAwAwA[20];
  v13 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v11, v9), vdupq_n_s32(0xB3EA3995)), (int8x16_t)vdupq_n_s32(0x4C45C348u)), vdupq_n_s32(0x1FB0B5D9u));
  v14 = veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0xD3615D60));
  v15 = (int8x16_t)vsubq_s32((int32x4_t)vandq_s8(v14, (int8x16_t)vdupq_n_s32(0x3B2870EEu)), (int32x4_t)vorrq_s8(v14, (int8x16_t)vdupq_n_s32(0xBB2870EF)));
  v16 = (int32x4_t)veorq_s8(vorrq_s8(vandq_s8(v13, v9), v15), (int8x16_t)vdupq_n_s32(0x40D78C4Du));
  v17 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v16, (int8x16_t)vdupq_n_s32(0x42618E98u)), vandq_s8(v15, v10));
  v18.i32[0] = *((_DWORD *)&STACK[0x15D0] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[8] & 1));
  v18.i32[1] = *((_DWORD *)&STACK[0x15D0] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[12] & 1));
  v18.i32[2] = *((_DWORD *)&STACK[0x15D0] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[16] & 1));
  v18.i32[3] = *((_DWORD *)&STACK[0x15D0] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[20] & 1));
  *(int8x16_t *)&aHAwAwAwAwAwAwA[4] = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)&aHAwAwAwAwAwAwA[4 * (v6 - 925) - 1672], v18), (int8x16_t)vdupq_n_s32(0xE1364FEC)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v16, vaddq_s32(v17, v17)), vdupq_n_s32(0xC2618E89)), 1uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * (v6 - 1074)) - 4))();
}

void sub_18CABDD60()
{
  JUMPOUT(0x18CABDC54);
}

uint64_t sub_18CABDD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;

  v12 = (unsigned int *)(a7 + 4 * (v9 + a8));
  v13 = (((v10 & 0x80000000) - 1276495467) ^ 0x4C45C348) + ((166 * (v8 ^ 0x335)) ^ 0x1FB0B6E7);
  v14 = v9 + 1;
  v15 = *(_DWORD *)(a7 + 4 * (v14 + a8));
  v16 = ((v15 & 0x7FFFFFFE ^ 0xD3615D60) & 0x3B2870EE) - (v15 & 0x7FFFFFFE ^ 0xD3615D60 | 0xBB2870EF);
  *v12 = v12[397] ^ *((_DWORD *)&STACK[0x15D0] + ((v15 & 1) == 0)) ^ ((((v16 | v13 & 0x80000000) ^ 0x40D78C4D)
                                                                     - 2
                                                                     * (((v16 | v13 & 0x80000000) ^ 0x40D78C4D) & 0x42618E98 ^ v16 & 0x10)
                                                                     - 1033793911) >> 1) ^ 0xE1364FEC;
  return ((uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * ((v14 == v11 + 3) | v8)) - 4))();
}

uint64_t sub_18CABDE68@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  uint64_t v2;
  int8x16_t v3;
  const float *v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int32x4_t v11;
  int8x16_t v12;
  int32x4_t v13;
  int32x4_t v14;
  int8x16_t v15;

  v4 = (const float *)&aHAwAwAwAwAwAwA[912];
  v5 = (int8x16_t)vld1q_dup_f32(v4);
  v6.i64[0] = 0x8000000080000000;
  v6.i64[1] = 0x8000000080000000;
  v7.i64[0] = 0x1200000012;
  v7.i64[1] = 0x1200000012;
  v3.i64[0] = *(_QWORD *)&aHAwAwAwAwAwAwA[916];
  v3.i32[2] = *(_DWORD *)&aHAwAwAwAwAwAwA[924];
  v8 = vextq_s8(v5, v3, 0xCuLL);
  v9 = v3;
  v9.i32[3] = *(_DWORD *)&aHAwAwAwAwAwAwA[928];
  v10 = vandq_s8(v8, v6);
  v11 = (int32x4_t)veorq_s8(vandq_s8(v9, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x5765487Au));
  v12 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v11, v11), (int8x16_t)vdupq_n_s32(0x285684A0u)), v11), vdupq_n_s32(0x6BD4BDAFu));
  v13 = (int32x4_t)veorq_s8(vorrq_s8(v12, v10), (int8x16_t)vdupq_n_s32(0x6BD0ABE9u));
  v14 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v13, (int8x16_t)vdupq_n_s32(0x50A3B87Au)), vandq_s8(v12, v7));
  v15.i32[0] = *(_DWORD *)(v2 + 4 * ((aHAwAwAwAwAwAwA[916] & 1) == 0));
  v15.i32[1] = *(_DWORD *)(v2 + 4 * ((aHAwAwAwAwAwAwA[920] & 1) == 0));
  v15.i32[2] = *(_DWORD *)(v2 + 4 * (*(_DWORD *)&aHAwAwAwAwAwAwA[924] & (7 * (a2 ^ 0x3CCu) - 1693) ^ 1));
  v15.i32[3] = *(_DWORD *)(v2 + 4 * (~*(_DWORD *)&aHAwAwAwAwAwAwA[928] & 1));
  *(int8x16_t *)&aHAwAwAwAwAwAwA[912] = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)&aHAwAwAwAwAwAwA[4], v15), (int8x16_t)vdupq_n_s32(0xA857549C)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v13, vaddq_s32(v14, v14)), vdupq_n_s32(0x50A3B868u)), 1uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * a2) - 4))();
}

void sub_18CABDFCC()
{
  JUMPOUT(0x18CABDEF8);
}

uint64_t sub_18CABDFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _DWORD *a7)
{
  int v7;
  unsigned int v8;

  v8 = ((((((v7 - 658) | 0x2C1) ^ 0x279A7AE3) & *a7 ^ 0xA51A2003) - 1) | *a7 & 0x586583D0) ^ 0xF27B7E3E | (((a7[623] & 0x80000000 | 0x25264C0A) ^ 0xB4D138F5) + 1804349572) ^ 0xFD83A583;
  a7[623] = a7[396] ^ *((_DWORD *)&STACK[0x15D0] + ((*a7 & 1) == 0)) ^ ((v8 - ((2 * v8) & 0x27C2A2A8) - 1813950124) >> 1) ^ 0xC9F62002;
  return ((uint64_t (*)(void))(*(_QWORD *)(a6 + 8 * ((397 * (LODWORD(STACK[0xA44]) > 0x26F)) ^ v7)) - 4))();
}

uint64_t sub_18CABE0D0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  LODWORD(STACK[0xA44]) = 0;
  v4 = LODWORD(STACK[0xA44])++;
  *(_DWORD *)(v2 + 2536) = v4 + 73583858;
  v5 = (*(_DWORD *)(v1 + 2544) - 1240827427);
  v6 = 1606104089
     * ((((v3 - 192) ^ 0x374E2F97FAEFA969)
       + 0x5A6D22DEDA18CAA1
       - 2 * (((v3 - 192) ^ 0x374E2F97FAEFA969) & 0x5A6D22DEDA18CAA1)) ^ 0xAF9DF67D55E021F6);
  *(_DWORD *)(v3 - 164) = -1231242123
                        - 1606104089
                        * ((((v3 - 192) ^ 0xFAEFA969) - 635909471 - 2 * (((v3 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6)
                        + v0
                        + 47;
  *(_QWORD *)(v3 - 192) = v5 + v6;
  *(_DWORD *)(v3 - 180) = 1606104089
                        * ((((v3 - 192) ^ 0xFAEFA969) - 635909471 - 2 * (((v3 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6);
  *(_DWORD *)(v3 - 176) = (v0 - 1982105645) ^ (1606104089
                                             * ((((v3 - 192) ^ 0xFAEFA969)
                                               - 635909471
                                               - 2 * (((v3 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6));
  *(_DWORD *)(v3 - 172) = ((v0 - 1982105739) ^ 0x53)
                        + 1606104089
                        * ((((v3 - 192) ^ 0xFAEFA969) - 635909471 - 2 * (((v3 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6);
  *(_DWORD *)(v3 - 168) = (v0 - 1982105739) ^ (1606104089
                                             * ((((v3 - 192) ^ 0xFAEFA969)
                                               - 635909471
                                               - 2 * (((v3 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6));
  *(_QWORD *)(v3 - 160) = 3748258330u - v6;
  v7 = sub_18CB18D94(v3 - 192);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[*(int *)(v3 - 184)] - 8))(v7);
}

uint64_t sub_18CABE1E4()
{
  unsigned int v0;
  unsigned int v1;
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;

  v8 = STACK[0x640];
  v9 = STACK[0x668];
  v10 = (v3 - 1740) | 0x22C;
  if (v1 >= v2)
    v11 = *(_DWORD *)(v4 + 2544) + 1;
  else
    v11 = v5;
  *(_DWORD *)(v4 + 2544) = v11;
  v12 = v0 ^ (v0 >> 11);
  v13 = ((v6 ^ (v12 << 7)) - ((2 * (v6 ^ (v12 << 7))) & 0x7F6FD500) + v10 - 1078466407) & 0x9D2C5680 ^ 0x6520CE20;
  v14 = (((2 * v13) & 0x8A409100) - v13 - 1159882887) ^ v12;
  v15 = ((v14 << 15) ^ 0x54E78000) - ((2 * ((v14 << 15) ^ 0x54E78000)) & 0x64650000) - 1305282673;
  v16 = (((v15 & 0xA0020000 ^ 0x30184657) - 1) & 0xB0024406 | v15 & 0x4FC40000) ^ v14;
  v17 = (v16 ^ (v16 >> 18) ^ 0x87B0CC25) >> (((((v3 + 52) | 0x2C) + 78) ^ 0x6E) - 21);
  LOBYTE(v17) = (v17 - ((2 * v17) & 0xFA) - 3) ^ 0x7E;
  *(_BYTE *)(v8 + (v9 - 296018228)) = v17;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((1159
                                * (v9
                                 - ((byte_18CF268A0[(v9 - 296018228) & 0xFLL] ^ (105 * ((v9 - 52) & 0xF)) ^ byte_18CF28E30[(v9 - 296018228) & 0xFLL] ^ byte_18CF2C140[(v9 - 296018228) & 0xFLL]) != v17) == 296018227)) ^ v10)))();
}

uint64_t sub_18CABE318()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v1 ^ ((8 * (v0 == 0x6DFFE36FDEFEFF6ELL)) | (16 * (v0 == 0x6DFFE36FDEFEFF6ELL)))))
                            - 4))();
}

uint64_t sub_18CABE3B8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unsigned int v8;
  unint64_t v9;

  v7 = (_BYTE *)(a1 + v4 + v5);
  v8 = ((*(_DWORD *)(qword_1EE0605B8 + (dword_1EE0607C0 & v2)) ^ v7) & ((v3 - 2114222555) ^ 0x7FFFFFEB))
     * a2;
  v9 = (v8 ^ HIWORD(v8)) * a2;
  *v7 = byte_18CF28D20[(v9 >> 24) + 3] ^ byte_18CF4CB30[v9 >> 24] ^ byte_18CF3A4C0[(v9 >> 24) + 2] ^ v9 ^ (13 * BYTE3(v9));
  LODWORD(STACK[0x6E0]) = 0;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6
                                                     + 8
                                                     * ((677
                                                       * ((unsigned __int16)((v4 + 1363 - ((2 * v4 + 292) & 0x982)) ^ (((((v3 - 31195) ^ 0x19D) + 824) ^ 0x59B) + 870)) > 1u)) ^ (v3 - 2114222555) ^ 0x19D))
                                         - ((((v3 - 2114222555) ^ 0x19D) + 824) | 0x20Cu)
                                         + 1729))(0);
}

uint64_t sub_18CABE460@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _BOOL4 v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  int v16;

  v12 = v4 < v5;
  v13 = v7 + a1 - 0x6D91757148A74809;
  v14 = ((*(_DWORD *)(qword_1EE0605B8 + (dword_1EE0607C0 & v2)) ^ v13) & 0x7FFFFFFF)
      * (((v10 + 335826396) | 0x6A002888) ^ 0x16A415B0);
  v15 = (v14 ^ HIWORD(v14)) * a2;
  v16 = byte_18CF4CB30[v15 >> 24] ^ *(unsigned __int8 *)(v6 + v9 - 0x9B3D38648DC957FLL) ^ byte_18CF28D20[(v15 >> 24) + 3] ^ byte_18CF3A4C0[(v15 >> 24) + 2] ^ v15 ^ (13 * (v15 >> 24));
  if (v12 == v8 - 0x5461A04BE8E9D19CLL < v3)
    v12 = v8 - 0x5461A04BE8E9D19CLL < v4;
  *(_BYTE *)v13 = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((8 * !v12) | (16 * !v12)) ^ v10)) - 4))();
}

uint64_t sub_18CABE590()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 ^ (982
                                     * ((v1 | ((unint64_t)(v1 < 0x1D8746DB) << 32)) != 495404763)))))();
}

uint64_t sub_18CABE5E0@<X0>(_BYTE *a1@<X0>, unint64_t a2@<X8>)
{
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  _BOOL4 v9;

  v6 = v3 ^ 0x747u;
  v7 = v6 + a2 + v4 - 2426;
  v8 = v6 - 1359;
  v9 = v2 < v7;
  *a1 = (((v3 ^ 0x47) - 14) & 0xED) + (*(_BYTE *)STACK[0x9C0] ^ 0x6E) + ((2 * *(_BYTE *)STACK[0x9C0]) & 0xDD) + 81;
  if (v9 == a2 > 0x139B7C89)
    v9 = v2 > 0x139B7C89;
  return (*(uint64_t (**)(void))(v5 + 8 * ((244 * !v9) ^ v8)))();
}

void sub_18CABE6E4()
{
  JUMPOUT(0x18CABE678);
}

uint64_t sub_18CABE6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * ((966 * (*(_DWORD *)(v6 + 2004) - v9 == v8)) ^ v7))
                                                                                                - (v7 ^ 0x721u)
                                                                                                + 1737))(a1, a2, a3, a4, a5, a6, 4294925247);
}

uint64_t sub_18CABE72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 + 8 * (v8 ^ (2018 * (v7 != 0x68C974A61C1FE532))))
                                                                                               - v6
                                                                                               + 1737))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_18CABE7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X8>)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _BOOL4 v15;

  v15 = v7 < a7;
  *(_BYTE *)(v9 + v11 - 0x6B0AC8D09425B381) = *(_BYTE *)(v8 + v12 - 0x4470EF01A777939CLL);
  if (v15 == v10 - 0x68ABFDBACAD21090 < a7)
    v15 = v10 - 0x68ABFDBACAD21090 < v7;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v14 + 8 * ((v15 * ((v13 + 1249) ^ 0x12F)) ^ v13))
                                                                                               - 4))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_18CABE838@<X0>(unsigned int a1@<W8>)
{
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1178 * (v1 <= (char)(((a1 - 89) & 0xEF) + 50))) ^ a1))
                            - (a1 ^ 0x23ELL)))();
}

uint64_t sub_18CABE898(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (a4 ^ (1983 * ((unint64_t)&STACK[0xBB0] + v4 - 7 < 0x10))))
                            - 4))();
}

uint64_t sub_18CABE938(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v7 + ((a3 + 865) ^ 0x8D0F8C49FED7E70ALL) + a5) = (*(_BYTE *)(a4 + v6 - 0x753E1B265931C3E3) ^ 0xAA)
                                                            + ((2 * *(_BYTE *)(a4 + v6 - 0x753E1B265931C3E3)) & 0x55)
                                                            + 126;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((1865 * (a6 + 1 != a2 + 48)) ^ a3)) - 4))();
}

uint64_t sub_18CABE9B8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;

  v6 = *(int8x16_t *)(v1 + v3);
  v7.i64[0] = 0xAAAAAAAAAAAAAAAALL;
  v7.i64[1] = 0xAAAAAAAAAAAAAAAALL;
  v8 = veorq_s8(v6, v7);
  v9.i64[0] = 0x5454545454545454;
  v9.i64[1] = 0x5454545454545454;
  v10 = vandq_s8(vaddq_s8(v6, v6), v9);
  v9.i64[0] = 0x7E7E7E7E7E7E7E7ELL;
  v9.i64[1] = 0x7E7E7E7E7E7E7E7ELL;
  *(int8x16_t *)(v2 + v3) = vaddq_s8(vaddq_s8(v8, v9), v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((((v4 + 865) ^ 0x6DDLL) + v3 != 48) * a1) ^ v4))
                            - 4))();
}

uint64_t sub_18CABEA0C()
{
  int v0;
  int v1;
  unint64_t v2;
  char v3;
  char v4;

  v2 = STACK[0x680] + (v0 - 469583105);
  v3 = ((*(_BYTE *)(STACK[0xA30] + 8) ^ 0x33 ^ *(_BYTE *)v2)
      - ((((((v1 + 14) & 0xEF) + 54) | 0x4A) - 87) & (2 * (*(_BYTE *)(STACK[0xA30] + 8) ^ 0x33 ^ *(_BYTE *)v2)))
      - 6) ^ 0xFA | *(_BYTE *)(STACK[0xA30] + 9) ^ 0x33 ^ *(_BYTE *)(v2 + 1);
  v4 = (v3 - ((2 * v3) & 0xF4) - 6) ^ 0xFA | *(_BYTE *)(STACK[0xA30] + 10) ^ 0x33 ^ *(_BYTE *)(v2 + 2);
  LOBYTE(v2) = (v4 - ((2 * v4) & 0xF4) - 6) ^ 0xFA | *(_BYTE *)(STACK[0xA30] + 11) ^ 0x33 ^ *(_BYTE *)(v2 + 3);
  LODWORD(v2) = (v2 - ((2 * v2) & 0xF4)) != 0;
  return ((uint64_t (*)(uint64_t, uint64_t))(qword_1E2538EC0[(int)((v2 | (32 * v2)) ^ (v1 - 442823410) & 0x1A64EFEF)]
                                                   - 12))(3825384143, 18);
}

uint64_t sub_18CABEB7C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  char v8;
  char v9;
  int v10;
  uint64_t v11;
  int v12;
  _BOOL4 v13;
  unsigned int v14;
  int v15;
  _BOOL4 v16;

  v12 = a5 - 653;
  v13 = v5 > v7;
  v14 = (a2 + 29);
  v15 = v13 ^ (v14 < ((v12 + v8) ^ v9));
  v16 = v14 < v6;
  if (!v15)
    v13 = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((v13 * v10) ^ v12)) - 4))();
}

void sub_18CABEBD0()
{
  JUMPOUT(0x18CABEADCLL);
}

uint64_t sub_18CABEBF0()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = ((((v0 - 1099) | 0x16) - 406) & STACK[0x890]) == 14 * (v0 ^ 0x678) - 714;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v2 | (4 * v2)) ^ v0)) - 8))();
}

uint64_t sub_18CABEC38()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v0 == ((v1 ^ 0x8B) - 64);
  return (*(uint64_t (**)(unint64_t))(v2 + 8 * (((2 * v3) | (4 * v3)) ^ v1)))(STACK[0x680] + LODWORD(STACK[0x660]) - 546355592 + (v1 ^ 0x1F6u) - 828);
}

uint64_t sub_18CABECA8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v6 = ((16 * v3) ^ 0x67EF7507) + 1807443953 + ((v3 << (v2 ^ 0x39)) & 0x33DEAE40 ^ 0x30000440u);
  v7 = 0xFFFFFFFF00000000;
  if (v6 >= 0x69AABF08)
    v7 = 0;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((1510 * (v1 + v0 + v4 + v6 - v7 - 1772797704 > 0xF)) ^ v2)))(0x7D488786B62193C1);
}

void sub_18CABED84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int8x16_t *a5)
{
  int v5;
  int8x16_t *v6;
  int8x16_t v7;
  int8x16_t v8;

  v7.i64[0] = 0xB8B8B8B8B8B8B8B8;
  v7.i64[1] = 0xB8B8B8B8B8B8B8B8;
  v8.i64[0] = 0x7070707070707070;
  v8.i64[1] = 0x7070707070707070;
  a5[3] = vaddq_s8(vaddq_s8(veorq_s8(*v6, v7), v8), vandq_s8(vaddq_s8(*v6, *v6), v8));
  LODWORD(STACK[0x72C]) = v5 + 64;
  JUMPOUT(0x18CABF0C4);
}

uint64_t sub_18CABEDC0()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x72C]) = 1164808565;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_BYTE *)STACK[0x680] != 1) * (((v0 - 1097523000) & 0x416ADDBD) - 71)) ^ v0))
                            - (v0 - 378)
                            + 148))();
}

void sub_18CABEE20()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE *v8;

  v4 = (_BYTE *)STACK[0x950];
  v5 = v3 + (v2 - 546355592);
  v6 = ((32 * v1) & 0x5AFAFA0 ^ 0x4000400) + ((16 * v1) ^ 0xFCD7F5FF) + (((v0 + 1520) | 0x41) ^ 0xDCB88A50);
  v7 = 0xFFFFFFFF00000000;
  if (v6 >= 0x4390646C)
    v7 = 0;
  v8 = (_BYTE *)(v7 - v6 + v5 + 1133536364);
  *v4 = *v8;
  v4[1] = v8[1];
  v4[2] = v8[2];
  v4[3] = v8[3];
  v4[4] = v8[4];
  v4[5] = v8[5];
  v4[6] = v8[6];
  v4[7] = v8[7];
  v4[8] = v8[8];
  v4[9] = v8[9];
  v4[10] = v8[10];
  v4[11] = v8[11];
  v4[12] = v8[12];
  v4[13] = v8[13];
  v4[14] = v8[14];
  JUMPOUT(0x18CABF0BCLL);
}

uint64_t sub_18CABEF1C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v7 = ((v4 << 6) & 0x67F05D80 ^ 0x60000880) + ((32 * v4) ^ 0xCFF86A8F) + (a2 ^ 0x320F7B51);
  v8 = 0xFFFFFFFF00000000;
  if (v7 >= 0x2E07ABBF)
    v8 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((58 * (v3 + v2 + v7 + v5 - v8 - 772254655 < 0x10)) | a2)) - 12))();
}

void sub_18CABEFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int8x16_t *a5)
{
  int8x16_t *v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;

  v6.i64[0] = 0xFCFCFCFCFCFCFCFCLL;
  v6.i64[1] = 0xFCFCFCFCFCFCFCFCLL;
  v7.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v7.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v8 = vandq_s8(vaddq_s8(*v5, *v5), v7);
  v7.i64[0] = 0x2C2C2C2C2C2C2C2CLL;
  v7.i64[1] = 0x2C2C2C2C2C2C2C2CLL;
  a5[3] = vaddq_s8(vaddq_s8(veorq_s8(*v5, v6), v7), v8);
  JUMPOUT(0x18CABF028);
}

uint64_t sub_18CABF0D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v7 + v2 - 0x2C045ADCA4E38B52) = (*(_BYTE *)(v1 + v4 - 0x4587AED426D85F9BLL) ^ (v3 + 124))
                                             + ((2 * *(_BYTE *)(v1 + v4 - 0x4587AED426D85F9BLL)) & 0x70)
                                             + 112;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 + 1 == v6 + 16) * v5) ^ v3)))();
}

void sub_18CABF148()
{
  JUMPOUT(0x18CABEDB4);
}

uint64_t sub_18CABF150()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((978
                                * ((LODWORD(STACK[0x82C]) | ((unint64_t)(LODWORD(STACK[0x82C]) < v0 + (v1 ^ 0x651) - 1741) << 32)) != 458470030)) ^ v1)))();
}

uint64_t sub_18CABF1A0()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v2 < v1;
  *(_BYTE *)STACK[0x950] = 0;
  if (v4 == v1 > 0x46D468E7)
    v4 = v2 > 0x46D468E7;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1618 * v4) ^ (v0 - 1585))))();
}

void sub_18CABF21C()
{
  JUMPOUT(0x18CABF1DCLL);
}

uint64_t sub_18CABF224@<X0>(int a1@<W6>, unsigned int a2@<W8>)
{
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  BOOL v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  unint64_t v44;

  v3 = LODWORD(STACK[0x380]) ^ LODWORD(STACK[0x680]);
  v4 = LODWORD(STACK[0x37C]) ^ LODWORD(STACK[0x3C4]);
  v5 = STACK[0x5C0];
  if ((STACK[0x5C0] & 1) != 0)
    v6 = STACK[0x540];
  else
    v6 = STACK[0x44C];
  if ((v5 & 1) != 0)
    v7 = STACK[0x510];
  else
    v7 = STACK[0x420];
  if ((v5 & 1) != 0)
    v8 = STACK[0x408];
  else
    v8 = STACK[0x418];
  if ((v5 & 1) != 0)
    v9 = STACK[0x410];
  else
    v9 = STACK[0x404];
  v10 = STACK[0x338];
  if ((v5 & 1) != 0)
    v10 = STACK[0x328];
  v11 = STACK[0x340];
  if ((v5 & 1) == 0)
    v11 = STACK[0x300];
  v12 = STACK[0x36C];
  v13 = STACK[0x2E8];
  if ((v5 & 1) != 0)
  {
    v12 = STACK[0x2E8];
    v13 = STACK[0x330];
  }
  v14 = (STACK[0x5C0] & 2) == 0;
  v15 = STACK[0x3F0];
  if ((STACK[0x5C0] & 2) == 0)
    v15 = STACK[0x3EC];
  LODWORD(STACK[0x2E8]) = v15;
  v16 = STACK[0x3E8];
  if (!v14)
    v16 = STACK[0x3E4];
  LODWORD(STACK[0x418]) = v16;
  v17 = STACK[0x3A8];
  if (!v14)
    v17 = STACK[0x39C];
  LODWORD(STACK[0x540]) = v17;
  v18 = STACK[0x3DC];
  if (!v14)
    v18 = STACK[0x3D8];
  LODWORD(STACK[0x410]) = v18;
  v19 = STACK[0x3D4];
  if (v14)
    v19 = STACK[0x3C8];
  LODWORD(STACK[0x3D8]) = v19;
  v20 = STACK[0x374];
  if (v14)
    v21 = STACK[0x374];
  else
    v21 = v12;
  LODWORD(STACK[0x298]) = v21;
  if (!v14)
    v12 = v20;
  LODWORD(STACK[0x338]) = v12;
  if (v14)
    v22 = v10;
  else
    v22 = v11;
  LODWORD(STACK[0x3D4]) = v22;
  if (v14)
    v10 = v11;
  LODWORD(STACK[0x408]) = v10;
  v23 = v3 ^ 0x61627385;
  LODWORD(STACK[0x36C]) = v6;
  LODWORD(STACK[0x330]) = v7;
  if (v14)
    v24 = v7;
  else
    v24 = v6;
  LODWORD(STACK[0x39C]) = v24;
  v25 = STACK[0x640];
  if (!v14)
    v25 = STACK[0x608];
  LODWORD(STACK[0x420]) = v25;
  LODWORD(STACK[0x404]) = v8;
  LODWORD(STACK[0x3F0]) = v9;
  if (v14)
    v26 = v9;
  else
    v26 = v8;
  LODWORD(STACK[0x3A8]) = v26;
  v27 = STACK[0x3C0];
  LODWORD(STACK[0x3E8]) = v13;
  if (!v14)
    v27 = v13;
  LODWORD(STACK[0x3C8]) = v27;
  v28 = STACK[0x580];
  if ((STACK[0x580] & 1) != 0)
    v23 = STACK[0x254];
  LODWORD(STACK[0x44C]) = v23;
  v29 = v4 ^ 0xA5798682;
  if ((v28 & 1) == 0)
    v29 = STACK[0x258];
  v30 = STACK[0x284];
  if ((v28 & 1) != 0)
    v30 = STACK[0x288];
  v31 = STACK[0x260];
  if ((v28 & 1) != 0)
    v32 = STACK[0x27C];
  else
    v32 = STACK[0x260];
  v33 = STACK[0x25C];
  if ((v28 & 1) == 0)
  {
    v31 = STACK[0x25C];
    v33 = STACK[0x268];
  }
  v34 = STACK[0x3AC];
  if ((v28 & 1) == 0)
    v34 = STACK[0x28C];
  v35 = (v28 & 2) == 0;
  if ((v28 & 2) != 0)
    v29 = STACK[0x2F0];
  LODWORD(STACK[0x28C]) = v29;
  v36 = STACK[0x264];
  if (v35)
    v37 = STACK[0x264];
  else
    v37 = v34;
  LODWORD(STACK[0x284]) = v37;
  if (v35)
    v38 = v34;
  else
    v38 = v36;
  LODWORD(STACK[0x288]) = v38;
  v39 = STACK[0x394];
  if (v35)
    v39 = STACK[0x280];
  LODWORD(STACK[0x280]) = v39;
  v40 = STACK[0x278];
  if (v35)
    v40 = STACK[0x274];
  LODWORD(STACK[0x340]) = v40;
  v41 = STACK[0x5B0];
  LODWORD(STACK[0x300]) = v30;
  if (v35)
    v41 = v30;
  LODWORD(STACK[0x27C]) = v41;
  LODWORD(STACK[0x3DC]) = v32;
  LODWORD(STACK[0x380]) = v33;
  if (v35)
    v42 = v32;
  else
    v42 = v33;
  LODWORD(STACK[0x274]) = v42;
  v43 = STACK[0x398];
  LODWORD(STACK[0x3C4]) = v31;
  if (v35)
    v43 = v31;
  LODWORD(STACK[0x278]) = v43;
  v44 = a2 - 1072447216 + ((unint64_t)(a2 < v2) << 32) + 1300;
  *(_QWORD *)(STACK[0xB50] + 8 * v44) = *(_QWORD *)(STACK[0xB38] + 8 * v44) ^ 0x9696969696969696;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(63 * (a2 - 1072445915 > 1)) ^ a1] - 12))();
}

void sub_18CABFB54()
{
  JUMPOUT(0x18CABF4A4);
}

uint64_t sub_18CABFB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unint64_t v39;
  unsigned int v40;
  unsigned int v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  char v59;
  char v60;
  BOOL v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  BOOL v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  char v77;
  char v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unint64_t v83;
  int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  int v96;
  int v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  _BOOL4 v109;
  unint64_t v110;
  int v111;

  v8 = (a4 & 0x1B ^ 0x98 | 0x4C) - (a4 & 0x1B ^ 0x98 | 0xB3) - 77;
  v9 = ((((a4 ^ 0xE1A5DB7216E45892) >> (v8 ^ 0xCCu))
       - ((2 * ((a4 ^ 0xE1A5DB7216E45892) >> (v8 ^ 0xCCu))) & 0x53CD490A0C583730)
       + 0x29E6A485062C1B98) ^ 0x29E6A485062C1B98) >> (v8 ^ 0xD7u);
  v10 = (a4 ^ 0xE1A5DB7216E45892)
      + (v9 ^ 0xE48AB0201010888ELL)
      - ((2 * v9) & 0x36EA9FBFDFDEEEE2)
      + 0x1B754FDFEFEF7772;
  v11 = ((2 * v10) & 0xF9FFFFBFABF5F9BELL)
      + (v10 ^ 0x7CFFFFDFD5FAFCDFLL)
      + (((((2 * v10) & 0xF9FFFFBFABF5F9BELL) + (v10 ^ 0x7CFFFFDFD5FAFCDFLL) - 0x7CFFFFDFD5FAFCDFLL) >> 14) ^ 0x44240A0A44540208)
      - (((((2 * v10) & 0xF9FFFFBFABF5F9BELL) + (v10 ^ 0x7CFFFFDFD5FAFCDFLL) - 0x7CFFFFDFD5FAFCDFLL) >> 13) & 0x7EBEB7757FBEELL);
  v12 = v11
      + (((v11 + 0x3EDBF615E5B10119) >> 6) ^ 0x4A0006800D283808)
      - (((v11 + 0x3EDBF615E5B10119) >> 5) & 0x3FFF2FFE5AF8FEELL)
      + 2;
  v13 = v12 - ((2 * v12 + 0x29B7DF2BB111921ELL) & 0x217DE5309423B2DCLL) - 0x7A651DD1DD655D83;
  v14 = ((2 * ((v13 ^ 0x90BEF2984A11D96ELL) + 0x301F1AB817992D55)) & 0x5EF6298FFB6EF9F6)
      + (((v13 ^ 0x90BEF2984A11D96ELL) + 0x301F1AB817992D55) ^ 0x2F7B14C7FDB77CFBLL);
  v15 = v14
      + (((v14 - 0x2F7B14C7FDB77CFBLL) >> 24) ^ 0x11404104E1048D00)
      - (((v14 - 0x2F7B14C7FDB77CFBLL) >> 23) & 0x1F63DF6E5FELL);
  v16 = v15
      + (((v15 - 0x40BB55CCDEBC09FBLL) >> 14) ^ 0x4002200800440112)
      - (((v15 - 0x40BB55CCDEBC09FBLL) >> 13) & 0x3BFEFFF77FDDALL);
  v17 = v16
      + (((v16 + 0x7F428A2B20FFF4F3) >> 6) ^ 0xAFF92D7FFFEFFFBFLL)
      + (((v16 + 0x7F428A2B20FFF4F3) >> 5) & 0x7F25AFFFFDFFF7ELL)
      + 2;
  v18 = v17 - ((2 * v17 - 0x616D46A9BDE0159CLL) & 0xEAE86454B4804144) + 0x44BD8ED57B5015D4;
  v19 = ((2 * ((v18 ^ 0x7574322A5A4020A2) - 0x5C4C23E8A21DDE13)) & 0xEF1FADDFBC76EDEALL)
      + (((v18 ^ 0x7574322A5A4020A2) - 0x5C4C23E8A21DDE13) ^ 0xF78FD6EFDE3B76F5);
  v20 = (((v19 + 0x870291021C4890BLL) >> 27) ^ 0x5EF9EDF7DED21F3ELL)
      + v19
      + (((v19 + 0x870291021C4890BLL) >> 26) & 0x2FBDA43E7CLL);
  v21 = (((v20 - 0x5689C4E7BD0D9633) >> 12) ^ 0xDB7FBD9FFFF7FADBLL)
      + v20
      + (((v20 - 0x5689C4E7BD0D9633) >> 11) & 0x1F7B3FFFEFF5B6);
  v22 = v21
      + (((v21 - 0x32098287BD05910ELL) >> 2) ^ 0xE262022332402342)
      - (((v21 - 0x32098287BD05910ELL) >> 1) & 0x3B3BFBB99B7FB97ALL);
  v23 = v22 + 1 - ((2 * (v22 + 1) + 561289054) & 0x79EDDF64) - 844022943;
  v24 = v22
      + 1
      + (((v22 - 0xE6FFD72F198802) >> 30) ^ 0xC6008210021B2203)
      - (((v22 - 0xE6FFD72F198802) >> 29) & 0x7FBC9BBF8);
  v25 = v24
      + (((v24 + 0x39187E18CECB55FALL) >> 12) ^ 0x2824807404040908)
      - (((v24 + 0x39187E18CECB55FALL) >> 11) & 0x16FF17F7F7EDEELL);
  v26 = v25
      + (((v25 + 0x10F3FDA4CAC74CF2) >> 7) ^ 0x2B4406B408010240)
      - (((v25 + 0x10F3FDA4CAC74CF2) >> 6) & 0x177F297EFFDFB7ELL)
      + 3;
  v27 = v26 - ((2 * v26 + 0x4B5FEDE1858C955ELL) & 0x7A50F41BFA2E2E8CLL) + 0x22D870FEBFDD61F5;
  v28 = ((2 * ((v27 ^ 0x3D287A0DFD171746) + 0x3DEAA251E4C860FCLL)) & 0x92FEF7FEB5FBD7FCLL)
      + (((v27 ^ 0x3D287A0DFD171746) + 0x3DEAA251E4C860FCLL) ^ 0xC97F7BFF5AFDEBFELL);
  v29 = (((v28 + 0x36808400A5021402) >> 31) ^ 0xD4FDFFDFFE7FFFDELL)
      + v28
      + (((v28 + 0x36808400A5021402) >> 30) & 0x3FCFFFFBCLL);
  v30 = (((v29 + 0x61828420A6821424) >> 8) ^ 0xBF361FF3E766FFFFLL)
      + v29
      + (((v29 + 0x61828420A6821424) >> 7) & 0x6C3FE7CECDFFFELL);
  v31 = (((v30 - 0x5DB39BD340E4EBDBLL) >> 7) ^ 0x37FF7FBDA9FFEFBFLL)
      + v30
      + (((v30 - 0x5DB39BD340E4EBDBLL) >> 6) & 0x3FEFF7B53FFDF7ELL);
  v32 = v31 - ((2 * v31 + 0x5499C8DE2A3648CCLL) & 0x68F62DF03D80F4D6) + 0x1EC7FB6733DB9ED1;
  v33 = (v32 ^ 0x8A37D526F36D0EA4)
      + ((v32 >> 30) ^ 0x41010C0A28E715F9)
      + ((v32 >> 29) & 0x7FF8F7D3ALL ^ 0xFFFFFFFBAE71D6CDLL)
      - 0x41010C0800384161;
  v34 = (((((2 * v33) & 0xF17EE7DBBFF5E5E2) + (v33 ^ 0xF8BF73EDDFFAF2F1) + 0x7408C1220050D0FLL) >> 13) ^ 0x7DFDFBF75FDF7DFFLL)
      + ((2 * v33) & 0xF17EE7DBBFF5E5E2)
      + (v33 ^ 0xF8BF73EDDFFAF2F1)
      + (((((2 * v33) & 0xF17EE7DBBFF5E5E2) + (v33 ^ 0xF8BF73EDDFFAF2F1) + 0x7408C1220050D0FLL) >> 12) & 0xBF7EEBFBEFBFELL);
  v35 = v34
      + (((v34 - 0x76BD6FE53FDA70F0) >> 2) ^ 0x14D802180450303)
      - (((v34 - 0x76BD6FE53FDA70F0) >> 1) & 0x7D64FFBCFF75F9F8);
  v36 = v23 ^ v6 ^ (v35 + 1 - ((2 * (v35 + 1) + 2143361048) & 0xAEE80918) - 1756065640);
  v37 = (v36 & 0x34EEE5CD ^ 0x12C98188 | 0x40B36182) - (v36 & 0x34EEE5CD ^ 0x12C98188 | 0xBF4C9E7D) - 1085497731;
  v38 = (v36 & 0xCB111A32 ^ 0xC2001A02 | 0x8BACFEF) - (v36 & 0xCB111A32 ^ 0xC2001A02 | 0xF7453010) - 146460656;
  v39 = v35
      + 1
      + (((v35 + 0x5673104953D780C9) >> 25) ^ 0x8915000008711404)
      - (((v35 + 0x5673104953D780C9) >> 24) & 0xFFEF1DD7F6);
  v40 = ((v38 & 0x99B0FE19 ^ 0x90403010) + (v38 & 0x660F01E6 ^ 0x62080127) - 1) ^ 0x31F3ECEB | v37 ^ 0x42B66182;
  v41 = v40 - ((2 * v40) & 0xD2A2039E) + 1766916559;
  v42 = v39
      + (((v39 - 0x32A1EFB6B499933CLL) >> 9) ^ 0xD37FDF6B7FF4E6FDLL)
      + (((v39 - 0x32A1EFB6B499933CLL) >> 8) & 0xFFBED6FFE9CDFALL);
  v43 = v42
      + ((v42 - 0x621CF22348E7A39) & 0xFF73B5EFDFB7E7EELL)
      + (((v42 - 0x621CF22348E7A39) >> 1) ^ 0x7FB9DAF7EFDBF3F7)
      + 1;
  v44 = v43 - ((2 * v43 - 0xBB7543448D4DC62) & 0xE899B830513D3928) - 0x118ECE01FBCBD19DLL;
  v45 = ((2 * ((v44 ^ 0x744CDC18289E9C94) + 0x38FC44A9709D19CALL)) & 0xFEBEFFF5BE5FFFAELL)
      + (((v44 ^ 0x744CDC18289E9C94) + 0x38FC44A9709D19CALL) ^ 0xFF5F7FFADF2FFFD7);
  v46 = v45
      + (((v45 + 0xA0800520D00029) >> 24) ^ 0x400529D3302A00A0)
      - (((v45 + 0xA0800520D00029) >> 23) & 0x599FABFEBELL);
  v47 = v46
      + (((v46 - 0x3F64A9CE0F5A0077) >> 15) ^ 0x1CC302840010906CLL)
      - (((v46 - 0x3F64A9CE0F5A0077) >> 14) & 0x1FAF7FFDEDF26);
  v48 = v47
      + (((v47 - 0x5C27AC520F6A90E3) >> 8) ^ 0x6D65EEDF1FBE72B7)
      + (((v47 - 0x5C27AC520F6A90E3) >> 7) & 0xCBDDBE3F7CE56ELL)
      + 2;
  v49 = v48 - ((2 * v48 + 0x2CE4C99DA1ADF8C8) & 0x2A6CFD59271E04C0) + 0x4BA8E37B6465FEC4;
  v50 = ((2 * ((v49 ^ 0x15367EAC938F0260) + 0x627FE9C2823FDEE7)) & 0xFFFFF2FD3ECA6F8ELL)
      + (((v49 ^ 0x15367EAC938F0260) + 0x627FE9C2823FDEE7) ^ 0xFFFFF97E9F6537C7);
  v51 = (((v50 + 0x681609AC839) >> 29) ^ 0x67F5BB6CF7BDDB7FLL)
      + v50
      + (((v50 + 0x681609AC839) >> 28) & 0x9EF7BB6FELL);
  v52 = v51
      + (((v51 - 0x67F5B4EB97231346) >> 9) ^ 0x4200050200202540)
      - (((v51 - 0x67F5B4EB97231346) >> 8) & 0xFFF5FBFFBFB57ELL);
  v53 = ((v52 + 0x560A461268BCC77ALL) >> 5) - (((v52 + 0x560A461268BCC77ALL) >> 4) & 0x46AE0032) - 1554579431;
  LODWORD(v52) = ((2 * (v52 + 1757202298)) & 0xD7F7FFCC) + ((v52 + 1757202298) ^ 0x6BFBFFE6) + (v53 ^ 0xB8A9AFF3);
  v54 = (((2 * v53) & 0x37FD5FD4 ^ 0x6AC0010)
       + v52
       - 2 * ((((2 * v53) & 0x37FD5FD4 ^ 0x6AC0010) + v52 + 939872304) & 0x32BB9ECF ^ v52 & 2)
       + 717287165) ^ v41;
  v55 = ((v54 ^ 0xFD) + 1) & 7;
  LODWORD(STACK[0x510]) = v54;
  v56 = v54 & 7;
  if (v56 == 2)
    v57 = 0;
  else
    v57 = 255;
  LODWORD(STACK[0x680]) = v55;
  v58 = ((v57 << v55) - ((2 * (v57 << v55)) & 0x30) - 104);
  v59 = (((2 * (v58 ^ 0xAF)) & 0x4C) - (v58 ^ 0xAF) - 39) ^ 0x2F;
  v60 = ((v59 | 0x8C) - (v59 | 0x73) + 115) ^ 0xA0;
  LODWORD(STACK[0x374]) = v56;
  if (v56 == 2)
    v60 = 18;
  v61 = (STACK[0x5C0] & 2) == 0;
  v62 = STACK[0x5E0];
  if ((STACK[0x5C0] & 2) != 0)
    v62 = STACK[0x5A0];
  LODWORD(STACK[0x2F0]) = v62;
  v63 = STACK[0x590];
  if (v61)
    v63 = STACK[0x550];
  LODWORD(STACK[0x3E4]) = v63;
  v64 = STACK[0x530];
  if (v61)
    v64 = STACK[0x4C0];
  LODWORD(STACK[0x394]) = v64;
  v65 = STACK[0x404];
  if (!v61)
    v65 = STACK[0x3F0];
  LODWORD(STACK[0x3EC]) = v65;
  v66 = STACK[0x3C0];
  if (v61)
    v66 = STACK[0x3E8];
  LODWORD(STACK[0x3E8]) = v66;
  v67 = STACK[0x3BC];
  if (v61)
    v67 = STACK[0x3B8];
  LODWORD(STACK[0x3F0]) = v67;
  v68 = STACK[0x3F8];
  if (!v61)
    v68 = STACK[0x3E0];
  LODWORD(STACK[0x254]) = v68;
  LODWORD(STACK[0x2A0]) = LODWORD(STACK[0x26C]) - LODWORD(STACK[0x2A0]);
  if ((STACK[0x580] & 1) != 0)
    v69 = STACK[0x290];
  else
    v69 = STACK[0x3AC];
  v70 = (STACK[0x580] & 2) == 0;
  v71 = STACK[0x398];
  if ((STACK[0x580] & 2) != 0)
    v71 = STACK[0x3C4];
  LODWORD(STACK[0x25C]) = v71;
  v72 = STACK[0x3DC];
  if (v70)
    v72 = STACK[0x380];
  LODWORD(STACK[0x258]) = v72;
  v73 = v27 ^ v13 ^ v4 ^ v44;
  v74 = v32 ^ v18 ^ v7 ^ v49;
  v75 = v73 & 0x7F ^ 0x61;
  LODWORD(STACK[0x4C0]) = (v73 & 0xFFFFFF80 ^ 0xEA5C900)
                        + (v73 & 0x2E3A6300 ^ 0x201A2261)
                        - ((v73 & 0xFFFFFF80 ^ 0xEA5C900) & 0x2E3A6300);
  LODWORD(STACK[0x404]) = (33686018 * (v58 ^ 0x98)) & 0xE82A3B56;
  LODWORD(STACK[0x3BC]) = 16843009 * (v58 ^ 0x98) - 199942741;
  v76 = ((452984832 * (v58 ^ 0x98) - ((905969664 * (v58 ^ 0x98)) & 0x6C000000) + 913300291) ^ 0x366FDB43) & (v74 ^ 0x556FEF5A);
  LODWORD(STACK[0x398]) = v76 - ((2 * v76) & 0x88888888) + 1141031471;
  LOBYTE(v76) = v60 ^ 0x12 | v73 ^ 0x91;
  v77 = (v73 ^ 0x7C ^ v60) + 1;
  v78 = (v76 ^ 0xEF) + (v77 ^ 0x9D);
  LOBYTE(v76) = ((2 * v77) & 0x3A) + v78 + ((2 * v76) & 0xDE) + 116;
  LODWORD(STACK[0x3C0]) = v76 - 2 * (v76 & 0xE9 ^ v78 & 1) - 964655128;
  LODWORD(STACK[0x5E0]) = v73;
  v79 = ((v73 ^ 0xA3) + (v73 & 7 ^ 0x1D2E304) - ((v73 ^ 0xA3) & 7)) & 0x1407FFF ^ HIBYTE(v73) ^ (((2 * (BYTE1(v73) ^ 6)) | 0xF522E9E4) - (BYTE1(v73) ^ 6) + 91130638) ^ ((BYTE2(v73) ^ 0x3B603D82 | 0x2EDAF85E) - (BYTE2(v73) ^ 0x3B603D82 | 0xD12507A1) - 786102367) ^ 0xEE6BD266;
  v80 = 16843009 * v79 - ((33686018 * v79) & 0x3D981BC4) + 516689378;
  LODWORD(STACK[0x3B8]) = v74;
  v81 = (((v74 ^ BYTE1(v74) ^ BYTE2(v74)) ^ 0x409A24C | 0x71B32EEC)
       - ((v74 ^ BYTE1(v74) ^ BYTE2(v74)) ^ 0x409A24C | 0x8E4CD113)
       - 1907568365) ^ HIBYTE(v74) ^ 0x75BA8C81;
  v82 = 16843009 * v81 - ((33686018 * v81) & 0x80B202FA) + 1079574909;
  v83 = STACK[0xB50];
  v84 = *(_QWORD *)(STACK[0xB50]
                  + 8
                  * ((*(_QWORD *)(STACK[0xB50]
                                + 8
                                * ((*(_QWORD *)(STACK[0xB50] + 8 * ((*(_DWORD *)STACK[0xB50] & 1) == 0)) & 1) == 0)) & 1) == 0)) & 1;
  v85 = (v84 ^ 0xFFEDCFD7) + 2 * v84 + 578415466;
  LODWORD(STACK[0x5A0]) = 33686018 * v75;
  LODWORD(STACK[0x590]) = (33686018 * v75) & 0xA5959B8E;
  v86 = LODWORD(STACK[0x560]) ^ 0x34396550;
  v87 = LODWORD(STACK[0x4B0]) ^ 0x93A7C14C;
  v88 = STACK[0x570];
  LODWORD(STACK[0x3C4]) = v69;
  if (!v70)
    v88 = v69;
  LODWORD(STACK[0x26C]) = v88;
  v89 = STACK[0x3B4];
  if (v70)
    v89 = STACK[0x3B0];
  LODWORD(STACK[0x268]) = v89;
  LODWORD(STACK[0x3F8]) = v75;
  LODWORD(STACK[0x530]) = 16843009 * v75 + 1389022663;
  LODWORD(STACK[0x380]) = v80;
  LODWORD(STACK[0x37C]) = v82;
  LODWORD(STACK[0x3DC]) = v82 ^ v80;
  v90 = ((v5 - 183115494) & 0xFFFBDC6A) - 4111582282;
  v91 = 0xB3D5C9433319E527 * (*(_QWORD *)(v83 + 8 * v90) ^ 0x9696969696969696)
      - ((0x67AB92866633CA4ELL * (*(_QWORD *)(v83 + 8 * v90) ^ 0x9696969696969696)) & 0x8D9D18B941EB4630)
      + 0x46CE8C5CA0F5A318;
  v92 = ((2 * ((v91 ^ 0xF59ABD0D0586E4DLL) + v90)) & 0xEDBBCFF7E767DC5ELL)
      + (((v91 ^ 0xF59ABD0D0586E4DLL) + v90) ^ 0x76DDE7FBF3B3EE2FLL);
  v93 = (((v92 - 0x76DDE7FBF3B3EE2FLL) >> 32) ^ 0x93FBF5A9FF3CFFCDLL)
      + v92
      + (((v92 - 0x76DDE7FBF3B3EE2FLL) >> 31) & 0x1FE79FF9ALL);
  v94 = (((v93 - 0xAD9DDA5F2F0EDFCLL) >> 16) ^ 0xFFBBFF75669DDFCCLL)
      + v93
      + (((v93 - 0xAD9DDA5F2F0EDFCLL) >> 15) & 0x1FEEACD3BBF98);
  v95 = (((v94 - 0xA95DD1B598ECDC8) >> 8) ^ 0x53F7FD9773FFBDFELL)
      + v94
      + (((v94 - 0xA95DD1B598ECDC8) >> 7) & 0x1EFFB2EE7FF7BFCLL);
  v96 = ((2 * (v95 + 846296122)) & 0xFDDFDCFA) + ((v95 + 846296122) ^ 0x7EEFEE7D);
  v97 = v96 - ((2 * v96 - 998286960) & 0xC2A857CA);
  v98 = v95 - ((2 * v95 + 0x76D06BF9E9A15588) & 0x7BE32A482608E744) - 0x6A634DEF82AE19ALL;
  v99 = ((2 * ((v91 ^ 0x7B3F1978B3F1D0BALL ^ v98) + v90)) & 0x9F73E7DB5FFE6F9ELL)
      + (((v91 ^ 0x7B3F1978B3F1D0BALL ^ v98) + v90) ^ 0x4FB9F3EDAFFF37CFLL);
  v100 = (((v99 - 0x4FB9F3EDAFFF37CFLL) >> 32) ^ 0xFBFF9ECBF7FFDFFDLL)
       + v99
       + (((v99 - 0x4FB9F3EDAFFF37CFLL) >> 31) & 0x1EFFFBFFALL);
  v101 = (((v100 - 0x4BB992B9A7FF17CCLL) >> 16) ^ 0x6FD7B4FCE71FB12FLL)
       + v100
       + (((v100 - 0x4BB992B9A7FF17CCLL) >> 15) & 0x169F9CE3F625ELL);
  v102 = (((v101 + 0x446EB84970E13705) >> 8) ^ 0x7B1BEDE4FEFE4F2FLL)
       + v101
       + (((v101 + 0x446EB84970E13705) >> 7) & 0x37DBC9FDFC9E5ELL);
  v103 = ((2 * (v102 + 1910695894)) & 0xA7FC5BEE) + ((v102 + 1910695894) ^ 0xD3FE2DF7);
  v104 = v103 - ((2 * v103 + 442686108) & 0x37F81416);
  v105 = v102 - 2 * ((v102 + 0x6348DB1434421E60) & 0x4E57BE98F89C116FLL ^ v102 & 0xD) + 0x31A099AD2CDE2FC2;
  v106 = ((2 * ((v91 ^ 0x89932C45869B27ALL ^ v105) + v90)) & 0x2FE9778F23F7F7FELL)
       + (((v91 ^ 0x89932C45869B27ALL ^ v105) + v90) ^ 0x17F4BBC791FBFBFFLL);
  v107 = (((unint64_t)(v106 - 0x17F4BBC791FBFBFFLL) >> 32) ^ 0x2FDBFFBFFFC7B97FLL)
       + v106
       + (((unint64_t)(v106 - 0x17F4BBC791FBFBFFLL) >> 31) & 0x1FF8F72FELL);
  v108 = (((v107 - 0x47D0BB8791C3B57ELL) >> 16) ^ 0xFBFBEDFF5FFCD4FDLL)
       + v107
       + (((v107 - 0x47D0BB8791C3B57ELL) >> 15) & 0x1DBFEBFF9A9FALL);
  v109 = v85 > 0x2267BB42;
  if (v85 < 0x2267BB41)
    v109 = 1;
  v110 = (((v108 - 0x43CCA986F1C08A7BLL) >> 8) ^ 0xFFD693B6EF7FD7AFLL)
       + v108
       + (((v108 - 0x43CCA986F1C08A7BLL) >> 7) & 0x1AD276DDEFFAF5ELL);
  v111 = ((2 * (v110 + 515874262)) & 0xA9BDF326) + ((v110 + 515874262) ^ 0x54DEF993);
  return ((uint64_t (*)(unint64_t, _QWORD))qword_1E2538EC0[(508 * !v109) ^ v5])(v87 ^ v98 ^ v105 ^ 0xEA4662A5 ^ ((_DWORD)v110- 2* (((_DWORD)v110 - 518073248) & 0x1DE0075 ^ v110 & 0x10)- 486746939), v86 ^ (v97 - 1013720915) ^ (v104 - 1456638119) ^ 0x82F9AB1A ^ (v111- ((2 * v111 + 413221732) & 0xF0A315E8)+ 77737126));
}

uint64_t sub_18CAC1444@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X4>, unsigned int a5@<W8>)
{
  unsigned int v5;
  int v6;
  BOOL v7;
  int v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;

  v6 = (a3 + 183385099) | 0x12A;
  v7 = (STACK[0x5C0] & 2) == 0;
  v8 = STACK[0x678];
  if ((STACK[0x5C0] & 2) == 0)
    v8 = STACK[0x670];
  LODWORD(STACK[0x3E0]) = v8;
  v9 = STACK[0x640];
  if (v7)
    v9 = STACK[0x608];
  LODWORD(STACK[0x290]) = v9;
  v10 = STACK[0x5F0];
  if (!v7)
    v10 = STACK[0x5D0];
  LODWORD(STACK[0x3AC]) = v10;
  v11 = STACK[0x4A0];
  if (v7)
    v11 = STACK[0x498];
  LODWORD(STACK[0x328]) = v11;
  v12 = (STACK[0x580] & 2) == 0;
  v13 = STACK[0x294];
  if ((STACK[0x580] & 2) != 0)
    v13 = STACK[0x44C];
  LODWORD(STACK[0x264]) = v13;
  v14 = STACK[0x3B4];
  if (!v12)
    v14 = STACK[0x3B0];
  LODWORD(STACK[0x24C]) = v14;
  v15 = STACK[0x688];
  if (!v12)
    v15 = STACK[0x270];
  LODWORD(STACK[0x22C]) = v15;
  v16 = STACK[0x5E0];
  LODWORD(STACK[0x550]) = LODWORD(STACK[0x5E0]) ^ 0x43A8700A;
  LODWORD(STACK[0x5D0]) = STACK[0x4C0] & 0xFFFFFF80;
  v17 = LODWORD(STACK[0x3BC]) - LODWORD(STACK[0x404]);
  LODWORD(STACK[0x4A0]) = v17;
  LODWORD(STACK[0x44C]) = LODWORD(STACK[0x398]) ^ v17;
  LODWORD(STACK[0x3BC]) = LODWORD(STACK[0x3DC]) ^ 0x8DB65C66;
  LODWORD(STACK[0x3B4]) = v16 ^ 0xE585D750;
  v18 = STACK[0xB50];
  STACK[0x688] = (v6 + 276832913) | 0xE90340C8;
  v19 = STACK[0x688] + a5 + ((unint64_t)(a5 < v5) << 32) - 4286669719u;
  v20 = 0xB3D5C9433319E527 * (*(_QWORD *)(v18 + 8 * v19) ^ 0x9696969696969696)
      - ((0x67AB92866633CA4ELL * (*(_QWORD *)(v18 + 8 * v19) ^ 0x9696969696969696)) & 0x72185C3632598C32)
      + 0x390C2E1B192CC619;
  v21 = ((2 * ((a4 ^ 0x993F631A18F2C67CLL ^ v20) + v19)) & 0xB7F7ED957EF6FAE8)
      + (((a4 ^ 0x993F631A18F2C67CLL ^ v20) + v19) ^ 0xDBFBF6CABF7B7D74);
  v22 = (((v21 + 0x240409354084828CLL) >> 32) ^ 0x6F7FF7FFA2CB3CBALL)
      + v21
      + (((v21 + 0x240409354084828CLL) >> 31) & 0x145967974);
  v23 = (((v22 - 0x4B7BEECA6246BA2ELL) >> 16) ^ 0x5F7E4EE75745F87FLL)
      + v22
      + (((v22 - 0x4B7BEECA6246BA2ELL) >> 15) & 0x9DCEAE8BF0FELL);
  v24 = (((v23 + 0x5505C24E46734D53) >> 8) ^ 0xDFBFFEFFEB3FFFC7)
      + v23
      + (((v23 + 0x5505C24E46734D53) >> 7) & 0x17FFDFFD67FFF8ELL);
  v25 = ((2 * (v24 + 1530088844)) & 0x5DFAFF7E) + ((v24 + 1530088844) ^ 0xAEFD7FBF);
  v26 = v24 - ((2 * v24 + 0x1E77A7FC3B25082CLL) & 0xFFF37839D519554ALL) + 0xF35901B081F2EBBLL;
  v27 = ((2 * ((v20 ^ 0x46F59207F3A06CBCLL ^ v26) + v19)) & 0x9DBDBFFDE7FFFF48)
      + (((v20 ^ 0x46F59207F3A06CBCLL ^ v26) + v19) ^ 0xCEDEDFFEF3FFFFA4);
  v28 = (((v27 + 0x312120010C00005CLL) >> 32) ^ 0xFFEE7CFF77FBDF6DLL)
      + v27
      + (((v27 + 0x312120010C00005CLL) >> 31) & 0xEFF7BEDA);
  v29 = (((v28 + 0x3132A301940420EFLL) >> 16) ^ 0xAFBAEDBADFFF7BDDLL)
      + v28
      + (((v28 + 0x3132A301940420EFLL) >> 15) & 0x1DB75BFFEF7BALL);
  v30 = (((v29 - 0x7E884AB94BFB5AEELL) >> 8) ^ 0x76EFE7EDEF777EF9)
      + v29
      + (((v29 - 0x7E884AB94BFB5AEELL) >> 7) & 0x1DFCFDBDEEEFDF2);
  v31 = ((2 * (v30 - 997382631)) & 0xFFEFF7D4) + ((v30 - 997382631) ^ 0xFFF7FBEA);
  v32 = v31 - ((2 * v31 - 1032896842) & 0xB2B18B50);
  v33 = v30 - ((2 * v30 + 0x48FBBC110DD8B946) & 0x54ACBAA0C4378886) + 0x4ED43B58E90820E6;
  v34 = ((2 * ((v20 ^ 0x135A734B7B37025ALL ^ v33) + v19)) & 0xD765FDF2FD9ED6BELL)
      + (((v20 ^ 0x135A734B7B37025ALL ^ v33) + v19) ^ 0x6BB2FEF97ECF6B5FLL);
  v35 = (((v34 - 0x6BB2FEF97ECF6B5FLL) >> 32) ^ 0xD3FFE7FECB31FF7FLL)
      + v34
      + (((v34 - 0x6BB2FEF97ECF6B5FLL) >> 31) & 0x19663FEFELL);
  v36 = (((v35 - 0x3FB2E6F84A016ADELL) >> 16) ^ 0x8CECFCFBE6EB7FC9)
      + v35
      + (((v35 - 0x3FB2E6F84A016ADELL) >> 15) & 0x1F9F7CDD6FF92);
  v37 = (((v36 + 0x33601C0BCF131559) >> 8) ^ 0x1D7CAFEFFDDFF7FDLL)
      + v36
      + (((v36 + 0x33601C0BCF131559) >> 7) & 0xF95FDFFBBFEFFALL);
  LODWORD(v20) = ((2 * (v37 - 785179300)) & 0xDFE4FFFE) + ((v37 - 785179300) ^ 0x6FF27FFF);
  return ((uint64_t (*)(_QWORD, _QWORD))(qword_1E2538EC0[(185 * ((a5 & 0xFFFFFFFE) != v5 - 1)) ^ v6] - 12))(a1 ^ v26 ^ v33 ^ 0x89496E83 ^ ((_DWORD)v37- ((2 * (_DWORD)v37 + 656713676) & 0x3BC00CA)- 1787800501), a2 ^ (v25 - ((2 * v25 + 610547468) & 0x34586B1A) - 866234093) ^ (v32 + 982541571) ^ 0x910BB527 ^ ((_DWORD)v20 - ((2 * (_DWORD)v20 - 495307124) & 0xA4FE8A04) - 1011064760));
}

void sub_18CAC1C84()
{
  JUMPOUT(0x18CAC15D4);
}

#error "18CAC4B58: call analysis failed (funcsize=1962)"

void sub_18CAC4B5C()
{
  JUMPOUT(0x18CAC4038);
}

uint64_t sub_18CAC4B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a66;
  int a67;
  int a68;
  int a69;
  int a71;
  int v71;
  uint64_t v72;
  unsigned int v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  int v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  int v100;
  unsigned int v101;

  LODWORD(STACK[0x570]) = LODWORD(STACK[0x3C0]) ^ LODWORD(STACK[0x4A0]);
  v73 = LODWORD(STACK[0x678]) | 0x92D8C8F0;
  LODWORD(STACK[0x3C4]) = (LODWORD(STACK[0x20C]) - LODWORD(STACK[0x230])) ^ LODWORD(STACK[0x3C8]) ^ (LODWORD(STACK[0x204]) - LODWORD(STACK[0x210]));
  LODWORD(STACK[0x3C8]) = LODWORD(STACK[0x368]) ^ LODWORD(STACK[0x310]) ^ v73;
  LODWORD(STACK[0x670]) = a71 - LODWORD(STACK[0x200]);
  LODWORD(STACK[0x230]) = a68 - a69;
  LODWORD(STACK[0x660]) = a66 - a67;
  LODWORD(STACK[0x4A0]) = LODWORD(STACK[0x498]) ^ 0x6FB3F18C;
  LODWORD(STACK[0x3C0]) = LODWORD(STACK[0x300]) ^ 0xDE94D241;
  LODWORD(STACK[0x200]) = LODWORD(STACK[0x378]) ^ 0x246D821D;
  v74 = a4
      - 319735164
      + ((unint64_t)(a4 < (a1 ^ 0x7E6) + 319734378) << 32);
  v75 = 0xB3D5C9433319E527 * (*(_QWORD *)(STACK[0xB50] + 8 * v74) ^ 0x9696969696969696)
      - 0x171AC590B41C3E09
      - ((0x67AB92866633CA4ELL * (*(_QWORD *)(STACK[0xB50] + 8 * v74) ^ 0x9696969696969696)) & 0xD1CA74DE97C783EELL);
  v76 = ((2 * ((v72 ^ 0x5E2FE7BAF2925B87 ^ v75) + v74)) & 0xEF5BFB5FBFDD3FFELL)
      + (((v72 ^ 0x5E2FE7BAF2925B87 ^ v75) + v74) ^ 0x77ADFDAFDFEE9FFFLL);
  v77 = (((v76 - 0x77ADFDAFDFEE9FFFLL) >> 32) ^ 0x50DF556D67627FFFLL)
      + v76
      + (((v76 - 0x77ADFDAFDFEE9FFFLL) >> 31) & 0xCEC4FFFE);
  v78 = (((v77 + 0x3772ACE2B8AEE002) >> 16) ^ 0xD9B595F6AEF791BBLL)
      + v77
      + (((v77 + 0x3772ACE2B8AEE002) >> 15) & 0x12BED5DEF2376);
  v79 = v78 - ((2 * v78 - 0x4485D227EC916372) & 0x86E5B50450A5688ELL) + 0x212FF16E320A028ELL;
  v80 = 2
      * ((((v79 >> 8) ^ 0xC372DA822852B4) & (v79 ^ 0xC372DA822852B447))
       - ((2 * (((v79 >> 8) ^ 0xC372DA822852B4) & (v79 ^ 0xC372DA822852B447))) & 0x6A54BFAC633542))
      + 0x6A6A54BFAC633542;
  v81 = (v79 ^ 0xC3B1A858AA7AE6F3 ^ (v79 >> 8))
      + (v80 ^ 0xD5A7A74CC0BB5ADDLL)
      + 0x40320C0C93279061
      + ((2 * v80) & 0x7F9BE7E6D9B0DF3CLL ^ 0x5490A16658804A04);
  v82 = ((2 * v81) & 0xFEB17D1FBFFF77DELL) + (v81 ^ 0x7F58BE8FDFFFBBEFLL);
  LODWORD(v81) = v82 - ((2 * v82 + 39829164) & 0xE120D81C) + 1908427620;
  LODWORD(v80) = (((2 * v81) ^ 0xE120D81C) - ((2 * ((2 * v81) ^ 0xE120D81C)) & 0xEAC0DA94) - 178229942) & v71 ^ 0x5D002018;
  v83 = v80 - ((2 * (_DWORD)v80) & 0xA05E158);
  v84 = v82 - ((2 * v82 + 0x153AA43FC4BEF536) & 0x15A46F7EF76B4A80) + 0x256F89DF5E151FDBLL;
  v85 = ((2 * ((v75 ^ 0x62370DD0305664B7 ^ v84) + v74)) & 0x11FFBB6E79BB77FELL)
      + (((v75 ^ 0x62370DD0305664B7 ^ v84) + v74) ^ 0x88FFDDB73CDDBBFFLL);
  v86 = (((v85 + 0x77002248C3224401) >> 32) ^ 0xF2FEAFF0E3FF17ECLL)
      + v85
      + (((v85 + 0x77002248C3224401) >> 31) & 0x1C7FE2FD8);
  v87 = (((v86 - 0x7BFE8DA820DCD3EBLL) >> 16) ^ 0x37F7BBBEFBDB7CEBLL)
      + v86
      + (((v86 - 0x7BFE8DA820DCD3EBLL) >> 15) & 0x1777DF7B6F9D6);
  v88 = (((v87 + 0x4C09B698E347AF2ALL) >> 8) ^ 0x7E7E5DFE6D6DFDD7)
      + v87
      + (((v87 + 0x4C09B698E347AF2ALL) >> 7) & 0xFCBBFCDADBFBAELL);
  v89 = v88 - ((2 * v88 - 1374512848) & 0xA6D22886) - 1435344677;
  v90 = (((2 * v89) ^ 0xA6D22886) - ((2 * ((2 * v89) ^ 0xA6D22886)) & 0xDCBF57C4) - 295719965) & v71 ^ v89;
  v91 = v88 - ((2 * v88 - 0x30FD2D6B8F8E3046) & 0x9A12917A9B1C6096) + 0x348AB20785C71828;
  v92 = v75 ^ 0xE8E53A6F4BE3C1F7;
  v93 = (v75 ^ 0xE8E53A6F4BE3C1F7) + (v75 ^ 0x5A138D2DF9920E43 ^ v91) + 1;
  v94 = ((0x3EE9D3CB2213F095 - v88 - ((0x30FD2D6B8F8E3046 - 2 * v88) & 0x4CD67A2AB499B0E4)) ^ v91 ^ 0x2CA44C054EFCD525 ^ (v93 - ((2 * v93) & 0x8F8C735AB27C7A38) + 0x47C639AD593E3D1CLL))
      + v74;
  v95 = v92 + (v94 ^ 0x5DA93FBF6ED3BFBFLL) + ((2 * v94) & 0xBB527F7EDDA77F7ELL) - 0x5DA93FBF6ED3BFBFLL;
  v96 = (((((2 * v95) & 0xEFD3B73FFDDD3AF6) + (v95 ^ 0xF7E9DB9FFEEE9D7BLL) + 0x816246001116285) >> 32) ^ 0xFFBF37733F5DEE9BLL)
      + ((2 * v95) & 0xEFD3B73FFDDD3AF6)
      + (v95 ^ 0xF7E9DB9FFEEE9D7BLL)
      + (((((2 * v95) & 0xEFD3B73FFDDD3AF6) + (v95 ^ 0xF7E9DB9FFEEE9D7BLL) + 0x816246001116285) >> 31) & 0x7EBBDD36);
  v97 = (((v96 + 0x856ECECC1B373EALL) >> 16) ^ 0xFF3FFDBBFF71F776)
      + v96
      + (((v96 + 0x856ECECC1B373EALL) >> 15) & 0x1FB77FEE3EEECLL);
  v98 = (((v97 + 0x916EF30C2417C74) >> 8) ^ 0xBE3EFAAB7FFA7FAFLL)
      + v97
      + (((v97 + 0x916EF30C2417C74) >> 7) & 0x7DF556FFF4FF5ELL);
  v99 = (v98 - ((2 * v98 - 0x6A5016F57B720676) & 0xD3D37689F9A651ECLL) - 0x4B3E5035C0E5DA45) ^ 0x69E9BB44FCD328F6;
  v100 = v99 - ((2 * v99 - 1033947510) & 0xB327EDB8) + 985895457;
  v101 = (((2 * v100) ^ 0xB327EDB8) - ((2 * ((2 * v100) ^ 0xB327EDB8)) & 0x828933D4) - 1052468757) & v71 ^ 0xC30247EC;
  LODWORD(STACK[0x688]) ^= v81 ^ (v83 + 622261423) ^ v90 ^ 0x5E2EA1C6 ^ (((2 * v101) | 0x8AA7DC18) - v101 - 1163128332) ^ v100;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(int)((577 * ((a4 - 319735163) > 1)) ^ a1)] - 4))(a1, v90, 0xD0C0EE857BD0D0FALL, a4, 0x15A46F7EF76B4A80, 2 * v99, v83, 319735164, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

void sub_18CAC57B0()
{
  JUMPOUT(0x18CAC4CA4);
}

#error "18CAC7698: call analysis failed (funcsize=1217)"

void sub_18CAC769C()
{
  JUMPOUT(0x18CAC6C5CLL);
}

uint64_t sub_18CAC76A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a64;
  int a65;
  int a67;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int v75;
  int v76;
  uint64_t v77;
  unsigned int v78;
  int v79;
  int v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;

  v79 = STACK[0x3A4];
  if ((STACK[0x5C0] & 2) != 0)
    v79 = STACK[0x3A0];
  LODWORD(STACK[0x39C]) = v79;
  LODWORD(STACK[0x3A0]) = a74 ^ LODWORD(STACK[0x4C0]);
  LODWORD(STACK[0x3A4]) = a72 - a73;
  LODWORD(STACK[0x670]) = a75 - LODWORD(STACK[0x398]);
  LODWORD(STACK[0x364]) ^= LODWORD(STACK[0x550]) ^ HIDWORD(a59) ^ a60 ^ v75 ^ a71 ^ a70 ^ a65 ^ (a64 + a63 - 1);
  v80 = HIDWORD(a57) ^ LODWORD(STACK[0x510]) ^ a58 ^ v76 ^ LODWORD(STACK[0x310]) ^ a69 ^ a67 ^ HIDWORD(a60) ^ (a59 + HIDWORD(a58) - 2);
  LODWORD(STACK[0x310]) = v80;
  LODWORD(STACK[0x398]) = v80 ^ 0xEEC584DB;
  v81 = a5 - 721574501 + ((unint64_t)(a5 < 0x2B025452) << 32) + 1555;
  v82 = ((v78 - 1295) | 0x4C0) ^ 0x9696969696969352 ^ *(_QWORD *)(STACK[0xB50] + 8 * v81);
  v83 = 0xB3D5C9433319E527 * v82 - ((0x67AB92866633CA4ELL * v82) & 0x8F630D5FD182B440) + 0x47B186AFE8C15A20;
  v84 = ((2 * ((v77 ^ 0x3ED91CA827D2F9E2 ^ v83) + v81)) & 0xBFEEE93CCFFFC85ELL)
      + (((v77 ^ 0x3ED91CA827D2F9E2 ^ v83) + v81) ^ 0x5FF7749E67FFE42FLL);
  v85 = (((v84 - 0x5FF7749E67FFE42FLL) >> 32) ^ 0x4FAFFBFF36F7DFABLL)
      + v84
      + (((v84 - 0x5FF7749E67FFE42FLL) >> 31) & 0x6DEFBF56);
  v86 = (((v85 + 0x50588F6261083C26) >> 16) ^ 0x7ED7B5FEE7F5CBD7)
      + v85
      + (((v85 + 0x50588F6261083C26) >> 15) & 0x16BFDCFEB97AELL);
  v87 = (((v86 - 0x2E7F269C86ED8FB1) >> 8) ^ 0xFFDFCCAF78BFDF2FLL)
      + v86
      + (((v86 - 0x2E7F269C86ED8FB1) >> 7) & 0x1BF995EF17FBE5ELL);
  v88 = v87 - 2 * ((v87 + 0x11A10CB400529120) & 0x3C390CEA348FE9BFLL ^ v87 & 0xC) - 0x7225E661CB1D852DLL;
  v89 = (v88 ^ 0xBC390CEA348FE9B3)
      - ((2 * (v88 ^ 0xBC390CEA348FE9B3) + 0x13EC215F84BE6D14) & 0x16AAEAD79949FF22)
      - 0x5AB479E470FBC9E5;
  LODWORD(v87) = ((4 * v89) ^ 0x3293FE44) - 2 * (((4 * v89) ^ 0x3293FE44) & 0x51FD91E8 ^ (4 * v89) & 8) + 1375572451;
  v90 = ((2 * ((v83 ^ 0xCCE4F3C42465A5B1 ^ v89) + v81)) & 0x9FFBCCCADFB95AF6)
      + (((v83 ^ 0xCCE4F3C42465A5B1 ^ v89) + v81) ^ 0xCFFDE6656FDCAD7BLL);
  v91 = (((v90 + 0x3002199A90235285) >> 32) ^ 0x6FFFFFAF577BDDDDLL)
      + v90
      + (((v90 + 0x3002199A90235285) >> 31) & 0xAEF7BBBA);
  v92 = (((v91 - 0x3FFDE614C7588B58) >> 16) ^ 0xBFFEBAFD9FFF76EFLL)
      + v91
      + (((v91 - 0x3FFDE614C7588B58) >> 15) & 0x175FB3FFEEDDELL);
  v93 = (((v92 + 0x35EED98A7FDB9) >> 8) ^ 0x7FFFFE61B3DFDBBFLL)
      + v92
      + (((v92 + 0x35EED98A7FDB9) >> 7) & 0x1FFFCC367BFB77ELL);
  v94 = (v93 - ((2 * v93 + 0x6C117C99043F4) & 0x32ED558B5582B78ELL) + 0x197A0B518F897DC1) ^ 0x9976AAC5AAC15BC7;
  v95 = v94 - ((2 * v94 + a2) & 0x57608B7892E7FA94) + 0x45A6566C0BD333D4;
  v96 = ((2 * ((v83 ^ 0x6C01C313A1B2A76ALL ^ v95) + v81)) & 0x7F7FDFFEDF77FB78)
      + (((v83 ^ 0x6C01C313A1B2A76ALL ^ v95) + v81) ^ 0xBFBFEFFF6FBBFDBCLL);
  v97 = (((v96 + 0x4040100090440244) >> 32) ^ 0x5585DEFFFDBEEEDALL)
      + v96
      + (((v96 + 0x4040100090440244) >> 31) & 0x1FB7DDDB4);
  v98 = (((v97 - 0x1545CEFF6D7AEC96) >> 16) ^ 0x73DFF5EFEF7DEE7ELL)
      + v97
      + (((v97 - 0x1545CEFF6D7AEC96) >> 15) & 0x1EBDFDEFBDCFCLL);
  v99 = (((v98 + 0x76DA3B10A30724ECLL) >> 8) ^ 0x9FFFDBFA537D7E7ALL)
      + v98
      + (((v98 + 0x76DA3B10A30724ECLL) >> 7) & 0x1FFB7F4A6FAFCF4);
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(118 * (a5 - 721572945 > 1)) ^ v78] - 4))(((4 * ((_DWORD)v99 - ((2 * (_DWORD)v99 + 600947192) & 0x9E274784) - 520322882)) ^ 0x3C4E8F08) & 0x60EDE23C, a2, 721572946, 2348420007, a5 - 721572945, 118, v87 & 0x8A662110 ^ 0x82102201 | v87 & 0x100998C0, v89, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

void sub_18CAC823C()
{
  JUMPOUT(0x18CAC77E0);
}

uint64_t sub_18CAC824C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a68;
  int v68;
  int v69;
  int v70;
  unint64_t v71;
  int v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  int v84;
  int v85;
  int v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  int v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  int v111;
  int v112;
  int v113;
  BOOL v114;
  int v115;
  int v116;
  unint64_t v117;
  unint64_t v118;
  int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  int v133;
  unsigned int v134;
  unint64_t v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  uint64_t v146;

  v72 = LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x260]);
  LODWORD(STACK[0x218]) -= LODWORD(STACK[0x240]);
  v73 = (v71 ^ 0xC4B876F2AEE1A5ECLL)
      + ((v71 >> 27) ^ 0x8C1C05001F0EBE11)
      + ((v71 >> 26) & 0xEEFFF3F76 ^ 0xFFFFFFFFD1E2C3DDLL)
      + 0x73E3FAE777FF9FBDLL;
  v74 = ((2 * v73) & 0xFBCFF357FBF9FCF2)
      + (v73 ^ 0xFDE7F9ABFDFCFE79)
      + (((((2 * v73) & 0xFBCFF357FBF9FCF2) + (v73 ^ 0xFDE7F9ABFDFCFE79) + 0x218065402030187) >> 14) ^ 0x948B208203420400)
      - (((((2 * v73) & 0xFBCFF357FBF9FCF2) + (v73 ^ 0xFDE7F9ABFDFCFE79) + 0x218065402030187) >> 13) & 0x1BEFBF97BF7FELL);
  v75 = v74
      + (((v74 + 0x6D8CE5D1FEC0FD87) >> 6) ^ 0xAC89292C4C4F300)
      - (((v74 + 0x6D8CE5D1FEC0FD87) >> 5) & 0x26EDADA767619FELL)
      + 2;
  v76 = v75 - ((2 * v75 - 0x3A7759818C07EAF6) & 0xD8948ED13E220BD8) + 0x4F0E9AA7D90D1071;
  v77 = ((2 * ((v76 ^ 0xEC4A47689F1105ECLL) + 0x301F1AB817992D55)) & 0x7EDEFFFFE717FFFELL)
      + (((v76 ^ 0xEC4A47689F1105ECLL) + 0x301F1AB817992D55) ^ 0xBF6F7FFFF38BFFFFLL);
  v78 = v77
      + (((v77 + 0x409080000C740001) >> 24) ^ 0x818182191644A8ACLL)
      - (((v77 + 0x409080000C740001) >> 23) & 0x1CDD376AEA6);
  v79 = v78
      + (((v78 - 0x40F1021909D0A8ABLL) >> 14) ^ 0x31C2C00104221121)
      - (((v78 - 0x40F1021909D0A8ABLL) >> 13) & 0x27FFDF7BBDDBCLL);
  v80 = v79
      + (((v79 - 0x72B3C21A0DF2B9CCLL) >> 6) ^ 0x6EEBFFFFCFF4FFBFLL)
      + (((v79 - 0x72B3C21A0DF2B9CCLL) >> 5) & 0x5D7FFFF9FE9FF7ELL);
  v81 = (((v80 - 0x3DEBE6028005979ELL) >> 27) ^ 0xE2F675CDFEFDFF9ELL)
      + v80
      + 2
      + (((v80 - 0x3DEBE6028005979ELL) >> 26) & 0x1BFDFBFF3CLL);
  v82 = (((v81 - 0x20E25BD07F03973ELL) >> 12) ^ 0x53B7BD727AF5E3FBLL)
      + v81
      + (((v81 - 0x20E25BD07F03973ELL) >> 11) & 0xF7AE4F5EBC7F6);
  v83 = v82
      + (((v82 - 0x749A1942F9F97B39) >> 2) ^ 0x9880008100202070)
      - (((v82 - 0x749A1942F9F97B39) >> 1) & 0x4EFFFEFDFFBFBF1ELL);
  v84 = 2 * (v83 + 1) + 197970092;
  LODWORD(v82) = (4 * (v83 + 1 - (v84 & 0x3906A286)) - 1985554844) ^ 0x720D450C;
  v85 = (((v82 - ((2 * v82) & 0x89F10C60) - 990345678) & 0x102409D0 ^ 0x643008CF) - 1) & 0x742409D6 | (v82 - ((2 * v82) & 0x89F10C60) - 990345678) & 0x8A4BB000;
  v86 = v83 + 1 - (v84 & 0x9AF3E780) + 1398822934;
  v87 = v83
      + 1
      + (((v83 + 0x66A6B0FC61290A5) >> 30) ^ 0xF419401214185816)
      - (((v83 + 0x66A6B0FC61290A5) >> 29) & 0x3D7CF4FD2);
  v88 = v87
      + (((v87 + 0x12512AFDB1FA388ELL) >> 12) ^ 0x1204000019B18008)
      - (((v87 + 0x12512AFDB1FA388ELL) >> 11) & 0x17FFFFCC9CFFEELL);
  v89 = v88
      + (((v88 + 0x4D2AFD9848B886) >> 7) ^ 0x200140C823404440)
      - (((v88 + 0x4D2AFD9848B886) >> 6) & 0x3FD7E6FB97F777ELL)
      + 3;
  v90 = v89 - ((2 * v89 + 0x4097D46AEA10E886) & 0x5F5BE97619D64C8CLL) - 0x7006210F7E0C6577;
  v91 = ((2 * ((v90 ^ 0xAFADF4BB0CEB2646) + 0x3DEAA251E4C860FCLL)) & 0xFF9FECFFFEF677EELL)
      + (((v90 ^ 0xAFADF4BB0CEB2646) + 0x3DEAA251E4C860FCLL) ^ 0xFFCFF67FFF7B3BF7);
  v92 = (((v91 + 0x3009800084C409) >> 31) ^ 0x7FF7F7FBFF39FFAALL)
      + v91
      + (((v91 + 0x3009800084C409) >> 30) & 0x3FE73FF54);
  v93 = (((v92 - 0x7FC7EE7BFEB53BA1) >> 8) ^ 0x5FB7F7E3FD79FCDFLL)
      + v92
      + (((v92 - 0x7FC7EE7BFEB53BA1) >> 7) & 0x16FEFC7FAF3F9BELL);
  v94 = (((v93 + 0x208019A003D0C780) >> 7) ^ 0x57DFD7F5FFFCB7FBLL)
      + v93
      + (((v93 + 0x208019A003D0C780) >> 6) & 0x3BFAFEBFFF96FF6);
  v95 = v94 - ((2 * v94 + 0x1140835407A81F0ALL) & 0x5FFA12EBB67D3378) - 0x762B4E020ED56BFLL;
  v96 = (v95 ^ 0x11B1CAAB3693ED73)
      + ((v95 >> 30) ^ 0xB130A50846233AECLL)
      + ((v95 >> 29) & 0x7FE37DF7ELL ^ 0xFFFFFFFF73F9AAA7)
      + 0x4ECF5AF7FF1BEFC1;
  v97 = (((((2 * v96) & 0x97B4F4EDBF2FF7BALL) + (v96 ^ 0x4BDA7A76DF97FBDDLL) - 0x4BDA7A76DF97FBDDLL) >> 13) ^ 0xF0F677ABDBFFBFDFLL)
      + ((2 * v96) & 0x97B4F4EDBF2FF7BALL)
      + (v96 ^ 0x4BDA7A76DF97FBDDLL)
      + (((((2 * v96) & 0x97B4F4EDBF2FF7BALL) + (v96 ^ 0x4BDA7A76DF97FBDDLL) - 0x4BDA7A76DF97FBDDLL) >> 12) & 0xCEF57B7FF7FBELL);
  v98 = v97
      + (((v97 - 0x3CD0F222BB97BBBCLL) >> 2) ^ 0xAA904A024088411)
      - (((v97 - 0x3CD0F222BB97BBBCLL) >> 1) & 0x6AADF6BFB7EEF7DCLL)
      + 1;
  v99 = v98 - ((2 * v98 + 0x710C127A40BF8064) & 0x532F0CEC3CB27762) - 0x1DE2704CC147041DLL;
  v100 = (((4 * v99) ^ 0x7964EEC4) - ((2 * ((4 * v99) ^ 0x7964EEC4)) & 0x5DF4F30) + 49260440) & v70 ^ v99;
  v101 = ((2 * ((v99 ^ 0x299786761E593BB1) - 0x3181FFAFEC090B44)) & 0x5F19FD7D37FBFAFCLL)
       + (((v99 ^ 0x299786761E593BB1) - 0x3181FFAFEC090B44) ^ 0xAF8CFEBE9BFDFD7ELL);
  v102 = v101
       + (((v101 + 0x5073014164020282) >> 25) ^ 0x8032B3140C1)
       - (((v101 + 0x5073014164020282) >> 24) & 0xF9A99D7E7CLL);
  v103 = v102
       + (((v102 + 0x5072F93E38D0C1C1) >> 9) ^ 0x775FF9FD3EFDC7F7)
       + (((v102 + 0x5072F93E38D0C1C1) >> 8) & 0xBFF3FA7DFB8FEELL);
  v104 = v103
       + ((v103 - 0x26ED00BF062D0636) & 0xFF37B59E6FBBD386)
       + (((v103 - 0x26ED00BF062D0636) >> 1) ^ 0x7F9BDACF37DDE9C3)
       + 1;
  v105 = v104 - ((2 * v104 - 0x4D11B71C7C15DFF4) & 0xD73D8A47418A5C3CLL) - 0x3AEA166A9D45C1DCLL;
  v106 = ((2 * v105) ^ 0xD73D8A47418A5C3CLL)
       - ((2 * ((2 * v105) ^ 0xD73D8A47418A5C3CLL)) & 0x4C268AF1CE9FC8E8)
       - 0x19ECBA8718B01B8BLL;
  v107 = (v105 ^ 0x5362818AD05837D4)
       + (v106 & 0x71F88952E13A3394 ^ 0x5EAAB68E57D55FFALL)
       + ((2 * v106) & 0x617102A540346708 ^ 0x402002A140144008)
       - 0x3EBAB7DEB6DF7FEELL;
  v108 = ((2 * v107) & 0x7FFD3EEB23AFF7FELL)
       + (v107 ^ 0xBFFE9F7591D7FBFFLL)
       + (((((2 * v107) & 0x7FFD3EEB23AFF7FELL) + (v107 ^ 0xBFFE9F7591D7FBFFLL) + 0x4001608A6E280401) >> 24) ^ 0x80B24010CF3000BDLL)
       - (((((2 * v107) & 0x7FFD3EEB23AFF7FELL) + (v107 ^ 0xBFFE9F7591D7FBFFLL) + 0x4001608A6E280401) >> 23) & 0x1DE619FFE84);
  v109 = v108
       + (((v108 - 0x40B0DF866107FCBCLL) >> 15) ^ 0x9A02190101218403)
       - (((v108 - 0x40B0DF866107FCBCLL) >> 14) & 0x3CDFDFDBCF7F8);
  v110 = v109
       + (((v109 + 0x254D07789DD67F41) >> 8) ^ 0xB9AFBEBDBBEF5FBELL)
       + (((v109 + 0x254D07789DD67F41) >> 7) & 0x15F7D7B77DEBF7CLL);
  v111 = STACK[0x4A0];
  LODWORD(v76) = LODWORD(STACK[0x510]) ^ a68 ^ LODWORD(STACK[0x4A0]);
  v112 = ((v76 & 0x95B91442 ^ 0x1080440) - ((2 * (v76 & 0x95B91442 ^ 0x1080440)) & 0xA320000) - 1927601391) ^ 0x8753E219;
  LODWORD(v109) = (v112 - ((2 * v112) & 0xA4268000) + 1376993317) ^ 0x5C62816D | ((v76 & 0x6A46EBBD ^ 0x22060108)
                                                                                - ((2 * (v76 & 0x6A46EBBD ^ 0x22060108)) & 0x80844470)
                                                                                - 999149000) ^ 0xAE709BAD;
  LODWORD(v109) = v109 - ((2 * v109) & 0xC890CBF4) - 465017350;
  v113 = ((4 * v109) ^ 0x912197E8) + 630090224 - ((2 * ((4 * v109) ^ 0x912197E8)) & 0x4B1CD3F0) + 11;
  LODWORD(v76) = (v76 & 0x10 | (32 * (((v76 & 0x10) >> 4) & 1)) | 0x7EF8DFC7) ^ 0x20;
  v114 = ((v113 ^ 0x258E69F0) & ((_DWORD)v76 - 2130239447)) == ((2 * ((v113 ^ 0x258E69F0) & ((_DWORD)v76 - 2130239447))) & 0x80590FB0);
  v115 = v110 + 2;
  v116 = 2 * (v110 + 2);
  v117 = (((v110 - 0x31E2CD829BD90196) >> 29) ^ 0xFB77BBBEEFD06FEDLL)
       + v110
       + 2
       + (((v110 - 0x31E2CD829BD90196) >> 28) & 0xDDFA0DFDALL);
  v118 = v117
       + (((v117 - 0x2D5A89418BA97185) >> 9) ^ 0x306104CCE0487C1DLL)
       - (((v117 - 0x2D5A89418BA97185) >> 8) & 0x3DF6663F6F07C4);
  LODWORD(v110) = v118
                + (((v118 - 0x5DBB8E0E6BF1EDA2) >> 5) ^ 0xFBF751DF)
                + (((v118 - 0x5DBB8E0E6BF1EDA2) >> 4) & 0xF7EEA3BE)
                + 1;
  v119 = 2 * v110 + 271417596;
  v120 = v110 - (v119 & 0x14829DF8) + 576196474;
  v121 = (4 * (v115 - ((v116 + 63848194) & 0x791D214)) + 381690412) ^ 0x8F23A428;
  v122 = v121 - ((2 * v121) & 0x8E20DD28) + 1192259221;
  LODWORD(STACK[0x260]) = v122;
  v123 = v122 & 0x2289850 ^ 0x1808047;
  LODWORD(v110) = (4 * (v110 - (v119 & 0x19166042)) + 310887036) ^ 0xB22CC084;
  LODWORD(v110) = (v110 - ((2 * v110) & 0x573395A8) - 1415984428) & 0x9A6FB9D0 ^ 0x8A6BB900;
  v124 = ((2 * v110) & 0x24585220) - v110 + 742643400;
  v125 = ((2 * v113) & 0x20DC63A0 ^ 0x1C43A0) + (v113 & 0x9A6FB9D0 ^ 0x75F05E09);
  v126 = (v109 & 0xFFFFFFEF ^ 0x5134D043)
       + (v109 & 0x1323CBC9 ^ 0x2030B98)
       - ((v109 & 0xFFFFFFEF ^ 0x5134D043) & 0x1323CBC9);
  v127 = v76 - 1614284486;
  v128 = -1648772888 - v76;
  if (v114)
    v128 = v127;
  v129 = (((4 * LODWORD(STACK[0x498])) ^ 0x7EB18DB8)
        - 950114692
        - ((2 * ((4 * LODWORD(STACK[0x498])) ^ 0x7EB18DB8)) & 0x8EBCEC80)
        + 4038) & 0x9A6FB9D0 ^ 0xB65E3311;
  v130 = v111 ^ a68 ^ (((2 * v129) & 0x74CA3480) - v129 + 94037393) ^ v126 ^ LODWORD(STACK[0x670]) ^ (v125 + v128 - ((2 * (v125 + v128) + 1451318828) & 0x6063545A) + 460478787);
  LODWORD(STACK[0x510]) = LODWORD(STACK[0x360]) ^ 0x9FE55ECF;
  LODWORD(STACK[0x520]) = LODWORD(STACK[0x364]) ^ 0xB8B43950;
  LODWORD(STACK[0x250]) = v123 - 1;
  v131 = v130 ^ v69 ^ v86 ^ v85 ^ v100 ^ v120 ^ v124 & 0xFFFFFFF0;
  LODWORD(STACK[0x240]) = v131;
  LODWORD(STACK[0x394]) = v131 ^ 0x15E7AEC6;
  v132 = LODWORD(STACK[0x244]) ^ 0x28;
  LODWORD(STACK[0x668]) = LODWORD(STACK[0x530]) ^ 0x90C31DE9;
  v133 = LODWORD(STACK[0x374]) ^ 2;
  LODWORD(STACK[0x670]) = LODWORD(STACK[0x570]) ^ 0x32959A43;
  v134 = LODWORD(STACK[0x298]) ^ LODWORD(STACK[0x36C]) ^ 0x8D6C5169;
  LODWORD(STACK[0x4B0]) = v72;
  LODWORD(STACK[0x660]) = v72 ^ 0xF727DBA8;
  v135 = STACK[0xB58];
  LODWORD(STACK[0x5C0]) = v68 - 1036;
  v136 = (v68 - 1515228593) ^ 0xA5AF7813;
  v137 = 2 * ((v136 & STACK[0x5F0]) - ((2 * (v136 & STACK[0x5F0])) & 0x56406AD8)) + 1447062232;
  v138 = ((v137 ^ 0x56406AD8) + 188199512 - 2 * ((v137 ^ 0x56406AD8) & 0xB37B25C ^ v137 & 4)) ^ 0xA5AF7813;
  v139 = (v138 ^ 0xAE98CA4B) & STACK[0x668];
  v140 = (((((v139 - ((2 * v139) & 0x60) + 48) & 0xF5 ^ 0x37C969D5) & 0x1A1)
         - 844003329
         + ((((v139 - ((2 * v139) & 0x60) + 48) & 0xF5 ^ 0x37C969D5) & 0x5E | v139 & 0xA) ^ 0x82045)) ^ 0xCDB9A9A1) >> LODWORD(STACK[0x678]);
  v141 = (v140 - ((2 * v140) & 0xC) - 122) ^ 0xFFFFFF86 | (((v138 ^ 0x4B) << v133)
                                                         - 8 * ((v138 ^ 0x4B) << v133 >> 2)
                                                         + 124) ^ 0x7C;
  v142 = (2 * ((STACK[0x608] & 0x1AB4AEAE) - ((2 * (STACK[0x608] & 0x1AB4AEAE)) & 0x4EC178E4)) - 826181404) ^ 0xCEC178E4;
  v143 = (v142 - ((2 * v142) & 0xCDD10898) + 1726514252) ^ 0x7C5C2AE2;
  v144 = (((v143 & STACK[0x670]) + 370888427 - ((2 * (v143 & STACK[0x670])) & 0x2C369DD6)) ^ 0x161B4EEB) >> LODWORD(STACK[0x680]);
  v145 = (((v143 & STACK[0x660]) + 1568415224 - ((2 * (v143 & STACK[0x660])) & 0xBAF83BF0)) ^ 0x5D7C1DF8) << LODWORD(STACK[0x640]);
  v146 = 4 * (v132 ^ (v141 - ((2 * v141) & 0x20) - 112));
  *(_DWORD *)(STACK[0xB30] + v146) = LODWORD(STACK[0x5E0]) ^ LODWORD(STACK[0x5D0]) ^ (v145
                                                                                    - ((2 * v145) & 0x1D314FD8)
                                                                                    - 1902598164) ^ (v144 - ((2 * v144) & 0x7A2C08D0) + 1024853096) ^ 0x4045C015;
  *(_DWORD *)(v135 + v146) = v134 ^ 0xA1F699C6;
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[(31
                                                           * (((v136 - 1515227557 - ((2 * v136 + 2) & 0x4B5EF026) + 441) ^ 0xA5AF7800) > 0xFF)) ^ v68]
                                          - 8))(3468785892);
}

#error "18CAC9B7C: too big function (funcsize=0)"

uint64_t sub_18CADDD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((dword_1EE0569EC == 1197784504) * ((292 * (v7 ^ 0x92) - 1096) ^ (v7 - 29))) ^ v7))
                            - 4))();
}

uint64_t sub_18CADDDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v9;

  v9 = MEMORY[0x18D7894BC](0, &STACK[0x99C]);
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((223
                                          * ((((v7 + 45) ^ ((((v7 - 1540196730) & 0x5BCD8FCD ^ 0xFE736112) & (2 * v9))
                                                          + (v9 ^ 0x7F39B3EF) == 2134488047)) & 1) == 0)) ^ v7))
                            - 8))();
}

uint64_t sub_18CADDE6C()
{
  uint64_t v0;
  int v1;
  _BOOL4 v2;

  v2 = IOServiceMatching((const char *)&STACK[0x15E1]) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((v2 * (v1 + 1086)) ^ v1)) - 8))();
}

uint64_t sub_18CADDE9C(const __CFDictionary *a1)
{
  uint64_t v1;
  int v2;
  kern_return_t MatchingServices;

  MatchingServices = IOServiceGetMatchingServices(STACK[0x99C], a1, (io_iterator_t *)&STACK[0xA2C]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1570
                                          * (((2 * MatchingServices) & 0xEEEEEFF2) + (MatchingServices ^ 0x777777F9) == 2004318201)) ^ v2))
                            - ((77 * (v2 ^ 0xA4) + 451745605) & 0xE512EEED)
                            + 1733))();
}

uint64_t sub_18CADDF14()
{
  uint64_t v0;
  int v1;
  io_object_t v2;

  v2 = IOIteratorNext(STACK[0xA2C]);
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((930
                                * (((v1 ^ (((2 * v2) & 0xEFF9BEDC) + (v2 ^ ((v1 ^ 0x657) + 2013059233)) == 2013060974)) & 1) == 0)) ^ v1)))();
}

uint64_t sub_18CADDF78@<X0>(int a1@<W8>)
{
  int v1;
  kern_return_t v2;

  v2 = IOServiceOpen(a1 + (((v1 ^ 0x438) - 1058) | 0x64D) - 2013062715, *MEMORY[0x1E0C83DA0], 0, (io_connect_t *)&STACK[0x9FC]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(108 * (((2 * v2) & 0x7DFFFEFE) + (v2 ^ 0x3EFFFF7F) == 1056964479)) ^ v1 ^ 0x438]
                            - 12))();
}

uint64_t sub_18CADDFFC()
{
  io_object_t v0;
  int v1;
  uint64_t v2;

  dword_1EE0569EC = (v1 ^ 0x26F ^ LODWORD(STACK[0x9FC]) ^ 0x47F7FB70)
                  + ((2 * LODWORD(STACK[0x9FC])) & 0x8FEFFB7A)
                  - 9650181;
  IOObjectRelease(v0);
  v2 = IOObjectRelease(STACK[0xA2C]);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[((dword_1EE0569EC == 1197784504)
                                                           * ((146 * (v1 ^ 0x4AA)) ^ 0x2F9)) ^ ((v1 ^ 0x26F) - 1591)]
                                          - 4))(v2);
}

void sub_18CADE0A4()
{
  unint64_t v0;

  STACK[0x8A0] = v0;
  JUMPOUT(0x18CADE60CLL);
}

uint64_t sub_18CADE0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  __int16 v8;
  uint64_t v9;
  int v10;
  _OWORD *v11;
  char *v12;

  v11 = (_OWORD *)(STACK[0x648] + 17);
  v12 = (char *)&STACK[0xBB0] + v9;
  *(_DWORD *)v12 = v10 ^ 0x765D19C3;
  *((_WORD *)v12 + 2) = v8 - 13854;
  *(_OWORD *)((char *)&STACK[0xBB0] + v9 + 6) = *v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((543 * (((v7 + 136739231) & 0xF7D983FE ^ 0x21ELL) == 16)) ^ v7))
                            - 8))();
}

uint64_t sub_18CADE13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return (*(uint64_t (**)(void))(a7 + 8 * (((v7 - 133) * (v8 != 1164808565)) ^ v7)))();
}

uint64_t sub_18CADE164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((v9 ^ 0x2A9)
                                * ((v10 | ((unint64_t)(v10 < v8) << 32)) != 1164808565)) | v7)))();
}

uint64_t sub_18CADE1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;

  v14 = v10 < v8;
  *(_BYTE *)(v12 + v9 - 0x3FC4A616BA58A379) = *((_BYTE *)&STACK[0xBB0] + v11 - 0x5B21EAA23382D7BFLL) - 40;
  if (v14 == v13 - 0x6B477BDC80FE3E06 < v8)
    v14 = v13 - 0x6B477BDC80FE3E06 < v10;
  return (*(uint64_t (**)(void))(a7 + 8 * (v7 | (16 * v14))))();
}

uint64_t sub_18CADE274@<X0>(_DWORD *a1@<X2>, void *a2@<X4>, uint64_t a3@<X6>, int a4@<W8>)
{
  int v4;
  unint64_t v5;
  int v6;
  kern_return_t v8;
  unint64_t v9;
  _BOOL4 v10;

  a1[30] = v6 - 1164808565;
  STACK[0x750] = 16;
  v8 = IOConnectCallStructMethod(a4 - 1197784504, 0x20u, a1, 0x7CuLL, a2, &STACK[0x750]);
  v9 = STACK[0x750];
  STACK[0x8A0] = v5;
  v10 = v9 == ((v4 + 972) | 0x48u) - 1725 && v8 == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((1622 * v10) ^ v4)) - 12))();
}

uint64_t sub_18CADE300()
{
  int v0;
  _BOOL4 v2;

  v2 = (*(_DWORD *)(STACK[0x688] + 96) & 2) == ((((v0 - 1610570414) | 0x4B14390) + 1531845054) ^ 0x559)
    || LODWORD(STACK[0x82C]) != 458470046;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(466 * v2) ^ (v0 + 581)] - 4))();
}

uint64_t sub_18CADE3E8()
{
  int v0;
  _BYTE *v1;
  _BOOL4 v2;

  STACK[0x850] = 256;
  v1 = (_BYTE *)STACK[0x688];
  LOBYTE(STACK[0xC00]) = *(_BYTE *)(STACK[0x688] + 12) ^ 0x35;
  LOBYTE(STACK[0xC01]) = v1[13] ^ 0x35;
  LOBYTE(STACK[0xC02]) = v1[14] ^ 0x35;
  LOBYTE(STACK[0xC03]) = v1[15] ^ 0x35;
  LOBYTE(STACK[0xC04]) = v1[16] ^ 0x35;
  LOBYTE(STACK[0xC05]) = v1[17] ^ 0x35;
  LOBYTE(STACK[0xC06]) = v1[18] ^ (((v0 + 72) | 4) - 112);
  LOBYTE(STACK[0xC07]) = v1[19] ^ 0x35;
  LOBYTE(STACK[0xC08]) = v1[20] ^ 0x35;
  LOBYTE(STACK[0xC09]) = v1[21] ^ 0x35;
  LOBYTE(STACK[0xC0A]) = v1[22] ^ 0x35;
  LOBYTE(STACK[0xC0B]) = v1[23] ^ 0x35;
  LOBYTE(STACK[0xC0C]) = v1[24] ^ 0x35;
  LOBYTE(STACK[0xC0D]) = v1[25] ^ 0x35;
  LOBYTE(STACK[0xC0E]) = v1[26] ^ 0x35;
  LOBYTE(STACK[0xC0F]) = v1[27] ^ 0x35;
  LOBYTE(STACK[0xC10]) = v1[28] ^ 0x35;
  LOBYTE(STACK[0xC11]) = v1[29] ^ 0x35;
  LOBYTE(STACK[0xC12]) = v1[30] ^ 0x35;
  LOBYTE(STACK[0xC13]) = v1[31] ^ 0x35;
  LOBYTE(STACK[0xC14]) = v1[32] ^ 0x35;
  LOBYTE(STACK[0xC15]) = v1[33] ^ 0x35;
  LOBYTE(STACK[0xC16]) = v1[34] ^ 0x35;
  LOBYTE(STACK[0xC17]) = v1[35] ^ 0x35;
  LOBYTE(STACK[0xC18]) = v1[36] ^ 0x35;
  LOBYTE(STACK[0xC19]) = v1[37] ^ 0x35;
  LOBYTE(STACK[0xC1A]) = v1[38] ^ 0x35;
  LOBYTE(STACK[0xC1B]) = v1[39] ^ 0x35;
  LOBYTE(STACK[0xC1C]) = v1[40] ^ 0x35;
  LOBYTE(STACK[0xC1D]) = v1[41] ^ 0x35;
  LOBYTE(STACK[0xC1E]) = v1[42] ^ 0x35;
  LOBYTE(STACK[0xC1F]) = v1[43] ^ 0x35;
  v2 = aks_absinthe_generate(1u, STACK[0xAC0], (LODWORD(STACK[0x82C]) - 458470030), (uint64_t)&STACK[0xC00], 32, (void *)STACK[0x900], &STACK[0x850]) == 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(171 * v2) ^ v0] - 4))();
}

void sub_18CADE5E8()
{
  STACK[0x688] = STACK[0x958];
  JUMPOUT(0x18CADE5F4);
}

uint64_t sub_18CADE61C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  __int16 v3;
  unsigned int v4;
  int v5;

  *(_DWORD *)a1 = 2023518720;
  *(_QWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1279805853;
  *(_QWORD *)(a1 + 64) = 0x4E36C53A99817805;
  *(_DWORD *)(a1 + 72) = 286036353;
  *(_BYTE *)(a1 + 8) = (v4 >> (((v5 ^ 0x89) - 82) ^ 0xD5)) ^ 0x9E;
  *(_BYTE *)(a1 + 9) = (23 * (v5 ^ 0x89) - 78) ^ BYTE2(v4);
  *(_BYTE *)(a1 + 10) = BYTE1(v4) ^ 0xCD;
  *(_BYTE *)(a1 + 11) = v4 ^ 0xCD;
  *(_WORD *)(a1 + 92) = v3;
  *(_DWORD *)(a1 + 96) = v2;
  *(_QWORD *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 1494274718;
  *(_QWORD *)(a1 + 120) = 0x6262E0568D5240A8;
  *(_QWORD *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 144) = 495404763;
  *(_DWORD *)(a1 + 128) = 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (v5 ^ (400 * ((v2 - 2038988233) > 6)))))();
}

uint64_t sub_18CADE71C@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1680 * (STACK[0xA58] != 0)) ^ (a1 - 1582))) - 12))();
}

uint64_t sub_18CADE748()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v3 + 4) = dword_18CF4EA70[v1];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((74 * (v0 ^ 0x2DA)) ^ 0x88)) - (74 * (v0 ^ 0x2DAu) - 693) + 709))();
}

uint64_t sub_18CADE7C0()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(qword_1E2538EC0[((v1 < v0 - 1741) * ((v0 - 1500) ^ 0x392)) ^ (v0 - 290)] - 8))();
}

uint64_t sub_18CADE7FC@<X0>(int a1@<W1>, char a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)(((a3 & ~((((v5 - a5) | (a5 - v5)) >> ((a5 ^ (a2 + 41)) + 82)) ^ (a1 + a5 - 1)))
                                               * a4) ^ (a1 + a5 + 267)))
                            - 12))();
}

uint64_t sub_18CADE840(unsigned int a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  char v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned __int8 v15;
  int v16;

  v16 = (v10 + 108) | 0x462;
  *(_BYTE *)(v11 + (v13 - 885716705)) = (v16
                                                     - a2
                                                     + 50
                                                     + ((v9 ^ a1) >> (v8 + a2))
                                                     + ((v16 - 101) ^ a7)
                                                     - (a8 & (2 * ((v9 ^ a1) >> (v8 + a2))))
                                                     + 112) ^ v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((509
                                          * (v13
                                           - ((v16
                                                              - a2
                                                              + 50
                                                              + ((v9 ^ a1) >> (v8 + a2))
                                                              + ((v16 - 101) ^ a7)
                                                              - (a8 & (2 * ((v9 ^ a1) >> (v8 + a2))))
                                                              + 112) != v15) == v12)) ^ v16))
                            - 12))();
}

uint64_t sub_18CADF8D0@<X0>(int a1@<W1>, char a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  return sub_18CADE7FC(a1, a2, a3, a4, a5);
}

uint64_t sub_18CADF8D8()
{
  unint64_t v0;

  STACK[0x9F0] = v0;
  STACK[0xAA8] = STACK[0x678];
  return ((uint64_t (*)(unint64_t))STACK[0x428])(STACK[0x430]);
}

uint64_t sub_18CADF8F4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((((((v0 - 1255) | 0x85) ^ 0xFFFFFA24) + 349 * (v0 ^ 0x505))
                                               * (*(_DWORD *)(v2 + 4) == -1223708077)) ^ v0))
                            - 12))();
}

uint64_t sub_18CADF944()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  BOOL v6;

  v4 = v0;
  STACK[0xA90] = v2;
  STACK[0x6F8] = v3;
  v5 = STACK[0x8A0];
  STACK[0x708] = (unint64_t)&STACK[0xBB0] + STACK[0x8A0];
  STACK[0x8A0] = v5 + 16;
  STACK[0x7F8] = 0;
  STACK[0x9B8] = 0;
  LODWORD(STACK[0x8EC]) = 495404763;
  STACK[0x6E8] = 1;
  v6 = container_system_group_path_for_identifier() == 0;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 ^ 0xEF ^ v6) & 1) * ((v1 - 1577170293) & 0x5E01B6CD ^ 0x616)) ^ v1)))();
}

uint64_t sub_18CADF9E4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((51 * (STACK[0x6E8] == 1)) ^ v0))
                            - (v0 + 562)
                            + 1737))();
}

uint64_t sub_18CADFA14()
{
  const char *v0;
  int v1;
  size_t v2;
  BOOL v3;

  v2 = strlen(v0);
  v3 = malloc_type_malloc(((2 * v2) & 0xFE9D6DFFF8F9FBACLL) + (v2 ^ 0xFF4EB6FFFC7CFDD6) + 0xB1490003830247, 0xAE21939FuLL) == 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(760 * ((v3 ^ (v1 + 98)) & 1)) ^ v1] - 4))();
}

uint64_t sub_18CADFAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(a3 + 8 * ((v4 + 419) ^ (107 * (v3 == 0xFF4EB6FFFC7CFDD6)))))();
}

uint64_t sub_18CADFB30@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = v3 < v4;
  *(_BYTE *)(v7 + v10 - 0x4D3A09D04695911ALL) = *(_BYTE *)(v6 + v9 - 0x6B822E0319913C21);
  if (v11 == v8 - 0x1C74F948877CCC94 < v2)
    v11 = v8 - 0x1C74F948877CCC94 < v3;
  return (*(uint64_t (**)(void))(a1 + 8 * ((!v11 * v5) ^ a2)))();
}

uint64_t sub_18CADFBC8()
{
  void *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  int v4;
  FILE *v5;

  strcpy(&v2[v3 + v1], "/Library/ProvenanceV2/psc.id");
  free(v0);
  v5 = fopen(v2, "rb");
  free(v2);
  return ((uint64_t (*)(void))(qword_1E2538EC0[((16 * (((v4 - 25) ^ (v5 == 0)) & 1)) & 0xBF | ((((v4 - 25) ^ (v5 == 0)) & 1) << 6)) ^ v4]
                            - (v4 + 1110)
                            + 1392))();
}

uint64_t sub_18CADFC84()
{
  int v0;
  FILE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;

  fseek(v1, 0, 2);
  v2 = MEMORY[0x18D789F78](v1);
  v3 = v2 - ((2 * (_DWORD)v2) & 0x7FB63C92) + 0x1BFDB1E49;
  v4 = ((v3 & ((v0 - 1214) ^ 0xFFFFFF49) ^ 0x15B7BF99)
      + ((v0 + 1479754377) & 0xA7CCBECF ^ 0x3C995984820806EFLL ^ v3 & 0x93390523)
      - ((v3 & ((v0 - 1214) ^ 0xFFFFFF49) ^ 0x15B7BF99) & 0x93390523)) ^ 0x4D34924317585A3;
  v5 = (v4 | 0x348BAD5A8E7DAE95) - (v4 | 0xCB7452A57182516ALL) - 0x348BAD5A8E7DAE96;
  fseek(v1, 0, 0);
  v6 = malloc_type_malloc(v5 ^ 0xCC1BDFA865D8FC5, 0xFAA3BBA4uLL);
  STACK[0x7F8] = (unint64_t)v6;
  return ((uint64_t (*)(void))qword_1E2538EC0[(((v6 != 0) << 8) | ((v6 != 0) << 9)) ^ v0])();
}

uint64_t sub_18CADFDC8(void *a1)
{
  FILE *v1;
  size_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  LODWORD(STACK[0x688]) = 546355592;
  LODWORD(STACK[0x680]) = 50950829;
  v5 = fread(a1, 1uLL, v2, v1);
  v6 = v4 ^ 0x41D ^ (v5 - 1440368279 - ((2 * v5) & 0x544B72D2u)) ^ 0x208806082AF35BC1;
  v7 = ((2 * v6) & 0x1100410C6C82F9ALL) - v6 + 0x37603D039C9BE832;
  STACK[0x678] = v7 ^ 0xFB78FB1BC823E46BLL;
  return ((uint64_t (*)(void))qword_1E2538EC0[(915 * ((v7 ^ 0xFB78FB1BC823E46BLL ^ v3) == 0xE0517DEA5233659FLL)) ^ v4])();
}

uint64_t sub_18CADFEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  int v7;

  return (*(uint64_t (**)(void))(a6 + 8 * (((*v6 == 1) * (((v7 + 843) | 0xAA) ^ 0x535)) ^ v7)))();
}

uint64_t sub_18CADFF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;

  return (*(uint64_t (**)(uint64_t))(a6
                                            + 8
                                            * (int)((((v7 + 91556117) & 0xFA8AF6BE ^ ((v7 - 45) | 0x422) ^ 0x136)
                                                   * ((v6 ^ 0x17E83B0B1C4D0E31uLL) > 1)) ^ v7)))(0xFE18453BD02C913);
}

uint64_t sub_18CADFFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(_QWORD, unint64_t))(a6
                                                             + 8
                                                             * ((23
                                                               * (*(unsigned __int8 *)(v9 + a1 + v7) != (((((2 * v8) ^ 0xA2) - 4) & 0xFA | 4) ^ 0xB4))) ^ v8)))((v6 - 1259088347), (unint64_t)((v6 - 1259088347) < 0x1491AAC4) << 32);
}

uint64_t sub_18CAE0010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;

  v14 = a2 + a1 + v7 + v13 + 0xE11204C9075D11BLL;
  v15 = (((v12 - 44 + *(unsigned __int8 *)v14 - ((*(unsigned __int8 *)v14 << (v12 + 75)) & 0x9C)) << 8) + 17408) ^ 0xFFFFCE00;
  LOWORD(v14) = (v15 - ((2 * v15) & 0xD200) + 27001) ^ 0x6979 | (*(unsigned __int8 *)(v14 + 1)
                                                               - ((2 * *(unsigned __int8 *)(v14 + 1)) & 0x1E4)
                                                               + 24050) ^ 0x5DF2;
  LODWORD(v14) = (unsigned __int16)(v14 - ((2 * v14) & 0x9FB0) + 20440) ^ 0x4FD8;
  v16 = v6 + (v14 ^ 0x7BDBFEFB) + ((v10 + 512) & (2 * (_DWORD)v14)) - 2078015224;
  return (*(uint64_t (**)(void))(a6
                              + 8
                              * ((1303
                                * (v11 > (v16 | ((unint64_t)(v16 < v9) << 32))
                                       + 0xFE184535D64F472
                                       + v8)) ^ v12)))();
}

uint64_t sub_18CAE0130()
{
  int v0;
  void *v1;

  STACK[0x978] = 0x19F0AA8D777D8E1DLL;
  v1 = malloc_type_malloc(0x15uLL, 0x1EF50C9BuLL);
  STACK[0xA58] = (unint64_t)v1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(341 * ((((v0 ^ 0xB9) + 1) ^ (v1 == 0)) & 1)) ^ v0]
                            - 12))();
}

uint64_t sub_18CAE067C(_BYTE *a1)
{
  int v1;
  _BYTE *v2;
  unint64_t v4;

  sub_18CBC7AC0(byte_18CF26900, (char *)&STACK[0xBC0], 0x10uLL);
  *a1 = ((v2[4] & 0x7F ^ 0xD7) - ((2 * (v2[4] & 0x7F ^ 0xD7)) & 0x72) - 71) ^ 0xB9;
  a1[1] = v2[12] ^ 0x35;
  a1[2] = (69 * (v1 ^ 0x23)) ^ v2[13] ^ 0x6C;
  a1[3] = v2[14] ^ 0x35;
  a1[4] = v2[15] ^ 0x35;
  a1[5] = v2[16] ^ 0x35;
  a1[6] = v2[17] ^ 0x35;
  a1[7] = v2[18] ^ 0x35;
  a1[8] = v2[19] ^ 0x35;
  a1[9] = v2[20] ^ 0x35;
  a1[10] = v2[21] ^ 0x35;
  a1[11] = v2[22] ^ 0x35;
  a1[12] = v2[23] ^ 0x35;
  a1[13] = v2[24] ^ 0x35;
  a1[14] = v2[25] ^ 0x35;
  a1[15] = v2[26] ^ 0x35;
  a1[16] = v2[27] ^ 0x35;
  a1[17] = v2[8] ^ 0x33;
  a1[18] = v2[9] ^ 0x33;
  a1[19] = v2[10] ^ 0x33;
  a1[20] = v2[11] ^ 0x33;
  v4 = STACK[0xA58] + 1;
  STACK[0xAD0] += 32;
  LODWORD(STACK[0xAFC]) = 0;
  STACK[0xAE8] = v4;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(13 * (v4 == 0)) ^ v1] - 4))();
}

void sub_18CAE0814()
{
  JUMPOUT(0x18CAE7C28);
}

uint64_t sub_18CAE081C()
{
  int v0;
  unint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;
  unint64_t v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;

  STACK[0x690] = v1;
  STACK[0xAE0] = 0;
  STACK[0xB10] = 0;
  STACK[0xB08] = 0;
  STACK[0xAD8] = 0;
  STACK[0xB00] = 0;
  STACK[0xB18] = 0;
  v2 = LOBYTE(STACK[0xBC4]);
  STACK[0xB20] = 0;
  v3 = (v2 ^ 0x3D) - ((2 * (v2 ^ 0x3D)) & 0x12) + 854290441;
  v4 = (v3 ^ 0xCD148F9B) + 1;
  v3 ^= 0x32EB7009u;
  v5 = v3 + (v4 ^ 0x7F99F573) + ((2 * v4) & 0xFF33EAE6) - 2140796275;
  LOBYTE(v2) = ((v2 ^ 0xD8) - ((2 * (v2 ^ 0xD8) + 54) & 0xEF) + 18) ^ v2 ^ ((v2 ^ 0xC2)
                                                                          - ((2 * (v2 ^ 0xC2) + 2) & 0xF4)
                                                                          - 5);
  LODWORD(STACK[0xAFC]) = -1879803947;
  v6 = byte_18CF4CE70[((v5 + 1332117162 - ((2 * v5) & 0x9ECD1A1C) + 3684) ^ 0xB09972F0) + v3];
  v7 = byte_18CF2E2B0[LOBYTE(STACK[0xBCD]) ^ 0x9CLL];
  v8 = ((v2 ^ 0x30) + (~(2 * v2 + 4) | 0xF9) + 30);
  v9 = (v7 - ((2 * v7 + 126) & 0xDC) - 83) ^ 0xA2;
  v10 = ((v9 - ((2 * v9) & 0xD0)) << 16) + 90701824;
  v11 = byte_18CF4FD30[LOBYTE(STACK[0xBC2]) ^ 0x46];
  v12 = byte_18CF38430[LOBYTE(STACK[0xBCF]) ^ 0x32] ^ 0x3D;
  v13 = ((v10 ^ 0x5680000) - ((2 * v10) & 0x15240000) - 896378602) ^ 0xCA925916 | (v12 - ((2 * v12) & 0x15C) - 404084050) ^ 0xE7EA2AAE;
  v14 = ((((v6 ^ v8 ^ 0x41) - ((2 * (v6 ^ v8)) & 0x34)) << 24) - 1711276032) ^ 0x9A000000;
  v15 = byte_18CF2E2B0[LOBYTE(STACK[0xBC5]) ^ 0x73];
  v16 = v11 ^ 0xCE ^ (((16 * v11) ^ 0x79) - 6);
  v17 = (((v16 - ((2 * v16) & 0x1A0) + 12728301) << 8) - 7424) ^ 0xC237D000;
  v18 = byte_18CF38430[LOBYTE(STACK[0xBC3]) ^ 0x95] ^ 0x3D;
  v19 = (v17 - ((2 * v17) & 0x115B9800) - 928134120) ^ 0xC8ADCC18 | (v18 - ((2 * v18) & 0x1E8) - 94012940) ^ 0xFA6579F4;
  HIDWORD(v21) = v15 + 1;
  LODWORD(v21) = (v15 << 24) - 1090519040;
  v20 = v21 >> 25;
  v22 = v20 - 101;
  v23 = (2 * v20) & 0x34;
  HIDWORD(v21) = (~v23 + v22) ^ 0x1A;
  LODWORD(v21) = (v23 - v22) << 24;
  v24 = ((((((v21 >> 31) - ((2 * (v21 >> 31)) & 0x30) + 24) ^ 0x10)
         - ((2 * (((v21 >> 31) - ((2 * (v21 >> 31)) & 0x30) + 24) ^ 0x10)) & 0x70)) << 16)
       - 1539833856) ^ 0xA4380000;
  v25 = (v24 - ((2 * v24) & 0x72220000) + 957470611) ^ 0x3911D793 | (v14 - ((2 * v14) & 0x16000000) - 1946429871) ^ 0x8BFBD651;
  v26 = v25 - ((2 * v25) & 0xE3686C18);
  v27 = byte_18CF2E2B0[LOBYTE(STACK[0xBC1]) ^ 0x99];
  v28 = v27 + (~(2 * v27 + 126) | 0x6B) + 10;
  v29 = LOBYTE(STACK[0xBC8]) ^ 0x83 ^ byte_18CF4CE70[LOBYTE(STACK[0xBC8]) ^ 9];
  v30 = (((v29 - ((2 * v29) & 0x46)) << 24) + 587202560) ^ 0x23000000;
  v31 = (((v28 ^ 0x44) - ((2 * v28) & 0x10)) << 16) + 1745354752;
  v32 = byte_18CF38430[LOBYTE(STACK[0xBC7]) ^ 0xD0];
  v33 = ((v31 ^ 0x68080000) - ((2 * v31) & 0x27680000) + 1404356581) ^ 0x53B4C7E5 | (v19
                                                                                   - ((2 * v19) & 0x595848E6)
                                                                                   - 1398004621) ^ 0xACAC2473;
  v34 = v33 - ((2 * v33) & 0x2054AD6E);
  v35 = (v32 ^ 0x3D) - 78;
  v36 = byte_18CF38430[LOBYTE(STACK[0xBCB]) ^ 0xDLL] ^ 0x3D;
  v37 = (v30 - ((2 * v30) & 0x72000000) - 1175254943) ^ 0xB9F30861 | (v36 - ((2 * v36) & 0x138) - 1603867236) ^ 0xA066ED9C;
  v38 = (((2 * v32) ^ 0x7A) + 65) & 0x64;
  v39 = v34 + 271210167;
  v40 = (v35 ^ 0xC7) + ((2 * v35) & 0x8E) + (v38 ^ 0x53) + ((2 * v38) ^ 0x7F) + 39;
  v41 = byte_18CF4FD30[LOBYTE(STACK[0xBC6]) ^ 0x72];
  v42 = (v26 - 239847924) ^ 0xF1B4360C | (v40 - ((2 * v40) & 0xE6) + 591043187) ^ 0x233A9A73;
  v43 = v41 ^ 0xB6 ^ (((16 * v41) ^ 0x70) - ((2 * ((16 * v41) ^ 0x70)) & 0x40) + 32);
  v44 = (((v43 - ((2 * v43) & 0x48)) << 8) - 1967447040) ^ 0x8ABB2400;
  v45 = byte_18CF2E2B0[LOBYTE(STACK[0xBC9]) ^ 0x73];
  v46 = (v42 - ((2 * v42) & 0x3AB8A740) - 1654893664) ^ 0x9D5C53A0 | (v44 - ((2 * v44) & 0x889E200) + 1145368902) ^ 0x4444F146;
  v47 = byte_18CF4FD30[LOBYTE(STACK[0xBCE]) ^ 0x46];
  v48 = ((16 * v47) ^ 0xFFFFFFA0) - 32 * (v47 & 1) - 112;
  v49 = (((((((2 * v45 + 126) & 0xE8) - v45 - 52) ^ 0x83)
         - ((2 * ((((2 * v45 + 126) & 0xE8) - v45 - 52) ^ 0x83)) & 0x186)) << 16)
       + 113442816) ^ 0x6C30000;
  v50 = (v49 - ((2 * v49) & 0x5BA60000) - 304911902) ^ 0xEDD369E2 | (v37 - ((2 * v37) & 0xD3977900) + 1774959744) ^ 0x69CBBC80;
  v47 ^= 0xFFFFFFCD;
  v51 = 2 * (((v48 ^ 0x40) & v47) - ((2 * ((v48 ^ 0x40) & v47)) & 0x12)) + 18;
  v52 = (((v48 ^ 0x40) + v47) ^ 0x65)
      + ((2 * ((v48 ^ 0x40) + v47)) & 0xCA)
      + (v51 ^ 0x9F)
      + ((2 * v51) & 0xE4 ^ 0xDB)
      + 15;
  v53 = (((v52 - ((2 * v52) & 0x112)) << 8) - 1331590912) ^ 0xB0A18900;
  v54 = LOBYTE(STACK[0xBC0]);
  v55 = byte_18CF4FD30[LOBYTE(STACK[0xBCA]) ^ 0x50];
  v56 = (v53 - ((2 * v53) & 0x5B77EE00) + 1841035104) ^ 0x6DBBF760 | (v13 - ((2 * v13) & 0x4CDE7292) + 644823369) ^ 0x266F3949;
  v57 = LOBYTE(STACK[0xBCC]) ^ 0x13 ^ byte_18CF4CE70[LOBYTE(STACK[0xBCC]) ^ 0xELL];
  v58 = (((v57 - ((2 * v57) & 0x9A)) << 24) - 855638016) ^ 0xCD000000;
  v59 = (v56 - ((2 * v56) & 0xDDDE610) - 957418744) ^ 0xC6EEF308 | (v58 - ((2 * v58) & 0x9FFFFFFF) - 812239916) ^ 0xCF9633D4;
  LODWORD(STACK[0x590]) = v59 - ((2 * v59) & 0x6E133012) - 1224108023;
  v60 = byte_18CF4CE70[v54 ^ 0xB0];
  v61 = ((((v55 ^ 0xCB ^ (((16 * v55) ^ 0x70) - ((2 * ((16 * v55) ^ 0x70)) & 0xA0) + 83))
         - ((2 * (v55 ^ 0xCB ^ (((16 * v55) ^ 0x70) - ((2 * ((16 * v55) ^ 0x70)) & 0xA0) + 83))) & 0x180)) << 8)
       + 793362432) ^ 0x2F49C000;
  v62 = (v61 - ((2 * v61) & 0x9FA1400) - 2063791602) ^ 0x84FD0A0E | (v50 - ((2 * v50) & 0xE35629BC) + 1907037406) ^ 0x71AB14DE;
  LODWORD(STACK[0x678]) = (2 * v62) & 0x9009B4F6;
  LODWORD(STACK[0x670]) = v62 - 939206021;
  v63 = ((((v54 ^ 0xEA ^ v60) - ((2 * (v54 ^ 0xEA ^ v60)) & 0x62)) << 24) - 1325400064) ^ 0xB1000000;
  v64 = v63 - ((2 * v63) & 0x44444444) + 576259460;
  LODWORD(STACK[0x5D0]) = v64;
  LODWORD(STACK[0x5B0]) = v64 ^ 0x22590584;
  v65 = v64 ^ 0x22590584 | v39 ^ 0x102A56B7;
  LODWORD(STACK[0x688]) = (2 * v65) & 0xD61878FE;
  LODWORD(STACK[0x680]) = v65 - 351519617;
  LODWORD(STACK[0x4F0]) = (v46 - ((2 * v46) & 0xB3791440) - 641955296) ^ 0x6A04A9C2;
  v66 = *(unsigned __int8 *)STACK[0xAE8];
  LOBYTE(STACK[0xBB0]) = v66
                       + ((-2 * (((v0 ^ 0xDD) - 21) ^ 0xE6)) & 0x7C)
                       + ((-65 * (((v0 ^ 0xDD) - 21) ^ 0xE6)) ^ 0xBE)
                       - 83;
  v67 = (-1950399707 * ((v66 ^ 0xE7FEFEFF) + 2 * v66)
       - 93799706
       - 2
       * ((-1950399707 * ((v66 ^ 0xE7FEFEFF) + 2 * v66) + 153161604) & 0x596665F7 ^ (-1950399707
                                                                                   * ((v66 ^ 0xE7FEFEFF) + 2 * v66)
                                                                                   - 93799706) & 1)
       - 400639340) ^ 0xC726516C;
  v68 = ((v67 + 1363901570) ^ 0x86F5081)
      + ((v67 % 0x101) ^ 0x8EFFF55F)
      + ((2 * (v67 % 0x101)) & 0x2BE)
      - ((2 * (v67 + 1363901570)) & 0xEF215EFC)
      + 1;
  v69 = v68 - ((2 * v68 - 786336706) & 0x9F67AC14) - 1203466199;
  v70 = (v69 ^ ((v69 ^ 0xB04C29F5) - ((2 * (v69 ^ 0xB04C29F5) + 2) & 0x7BCF7DD0) + 1038597865) ^ ((v69 ^ 0x612CE48)
                                                                                                - 1235294274
                                                                                                - ((2
                                                                                                  * ((v69 ^ 0x612CE48) - 1235294274)) & 0x3B7A90EC)
                                                                                                - 1648539530) ^ 0xEFE92094)
      - 1235294275;
  v71 = (v70 - ((2 * v70) & 0xD914D8A4) + 1821011026) ^ 0x84AF9580;
  v72 = v71 - ((2 * v71 + 247228098) & 0xEEF6B272) + 2128186522;
  v73 = (v72 ^ 0x8884A6C6) - 400164397 - ((2 * ((v72 ^ 0x8884A6C6) - 400164397)) & 0xA5235046);
  HIDWORD(v21) = v72 ^ 0x777B5939;
  LODWORD(v21) = v72;
  v74 = (((v21 >> 31) ^ 0xFF7B6FFA)
       + 1724881600
       + ((2 * (v21 >> 31)) & 0xFEF6DFF4)
       + 1
       - ((2 * (((v21 >> 31) ^ 0xFF7B6FFA) + 1724881600 + ((2 * (v21 >> 31)) & 0xFEF6DFF4) + 1) - 1064895006) & 0xC1D9281C)
       + 1093669631) ^ v72 ^ 0xCCE96C80;
  return ((uint64_t (*)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))qword_1E2538EC0[v0 ^ 0x67])(v74 ^ 0xCC7FE076, 1602222075, (v73 - 762206173) ^ 0xF5D68839 ^ v74, 2399139167, 4157600684, 1844307839, 3688615678, 3195797173);
}

void sub_18CAE15AC()
{
  JUMPOUT(0x18CAE1224);
}

uint64_t sub_18CAE15B4(int a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;

  v5 = LODWORD(STACK[0x670]) - LODWORD(STACK[0x678]);
  LODWORD(STACK[0x5C0]) = v5;
  LODWORD(STACK[0x550]) = v5 ^ 0x8B8A9857 ^ (v4 + 1929141655);
  v6 = a1 ^ 0x9F27C539 ^ ((LOBYTE(STACK[0xBB0]) - 107)
                        - ((2 * (LOBYTE(STACK[0xBB0]) - 107)) & 0xFA)
                        + 1150607229);
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(60 * ((((v3 ^ 0x7AB78B3D) + 2058849085 - ((((v3 ^ 0x7AB78B3D) << (v4 + 6)) + 2) & 0xF56F167A) + 1) & 3) == 1)) ^ (v4 + 1929141655)]
                                                                                               - 4))(v6 - ((2 * v6 + 864704412) & 0xB7663488) + 1970816530, 250, a3, 1150607229, 2670183737, 864704412, 1970816530);
}

void sub_18CAE16E4()
{
  JUMPOUT(0x18CAE1630);
}

uint64_t sub_18CAE16EC()
{
  int v0;

  LODWORD(STACK[0x630]) = LODWORD(STACK[0x680]) - LODWORD(STACK[0x688]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(v0 + 31) ^ 0x7E] - 8))();
}

void sub_18CAE1A54()
{
  JUMPOUT(0x18CAE179CLL);
}

uint64_t sub_18CAE1A5C(int a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;

  v4 = ((v3 + (a1 ^ v3) - ((2 * (a1 ^ v3) + 2) & v1) + 1) ^ v3) % 3;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(957 * ((v4 ^ 0x7CFDEFFF) + 2 * v4 != 2097016831)) ^ (v2 - 221)] - 8))();
}

void sub_18CAE1B7C()
{
  JUMPOUT(0x18CAE1AC8);
}

uint64_t sub_18CAE1B8C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  int v193;
  int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  char v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  int v254;
  unsigned int v255;
  int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  int v263;
  int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  unint64_t v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  int v277;
  int v278;
  unsigned int v279;
  unsigned int v280;
  int v281;
  int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  int v319;
  int v320;
  unsigned int v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  void *v326;

  v6 = (v5 - 173) | 0x20u;
  STACK[0x670] = v6;
  v7 = 844964643 * (v2 ^ v4) - (((v6 + 616186907) * (v2 ^ v4)) & 0x2A67DFDA) - 1791758355;
  LODWORD(v6) = -1570454587 * v1 - ((1154058122 * v1 + 1914578826) & 0xAA1FD2DC) + 236911923;
  v8 = -134217728 * ((3 * (v2 ^ v4)) & 3) - 1946157056 * (v2 ^ v4) - 1928720963;
  v9 = -913864192 * v1 - ((51319808 * v1 + 72291328) & 0x63EA400) - 1589191224;
  v10 = ((2 * ((v8 ^ 0x8D0A0DBD) & 0xFC000000 | (v7 >> 6))) & 0xBFFFF9FE ^ 0x4A9997E)
      + (((v8 ^ 0x8D0A0DBD) & 0xFC000000 | (v7 >> 6)) ^ 0x5DAB3340);
  v11 = ((192114608 * (v0 ^ 0x6B249523) - ((384229216 * (v0 ^ 0x6B249523)) & 0x481347E0) - 1542872078) ^ 0xA409A3F2) & 0xFFFFFFF0 | ((-524863749 * (v0 ^ 0x6B249523) - ((24014326 * (v0 ^ 0x6B249523)) & 0xCE14E1Cu) - 2039437554) >> 28);
  v12 = ((2 * v11) & 0xAF27FBB6 ^ 0x10) + (v11 ^ 0xD793FDD3);
  v13 = ((-1365622360 * v3 - ((1563722576 * v3) & 0x894D4430) - 995712482) ^ 0xC4A6A21E) & 0xFFFFFFF8 | ((-170702795 * v3 - ((732336234 * v3) & 0x282627E0u) + 336794608) >> 29);
  v14 = v13 ^ 0x7FFBBAD5;
  v15 = (2 * v13) & 0xFFF775AA;
  v16 = ((2 * ((v9 ^ 0x831F53C8) & 0xFFFFFE00 | (v6 >> 23))) & 0x3F7BFFF8 ^ 0x350)
      + (((v9 ^ 0x831F53C8) & 0xFFFFFE00 | (v6 >> 23)) ^ 0x9FBDFE56);
  v17 = v12 + v14 + v15 - v16 + v10 - 668681334;
  v18 = ((-2123366400 * v17 - ((48234496 * v17 + 1889533952) & 0x8EA00000) + 2142135932) ^ 0xC75E667C) & 0xFFF00000 | ((741165079 * v17 - ((408588334 * v17 + 445863690) & 0x12665B70u) + 1182587197) >> 12);
  HIDWORD(v19) = v12 + 5;
  LODWORD(v19) = (-1279558367 * v12 - ((1735850562 * v12 - 973164662) & 0xF700DDC2) + 1585432230) ^ 0xFB806EE0;
  v20 = ((2 * v18) & 0x6FDE3DAC ^ 0x102424) + (v18 ^ 0x37E78DE4);
  LODWORD(v6) = (v19 >> 5) - ((2 * (v19 >> 5)) & 0x6C4BCECE) - 1239029913;
  v21 = ((377029380 * v10 - ((754058760 * v10 + 50601480) & 0x31D8C930) - 1704037473) ^ 0x98EC649B) & 0xFFFFFFFC | ((((-1958968958 * v10 - 2134833278) & 0x8C55A8B2) + 979484479 * v10 - 109795355) >> 30);
  v22 = ((2 * v21) & 0xFFFF7FFF) + (v21 ^ 0xFFFFBFFF);
  v23 = 1337753485 * (v6 ^ 0xB625E767) - ((528023322 * (v6 ^ 0xB625E767)) & 0x35ABBDFE) - 1697259777;
  v24 = 71091677 * v22 - ((142183354 * v22 + 728239034) & 0x2DAF54DC) - 863260597;
  v25 = ((-2019103020 * v16 - ((256761256 * v16 + 1653044896) & 0x75963F90) - 334570726) ^ 0xBACB1FCA) & 0xFFFFFFFC | ((1642707893 * v16 - ((1137932138 * v16 + 413261224) & 0x5CADAF6C) + 2057815690) >> 30);
  v26 = ((2 * v25) & 0xEE67EBF6 ^ 4) + (v25 ^ 0x7733F5F9) + v20;
  v27 = (v6 ^ 0x882B3B79 ^ (v26 - ((2 * v26 + 565827166) & 0x7C1DB83C) - 1897150643)) - v22 - 16385;
  v28 = v27 ^ 0x7FDF682F;
  v29 = -1146936625 * (((2 * v27) & 0xFFBED05E) + (v27 ^ 0x7FDF682F))
      - ((2001094046 * (((2 * v27) & 0xFFBED05E) + (v27 ^ 0x7FDF682F)) + 120522750) & 0x734AB212)
      - 46342904;
  v30 = -141561440 * (v6 ^ 0xB625E767) - ((-283122880 * (v6 ^ 0xB625E767)) & 0x9846E580) + 1277391561;
  v31 = 2112093288 * (v6 ^ 0xB625E767) - ((-70780720 * (v6 ^ 0xB625E767)) & 0xB0C0B580) + 1482709696;
  v32 = (-774594648 * v20 - ((-1549189296 * v20 + 258585376) & 0x9274EE50) + 1357861052) ^ 0xC93A772C;
  v33 = ((v32 & 0xFFFFFFF8 | ((1513788405 * v20 - ((-1267390486 * v20 - 504547740) & 0xD19BE982) + 1506054131) >> 29)) ^ 3)
      - ((2 * v32) & 0x1EBE0D0)
      + 16117864;
  LODWORD(v6) = ((-1610612736 * v22 - 1610612736) & 0x80000000) - 805306368 * v22 - 1712537214;
  v34 = (((v23 >> 27) & 0x1C) - 32 * (v23 >> 31) - 671544048) ^ 0xDF2839F1;
  HIDWORD(v19) = v28 + 1;
  LODWORD(v19) = v29 ^ 0xB9A55908;
  v35 = (v19 >> 1) - ((2 * (v19 >> 1)) & 0xB50B67EE) + 1518711799;
  v36 = (((2 * v34) & 0x29D0) - v34 - 908891371) ^ 0xC1025FE4 | ((((v30 ^ 0x4C2372C9) & 0xFFFFFFFC | (v31 >> 30)) ^ 1)
                                                               - ((2 * ((v30 ^ 0x4C2372C9) & 0xFFFFFFFC | (v31 >> 30))) & 0xFCCC84)
                                                               - 2139199918) ^ 0x807E6652;
  HIDWORD(v19) = v36 ^ 1;
  LODWORD(v19) = (v36 - ((2 * v36) & 0x17B4618) + 12428044) ^ 0x679F3C38;
  v37 = -721323363 * (v35 ^ 0x5A85B3F7) - ((-1442646726 * (v35 ^ 0x5A85B3F7)) & 0xE0A8F9C0) - 262898464;
  v38 = 2107421365 * (v33 ^ 0xF5F068) - ((2067359082 * (v33 ^ 0xF5F068)) & 0x57C8670C) - 1411107962;
  v39 = 973078528 * (v35 ^ 0x5A85B3F7) - ((1946157056 * (v35 ^ 0x5A85B3F7)) & 0x50000000) - 1452590526;
  v40 = ((v6 ^ 0xC9ECC182) & 0xF0000000 | (v24 >> 4)) ^ 0x96D7AA6;
  v41 = v40 - ((2 * v40) & 0xB69B59C0) - 615666464;
  v42 = -886353920 * (v33 ^ 0xF5F068) - ((374775808 * (v33 ^ 0xF5F068)) & 0x7BBC2000) - 1109518346;
  v43 = v41 ^ 0xDB4DACE0;
  v44 = -1761270391 * (v41 ^ 0xDB4DACE0) - ((772426514 * (v41 ^ 0xDB4DACE0)) & 0xB122D242) - 661559007;
  v45 = ((v19 >> 2) - 244528850 + (~(2 * (v19 >> 2)) | 0x1D266DA5)) ^ v41 ^ v33 ^ 0x2999819F ^ v35;
  v46 = ((v39 ^ 0xA96B3A42) & 0xFE000000 | (v37 >> 7)) ^ 0x1E0A8F9;
  v47 = v46 - ((2 * v46) & 0xB4B27BA4) + 1515797970;
  v48 = ((v42 ^ 0xBDDE17F6) & 0xFFFFF000 | (v38 >> 20)) ^ 0xABE;
  v49 = v48 - ((2 * v48) & 0x11F6A210) + 150688008;
  v50 = ((1259470848 * v43 - ((-1776025600 * v43) & 0x9A400000) - 853472509) ^ 0xCD210B03) & 0xFFFE0000 | (v44 >> 15);
  v51 = (v50 ^ 0xBB7E43FE) + ((2 * v50) & 0x76FFE5B8 ^ 0x36000) + 1149242660 + (v49 ^ 0x8FB5108);
  v52 = v47 ^ (v51 - ((2 * v51) & 0xF893572E) + 2085202839);
  v53 = (((-945815552 * v45 - ((-1891631104 * v45) & 0xFB800000) + 2110705686) ^ 0x7DCED016) & 0xFFE00000 | ((1719619133 * v45 - ((218012794 * v45) & 0xDA90344u) + 114590114) >> 11)) ^ 0xDA90;
  v54 = v53 - ((2 * v53) & 0xE4F4D906) + 1920625795;
  v55 = 2 * (((v52 ^ 0x26109645) & (v54 ^ 0x727A6C83)) - ((2 * ((v52 ^ 0x26109645) & (v54 ^ 0x727A6C83))) & 0x4031AB64))
      - 1070486684;
  v56 = -152148793 * (v49 ^ v47 ^ v54 ^ 0x4E2FEEAA)
      - ((1843186062 * (v49 ^ v47 ^ v54 ^ 0x4E2FEEAA)) & 0x5F187E10)
      + 797720328;
  v57 = (v54 ^ 0x546AFAC6 ^ v52) + (v55 ^ 0x9404149E) - 1412808698 + ((2 * v55) & 0xA86B7FF4 ^ 0x806356C0);
  v58 = v57 - ((2 * v57) & 0xC2DB2F3E) + 1634572191;
  LODWORD(STACK[0x610]) = v58 ^ 0x616D979F;
  v59 = 2 * (((v58 ^ 0x616D979F) & (v56 ^ 0x2F8C3F08)) - ((2 * ((v58 ^ 0x616D979F) & (v56 ^ 0x2F8C3F08))) & 0x7F49278A))
      + 2135500682;
  v60 = (v56 ^ 0x4EE1A897 ^ v58) + (v59 ^ 0x2B65B75) - 2113895679 + ((2 * v59) & 0xFBFEF9FC ^ 0xFA924914);
  v61 = ((2 * v60) & 0x33E8DFEE) + (v60 ^ 0x19F46FF7);
  LODWORD(STACK[0x618]) = 2 * v61;
  LODWORD(STACK[0x620]) = v61;
  v62 = v61 - ((2 * v61 - 1697733612) & 0xC24B9E38) - 1366482650;
  v63 = v62 ^ 0x6125CF1C;
  LODWORD(STACK[0x4C0]) = v62 ^ v58;
  v64 = v62 ^ v58 ^ 0x485883;
  v65 = v63 + (v47 ^ 0x5A593DD2) - ((2 * (v63 + (v47 ^ 0x5A593DD2))) & 0x6BFE3126) + 905910419;
  v66 = -1909726993 * v63 - 1422458309 - ((475513310 * v63) & 0x566E05E6) + 184;
  LODWORD(STACK[0x5A0]) = v65;
  LODWORD(v6) = 1847209695 * (v65 ^ 0x35FF1893) - ((204758462 * (v65 ^ 0x35FF1893)) & 0xEAADEAC) - 2024444074;
  v67 = 2 * ((v63 & (v54 ^ 0x727A6C83)) + 1843186062 - ((2 * (v63 & (v54 ^ 0x727A6C83))) & 0x5BB9947E)) + 354;
  LODWORD(STACK[0x628]) = v62;
  v68 = (v54 ^ 0x135FA39F ^ v62) + (v67 ^ 0x845C6AB3) - 1608908493 + ((2 * v67) & 0xBFCBFD98 ^ 0xB7432898);
  v69 = v68 - ((2 * v68) & 0x218FEF00) - 1865943168;
  LODWORD(STACK[0x688]) = v69;
  v70 = 786366464 * (v65 ^ 0x35FF1893) - ((1572732928 * (v65 ^ 0x35FF1893)) & 0x532E0000) + 697798724;
  v71 = ((1571042304 * (v69 ^ 0x90C7F780) - ((-1152882688 * (v69 ^ 0x90C7F780)) & 0xA5B16800) + 1389934150) ^ 0x52D8B646) & 0xFFFFFC00 | ((198666509 * (v69 ^ 0x90C7F780) - ((397333018 * (v69 ^ 0x90C7F780)) & 0x96A5AA04) + 1263719682) >> 22);
  v72 = ((2 * v71) & 0xDD7EBF76 ^ 0x252) + (v71 ^ 0xEEBF5E96);
  LODWORD(STACK[0x608]) = v64;
  v73 = ((2 * ((v70 ^ 0x29979044) & 0xFFFF0000 | WORD1(v6))) & 0xE5BFF7EE ^ 0x106AA)
      + (((v70 ^ 0x29979044) & 0xFFFF0000 | WORD1(v6)) ^ 0xF2DF7CA2);
  LODWORD(v6) = ((1002438656 * v63 - ((2004877312 * v63) & 0x74000000) - 1171417457) ^ 0xBA2D968F) & 0xFFC00000 | (v66 >> 10);
  v74 = (((260087808 * v64 - ((520175616 * v64) & 0x879DC000) - 1009847888) ^ 0xC3CEF1B0) & 0xFFFFE000 | ((-2048885755 * v64 - ((197195786 * v64) & 0x647BD706u) - 1304564861) >> 19)) ^ 0x1647;
  v75 = v74 - ((2 * v74) & 0xE9521842) - 190247903;
  v76 = ((2 * v6) & 0xF977FDFC ^ 0x559980) + (v6 ^ 0xFC91333E) - v73 + v72;
  v77 = v75 ^ 0x44CE7440 ^ (v76 - ((2 * v76 + 248068732) & 0x60CEF0C2) - 1211361889);
  v78 = ((-40894464 * v77 - ((-81788928 * v77) & 0xFE400000) + 2133237479) ^ 0x7F269EE7) & 0xFFF00000 | ((435343321 * v77 - ((870686642 * v77) & 0xE8639DC6) + 1949421283) >> 12);
  v79 = ((2 * v78) & 0x7AF4A758 ^ 0x48618) + (v78 ^ 0xBD7D10B0);
  v80 = (((-1316814848 * v72 - ((587595776 * v72 + 815661056) & 0x31F80000) - 783551787) ^ 0x18FCF2D5) & 0xFFFF0000 | ((182563203 * v72 - ((365126406 * v72 + 588083358) & 0xC6BDFE40) - 186271889) >> 16)) ^ 0xE35E;
  v81 = v80 - ((2 * v80) & 0x1F7C4ED8) + 264120172;
  HIDWORD(v19) = ~v73;
  LODWORD(v19) = 943187215 * v73 - ((275761694 * v73 + 483824398) & 0x116C1456) - 954117198;
  v82 = ((2 * (v19 >> 3)) & 0xDAFF5FFE ^ 0x22D028A) + ((v19 >> 3) ^ 0xFC696EBA) + v79;
  LODWORD(v6) = v82 - ((2 * v82 - 1442056022) & 0x9A1ACD2E) - 1575787796;
  v83 = ((2019670016 * (v75 ^ 0xF4A90C21) - ((1891856384 * (v75 ^ 0xF4A90C21)) & 0x79C18000) + 1021363592) ^ 0x3CE0C588) & 0xFFFFF800 | ((1257180215 * (v75 ^ 0xF4A90C21) - ((-1780606866 * (v75 ^ 0xF4A90C21)) & 0xBCB67B6A) - 564445771) >> 21);
  v84 = ((2 * v83) & 0xBBFD75FC ^ 0x5E4) + (v83 ^ 0x5DFEBC0C);
  v85 = -1045817253 * v79 - ((-2091634506 * v79 - 488094792) & 0xC5C522B4) + 1414968118;
  v86 = v81 ^ 0xFBE276C;
  v87 = 289091809 * (v81 ^ 0xFBE276C) - ((578183618 * (v81 ^ 0xFBE276C)) & 0xD5C45E8A) + 1793208133;
  v79 *= 204308480;
  v88 = v85 >> 17;
  v89 = (((v79 + 284033024) & 0xFFFF8000 | (v85 >> 17)) ^ 0x8803125)
      + v79
      + ((2 * ((v79 + 284033024) & 0xFFFF8000 | (v85 >> 17))) & 0xEEFFFF56 ^ 0xFFFF9DBD);
  v90 = ((v88 ^ 0xFFFFCE8E) - ((2 * (v88 ^ 0xFFFFCE8E) + 2) & 0xD85D8392) + 1815003594) ^ v88 ^ (v89
                                                                                               - ((2 * v89 + 282853210) & 0xAABB6968)
                                                                                               - 573852575);
  LODWORD(v6) = ((2 * ((v81 ^ 0x42B341FB ^ v6) - v84 + 1576975102)) & 0xFF7CA734)
              + (((v81 ^ 0x42B341FB ^ v6) - v84 + 1576975102) ^ 0x7FBE539A);
  v91 = (v90 ^ 0xB973440C)
      + v79
      + 284033024
      - 2 * (((v90 ^ 0xB973440C) + v79 + 284033024) & 0x6684C653 ^ v90 & 0x11)
      + 1719977538;
  v92 = 1986118144 * v86 - ((1824752640 * v86) & 0x4D563400) + 648747709;
  v93 = ((-2145703632 * v6 - ((3560032 * v6 + 1063080512) & 0x2FA10620) + 1467952186) ^ 0x97D0831A) & 0xFFFFFFF0 | ((-1207848301 * (_DWORD)v6 - ((1879270694 * (_DWORD)v6 - 1745496796) & 0xD0B471C0) - 1269488782) >> 28);
  v94 = ((2 * v93) & 0xC37CFD7A ^ 8) + (v93 ^ 0xE1BE7EBB);
  LODWORD(v6) = v91 ^ 0x6684C642;
  v95 = (984171782 * (v91 ^ 0x6684C642)) & 0x93019440;
  v96 = ((v92 ^ 0x26AB1ABD) & 0xFFFFFE00 | (v87 >> 23)) ^ 0xD5;
  v97 = v96 - ((2 * v96) & 0xA43A4DD0) - 769841432;
  v98 = -1483399605 * v94 - 269721608 - ((1328168086 * v94 - 156536510) & 0xE92D6A0C) + 3503;
  v99 = -1799663310 * v84 - ((695640676 * v84 + 924203208) & 0x5450E610) - 978088084;
  v100 = v94 + 507609411 + (v97 ^ 0xB499E0AA ^ v91);
  v101 = v100 ^ 0xBEBFFF37;
  v102 = (2 * v100) & 0x7D7FFE6E;
  v103 = ((v99 & 0xFFFFFFFE | ((((-1799663310 * v84 - 1685382044) & 0xA585CF7C) - 1247651993 * v84 - 545814001) >> 31)) ^ 0x179496D6)
       + ((2 * v99) & 0x7B79CBBC ^ 0x5050C210);
  v104 = (1968343564 * v6 - ((-358280168 * v6) & 0x8259E7B8)) & 0xFFFFFFFC | ((v95 - 492085891 * (_DWORD)v6 + 914306527) >> 30);
  v105 = v101 - v103 + v102;
  v106 = -162153024 * v105 - ((-324306048 * v105 + 114462848) & 0xB3A62680) - 583246929;
  v107 = -224147104 * v94 - ((1699189440 * v94 + 1433282624) & 0x498E3C00) - 1887555037;
  v108 = (v106 ^ 0xD9D3136F) & 0xFFFFFFC0 | ((735663863 * v105
                                            - ((1471327726 * v105 + 404441666) & 0x579B84B8)
                                            + 937125757) >> 26);
  v109 = (v108 ^ 0xA) + 1231580582 - ((2 * v108) & 0x92D0E36A) + 1039;
  v110 = ((v107 ^ 0x24C71E03) & 0xFFFFFFE0 | (v98 >> 27)) ^ 0xE;
  LODWORD(v6) = v110 - ((2 * v110) & 0xE25818B4) - 248771494;
  v111 = ((1507413208 * v103 - ((-1280140880 * v103 - 1704703648) & 0xEAB526E0) - 1030965215) ^ 0xF55A9371) & 0xFFFFFFF8 | ((-348444261 * v103 - ((1450595126 * v103 + 860653868) & 0x615662A4) + 1246852584) >> 29);
  v112 = ((2 * (v104 - 1054018596)) & 0xBEF7BFDA ^ 0x8251A798) + ((v104 - 1054018596) ^ 0x1E572C31) + (v6 ^ 0xF12C0C5A);
  v113 = v112 + (v111 ^ 0xBFCEEFD1) + ((2 * v111) & 0x7F9DDFA8 ^ 8) + 1622487103;
  v114 = ((2 * (v112 + 545529875)) & 0xDFFEFB94) + ((v112 + 545529875) ^ 0xEFFF7DCA);
  v115 = (v113 - ((2 * v113) & 0x3B857AE2) + 499301745) ^ v109;
  HIDWORD(v19) = v109 ^ 0x1B5;
  LODWORD(v19) = v106 ^ 0xD9D31000;
  v116 = (((-1438646272 * v114 - ((1417674752 * v114 + 1392508928) & 0x69800000) + 510616054) ^ 0xB4EF61F6) & 0xFFC00000 | ((600736425 * v114 - ((1201472850 * v114 - 137182388) & 0xCF81A5BA) + 1672098947) >> 10)) ^ 0x19F034;
  v117 = (v116 - ((2 * v116) & 0xEE90FE0A) - 146243835) ^ ((v19 >> 10) - ((2 * (v19 >> 10)) & 0xB2338BD2) - 652622359);
  HIDWORD(v19) = v117 ^ 0x2991BC;
  LODWORD(v19) = v117 ^ 0x8A400000;
  v118 = ((v19 >> 22) - ((2 * (v19 >> 22)) & 0x21855ABE) - 1866289825) ^ 0x706FEFCF;
  v119 = (-921885487 * v118 - ((-1843770974 * v118) & 0xFB041B8C) - 41808442) ^ v115;
  v120 = ((2 * v119) ^ 0x52518204) - 2 * (((2 * v119) ^ 0x52518204) & 0x146CD0EE ^ (2 * v119) & 2) + 1953288429;
  v121 = (v119 ^ 0xB549C831) + (v120 & 0x38C21266 ^ 0x4FB7EF38) + ((2 * v120) & 0x71842488 ^ 0x60802088) - 2146959196;
  v122 = v121 - ((2 * v121) & 0xC5A9CB76) + 1658119611;
  v123 = v122 ^ v109 ^ 0x2BBC940E;
  v124 = -407839463 * v123 - ((1331804722 * v123) & 0x6C69C8BA) - 1238047651;
  v125 = (v115 ^ 0x54AACCC4)
       + (v122 ^ 0x9D2B1A44)
       + 1
       - ((2 * ((v115 ^ 0x54AACCC4) + (v122 ^ 0x9D2B1A44) + 1)) & 0x168653C0)
       - 1958532640;
  LODWORD(STACK[0x540]) = v122 ^ v109;
  v126 = -939524096 * v123 - ((((v122 ^ v109) << 31) + (v123 << 28)) & 0xAAAAAAAA);
  v127 = ((-1019281408 * (v122 ^ v6 ^ 0x93F8E9E1) - ((108920832 * (v122 ^ v6 ^ 0x93F8E9E1)) & 0x38DE0000) + 477062487) ^ 0x1C6F6557) & 0xFFFF0000 | ((-932265153 * (v122 ^ v6 ^ 0x93F8E9E1) - ((-1864530306 * (v122 ^ v6 ^ 0x93F8E9E1)) & 0xB3B1CEE0) - 640096400) >> 16);
  v128 = ((2 * v127) & 0xDB95FDEC ^ 0x1B1A0) + (v127 ^ 0x6DCA272E);
  LODWORD(STACK[0x4E0]) = v122;
  v129 = ((2 * ((v126 - 770061125) ^ 0xD219CCBB | (v124 >> 5))) & 0xE76E6DBE ^ 0x3624C04)
       + (((v126 - 770061125) ^ 0xD219CCBB | (v124 >> 5)) ^ 0xF60691FD);
  v130 = ((876609536 * (v125 ^ 0x8B4329E0) - ((1753219072 * (v125 ^ 0x8B4329E0)) & 0xEC800000) - 162739603) ^ 0xF64CCA6D) & 0xFFC00000 | ((-1957866287 * (v125 ^ 0x8B4329E0) - ((379234722 * (v125 ^ 0x8B4329E0)) & 0xF6D74BD6) - 76831253) >> 10);
  v131 = ((2 * v130) & 0xF553AFF6 ^ 0x51A5D2) + (v130 ^ 0xFA970D12);
  v132 = ((714735616 * (v122 ^ 0x62D4E5BB) - ((1429471232 * (v122 ^ 0x62D4E5BB)) & 0x8B240000) - 980277237) ^ 0xC592280B) & 0xFFFE0000 | ((1818858829 * (v122 ^ 0x62D4E5BB) - ((-657249638 * (v122 ^ 0x62D4E5BB)) & 0xED39E02C) - 157487082) >> 15);
  v133 = (v132 ^ 0x5F9486D7) + ((2 * v132) & 0xBF2AD7DC ^ 0x2D250) + v128 + v129 - v131 + 787996461;
  v134 = -1007545717 * v128 - ((132392214 * v128 + 77367516) & 0x6CE5384) + 968191536;
  v135 = -116832896 * v128 - ((303205120 * v128 + 239365632) & 0x142AAE00) + 825724467;
  v136 = ((-1918894080 * v133 - ((457179136 * v133 - 339738624) & 0xDD000000) + 1685942249) ^ 0xEE9D6FE9) & 0xFFE00000 | ((-742505363 * v133 - ((-1485010726 * v133 + 1543501662) & 0xF03AD43E) + 639460814) >> 11);
  v137 = ((2 * v136) & 0xCEDFF7F2 ^ 0x1E0752) + (v136 ^ 0x6770F854);
  v138 = (v135 ^ 0xA155733) & 0xFFFFFF80 | (v134 >> 25);
  v139 = v138 ^ 0xCFDFBFD6;
  v140 = (2 * v138) & 0x9FBF7F2E;
  v141 = ((1107296256 * v129 - (((v129 << 26) + 0x4000000) & 0x38000000) - 1626957152) ^ 0x1D069AA0) & 0xFE000000 | ((-1985904479 * v129 - ((323158338 * v129 + 170916738) & 0x40FAF090) - 443189751) >> 7);
  v142 = ((2 * v141) & 0xAE9CFFEE ^ 0x280F5E0) + (v141 ^ 0x560E8507);
  v143 = ((553648128 * v131 - ((1107296256 * v131 + 1241513984) & 0xA4000000) + 1998967821) ^ 0xD225D40D) & 0xFF000000 | ((1254474017 * v131 - ((-1786019262 * v131 - 1002448054) & 0xE4A56B58) - 730684591) >> 8);
  v144 = ((2 * v143) & 0xCF5DE6FE ^ 0x144A46A) + (v143 ^ 0xE75CA1CA);
  LOBYTE(v66) = ((v66 & 8 | 0x45) - (v66 & 1 | 0xBA) - 70) ^ 0x64;
  LOBYTE(v66) = ((2 * v66) | 0xBE) - v66 + 33;
  v145 = ((-80322113 * v137 - ((-160644226 * v137 + 921129074) & 0x829F5F10) + 1556305857) ^ 0x414FAF88) >> ~(_BYTE)v66;
  v146 = ((v145 - ((2 * v145) & 0x3AC1AA8) - 2116678316) ^ 0x81D60D54) >> (v66 ^ 0xF6);
  v147 = ((2 * v146) & 0xBEFF5ADE) + (v146 ^ 0xDF7FAD6F);
  v148 = v139 + (v140 ^ 2) + v142 - v144 - v137 + 858522223;
  v149 = -351613019 * v144 - ((-703226038 * v144 + 986102858) & 0xD4577E86) - 2020663960;
  v150 = (1239945263 * v148 - ((-1815076770 * v148 + 181867306) & 0xC998AEE6) - 365436664) >> 16;
  v151 = 271515648 * v148 - ((543031296 * v148 + 321519616) & 0xCEB40000) - 252750602;
  v152 = ((v151 & 0x20000000) + (v151 & 0xF66A0000 ^ 0x3997FFFF) + (v151 & 0x20000000 | 0xDFEB2456) + 1) ^ 0x7ECF24DE;
  v153 = v147 - 545259520 * v137 + 0x8000000;
  v154 = 671088640 * v144 + 1354991617 - ((1342177280 * v144 + 1342177280) & 0x55555555);
  LOBYTE(v34) = ~(((2 * (v150 & 0xBD ^ 0xBC)) & 0x60) - (v150 & 0xBD ^ 0xBC) - 49);
  v155 = (((2 * (v150 & 0x1ABD ^ 0x100862BC)) & 0x20001060) - (v150 & 0x1ABD ^ 0x100862BC) + 662304463) ^ 0x377194FF | v151 & 0x9950000;
  v156 = (((2 * (((v150 & 0xE542 ^ 0x5C99380B) - 1) ^ 0xE0BBDC7B)) & 0x8454880)
        - (((v150 & 0xE542 ^ 0x5C99380B) - 1) ^ 0xE0BBDC7B)
        + 2035306815) ^ 0xC572D10E;
  LODWORD(STACK[0x5F0]) = v122 ^ v6;
  LODWORD(STACK[0x520]) = v125;
  v157 = v122 ^ v6 ^ v109 ^ v125;
  v158 = (((((2 * v152) & 0x26A80110) - v152 + 1823144710) ^ 0x6DACFB8E | v156)
        - ((2 * ((((2 * v152) & 0x26A80110) - v152 + 1823144710) ^ 0x6DACFB8E | v156)) & 0xBB8754D6)
        + 1573104235) ^ 0x5DC3AA6B | ((v155 ^ 0x1100000) - 2 * ((v155 ^ 0x1100000) & 0x610660BD ^ v34 & 9) - 414818122) ^ 0xE74660B6;
  v159 = ((2 * v158) & 0xFF3FDF98) + (v158 ^ 0x7F9FEFCC);
  v160 = ((1409286144 * v142 - ((671088640 * v142 + 1744830464) & 0x40000000) + 347887621) ^ 0x20BC5805) & 0xFC000000 | ((-597694891 * v142 - ((952093866 * v142 + 1990013434) & 0x44EC8BD2) - 574300442) >> 6);
  v161 = -309554688 * v147 - 1822248448;
  v162 = v160 ^ 0x7EE626B0;
  v163 = (2 * v160) & 0xFCDFFF4E ^ 0x13B20E;
  v164 = (-1745435063 * v153 - ((804097170 * v153 + 915628722) & 0x23073C94u) - 858959965) >> 24;
  v165 = -154777344 * v153 - (v161 & 0xB8B47A00) + 638293549;
  v166 = v164 ^ 0x4F;
  LODWORD(STACK[0x570]) = v157;
  if (v157 == 1372828084)
    v166 = 33;
  v167 = (v166 & (v164 ^ 0x91)) - 2 * (v166 & (v164 ^ 0x91) & 3);
  v168 = ((2 * ((v154 + 2300) ^ 0x28C390FD | (v149 >> 5))) & 0x7E19FF5E ^ 0x600BB54)
       + (((v154 + 2300) ^ 0x28C390FD | (v149 >> 5)) ^ 0xBC5DA255);
  v169 = (v165 & 0x22E12100 ^ 0x4CDF396D | 0x111D4533) - (v165 & 0x22E12100 ^ 0x4CDF396D | 0xEEE2BACC) - 287130932;
  v170 = (v167 + 586574339) ^ 0x22F66A03 | (((v165 & 0x99024A00 ^ 0xAA40028B) - 1) & 0xFF3FFFFF | v165 & 0x441C9400) ^ 0x761A1E8A;
  v171 = v162 + v163 + v168 - v153 - v159 - 973731805;
  v172 = ((2 * (v169 ^ 0x5D825D5E | v164 & 0xDE)) & 0x4BFDA3E2 ^ 0x120)
       + ((v169 ^ 0x5D825D5E | v164 & 0xDE) ^ 0xE5FED161)
       + (v170 ^ 0x31BFDCAF)
       + ((2 * v170) & 0x637FB95E);
  v173 = v172 - 2 * ((v172 + 1749111136) & 0x40FF4BCF ^ v172 & 8) - 1455383257;
  v174 = ((-585842332 * v159 - ((-1171684664 * v159 + 1939542176) & 0x98F09898)) & 0xFFFFFFFC | ((-146460583 * v159
                                                                                                - ((1854562482 * v159
                                                                                                  + 1558627368) & 0x4FA62B0E)
                                                                                                - 700024933) >> 30))
       - 2042243940;
  v175 = ((2 * v174) & 0xFD1BFBFA ^ 0x98109898) + (v174 ^ 0x32F5B1B3);
  v176 = (((260308992 * v168 - ((520617984 * v168 + 294125568) & 0x2A780000) + 2114097928) ^ 0x953E9308) & 0xFFFC0000 | ((356336609 * v168 - ((712673218 * v168 + 1307243618) & 0x6C69C8C8) + 489315989) >> 14)) ^ 0x2D8D3;
  v177 = ((-1175453696 * v171 - ((1944059904 * v171 + 801112064) & 0xAF400000) - 276187608) ^ 0x57A9B628) & 0xFFF00000 | ((687160223 * v171 - ((1374320446 * v171 + 1002271484) & 0x80654EB2) + 1578197207) >> 12);
  v178 = ((2 * v177) & 0xCEDBFB9E ^ 0x80214) + (v177 ^ 0x6769FEE5);
  v179 = (((v173 ^ 0xC0FF4BC7) - v175 - ((2 * ((v173 ^ 0xC0FF4BC7) - v175) - 48497670) & 0xCBABF120) - 463210867) ^ 0x4F342F48)
       - v178
       + 1735261647;
  v180 = ((v176 - ((2 * v176) & 0x84899E9A) - 1035677875) ^ 0x2BB848A ^ v173) - (v178 + v175) + 1711012812;
  v181 = v180 - ((2 * v180) & 0x1C51EA4A) - 1909918427;
  v182 = (1298035837 * (((2 * v179) & 0xF5DF7F7E) + (v179 ^ 0x7AEFBFBF))
        - ((448588026 * (((2 * v179) & 0xF5DF7F7E) + (v179 ^ 0x7AEFBFBF)) + 1976936314) & 0x45966046)
        + 498467808) ^ v181;
  LODWORD(STACK[0x4B0]) = v182;
  v183 = (v182 ^ 0x2CE3C506) - ((2 * (v182 ^ 0x2CE3C506) + 18174754) & 0x7189E3C) + 1947662511;
  LODWORD(STACK[0x678]) = v183;
  v184 = v183 ^ 0x38C4F1E;
  v185 = (v184 & (v181 ^ 0x8E28F525)) - ((2 * (v184 & (v181 ^ 0x8E28F525))) & 0x662CE152);
  v186 = v178 - 1735261647 + v184 + 567841531 - ((2 * (v178 - 1735261647 + v184)) & 0x43B125F6);
  v187 = ((2 * (v175 + 24248835 + v184)) & 0xFFBFEF6E) + ((v175 + 24248835 + v184) ^ 0x7FDFF7B7);
  v188 = ((v184 + (v181 ^ 0x8E28F525)) ^ 0x7D1FF7BD)
       + ((2 * (v184 + (v181 ^ 0x8E28F525))) & 0xFA3FEF7A)
       + ((2 * v185 + 1714217298) ^ 0xA40E2955)
       + ((2 * (2 * v185 + 1714217298)) & 0x7BBA6FF0 ^ 0xB7E7BD5F)
       + 1;
  v189 = v188 - ((2 * v188 + 24805496) & 0x18B1CAA0) - 854186612;
  LODWORD(STACK[0x510]) = v189;
  v190 = v189 ^ 0xC58E550;
  v191 = -835817011 * v184 - ((-1671634022 * v184) & 0xF822F0E2) - 65963919;
  LODWORD(STACK[0x680]) = v186;
  v192 = v186 ^ 0x21D892FB;
  v193 = 1019416519 * v192 - ((2038833038 * v192) & 0x6FE85074);
  LODWORD(STACK[0x500]) = v187 - 2145384375;
  if (v187 - 2145384375 >= 0xF510DE7C)
    v194 = -261890701;
  else
    v194 = -445334545;
  LODWORD(STACK[0x5E0]) = v194;
  v195 = ((-(((v187 << 28) + 0x10000000) & 0x30000000) - 2013265920 * v187 - 459708269) ^ 0x1C996893) & 0xF8000000 | ((-1679190127 * v187 - ((936587042 * v187 + 1760657586) & 0x59C71618) - 514045083) >> 5);
  v196 = 1558419968 * v184 - ((969356288 * v184) & 0x608B6000);
  v197 = 1643700224 * v192 - ((-1007566848 * v192) & 0xA47E0000);
  v198 = (v195 ^ 0x3AD8C7E7)
       + (v195 ^ 0x56610C5)
       + ((2 * v195) & 0x7FFDE6C4 ^ 0x7533DF7F)
       + ((2 * v195) & 0x7F7FB77E ^ 0xA4E3030);
  v199 = ((v197 - 767621827) ^ 0xD23F053D) & 0xFFFFE000 | ((v193 - 1208735686) >> 19);
  v200 = ((2 * v199) & 0x3973FDFE ^ 0x2DFC) + (v199 ^ 0x9CB9E801);
  v201 = ((2 * v195) & 0xE7F5FD9E ^ 0x2C43890)
       + (v195 ^ 0xF69DE297)
       + ((2 * v198 - 2139214006) ^ 0xF5FAFC60)
       + ((2 * (2 * v198 - 2139214006)) & 0xEBF5F8C0);
  v202 = v201 - ((2 * v201 + 739510690) & 0xD78AF44A) - 2117107978;
  v203 = (((v196 + 809873523) ^ 0x3045B073) & 0xFFFFFE00 | (v191 >> 23)) ^ 0x1F8;
  v204 = v203 - ((2 * v203) & 0xAD6E7B5A) + 1454849453;
  v205 = ((581304320 * v190 - ((1162608640 * v190) & 0xDD140000) - 292844490) ^ 0xEE8B8C36) & 0xFFFE0000 | ((-1653501613 * v190 - ((987964070 * v190) & 0xA455E93C) - 768936802) >> 15);
  v206 = ((2 * v205) & 0xBFFCFFFE ^ 0x48AA) + (v205 ^ 0x5FFFDBAA);
  v207 = ((v200 + 1665532161 + (v204 ^ 0x3D724788 ^ v202)) ^ 0xD7F6FFA9)
       - v206
       + ((2 * (v200 + 1665532161 + (v204 ^ 0x3D724788 ^ v202))) & 0xAFEDFF52);
  v208 = v202 ^ 0x6BC57A25;
  v209 = -2019870771 * (v202 ^ 0x6BC57A25) - ((255225754 * (v202 ^ 0x6BC57A25)) & 0x173F1D8C) + 195006150;
  v210 = -1067558529 * v200 - ((-2135117058 * v200 + 1759752446) & 0xB334F586) - 1911794878;
  v211 = (335544320 * v207 - ((671088640 * v207 + 1879048192) & 0x9FFFFFFF) + 93238609) ^ 0x4D8EB551;
  v212 = (-1797732091 * v207 - ((699503114 * v207 + 418516828) & 0x7A9900CC) - 909801452) >> 6;
  v213 = ((v212 | v211) ^ 0xF53201) - 2 * (((v212 | v211) ^ 0xF53201) & 0x6BFC327C ^ v212 & 8);
  v214 = 1501495296 * v200 - ((16646144 * v200 + 16646144) & 0x1780000) + 1497043837;
  v215 = 1020903016 * v208 - ((2041806032 * v208) & 0x8B72FAC0);
  v216 = ((2 * ((v214 ^ 0x80BC137D) & 0xFFFF0000 | HIWORD(v210))) & 0xEFFE9CEA ^ 0x9020)
       + (((v214 ^ 0x80BC137D) & 0xFFFF0000 | HIWORD(v210)) ^ 0x77FF97EF);
  v217 = ((v215 - 977699482) ^ 0xC5B97D66) & 0xFFFFFFF8 | (v209 >> 29);
  v218 = v217 - ((2 * v217) & 0xF6934CF8) + 2068424316;
  v219 = 2 * v216 + 268526358;
  v220 = v219 ^ 0x285205;
  v221 = (2 * v219) & 0xFFAF5BF4;
  v222 = ((-2124698916 * v206 - ((45569464 * v206 + 55268792) & 0x9BC32810) - 813220121) ^ 0x4DE1940B) & 0xFFFFFFFC | ((542567095 * v206 - ((1085134190 * v206 - 1059924626) & 0xE3372F6C) + 1376060013) >> 30);
  v223 = ((2 * v222) & 0xEB7CD3BE ^ 2) + (v222 ^ 0xF5BE69DE);
  v224 = (v213 - 335793548) ^ 0xEBFC3274;
  v225 = 1896977585 * v224 - ((-501012126 * v224) & 0xA81E26BA) - 737209507;
  v226 = v218 ^ 0x90B59408 ^ (v213 - 335793548);
  v227 = (~(1480728888 * v216 + 1692385640) | 0x75A9B587) + 740364444 * v216;
  v228 = ((-1777301426 * v216 + 1496838234) & 0xFE31A168) + 888650713 * v216;
  v229 = v220
       - v221
       - v223
       + ((v216 - 2013222662 + v226 + 2193) ^ 0x53EFFBCF)
       + ((2 * (v216 - 2013222662 + v226 + 2193)) & 0xA7DFF79E)
       + 1158497794;
  v230 = (((573740576 * v224 - ((73739328 * v224) & 0x2ADE82C0) + 359612797) ^ 0x156F417D) & 0xFFFFFFE0 | (v225 >> 27)) ^ 0x1A;
  v231 = v230 - ((2 * v230) & 0x4F34E7EA);
  v232 = ((v227 + 2006648308) ^ 0xC52B253F) & 0xFFFFFFFC | ((v228 + 1414215454) >> 30);
  v233 = v232 - 2 * (v232 & 0x1BB6B95F ^ ((v228 + 1414215454) >> 30) & 2) + 464959837;
  v234 = ((1634190592 * v229 - ((47155712 * v229 + 111663616) & 0x27909C00) - 1222886581) ^ 0x93C84E4B) & 0xFFFFFF00 | ((123824069 * v229 - ((247648138 * v229 + 809936858) & 0x96F65B64) - 476151393) >> 24);
  v235 = ((2 * v234) & 0xDCDF76F6 ^ 0x96) + (v234 ^ 0xEE6FBBB0);
  v236 = 44593339 * v235 - ((89186678 * v235 + 122190414) & 0x13EE88A6) + 2107343226;
  v237 = (((457703424 * v223 - ((915406848 * v223 + 1754267648) & 0x79100000) + 1892775222) ^ 0xBC897536) & 0xFFF80000 | ((1752761193 * v223 - ((-789444910 * v223 - 1367085806) & 0xFA33DE1E) - 732174952) >> 13)) ^ 0x3E8CF;
  LOBYTE(v225) = ((v225 >> 27) & 4 ^ 0xE5) - ((v225 >> 27) & 4) + ((v225 >> 27) & 0x1E ^ 8);
  v238 = (v233 ^ 0x3C2CCAA8 ^ (v231 + 664433653)) + 294666848 + v235 + 549;
  v239 = v237 - ((2 * v237) & 0xC696A4AA) + 1665880661;
  v240 = v239 ^ 0x634B5255;
  v241 = (~(428203022 * (v239 ^ 0x634B5255)) | 0xAAB2CA1B) + 1287843335 * (v239 ^ 0x634B5255) - 1431921933;
  v242 = v239 ^ 0xA27ACFF6 ^ (v238 - ((2 * v238) & 0x82633B46) - 1053712989);
  v243 = (v225 & 0x66 ^ 1 | v225 & 0x98) - 1;
  v244 = ((-54826807 * v242 - ((964088210 * v242) & 0x27F3FB52) - 1812333143) ^ 0x93F9FDA9) >> (v243 ^ 0xF6);
  v245 = v244 - ((2 * v244) & 0x27C0CB70);
  v246 = 1356953088 * v235 - ((-1581061120 * v235 - 1863017472) & 0xA5C94000) - 1688277490;
  v247 = ((-536870912 * (((v231 + 664433653) ^ 0x279A73F5) & 1)
         - 805306368 * ((v231 + 664433653) ^ 0x279A73F5)
         - 1780633389) ^ 0x95DDB0D3) & 0xF0000000 | ((-1510210467 * ((v231 + 664433653) ^ 0x279A73F5)
                                                    - ((1274546362 * ((v231 + 664433653) ^ 0x279A73F5)) & 0x6E0F0504)
                                                    - 1224244606) >> 4);
  v248 = ((2 * v247) & 0xE7EF4DEC ^ 0x6E04040) + (v247 ^ 0xF887DEDE);
  v249 = (-219307228 * v242) ^ 0xFBEFF9DB;
  v250 = (-438614456 * v242) & 0xF7DFF3B0;
  v251 = ((-869343120 * v240 - ((408797408 * v240) & 0x25E57980) - 1829585726) ^ 0x92F2BCC2) & 0xFFFFFFF0 | (v241 >> 28);
  v252 = ((v246 ^ 0x52E4A00E) & 0xFFFFFE00 | (v236 >> 23)) ^ 0x113;
  v253 = ((2 * v251) & 0xEFF3FFF6 ^ 0x14) + (v251 ^ 0x77F9FFF1) - v248;
  v254 = v253 - ((2 * v253 + 2012958198) & 0x5FBE295A) - 1411597400;
  v255 = v252 - ((2 * v252) & 0x8CAE8D7A) + 1180124861;
  v256 = 2
       * (((v254 ^ 0x2FDF14AD) & (v255 ^ 0x465746BD)) - ((2 * ((v254 ^ 0x2FDF14AD) & (v255 ^ 0x465746BD))) & 0x673A7310))
       - 415599856;
  v257 = (((v245 + 333473208) ^ 0x13E065B8) >> (v243 ^ 0xE8))
       - 2 * ((((v245 + 333473208) ^ 0x13E065B8) >> (v243 ^ 0xE8)) & 0x3F)
       + 319;
  v258 = v249
       + v250
       + (v257 ^ 0xF9ECFF44)
       + ((2 * v257) & 0xF6 ^ 0x76)
       - 2
       * ((v249 + v250 + (v257 ^ 0xF9ECFF44) + ((2 * v257) & 0xF6 ^ 0x76) + 170067626) & 0xFFF933B ^ (v249 + v250 + (v257 ^ 0xF9ECFF44)) & 1)
       + 438475236;
  v259 = (v254 ^ v255 ^ 0x69885210) + (v256 ^ 0x1BCB88AF) + 51250241 + ((2 * v256) & 0xF9E3F77C ^ 0xC860E620);
  v260 = (v259 ^ 0xCF7BB7F3) + ((2 * v259) & 0x9EF76FE6) + 813975565 + (v258 ^ 0xFFF933A);
  v261 = v260 - ((2 * v260) & 0x263A550E);
  v262 = (v258 ^ 0xFFF933A)
       + 1391156377
       * (((2 * (v248 + 201873674 + (v255 ^ 0x465746BD))) & 0xF1EDF7FE)
        + ((v248 + 201873674 + (v255 ^ 0x465746BD)) ^ 0x78F6FBFF))
       - 255934311;
  v263 = v262 - ((2 * v262) & 0x3BE87886) - 1644938173;
  v261 += 320678535;
  v264 = (v263 ^ v261 ^ 0x42A11380) + 1;
  v265 = v263 ^ v261 ^ 0x6C691E6;
  LODWORD(STACK[0x4D0]) = v265;
  LODWORD(STACK[0x560]) = v258;
  v266 = v264 + (v261 ^ 0x131D2A87) - ((2 * (v264 + (v261 ^ 0x131D2A87))) & 0xE54FD19E) - 223876913;
  LODWORD(STACK[0x580]) = v266;
  v267 = v264 + (v255 ^ 0x465746BD) - ((2 * (v264 + (v255 ^ 0x465746BD))) & 0x953BFFAC) - 895615018;
  HIDWORD(v268) = v263 ^ ~v261;
  LODWORD(v268) = (1810100545 * (v263 ^ v261 ^ 0xBD5EEC7F)
                 - 105477048
                 - ((-674766206 * (v263 ^ v261 ^ 0xBD5EEC7F)) & 0xF36D1894)
                 + 2) ^ 0xF9B68C48;
  v269 = (v268 >> 2) - ((2 * (v268 >> 2)) & 0xF7B24A22) + 2077828369;
  LODWORD(STACK[0x660]) = v267;
  v270 = (((v267 << 29) ^ 0x20000000) - 326405743 + ((2 * ((v267 << 29) ^ 0x20000000) + 0x40000000) & 0x80000000)) ^ 0xCC8B7191 | ((1570816535 * (v267 ^ 0xCA9DFFD6) - ((-1153334226 * (v267 ^ 0xCA9DFFD6)) & 0x8B991106) + 1171032195) >> 3) ^ 0x8B99110;
  v271 = v270 - ((2 * v270) & 0xC0DC4BCA);
  LODWORD(STACK[0x530]) = v265 ^ v258;
  HIDWORD(v268) = v265 ^ v258 ^ 3;
  LODWORD(v268) = (-2094532911 * (v265 ^ v258 ^ 0xB467EEA3)
                 + 1940768080
                 - ((105901474 * (v265 ^ v258 ^ 0xB467EEA3)) & 0xE75B8AAE)
                 + 7) ^ 0x73ADC550;
  v272 = (v268 >> 3) - ((2 * (v268 >> 3)) & 0x5E74E3E4) + 792359410;
  v273 = v272 ^ 0x2F3A71F2;
  v274 = -826717667 * (v272 ^ 0x2F3A71F2) - ((-1653435334 * (v272 ^ 0x2F3A71F2)) & 0xD3A7EA2E) + 1775498519;
  v275 = ((1992468288 * (v266 ^ 0xF2A7E8CF) - ((-310030720 * (v266 ^ 0xF2A7E8CF)) & 0x84390600) + 1109164855) ^ 0x421C8337) & 0xFFFFFFC0 | ((1037765277 * (v266 ^ 0xF2A7E8CF) - ((2075530554 * (v266 ^ 0xF2A7E8CF)) & 0x4067B6CE) - 1607214233) >> 26);
  v276 = ((2 * v275) & 0xC4DFBFFE ^ 0x50) + (v275 ^ 0x626FDFD7);
  v277 = v269 ^ v272 ^ 0x348D7106;
  v278 = (v271 + 1617831397) ^ 0x606E25E5;
  v279 = ((2 * (((v271 + 1617831397) ^ v277) - v276 + 1651499007)) & 0xDFF6D7A6)
       + ((((v271 + 1617831397) ^ v277) - v276 + 1651499007) ^ 0xEFFB6BD3);
  v280 = -652470813 * v279 - ((-1304941626 * v279 - 599381554) & 0xE0D64BF2) - 561104160;
  v281 = ((59574554 * v278) & 0x351CBADC) - 29787277 * v278;
  v282 = 59574554 * v278 - ((119149108 * v278) & 0x74EB8BC8) + 980796900;
  v283 = (v282 & 0xFFFFFFFE | ((v281 + 1701946001) >> 31)) ^ 0x3A75C5E4;
  v284 = v283 - 2 * (v283 & 0x221A48CB ^ v282 & 0xA) + 572147905;
  v285 = -2110409303 * v276 - ((74148690 * v276 + 435530578) & 0xF044EB22) + 85805882;
  v286 = (((1468792832 * v279 - ((-1357381632 * v279 - 1489502208) & 0xA2700000) - 1529460171) ^ 0x513A4A35) & 0xFFFC0000 | (v280 >> 14)) ^ 0x3C1AC;
  v287 = 1800536064 * v276 - ((-693895168 * v276 + 1453588480) & 0xE3C00000) + 489907431;
  v288 = v286 - 2 * (v286 & 0x708E065F ^ (v280 >> 14) & 1) - 259127714;
  v289 = ((-1525776384 * v273 - ((1243414528 * v273) & 0xB2000000) - 654297474) ^ 0xD900367E) & 0xFFFF8000 | (v274 >> 17);
  v290 = ((2 * v289) & 0x6F5D7FF6 ^ 0x69D2) + (v289 ^ 0xB7AE8B12);
  v291 = ((2 * ((v287 ^ 0x71E164E7) & 0xFFFE0000 | (v285 >> 15))) & 0xDFDBF596 ^ 0x3E080)
       + (((v287 ^ 0x71E164E7) & 0xFFFE0000 | (v285 >> 15)) ^ 0x6FEC0A8F);
  v292 = 1843957469 * v291 - ((-607052358 * v291 + 1324599682) & 0xBA4AE53C) + 77551455;
  v293 = (v284 ^ 0xD2944E9F ^ v288) - (v291 + v290) + 664582854;
  v294 = ((2 * v293) & 0xBDBEDBF2) + (v293 ^ 0x5EDF6DF9);
  HIDWORD(v268) = (v280 >> 14) ^ 4;
  LODWORD(v268) = (-1879532367 * (v288 ^ 0xF08E065E) - 400305712 - ((535902562 * (v288 ^ 0xF08E065E)) & 0xD047A3A6) + 3) ^ 0xE823D1D0;
  v295 = -1975125367 * v294 - ((344716562 * v294 + 1440216958) & 0x58D116DA) + 1465157420;
  v296 = ((1327401336 * v290 - ((-1640164624 * v290 - 639803728) & 0x9EA8DC60) - 1136452211) ^ 0x4F546E35) & 0xFFFFFFF8 | ((-1981558481 * v290 - ((331850334 * v290 + 456895446) & 0x7261DA84) + 1187955501) >> 29);
  v297 = (v296 ^ 1) - ((2 * v296) & 0x29A7097C);
  v298 = (v268 >> 3) - ((2 * (v268 >> 3)) & 0xA735A0E0) - 744828816;
  v299 = v298 ^ 0xD39AD070;
  v300 = -2097495347 * (v298 ^ 0xD39AD070) - ((99976602 * (v298 ^ 0xD39AD070)) & 0x2A046120) - 1795018608;
  v297 += 349406398;
  v301 = -1085202432 * v294 - ((245514240 * v294 + 250593280) & 0xD5A8000) + 103097067;
  v302 = 498728960 * v291 - ((997457920 * v291 + 319029248) & 0x46FC0000) + 1828730350;
  v303 = ((v301 ^ 0x86AD42EB) & 0xFFFFE000 | (v295 >> 19)) ^ 0x58D;
  v304 = v303 - 2 * (v303 & 0x7977C85F ^ (v295 >> 19) & 0x10);
  v305 = 2
       * (((v298 ^ 0xD39AD070) & (v297 ^ 0x14D384BE))
        - ((2 * ((v298 ^ 0xD39AD070) & (v297 ^ 0x14D384BE))) & 0x53EDA0B6)
        + 1777782883)
       - 16;
  v306 = ((v302 ^ 0xA37E35EE) & 0xFFFE0000 | (v292 >> 15)) ^ 0xBA4A;
  v307 = (v297 ^ 0xC74954CE ^ v298) + (v305 ^ 0xACF65F19) - 2132541359 + ((2 * v305) & 0xFE37FF5C ^ 0xA613414C);
  v308 = v306 - ((2 * v306) & 0x1EAA3F18) + 257236876;
  v309 = v308 ^ 0xF551F8C;
  v310 = 901433759 * (v308 ^ 0xF551F8C) - ((1802867518 * (v308 ^ 0xF551F8C)) & 0xCB8F7A8C) - 439894714;
  v311 = v308 ^ (v304 - 109590449) ^ 0x1C5C2424 ^ (v307 - ((2 * v307) & 0xD4FDE7CE) - 360778777);
  v312 = -1895857437 * v311 - ((503252422 * v311) & 0x189BE4E6) + 206434931;
  v313 = -1049526272 * v311 - ((48431104 * v311) & 0x17BD0000);
  v314 = ((-1757413376 * ((v304 - 109590449) ^ 0xF977C84F)
         - ((780140544 * ((v304 - 109590449) ^ 0xF977C84F)) & 0x53800000)
         + 701171724) ^ 0x29CB080C) & 0xFFC00000 | ((-1046001059 * ((v304 - 109590449) ^ 0xF977C84F)
                                                   - ((-2092002118 * ((v304 - 109590449) ^ 0xF977C84F)) & 0xE6297032)
                                                   + 1930737689) >> 10);
  v315 = ((2 * v314) & 0xF3DF8FFC ^ 0x198A5C) + (v314 ^ 0xF9F302D0);
  v316 = (((v313 + 199141004) ^ 0xBDEA68C) & 0xFFFF8000 | (v312 >> 17)) ^ 0x626;
  v317 = (((-1218890784 * v309 - ((1857185728 * v309) & 0x943FCE40) - 903878866) ^ 0xCA1FE72E) & 0xFFFFFFE0 | (v310 >> 27)) ^ 0x1C;
  v318 = (((-175793664 * v299 - ((1795896320 * v299) & 0x611DB000) + 814667859) ^ 0x308ED853) & 0xFFFFFE00 | (v300 >> 23)) ^ 0x12A;
  v319 = v318 - ((2 * v318) & 0x634D064A) + 832996133;
  v320 = v315 + 101726210 + (v319 ^ 0x31A68325);
  v321 = v315 + 101726210 + ((v317 - ((2 * v317) & 0x1B6D4520) - 1917410672) ^ 0xBC1021B5 ^ v319);
  v322 = v316 - ((2 * v316) & 0x69789306) + 884754819;
  v323 = (v320 ^ 0xB5E99CB7) + ((2 * v320) & 0x6BD3396E) + 1242981193 + (v322 ^ 0x34BC4983);
  v324 = v322 ^ (v321 - ((2 * v321) & 0x1DD07F20) - 1897382000) ^ 0x72D02F99 ^ (((2 * v323) & 0xEEFB6FAE)
                                                                              + (v323 ^ 0x777DB7D7)
                                                                              - 2
                                                                              * ((((2 * v323) & 0xEEFB6FAE)
                                                                                + (v323 ^ 0x777DB7D7)
                                                                                + 1469379776) & 0x4884599A ^ (((2 * v323) & 0xEEFB6FAE) + (v323 ^ 0x777DB7D7)) & 0x10)
                                                                              + 538529354);
  v325 = v324 - ((2 * v324 - 1701039570) & 0xD1C879F2);
  LODWORD(STACK[0x640]) = v325 - 1238215152;
  LODWORD(STACK[0x690]) = ((v325 - 1238215152) ^ 0x68E43CF9)
                        + (v322 ^ 0x34BC4983)
                        - ((2 * (((v325 - 1238215152) ^ 0x68E43CF9) + (v322 ^ 0x34BC4983))) & 0x8183DB0E)
                        - 1061032569;
  LODWORD(STACK[0x668]) = ((v325 - 1238215152) ^ 0x971BC306)
                        + v315
                        - ((2 * (((v325 - 1238215152) ^ 0x971BC306) + v315) + 203452422) & 0xB9C26B22)
                        - 487494252;
  v326 = malloc(0x408uLL);
  STACK[0xAF0] = (unint64_t)v326;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(480 * (v326 != 0)) ^ v5] - 8))();
}

uint64_t sub_18CAE5FD4(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unint64_t v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  char v78;
  char v79;
  char v80;
  int v81;
  unsigned int v82;

  v11 = v6 - 364;
  v12 = STACK[0x630];
  LODWORD(STACK[0x480]) = LODWORD(STACK[0x630]) ^ 0x4A8412A9;
  LODWORD(STACK[0x458]) = (STACK[0x608] & v7) - ((2 * (STACK[0x608] & v7)) & 0x135D5128) + 162441364;
  LODWORD(STACK[0x450]) = (v7 | LODWORD(STACK[0x610])) - ((2 * (v7 | LODWORD(STACK[0x610]))) & 0xF12CEBE) + 126445407;
  v13 = STACK[0x628];
  LODWORD(STACK[0x4A0]) = LODWORD(STACK[0x628]) >> 8;
  LODWORD(STACK[0x608]) = HIBYTE(v13) ^ 0xEF9384C4;
  LODWORD(STACK[0x478]) = v9
                        + LODWORD(STACK[0x5E0])
                        + v5
                        - 1700049830
                        - ((2 * (v9 + LODWORD(STACK[0x5E0]) + v5 - 1700049830)) & 0xA40D85E2)
                        + 1376174833;
  LODWORD(STACK[0x438]) = v10 - 1238215144;
  v14 = STACK[0x640];
  v15 = LODWORD(STACK[0x640]) ^ v1;
  v16 = (v15 & 0x684CEC41 ^ 0x65014960)
      + (v15 & 0x200CE841 ^ 0x903CB01D)
      - ((v15 & 0x684CEC41 ^ 0x65014960) & 0x240CE961);
  v17 = LODWORD(STACK[0x690]) ^ v3;
  v18 = ((STACK[0x690] & 0xFFFFFDFF ^ 0x82EA3D4A)
       + (STACK[0x690] & 0x4D4B7045 ^ 0x4D014005)
       - ((STACK[0x690] & 0xFFFFFDFF ^ 0x82EA3D4A) & 0x4D4B7045)) ^ 0xD4030C9;
  LODWORD(STACK[0x44C]) = (v18 | 0xB800E353) - (v18 | 0x47FF1CAC) + 1207901356;
  v19 = ((v15 & 0x9212020E ^ 0x1800E20F | v15 & 0x5A111B0) - 1) ^ 0xBF12E266;
  v20 = LODWORD(STACK[0x668]) ^ 0xDCE13591;
  LODWORD(STACK[0x440]) = v20 - 449817616 + v2 - ((2 * (v20 - 449817616 + v2)) & 0xA24107DE) - 786398225;
  v21 = (v19 - ((2 * v19) & 0x3640718) + 32695180) ^ 0x3450E14E | v16 ^ 0x913DF85D;
  v22 = v21 - ((2 * v21) & 0xE2182546) - 250867037;
  LODWORD(STACK[0x464]) = v22;
  v23 = (((-1933756032 * v17 - ((427455232 * v17) & 0xB26BEA00) + 1496708475) ^ 0x5935F57B) & 0xFFFFFF80 | ((119110259 * v17 - ((238220518 * v17) & 0x88A5442C) + 1146266134) >> 25)) ^ 0x22;
  v24 = v23 - ((2 * v23) & 0xB9732648) + 1555665700;
  v25 = (1811939328 * v4 - ((-671088640 * v4) & 0xDFFFFFFF) + 1824568893) ^ 0x6CC0B63D | ((-292073701 * v4
                                                                                         - ((-584147402 * v4) & 0xB071846C)
                                                                                         + 1480114742) >> 6);
  v26 = ((2 * v25) & 0xBFBF77CE ^ 0x2814600) + (v25 ^ 0xDEBF58EF);
  v27 = ((-899678208 * (v22 ^ 0xF10C12A3) - ((348127232 * (v22 ^ 0xF10C12A3)) & 0x4C800000) - 1505034311) ^ 0xA64AFFB9) & 0xFFE00000 | ((1892111955 * (v22 ^ 0xF10C12A3) - ((562998438 * (v22 ^ 0xF10C12A3)) & 0x2BA06130) - 1781518184) >> 11);
  v28 = ((2 * v27) & 0xD6F0AC6E ^ 0x20240C) + (v27 ^ 0xEB6AEC31);
  v29 = ((-228342528 * v20 - ((617056768 * v20) & 0x25B33A00) + 316251456) ^ 0x12D99D40) & 0xFFFFFF00 | ((-1259183163 * v20 - ((1776600970 * v20) & 0x86A040BE) + 1129324639) >> 24);
  v30 = ((2 * v29) & 0xFCFDDDD2 ^ 0x82) + (v29 ^ 0xFE7EEEAA);
  v31 = v26 - v30 - ((2 * (v26 - v30) + 1027499524) & 0xAB102DAE) - 198751783;
  v32 = 2 * (((v31 ^ 0xD58816D7) & (v24 ^ 0x5CB99324)) - ((2 * ((v31 ^ 0xD58816D7) & (v24 ^ 0x5CB99324))) & 0x30E7E7E4))
      + 820504548;
  v33 = (v24 ^ 0x893185F3 ^ v31) + (v32 ^ 0x4F99230F) - 2139014379 + ((2 * v32) & 0xFEFD89D4 ^ 0x60CD89C0);
  HIDWORD(v34) = (v33 ^ 0xDAFFFDF7) + v28;
  LODWORD(v34) = (1772274431 * (((2 * v33) & 0xB5FFFBEE) + HIDWORD(v34) - 1359450201)
                - ((1397065214 * (((2 * v33) & 0xB5FFFBEE) + HIDWORD(v34) - 1359450201) + 217516458) & 0x4E84B098)
                + 1841159457) ^ 0x2742584C;
  v35 = (v34 >> 1) - ((2 * (v34 >> 1)) & 0xA13414E8) + 1352272500;
  v36 = 1225264699 * (v35 ^ 0x509A0A74) - ((303045750 * (v35 ^ 0x509A0A74)) & 0x6EB873E8) + 928791028;
  v37 = ((-448640624 * v28 - ((1250202400 * v28 + 488088608) & 0x53A83560) - 127931195) ^ 0x29D41AB5) & 0xFFFFFFF0 | ((-296475495 * v28 - ((-592950990 * v28 - 640583102) & 0x90A4A51A) + 893063086) >> 28);
  v38 = ((2 * v37) & 0xFBED5FFE ^ 8) + (v37 ^ 0xFDF6AFFB);
  v39 = ((151893760 * (v24 ^ 0x5CB99324) - ((303787520 * (v24 ^ 0x5CB99324)) & 0xF2C6BA00) - 110928598) ^ 0xF9635D2A) & 0xFFFFFF00 | ((990449079 * (v24 ^ 0x5CB99324) - ((1980898158 * (v24 ^ 0x5CB99324)) & 0x83B9267E) + 1104974655) >> 24);
  v40 = ((2 * v39) & 0x7FF7BEF8 ^ 0x80) + (v39 ^ 0xBFFBDF3D);
  v41 = ((508559360 * v30 - ((480247808 * v30 + 308281344) & 0x17000000) - 1799668710) ^ 0x8B8B3C1A) & 0xFFF00000 | ((1757266405 * v30 - ((-780434486 * v30 + 950223142) & 0x8BA2A7AC) - 501025687) >> 12);
  v42 = (v41 ^ 0x45D15) - 1063075560 - ((2 * (v41 ^ 0x45D15)) & 0x81459774) + 2722;
  v43 = 513021603 * v38 - ((220736838 * v38 + 247729478) & 0x99C7566) - 63946410;
  v44 = 189890560 * v38 - ((379781120 * v38 + 111345664) & 0x7F6D0000) + 1124613543;
  v45 = v40 + 1074008254 + (v42 ^ 0x9038C1CE ^ v35);
  v46 = 238747648 * (v35 ^ 0x509A0A74) - ((209059840 * (v35 ^ 0x509A0A74)) & 0xF920000);
  v47 = -1293815639 * v40 - 2 * ((-1293815639 * v40 + 2100901668) & 0x71105D5F ^ (-1293815639 * v40) & 3) + 1850315904;
  LODWORD(STACK[0x670]) = HIWORD(v13) ^ 0xF3640A8A;
  v48 = 1895322752 * v40 - ((-504321792 * v40 + 959915008) & 0xDF251B00) - 1943134313;
  v49 = ((v45 + 4038) ^ 0xBFFFFFC) - v38 + ((2 * (v45 + 4038)) & 0x17FFFFF8);
  v50 = -1183072685 * v49 - ((1928821926 * v49 - 1944283662) & 0xB753FA42) - 1581758438;
  v51 = 1275068416 * v49 - ((-1744830464 * v49 - 939524096) & 0xE0000000) + 1473182561;
  v52 = (((v46 + 130614907) ^ 0x7C9067B) & 0xFFFF0000 | HIWORD(v36)) ^ 0x375C;
  v53 = v52 - ((2 * v52) & 0x94CAB38C) - 899327546;
  v54 = ((2 * ((v51 ^ 0x73CEFB61) & 0xFC000000 | (v50 >> 6))) & 0xCFCF79BE ^ 0x2CD49A8)
      + (((v51 ^ 0x73CEFB61) & 0xFC000000 | (v50 >> 6)) ^ 0x66891B2B);
  v55 = ((v44 ^ 0x3FB6BDA7) & 0xFFFF8000 | (v43 >> 17)) ^ 0x4267;
  v56 = v55 - ((2 * v55) & 0x9A51F3D2) - 852952599;
  v57 = ((v48 ^ 0xEF928D97) & 0xFFFFFF80 | (v47 >> 25)) ^ 0x78;
  v58 = ((v57 - ((2 * v57) & 0x793E58C) - 2083917114) ^ 0x49ACAB00 ^ v53) - 1743240415 + v54;
  v59 = v58 - ((2 * v58) & 0x79E92D4C) + 1022662310;
  v60 = v56 ^ 0xCD28F9E9;
  v61 = 2 * (((v59 ^ 0x3CF496A6) & (v56 ^ 0xCD28F9E9)) - ((2 * ((v59 ^ 0x3CF496A6) & (v56 ^ 0xCD28F9E9))) & 0x2EB79E20))
      - 1363698144;
  v62 = (v56 ^ 0xF1DC6F4F ^ v59) + (v61 ^ 0xD3D820CE) - 2104475374 + ((2 * v61) & 0xFADF7DDC ^ 0x584F3C40);
  v63 = STACK[0x678];
  LODWORD(STACK[0x5E0]) = HIBYTE(LODWORD(STACK[0x678])) ^ 0x68BFC8D0;
  LODWORD(STACK[0x610]) = HIWORD(v63) ^ 0x98FF956B;
  v64 = (((824180736 * (v53 ^ 0xCA6559C6) - ((1648361472 * (v53 ^ 0xCA6559C6)) & 0x69400000) - 1262964430) ^ 0xB4B8B132) & 0xFFE00000 | ((-1225981559 * (v53 ^ 0xCA6559C6) - ((1843004178 * (v53 ^ 0xCA6559C6)) & 0x45430A04) + 581010690) >> 11)) ^ 0x45430;
  v65 = v64 - ((2 * v64) & 0xAF64FFBE) + 1471315935;
  v66 = (((-1978697760 * v60 - ((337571776 * v60) & 0xE27E4B00) + 1899963807) ^ 0x713F259F) & 0xFFFFFFE0 | ((877689791 * v60 - ((1755379582 * v60) & 0xD6857820) + 1799535632) >> 27)) ^ 0xD;
  v67 = (((1896947712 * (((2 * v62) & 0x93F7D8F4) + (v62 ^ 0xC9FBEC7A))
         - ((1646411776 * (((2 * v62) & 0x93F7D8F4) + (v62 ^ 0xC9FBEC7A)) + 1756200960) & 0x630FC000)
         + 635347271) ^ 0x3187E147) & 0xFFFFE000 | ((1312000137 * (((2 * v62) & 0x93F7D8F4) + (v62 ^ 0xC9FBEC7A))
                                                   - ((-1670967022 * (((2 * v62) & 0x93F7D8F4) + (v62 ^ 0xC9FBEC7A))
                                                     - 1803598484) & 0x918A08A2)
                                                   + 319072007) >> 19)) ^ 0x918;
  v68 = (((-1369833472 * v54 - ((481558528 * v54 + 255066112) & 0x332C0000) + 556884721) ^ 0x199762F1) & 0xFFFE0000 | ((-551430355 * v54 - ((1044622938 * v54 + 97191834) & 0x215B8050) + 328418293) >> 15)) ^ 0x1215B;
  v69 = v68 - ((2 * v68) & 0xABB98FA) - 2057450371;
  v70 = ((2 * ((v65 ^ 0x57B27FDF) + (v69 ^ 0x7AA23382) + 1)) & 0xFC3FBE8E)
      + (((v65 ^ 0x57B27FDF) + (v69 ^ 0x7AA23382) + 1) ^ 0x7E1FDF47);
  v71 = v67 - ((2 * v67) & 0x3A4F87EA) - 1658338315;
  v72 = (v69 ^ 0x855DCC7D) + ((v66 - ((2 * v66) & 0xC3B47818) - 505791476) ^ 0xB66843D3 ^ v65);
  v73 = ((2 * v72) & 0xAD6C437E) + (v72 ^ 0x56B621BF) + (v71 ^ 0x62D83C0A);
  v74 = v73 - 2 * ((v73 + 692706882) & 0x2097FEFF ^ v73 & 1) - 907944640;
  LODWORD(STACK[0x498]) = (v14 >> 8) ^ 0x21DEC382;
  v75 = v71 ^ (v70 - ((2 * v70 + 45601304) & 0x2330F8EA) - 1829476991) ^ v74;
  LODWORD(STACK[0x470]) = v75 ^ 0x80539606;
  v76 = (v75 ^ 0x2EA553E8)
      + (v74 ^ 0x2097FEFE)
      - ((2 * ((v75 ^ 0x2EA553E8) + (v74 ^ 0x2097FEFE))) & 0xFA70B282)
      - 46638783;
  LODWORD(STACK[0x468]) = v69;
  v77 = v69 ^ 0x888891BE ^ v75;
  LODWORD(STACK[0x430]) = LODWORD(STACK[0x620]) - ((LODWORD(STACK[0x618]) + 181314580) & 0x9D4CF16) - 766396011;
  LODWORD(STACK[0x618]) = v76;
  v78 = (((v76 ^ 0x40) + 101 + ~((2 * (v76 ^ 0x40) + 70) & 0x82)) ^ 0x41) + (v12 ^ 0xB);
  v79 = ((v78 & 0xFE) - ((2 * v78) & 0x14) + 11) ^ 0x66;
  v80 = 98 - -31 * v79;
  LOBYTE(v74) = 62 * v79;
  v81 = LODWORD(STACK[0x5F0]) ^ LODWORD(STACK[0x660]);
  LODWORD(STACK[0x620]) = v77;
  LOBYTE(v76) = v11 + 5;
  LODWORD(STACK[0x5F0]) = HIWORD(v14);
  v82 = ((((v80 - (v74 & v76)) ^ v63 ^ v13 ^ v14) ^ 0xDA)
       - ((2 * (((v80 - (v74 & v76)) ^ v63 ^ v13 ^ v14) ^ 0xDA)) & 0x126)
       + 1630282643) ^ 0x856CA590;
  *(_DWORD *)(a1 + 4 * ((v80 - (v74 & v76)) ^ 0x62u)) = v81 ^ v77 ^ 0x73A409A2 ^ dword_18CF4AB90[(v82 - ((2 * v82) & 0x40011A72) - 1550611143) ^ 0x47D30BD1];
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * v11) - 8))();
}

void sub_18CAE7100()
{
  JUMPOUT(0x18CAE709CLL);
}

uint64_t sub_18CAE7110@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  void *v4;

  LODWORD(STACK[0x630]) = v1;
  v2 = a1 + 488;
  v3 = (a1 - 2053462276) & 0x7A655ADC;
  v4 = malloc(0x404uLL);
  STACK[0xB00] = (unint64_t)v4;
  return ((uint64_t (*)(void))(qword_1E2538EC0[((v4 == 0) * (v3 - 633)) ^ v2] - ((15 * (v2 ^ 0x282u)) ^ 0x223)))();
}

uint64_t sub_18CAE7180(uint64_t a1)
{
  unsigned int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  unint64_t v14;
  int v15;
  int v16;
  __int16 v17;
  unsigned int v18;

  v5 = STACK[0x5D0];
  LODWORD(STACK[0x428]) = v4;
  LODWORD(STACK[0x424]) = v4 ^ v5;
  v6 = ((v4 ^ v5 ^ 0x2B348DEA) - ((2 * (v4 ^ v5 ^ 0x2B348DEA) + 1827475886) & 0x757198A6) - 1322298070) ^ 0x8A294BF1;
  v7 = ((v6 - ((2 * v6 + 1827475886) & 0x757198A6) - 1322298070) ^ 0x3AB8CC53) + (LODWORD(STACK[0x5C0]) ^ 0xC804DA69);
  v8 = ((LODWORD(STACK[0x4A0]) << 7) ^ 0x3092E780) - 615150768;
  LODWORD(STACK[0x5C0]) = v3;
  v9 = ((unsigned __int16)LODWORD(STACK[0x678]) >> 9) ^ 0x8D000A2F;
  v10 = ((((unsigned __int16)v1 >> 9) ^ 0x32478227)
       + ((v1 >> 9) & 0x1B ^ 0xCC986018)
       - ((((unsigned __int16)v1 >> 9) ^ 0x32478227) & 0x3242021B)) ^ 0xCC9DE05B | v8 ^ 0xDB558B50;
  v11 = v10 - ((2 * v10) & 0xA6) + 211;
  v12 = ((v9 | 0xD4250312) - (v9 | 0x2BDAFCED) + 735771885) ^ 0x5925091A | (((v3 << 7) ^ 0x1C62780) - 909767656) ^ 0xC9C60C18;
  v13 = v12 - ((2 * v12) & 0x56) + 171;
  LOBYTE(v7) = (((((2 * v7) & 0xDC) + (v7 ^ 0x6E)) & 0xFE) - ((2 * (((2 * v7) & 0xDC) + (v7 ^ 0x6E)) + 36) & 0x18) + 30) ^ 0xCF;
  HIDWORD(v14) = v13 ^ v11 ^ 0x5C;
  LODWORD(v14) = (v13 ^ ~v11) << 24;
  v15 = LODWORD(STACK[0x498]) ^ (((((v14 >> 31) - ((2 * (v14 >> 31)) & 4) + 6) ^ 2) - 4)
                               - ((2 * ((((v14 >> 31) - ((2 * (v14 >> 31)) & 4) + 6) ^ 2) - 4)) & 0xD6)
                               + 235);
  LOBYTE(v13) = -117 * v7 - 19;
  LODWORD(STACK[0x628]) = v2 ^ 0x255;
  v16 = (v15 ^ (v13 - ((22 * v7) & 0xDA)));
  v17 = (v16 ^ 0x51) - ((2 * (v16 ^ 0x51)) & 0xF2) + 31609;
  v18 = (((v16 ^ 0x4038) - ((2 * (v16 ^ 0x4038)) & 0x12C) + 268646550) ^ 0x10037835)
      + (((v16 ^ 0x262004A4) - (((v2 ^ 0x255) + 201328485) & (2 * (v16 ^ 0x262004A4))) + 513384217) ^ 0xEC5DFDEF);
  *(_DWORD *)(a1 + 4 * ((v13 - ((22 * v7) & 0xDA)) ^ 0xEDu)) = LODWORD(STACK[0x688]) ^ LODWORD(STACK[0x680]) ^ LODWORD(STACK[0x690]) ^ (v18 - ((2 * v18) & 0x2BEB38B8) + 368417884) ^ 0x5E82BB5 ^ dword_18CF297C0[((v17 & 0x7A3 ^ 0x225D3482) + (v17 & 0x85C ^ 0x9A20859) - 1) ^ 0x2BFF3787];
  return ((uint64_t (*)(void))(qword_1E2538EC0[v2] - 8))();
}

void sub_18CAE7530()
{
  JUMPOUT(0x18CAE7430);
}

uint64_t sub_18CAE7540()
{
  unsigned int v0;
  void *v1;

  v0 = STACK[0x628];
  v1 = malloc(0x408uLL);
  STACK[0xB08] = (unint64_t)v1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(338 * (v1 != 0)) ^ v0] - (((v0 - 169) | 0x181) ^ 0x1A9)))();
}

uint64_t sub_18CAE7590(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v4 = LODWORD(STACK[0x480]) ^ LODWORD(STACK[0x620]) ^ 0x3165A916;
  v5 = (2 * v4 + 111957800) & 0x5F04112;
  v4 -= 1102164963;
  v6 = ((((v4 - v5) ^ 0x3165A916) - ((2 * ((v4 - v5) ^ 0x3165A916) + 111957800) & 0x5F04112) - 1102164963) ^ 0x82F82089)
     + LODWORD(STACK[0x5B0]);
  v7 = ((v6 - ((2 * v6) & 0x531BF81E) - 1450312689) | v4 & 1) ^ 0xD833D85A;
  v8 = (v7 - 1989991019 + (~(2 * v7) | 0xED39B4D5) + 1) ^ 0x89632595;
  v9 = ((STACK[0x5A0] & 0x6F406499 ^ 0x62002090)
      - ((2 * (STACK[0x5A0] & 0x6F406499 ^ 0x62002090)) & 0x9E00C810)
      + 1597992232) ^ 0xA7F7C2C;
  v10 = (((v2 - 405) | 0x2A8) - 333472139) * v8
      - ((2 * (((v2 - 405) | 0x2A8) - 333472139) * v8) & 0xF930114)
      - 2016837494;
  v11 = ((v10 ^ v1) & 0x39 ^ 0xAE302B18) + ((v10 ^ v1) & 0xC6 ^ 0x45) - 1;
  v12 = dword_18CF2AE10[((v11 & 0x240007AB ^ 0x104CC482) + (v11 ^ 0xACB0332D) - ((v11 ^ 0xACB0332D) & 0x801FAB)) ^ 0x364CC728];
  *(_DWORD *)(a1
            + 4
            * (((((v2 + 107) | 0xA8) + 117) * v8 - ((2 * (((v2 + 107) | 0xA8) + 117) * v8) & 0x14) - 118) ^ 0x8Au)) = STACK[0x5A0] & 0x90BF9B66 ^ ((v9 | 0xAE8FCE75) - (v9 | 0x5170318A) + 1366307210) ^ LODWORD(STACK[0x478]) ^ LODWORD(STACK[0x668]) ^ 0x666518F5 ^ (v12 - ((2 * v12 + 575539174) & 0xEBCB76D4) + 118275933);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * v2) - 12))();
}

void sub_18CAE7800()
{
  JUMPOUT(0x18CAE7770);
}

uint64_t sub_18CAE7808()
{
  int v0;
  void *v1;

  v1 = malloc(0x404uLL);
  STACK[0xAE0] = (unint64_t)v1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1968 * (v1 != 0)) ^ v0]
                            - (((v0 - 174) | 0x21) ^ (v0 + 1743436805) & 0x9815457F ^ 0x61ELL)))();
}

uint64_t sub_18CAE7874()
{
  int v0;
  int v1;
  unsigned int v2;
  unsigned int v3;

  LODWORD(STACK[0x690]) = LODWORD(STACK[0x590]) ^ 0xB7099816;
  v1 = LODWORD(STACK[0x570]) ^ 0x51D3B1B4;
  v2 = v1
     + (((LODWORD(STACK[0x570]) ^ 0xB745A94) + 1) ^ 0xFDDFFFFF)
     + ((2 * ((LODWORD(STACK[0x570]) ^ 0xB745A94) + 1)) & 0xFBBFFFFE)
     + 35651585;
  v3 = ((v2 - ((2 * v2) & 0xFFB68E24) - 2406638) ^ 0x24B8EC) + v1;
  return sub_18CAAC668(1307574272, 446097052, 223048526, (v3 - ((2 * v3) & 0x538FB3CE) + 700963303) ^ LODWORD(STACK[0x660]) ^ LODWORD(STACK[0x560]) ^ LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x468]) ^ LODWORD(STACK[0x618]) ^ v0 ^ 0xAF4371B9, 0x23u, 650, 752438);
}

void sub_18CAE7C78(_BYTE *a1)
{
  char v1;
  _QWORD *v2;
  int *v3;
  _DWORD *v4;

  a1[17] ^= v1 ^ LOBYTE(STACK[0xBB0]) ^ 0xE2;
  a1[18] ^= LOBYTE(STACK[0xBB1]) ^ 0x7D;
  a1[19] ^= LOBYTE(STACK[0xBB2]) ^ 0x1A;
  a1[20] ^= LOBYTE(STACK[0xBB3]) ^ 0x25;
  v4 = (_DWORD *)STACK[0xA10];
  *v4 = 2023518721;
  *v2 = a1;
  *v3 = LODWORD(STACK[0x978]) ^ 0x777D8E08;
  *(_QWORD *)STACK[0x650] = v4;
  JUMPOUT(0x18CA918B4);
}

uint64_t sub_18CAE7D18(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1680 * (a1 != 0)) ^ (v1 - 1582))) - 12))();
}

void sub_18CAE7D40(void *a1)
{
  free(a1);
  JUMPOUT(0x18CAE7D48);
}

uint64_t sub_18CAE7D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v9 = STACK[0x888];
  LODWORD(STACK[0x888]) = v6 + 1086 + LODWORD(STACK[0x888]) - 1740;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((((v9 + 1973728165) < 0x80000001) * (v6 ^ 0x5FE)) ^ v6))
                                                                                                - 8))(a1, a2, a3, a4, a5, a6, v7);
}

uint64_t sub_18CAE7DA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int8x16_t *v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int8x16_t v9;
  int8x16_t v10;

  v9.i64[0] = 0x6262626262626262;
  v9.i64[1] = 0x6262626262626262;
  v10.i64[0] = 0xB1B1B1B1B1B1B1B1;
  v10.i64[1] = 0xB1B1B1B1B1B1B1B1;
  *(int8x16_t *)(v1 + (((v5 - 1020) ^ v3) & (a1 + v4))) = vaddq_s8(vsubq_s8(*v2, vandq_s8(vaddq_s8(*v2, *v2), v9)), v10);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v8
                                                               + 8
                                                               * ((209 * ((((v7 ^ 0x22D) + v6) & 0x1FFFFFFF0) == 16)) | v5))
                                                   - 8))(((v7 ^ 0x22D) + v6) & 0x1FFFFFFF0, (((v7 ^ 0x22D) + v6) & 0x1FFFFFFF0) - 16);
}

void sub_18CAE7E14()
{
  JUMPOUT(0x18CAE7DDCLL);
}

uint64_t sub_18CAE7E20@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((a2 ^ 0x215) + ((a2 - 31) | 0x60) - 568) * (v2 == a1)) ^ a2)))();
}

uint64_t sub_18CAE7E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  LODWORD(STACK[0x6F4]) = v9;
  STACK[0x840] = *(_QWORD *)(v11 + 8 * v10);
  LODWORD(STACK[0x668]) = a8 ^ 0x556;
  LODWORD(STACK[0x670]) = (a8 ^ 0x556) + 1790221395;
  LODWORD(STACK[0x688]) = -514044794;
  LODWORD(STACK[0x680]) = 2042623983;
  LODWORD(STACK[0x678]) = -1076953617;
  v12 = 80 * ((14 * ((v10 + 1510) ^ 0x644)) ^ 0x4FEu);
  STACK[0x8A0] += v12;
  LODWORD(STACK[0x7EC]) = *(_DWORD *)(v8 + 72);
  LODWORD(STACK[0x7B4]) = *(_DWORD *)(v8 + 76);
  LODWORD(STACK[0x700]) = *(_DWORD *)(v8 + 80);
  LODWORD(STACK[0x804]) = *(_DWORD *)(v8 + 84);
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (int)((((char)(*(_BYTE *)(v8 + 96) ^ 0x5F) < (char)(((80
                                                                                    * ((14 * ((v10 - 26) ^ 0x44)) ^ 0xFE)
                                                                                    - 32) | 0x88)
                                                                                  + 78))
                                     * ((v12 + 617) ^ 0x3B7)) | v12)))();
}

uint64_t sub_18CAE7E68@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W5>, int a5@<W8>)
{
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  _BOOL4 v28;

  v12 = *(unsigned __int8 *)(STACK[0x688] + v6);
  v13 = 1364176807 * (((2 * v12) & 0x1FC) + (v12 ^ 0xFD6EFBFE))
      - ((-1566613682 * (((2 * v12) & 0x1FC) + (v12 ^ 0xFD6EFBFE)) + 1508505244) & v10)
      - 57790411;
  v14 = ((2 * (v6 + (a4 ^ 0x174E9896 ^ v13))) & 0x97FD3DD6) + ((v6 + (a4 ^ 0x174E9896 ^ v13)) ^ 0x4BFE9EEB);
  v15 = (((v14 - 1274978027) >> 16) ^ 0x75FDFDFB) + v14 + ((2 * ((v14 - 1274978027) >> 16)) & 0x1FBF6);
  v16 = (((v15 + 1040409370) >> 8) ^ a2) + v15 + ((2 * ((v15 + 1040409370) >> 8)) & 0x1FFF752);
  v17 = ((v16 - 1090295951) ^ a1 ^ v5)
      + a5
      - 2 * (((v16 - 1090295951) ^ a1 ^ v5) & 0x14C4ACF ^ ((v16 - 1090295951) ^ a1) & v7);
  v18 = v16 - ((2 * v16 + 520833190) & 0x5A2B8CBA) - 56923472;
  v19 = ((2 * (v6 + (v13 ^ 0x628CF2BA ^ v18))) & 0xBFAFFE7E) + ((v6 + (v13 ^ 0x628CF2BA ^ v18)) ^ 0x5FD7FF3F);
  v20 = v19 + 2 * ((v19 - 1607991103) >> 16) + (((v19 - 1607991103) >> 16) ^ 0xBE77FFFF);
  v21 = (((v20 - 508559166) >> 8) ^ 0x57BF6FCF) + v20 + (((v20 - 508559166) >> 7) & 0x17EDF9E);
  v22 = ((v21 - 1980722957) ^ v17 ^ a5)
      + a3
      - 2 * (((v21 - 1980722957) ^ v17 ^ a5) & (a3 + 5) ^ ((v21 - 1980722957) ^ v17) & v7);
  v23 = v21 - ((2 * v21 + 887462826) & 0x7055E4B6) + 1386070064;
  v24 = ((2 * (v6 + (v13 ^ 0xF7B3C6BC ^ v23))) & 0xAFBCECF6) + ((v6 + (v13 ^ 0xF7B3C6BC ^ v23)) ^ 0xD7DE767B);
  v25 = (((v24 + 673286533) >> 16) ^ 0x9FEBBC9A) + v24 + ((2 * ((v24 + 673286533) >> 16)) & 0x17934);
  v26 = (((v25 - 2009740053) >> 8) ^ 0x7EFBD5DB) + v25 + (((v25 - 2009740053) >> 7) & 0x1F7ABB6);
  v27 = ((v26 + 154793744) ^ v22 ^ a3)
      + v5
      - 2 * (((v26 + 154793744) ^ v22 ^ a3) & (v5 + 4) ^ ((v26 + 154793744) ^ v22) & 4);
  if (v8 < 0x6FBFF4B7 != v6 - 1555404989 < 0xA34A6742)
    v28 = v8 < 0x6FBFF4B7;
  else
    v28 = v6 - 1555404989 < v9;
  return ((uint64_t (*)(uint64_t))qword_1E2538EC0[(!v28 * v11) ^ STACK[0x678]])(v27);
}

uint64_t sub_18CAE8230(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  unsigned int v7;
  int v8;
  BOOL v9;
  int v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;

  v8 = STACK[0x678] + 391;
  v9 = LODWORD(STACK[0x660]) == -768964959;
  v10 = STACK[0x510];
  if (LODWORD(STACK[0x660]) != -768964959)
    v10 = STACK[0x438];
  LODWORD(STACK[0x2A8]) = v10;
  v11 = STACK[0x4F0];
  if (v9)
    v11 = STACK[0x428];
  LODWORD(STACK[0x498]) = v11;
  v12 = STACK[0x5C0];
  if (v9)
    v12 = STACK[0x530];
  LODWORD(STACK[0x428]) = v12;
  v13 = STACK[0x500];
  if (v9)
    v13 = STACK[0x37C];
  LODWORD(STACK[0x510]) = v13;
  v14 = LODWORD(STACK[0x668]) == -961433487;
  v15 = STACK[0x3DC];
  if (LODWORD(STACK[0x668]) == -961433487)
    v15 = STACK[0x3D8];
  LODWORD(STACK[0x478]) = v15;
  v16 = STACK[0x410];
  if (!v14)
    v16 = STACK[0x3F0];
  LODWORD(STACK[0x438]) = v16;
  v17 = *(unsigned __int8 *)(STACK[0x688] + v7);
  v18 = 1364176807 * (((2 * v17) & 0xFFFFFFE3) + (v17 ^ 0x7FC6F6F1))
      - ((-1566613682 * (((2 * v17) & 0xFFFFFFE3) + (v17 ^ 0x7FC6F6F1)) + 1510888338) & ((5 * (v8 ^ 0x353)) ^ 0x94BF47FF))
      - 144258374;
  v19 = ((2 * (v7 + (a6 ^ 0x92880C80 ^ v18))) & 0x77FEBFCE) + ((v7 + (a6 ^ 0x92880C80 ^ v18)) ^ 0xBBFF5FE7);
  v20 = (((v19 + 1140891673) >> 16) ^ 0x3F3F6FFF) + v19 + (((v19 + 1140891673) >> 15) & 0xDFFE);
  v21 = (((v20 + 79769626) >> 8) ^ 0xF7F33CF9) + v20 + (((v20 + 79769626) >> 7) & 0x1E679F2);
  v22 = (a1 ^ v6 ^ (v21 + 214823713)) - 608310368 - ((2 * (a1 ^ v6 ^ (v21 + 214823713))) & 0xB77BD740);
  v23 = v21 - ((2 * v21 + 983588870) & 0x501BBFAA) - 983691304;
  v24 = ((2 * (v7 + (v18 ^ 0x62527F24 ^ v23))) & 0xCE76BDCE) + ((v7 + (v18 ^ 0x62527F24 ^ v23)) ^ 0x673B5EE7);
  v25 = (((v24 - 1731944167) >> 16) ^ 0x97FFF5FA) + v24 + ((2 * ((v24 - 1731944167) >> 16)) & 0x1EBF4);
  v26 = (((v25 + 12888863) >> 8) ^ 0x59FF3EEF) + v25 + (((v25 + 12888863) >> 7) & 0x1FE7DDE);
  v27 = ((v26 - 1497011152) ^ v22 ^ 0xDBBDEBA0)
      - 1580791855
      - 2 * (((v26 - 1497011152) ^ v22 ^ 0xDBBDEBA0) & 0x21C707DF ^ ((v26 - 1497011152) ^ v22) & 0xE);
  v28 = v26 - ((2 * v26 + 244273700) & 0x18D84144) + 1135856052;
  v29 = ((2 * (v7 + (v18 ^ 0x46338053 ^ v28))) & 0x5772FFE6) + ((v7 + (v18 ^ 0x46338053 ^ v28)) ^ 0x2BB97FF3);
  v30 = (((v29 - 733577203) >> 16) ^ 0xA36DCBFD)
      + v29
      + ((2 * ((v29 - 733577203) >> 16)) & 0x197FA);
  v31 = (((v30 + 819508240) >> 8) ^ 0xBF7FAC77) + v30 + (((v30 + 819508240) >> 7) & 0xFF58EE);
  return ((uint64_t (*)(_QWORD))(qword_1E2538EC0[(1148 * (v7 + 1 > 0xF)) ^ v8] - 4))(((v31 + 1901660057) ^ v27 ^ 0xA1C707D1)+ v6- 2 * (((v31 + 1901660057) ^ v27 ^ 0xA1C707D1) & (v6 + 8) ^ ((v31 + 1901660057) ^ v27) & 8));
}

uint64_t sub_18CAE86B8(int a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  char v44;
  BOOL v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unint64_t v65;
  int v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unsigned int v71;
  _BOOL4 v72;

  v6 = (((a3 + 1003346128) >> 8) ^ 0x7AADD7B) + a3 + (((a3 + 1003346128) >> 7) & 0x155BAF6);
  v7 = v6 + (((v6 + 874707797) >> 5) ^ 0x71084186) - (((v6 + 874707797) >> 4) & 0xDEF7CF2) + 1;
  v8 = v7 - ((2 * v7 - 2043317348) & 0xEB224994) + 950787736;
  v9 = ((2 * ((v8 ^ 0x759124CA) - 1879573490)) & 0xD9F279DC) + (((v8 ^ 0x759124CA) - 1879573490) ^ 0x6CF93CEE);
  v10 = (((v9 - 1828273390) >> 10) ^ 0xDDF42E9C) + v9 + (((v9 - 1828273390) >> 9) & 0x685D38);
  v11 = ((v10 - 1257073546) & 0xFBFEFBFC) + v10 + (((v10 - 1257073546) >> 1) ^ 0x7DFF7DFE);
  v12 = v11 - ((2 * v11 + 1847995632) & 0xEE877044) + 777440922;
  v13 = ((2 * ((v12 ^ 0xF743B822) + 1287124013)) & 0xCFDAFFEC) + (((v12 ^ 0xF743B822) + 1287124013) ^ 0x67ED7FF6);
  v14 = v13 + (((v13 - 1743618038) >> 13) ^ 0x3886001) - (((v13 - 1743618038) >> 12) & 0xF3FFC);
  v15 = v14 + (((v14 - 1802887159) >> 6) ^ 0x80584210) - (((v14 - 1802887159) >> 5) & 0x74F7BDE) + 2;
  v16 = v15 - ((2 * v15 + 677624814) & 0x768DABAE) - 814173234;
  v17 = ((2 * ((v16 ^ 0xBB46D5D7) - 1282870125)) & 0xFDC4FBDE) + (((v16 ^ 0xBB46D5D7) - 1282870125) ^ 0x7EE27DEF);
  v18 = (((v17 - 2128772591) >> 8) ^ 0x75FBF6EB) + v17 + (((v17 - 2128772591) >> 7) & 0x1F7EDD6);
  v19 = (((v18 + 186747686) >> 2) ^ 0x75EEFF1F) + v18 + (((v18 + 186747686) >> 1) & 0x6BDDFE3E);
  v20 = v19 - ((2 * v19 + 711268366) & 0x5D4C5246) - 1009208022;
  v21 = ((2 * ((v20 ^ 0x2EA62923) + 707258702)) & 0x7FFFFBBE) + (((v20 ^ 0x2EA62923) + 707258702) ^ 0x3FFFFDDF);
  v22 = (((v21 - 1073741279) >> 13) ^ 0x7EADB95F)
      + v21
      + (((v21 - 1073741279) >> 12) & 0xB72BE);
  v23 = (((v22 + 1095911618) >> 3) ^ 0x7BE6DF19) + v22 + (((v22 + 1095911618) >> 2) & 0x37CDBE32);
  v24 = v23 - ((2 * v23 + 181850962) & 0x3093C26A) + 1572162270;
  v25 = (v24 ^ 0x13C6B7BF) + ((v24 >> 11) ^ 0xE278D6) + ((2 * (v24 >> 11)) ^ 0xFFFB0E53) - 14680063;
  v26 = (((((2 * v25) & 0x6FEDF7A6) + (v25 ^ 0x37F6FBD3) - 938933203) >> 5) ^ 0xDD57BDFB)
      + ((2 * v25) & 0x6FEDF7A6)
      + (v25 ^ 0x37F6FBD3)
      + (((((2 * v25) & 0x6FEDF7A6) + (v25 ^ 0x37F6FBD3) - 938933203) >> 4) & 0xAAF7BF6);
  v27 = v26 - ((2 * v26 - 714961820) & 0xDD1F4AEC) - 650056792;
  v28 = (v27 ^ 0xDAD3718E) + ((v27 >> 12) ^ 0xE81BB137) + 401204225 + ((2 * (v27 >> 12)) & 0x13C7FE ^ 0xFFECBD91);
  v29 = (((((2 * v28) & 0xF7CFADEE) + (v28 ^ 0xFBE7D6F7) + 68692233) >> 7) ^ 0x6FB7FFFD)
      + ((2 * v28) & 0xF7CFADEE)
      + (v28 ^ 0xFBE7D6F7)
      + (((((2 * v28) & 0xF7CFADEE) + (v28 ^ 0xFBE7D6F7) + 68692233) >> 6) & 0x36FFFFA);
  v30 = v29 - ((2 * v29 + 683692568) & 0x2A034790) + 694275284;
  v31 = ((2 * ((v30 ^ 0x9501A3C8) - 2045107421)) & 0x76F7FDBA) + (((v30 ^ 0x9501A3C8) - 2045107421) ^ 0x3B7BFEDD);
  v32 = (((v31 - 997981917) >> 11) ^ 0xEF7D7B9A) + v31 + (((v31 - 997981917) >> 10) & 0x3AF734);
  v33 = v32 + (((v32 - 720992887) >> 8) ^ 0x100C00) - (((v32 - 720992887) >> 7) & 0x1DFE7FE);
  v34 = v33 + 1 - 2 * ((v33 + 1425439113) & 0x546F761E ^ (v33 + 1) & 4) - 1452937310;
  v35 = (v34 ^ 0xEEFFF849) + ((v34 >> 8) ^ 0xA47F7FC) + ((v34 >> 7) & 0xADEFF6 ^ 0xFF72100F) - 178849795;
  v36 = (((((2 * v35) & 0x3F77F26C) + (v35 ^ 0x9FBBF936) + 1615070922) >> 8) ^ 0x5FFFE1FA)
      + ((2 * v35) & 0x3F77F26C)
      + (v35 ^ 0x9FBBF936)
      + (((((2 * v35) & 0x3F77F26C) + (v35 ^ 0x9FBBF936) + 1615070922) >> 7) & 0x1FFC3F4);
  v37 = v16 ^ v4 ^ v27 ^ (v36 - ((2 * v36 + 8931744) & 0xBAEC945A) + 1572499197);
  v38 = (((2 * (v37 & 7 ^ 1)) | 0x89C334EC) - (v37 & 7 ^ 1) + 991847818) ^ 0xC2739235;
  v39 = ((2 * v38) | 0xAE88A7DA) - v38 + 683387923;
  v40 = (-v37 & 7) - ((-2 * v37) & 4) - 137147974;
  LODWORD(STACK[0x37C]) = v39;
  v41 = v39 ^ 0x819CAA2D;
  if ((v39 ^ 0x819CAA2D) == 0x504AF182)
    v42 = 0;
  else
    v42 = 255;
  LODWORD(STACK[0x3A0]) = v40;
  STACK[0x3C8] = v40 ^ 0xF7D349BA;
  LODWORD(STACK[0x3DC]) = v41;
  v43 = (v42 << (v40 ^ 0xBA)) - ((2 * (v42 << (v40 ^ 0xBA))) & 0xDC70D3C4) + 1849190882;
  v44 = (((_BYTE)v42 << (v40 ^ 0xBA)) - ((2 * ((_BYTE)v42 << (v40 ^ 0xBA))) & 0xC4) - 30) ^ 0x1D;
  if (v41 == 1347088770)
    v44 = 0;
  v45 = LODWORD(STACK[0x660]) == -768964959;
  v46 = STACK[0x670];
  if (LODWORD(STACK[0x660]) == -768964959)
    v46 = STACK[0x464];
  LODWORD(STACK[0x480]) = v46;
  v47 = STACK[0x640];
  if (!v45)
    v47 = STACK[0x350];
  LODWORD(STACK[0x470]) = v47;
  v48 = STACK[0x5F0];
  if (LODWORD(STACK[0x668]) != -961433487)
    v48 = STACK[0x4B0];
  LODWORD(STACK[0x464]) = v48;
  v49 = v12 ^ v3 ^ v24;
  v50 = v8 ^ a1 ^ v20 ^ v30;
  v51 = v49 ^ v34;
  LODWORD(STACK[0x3EC]) = (v50 & 0xFFFFFF80 ^ 0xC3991600)
                        + (v50 & 0x5A10B800 ^ 0x1800A823)
                        - ((v50 & 0xFFFFFF80 ^ 0xC3991600) & 0x5A10B800);
  v52 = ((v50 & 0x7B ^ 0x1716AC5E) - (v50 & 4)) ^ 0x8B3DD38D;
  v53 = ((v52 | 0xC86BD1C5) - (v52 | 0x37942E3A) + 932458042) ^ 0x5440AE0F;
  LODWORD(STACK[0x640]) = v37;
  v54 = ((v37 & 0xFFFFFFF8 ^ 0xE6C89096) + (v37 & 0x86837C48 ^ 0x36C49) - ((v37 & 0xFFFFFFF8 ^ 0xE6C89096) & 0x86837C4A)) ^ 0xC5C0487C;
  LODWORD(STACK[0x4B0]) = ((2 * v54) | 0x82359154) - v54;
  v55 = (v43 & 0xBC ^ 0xCD8D439C) + (v43 ^ 0x2B062) - ((v43 ^ 0x2B062) & 0x290BC);
  LODWORD(STACK[0x678]) = (33686018 * (v55 ^ 0xCD8D633C)) & 0x7553D8E2;
  LODWORD(STACK[0x4F0]) = 16843009 * (v55 ^ 0xCD8D633C) + 984214641;
  v56 = ((1593835520 * (v55 ^ 0xCD8D633C) - (((v55 << 30) - ((v55 ^ 0xCD8D633C) << 25)) & 0x4E000000) + 661633956) ^ 0x276FBBA4) & (v49 ^ v34 ^ 0x6E9D6C30);
  LODWORD(STACK[0x500]) = v56 - ((2 * v56) & 0x58000000) + 741683604;
  LODWORD(STACK[0x530]) = v50 ^ 0xDD87C213;
  v57 = ((v44 & (v50 ^ 0x13)) - ((2 * (v44 & (v50 ^ 0x13))) & 0xB0) + 88) ^ 0x23;
  LODWORD(STACK[0x4A0]) = ((2 * v57) | 0x59B43690) - v57 - 752491336;
  v58 = v50 ^ (v50 >> 8) ^ HIWORD(v50) ^ 0xEA12148D;
  v59 = ((v58 & 0x25 ^ 0xDAD1A224) + (v58 & 0xDA ^ 0x99) - 1) ^ 0xD9EBB6B5;
  LODWORD(STACK[0x5F0]) = v50;
  v60 = (v59 - ((2 * v59) & 0x4028FC) - 2002684802) ^ HIBYTE(v50) ^ 0x8B9B60E1;
  v61 = 16843009 * v60 - ((33686018 * v60) & 0x22A7445A) - 1856789971;
  v62 = 0xE668D621 % STACK[0x680];
  v63 = v51 ^ (v51 >> 8) ^ HIWORD(v51) ^ 0x43A9FC43;
  LODWORD(STACK[0x5C0]) = v51;
  v64 = (((v63 & 0xFD ^ 0xB7FCEEA8) & 0xADD ^ 0x31820A45)
       + (((v63 & 0xFD ^ 0xB7FCEEA8) & 0x422 | v63 & 2) ^ 0x4D4521)
       - 1) ^ HIBYTE(v51) ^ 0x31CF41B6;
  v65 = (*(_QWORD *)(STACK[0xB70] + 8 * v62) ^ 0xC9C9C9C9C9C9C9C9) + 2103980986;
  v66 = 16843009 * v64 - ((33686018 * v64) & 0x2BE3F53A) - 1779303779;
  v67 = (*(_QWORD *)(STACK[0xB70]
                   + 8
                   * (((v65 ^ 0x7FFBFEDBBAF7B7BFLL) - 0x7FFBFEDBBAF7B7BFLL + ((2 * v65) & 0xFFF7FDB775EF6F7ELL))
                    % STACK[0x5A0])) ^ 0xC9C9C9C9C9C9C9C9)
      + 815561086;
  v68 = (*(_QWORD *)(STACK[0xB70]
                   + 8
                   * (((v67 ^ 0xC5FDFFE2B53ACDFFLL) + 0x3A02001D4AC53201 + ((2 * v67) & 0x8BFBFFC56A759BFELL))
                    % STACK[0x5A0])) ^ 0xC9C9C9C9C9C9C9C9)
      + 925802721;
  v69 = *(_QWORD *)(STACK[0xB70]
                  + 8
                  * (((v68 ^ 0xA5EDB77DC587BFBCLL) + 0x5A1248823A784044 + ((2 * v68) & 0x4BDB6EFB8B0F7F78))
                   % STACK[0x5A0]));
  v70 = 2 * v69 - ((4 * v69) & 0x82A3FA21813DA9DCLL) + 0x4151FD10C09ED4EFLL;
  LODWORD(v69) = (v69
                + (v70 & 0x9393939393939392 ^ 0x2362B51A901298C7)
                + ((2 * v70) & 0x2301272306272724 ^ 0xFDFEDDDEFFDADEFBLL)
                - 0x58A95A40189C30FFLL)
               % STACK[0x5A0];
  v71 = ((v69 - ((2 * v69) & 0xA71E7054) - 745588694) ^ 0xAC70639E)
      + 1348416194
      + ((2 * (v69 - ((2 * v69) & 0xA71E7054) - 745588694)) & 0xFFFEB768 ^ 0xA71E3040);
  LODWORD(STACK[0x2E8]) = 33686018 * v53;
  LODWORD(STACK[0x3D8]) = (33686018 * v53) & 0xC6C3E736;
  LODWORD(STACK[0x2E0]) = v53;
  LODWORD(STACK[0x3C0]) = 16843009 * v53 + 1667363739;
  LODWORD(STACK[0x410]) = v61;
  LODWORD(STACK[0x3F0]) = v66;
  LODWORD(STACK[0x670]) = v66 ^ v61;
  v72 = v71 < 0xD05E8E76;
  if (v71 >= 0xD05E8E76)
    v72 = v71 > 0xD05E8E77;
  return ((uint64_t (*)(uint64_t, uint64_t))(qword_1E2538EC0[(343 * !v72) ^ v5] - 4))(3495857782, 0xF4DAB4D8B0D3CEELL);
}

void sub_18CAE9AF0()
{
  JUMPOUT(0x18CAE94B0);
}

uint64_t sub_18CAE9AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;

  v8 = STACK[0x5B0];
  if (LODWORD(STACK[0x660]) != -768964959)
    v8 = STACK[0x580];
  LODWORD(STACK[0x580]) = v8;
  LODWORD(STACK[0x5B0]) = LODWORD(STACK[0x5E0]) ^ 0x495762DF;
  LODWORD(STACK[0x340]) = LODWORD(STACK[0x3C0]) - LODWORD(STACK[0x3D8]);
  v9 = LODWORD(STACK[0x4F0]) - LODWORD(STACK[0x678]);
  LODWORD(STACK[0x4F0]) = v9;
  LODWORD(STACK[0x3D8]) = LODWORD(STACK[0x4A0]) ^ v9;
  LODWORD(STACK[0x298]) = LODWORD(STACK[0x3F0]) ^ 0xE5C66371;
  STACK[0x678] = (a7 + 1110836179) & 0xBDC9FBFF;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1685 * (v7 - 1487072877 >= STACK[0x680])) ^ a7] - 8))();
}

void sub_18CAEA284()
{
  JUMPOUT(0x18CAE9C08);
}

uint64_t sub_18CAEA2A0@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * a1) - 12))(4294967189, 42);
}

void sub_18CAEA364()
{
  JUMPOUT(0x18CAEA318);
}

void sub_18CAEA370()
{
  JUMPOUT(0x18CA918B4);
}

uint64_t sub_18CAEA424()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  v3 = IOObjectRelease(STACK[0x734]);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[((*(_DWORD *)(v1 + 2540) != v0)
                                                           * (((v2 - 1037) | 0x100) ^ 0x3C2)) | (v2 - 1037) | 0x100]
                                          - ((((v2 - 1037) | 0x100) + 112) | 0x208u)
                                          + 1588))(v3);
}

uint64_t sub_18CAEA480(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;

  *(_BYTE *)(v11 + ((int)a2 + v8) % a1) ^= *(_BYTE *)(a2 + v12 + a6) ^ v13;
  v14 = (((a2 + 1 - v7) | (unint64_t)(v7 - (a2 + 1))) >> (v10 ^ a7)) & 1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((v14 | (4 * v14)) ^ (v8 + (int)v7 + 265))))();
}

uint64_t sub_18CAEA4E4(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v7 + ((int)a5 - 1544884126) % a1) ^= *(_BYTE *)(a5 + v8 - 1544884126) ^ 0xE6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1912 * (a5 + 1 == a4 + 64)) ^ v6)))();
}

uint64_t sub_18CAEA54C(unsigned int a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v6 + ((int)v5 - 2139391791) % a1) ^= *(_BYTE *)(v5 + v7 + (v3 - 4) - 2139392764) ^ 0x2C;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1504 * (v5 + 1 != a3 + 319)) ^ v3)))();
}

uint64_t sub_18CAEA5B0@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t (*v17)(void);

  v8 = (v4 - 1339267178) % a1;
  v9 = (v4 - 1339267185) % a1;
  v10 = (v4 - 1339267215) % a1;
  v11 = *(unsigned __int8 *)(v7 + v10);
  HIDWORD(v13) = -(int)v10 ^ v11 ^ *(unsigned __int8 *)(a2 + (v10 & 0xF)) ^ *(unsigned __int8 *)(v5 + (v10 & 0xF) + 2) ^ *(unsigned __int8 *)(v6 + (v10 & 0xF) + 2);
  LODWORD(v13) = ((105 * (v10 & 0xF)) ^ v11 ^ byte_18CF268A0[v10 & 0xF] ^ byte_18CF28E30[v10 & 0xF] ^ byte_18CF2C140[v10 & 0xF]) << 24;
  v12 = v13 >> 26;
  v14 = (v4 - 1339267355) % a1;
  HIDWORD(v13) = *(unsigned __int8 *)(a2 + (v9 & 0xF)) ^ *(unsigned __int8 *)(v7 + v9) ^ *(unsigned __int8 *)(v5 + (v9 & 0xF) + 2) ^ *(unsigned __int8 *)(v6 + (v9 & 0xF) + 2) ^ (87 * (v9 & 0xF));
  LODWORD(v13) = HIDWORD(v13) << 24;
  v15 = v13 >> 31;
  LODWORD(v10) = byte_18CF268A0[v14 & 0xF] ^ *(unsigned __int8 *)(v7 + v14) ^ byte_18CF28E30[v14 & 0xF];
  v16 = byte_18CF2C140[v14 & 0xF];
  HIDWORD(v13) = v10 ^ v14 ^ v16;
  LODWORD(v13) = (v10 ^ (105 * (((v4 - 1339267355) % a1) & 0xF)) ^ v16) << 24;
  v17 = (uint64_t (*)(void))qword_1E2538EC0[(28 * (v4 + 1 != v3 + 256)) ^ v2];
  *(_BYTE *)(v7 + v8) ^= (105 * (v8 & 0xF)) ^ (87 * (v8 & 0xF)) ^ *(_BYTE *)(a2 + (v8 & 0xF)) ^ *(_BYTE *)(v5 + (v8 & 0xF) + 2) ^ *(_BYTE *)(v6 + (v8 & 0xF) + 2) ^ (v15 + (((v2 + 68) | 0xC0) ^ 0xD8) - ((2 * v15) & 0x12)) ^ (v12 - ((2 * v12) & 0x48) - 92) ^ byte_18CF268A0[v8 & 0xF] ^ byte_18CF28E30[v8 & 0xF] ^ byte_18CF2C140[v8 & 0xF] ^ ((v13 >> 27) - ((2 * (v13 >> 27)) & 0x90) - 56) ^ 0x65;
  return v17();
}

uint64_t sub_18CAEA7A0()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  int v6;

  v3 = STACK[0x940];
  v4 = STACK[0x788];
  v5 = ((v0 ^ 0x4E4) + 202138569) & 0xF3F39FEF;
  STACK[0x8A0] -= 448;
  *(_QWORD *)(v3 + 64) = 0x6205527E24145F56;
  *(_QWORD *)(v3 + 72) = 0x6396BFB8EB1E3730;
  *(_QWORD *)(v3 + 80) = 0x9C69404714E1C8CFLL;
  *(_QWORD *)(v3 + 92) = 0xEA2EC3AA4C3E9D2CLL;
  STACK[0x9A8] = v5 + *(_QWORD *)(v2 + 8 * (v0 ^ 0x4E4)) - 1010;
  STACK[0xAA0] = v3;
  LODWORD(STACK[0x894]) = v4;
  STACK[0x710] = v1;
  v6 = ((2 * ((v5 - 1811858719) & 0x6BFEC7FD ^ 0x69A) - 52) & (2 * *(_DWORD *)(v3 + 68)) ^ 0x78)
     + (*(_DWORD *)(v3 + 68) & 0x3F ^ 0xD936EBC3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((1310
                                               * ((((v4 ^ 0xEEC1CB6E) + 650712067 + v6) ^ 0xBBDF6D6A)
                                                + 1142985302
                                                + ((2 * ((v4 ^ 0xEEC1CB6E) + 650712067 + v6)) & 0x77BEDAD4) < 0xFFFFFFC0)) ^ v5))
                            - 8))();
}

uint64_t sub_18CAEA7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unint64_t v4;
  int v5;
  uint64_t v6;

  STACK[0x8A0] = v4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                 + 8
                                                                                 * (((((v3 - 1233406449) & 0x49844EDD)
                                                                                    + 293)
                                                                                   * ((v5 - 546355592) < 0x7D1)) ^ v3))
                                                                     - 8))(a1, a2, a3, 4294924389);
}

uint64_t sub_18CAEA808()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1019 * (dword_1EE0569EC == 1197784504)) ^ (v0 - 436)))
                            - (11 * ((v0 - 436) ^ 0x554u)
                             + (unint64_t)(v0 - 1405))
                            + 1179))();
}

uint64_t sub_18CAEA828()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = v3 < v4;
  *(_BYTE *)(v6 + v8 - 0x72D381F2486801FELL) = 15 * (v1 ^ 0x3F) + *(_BYTE *)(v5 + v2 - 0x29F27ED6AE2D377BLL) - 85;
  if (v10 == v7 - 0x4FB80415D6DBB925 < v0)
    v10 = v7 - 0x4FB80415D6DBB925 < v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((111 * !v10) ^ v1)) - 4))();
}

void sub_18CAEA8D0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;

  LODWORD(STACK[0x9EC]) = a2 + v5;
  STACK[0x840] = (a5 + 1508) + *(_QWORD *)(a1 + 8 * a5) - 1571;
  JUMPOUT(0x18CAEA904);
}

uint64_t sub_18CAEA98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, unsigned __int8 a5@<W8>)
{
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                 + 8
                                                                                 * ((1888
                                                                                   * (a5 == (a4 ^ 0x5C))) ^ a4))
                                                                     - ((a4 - 278) ^ 0x297)))(a1, a2, a3, 1548403731);
}

uint64_t sub_18CAEA9D0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned __int8 *v13;
  int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;

  v13 = (unsigned __int8 *)(v7 + a1 + a4);
  v14 = ((((v13[1] ^ v11) - ((2 * (v13[1] ^ v11)) & 0xE6)) << 8) + 1552577280) ^ 0x5C8A7300;
  v15 = (v14 - 697038554 - ((2 * v14) & 0x2CE81200)) ^ 0xD6740926 | ((*v13 ^ v11)
                                                                   + ((4 * v10) ^ 0xD4F04B4)
                                                                   - ((2 * (*v13 ^ v11)) & 0x1F0)) ^ 0xD4F0EF8;
  v16 = ((((v13[2] ^ v11) - (v12 & (2 * (v13[2] ^ v11)))) << 16) + 1446051840) ^ 0x56310000;
  v17 = (v15 - 1288618852 - ((2 * v15) & 0x66627938)) ^ 0xB3313C9C | (v16 - 1102261865 - ((2 * v16) & 0x7C980000)) ^ 0xBE4CD197;
  LODWORD(v13) = ((((v13[3] ^ v11) - ((2 * (v13[3] ^ v11)) & 0x6C)) << 24) + 905969664) ^ 0x36000000;
  LODWORD(v13) = (v17 + 770999828 - ((2 * v17) & 0x5BE90C28)) ^ 0x2DF48614 | ((_DWORD)v13
                                                                            - 1164756354
                                                                            - ((2 * (_DWORD)v13) & 0x74000000)) ^ 0xBA933A7E;
  *(_DWORD *)(a2 + ((a4 + v9) & 0xFFFFFFFC)) = (_DWORD)v13 + v8 - ((2 * (_DWORD)v13) & 0xDC1928E2);
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((1626 * (a4 + 4 + v9 < 0x40)) ^ v10)) - 4))();
}

uint64_t sub_18CAEAB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((615 * ((v9 + 1 + v7) < 0x10)) ^ v8)) - 4))();
}

uint64_t sub_18CAEAD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((8 * ((v8 + 1 + v7) < 0x20)) | (((v8 + 1 + v7) < 0x20) << 6)) ^ v9))
                            - 4))();
}

uint64_t sub_18CAEAFA8@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((111 * ((v3 + 1 + v2) < 0x30)) ^ a2)) - 8))();
}

uint64_t sub_18CAEB134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((2 * ((v8 + 1 + v7) < 0x40)) | (32
                                                                                        * ((v8 + 1 + v7) < 0x40))) ^ a5))
                            - 12))();
}

uint64_t sub_18CAEB2EC@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X6>, int a4@<W8>)
{
  _DWORD *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  LODWORD(STACK[0x7EC]) = a1;
  LODWORD(STACK[0x700]) = a2;
  LODWORD(STACK[0x7B4]) = v6;
  LODWORD(STACK[0x804]) = a4;
  v8 = (v4[18] ^ v5) + (a1 ^ v5);
  v9 = (v4[19] ^ v5) + (v6 ^ v5);
  v4[18] = v8 + v5 - (v7 & (2 * v8));
  v4[19] = v9 + v5 - (v7 & (2 * v9));
  v10 = v4[21];
  v11 = (v4[20] ^ v5) + (LODWORD(STACK[0x700]) ^ v5);
  v4[20] = v11 + v5 - (v7 & (2 * v11));
  v4[21] = (v10 ^ v5) + (LODWORD(STACK[0x804]) ^ v5) + v5 - (v7 & (2 * ((v10 ^ v5) + (LODWORD(STACK[0x804]) ^ v5))));
  STACK[0x8A0] -= 320;
  return ((uint64_t (*)(uint64_t, uint64_t))STACK[0x840])(a3, 413486843);
}

uint64_t sub_18CAEBC98()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((53
                                          * (((LOBYTE(STACK[0x690]) + 72) ^ (LODWORD(STACK[0x9EC])
                                                                                            - 526565115 > (LODWORD(STACK[0x894]) ^ 0xEEC1CB6E))) & 1)) ^ (LODWORD(STACK[0x690]) - 132)))
                            - 12))();
}

uint64_t sub_18CAEBEDC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v10 = ((_BYTE)a2 + (_BYTE)a5) & 0xF;
  *(_BYTE *)(STACK[0xAA0] + 2087596544 + (((v7 - 516) | 0x2Au) ^ 0xFFFFFFFF8391CE3BLL)) = *(_BYTE *)(STACK[0x710] + (a2 + a5)) ^ *(_BYTE *)(a7 + v10) ^ *(_BYTE *)(v10 + v9 + 3) ^ byte_18CF4F810[v10 + 2] ^ (25 * v10) ^ v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * v7) - 8))();
}

uint64_t sub_18CAEBF8C(uint64_t a1, int8x16_t a2, int8x16_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  int8x16_t *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;

  *v9 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v11 + (a5 + a9)), vandq_s8(vaddq_s8(*(int8x16_t *)(v11 + (a5 + a9)), *(int8x16_t *)(v11 + (a5 + a9))), a2)), a3);
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v14
                                                              + 8
                                                              * (((((v10 - 1687) ^ v12) == 16) * v13) ^ (v10 - 820)))
                                                  - 12))(a1, (a5 + 64));
}

uint64_t sub_18CAEBFEC(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = a3 - 7203682 < (a2 + 49639498);
  if (a2 + 49639498 < (v3 - 420441109) != (a3 - 7203682) < 0x238629D2)
    v5 = a2 + 49639498 < (v3 - 420441109);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((957 * v5) ^ (v3 - 1016435003)))
                            - ((v3 - 1016434458) ^ 0x6C5)))();
}

uint64_t sub_18CAEC00C(uint64_t a1, int a2, int a3)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((491
                                          * (((LODWORD(STACK[0x690]) - 706) | 0x244u) + a2 - 526565179 - 1615 < (LODWORD(STACK[0x690]) ^ 0x46C ^ a3 ^ 0xEEC1C9CF))) ^ (LODWORD(STACK[0x690]) - 513)))
                            - 12))();
}

uint64_t sub_18CAEC024()
{
  uint64_t v0;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((74
                                          * ((char)((LOBYTE(STACK[0x690]) - 17) ^ *(_DWORD *)(STACK[0x720] + 96) ^ 0xBD) < (char)(((LOBYTE(STACK[0x690]) + 85) | 0x48) ^ (LOBYTE(STACK[0x690]) - 12)))) ^ (LODWORD(STACK[0x690]) - 17)))
                            - 8))();
}

uint64_t sub_18CAEC07C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * (int)((((v0 + 2001053315) & 0x88BA5EDF ^ 0x3A4) * (v1 == 168)) ^ v0))
                            - 4))();
}

uint64_t sub_18CAEC0B8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_DWORD *)(a1 + 92) != (((v1 - 297) | 0x68C) ^ 0x4C3E9BD1))
                                          * (((v1 + 286) | 0x445) ^ 0x377)) ^ v1))
                            - 4))();
}

uint64_t sub_18CAEC108@<X0>(uint64_t a1@<X8>)
{
  int v1;
  _BYTE *v2;
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v2 = (_BYTE *)STACK[0x920];
  v3 = v1 - 1379;
  v4 = *(_DWORD *)(a1 + 72);
  *v2 = HIBYTE(v4) ^ 0x15;
  v2[1] = unk_18CF268A1 ^ BYTE2(v4) ^ unk_18CF28E31 ^ 0x69 ^ unk_18CF2C141 ^ 0x5B;
  v2[2] = BYTE1(v4) ^ 0xD2 ^ unk_18CF268A2 ^ unk_18CF28E32 ^ unk_18CF2C142 ^ 0x14;
  v2[3] = v4 ^ 0x3B ^ unk_18CF268A3 ^ unk_18CF28E33 ^ unk_18CF2C143 ^ 0x31;
  v5 = *(_DWORD *)(a1 + 92) + 643329409;
  v6 = v5 < 0x72970A9D;
  v7 = v5 > 0x72970AA1;
  if (v6)
    v7 = v6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(564 * v7) ^ v3] - 4))(105, 140, 0x594994671AE9EDF7, 91, 0x594994671AE9EDF8, 20, 0x594994671AE9EDF9, 49);
}

void sub_18CAEC2F0()
{
  JUMPOUT(0x18CAEC1B0);
}

uint64_t sub_18CAEC2F8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v1 - 1719) | 0x6C8) ^ 0x668) * (v0 == 171)) ^ (v1 - 1362)))
                            - 4))();
}

uint64_t sub_18CAEC32C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((*(_DWORD *)(a1 + 92) == 1279171868) ^ (v1 + 1)) & 1)
                                          * (((v1 + 313524382) | 0x21400505) ^ 0x33F00428)) ^ v1))
                            - 4))();
}

uint64_t sub_18CAEC388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  _BYTE *v5;
  int v6;
  unsigned int v7;
  _BOOL4 v8;
  _BOOL4 v9;

  v4 = 2 * (v3 ^ (v2 + 912));
  v5 = (_BYTE *)STACK[0x920];
  v6 = *(_DWORD *)(a2 + 72);
  *v5 = v6 ^ 0xA8;
  v5[1] = unk_18CF26891 ^ BYTE1(v6) ^ unk_18CF4BCE4 ^ 0x1F ^ 0x14;
  v5[2] = BYTE2(v6) ^ 0x32 ^ unk_18CF26892 ^ unk_18CF4BCE5 ^ 0x4B;
  v5[3] = HIBYTE(v6) ^ 0x4B ^ unk_18CF26893 ^ unk_18CF4BCE6 ^ 0xAF;
  v7 = *(_DWORD *)(a2 + 92) + 1049204722;
  v8 = v7 < 0x8AC8350E;
  if (v8)
    v9 = v8;
  else
    v9 = v7 > 0x8AC83512;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1405 * v9) ^ v4)) - 4))();
}

void sub_18CAEC578()
{
  JUMPOUT(0x18CAEC400);
}

uint64_t sub_18CAEC580()
{
  return ((uint64_t (*)(void))STACK[0xA38])();
}

uint64_t sub_18CAEC590()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((49
                                * (((9 * (v0 ^ 0xCE)) ^ ((((v0 - 1052) ^ 0xFFFFFD4E)
                                                                                          + (unint64_t)(v0 - 1725)) >> 32)) & 1)) ^ (v0 - 568))))();
}

void sub_18CAEC600(uint64_t a1, char a2)
{
  char v2;
  char v3;
  uint64_t v4;

  *(_BYTE *)(STACK[0x718] + a1) ^= *(_BYTE *)(v4 + a1) ^ a2 ^ v2 ^ v3;
  JUMPOUT(0x18CAEC5C0);
}

uint64_t sub_18CAEC628()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((78
                                * ((*(unsigned int *)(STACK[0x758] + 92) | ((unint64_t)(*(_DWORD *)(STACK[0x758] + 92) < 0x4C3E9D1Cu) << 32))
                                 + 396797075 == ((v0 - 409) ^ 0x63E5449BLL))) ^ (v0 - 550))))();
}

uint64_t sub_18CAEC698()
{
  STACK[0x8A0] -= 32;
  return ((uint64_t (*)(void))STACK[0x780])();
}

uint64_t sub_18CAEC6AC()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  int v5;

  v2 = STACK[0x848];
  v3 = STACK[0xA70] - 0x40AF9B25784C106DLL;
  STACK[0xB40] = v3;
  STACK[0xB48] = v2;
  STACK[0xB38] = v3;
  STACK[0xB50] = v3;
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  v5 = !v4;
  return (*(uint64_t (**)(void))(v1 + 8 * ((1394 * v5) ^ (v0 - 1143))))();
}

uint64_t sub_18CAEC6FC()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  void *v4;
  void *v5;
  BOOL v6;
  int v7;

  v2 = 2 * (v0 ^ 0x611);
  v3 = v2 ^ 0x3EE;
  STACK[0xB30] = 0;
  v4 = malloc(0x408uLL);
  STACK[0xB58] = (unint64_t)v4;
  v5 = malloc(0x404uLL);
  STACK[0xB30] = (unint64_t)v5;
  if (v4)
    v6 = v5 == 0;
  else
    v6 = 1;
  v7 = !v6;
  LODWORD(STACK[0x688]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v7 * (v3 - 591)) ^ v2)) - 8))();
}

uint64_t sub_18CAEC75C()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned __int8 *v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unint64_t v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  unint64_t v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unint64_t v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unint64_t v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  unint64_t v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unint64_t v45;
  int v46;
  int v47;
  unint64_t v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unint64_t v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unint64_t v58;
  int v59;
  unsigned int v60;
  uint64_t v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  unsigned int v180;
  int v181;
  unint64_t v182;
  int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  int v198;
  int v199;
  int v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  unsigned int v205;
  int v206;
  int v207;
  unsigned int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  int v222;
  int v223;
  unsigned int v224;
  int v225;
  int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  int v230;
  unsigned int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  unsigned int v240;
  unsigned int v241;
  int v242;
  unsigned int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  unsigned int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  int v298;
  unsigned int v299;
  int v300;
  unint64_t v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  unsigned int v309;
  int v310;
  unsigned int v311;
  int v312;
  int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  int v319;
  unsigned int v320;
  unsigned int v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  unsigned int v334;
  int v335;
  unsigned int v336;
  unsigned int v337;
  char v338;
  uint64_t v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  int v345;
  uint64_t v346;
  int v347;
  unsigned int v348;
  int v349;
  int v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  int v361;
  int v362;
  int v363;
  unsigned int v364;
  int v365;
  unsigned int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  int v379;
  int v380;
  int v381;
  unsigned int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  unsigned int v402;
  unsigned int v403;
  int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  int v408;
  unint64_t v409;
  int v410;
  unsigned int v411;
  int v412;
  int v413;
  unsigned int v414;
  unsigned int v415;
  int v416;
  unsigned int v417;
  int v418;
  int v419;
  int v420;
  unsigned int v421;
  int v422;
  unsigned int v423;
  int v424;
  int v425;
  int v426;
  unsigned int v427;
  unsigned int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  int v440;
  unsigned int v441;
  unsigned int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  int v447;
  int v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  BOOL v460;
  int v461;
  int v462;
  int v463;
  int v464;
  unsigned int v465;
  int v466;
  __int16 v467;
  int v468;
  unint64_t v469;
  int v470;
  int v471;
  int v472;
  int v473;
  unsigned int v474;
  int v475;
  unsigned int v476;
  int v477;
  int v478;
  unsigned int v479;
  int v480;
  int v481;
  unsigned int v482;
  int v483;
  int v484;
  int v485;
  unsigned int v486;
  unsigned int v487;
  int v488;
  int v489;
  int v490;
  unsigned int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  unsigned int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  unsigned int v508;
  unsigned int v509;
  int v510;
  int v511;
  unsigned int v512;
  unsigned int v513;
  int v514;
  unsigned int v515;
  int v516;
  int v517;
  int v518;
  unsigned int v519;
  int v520;
  int v521;
  int v522;
  unsigned int v523;
  unsigned int v524;
  unsigned int v525;
  int v526;
  int v527;
  unsigned int v528;
  int v529;
  int v530;
  int v531;
  int v532;
  unsigned int v533;
  int v534;
  int v535;
  int v536;
  unsigned int v537;
  unsigned int v538;
  int v539;
  int v540;
  int v541;
  int v542;
  int v543;
  unsigned int v544;
  unsigned int v545;
  unsigned int v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  unsigned int v554;
  int v555;
  unsigned int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  int v567;
  int v568;
  int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  unsigned int v574;
  int v575;
  unsigned int v576;
  unsigned int v577;
  unsigned int v578;
  unsigned int v579;
  int v580;
  unsigned int v581;
  unsigned int v582;
  int v583;
  int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  int v588;
  int v589;
  unsigned int v590;
  int v591;
  unsigned int v592;
  int v593;
  unsigned int v594;
  unsigned int v595;
  int v596;
  unsigned int v597;
  unsigned int v598;
  unsigned int v599;
  unsigned int v600;
  unsigned int v601;
  unsigned int v602;
  unsigned int v603;
  unsigned int v604;
  int v605;
  unsigned int v606;
  unsigned int v607;
  int v608;
  unsigned int v609;
  unsigned int v610;
  unsigned int v611;
  unint64_t v612;
  unsigned int v613;
  int v614;
  unsigned int v615;
  int v616;
  int v617;
  unsigned int v618;
  unsigned int v619;
  unsigned int v620;
  _BOOL4 v621;

  v1 = byte_18CF35D60[v0[14] ^ 0xDELL];
  HIDWORD(v2) = ~v1;
  LODWORD(v2) = (v1 ^ 0x52) << 24;
  v3 = (v2 >> 25) - ((2 * (v2 >> 25)) & 0xFFFFFFF4) + 122;
  v4 = ((((v3 ^ 0x74) - ((2 * (v3 ^ 0x74)) & 0x14A)) << 8) - 1501780736) ^ 0xA67CA500;
  v5 = byte_18CF35D60[v0[10] ^ 0x9CLL];
  HIDWORD(v2) = ~v5;
  LODWORD(v2) = (v5 ^ 0x52) << 24;
  v6 = v0[13] ^ 0xC8;
  v7 = ((((((v2 >> 25) + (~(2 * (v2 >> 25)) | 0x5F) + 81) ^ 0xF8)
        - ((2 * (((v2 >> 25) + (~(2 * (v2 >> 25)) | 0x5F) + 81) ^ 0xF8)) & 0xAC)) << 8)
      - 1074768384) ^ 0xBFF05600;
  v8 = v7 - ((2 * v7) & 0x6C402800) + 1981813828;
  v9 = byte_18CF2BF40[v6] - 2 * ((byte_18CF2BF40[v6] + 104) & 0x4F ^ byte_18CF2BF40[v6] & 7) + 48;
  v10 = ((v9 >> 4) & 4 | 0xFFFFFFD8) ^ v9;
  LOBYTE(v6) = v6
             - 11
             * ((((unsigned __int16)(117 * v6) >> 8)
                                + (((v6 - ((unsigned __int16)(117 * v6) >> 8)) & 0xFE) >> 1)) >> 3);
  v11 = ((((v10 ^ 0x95) - ((2 * (v10 ^ 0x95)) & 0x102)) << 16) + 1904279552) ^ 0x71810000;
  v12 = byte_18CF35D60[v0[5] ^ 0x50];
  v13 = (v11 + 1073504318 + (~(2 * v11) | 0x8007FFFF) + 1) ^ 0x3FFC603E | (v4 - ((2 * v4) & 0x5F19FE00) + 1871511403) ^ 0x6F8CFF6B;
  HIDWORD(v2) = ~v12;
  LODWORD(v2) = (v12 ^ 0x52) << 24;
  v14 = (unsigned __int8 *)STACK[0xB48];
  v15 = ((((((v2 >> 25) - ((2 * (v2 >> 25)) & 0xEA) - 11) ^ 0xB5)
         - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0xEA) - 11) ^ 0xB5)) & 0x8E)) << 16)
       - 1689845760) ^ 0x9B470000;
  v16 = byte_18CF4B0B0[*v0 ^ 0x3DLL];
  v17 = ((((v16 ^ 4) - ((2 * v16) & 0x46)) << 24) - 1560281088) ^ 0xA3000000;
  LODWORD(v6) = byte_18CF2BF40[*(unsigned __int8 *)(STACK[0xB48]
                                                  + (-10 - (((2 * v6) & 0x16) + (v6 ^ 0xEB)))
                                                  + (((2 * v6) & 0x16) + (v6 ^ 0xEB) + 21)) ^ 0x12];
  v18 = (~(2 * v6 + 16) | 0xFFFFFFD1) + v6 - 128;
  v19 = *(unsigned __int8 *)(STACK[0xB48] + 6);
  STACK[0x560] = v19;
  v20 = byte_18CF2BF40[v19 ^ 0x22] - 2 * (byte_18CF2BF40[v19 ^ 0x22] & 7) + 111;
  v21 = v18 ^ 0x65 ^ ((v18 >> 4) & 4 | 0x98);
  v22 = (v21 - ((2 * v21) & 0x142) + 703156897) ^ 0x29E952A1 | v8 ^ 0x76201444;
  v23 = v22 - ((2 * v22) & 0x32BCE2C0);
  v24 = (((((v20 >> 4) & 4 ^ v20 ^ 0x13) - ((2 * ((v20 >> 4) & 4 ^ v20 ^ 0x13)) & 0x1D4)) << 8)
       - 989926912) ^ 0xC4FEEA00;
  v25 = v14[4];
  STACK[0x570] = v25;
  v26 = (v24 - ((2 * v24) & 0x17C9A600) + 1273287639) ^ 0x4BE4D3D7 | (v15 - ((2 * v15) & 0x73900000) - 104323414) ^ 0xF9C826AA;
  v27 = byte_18CF2BF40[v25 ^ 0xB8]
      - 2 * ((byte_18CF2BF40[v25 ^ 0xB8] + 104) & 0x4F ^ byte_18CF2BF40[v25 ^ 0xB8] & 2)
      - 75;
  v28 = v27 ^ 0x53 ^ ((v27 >> 4) & 4 | 0x78);
  v29 = ((((~(2 * v28) | 0x25) + v28) << 24) - 301989888) ^ 0xED000000;
  v30 = v14[1];
  STACK[0x4E0] = v30;
  v31 = (v26 - ((2 * v26) & 0xA57EACC8) - 759212444) ^ 0xD2BF5664 | (v29 - ((2 * v29) & 0xAAAAAAAA) + 1434816703) ^ 0x558590BF;
  v32 = byte_18CF35D60[v30 ^ 2];
  HIDWORD(v2) = ~v32;
  LODWORD(v2) = (v32 ^ 0x52) << 24;
  v33 = v31 - ((2 * v31) & 0x4C61545E);
  v34 = ((((((v2 >> 25) - ((2 * (v2 >> 25)) & 0x42) - 95) ^ 0xB0)
         - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0x42) - 95) ^ 0xB0)) & 0x68)) << 16)
       + 1681129472) ^ 0x64340000;
  v35 = v14[15];
  STACK[0x580] = v35;
  v36 = (v34 - ((2 * v34) & 0x12580000) - 919802156) ^ 0xC92CEED4 | (v17 - ((2 * v17) & 0x77777777) + 995186751) ^ 0x3B51583F;
  v37 = v36 - 936298741 + (~(2 * v36) | 0x6F9D91E9);
  v38 = byte_18CF2BF40[v35 ^ 0x3A]
      - 2 * ((byte_18CF2BF40[v35 ^ 0x3A] + 104) & 0x7D ^ byte_18CF2BF40[v35 ^ 0x3A] & 1)
      - 28;
  v39 = (v38 >> 4) & 4 ^ v38;
  v40 = v14[9];
  STACK[0x4A0] = v40;
  v41 = byte_18CF35D60[v40 ^ 0x2B];
  HIDWORD(v2) = ~v41;
  LODWORD(v2) = (v41 ^ 0x52) << 24;
  v42 = ((((((v2 >> 25) - ((2 * (v2 >> 25)) & 0x44) + 34) ^ 0xDC)
         - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0x44) + 34) ^ 0xDC)) & 0x126)) << 16)
       + 1586692096) ^ 0x5E930000;
  v43 = (v42 - ((2 * v42) & 0x4D700000) - 424115308) ^ 0xE6B88394 | (v23 + 1499361632) ^ 0x595E7160;
  v44 = v43 - ((2 * v43) & 0x7D9F8392);
  v45 = v14[3];
  STACK[0x4D0] = v45;
  v46 = byte_18CF35D60[v45 ^ 0x5B];
  HIDWORD(v2) = ~v46;
  LODWORD(v2) = (v46 ^ 0x52) << 24;
  v47 = (v37 + 1) ^ 0xC831370B | ((((v2 >> 25) - ((2 * (v2 >> 25)) & 0x84) - 62) ^ 0xDF)
                                - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0x84) - 62) ^ 0xDF)) & 0x1C6)
                                - 1228194333) ^ 0xB6CB3DE3;
  v48 = v14[7];
  STACK[0x4B0] = v48;
  v49 = byte_18CF2BF40[v48 ^ 0xFB]
      - 2 * ((byte_18CF2BF40[v48 ^ 0xFB] + 40) & 0x3D ^ byte_18CF2BF40[v48 ^ 0xFB] & 4)
      - 95;
  v50 = (v33 - 1506760145) ^ 0xA630AA2F | (((v49 ^ (v49 >> 4) & 4) ^ 0xFC)
                                         - ((2 * (v49 ^ (v49 >> 4) & 4 ^ 0xFC)) & 0x18)
                                         - 1080043764) ^ 0xBF9FD70C;
  v51 = v50 - ((2 * v50) & 0xB0CDC1CE) - 664346393;
  LODWORD(STACK[0x5D0]) = v51;
  v52 = v14[8];
  STACK[0x498] = v52;
  v53 = byte_18CF35D60[v52 ^ 5];
  HIDWORD(v2) = ~v53;
  LODWORD(v2) = (v53 ^ 0x52) << 24;
  v54 = ((v2 >> 25) - ((2 * (v2 >> 25)) & 0xE2) - 15) ^ 0x95;
  v55 = (((v54 + (~(2 * (_BYTE)v54) | 0xFFFFFF9F)) << 24) + 822083584) ^ 0x30000000;
  v56 = (v55 - ((2 * v55) & 0xD2000000) + 1769885423) ^ 0x697E4EEF | (v44 - 19938871) ^ 0xFECFC1C9;
  v57 = v56 - ((2 * v56) & 0x7A5BDF9E) - 1121062961;
  LODWORD(STACK[0x660]) = v57;
  STACK[0x5C0] = (unint64_t)v14;
  v58 = v14[2];
  STACK[0x520] = v58;
  v59 = byte_18CF4B0B0[v58 ^ 0x7D] ^ 0x19;
  v60 = (((v59 - ((2 * v59) & 0x90)) << 8) - 459520000) ^ 0xE49C4800;
  v61 = byte_18CF50230[v14[12] ^ 0x5ALL];
  v62 = ((((v61 ^ 0xCF) - ((2 * (v61 ^ 0xCF)) & 0xFFFFFFCF)) << 24) + 1728053248) ^ 0x67000000;
  v63 = (v62 - ((2 * v62) & 0x3E000000) + 530532491) ^ 0x1F9F488B | ((v39 ^ 0x7C)
                                                                   - ((2 * (v39 ^ 0x7C)) & 0x122)
                                                                   - 1140502383) ^ 0xBC055091;
  v64 = (v63 - ((2 * v63) & 0xF9182BE6) - 57928205) ^ 0xFC8C15F3 | (v13 - ((2 * v13) & 0x9086E886) + 1212380227) ^ 0x48437443;
  LODWORD(v58) = (v64 - ((2 * v64) & 0x7D93FEEA) + 1053425525) ^ 0x17749192;
  LODWORD(STACK[0x670]) = v58;
  v65 = (v47 - ((2 * v47) & 0x87F416BC) + 1140460382) ^ 0x43FA0B5E | (v60 - ((2 * v60) & 0x55FA1200) - 352515667) ^ 0xEAFD09AD;
  v66 = v65 - ((2 * v65) & 0x8D9B9DAC) + 1187892950;
  LODWORD(STACK[0x678]) = v66;
  v67 = dword_18CF28E60[v10 ^ 0xD0];
  HIDWORD(v2) = v67 ^ 0x37C6;
  LODWORD(v2) = v67 ^ 0xA1F60000;
  v68 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xE3184DC4) - 242473246;
  v69 = dword_18CF28E60[v61 ^ 0x6A];
  HIDWORD(v2) = v69 ^ 0xC6;
  LODWORD(v2) = v69 ^ 0xA1F63700;
  v70 = dword_18CF2C560[v39 ^ 0x18] ^ ((v2 >> 8) - 536390203 - ((2 * (v2 >> 8)) & 0xC00EB880) + 1659);
  v71 = dword_18CF28E60[v3 ^ 0xFB];
  HIDWORD(v2) = v71 ^ 0xF637C6;
  LODWORD(v2) = v71 ^ 0xA1000000;
  v72 = v68 ^ v70 ^ ((v2 >> 24) - ((2 * (v2 >> 24)) & 0x48C17030) + 610318360) ^ v66;
  LODWORD(STACK[0x640]) = v72;
  v73 = v72 ^ v51 ^ v57;
  LODWORD(STACK[0x5E0]) = v73;
  v74 = v72 ^ v51;
  v75 = v58 ^ v73 ^ 0x5F5B1B52;
  LODWORD(v58) = v73 ^ 0x5F5B1B52;
  LODWORD(STACK[0x608]) = v73 ^ 0x5F5B1B52;
  v76 = dword_18CF28E60[((BYTE2(v75) ^ 0x276AEC10 | 0xCDE94229) - (BYTE2(v75) ^ 0x276AEC10 | 0x3216BDD6) + 840351190) ^ 0xEA83AEF8];
  HIDWORD(v2) = v76 ^ 0x37C6;
  LODWORD(v2) = v76 ^ 0xA1F60000;
  v77 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xBB862160) + 1573064880;
  v78 = dword_18CF38750[HIBYTE(v75) ^ 0x89];
  HIDWORD(v2) = v78 ^ 0x164;
  LODWORD(v2) = v78 ^ 0x94CC7A00;
  v79 = (v2 >> 9) + 49098405 + (~(2 * (v2 >> 9)) | 0xFA25A2B7);
  v80 = (((2 * v79) ^ 0x5DA5D48) - 2 * (((2 * v79) ^ 0x5DA5D48) & 0x10F4D41E ^ (2 * v79) & 4) + 284480539) & 0x32119686 ^ 0x119086;
  v81 = ((v80 | 0x2CF28000) - (v80 | 0xD30D7FFF) - 754089985) ^ v79;
  HIDWORD(v2) = v81 ^ 0xA2;
  LODWORD(v2) = v81 ^ 0x3F9A3D00;
  v82 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0x43D11516) + 568887947;
  v83 = (((2 * (BYTE1(v75) ^ 0xF7)) & 0x120) - (BYTE1(v75) ^ 0xF7) - 1448727697) ^ 0x60241E49;
  v84 = ((v75 ^ 0x54) - 2 * ((v75 ^ 0x54) & 0x7F) + 2943) ^ 0xB82;
  v85 = dword_18CF28E60[(((2 * v83) & 0x8004602C) - v83 - 1079996439) ^ 0x7622BA7C];
  HIDWORD(v2) = v85 ^ 0xF637C6;
  LODWORD(v2) = v85 ^ 0xA1000000;
  v86 = ((v2 >> 24) - ((2 * (v2 >> 24)) & 0xE18B3B0C) + 1891999110) ^ v77 ^ v72 ^ v82;
  v87 = (v84 - ((2 * v84 + 822565292) & 0x25478A3C) + 1260876276) ^ dword_18CF36DF0[(((2 * (v75 ^ 0x73)) | 0x1635A35E)
                                                                                   - (v75 ^ 0x73)
                                                                                   - 186306991) ^ 0xB1AD192];
  v88 = ((2 * v86) & 0x7DDFB9FC ^ 0x3C5118A4) + (v86 ^ 0x20D751AD);
  v89 = (((v86 ^ v87 ^ 0x929DAACF) + 1) ^ 0x1F7E37F9) + v88 + ((2 * ((v86 ^ v87 ^ 0x929DAACF) + 1)) & 0x3EFC6FF2);
  v90 = v88
      + 1091576578
      + (v87 ^ ((v87 ^ 0xCA5279C) - ((2 * (v87 ^ 0xCA5279C) + 2) & 0xD4E3FA7A) + 1785855294) ^ 0xD3A40E1D ^ (v89 - ((2 * v89 + 1126422034) & 0x951E5686) + 1814107724));
  LODWORD(v52) = v90 - ((2 * v90) & 0x8FA1AD26) + 1204868755;
  LODWORD(STACK[0x5F0]) = v75 ^ 0x5D24E9AB;
  LODWORD(STACK[0x510]) = v72 ^ v51;
  LODWORD(STACK[0x5A0]) = v52 ^ v72 ^ v51;
  LODWORD(STACK[0x500]) = v52;
  v91 = v52 ^ v72 ^ v51 ^ v58;
  LODWORD(v58) = v91 ^ v75 ^ 0x5D24E9AB;
  v92 = v91;
  LODWORD(STACK[0x680]) = v91;
  LOBYTE(v72) = v91 ^ v75 ^ 0xAB;
  LODWORD(STACK[0x540]) = v58;
  v93 = dword_18CF2C560[((unsigned __int16)(v58 ^ 0x93FE) >> 8) ^ 0xD7];
  HIDWORD(v2) = v93 ^ 0xB5E83C;
  LODWORD(v2) = v93 ^ 0x79000000;
  v94 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xAF7BEF38) - 675416164;
  v95 = (v58 ^ 0x847E93FE) >> 1;
  v96 = ((((v58 ^ 0x847E93FE) >> 24) ^ 0x51)
       - 1425187015
       + ((2 * (((v58 ^ 0x847E93FE) >> 24) ^ 0x51) + 172) & 0xC4 ^ 0x9EFCBFFF)) ^ dword_18CF36DF0[((v58 ^ 0x847E93FE) >> 24) ^ 0xB6];
  v97 = (((v95 & 0x5B ^ 0xE6649709) & 0x86201118 ^ 0x10000190)
       + ((v95 & 0x5B ^ 0xE6649709 | v95 & 0x24) ^ 0xAFB7F668)
       - (((v95 & 0x5B ^ 0xE6649709 | v95 & 0x24) ^ 0xAFB7F668) & 0x48912118)) ^ 0x97625098 | (((((_BYTE)v72 << 7) - 114) & 0x80 ^ 0x26040380)
                                                                                             + 2
                                                                                             * ((((_BYTE)v72 << 7) - 114) & 0x80)
                                                                                             - 853203062) ^ 0xF3292B8A;
  v98 = v97 - ((2 * v97) & 0x5BC99A38) - 1377514212;
  HIDWORD(v2) = v96 ^ 0xFFFFFFFB;
  LODWORD(v2) = v96 ^ 0xF0D73000;
  v99 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0xED18EB58) + 1988916652;
  LOWORD(v84) = (((2 * v98) ^ 0xD6) - ((2 * ((2 * v98) ^ 0xD6)) & 0xAA) - 43) & 0xFE ^ 0x2C;
  v100 = ((_WORD)v84 - ((2 * (_WORD)v84) & 0xD8) + 1389) & 0x7FE ^ 0x594 | (v98 >> 7) ^ 0x15BC99B;
  v101 = (((2 * (BYTE2(v58) ^ 0xEB)) | 0x7ECF80E0) - (BYTE2(v58) ^ 0xEB) + 1083719568) ^ 0xBB678098;
  v102 = dword_18CF38750[(-803735391 - v101 + ((2 * v101) | 0x5FC7AEBE) + 274432) ^ 0x2BE39710];
  HIDWORD(v2) = v102 ^ 0x164;
  LODWORD(v2) = v102 ^ 0x94CC7A00;
  v103 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xCD12AA14) - 427207414;
  v104 = (((2 * v103) ^ 0xCD12AA14) - ((2 * ((2 * v103) ^ 0xCD12AA14)) & 0x3605BA04) + 453172482) & 0x32119686 ^ 0x22118404;
  v105 = (((2 * v104) | 0x1212F462) - v104 - 151616049) ^ v103;
  HIDWORD(v2) = v105 ^ 0xA8BF;
  LODWORD(v2) = v105 ^ 0xDE150000;
  v106 = v94 ^ dword_18CF2C560[(v100 - ((2 * v100) & 0x1065202) - 930928383) ^ 0xC88329AC] ^ v99 ^ ((v2 >> 16)
                                                                                                  - ((2 * (v2 >> 16)) & 0x1C1E85E0)
                                                                                                  + 235881200);
  v107 = v74 ^ 0xE4690A35 ^ v106;
  v108 = v92 ^ 0xBCBC787B ^ v107;
  v109 = v107;
  LODWORD(STACK[0x550]) = v107;
  v110 = v108 ^ v58 ^ 0x847E93FE;
  LODWORD(STACK[0x590]) = v108;
  v111 = dword_18CF2C560[HIBYTE(v110) ^ 0xAB];
  HIDWORD(v2) = v111 ^ 0x3C;
  LODWORD(v2) = v111 ^ 0x79B5E800;
  v112 = ((v2 >> 8) - ((2 * (v2 >> 8)) & 0xAEF895B6) - 679720229) ^ dword_18CF2C560[(((v108 ^ v58 ^ 0xFE) ^ 0x4A)
                                                                                   + (v110 & 0xE3 ^ 0xBA1)
                                                                                   - (((v108 ^ v58 ^ 0xFE) ^ 0x4A) & 0xFFFFFFE3)) ^ 0xB91];
  v113 = v110 ^ 0x8B0C92F;
  LODWORD(STACK[0x530]) = v110 ^ 0x8B0C92F;
  v114 = dword_18CF2C560[((BYTE2(v110) ^ 0x1E) + (HIWORD(v110) & 0x19 ^ 0x501) - ((BYTE2(v110) ^ 0x1E) & 0x19)) ^ 0x5DE];
  HIDWORD(v2) = v114 ^ 0xE83C;
  LODWORD(v2) = v114 ^ 0x79B50000;
  v115 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x9FE091B4) + 1341147354;
  v116 = dword_18CF28E60[(((v110 >> 8) & 0x16 ^ 0x29C7B903) + ((v110 >> 8) & 0xE9) - 1) ^ 0x29C7B9DF];
  HIDWORD(v2) = v116 ^ 0xF637C6;
  LODWORD(v2) = v116 ^ 0xA1000000;
  LODWORD(STACK[0x4C0]) = v106 ^ v52;
  v117 = v112 ^ ((v2 >> 24) - 1958725055 + (~(2 * (v2 >> 24)) | 0xE97F8B7F)) ^ v115 ^ v106 ^ v52;
  LODWORD(STACK[0x464]) = v117 ^ v109;
  LODWORD(STACK[0x668]) = v117;
  v118 = v117 ^ v109 ^ 0x4E92F357;
  v119 = v118 ^ v108 ^ v113;
  v120 = dword_18CF38750[(((2 * ((v118 ^ v108 ^ v113) ^ 0xB)) | 0xB9909DA)
                        - ((v118 ^ v108 ^ v113) ^ 0xB)
                        + 1513323283) & 0x3FFFFFFF ^ 0x25CC8410];
  HIDWORD(v2) = v120 ^ 0x164;
  LODWORD(v2) = v120 ^ 0x94CC7A00;
  v121 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xEDC5D6D4) - 152900758;
  v122 = (((2 * v121) ^ 0xEDC5D6D4) - ((2 * ((2 * v121) ^ 0xEDC5D6D4)) & 0x684A740) + 591549345) & 0x32119686 ^ 0x32011480;
  LODWORD(v61) = dword_18CF28E60[((HIWORD(v119) & 0x6E ^ 0x823) + (HIWORD(v119) & 0x91) - 1) ^ 0x8B2];
  HIDWORD(v2) = v61 ^ 0x37C6;
  LODWORD(v2) = v61 ^ 0xA1F60000;
  LODWORD(v61) = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x78F192A0) + 1014548816;
  LODWORD(v19) = ((2 * (BYTE1(v119) ^ 0x5B)) | 0x62956E58) - (BYTE1(v119) ^ 0x5B) - 826980140;
  LODWORD(v19) = dword_18CF38750[((v19 & 0x314A8896 ^ 0x44008813) + (v19 & 0x3769 ^ 0x80117729) - 1) ^ 0xF55B48C9];
  HIDWORD(v2) = v19 ^ 0x164;
  LODWORD(v2) = v19 ^ 0x94CC7A00;
  LODWORD(v19) = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xA33AEF54) + 1369274282;
  LODWORD(v19) = (((2 * v19) ^ 0xA33AEF54) - ((2 * ((2 * v19) ^ 0xA33AEF54)) & 0x305DDEAC) + 942600022) & 0x32119686 ^ v19;
  LODWORD(v52) = v119 ^ 0x9231D2B;
  LODWORD(STACK[0x3F8]) = v119 ^ 0x9231D2B;
  HIDWORD(v2) = v19 ^ 0x19662E;
  LODWORD(v2) = v19 ^ 0x60000000;
  LODWORD(v19) = (v2 >> 24) - ((2 * (v2 >> 24)) & 0x3CBDEA34);
  v123 = ((HIBYTE(v119) ^ 0x1E) - ((2 * (HIBYTE(v119) ^ 0x1E) + 481708) & 0x74152) + 2094239615) ^ dword_18CF36DF0[HIBYTE(v119) ^ 0xF9];
  HIDWORD(v2) = v123 ^ 0x30;
  LODWORD(v2) = v123 ^ 0xC6116000;
  LODWORD(v58) = v61 ^ v121 ^ ((((v122 | 0x21DB42AD) - (v122 | 0xDE24BD52) - 568017582) & 0xAAC69237 ^ 0x82269252)
                             + (((v122 | 0x21DB42AD) - (v122 | 0xDE24BD52) - 568017582) & 0x55196D88 ^ 0x114C89)
                             - 1) ^ v117 ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0xC6C209EC) - 480181002) ^ (v19 - 1637944038);
  v124 = v118 ^ v108 ^ 0x9B19AA4;
  LODWORD(STACK[0x424]) = v124;
  v125 = v58 ^ 0xA157852C;
  v126 = v58;
  LODWORD(v58) = v58 ^ 0xA157852C ^ v118;
  LODWORD(STACK[0x430]) = v58;
  LODWORD(v58) = v58 ^ 0x45ABA2A8;
  v127 = v58 ^ v124;
  v128 = v58;
  LODWORD(STACK[0x4F0]) = v58;
  BYTE2(v118) = BYTE2(v127) ^ BYTE2(v52);
  v129 = ((((v127 ^ v52) >> 24) ^ 0x26)
        + 810854433
        + ((2 * (((v127 ^ v52) >> 24) ^ 0x26) + 428) & 0x294 ^ 0x9EFEAFFF)) ^ dword_18CF36DF0[((v127 ^ v52) >> 24) ^ 0xC1];
  v130 = ((unsigned __int16)(v127 ^ v52) >> 8);
  v131 = (v130 ^ 0x39) - ((2 * (v130 ^ 0x39)) & 0xFA) + 993204093;
  HIDWORD(v2) = v129 ^ 0xD3;
  LODWORD(v2) = v129 ^ 0x758E7900;
  v132 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0x2A5394) - 2146096694;
  v133 = (((2 * (v130 ^ 0xBF)) | 0x1512602) - (v130 ^ 0xBF) + 2069327103) & 0x7FFFFFF ^ 0x4A893D8;
  v134 = (v133 - ((2 * v133 + 17258924) & 0x1179C52) + 961510143) ^ dword_18CF36DF0[((v131 & 0x3810073E ^ 0x400E416)
                                                                                   + (v131 ^ 0x7A350369)
                                                                                   - ((v131 ^ 0x7A350369) & 0x4004073E)) ^ 0x3D12F392];
  HIDWORD(v2) = v134 ^ 0x954CB0;
  LODWORD(v2) = v134 ^ 0x82000000;
  v135 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xC18635D8) - 524084500;
  LODWORD(v58) = (((v127 ^ v52) & 0x65 ^ 0x4B5A4D01) + ((v127 ^ v52) & 0x9A ^ 0x83) - 1) ^ 0x8A68D564;
  LODWORD(v52) = v127 ^ v52 ^ 0xAC8794A;
  LODWORD(STACK[0x410]) = v52;
  v136 = (((2 * (BYTE2(v118) ^ 0xB0)) | 0x3AE5EF5C) - (BYTE2(v118) ^ 0xB0) + 1653409874) ^ 0x8B0ACC8F;
  LODWORD(STACK[0x418]) = v127;
  v137 = (v75 ^ 0xDB6DE861)
       + (((v75 ^ 0xDD79179E) + 1) ^ 0xFAA76FDF)
       + ((2 * ((v75 ^ 0xDD79179E) + 1)) & 0xF54EDFBE)
       + 89690145;
  v138 = dword_18CF2C560[((v136 | 0xEB61211C) - (v136 | 0x149EDEE3) + 345956067) ^ 0xFD191AC4];
  v139 = ((v137 ^ 0x7BD93B3F) - 2077834047 + ((2 * v137) & 0xF7B2767E)) | v138 ^ 0x79B5E83C;
  HIDWORD(v2) = (v139 - ((2 * v139) & 0x3C3E) + 40479) ^ 0x9E1F;
  LODWORD(v2) = v138 ^ 0x79B50000;
  LODWORD(v61) = dword_18CF2C560[((_DWORD)v58 - ((2 * (_DWORD)v58) & 0x8064237A) + 1790318013) ^ 0xAB848D07] ^ v125 ^ v132 ^ v135 ^ 0xBE179ABE ^ ((v2 >> 16) - ((2 * (v2 >> 16)) & 0xED0300F6) - 159285125);
  LODWORD(STACK[0x3F0]) = v61;
  v140 = v61 ^ v128;
  HIDWORD(v2) = v61 ^ v128 ^ 0x2E83E;
  LODWORD(v2) = v61 ^ v128 ^ 0xB4B00000;
  v141 = ((v2 >> 18) - ((2 * (v2 >> 18)) & 0x35C1245E) + 450925103) ^ (((v127 << 14) ^ 0x428B8000)
                                                                     - ((v127 << 15) & 0xA080000)
                                                                     + 84159885);
  HIDWORD(v2) = v141 ^ (v127 >> 18) ^ 0x29DD;
  LODWORD(v2) = v141 ^ 0xE8C14000;
  v142 = (v2 >> 14) - ((2 * (v2 >> 14)) & 0x309DFBB4) + 407829978;
  LODWORD(STACK[0x3E0]) = v142;
  LODWORD(v35) = v52 ^ 0x6C3571D1 ^ v142;
  v143 = ((WORD1(v35) & 0xBB ^ 0xFFD8A713) + (WORD1(v35) & 0x44 ^ 0x41) - 1) ^ 0xCF586547;
  v144 = dword_18CF38750[(((2 * v143) & 0x8B48) - v143 + 2139327067) ^ 0x4F03484F];
  HIDWORD(v2) = v144 ^ 0x164;
  LODWORD(v2) = v144 ^ 0x94CC7A00;
  v145 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x30275AE4) - 1743540878;
  LODWORD(v58) = (((2 * v145) ^ 0x30275AE4) - ((2 * ((2 * v145) ^ 0x30275AE4)) & 0x7F48AF4) + 66733434) & 0x32119686 ^ 0x30008602;
  LODWORD(v58) = ((v58 | 0xDDBD4A84) - (v58 | 0x2242B57B) + 574797179) ^ 0xD3BF22B5;
  v146 = (v58 - ((2 * v58) & 0x7655D828) - 1154814956) ^ v145;
  HIDWORD(v2) = v146 ^ 0x3CD5;
  LODWORD(v2) = v146 ^ 0x1EAF0000;
  v147 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x6ABE0ACA) - 1252063899;
  v148 = ((BYTE1(v35) ^ 0xC0C5096 | 0x9B742079) - (BYTE1(v35) ^ 0xC0C5096 | 0x648BDF86) + 1686888326) ^ 0x977870CE;
  v149 = (v148 - ((2 * v148 + 1896307116) & 0x43C6FC90) + 1516710686) ^ dword_18CF36DF0[(((v35 >> 8) & 0xC3 ^ 0x49248140)
                                                                                       + ((v35 >> 8) & 0x3C ^ 0x100205)
                                                                                       - 1) ^ 0x49348382];
  v150 = (v149 ^ ((v149 ^ 0x5C42032E) - ((2 * (v149 ^ 0x5C42032E) - 951107638) & 0xE67AFE9C) + 1457856307) ^ ((v149 ^ 0x3FE59CCA) - ((2 * (v149 ^ 0x3FE59CCA) + 2) & 0xE764F454) - 206407125) ^ 0xC0956651)
       + 1671929828;
  v151 = ((2 * v150) & 0x417492EE) + (v150 ^ 0xA0BA4977);
  HIDWORD(v2) = v151 + 4568713;
  LODWORD(v2) = v151 + 1598404233;
  v152 = dword_18CF28E60[(((2 * (v52 ^ 0xD1 ^ v142 ^ 0xBA4A335E)) | 0x7EBCF1A8)
                        - (v52 ^ 0xD1 ^ v142 ^ 0xBA4A335E)
                        - 1063155924) & 0x81044FFF ^ 0x81044B51] ^ v61 ^ ((v2 >> 24)
                                                                        - ((2 * (v2 >> 24)) & 0xE71CE00C)
                                                                        - 208769018) ^ 0xD4B1F1B4 ^ v147;
  LODWORD(v58) = (v152 & 0x2387EEED ^ 0x80A73FA5) - ((2 * (v152 & 0x2387EEED ^ 0x80A73FA5)) & 0x464B40D8) + 2070782078;
  v153 = ((v152 & 0xCC001110 ^ 0xE9816B31) + (v152 & 0x10780002 ^ 0x10600003) - 2) ^ 0xC5B1FB2A;
  v154 = (v153 - ((2 * v153) & 0x70802260) - 1203609740) ^ 0x1802CF7C | v58 ^ 0xFB4F337E;
  LODWORD(STACK[0x3D4]) = v35;
  LODWORD(STACK[0x438]) = BYTE3(v35);
  LODWORD(v58) = dword_18CF28E60[BYTE3(v35) ^ 0xBA];
  HIDWORD(v2) = v58 ^ 0xC6;
  LODWORD(v2) = v58 ^ 0xA1F63700;
  LODWORD(v58) = (v154 - ((2 * v154) & 0x8A4A773C) + 1160067998) ^ ((v2 >> 8)
                                                                  - ((2 * (v2 >> 8)) & 0x8188E708)
                                                                  + 1086616452);
  LODWORD(STACK[0x408]) = v61 ^ v128;
  v155 = v61 ^ v128 ^ 0xAFA3E26B ^ v58;
  LODWORD(v61) = v58;
  LODWORD(STACK[0x440]) = v155;
  LODWORD(v58) = v155 ^ v142;
  v156 = v155 ^ v142 ^ 0xEC2D6AB6;
  LODWORD(v52) = v156 ^ v35;
  LODWORD(v35) = v156;
  LODWORD(STACK[0x3C0]) = v156;
  v157 = ((v52 ^ 0x1A) + 263172 - ((2 * v52) & 0x1C8) + 3040) ^ 0x40F14;
  v158 = (((2 * (v52 ^ 0x800A14D6)) | 0xC29C2272) - (v52 ^ 0x800A14D6) - 1632506169) ^ 0xE14405E2;
  v159 = dword_18CF38750[((BYTE2(v52) ^ 0x95 | 0x9B6351F9) - (BYTE2(v52) ^ 0x95 | 0x649CAE06) + 1687989766) ^ 0x9B635116];
  HIDWORD(v2) = v159 ^ 0x164;
  LODWORD(v2) = v159 ^ 0x94CC7A00;
  v160 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x53449698) + 698501964;
  v161 = ((2 * v160) ^ 0x53449698) - ((2 * ((2 * v160) ^ 0x53449698)) & 0x35FE2B04) + 2063537538;
  v162 = ((v161 & 0x32118600 ^ 0xC0024219 | v161 & 0x1086) - 1) ^ v160;
  HIDWORD(v2) = v162 ^ 0x8A54;
  LODWORD(v2) = v162 ^ 0xDA350000;
  v163 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x41B40BBA) - 1596324387;
  v164 = v52;
  LODWORD(v52) = dword_18CF28E60[BYTE1(v52) ^ 0x44];
  HIDWORD(v2) = v52 ^ 0xF637C6;
  LODWORD(v2) = v52 ^ 0xA1000000;
  LODWORD(v52) = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xD38102BA) - 373259939;
  LODWORD(STACK[0x3C8]) = v164;
  v165 = dword_18CF2C560[HIBYTE(v164) ^ 0x31];
  HIDWORD(v2) = v165 ^ 0x3C;
  LODWORD(v2) = v165 ^ 0x79B5E800;
  v166 = v52 ^ dword_18CF36DF0[v158] ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0x46F1A73A) - 1552362595) ^ (v157
                                                                                                  - ((2 * v157 + 822565292) & 0x38B638DE)
                                                                                                  + 350144837) ^ v163;
  LODWORD(v52) = v140 ^ 0x90621B27 ^ v166;
  v167 = v58 ^ 0x52F29CEC ^ v52;
  v168 = v52;
  LODWORD(STACK[0x394]) = v52;
  LODWORD(v58) = v167 ^ v164;
  v169 = v167;
  LODWORD(STACK[0x3A8]) = v167;
  LODWORD(v52) = ((v167 ^ v164) >> 16);
  v170 = ((v52 ^ 0x26) - ((2 * (v52 ^ 0x26)) & 0xF4) + 2042471034) ^ 0x7BEDE26E;
  LODWORD(v52) = (v52 ^ 0xFFFFFF2D) - 820035806 + ((2 * v52) | 0x61C181BE);
  LODWORD(v52) = ((v52 & 0x30202764 ^ 0x8102740) + (v52 ^ 0x3325C03F) - ((v52 ^ 0x3325C03F) & 0xC12764)) ^ 0x3B3427A4;
  LODWORD(v52) = (v52 - ((2 * v52 + 1896307116) & 0x78F8FA30) + 889203182) ^ dword_18CF36DF0[((v170 | 0x8C94A101)
                                                                                            - (v170 | 0x736B5EFE)
                                                                                            + 1936416510) ^ 0x8EC4E126];
  HIDWORD(v2) = v52 ^ 0xFFFFFF81;
  LODWORD(v2) = v52 ^ 0x7E220000;
  LODWORD(v52) = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xB187F2FE) + 1489238399;
  v171 = dword_18CF2C560[(((2 * (BYTE1(v58) ^ 0x20018473)) | 0xBCD484FE) - (BYTE1(v58) ^ 0x20018473) + 563461505) ^ 0xFE6BC66B];
  HIDWORD(v2) = v171 ^ 0xB5E83C;
  LODWORD(v2) = v171 ^ 0x79000000;
  v172 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xC8731CD0) - 465990040;
  v173 = (v58 & 0x51) + (v58 ^ 0xFFFFFFDF) + (v58 | 0x26685AE) + 1;
  v174 = (((2 * (v58 ^ 0x8411004)) & 0x2016C) - (v58 ^ 0x8411004) - 329723063) ^ 0xE419C3BD;
  v175 = ((v173 & 0x3D0055A7 ^ 0x3D0050A4) + (v173 & 0xC2FFAA58 ^ 0x648009) - 1) ^ 0x3F025535;
  v176 = v58 ^ 0x34E61783;
  LODWORD(STACK[0x3EC]) = v58 ^ 0x34E61783;
  LODWORD(v58) = dword_18CF38750[BYTE3(v58) ^ 0x59];
  HIDWORD(v2) = v58 ^ 0x164;
  LODWORD(v2) = v58 ^ 0x94CC7A00;
  LODWORD(v58) = (v2 >> 9) - 1037548371 + (~(2 * (v2 >> 9)) | 0x7BAF76A7);
  v177 = (((2 * v58) ^ 0x84508958) - ((2 * ((2 * v58) ^ 0x84508958)) & 0x156167C8) + 179352549) & 0x32119686 ^ 0x10110602;
  LODWORD(v58) = ((v177 | 0x4CF3F86F) - (v177 | 0xB30C0790) - 1291057264) ^ v58;
  HIDWORD(v2) = v58 ^ 0xFFFFFFC7;
  LODWORD(v2) = v58 ^ 0x9D5EBF00;
  v178 = v166 ^ v61;
  v179 = v172 ^ dword_18CF36DF0[v174] ^ v166 ^ v61 ^ (v175 - ((2 * v175 + 1896307116) & 0x673EB480) - 333248746) ^ v52 ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0xDDF6CE72) - 285513927);
  v180 = v179 ^ v35 ^ v176;
  v181 = dword_18CF38750[HIBYTE(v180) ^ 0x4A];
  v182 = *(unsigned __int8 *)(STACK[0x5C0] + 13);
  STACK[0x388] = v182;
  LODWORD(STACK[0x380]) = (v182 ^ 0x3F) - 12 * ((171 * (v182 ^ 0x3F)) >> 11);
  HIDWORD(v2) = v181 ^ 0x164;
  LODWORD(v2) = v181 ^ 0x94CC7A00;
  v183 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xC5E19B6) + 103746779;
  v184 = (((2 * v183) ^ 0xC5E19B6) - ((2 * ((2 * v183) ^ 0xC5E19B6)) & 0x20B46034) + 811216923) & 0x32119686 ^ v183;
  HIDWORD(v2) = v184 ^ 0x5B;
  LODWORD(v2) = v184 ^ 0x37BB8B00;
  v185 = v2 >> 8;
  LODWORD(v182) = dword_18CF38750[BYTE1(v180) ^ 0x4E];
  HIDWORD(v2) = v182 ^ 0x164;
  LODWORD(v2) = v182 ^ 0x94CC7A00;
  LODWORD(v182) = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xDC134838) + 1846125596;
  LODWORD(v58) = ((2 * v182) ^ 0xDC134838) - ((2 * ((2 * v182) ^ 0xDC134838)) & 0xC920210) + 1179189512;
  LODWORD(v182) = ((v58 & 0x32119686 ^ 0x8684)
                 + (v58 & 0x22009482 ^ 0xAE2C505B)
                 - ((v58 & 0x32119686 ^ 0x8684) & 0x22009482)) & 0xFE1FFFFE ^ v182;
  HIDWORD(v2) = v182 ^ 0x8061C0;
  LODWORD(v2) = v182 ^ 0xC3FFFFFF;
  LODWORD(v182) = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xC7222974) + 1670452410;
  LODWORD(v58) = dword_18CF38750[((BYTE2(v180) ^ 0xA4 | 0x2D69B186) - (BYTE2(v180) ^ 0xA4 | 0xD2964E79) - 761901447) ^ 0x2D69B193];
  HIDWORD(v2) = v58 ^ 0x164;
  LODWORD(v2) = v58 ^ 0x94CC7A00;
  LODWORD(v58) = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x5CDDD016) + 779020299;
  v186 = ((2 * v58) ^ 0x5CDDD016) - ((2 * ((2 * v58) ^ 0x5CDDD016)) & 0x3AD65894) + 1567304778;
  v187 = (v186 & 0x32108406 ^ 0x8E2C697D) + (v186 & 0x11280 ^ 0x10201) - 2;
  LODWORD(v58) = ((v187 & 0x22034BF8 ^ 0x410102D1) + (v187 ^ 0x3E4A6D2E) - ((v187 ^ 0x3E4A6D2E) & 0xA2634BF8)) ^ v58;
  HIDWORD(v2) = v58 ^ 0x3620;
  LODWORD(v2) = v58 ^ 0x6CEF0000;
  LODWORD(v58) = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xEA5E16E0) + 1966017392;
  LODWORD(STACK[0x378]) = v180;
  LOWORD(v187) = (v180 & 0xB6 ^ 0xF1A7) + (v180 & 0x49) - 1;
  v188 = dword_18CF38750[((v187 & 0x1F5 ^ 0x9418AEC0) + (v187 & 0xA ^ 0x20014003) - 1) ^ 0xB419EF66];
  HIDWORD(v2) = v188 ^ 0x164;
  LODWORD(v2) = v188 ^ 0x94CC7A00;
  v189 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x1CC9F41A) + 241498637;
  v190 = v189 ^ (((2 * v189) ^ 0x1CC9F41A) - ((2 * ((2 * v189) ^ 0x1CC9F41A)) & 0x3130F534) + 949516955) & 0x32119686 ^ (v185 - 444569665 + (~(2 * v185) | 0x34FF3083)) ^ v182 ^ v179 ^ 0xB8147BC0 ^ 0x21B39616 ^ v58;
  LODWORD(STACK[0x37C]) = v190;
  v191 = v179 ^ v35 ^ 0x2C51AF9B;
  LODWORD(STACK[0x404]) = v191;
  LODWORD(v35) = STACK[0x680];
  LODWORD(STACK[0x458]) = (LODWORD(STACK[0x680]) ^ 0x24B15DED ^ v169)
                        - ((2 * (LODWORD(STACK[0x680]) ^ 0x24B15DED ^ v169) + 132102218) & 0x4F8DE94)
                        - 227783825;
  v192 = v179 ^ v168;
  LODWORD(v52) = v190 ^ v179 ^ v168;
  LODWORD(v14) = v52 ^ v191 ^ 0x6099139C;
  v193 = STACK[0x510];
  LODWORD(v58) = LODWORD(STACK[0x510]) ^ 0xD79DE9B8;
  LODWORD(v182) = ((2 * ((v52 ^ v191 ^ 0x99532C3) + v58)) & 0x43FEFD5C)
                + (((v52 ^ v191 ^ 0x99532C3) + v58) ^ 0xA1FF7EAE);
  LODWORD(STACK[0x478]) = v182 - ((2 * v182 + 589812622) & 0x3951FB5E) + 1312614262;
  v194 = STACK[0x464];
  v195 = LODWORD(STACK[0x464]) ^ 0xDAB597A7;
  v196 = STACK[0x540];
  v197 = (LODWORD(STACK[0x540]) ^ 0x8BAF0A15)
       + v195
       + 1
       - ((2 * ((LODWORD(STACK[0x540]) ^ 0x8BAF0A15) + v195 + 1)) & 0xD76C9784)
       - 340374590;
  v198 = STACK[0x5D0];
  LODWORD(v182) = (LODWORD(STACK[0x5D0]) ^ 0xB0643DB7) + 1299289891;
  v199 = v182 ^ 0xBDF2BFDF;
  v200 = (2 * v182) & 0x7BE57FBE;
  LODWORD(v19) = v126;
  v201 = v126 ^ 0xC41F6F1C;
  LODWORD(v182) = ((2 * ((v35 ^ 0xDE60BDF) + (v126 ^ 0xC41F6F1C) + 1)) & 0x8E6DBF7A)
                + (((v35 ^ 0xDE60BDF) + (v126 ^ 0xC41F6F1C) + 1) ^ 0x4736DFBD);
  v202 = STACK[0x500];
  v203 = (LODWORD(STACK[0x500]) ^ 0x5C2D1783) + (v61 ^ 0xF050DED) + 1;
  v204 = v182 - ((2 * v182 + 1168422830) & 0x7203CD0C) - 606846371;
  v205 = v178 ^ 0xE0258B25;
  LODWORD(STACK[0x450]) = (LODWORD(STACK[0x668]) ^ 0x48BF0429 ^ v178 ^ 0xE0258B25)
                        - ((2 * (LODWORD(STACK[0x668]) ^ 0x48BF0429 ^ v178 ^ 0xE0258B25) - 772342212) & 0xDB363C32)
                        - 694772425;
  LODWORD(STACK[0x5B0]) = v199 + v200 + 1108164641 + v195;
  LODWORD(STACK[0x374]) = v52 ^ 0xBBA76913;
  v206 = ((2 * v203) & 0x73FCF7FC)
       + (v203 ^ 0x39FE7BFE)
       - ((2 * (((2 * v203) & 0x73FCF7FC) + (v203 ^ 0x39FE7BFE)) + 1952407130) & 0x5E369638)
       + 1766521417;
  LODWORD(STACK[0x470]) = (LODWORD(STACK[0x5E0]) ^ 0x605134F1 ^ v52 ^ 0xBBA76913)
                        - ((2 * (LODWORD(STACK[0x5E0]) ^ 0x605134F1 ^ v52 ^ 0xBBA76913) + 148052344) & 0x578A98E0)
                        - 265365204;
  LODWORD(v35) = v196;
  LODWORD(STACK[0x4F0]) = (v196 ^ 0x135F363B ^ LODWORD(STACK[0x4F0]))
                        - ((2 * (v196 ^ 0x135F363B ^ LODWORD(STACK[0x4F0])) + 843590444) & 0xCA6C1024)
                        - 27648600;
  LODWORD(v52) = v180 ^ 0xE1445727 ^ v14;
  v207 = (v192 ^ 0x188E48DA ^ v52) - ((2 * (v192 ^ 0x188E48DA ^ v52) - 1181361762) & 0x87BFA258) + 548060667;
  v208 = ((2 * ((v179 ^ 0xD46DE7FF) + (v192 ^ 0x882522F2) + 1)) & 0xB7BFFDD6)
       + (((v179 ^ 0xD46DE7FF) + (v192 ^ 0x882522F2) + 1) ^ 0x5BDFFEEB);
  v209 = ((2 * ((v61 ^ 0xF050DED) + v201)) & 0x7BFFDF76)
       + (((v61 ^ 0xF050DED) + v201) ^ 0xBDFFEFBB)
       - 2
       * ((((2 * ((v61 ^ 0xF050DED) + v201)) & 0x7BFFDF76) + (((v61 ^ 0xF050DED) + v201) ^ 0xBDFFEFBB) + 1191752630) & 0x7E31C8BB ^ (((v61 ^ 0xF050DED) + v201) ^ 0xBDFFEFBB) & 1)
       - 986022800;
  LODWORD(STACK[0x468]) = v208 - ((2 * v208 + 1662954196) & 0x5BB32B74) - 546772188;
  v210 = ((2 * ((v178 ^ 0xDAC07C61) + (LODWORD(STACK[0x5A0]) ^ 0x9205180))) & 0xFDBA7C30)
       + (((v178 ^ 0xDAC07C61) + (LODWORD(STACK[0x5A0]) ^ 0x9205180)) ^ 0x7EDD3E18);
  v211 = -2003259451 - v210 - ((1207580852 - 2 * v210) & 0xC93726D6);
  v212 = v193;
  v213 = STACK[0x3F8];
  v214 = (v193 ^ 0x24B63371 ^ v213) - ((2 * (v193 ^ 0x24B63371 ^ v213) + 692771284) & 0x4E6B5C38) + 2077956870;
  v215 = STACK[0x430];
  v216 = ((v58 + 813040745) ^ 0xFFFD7BFE)
       + ((2 * (v58 + 813040745)) & 0xFFFAF7FC)
       + 164401
       + (LODWORD(STACK[0x430]) ^ 0x22A46179)
       + 465;
  LODWORD(v182) = v179 ^ 0xB8147BC0 ^ v198;
  LODWORD(v58) = v198 ^ v214 ^ v211 ^ 0x87D6679D;
  v217 = v212 ^ 0x7E2E181D;
  v218 = LODWORD(STACK[0x680]) ^ 0x40D6534E;
  v219 = LODWORD(STACK[0x5A0]) ^ 0xBBEFF6EE;
  LODWORD(STACK[0x2B8]) = v209;
  LODWORD(STACK[0x2B4]) = v207;
  v220 = v207 ^ v209;
  LODWORD(STACK[0x540]) = v35 ^ 0xC69F5284 ^ v220;
  LODWORD(STACK[0x44C]) = v218 ^ v220;
  LODWORD(STACK[0x510]) = v219 ^ v220;
  LODWORD(STACK[0x420]) = v202 ^ 0x111D4F12 ^ v220;
  v221 = v194 ^ 0xB591EE6F;
  v222 = v19 ^ 0x4633D902;
  LODWORD(STACK[0x3BC]) = v61 ^ 0x8C1E4CBD;
  v223 = LODWORD(STACK[0x5B0]) - ((2 * LODWORD(STACK[0x5B0])) & 0x26379758) - 1826894932;
  v224 = v216 - ((2 * v216) & 0x88F9105A) + 1149012013;
  LODWORD(STACK[0x464]) = v224;
  v225 = v224 ^ v223;
  v226 = v224 ^ v223 ^ 0x20B7B25C ^ v205;
  LODWORD(STACK[0x3B8]) = v179 ^ 0xC801A12F;
  LODWORD(STACK[0x3B0]) = v192 ^ 0x6BB69BDD;
  LODWORD(STACK[0x500]) = v223;
  LODWORD(STACK[0x398]) = v223 ^ v211;
  v227 = v223 ^ v211 ^ 0x1E8C7998 ^ v14;
  LODWORD(STACK[0x428]) = v197 ^ 0x2A20DF55;
  v228 = v227 + (v197 ^ 0x2A20DF55);
  v229 = 2 * ((v227 & (v197 ^ 0x2A20DF55)) - ((2 * (v227 & (v197 ^ 0x2A20DF55))) & 0x5BDECB14)) - 606156012;
  LODWORD(v61) = 2 * &unk_18CF50430;
  LODWORD(STACK[0x430]) = v61;
  v230 = (&unk_18CF50430 ^ 0x7DFFC7FD) - 2113914877 + (v61 & 0xFBFF8FE0);
  v231 = ((2 * v228) & 0xDF7AEFDE) + (v228 ^ 0x6FBD77EF) + (v229 ^ 0xEFC68A1D) + ((2 * v229) & 0x97CF7DEC ^ 0x6872EBD7);
  LODWORD(STACK[0x39C]) = v231 - ((2 * v231 - 1202418158) & 0xD4B0F326) - 964509540;
  v232 = LODWORD(STACK[0x408]) ^ v225;
  LODWORD(STACK[0x2CC]) = v197 ^ 0x30FA0595;
  v233 = v223 ^ v211 ^ v197 ^ 0x30FA0595;
  LODWORD(v52) = v52 ^ v233;
  v234 = ((v230 ^ 0x37EDFFFF) + ((2 * v230) & 0x6FDBFFFE) - 938344447 + (v232 ^ 0xA6276776 ^ v52)) ^ 0x57D7FEBA;
  v235 = LODWORD(STACK[0x640]) ^ 0x13E179D2;
  v236 = LODWORD(STACK[0x410]) ^ 0xE52335F;
  LODWORD(STACK[0x3AC]) = LODWORD(STACK[0x404]) ^ 0x812A0FE1;
  LODWORD(STACK[0x3A0]) = v52 ^ 0x97A991BC;
  LODWORD(v52) = LODWORD(STACK[0x418]) ^ 0xDB85809A;
  LODWORD(STACK[0x2C8]) = v206;
  LODWORD(STACK[0x418]) = v222 ^ v206 ^ v204;
  LODWORD(STACK[0x408]) = v215 ^ 0xA088D767 ^ v206 ^ v204;
  LODWORD(STACK[0x410]) = v236 ^ v206 ^ v204;
  LODWORD(STACK[0x404]) = v52 ^ v206 ^ v204;
  LODWORD(v52) = LODWORD(STACK[0x3F0]) ^ v225;
  v237 = (v234 + 982110410) ^ v52;
  v238 = v52 ^ 0xCECD9E8;
  v239 = v225 ^ 0x74CBEC8B ^ LODWORD(STACK[0x3EC]);
  v240 = LODWORD(STACK[0x660]) ^ v211 ^ 0xC5E76D7E;
  v241 = LODWORD(STACK[0x424]) ^ 0x82496324;
  v242 = LODWORD(STACK[0x678]) ^ v211 ^ 0x411498C5;
  LODWORD(STACK[0x480]) = v211;
  v243 = LODWORD(STACK[0x670]) ^ v211 ^ 0xEB2327B1;
  v244 = v182 ^ 0x216E6C22;
  LODWORD(STACK[0x2AC]) = v214;
  v245 = v182 ^ 0x216E6C22 ^ v214;
  v246 = v240 ^ v245;
  v247 = v242 ^ v245;
  v248 = v243 ^ v245;
  LODWORD(STACK[0x2BC]) = v182;
  v249 = v58 ^ v182;
  if ((v237 & 1) != 0)
    v250 = v246;
  else
    v250 = v249;
  LODWORD(STACK[0x3F0]) = v250;
  if ((v237 & 1) != 0)
    v251 = v249;
  else
    v251 = v247;
  LODWORD(STACK[0x678]) = v251;
  if ((v237 & 1) != 0)
    v252 = v248;
  else
    v252 = v246;
  LODWORD(STACK[0x670]) = v252;
  if ((v237 & 1) != 0)
    v253 = v247;
  else
    v253 = v248;
  LODWORD(STACK[0x3EC]) = v253;
  v254 = LODWORD(STACK[0x608]) ^ 0x2FE50441;
  v255 = LODWORD(STACK[0x5F0]) ^ 0x5295A02B;
  LODWORD(STACK[0x2C0]) = v204;
  v256 = LODWORD(STACK[0x458]) ^ v204;
  LODWORD(STACK[0x680]) = v256;
  v257 = v235 ^ v256;
  v258 = v254 ^ v256;
  if ((v237 & 1) != 0)
    v259 = v217 ^ v256;
  else
    v259 = v257;
  LODWORD(STACK[0x5E0]) = v259;
  if ((v237 & 1) != 0)
    v260 = v258;
  else
    v260 = v217 ^ v256;
  LODWORD(STACK[0x3E8]) = v260;
  v261 = v255 ^ v256;
  if ((v237 & 1) != 0)
    v262 = v257;
  else
    v262 = v261;
  LODWORD(STACK[0x3E4]) = v262;
  if ((v237 & 1) != 0)
    v263 = v261;
  else
    v263 = v258;
  LODWORD(STACK[0x5A0]) = v263;
  v264 = LODWORD(STACK[0x590]) ^ 0xB29E4D2F;
  v265 = LODWORD(STACK[0x550]) ^ 0x957532A2;
  v266 = LODWORD(STACK[0x4C0]) ^ 0x11729AC1;
  v267 = LODWORD(STACK[0x530]) ^ 0x234E11C2;
  LODWORD(STACK[0x2B0]) = v244;
  v268 = v244 ^ LODWORD(STACK[0x4F0]);
  LODWORD(STACK[0x3C4]) = v268;
  v269 = v264 ^ v268;
  v270 = v265 ^ v268;
  v271 = v266 ^ v268;
  if ((v237 & 1) != 0)
    v272 = v269;
  else
    v272 = v270;
  LODWORD(STACK[0x590]) = v272;
  if ((v237 & 1) != 0)
    v273 = v270;
  else
    v273 = v271;
  LODWORD(STACK[0x640]) = v273;
  if ((v237 & 1) != 0)
    v274 = v271;
  else
    v274 = v267 ^ v268;
  LODWORD(STACK[0x550]) = v274;
  if ((v237 & 1) != 0)
    v275 = v267 ^ v268;
  else
    v275 = v269;
  LODWORD(STACK[0x608]) = v275;
  v276 = LODWORD(STACK[0x450]) ^ v223;
  v277 = v241 ^ v276;
  v278 = LODWORD(STACK[0x668]) ^ 0xE281755A ^ v276;
  if ((v237 & 1) != 0)
    v279 = v213 ^ 0x63F05CFE ^ v276;
  else
    v279 = v277;
  LODWORD(STACK[0x530]) = v279;
  if ((v237 & 1) != 0)
    v280 = v278;
  else
    v280 = v213 ^ 0x63F05CFE ^ v276;
  LODWORD(STACK[0x3DC]) = v280;
  if ((v237 & 1) != 0)
    v281 = v221 ^ v276;
  else
    v281 = v278;
  LODWORD(STACK[0x4C0]) = v281;
  if ((v237 & 1) != 0)
    v282 = v277;
  else
    v282 = v221 ^ v276;
  LODWORD(STACK[0x3D8]) = v282;
  v283 = v232 ^ 0x35E482D;
  LODWORD(STACK[0x3B4]) = v225;
  v284 = v225 ^ 0x4FBE4964 ^ LODWORD(STACK[0x3D4]);
  v285 = v225 ^ 0xC748EFE0 ^ LODWORD(STACK[0x3E0]);
  LODWORD(STACK[0x3A4]) = LODWORD(STACK[0x3C8]) ^ 0x1DD48ADA;
  if ((v237 & 1) != 0)
    v286 = v283;
  else
    v286 = v238;
  LODWORD(STACK[0x3D4]) = v286;
  if ((v237 & 1) == 0)
    v238 = v284;
  LODWORD(STACK[0x5F0]) = v238;
  if ((v237 & 1) != 0)
    v287 = v284;
  else
    v287 = v285;
  LODWORD(STACK[0x3C8]) = v287;
  if ((v237 & 1) != 0)
    v288 = v285;
  else
    v288 = v283;
  LODWORD(STACK[0x5D0]) = v288;
  LODWORD(STACK[0x3C0]) ^= 0xB8663ADu;
  v289 = v225 ^ 0x3305132A ^ LODWORD(STACK[0x3A8]);
  v290 = v225 ^ 0xE8A0E425 ^ LODWORD(STACK[0x394]);
  if ((v237 & 1) != 0)
    v291 = v226;
  else
    v291 = v239;
  LODWORD(STACK[0x424]) = v291;
  if ((v237 & 1) != 0)
    v292 = v239;
  else
    v292 = v289;
  LODWORD(STACK[0x668]) = v292;
  if ((v237 & 1) == 0)
    v289 = v290;
  LODWORD(STACK[0x394]) = v289;
  if ((v237 & 1) != 0)
    v293 = v290;
  else
    v293 = v226;
  LODWORD(STACK[0x660]) = v293;
  LODWORD(STACK[0x3A8]) = LODWORD(STACK[0x378]) ^ 0x92A79226;
  LODWORD(STACK[0x384]) = v233;
  v294 = v233 ^ 0xBE5E21D3 ^ LODWORD(STACK[0x374]);
  v295 = v233 ^ 0xE40B5D6B ^ LODWORD(STACK[0x37C]);
  v296 = byte_18CF2BF40[STACK[0x498] ^ 0x1D];
  v297 = v296 - ((2 * v296 - 48) & 0xFFFFFFB6) - 61;
  v298 = ((((v297 >> 4) & 4 ^ v297 ^ 0x27) - ((2 * ((v297 >> 4) & 4 ^ v297 ^ 0x27)) & 0x9A)) << 24) - 855638016;
  v299 = (v298 ^ 0xCD000000) - ((2 * v298) & 0x24000000) + 304603734;
  v300 = byte_18CF35D60[STACK[0x4A0] ^ 0x15];
  HIDWORD(v301) = ~v300;
  LODWORD(v301) = (v300 ^ 0x52) << 24;
  v302 = ((((((v301 >> 25) - ((2 * (v301 >> 25)) & 0x56) + 43) ^ 0xB8)
          - ((2 * (((v301 >> 25) - ((2 * (v301 >> 25)) & 0x56) + 43) ^ 0xB8)) & 0xC4)) << 16)
        - 1654521856) ^ 0x9D620000;
  v303 = v302 - ((2 * v302) & 0xC120000) + 1175050791;
  v304 = (v303 & 0x100000 | 0xB9EDBFFB) - (v303 & 0xB50000 | 0x3940B97B) + (v303 & 0x100000 | 0x9008158);
  v305 = (((v303 & 0x4A0000 ^ 0x3FFFFC) + 6967676) & 0x4A0000 | v299 & 0xE9000000) ^ 0x20000;
  v306 = ((v304 & 0x6AC40000 ^ 0x2A461AA3 | v304 & 0x95310000) - 1) ^ 0xA3E21AA2 | (((v299 & 0x16000000 ^ 0x82875DA7) & 0x14034020 ^ 0x5C188243 | (v299 & 0x16000000 ^ 0x82875DA7) & 0x2841D80)
                                                                                  - 1) ^ 0x4C9FDFE2;
  v307 = (v306 - ((2 * v306) & 0xC58D8566) - 490290509) ^ 0xE2C6C2B3 | (v305 - ((2 * v305) & 0xC2140000) - 408180612) ^ 0xE7ABA87C;
  v308 = byte_18CF4B0B0[STACK[0x4E0] ^ 0xD8] ^ 3;
  v309 = (((v308 - ((2 * v308) & 0x10A)) << 16) - 1736114176) ^ 0x98850000;
  v310 = byte_18CF50230[STACK[0x4D0] ^ 0x79] ^ 0x7C;
  v311 = (v309 - ((2 * v309) & 0x47680000) + 1672740882) ^ 0x63B40012 | (v310 - ((2 * v310) & 0x32) - 1391414247) ^ 0xAD10B419;
  v312 = byte_18CF2BF40[STACK[0x4B0] ^ 0x68];
  v313 = v312 - ((2 * v312 + 80) & 0x56);
  v314 = byte_18CF2BF40[*(unsigned __int8 *)(STACK[0x5C0] + 11) ^ 0x88];
  v315 = v314 - 2 * ((v314 + 8) & 0x1D ^ v314 & 1) - 124;
  v316 = (v307 - ((2 * v307) & 0x757400E4) - 1162215310) ^ 0xBABA0072 | (((v315 ^ (v315 >> 4) & 4) ^ 0x1C)
                                                                       - ((2 * (v315 ^ (v315 >> 4) & 4 ^ 0x1C)) & 0x34)
                                                                       - 1652147430) ^ 0x9D863B1A;
  v317 = v316 - ((2 * v316) & 0xF7D7AC04);
  v318 = byte_18CF35D60[STACK[0x388] ^ 0xBE];
  HIDWORD(v301) = ~v318;
  LODWORD(v301) = (v318 ^ 0x52) << 24;
  v319 = ((v301 >> 25) - ((2 * (v301 >> 25)) & 0x60) - 80) ^ 0xAA;
  v320 = ((((~(2 * v319) | 0xFEB9) + v319) << 16) - 1734082560) ^ 0x98A30000;
  v321 = v320 - ((2 * v320) & 0x1C7A0000);
  v322 = byte_18CF4B0B0[STACK[0x560] ^ 0x16] ^ 0x50;
  v323 = (((v322 - ((2 * v322) & 0x178)) << 8) - 753288192) ^ 0xD319BC00;
  v324 = (v313 - 109) ^ 0x76 ^ (93 - (((v313 - 109) >> 4) & 4));
  v325 = (v323 - ((2 * v323) & 0x55D6DC00) - 1427411299) ^ 0xAAEB6E9D | (v324
                                                                       - ((2 * v324) & 0x88)
                                                                       + 548141892) ^ 0x20ABFB44;
  v326 = byte_18CF2BF40[*(unsigned __int8 *)STACK[0x5C0] ^ 0x13];
  v327 = v326 - 2 * ((v326 + 8) & 0xB ^ v326 & 1) - 14;
  v328 = v327 ^ 0xA7 ^ (-((v327 >> 4) & 4) - 58);
  v329 = (((v328 - 2 * (v328 & 0x3F)) << 24) + 1056964608) ^ 0x3F000000;
  v330 = (v329 - ((2 * v329) & 0x34000000) + 447706200) ^ 0x1AAF7458 | (v311 - ((2 * v311) & 0x67E44AF2) + 871507321) ^ 0x33F22579;
  v331 = v330 - ((2 * v330) & 0xF3C18E0);
  v332 = byte_18CF4B0B0[STACK[0x570] ^ 0x3F] ^ 0xBF;
  v333 = (((v332 - ((2 * v332) & 0x72)) << 24) + 956301312) ^ 0x39000000;
  v334 = (v325 - ((2 * v325) & 0x4186F0CE) - 524060569) ^ 0xE0C37867 | (v333 - ((2 * v333) & 0x9C000000) + 1316771753) ^ 0x4E7C57A9;
  v335 = byte_18CF4B0B0[*(unsigned __int8 *)(STACK[0x5C0] + 10) ^ 0x7BLL] ^ 0x6D;
  v336 = (((v335 - ((2 * v335) & 0x108)) << 8) - 1718582272) ^ 0x99908400;
  v337 = (v317 - 68430334) ^ 0xFBEBD602 | (v336 - ((2 * v336) & 0x350ECA00) + 445080869) ^ 0x1A876525;
  v338 = (LODWORD(STACK[0x380]) ^ 0x7F) + 2 * LOBYTE(STACK[0x380]);
  v339 = byte_18CF50230[*(unsigned __int8 *)(STACK[0x5C0] + 14) ^ 0x57];
  v340 = ((((v339 ^ 0xE6) - ((2 * (v339 ^ 0xE6)) & 0x1A0)) << 8) - 1090138112) ^ 0xBF05D000;
  v341 = byte_18CF4B0B0[*(unsigned __int8 *)(STACK[0x5C0] + 5) ^ 0x6BLL] ^ 0x9A;
  v342 = (((v341 - ((2 * v341) & 0xE6)) << 16) - 1955397632) ^ 0x8B730000;
  v343 = (v342 - ((2 * v342) & 0x737E0000) - 1178625739) ^ 0xB9BF9935 | (v334 - ((2 * v334) & 0xF97EC458) - 54566356) ^ 0xFCBF622C;
  v344 = v343 - ((2 * v343) & 0x47405B0A) - 1549783675;
  v345 = (v340 - ((2 * v340) & 0x4355D200) + 1638590891) ^ 0x61AAE9AB | (v321 + 2117927029) ^ 0x7E3D0075;
  v346 = byte_18CF4B0B0[*(unsigned __int8 *)(STACK[0x5C0]
                                           + (-117 - v338)
                                           + (v338 - 127)) ^ 0xA4];
  v347 = (((v346 ^ 0xC8) - 2 * (v346 & 3)) << 24) - 2097152000;
  v348 = (v347 ^ 0x83000000) - ((2 * v347) & 0xA0000000);
  v349 = byte_18CF35D60[STACK[0x580] ^ 0xF1];
  HIDWORD(v301) = ~v349;
  LODWORD(v301) = (v349 ^ 0x52) << 24;
  v350 = (v301 >> 25) - ((2 * (v301 >> 25)) & 0xFFFFFFE3) + 113;
  v351 = (v345 - ((2 * v345) & 0x452307F2) - 1567521799) ^ 0xA29183F9 | (v348 + 1349925364) ^ 0x507639F4;
  v352 = (v351 - ((2 * v351) & 0x10145B9E) + 134884815) ^ 0x80A2DCF | ((v350 ^ 0xE4)
                                                                     - ((2 * (v350 ^ 0xE4)) & 0x170)
                                                                     - 951140680) ^ 0xC74EBEB8;
  v353 = v352 - ((2 * v352) & 0x11F4DDE8) - 1996853516;
  v354 = byte_18CF50230[STACK[0x520] ^ 0x5B] ^ 0xCE;
  v355 = (((v354 - ((2 * v354) & 0xFFFFFFEF)) << 8) + 360969984) ^ 0x1583F700;
  v356 = (v355 - ((2 * v355) & 0x7F981400) - 3405159) ^ 0xFFCC0A99 | (v331 - 2019685264) ^ 0x879E0C70;
  v357 = ((((v353 ^ 0x81134DD2) >> (STACK[0x438] & 0x10 ^ 0x10))
         - ((2 * ((v353 ^ 0x81134DD2) >> (STACK[0x438] & 0x10 ^ 0x10))) & 0x6A8CE376)
         - 1253674565) ^ 0xB54671BB) >> (STACK[0x438] & 0x10);
  v358 = (v357 - ((2 * v357) & 0x8C) + 70);
  v359 = (v358 ^ 0x82486946) + (v358 & 0xBB ^ 0x15B014B9) - ((v358 ^ 0x82486946) & 0x24808BB);
  v360 = ((v359 ^ 0x95B07573)
        - 2 * (((v359 ^ 0x95B07573) + 948153558) & 0x28801D3F ^ (v359 ^ 0x95B07573) & 1)
        + 1695812116) ^ dword_18CF36DF0[((v358 ^ 0x75FF8C95 | 0x5F41F0B1) - (v358 ^ 0x75FF8C95 | 0xA0BE0F4E) - 1598156978) ^ 0x2ABE7C4D];
  HIDWORD(v301) = v360 ^ 0xDFA7;
  LODWORD(v301) = v360 ^ 0xAECE0000;
  v361 = (v301 >> 16) - ((2 * (v301 >> 16)) & 0xEFAE390A) - 136897403;
  v362 = dword_18CF28E60[v346 ^ 0x6D];
  HIDWORD(v301) = v362 ^ 0xC6;
  LODWORD(v301) = v362 ^ 0xA1F63700;
  LODWORD(v346) = (v301 >> 8) + 1238622422 + ~((2 * (v301 >> 8)) & 0x93A7C1AA);
  LODWORD(v339) = dword_18CF2C560[v339 ^ 0x87];
  HIDWORD(v301) = v339 ^ 0xB5E83C;
  LODWORD(v301) = v339 ^ 0x79000000;
  v363 = v346 ^ dword_18CF36DF0[v350 ^ 0xED] ^ ((v301 >> 24)
                                                               - ((2 * (v301 >> 24)) & 0xD93D0B02)
                                                               - 325155455) ^ (((2 * (v350 ^ 0xA)) & 0x7C)
                                                                             + (v350 ^ 0x6FEF7E34)
                                                                             + 490432070
                                                                             + ((2
                                                                               * ((((2 * (v350 ^ 0xA)) & 0x7C)
                                                                                 + (v350 ^ 0x6FEF7E34)
                                                                                 + 664) & 0x3AF ^ (v350 ^ 0x6FEF7E34 | 0xFFFFFFFD))) ^ 0x21064805)) ^ (v356 - ((2 * v356) & 0x3735B9F6) - 1684349701) ^ v361;
  LODWORD(v339) = v344 ^ 0x53130CF1 ^ v363;
  LODWORD(STACK[0x580]) = v339;
  LODWORD(v339) = (v337 - ((2 * v337) & 0xC59CFB02) - 489783935) ^ 0x2E44399E ^ v339;
  v364 = v339 ^ v353;
  v365 = v339;
  LODWORD(STACK[0x570]) = v339;
  LODWORD(v339) = dword_18CF38750[(((2 * ((v339 ^ v353) ^ 0x55)) | 0x5A52CAE4)
                                 - ((v339 ^ v353) ^ 0x55)
                                 + 1389795982) ^ 0xAD296591];
  HIDWORD(v301) = v339 ^ 0x164;
  LODWORD(v301) = v339 ^ 0x94CC7A00;
  LODWORD(v339) = (v301 >> 9) - ((2 * (v301 >> 9)) & 0x37F7AA86) - 1677994685;
  v366 = ((BYTE1(v364) ^ 0xE | 0xB89E4E64) - (BYTE1(v364) ^ 0xE | 0x4761B19B) + 1197584795) ^ 0x98944864;
  v367 = dword_18CF2C560[(((2 * v366) | 0xE7B7CC6E) - v366 + 203692489) ^ 0xD3D1E016];
  HIDWORD(v301) = v367 ^ 0xB5E83C;
  LODWORD(v301) = v367 ^ 0x79000000;
  v368 = (v301 >> 24) - ((2 * (v301 >> 24)) & 0x38D8869A) - 1670626483;
  v369 = dword_18CF38750[((HIWORD(v364) & 0x8B ^ 0x188) + (HIWORD(v364) & 0x74 ^ 0x31) - 1) ^ 0x183];
  HIDWORD(v301) = v369 ^ 0x164;
  LODWORD(v301) = v369 ^ 0x94CC7A00;
  v370 = (v301 >> 9) - ((2 * (v301 >> 9)) & 0x961711D8) + 1259047148;
  LODWORD(v346) = ((2 * v370) ^ 0x961711D8) - ((2 * ((2 * v370) ^ 0x961711D8)) & 0x1E0C8EFC) + 1862682495;
  LODWORD(v346) = (v346 & 0x32119686 ^ 0x22108686)
                + (v346 & 0x10600 ^ 0x44CB6851)
                - ((v346 & 0x32119686 ^ 0x22108686) & 0x10600);
  v371 = ((v346 & 0x21D3800 ^ 0x4A843121 | v346 & 0x3002C686) - 1) ^ v370;
  HIDWORD(v301) = v371 ^ 0xC0CE;
  LODWORD(v301) = v371 ^ 0x100000;
  LODWORD(v346) = (v301 >> 16) - ((2 * (v301 >> 16)) & 0x4F5C5B8A) - 1481757243;
  v372 = v364 ^ 0x71C9DB05;
  v373 = dword_18CF2C560[HIBYTE(v364) ^ 0x2B];
  HIDWORD(v301) = v373 ^ 0x3C;
  LODWORD(v301) = v373 ^ 0x79B5E800;
  LODWORD(v339) = v339 ^ ((v301 >> 8) - ((2 * (v301 >> 8)) & 0x8F853ADA) - 943547027) ^ v368 ^ (((2 * v339) ^ 0x37F7AA86)
                                                                                              - ((2
                                                                                                * ((2 * v339) ^ 0x37F7AA86)) & 0x180ECBBC)
                                                                                              + 201811423) & 0x32119686 ^ 0xE33AF76D ^ v346;
  v374 = v339 ^ v344;
  LODWORD(v346) = v365 ^ v339 ^ v344;
  LODWORD(STACK[0x520]) = v372;
  v375 = v372 ^ v346 ^ 0x1DA1A8B4;
  v376 = (((2 * (BYTE2(v375) ^ 0xAA)) & 0x1D0) - (BYTE2(v375) ^ 0xAA) - 13540585) ^ 0xDF5BE63F;
  v377 = (((2 * v376) | 0x6E30AC9C) - v376 - 924341838) ^ 0x1772D332;
  v378 = ((BYTE2(v375) ^ 0x3D) + (HIWORD(v375) & 0xF4 ^ 0xB4B76AC0) - ((BYTE2(v375) ^ 0x3D) & 0xF4)) ^ 0xB4B77AF4;
  v379 = (v377 - ((2 * v377 + 17258924) & 0x3BCDE0E) + 2053250013) ^ dword_18CF36DF0[(((2 * v378) | 0x22F1F880)
                                                                                    - v378
                                                                                    - 293141568) ^ 0x1178EC64];
  HIDWORD(v301) = v379 ^ 0xED9E;
  LODWORD(v301) = v379 ^ 0xC3800000;
  v380 = (v301 >> 16) - ((2 * (v301 >> 16)) & 0xD93DCB9E) + 1822352847;
  v381 = ((2 * (BYTE1(v375) ^ 0xE8)) & 0x174) - (BYTE1(v375) ^ 0xE8) - 1473103291;
  v382 = ((v381 & 0x21873 ^ 0x50C08072) + (v381 ^ 0x20233A85) - ((v381 ^ 0x20233A85) & 0x88010073)) ^ 0x50D29843;
  v383 = dword_18CF2C560[((v372 ^ v346) >> 24) ^ 0x9A];
  HIDWORD(v301) = v383 ^ 0x3C;
  LODWORD(v301) = v383 ^ 0x79B5E800;
  v384 = (v301 >> 8) - ((2 * (v301 >> 8)) & 0x28D974AE) + 342669911;
  v385 = (v382 - ((2 * v382 + 285694380) & 0x128A2368) - 2117550454) ^ dword_18CF36DF0[((BYTE1(v375) ^ 0x124C0106 | 0xDBBD1697)
                                                                                      - (BYTE1(v375) ^ 0x124C0106 | 0x2442E968)
                                                                                      + 608364904) ^ 0xC9F1176E];
  HIDWORD(v301) = v385 ^ 0x1B932D;
  LODWORD(v301) = v385 ^ 0xCB000000;
  LODWORD(v339) = dword_18CF28E60[(v372 ^ v346) ^ 0x4C] ^ v339;
  LODWORD(STACK[0x380]) = v363;
  v386 = v384 ^ v339 ^ v363 ^ ((v301 >> 24) - ((2 * (v301 >> 24)) & 0x7BE70440) - 1108114912) ^ v380;
  v387 = v386 ^ v374;
  LODWORD(STACK[0x4D0]) = v386 ^ 0xC458DA69;
  v388 = v386 ^ v374 ^ 0x76850118 ^ v372;
  v389 = (((v388 >> 8) & 0xE1) + ((v388 >> 8) & 0x1E ^ 0x86561605) - 1) ^ 0x8296159A;
  v390 = ((2 * (v388 >> 8)) ^ 0x319BA) - ((2 * ((2 * (v388 >> 8)) ^ 0x319BA)) & 0x1B0) + 728;
  v391 = (((v390 & 0x1AC ^ 0x3200EAC) + (v390 & 0x1A0 ^ 0x844CB103) - ((v390 & 0x1AC ^ 0x3200EAC) & 0x5A0)) ^ 0x876CBA07)
       + (((v389 | 0x237AEBC3) - (v389 | 0xDC85143C) - 595258308) ^ 0x1F39449E);
  v392 = (v391 - ((2 * v391) & 0x528122) - 1071038319) ^ dword_18CF36DF0[BYTE1(v388) ^ 0xF2];
  HIDWORD(v301) = v392 ^ 0x77C208;
  LODWORD(v301) = v392 ^ 0x42000000;
  LODWORD(v339) = dword_18CF38750[HIBYTE(v388) ^ 0x53];
  v393 = (v301 >> 24) - ((2 * (v301 >> 24)) & 0xC5631E66) + 1655803699;
  HIDWORD(v301) = v339 ^ 0x164;
  LODWORD(v301) = v339 ^ 0x94CC7A00;
  LODWORD(v339) = (v301 >> 9) - ((2 * (v301 >> 9)) & 0xC1AEA250) + 1624723752;
  v394 = ((2 * v339) ^ 0xC1AEA250) + 2115632990 - 2 * (((2 * v339) ^ 0xC1AEA250) & 0x1E1A079C ^ (2 * v339) & 0xC) + 2098;
  v395 = ((v394 & 0x30000686 ^ 0x348A0933 | v394 & 0x2119000) - 1) ^ 0x36B82FB6;
  LODWORD(v339) = (v395 - ((2 * v395) & 0x40616D08) - 315572332) ^ v339;
  HIDWORD(v301) = v339 ^ 0x3A;
  LODWORD(v301) = v339 ^ 0xBC415900;
  LODWORD(v339) = (v301 >> 8) - ((2 * (v301 >> 8)) & 0x358DC0E4) + 449241202;
  v396 = ((v387 ^ 0x18 ^ v372 ^ 0x39)
        + (v388 & 0xD4 ^ 0xE9AF2FC4)
        - ((v387 ^ 0x18 ^ v372 ^ 0x39) & 0xD4)) ^ 0xC9BB2C87;
  v397 = v388 ^ 0xFB477B1A;
  v398 = dword_18CF28E60[BYTE2(v388) ^ 0x20];
  HIDWORD(v301) = v398 ^ 0x37C6;
  LODWORD(v301) = v398 ^ 0xA1F60000;
  v399 = dword_18CF2C560[((v396 | 0xFB230DB5) - (v396 | 0x4DCF24A) + 81588810) ^ 0xDB370E9F] ^ ((v301 >> 16)
                                                                                              - ((2 * (v301 >> 16)) & 0xDA65BB12)
                                                                                              - 315433591) ^ v386 ^ 0xC458DA69 ^ v393 ^ 0xAD1B3303 ^ v339;
  v400 = v346 ^ 0x246EE62C ^ v387 ^ 0x76850118;
  LODWORD(STACK[0x378]) = v400;
  LODWORD(STACK[0x4B0]) = v387 ^ 0x18ACDBF0;
  v401 = v400 ^ v387 ^ 0x18ACDBF0 ^ v399;
  v402 = v401 ^ v397;
  LODWORD(v339) = ((2 * (v401 ^ v397)) & 0xB8) + ((v401 ^ v397) ^ 0xFFFFFFDC) - 2671708;
  v403 = ((v339 & 0x60901620 ^ 0x28C621) + (v339 & 0x30509DF) + 0x7FFFFFFF) ^ 0xE3BDDD7D;
  v404 = STACK[0x39C];
  if ((v237 & 1) != 0)
    v405 = STACK[0x39C];
  else
    v405 = v294;
  LODWORD(STACK[0x3F8]) = v405;
  if ((v237 & 1) != 0)
    v406 = v294;
  else
    v406 = v295;
  LODWORD(STACK[0x4A0]) = v406;
  v407 = STACK[0x3A0];
  if ((v237 & 1) != 0)
    v404 = STACK[0x3A0];
  LODWORD(STACK[0x498]) = v404;
  v408 = dword_18CF38750[v403];
  if ((v237 & 1) != 0)
    v407 = v295;
  LODWORD(STACK[0x3E0]) = v407;
  HIDWORD(v409) = v408 ^ 0x164;
  LODWORD(v409) = v408 ^ 0x94CC7A00;
  LODWORD(STACK[0x560]) = LODWORD(STACK[0x440]) ^ 0x790F46E8;
  v410 = (v409 >> 9) - ((2 * (v409 >> 9)) & 0xADD60F58) + 1458243500;
  v411 = (((2 * v410) ^ 0xADD60F58) - 2 * (((2 * v410) ^ 0xADD60F58) & 0x9DA8FBE ^ (2 * v410) & 2) + 702189501) & 0x32119686 ^ 0x22008406;
  v412 = dword_18CF38750[((BYTE1(v402) ^ 0x60A388C0) - ((2 * (BYTE1(v402) ^ 0x60A388C0)) & 0x40000046) + 542114339) ^ 0x40F38AD2];
  HIDWORD(v409) = v412 ^ 0x164;
  LODWORD(v409) = v412 ^ 0x94CC7A00;
  v413 = (v409 >> 9) - ((2 * (v409 >> 9)) & 0xA8255094) + 1410508874;
  v414 = ((2 * v413) ^ 0xA8255094) - 2 * (((2 * v413) ^ 0xA8255094) & 0x5C5549E ^ (2 * v413) & 2) + 1170560156;
  v415 = ((v414 & 0x10101282 ^ 0x102010DB) + (v414 & 0x22018404 ^ 0x81810005) - 2) ^ v413;
  HIDWORD(v409) = v415 ^ 0x363B92;
  LODWORD(v409) = v415 ^ 0xC4000000;
  v416 = (v409 >> 24) - ((2 * (v409 >> 24)) & 0x8DB23B96) - 958849589;
  v417 = ((BYTE2(v402) ^ 0x24) + 84203153 + ((2 * (BYTE2(v402) ^ 0x24) + 428) & 0x374 ^ 0xEEFDAFFF)) ^ dword_18CF36DF0[BYTE2(v402) ^ 0xC3];
  HIDWORD(v409) = v417 ^ 0xAB23;
  LODWORD(v409) = v417 ^ 0x4EDF0000;
  v418 = (v409 >> 16) - ((2 * (v409 >> 16)) & 0xD0D69AD8) - 395621012;
  v419 = dword_18CF28E60[HIBYTE(v402) ^ 0xF9];
  HIDWORD(v409) = v419 ^ 0xC6;
  LODWORD(v409) = v419 ^ 0xA1F63700;
  v420 = v410 ^ ((v409 >> 8) - ((2 * (v409 >> 8)) & 0xDD090B48) + 1854178724) ^ (((2 * v411) | 0x94B75FCC)
                                                                               - v411
                                                                               - 1247522790) ^ v418 ^ 0x31FC595D ^ v416;
  LODWORD(STACK[0x37C]) = v397;
  v421 = v387 ^ 0x2CC49952 ^ v420 ^ v397;
  v422 = v387 ^ 0x2CC49952 ^ v420;
  v423 = v421 ^ 0xD0E25E58;
  v424 = (BYTE1(v423) ^ 0x87) + ((v423 >> 8) & 0x6F ^ 0x55FC1A68) - ((BYTE1(v423) ^ 0x87) & 0x6F);
  v425 = dword_18CF28E60[((v424 & 0x115C0B8E ^ 0x2A00A188) + (v424 ^ 0xD1FD1A26) - ((v424 ^ 0xD1FD1A26) & 0x8000038E)) ^ 0x3F5DAB56];
  HIDWORD(v409) = v425 ^ 0xF637C6;
  LODWORD(v409) = v425 ^ 0xA1000000;
  v426 = (v409 >> 24) - ((2 * (v409 >> 24)) & 0x12DAD50) - 2137598296;
  v427 = ((2 * (BYTE2(v423) ^ 0x8F6EF4C6)) & 0x600093E) - (BYTE2(v423) ^ 0x8F6EF4C6) - 588254368;
  v428 = ((v427 & 0x130101C7 ^ 0xAA2650C0) + (v427 ^ 0x5109070F) - ((v427 ^ 0x5109070F) & 0x1A8951C7)) ^ 0xB927510C;
  v429 = (HIWORD(v423) & 0x79 ^ 0x3E479740) + (HIWORD(v423) & 0x86 ^ 0x85) - 1;
  v430 = (v428 - ((2 * v428 + 17258924) & 0x3893860) - 95926010) ^ dword_18CF36DF0[((v429 & 0xB0B ^ 0x86130902)
                                                                                  + (v429 & 0x4F4 ^ 0x20202465)
                                                                                  - 1) ^ 0xA6332A27];
  v431 = v421 ^ 0x4325780C;
  HIDWORD(v409) = v430 ^ 0x1EA9;
  LODWORD(v409) = v430 ^ 0x439A0000;
  v432 = dword_18CF2C560[HIBYTE(v421) ^ 0x62];
  v433 = (v409 >> 16) - ((2 * (v409 >> 16)) & 0x7E273F48) - 1089232988;
  HIDWORD(v409) = v432 ^ 0x3C;
  LODWORD(v409) = v432 ^ 0x79B5E800;
  v434 = (v409 >> 8) - ((2 * (v409 >> 8)) & 0x8345BEB8) - 1046290596;
  v435 = ((v423 ^ 0x40) - ((2 * v423) & 0x16A) + 166681013) ^ 0x9EF5D15;
  v436 = dword_18CF38750[((v435 | 0x8493D83B) - (v435 | 0x7B6C27C4) + 2070685636) ^ 0x8493DC74];
  HIDWORD(v409) = v436 ^ 0x164;
  LODWORD(v409) = v436 ^ 0x94CC7A00;
  v437 = (v409 >> 9) - ((2 * (v409 >> 9)) & 0x11C804B8) + 149160540;
  v438 = (((2 * v437) ^ 0x11C804B8) - 2 * (((2 * v437) ^ 0x11C804B8) & 0xA9F2F3E ^ (2 * v437) & 6) + 178204472) & 0x32119686 ^ 0x1209362A;
  v439 = v426 ^ v434 ^ v437 ^ v399 ^ v420 ^ v433 ^ 0x61A3064B ^ (((2 * v438) & 0x1201C) - v438 - 1090703631);
  v440 = v439 ^ v401;
  LODWORD(STACK[0x440]) = v439 ^ v401 ^ 0xE056B400;
  v441 = v439 ^ v401 ^ 0xE056B400 ^ v431;
  v442 = ((HIBYTE(v441) ^ 0x69) - 666800576 + ((2 * (HIBYTE(v441) ^ 0x69) + 428) & 0x2D2 ^ 0xCEFCFFFF)) ^ dword_18CF36DF0[HIBYTE(v441) ^ 0x8E];
  HIDWORD(v409) = v442 ^ 0xF0;
  LODWORD(v409) = v442 ^ 0x1DE34300;
  v443 = v409 >> 8;
  v444 = LODWORD(STACK[0x478]) ^ LODWORD(STACK[0x468]);
  v445 = LODWORD(STACK[0x3BC]) ^ v444;
  v446 = STACK[0x4F0];
  v447 = STACK[0x470];
  v448 = LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x4F0]);
  LODWORD(STACK[0x35C]) = v448;
  v449 = LODWORD(STACK[0x3B8]) ^ v448;
  v450 = LODWORD(STACK[0x3B0]) ^ v448;
  v451 = LODWORD(STACK[0x3AC]) ^ v448;
  v452 = LODWORD(STACK[0x3A4]) ^ v444;
  v453 = LODWORD(STACK[0x3C0]) ^ v444;
  LODWORD(STACK[0x36C]) = v445;
  if ((v237 & 1) == 0)
    v445 = v452;
  LODWORD(STACK[0x3C0]) = v445;
  LODWORD(STACK[0x330]) = v453;
  if ((v237 & 1) != 0)
    v454 = v452;
  else
    v454 = v453;
  LODWORD(STACK[0x374]) = v454;
  v455 = LODWORD(STACK[0x3A8]) ^ v448;
  v456 = STACK[0x540];
  if ((v237 & 1) != 0)
    v456 = STACK[0x420];
  LODWORD(STACK[0x3A8]) = v456;
  v457 = STACK[0x44C];
  if ((v237 & 1) == 0)
    v457 = STACK[0x510];
  LODWORD(STACK[0x39C]) = v457;
  v458 = STACK[0x408];
  if ((v237 & 1) != 0)
    v458 = STACK[0x404];
  LODWORD(STACK[0x3A4]) = v458;
  v459 = STACK[0x418];
  if ((v237 & 1) == 0)
    v459 = STACK[0x410];
  LODWORD(STACK[0x3A0]) = v459;
  LODWORD(STACK[0x340]) = v449;
  LODWORD(STACK[0x338]) = v450;
  if ((v237 & 1) != 0)
    v449 = v450;
  LODWORD(STACK[0x3BC]) = v449;
  LODWORD(STACK[0x328]) = v451;
  LODWORD(STACK[0x300]) = v455;
  if ((v237 & 1) == 0)
    v455 = v451;
  LODWORD(STACK[0x3B8]) = v455;
  LODWORD(STACK[0x5C0]) = v237;
  v460 = (v237 & 2) == 0;
  v461 = STACK[0x424];
  v462 = STACK[0x394];
  if ((v237 & 2) != 0)
    v463 = STACK[0x394];
  else
    v463 = STACK[0x424];
  LODWORD(STACK[0x4E0]) = v463;
  if ((v237 & 2) == 0)
    v461 = v462;
  LODWORD(STACK[0x368]) = v461;
  v464 = v443 - ((2 * v443) & 0x47FFCC32) + 603973145;
  v465 = (BYTE2(v441) ^ 0x7D | 0x1F811491) - (BYTE2(v441) ^ 0x7D | 0xE07EEB6E) - 528553106;
  v466 = ((v441 & 0xEC ^ 0x380C4FFB) - (v441 & 0x13)) ^ 0x380C4F55;
  v467 = ((2 * (v441 ^ 0x1E)) & 0x26) - (v441 ^ 0x1E) + 15340;
  v468 = dword_18CF2C560[((v465 & 0xA810143 ^ 0x600D2843) + (v465 ^ 0x1F901718) - ((v465 ^ 0x1F901718) & 0x110143)) ^ 0x6A8C2A51];
  HIDWORD(v469) = v468 ^ 0xE83C;
  LODWORD(v469) = v468 ^ 0x79B50000;
  v470 = dword_18CF28E60[(((2 * (BYTE1(v441) ^ 0x40010EC4)) & 0x5E4) - (BYTE1(v441) ^ 0x40010EC4) + 1960668429) ^ 0x34DC6315];
  v471 = (v469 >> 16) - ((2 * (v469 >> 16)) & 0xA651C0A8);
  HIDWORD(v469) = v470 ^ 0xF637C6;
  LODWORD(v469) = v470 ^ 0xA1000000;
  v472 = (v471 - 752295852) ^ dword_18CF36DF0[((v467 & 0x703 ^ 0x2CDA603) + (v467 & 0x8FC ^ 0x8CD) - 1) ^ 0x2CDA574] ^ ((v469 >> 24) - ((2 * (v469 >> 24)) & 0xFAA454E8) - 44946828) ^ (v466 - ((2 * v466 + 1896307116) & 0x51050BDE) + 639517893) ^ v464;
  v473 = v472 ^ v422;
  v474 = v472 ^ v422 ^ 0xEA910A24 ^ v431;
  v475 = dword_18CF38750[HIBYTE(v474) ^ 0x7E];
  HIDWORD(v469) = v475 ^ 0x164;
  LODWORD(v469) = v475 ^ 0x94CC7A00;
  v476 = v472 ^ v422 ^ 0xEA910A24 ^ v440;
  LODWORD(STACK[0x394]) = v476;
  v477 = (v469 >> 9) - ((2 * (v469 >> 9)) & 0x2E1FA1FC) - 1760571138;
  v478 = (((2 * v477) ^ 0x2E1FA1FC) - 2 * (((2 * v477) ^ 0x2E1FA1FC) & 0x183AFF7E ^ (2 * v477) & 2) + 943390589) & 0x32119686 ^ 0x2009402;
  v479 = (((2 * v478) & 0x232008) - v478 - 1295767622) ^ 0xA2CC2CA2;
  v480 = (v479 - ((2 * v479) & 0x20489EF4) + 472141691) ^ v477;
  v481 = (v474 ^ 0xB7)
       + 856067665
       + ((2 * (((v474 ^ 0xB7) + 214) & 0x17B ^ (v474 ^ 0xB7 | 0x7FFFFFFE))) ^ 0x71054003);
  v482 = (((2 * (v474 ^ 0xF3)) | 0x81BC0F38) - (v474 ^ 0xF3) - 1088292764) ^ 0x4A4A1708;
  HIDWORD(v469) = v480 ^ 0x19;
  LODWORD(v469) = v480 ^ 0xA8B70100;
  v483 = (v469 >> 8) - ((2 * (v469 >> 8)) & 0x6E220ED2) + 923862889;
  v484 = dword_18CF38750[((BYTE2(v474) ^ 0x880C026E | 0xCDFA9533) - (BYTE2(v474) ^ 0x880C026E | 0x32056ACC) + 839215820) ^ 0x45F69731];
  HIDWORD(v469) = v484 ^ 0x164;
  LODWORD(v469) = v484 ^ 0x94CC7A00;
  v485 = (v469 >> 9) - ((2 * (v469 >> 9)) & 0xAF34DD9C) + 1469738702;
  v486 = (((2 * v485) ^ 0xAF34DD9C) - ((2 * ((2 * v485) ^ 0xAF34DD9C)) & 0x1FAEFE80) + 802651969) & 0x32119686 ^ v485;
  v487 = v474 ^ 0xD7C240A3;
  LODWORD(STACK[0x350]) = v474 ^ 0xD7C240A3;
  v488 = BYTE1(v474);
  v489 = ((v488 ^ 0x2A) - ((2 * (v488 ^ 0x2A)) & 0x1FC) + 766) ^ 0x2F1;
  HIDWORD(v469) = v486 ^ 0xEF4C;
  LODWORD(v469) = v486 ^ 0x740F0000;
  v490 = (v469 >> 16) - ((2 * (v469 >> 16)) & 0x43F4F276) - 1577420485;
  v491 = (((2 * (v488 ^ 0x7F)) & 0xFFFFFFE3) - (v488 ^ 0x7F) + 1825867278) ^ 0xBEBCE032;
  v492 = (v489 - ((2 * v489 + 1896307116) & 0x48736DC8) + 1555915706) ^ dword_18CF36DF0[((v491 | 0xB33D4374)
                                                                                       - (v491 | 0x4CC2BC8B)
                                                                                       + 1287830667) ^ 0x615525F5];
  HIDWORD(v469) = v492 ^ 0x67347D;
  LODWORD(v469) = v492 ^ 0xA6000000;
  v493 = v490 ^ dword_18CF36DF0[(v482 - ((2 * v482) & 0x97915C2) + 79465185) ^ 0xE289AD6];
  v494 = v472 ^ v439;
  v495 = v493 ^ v472 ^ v439 ^ v481 ^ ((v469 >> 24) - ((2 * (v469 >> 24)) & 0xE883936C) - 197015114) ^ v483;
  v496 = v472 ^ v422 ^ 0x442369EF ^ v495;
  LODWORD(STACK[0x3B0]) = v496;
  v497 = v496 ^ v476;
  v498 = v496 ^ v476 ^ 0x2550FE62;
  v499 = (((v496 ^ v476) ^ 0x62 ^ v487 ^ 0xD1 | 0x79605CDE)
        - ((v496 ^ v476) ^ 0x62 ^ v487 ^ 0xD1 | 0x869FA321)
        - 2036358367) ^ 0xBB6818DC;
  v500 = dword_18CF2C560[((((unsigned __int16)(v496 ^ v476 ^ 0xFE62 ^ v487) >> 8) ^ 0x3C)
                        + (((v498 ^ v487) >> 8) & 0x55 ^ 0x941)
                        - ((((unsigned __int16)(v496 ^ v476 ^ 0xFE62 ^ v487) >> 8) ^ 0x3C) & 0x55555555)) ^ 0x933];
  HIDWORD(v469) = v500 ^ 0xB5E83C;
  LODWORD(v469) = v500 ^ 0x79000000;
  v501 = (v469 >> 24) - ((2 * (v469 >> 24)) & 0xFDF3E32C) + 2130309526;
  v502 = v498 ^ v487 ^ 0x2B1A80F6;
  v503 = ((v498 ^ v487) >> 16) ^ 0xBB;
  v504 = dword_18CF2C560[((v498 ^ v487) >> 24) ^ 0x25];
  HIDWORD(v469) = v504 ^ 0x3C;
  LODWORD(v469) = v504 ^ 0x79B5E800;
  v505 = dword_18CF2C560[(((2 * v499) & 0x8C793438) - v499 - 1178376733) ^ 0x7BCB21D8] ^ ((v469 >> 8)
                                                                                        - ((2 * (v469 >> 8)) & 0xD23B5E9E)
                                                                                        - 383930545);
  v506 = dword_18CF38750[(((2 * v503) & 0xFFFFFFDF) - v503 + 821021968) ^ 0x30EFCDF7];
  HIDWORD(v469) = v506 ^ 0x164;
  LODWORD(v469) = v506 ^ 0x94CC7A00;
  v507 = (v469 >> 9) - ((2 * (v469 >> 9)) & 0xB0912DFC) - 666331394;
  v508 = ((2 * v507) ^ 0xB0912DFC) - ((2 * ((2 * v507) ^ 0xB0912DFC)) & 0x268D6C94) + 1397143114;
  v509 = ((v508 & 0x32119686 ^ 0x2019680)
        + (v508 & 0x20119604 ^ 0x2D94005C)
        - ((v508 & 0x32119686 ^ 0x2019680) & 0x20119604)) ^ 0xBC9D9ED6;
  v510 = (((2 * v509) & 0x208FC554) - v509 + 1673010260) ^ v507;
  HIDWORD(v469) = v510 ^ 0x1520;
  LODWORD(v469) = v510 ^ 0x3B7D0000;
  v511 = v501 ^ v505 ^ ((v469 >> 16) - ((2 * (v469 >> 16)) & 0xC8E40970) + 1685193912);
  v512 = v511 ^ v495 ^ 0xFE941E97;
  v513 = v511 ^ v473 ^ 0x816D895F;
  v514 = v513 ^ v497 ^ 0x2B990279;
  LODWORD(STACK[0x320]) = v513;
  LODWORD(STACK[0x348]) = v514;
  v515 = v502 ^ v514;
  v516 = dword_18CF38750[(((2 * ((v498 ^ v487) ^ 0xF6 ^ v514 ^ 0x1028523F)) & 0x5020AA)
                        - ((v498 ^ v487) ^ 0xF6 ^ v514 ^ 0x1028523F)
                        - 1210921046) ^ 0xA7FA9D06];
  HIDWORD(v469) = v516 ^ 0x164;
  LODWORD(v469) = v516 ^ 0x94CC7A00;
  v517 = (v469 >> 9) - ((2 * (v469 >> 9)) & 0xE74E72AA) + 1940339029;
  v518 = dword_18CF2C560[((v502 ^ v514) >> 24) ^ 0x98];
  v519 = (((2 * v517) ^ 0xE74E72AA) - ((2 * ((2 * v517) ^ 0xE74E72AA)) & 0x1E1E9360) + 789531057) & 0x32119686 ^ 0x32019604;
  HIDWORD(v469) = v518 ^ 0x3C;
  LODWORD(v469) = v518 ^ 0x79B5E800;
  v520 = dword_18CF28E60[((((v502 ^ v514) >> 8) & 0x2B)
                        - 1004395777
                        + (((v502 ^ v514) >> 8) & 0xD4 ^ 0x8000011)) ^ 0xCC22232D];
  v521 = (v469 >> 8) - ((2 * (v469 >> 8)) & 0xAA2002FE);
  HIDWORD(v469) = v520 ^ 0xF637C6;
  LODWORD(v469) = v520 ^ 0xA1000000;
  v522 = (v469 >> 24) - ((2 * (v469 >> 24)) & 0x3B0B2348) + 495292836;
  v523 = ((BYTE2(v515) ^ 0xA5 | 0x205332F8) - (BYTE2(v515) ^ 0xA5 | 0xDFACCD07) - 542323449) ^ 0xE8F178A5;
  v524 = v515 ^ 0xD83756C7;
  LODWORD(STACK[0x310]) = v515 ^ 0xD83756C7;
  v525 = ((BYTE2(v515) ^ 0x810106A3) + (HIWORD(v515) & 0x3E ^ 0x3AEA291C) - ((BYTE2(v515) ^ 0x810106A3) & 0x8000003E)) ^ 0x3BEB2FF6;
  v526 = (v525 - ((2 * v525 + 17258924) & 0xBF2F642) - 1099094025) ^ dword_18CF36DF0[(((2 * v523) & 0xB7869506)
                                                                                    - v523
                                                                                    + 607958396) ^ 0xEC9EFF08];
  HIDWORD(v469) = v526 ^ 0xF9B8;
  LODWORD(v469) = v526 ^ 0x7A70000;
  v527 = v517 ^ (v521 - 720371329) ^ v522 ^ v512 ^ ((v469 >> 16) - ((2 * (v469 >> 16)) & 0xA0317160) + 1343797424) ^ 0xCFE79535 ^ ((((v519 | 0x635E5CD8) - (v519 | 0x9CA1A327) - 1667128537) & 0xE228F80E ^ 0xC8286102) + (((v519 | 0x635E5CD8) - (v519 | 0x9CA1A327) - 1667128537) ^ 0x22D6989C) - ((((v519 | 0x635E5CD8) - (v519 | 0x9CA1A327) - 1667128537) ^ 0x22D6989C) & 0xE2A8F806));
  v528 = LODWORD(STACK[0x500]) ^ 0x931BCBAC;
  LODWORD(STACK[0x2A4]) = v528;
  HIDWORD(v469) = STACK[0x5B0];
  LODWORD(v469) = v528;
  v529 = v469 >> 1;
  HIDWORD(v469) = v495 ^ ~LODWORD(STACK[0x464]);
  LODWORD(v469) = v495 ^ LODWORD(STACK[0x464]) ^ 0x4FF3F83C;
  v530 = ((v469 >> 1) - ((2 * (v469 >> 1)) & 0x961F9B00) - 888156800) ^ (v529 - 1621661199 + (~(2 * v529) | 0xC1512C1F));
  HIDWORD(v469) = v530 ^ 0x5458A470;
  LODWORD(v469) = v530;
  v531 = (v469 >> 31) - ((2 * (v469 >> 31)) & 0xF82D0F68) - 65632332;
  HIDWORD(v469) = v447 ^ 0x70;
  LODWORD(v469) = v447 ^ 0x2BC54C00;
  v532 = (v469 >> 8) - ((2 * (v469 >> 8)) & 0xC509958A) + 1652869829;
  v533 = v513 ^ 0xFBDD246D ^ v527;
  LODWORD(STACK[0x318]) = v527;
  v534 = STACK[0x428];
  v535 = 2 * ((v533 & STACK[0x428]) - ((2 * (v533 & STACK[0x428])) & 0xB8954D6)) - 1953934122;
  HIDWORD(v469) = v512 ^ v446 ^ 0x76;
  LODWORD(v469) = v512 ^ v446 ^ 0x24BBA00;
  v536 = ((v469 >> 8) - ((2 * (v469 >> 8)) & 0xCE2C94B8) + 1729514076) ^ v532;
  HIDWORD(v469) = v536 ^ 0xBE4C5;
  LODWORD(v469) = v536 ^ 0x88000000;
  LODWORD(STACK[0x2A0]) = (v469 >> 24) - ((2 * (v469 >> 24)) & 0x2206E8D4) + 285439082;
  v537 = ((2 * (v533 + v534)) & 0xE7BF1DAE)
       + ((v533 + v534) ^ 0xF3DF8ED7)
       + (v535 ^ 0x13998CD5)
       + ((2 * v535) & 0xCFDE4FF8 ^ 0xF8EDF657);
  LODWORD(STACK[0x5B0]) = v537 - ((2 * v537 + 1746874958) & 0x413ABF3C) + 346880197;
  v538 = (&unk_18CF50430 ^ 0x5F959FFF) - 1603641343 + (STACK[0x430] & 0xBF2B3FE0);
  v539 = STACK[0x384];
  v540 = v497 ^ LODWORD(STACK[0x384]) ^ v527;
  v541 = STACK[0x3B4];
  v542 = LODWORD(STACK[0x3B4]) ^ v422 ^ v439;
  v543 = v540 ^ v524;
  v544 = (v538 ^ 0x60E8F7FF) + ((2 * v538) & 0xC1D1EFFE) - 1625880575 + (v540 ^ v524 ^ v542 ^ 0x147B103);
  v545 = ((2 * v544) & 0xDAFF7776)
       + (v544 ^ 0xED7FBBBB)
       - ((2 * (((2 * v544) & 0xDAFF7776) + (v544 ^ 0xED7FBBBB)) - 1072771634) & 0xDBB4850A)
       - 840849044;
  v546 = (&unk_18CF50430 ^ 0xFF96CFC7) + 6893625 + (STACK[0x430] & 0xFF2D9F80);
  v547 = ((2 * (v543 ^ v542 ^ 0x45548C90)) & 0xEFEFD938 ^ 0x88265920) + (v543 ^ v542 ^ 0xF6B05D9F);
  v548 = (&unk_18CF50430 ^ 0xDD6BF5F0) + 580127248 + (STACK[0x430] & 0xBAD7EBE0);
  v549 = ((2 * v546) & 0xDFDD777A) + (v546 ^ 0x6FEEBBBD) + v547;
  v550 = v549 - ((2 * v549 + 1262548114) & 0x41339DA0) - 2043000551;
  v551 = v439 ^ v541;
  v552 = v550 ^ 0x2099CED0;
  v553 = (v439 ^ LODWORD(STACK[0x3B4]) ^ 0x53BACB10 ^ v550) + (v550 ^ 0x2099CED0) + 1;
  v554 = ((2 * v548) & 0xFFD9BCDE) + (v548 ^ 0x7FECDE6F) + v547;
  LODWORD(STACK[0x2F8]) = (2 * v554 + 189050670) & 0x18AE1F0A;
  LODWORD(STACK[0x29C]) = v554 + 1643734812;
  LODWORD(STACK[0x298]) = (v439 ^ v541 ^ ((v439 ^ v541 ^ 0x732305C0)
                                        - ((2 * (v439 ^ v541 ^ 0x732305C0) + 2) & 0x7CAC1C36)
                                        + 1045827100) ^ 0x8927C6FE ^ (v553 - ((2 * v553) & 0x775A65B4) + 1001206490))
                        + v552;
  LODWORD(STACK[0x2D8]) = LODWORD(STACK[0x580]) ^ 0x2478D38C;
  v555 = v545 ^ v439 ^ v541;
  v556 = LODWORD(STACK[0x520]) ^ 0xAB95E919 ^ LODWORD(STACK[0x680]);
  v557 = LODWORD(STACK[0x570]) ^ 0x5B4F7FCE ^ LODWORD(STACK[0x680]);
  v558 = STACK[0x670];
  if (v460)
    v558 = STACK[0x678];
  LODWORD(STACK[0x428]) = v558;
  v559 = STACK[0x3EC];
  if (v460)
    v559 = STACK[0x3F0];
  LODWORD(STACK[0x430]) = v559;
  v560 = STACK[0x5E0];
  if (v460)
    v560 = STACK[0x5A0];
  LODWORD(STACK[0x364]) = v560;
  v561 = STACK[0x3E8];
  if (v460)
    v561 = STACK[0x3E4];
  LODWORD(STACK[0x360]) = v561;
  if (v460)
    v562 = STACK[0x39C];
  else
    v562 = STACK[0x3A8];
  v563 = STACK[0x550];
  if (v460)
    v563 = STACK[0x590];
  LODWORD(STACK[0x438]) = v563;
  v564 = STACK[0x3DC];
  if (v460)
    v564 = STACK[0x3D8];
  LODWORD(STACK[0x308]) = v564;
  if (v460)
    v565 = STACK[0x530];
  else
    v565 = STACK[0x4C0];
  if (v460)
    v566 = STACK[0x3A0];
  else
    v566 = STACK[0x3A4];
  if (v460)
    v567 = STACK[0x3D4];
  else
    v567 = STACK[0x3C8];
  if (v460)
    v568 = STACK[0x5D0];
  else
    v568 = STACK[0x5F0];
  if (v460)
    v569 = STACK[0x668];
  else
    v569 = STACK[0x660];
  v570 = STACK[0x3BC];
  if (!v460)
    v570 = STACK[0x3B8];
  LODWORD(STACK[0x370]) = v570;
  if (v460)
    v571 = STACK[0x3E0];
  else
    v571 = STACK[0x3F8];
  v572 = STACK[0x4A0];
  if (!v460)
    v572 = STACK[0x498];
  LODWORD(STACK[0x388]) = v572;
  if ((v555 & 1) == 0)
    v556 = v557;
  LODWORD(STACK[0x294]) = v556;
  LODWORD(STACK[0x520]) = LODWORD(STACK[0x378]) ^ 0xA2C76354;
  v573 = STACK[0x3C4];
  v574 = LODWORD(STACK[0x4B0]) ^ 0x28B79191 ^ LODWORD(STACK[0x3C4]);
  if ((v555 & 1) == 0)
    v574 = LODWORD(STACK[0x4D0]) ^ 0xDC0E7E3F ^ LODWORD(STACK[0x3C4]);
  LODWORD(STACK[0x2F0]) = v574;
  LODWORD(STACK[0x3AC]) = v541 ^ 0x6D436511 ^ v441;
  v575 = v541 ^ 0xE2EF9B8 ^ LODWORD(STACK[0x440]);
  v576 = v542 ^ 0x9BDCCA92;
  v577 = v444 ^ 0xB25D66B0 ^ v494;
  v578 = v444 ^ 0xBB586F7B ^ LODWORD(STACK[0x350]);
  v579 = v444 ^ 0xE566B955 ^ v473;
  LODWORD(STACK[0x2E8]) = LODWORD(STACK[0x560]) ^ v444;
  v580 = v444 ^ 0x2D68EBBE ^ LODWORD(STACK[0x394]);
  v581 = v541 ^ 0xB790973E ^ v502;
  v582 = v531 ^ 0xEEF5CB57;
  v583 = v541 ^ 0x6776BA14 ^ v498;
  v584 = v541 ^ 0x2FEA6D6F ^ LODWORD(STACK[0x3B0]);
  if ((v555 & 1) != 0)
    v585 = v577;
  else
    v585 = v578;
  LODWORD(STACK[0x394]) = v585;
  if ((v555 & 1) != 0)
    v577 = v579;
  LODWORD(STACK[0x3B4]) = v577;
  if ((v555 & 1) != 0)
    v586 = v580;
  else
    v586 = v579;
  if ((v555 & 1) != 0)
    v587 = v578;
  else
    v587 = v580;
  LODWORD(STACK[0x3B0]) = v587;
  v588 = LODWORD(STACK[0x35C]) ^ 0x43C5C663 ^ LODWORD(STACK[0x348]);
  v589 = STACK[0x35C];
  v590 = LODWORD(STACK[0x35C]) ^ 0xD7E608F8 ^ LODWORD(STACK[0x310]);
  v591 = v543 ^ 0x196E19D8;
  if ((v555 & 1) != 0)
    v592 = v540 ^ 0x1BFADEDE;
  else
    v592 = LODWORD(STACK[0x398]) ^ 0xE74E7409 ^ LODWORD(STACK[0x5B0]);
  if ((v555 & 1) != 0)
    v593 = v591;
  else
    v593 = v540 ^ 0x1BFADEDE;
  if ((v555 & 1) != 0)
    v594 = LODWORD(STACK[0x398]) ^ 0xE74E7409 ^ LODWORD(STACK[0x5B0]);
  else
    v594 = v539 ^ 0xA25895CA ^ LODWORD(STACK[0x318]);
  if ((v555 & 1) != 0)
    v595 = v539 ^ 0xA25895CA ^ LODWORD(STACK[0x318]);
  else
    v595 = v591;
  LODWORD(STACK[0x2A8]) = v551;
  v596 = v551 ^ 0x415F882F;
  LODWORD(STACK[0x28C]) = v575;
  if ((v555 & 1) != 0)
    v597 = v575;
  else
    v597 = v576;
  LODWORD(STACK[0x570]) = v597;
  LODWORD(STACK[0x290]) = v596;
  if ((v555 & 1) != 0)
    v598 = v576;
  else
    v598 = v596;
  LODWORD(STACK[0x264]) = v598;
  if ((v555 & 1) != 0)
    v599 = v582;
  else
    v599 = v581;
  LODWORD(STACK[0x5B0]) = v599;
  LODWORD(STACK[0x284]) = v584;
  if ((v555 & 1) != 0)
    v600 = v584;
  else
    v600 = v582;
  LODWORD(STACK[0x288]) = v583;
  if ((v555 & 1) != 0)
    v601 = v581;
  else
    v601 = v583;
  LODWORD(STACK[0x27C]) = v588;
  LODWORD(STACK[0x268]) = v590;
  if ((v555 & 1) != 0)
    v602 = v590;
  else
    v602 = v588;
  LODWORD(STACK[0x398]) = v602;
  LODWORD(STACK[0x580]) = v555;
  if ((v555 & 2) != 0)
    v603 = v600;
  else
    v603 = v601;
  LODWORD(STACK[0x2E0]) = v603;
  if ((v555 & 2) != 0)
    v600 = v601;
  LODWORD(STACK[0x2D0]) = v600;
  LODWORD(STACK[0x260]) = v589 ^ 0xD1FE8F0E ^ LODWORD(STACK[0x320]);
  LODWORD(STACK[0x25C]) = LODWORD(STACK[0x2A0]) ^ 0x9FA3CDC5;
  LODWORD(STACK[0x384]) = v571;
  LODWORD(STACK[0x4D0]) = v567;
  LODWORD(STACK[0x320]) = v567 ^ 0x5888C774;
  LODWORD(STACK[0x440]) = v562;
  LODWORD(STACK[0x35C]) = v562 ^ 0xF21BEF8;
  v604 = (((v571 ^ 0x6A587993) - ((2 * (v571 ^ 0x6A587993) - 1059470582) & 0x92E897DE) + 702623092) ^ 0xDDD1284F)
       + (v562 ^ 0xF21BEF8);
  LODWORD(STACK[0x378]) = v565;
  v605 = ((v604 - ((2 * v604) & 0x75166D24) - 1165281646) ^ 0x61E90884) + (v568 ^ 0x5888C774);
  LODWORD(STACK[0x424]) = v566;
  LODWORD(STACK[0x310]) = v569;
  v606 = (v605 ^ 0x3DFFB079) - 1040167033 + ((2 * v605) & 0x7BFF60F2);
  LODWORD(STACK[0x318]) = v568;
  v607 = (LODWORD(STACK[0x4E0]) ^ 0x32CAF966)
       + (v568 ^ 0xCE51389F ^ ((v567 ^ 0x5888C774) - ((2 * (v567 ^ 0x5888C774) + 937308564) & 0x2DB3FFD6) - 1295443787))
       + 1;
  v608 = 2 * (((2 * v607) & 0x1953FE46) + (v607 ^ 0x4CA9FF23)) + 1722548666;
  v609 = ((2 * v608) & 0x68FCE74C)
       + (v608 ^ 0xB47E73A6)
       - ((2 * (((2 * v608) & 0x68FCE74C) + (v608 ^ 0xB47E73A6)) + 415267768) & 0x5F2653A0)
       + 2079549357;
  v610 = ((v569 ^ v566 ^ ((v565 ^ 0x91A4AC7D) - ((2 * (v565 ^ 0x91A4AC7D) + 99801830) & 0x8CA74958) - 917695969)) >> 1) ^ 0x3D3A9FD7;
  v611 = v610 - ((2 * v610 + 1015697154) & 0x9E658A3A) - 310907746;
  v612 = STACK[0xB38];
  v613 = ((v606 >> 1) ^ 0xEFFBFFDE)
       + (v606 & 0xDFF7FFBC)
       - ((2 * (((v606 >> 1) ^ 0xEFFBFFDE) + (v606 & 0xDFF7FFBC)) + 259683322) & 0xB9AC080)
       + 1569364541;
  v614 = *(_QWORD *)(STACK[0xB38]
                   + 8
                   * ((*(_QWORD *)(STACK[0xB38]
                                 + 8 * (*(_QWORD *)(STACK[0xB38] + 8 * ((*(_DWORD *)STACK[0xB38] & 1) == 0)) & 1)) & 1) == 0)) & 1;
  v615 = ((~(2 * v614) + v614 + 1587757938) ^ 0x457EFD8C)
       - 1756399428
       + ((2 * (~(2 * v614) + v614 + 1587757938)) & 0x350204FA ^ 0x350204E2);
  v616 = LODWORD(STACK[0x688]) + 760;
  v617 = STACK[0x298];
  LODWORD(STACK[0x2A0]) = (2 * LODWORD(STACK[0x298])) & 0xB9884242;
  LODWORD(STACK[0x26C]) = v617 - 591126239;
  LODWORD(STACK[0x254]) = LODWORD(STACK[0x2D8]) ^ LODWORD(STACK[0x680]);
  LODWORD(STACK[0x258]) = LODWORD(STACK[0x520]) ^ v573;
  LODWORD(STACK[0x4B0]) = v609;
  LODWORD(STACK[0x560]) = v611;
  LODWORD(STACK[0x520]) = v613;
  LODWORD(STACK[0x280]) = v586;
  v618 = STACK[0x394];
  if ((v555 & 2) != 0)
    v618 = v586;
  LODWORD(STACK[0x2D8]) = v618;
  LODWORD(STACK[0x688]) = v592;
  LODWORD(STACK[0x270]) = v595;
  if ((v555 & 2) != 0)
    v619 = v592;
  else
    v619 = v595;
  LODWORD(STACK[0x348]) = v619;
  LODWORD(STACK[0x278]) = v593;
  LODWORD(STACK[0x274]) = v594;
  if ((v555 & 2) != 0)
    v620 = v594;
  else
    v620 = v593;
  LODWORD(STACK[0x350]) = v620;
  *(_QWORD *)(STACK[0xB50] + 8 * ((v616 - 58) - 1300)) = *(_QWORD *)(v612
                                                                                   + 8
                                                                                   * ((v616 - 58) - 1300)) ^ 0x9696969696969696;
  v621 = v615 > 0xB32D37BA;
  if (v615 < 0xB32D37B9)
    v621 = 1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(226 * !v621) ^ v616] - 12))();
}

uint64_t sub_18CAF322C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((395 * (STACK[0x880] != 0)) ^ v0))
                            - ((((v0 + 343) | 0xA1u) - 783) ^ (v0 - 283))))();
}

uint64_t sub_18CAF3270()
{
  unsigned int v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0x718];
  STACK[0xB28] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((1340 * (v3 != 0)) ^ v0)) - (v0 ^ 0x19ELL)))();
}

uint64_t sub_18CAF32A8()
{
  unint64_t v0;
  unsigned __int8 *v1;
  unint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  char v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  BOOL v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  __int16 v31;
  __int16 v32;
  __int16 v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unint64_t v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  unint64_t v137;
  unsigned int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  char v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  char v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  int v187;
  int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  int v200;
  int v201;
  unsigned int v202;
  int v203;
  int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  int v219;
  int v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  unsigned int v234;
  int v235;
  int v236;
  unsigned int v237;
  int v238;
  int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  int v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  unint64_t v279;
  int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  int v286;
  int v287;
  unsigned int v288;
  int v289;
  int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  unsigned int v301;
  int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  int v330;
  unsigned int v331;
  int v332;
  int v333;
  int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  int v338;
  int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  int v351;
  int v352;
  int v353;
  unsigned int v354;
  int v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  int v361;
  int v362;
  unsigned int v363;
  int v364;
  unsigned int v365;
  unsigned int v366;
  unint64_t v367;
  _BYTE *v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  int v377;
  int v378;
  unsigned int v379;
  unint64_t v380;
  unint64_t v381;
  unsigned int v382;

  v3 = v1[9] ^ 0xF3;
  STACK[0x688] = v2;
  v4 = byte_18CF35E60[v3];
  v5 = ((v0 - 118) ^ (32 * v4)) - 118;
  LOBYTE(v3) = (v5 & 0x40 ^ 0xFD) + 2 * (v5 & 0x40);
  v6 = v3 + 8;
  STACK[0x680] = v0;
  v7 = (v3 + 3) & (v4 ^ 0x80);
  v8 = 2 - v3;
  if ((v7 & 0xC0) != 0)
    v9 = v8;
  else
    v9 = v6;
  v10 = byte_18CF2E7C0[v1[3] ^ 0xAELL];
  STACK[0x678] = v10;
  v11 = *v1;
  HIDWORD(v12) = v11 ^ 1;
  LODWORD(v12) = ((v11 ^ 0x99) - 1467118160 - ((2 * (v11 ^ 0x99)) & 0x166) + 3) ^ 0xA88D8DB0;
  v13 = (v12 >> 2) - ((2 * (v12 >> 2)) & 0x92261702);
  v14 = (((2 * v11) ^ 0x32) - ((2 * ((2 * v11) ^ 0x32)) & 0xF7) + 26) & 0x2E;
  LOBYTE(v11) = (v11 ^ 0xE) + (v14 ^ 0x75) + ((2 * v14) ^ 0x14) - 127;
  HIDWORD(v12) = (v13 - 1995240575) ^ 0x227406B5;
  LODWORD(v12) = -1225984898 - v13;
  v15 = byte_18CF35B60[((v12 >> 30) - ((2 * (v12 >> 30)) & 0x338F3360) - 1714972240) ^ 0x345BAD85] ^ (v11 - ((2 * v11) & 0xE0) - 16) ^ 0xBF;
  v16 = (((v15 - ((2 * v15) & 0x88888888)) << 24) + 1140850688) ^ 0x44000000;
  LODWORD(v10) = (v16 - ((2 * v16) & 0x6E000000) - 1220448350) ^ 0xB7416FA2 | ((v10 ^ 0x37)
                                                                             - ((2 * (v10 ^ 0x37)) & 0x74)
                                                                             + 2015234618) ^ 0x781E0A3A;
  v17 = byte_18CF4ED00[v1[2] ^ 0x4CLL];
  v18 = ((~(82 * v17 + 22) | 0xBB) + 105 * v17 + 46) ^ 0x3B;
  v19 = (((v18 + 12557982 - ((2 * v18) & 0xC)) << 8) + 223232) ^ 0xBFA20600;
  v20 = byte_18CF35E60[v1[1] ^ 0xA5];
  v21 = (((32 * v20) ^ 0x20) - ((2 * ((32 * v20) ^ 0x20)) & 0x40) - 77) ^ v20;
  v22 = ((((((((32 * v20) ^ 0x20) - ((2 * ((32 * v20) ^ 0x20)) & 0x40) - 77) ^ v20) ^ 0x66)
         - ((2 * (v21 ^ 0x66)) & 0x4E)) << 16)
       - 1356398592) ^ 0xAF270000;
  LODWORD(v10) = (v10 - ((2 * v10) & 0xD51ACBBC) - 359832098) ^ 0xEA8D65DE | (v19 - ((2 * v19) & 0x720E4600) + 2030511009) ^ 0x790723A1;
  LODWORD(v10) = (v10 - ((2 * v10) & 0xD6B3FA8E) + 1801059655) ^ 0x6B59FD47 | (v22 - ((2 * v22) & 0x37780000) + 465323134) ^ 0x1BBC447E;
  v23 = v10 - ((2 * v10) & 0x1193B3CA) + 147446245;
  LODWORD(v10) = ((BYTE1(v23) ^ 0xF9 | 0x32DEDC47) - (BYTE1(v23) ^ 0xF9 | 0xCD2123B8) - 853466184) ^ 0x2DEDC6F;
  v24 = v10 - ((2 * v10) & 0xD631344) - 961443422;
  v25 = (v24 & 0xFFFFF7FF ^ 0x19060CCB)
      + (v24 & 0xFFFFF7FF ^ 0x7620A984)
      + ((2 * v24) & 0xFEDDAFB8 ^ 0x13BEECF7)
      + ((2 * v24) & 0xDF6F0AD8 ^ 0xCD630248);
  v26 = ((v25 - 1883809166) & 0xCC591789) == ((2 * (v25 - 1883809166)) & 0x90B00C02);
  v27 = ((v4 ^ 0x99) + v9 - 5 - ((2 * ((v4 ^ 0x99) + v9 - 5)) & 0x48) - 92) ^ v5 & 0xA0;
  LOWORD(v22) = byte_18CF4ED00[v1[10] ^ 0xCCLL];
  LOWORD(v22) = (105 * v22 - ((82 * (_BYTE)v22 + 22) & 0x78) - 57) ^ 0x85;
  LOWORD(v22) = (((v22 - ((2 * (_WORD)v22) & 0x1A2)) << 8) - 12032) ^ 0xD100;
  LOWORD(v10) = (v22 - ((2 * v22) & 0x600) - 31802) ^ 0x83C6;
  v28 = byte_18CF2E7C0[v1[7] ^ 0x56];
  v29 = byte_18CF2E7C0[v1[15] ^ 0x2BLL];
  v30 = byte_18CF2E7C0[v1[11] ^ 0xA1] ^ 0x37;
  v31 = (v30 + 1056 - ((2 * v30) & 0x122) + 2673) ^ 0xE91;
  v32 = (v10 - ((2 * v10) & 0x1E60) + 3888) ^ 0xF30 | (v31 - ((2 * v31) & 8) + 14340) ^ 0x3804;
  v33 = v32 - ((2 * v32) & 0xFB42) - 607;
  LODWORD(v10) = byte_18CF4ED00[v1[14] ^ 0x8BLL];
  LODWORD(v10) = (105 * v10 - ((22 - 46 * v10) & 0xF2) + 4) ^ 0x7D;
  LODWORD(v10) = (((v10 - ((2 * (_DWORD)v10) & 0x62)) << 8) + 180105472) ^ 0xABC3100;
  LODWORD(v10) = (v10 - ((2 * v10) & 0x21353000) - 1868916644) ^ 0x909A985C | ((v29 ^ 0x37)
                                                                             - ((2 * (v29 ^ 0x37)) & 0x1E8)
                                                                             + 981718004) ^ 0x3A83D3F4;
  v34 = ((v1[12] ^ 0x49) - ((2 * (v1[12] ^ 0x49) + 46) & 0x3CC) + 125) ^ byte_18CF35B60[v1[12] ^ 0xAELL];
  v35 = ((((v34 ^ 0x98) - ((2 * (v34 ^ 0x98)) & 0x6E)) << 24) + 922746880) ^ 0x37000000;
  v36 = byte_18CF35E60[v1[13] ^ 0x2FLL];
  v37 = ((2 * v36) ^ 0xFFFFFFBA) - ((2 * ((2 * v36) ^ 0xFFFFFFBA)) & 0xFFFFFFA4) + 82;
  v38 = ((2 * ((v36 ^ 0xFFFFFFDD) + 68)) & 0xFFFFFFAA) + (((v36 ^ 0xFFFFFFDD) + 68) ^ 0xFFFFFFD5);
  v39 = ((v37 & 0xFFFFFF88 | (16 * ((v37 >> 3) & 1))) ^ 0xFFFFFF91) + v38;
  v40 = (-126 - 32 * v38) ^ 0xBF ^ (v39 - ((2 * v39 + 52) & 0xCE) + 1);
  v41 = (((v40 - ((2 * v40) & 0xD6)) << 16) - 1586823168) ^ 0xA16B0000;
  v42 = (v41 - ((2 * v41) & 0x2B240000) + 361945438) ^ 0x1592D95E | (v35 - ((2 * v35) & 0x68000000) + 879746769) ^ 0x346FDED1;
  LODWORD(v10) = (v42 - ((2 * v42) & 0xC931A8BA) + 1687737437) ^ 0x6498D45D | (v10
                                                                             - ((2 * v10) & 0x36192318)
                                                                             + 1527550348) ^ 0x5B0C918C;
  v43 = v10 - ((2 * v10) & 0x2A1F17CE) + 353340391;
  v44 = ((((v43 ^ 0x75873C28) >> (((v33 & 0x10 ^ 0x12) + 101) & 0x10))
        - ((2 * ((v43 ^ 0x75873C28) >> (((v33 & 0x10 ^ 0x12) + 101) & 0x10))) & 0x3E75877A)
        + 523944893) ^ 0x1F3AC3BD) >> (((v33 & 0x10 ^ 0x12) + 101) ^ 0x77);
  v45 = (v44 - ((2 * v44) & 0x6A) - 75) ^ 0xAE;
  v46 = (((2 * v45) & 0x1B6) - v45 - 1972460764) ^ 0x8E26AA2D;
  v47 = dword_18CF276B0[(((2 * v46) | 0x4F8B4DEE) - v46 - 667264759) ^ 0x238DAFFD];
  v48 = v25 + 1066026114;
  v49 = 538677150 - v25;
  if (v26)
    v49 = v48;
  v50 = dword_18CF2B620[v28 ^ 0xCA];
  HIDWORD(v51) = v50 ^ 0xFFFFFF8F;
  LODWORD(v51) = v50 ^ 0xF6C24D00;
  v52 = dword_18CF4E670[(byte_18CF35B60[v1[8] ^ 4] ^ ((v1[8] ^ 0xE3)
                                                                       - ((2 * (v1[8] ^ 0xE3) + 46) & 0xD4)
                                                                       + 1)) ^ 0xB3] ^ v47 ^ (((32 * v47) ^ 0xD0C62000)
                                                                                            - ((2
                                                                                              * ((32 * v47) ^ 0xD0C62000)) & 0x8114C680)
                                                                                            + 1082811207) ^ dword_18CF2CE80[v24 ^ 0xE6DAE5E9 ^ (v49 - ((2 * v49 + 957111026) & 0xB864F76E) - 122115792)] ^ ((v51 >> 8) - ((2 * (v51 >> 8)) & 0x9D036CDA) + 1317123693);
  v53 = v24 ^ v52;
  v54 = (((v24 ^ v52) ^ 0xFF9E9E71) + 6382001 + ((2 * (v24 ^ v52 ^ 0x73836A78)) & 0x9E ^ 0x8C)) % 0x62;
  v55 = (v28 ^ 0x37) - ((2 * (v28 ^ 0x37)) & 0xBBBBBBBB);
  v56 = byte_18CF35B60[v1[4] ^ 0x5BLL] ^ 0x6B ^ ((v1[4] ^ 0xBC)
                                                                - ((2 * (v1[4] ^ 0xBC) + 46) & 0xB2)
                                                                + 112);
  v57 = (((v56 - ((2 * v56) & 0x52)) << 24) + 687865856) ^ 0x29000000;
  v58 = (v57 - 211779000 + (~(2 * v57) | 0x19FFFFFF) + 1) ^ 0xF3608248 | (v55 + 1707147485) ^ 0x65C100DD;
  v59 = byte_18CF4ED00[v1[6] ^ 0xBBLL];
  v60 = (105 * v59 - ((22 - 46 * v59) & 0xF6) + 6) ^ 0xB5;
  v61 = (((v60 - ((2 * v60) & 0x132)) << 8) + 546412800) ^ 0x20919900;
  v62 = byte_18CF35E60[v1[5] ^ 0xF0];
  v63 = (((32 * v62) ^ 0xFFFFFFB0) - 3) ^ v62;
  v64 = ((((v63 ^ 0xB8) - ((2 * (v63 ^ 0xB8)) & 0x16A)) << 16) - 290127872) ^ 0xEEB50000;
  v65 = (v64 - ((2 * v64) & 0x13BC0000) + 165553529) ^ 0x9DE2579 | (v61 - ((2 * v61) & 0x5C5FAC00) - 298854912) ^ 0xEE2FD600;
  v66 = (v65 - ((2 * v65) & 0x4FE0B232) - 1477420775) ^ 0xA7F05919 | (v58 - ((2 * v58) & 0x5EFFB9D2) + 796908777) ^ 0x2F7FDCE9;
  v67 = v66 - ((2 * v66) & 0x9865B004) + 1278400514;
  v68 = HIBYTE(v23) & 0xA4;
  v69 = (v68 ^ 0xFFFFFFFB) + (v23 >> 31 << 8) + 379122222;
  v70 = v69 & 0x53A79108 ^ 0x50A58103 | v69 & 0xAC586EA4;
  v71 = HIBYTE(v23) & 0x5B;
  v72 = (((2 * (v71 ^ 0x10259)) & 0x422) - (v71 ^ 0x10259) + 99701838) ^ 0x8DB55D46;
  v73 = ((v71 ^ 0x51 | 0x5629EB61) - (v71 ^ 0x51 | 0xA9D6149E) - 1445587810) ^ 0x7609A335;
  v74 = (((2 * v73) | 0x18D77D96) - v73 + 1939095861) ^ 0x3E048E71 ^ (((2 * v72) & 0x880C90) - v72 + 446396855) | (((2 * (v68 ^ 0x80009020)) & 0x10140) - (v68 ^ 0x80009020) + 49445454) & 0x2036BEC ^ 0xC87F89C2 ^ (v70 - 1);
  v75 = dword_18CF276B0[v63 ^ 0xC9];
  LOWORD(v72) = (HIBYTE(v33) ^ 0x88) - ((2 * (HIBYTE(v33) ^ 0x88)) & 0x92) + 9545;
  v76 = (v72 & 0x15A ^ 0xB381C103) + (v72 & 0x6A5);
  v77 = (((2 * (HIBYTE(v33) ^ 0xF8)) & 0xEEEEEEEE) - (HIBYTE(v33) ^ 0xF8) + 648) ^ 0xFFFFFDAB;
  v78 = v77 - ((2 * v77 + 226) & 0x285DA67C) + 338613167;
  v79 = --v76 ^ 0xA8ACF4C9;
  v80 = v78 ^ v76 ^ 0xA8ACF4C9 ^ 0x826FD718 ^ ((v76 ^ 0x4C7E3B68)
                                             - ((2 * (v76 ^ 0x4C7E3B68) + 2) & 0x1AD868F0)
                                             - 1922288519);
  v81 = dword_18CF2B620[v29 ^ 0x4B];
  HIDWORD(v51) = v81 ^ 0xFFFFFF8F;
  LODWORD(v51) = v81 ^ 0xF6C24D00;
  v82 = v75 ^ dword_18CF4E670[HIBYTE(v23) ^ 4] ^ (((32 * v75) ^ 0xD0C62000)
                                                - ((2 * ((32 * v75) ^ 0xD0C62000)) & 0x6064E440)
                                                + 808612398) ^ ((v51 >> 8) - ((2 * (v51 >> 8)) & 0xB5BA5CA8) - 623038892) ^ dword_18CF2CE80[v80 + 112] ^ (v74 - 1705651097 + (~(2 * v74) | 0xCB545733));
  v83 = dword_18CF276B0[v27 ^ 0x94];
  v84 = dword_18CF2B620[STACK[0x678] ^ 0xA1];
  HIDWORD(v51) = v84 ^ 0xFFFFFF8F;
  LODWORD(v51) = v84 ^ 0xF6C24D00;
  v85 = v83 ^ dword_18CF4E670[HIBYTE(v67) ^ 0x95] ^ (((32 * v83) ^ 0xD0C62000)
                                                   - ((2 * ((32 * v83) ^ 0xD0C62000)) & 0x9E8CFC40)
                                                   + 1330019891) ^ ((v51 >> 8)
                                                                  - ((2 * (v51 >> 8)) & 0x77AECE36)
                                                                  + 1003972379) ^ dword_18CF2CE80[(((v43 >> 8) & 0x8B ^ 0xD990918A)
                                                                                                 + ((v43 >> 8) & 0x74 ^ 0x61)
                                                                                                 - 1) ^ 0xD99091A6];
  v86 = dword_18CF276B0[v21 ^ 0xCA];
  v87 = ((2 * (BYTE1(v67) ^ 0x1805DE7)) & 0x200B1CC) - (BYTE1(v67) ^ 0x1805DE7) + 884082457;
  v88 = (((v67 >> 8) & 0x79 ^ 0xEDDC34F7) - ((v67 >> 8) & 0x86)) ^ 0x55DE31D4;
  v89 = dword_18CF2B620[(((2 * (v33 ^ 0x15)) & 0xA6) - (v33 ^ 0x15) + 684) ^ 0x290];
  HIDWORD(v51) = v89 ^ 0xFFFFFF8F;
  LODWORD(v51) = v89 ^ 0xF6C24D00;
  v90 = dword_18CF4E670[v34 ^ 0xD5] ^ v86 ^ (((32 * v86) ^ 0xD0C62000)
                                                            - ((2 * ((32 * v86) ^ 0xD0C62000)) & 0xE20EF180)
                                                            - 251168547) ^ dword_18CF2CE80[((v88 | 0x6C8F73B8)
                                                                                          - (v88 | 0x93708C47)
                                                                                          - 1821340601) ^ 0xD48D7648] ^ v87 ^ ((v51 >> 8) - ((2 * (v51 >> 8)) & 0x636EDCBC) + 834104926);
  v91 = ((BYTE2(v85) ^ 0xD2) - ((2 * (BYTE2(v85) ^ 0xD2)) & 0xAE) + 442626903) ^ 0x18ADE7C7;
  v92 = dword_18CF276B0[(((2 * v91) & 0x50819D8) - v91 - 246877421) ^ 0xF384E725];
  v93 = dword_18CF2B620[((v90 ^ 0x43) + (v90 & 0x53 ^ 0x210) - ((v90 ^ 0x43) & 0x53)) ^ 0x2C7];
  HIDWORD(v51) = v93 ^ 0xFFFFFF8F;
  LODWORD(v51) = v93 ^ 0xF6C24D00;
  v94 = v82 ^ v79;
  v95 = dword_18CF4E670[HIBYTE(v94) ^ 0x81] ^ v92 ^ (((32 * v92) ^ 0xD0C62000)
                                                   - ((2 * ((32 * v92) ^ 0xD0C62000)) & 0xAC09E180)
                                                   - 704319283) ^ ((v51 >> 8)
                                                                 - ((2 * (v51 >> 8)) & 0xDD891674)
                                                                 + 1858374458) ^ (((v53 >> 8) & 0xB ^ 0xDCBEDD01)
                                                                                + (((v53 >> 8) ^ 0x63D950) & 0xF4 ^ 0xD1)
                                                                                - 1) ^ dword_18CF2CE80[((BYTE1(v53) ^ 0xCE | 0x6667BABC) - (BYTE1(v53) ^ 0xCE | 0x99984543) - 1718074045) ^ 0x6667BA8F];
  v96 = dword_18CF276B0[((BYTE2(v52) ^ 0xC060E073 | 0x4580CC20) - (BYTE2(v52) ^ 0xC060E073 | 0xBA7F33DF) - 1166068769) ^ 0x85E02CB0];
  v97 = (((HIWORD(v90) & 0xFE ^ 0x9E) + (HIWORD(v90) & 0xB2 ^ 0x420) - ((HIWORD(v90) & 0xFE ^ 0x9E) & 0xB2)) & 0xFFFFFFFE | HIWORD(v90) & 1) ^ 0x41B;
  v98 = dword_18CF2B620[v94 ^ 0x56];
  HIDWORD(v51) = v98 ^ 0xFFFFFF8F;
  LODWORD(v51) = v98 ^ 0xF6C24D00;
  v99 = dword_18CF4E670[HIBYTE(v85) ^ 0x26] ^ dword_18CF2CE80[((BYTE1(v90) ^ 0x7B)
                                                             + ((v90 >> 8) & 0xDC ^ 0xB84)
                                                             - ((BYTE1(v90) ^ 0x7B) & 0xDC)) ^ 0xB81] ^ v96 ^ ((v51 >> 8) - ((2 * (v51 >> 8)) & 0x48CF4B8) + 38173276) ^ (((2 * (BYTE1(v90) ^ 0x690801D2)) | 0x81E01758) - (BYTE1(v90) ^ 0x690801D2) - 1089473452) ^ (((32 * v96) ^ 0x74B81A80) - ((2 * ((32 * v96) ^ 0x74B81A80)) & 0x90184300) + 1208754576);
  v100 = dword_18CF276B0[(v97 + 1717714272 - ((2 * v97) & 0x4CC47AF0) + 24) ^ 0x66623D60];
  v101 = ((v100 ^ 0x9179CEFF) - ((2 * (v100 ^ 0x9179CEFF) + 172483498) & 0xE165AA9E) + 1977009956) ^ v100 ^ ((v100 ^ 0x945A3F2B) + 1453682257 + (~(2 * (v100 ^ 0x945A3F2B) + 2) | 0x52B52361));
  v102 = (v101 ^ 0x4DB27BD4) - 2 * (((v101 ^ 0x4DB27BD4) + 86241748) & 0x41E3B5A7 ^ v101 & 2) + 1191683961;
  LOBYTE(v96) = v85 ^ BYTE1(v43);
  v103 = ((((v94 ^ 0xDDC27AD2) >> 8) & 0xCA ^ 0x7928414B) + (((v94 ^ 0xDDC27AD2) >> 8) & 0x35) - 1) ^ 0x2B08C47B;
  v104 = (((2 * (((unsigned __int16)(v94 ^ 0x7AD2) >> 8) ^ 0xF6)) | 0x638A7A7A)
        - (((unsigned __int16)(v94 ^ 0x7AD2) >> 8) ^ 0xF6)
        - 835009853) ^ 0x22D51D7D;
  v105 = ((((((v90 << 6) ^ 0x4DD59900) - ((2 * ((v90 << 6) ^ 0x4DD59900)) & 0xAB1AF100) + 1435334810) | 0x3FFFFFE0)
         - 323764768) & 0xC0000000 | (v90 >> 26)) ^ 0x4000000D;
  v106 = v105 - ((2 * v105) & 0x8000000E) - 933267769;
  HIDWORD(v51) = v106 ^ 0x2678F391;
  LODWORD(v51) = v106;
  v107 = dword_18CF2B620[((v96 & 0xFD ^ 0xB4) + (v96 & 0xAC ^ 0x50A) - ((v96 & 0xFD ^ 0xB4) & 0xAC)) & 0xFFFFFFFD ^ 0x7E67A0E8 ^ (2120720616 - (v96 & 2) - 2 * (((v96 & 2 ^ 0xB3) & 0x12 | 0x7FFFFF6D) ^ (v96 & 2 ^ 0xB3 | 0x7FFFFFED)) + 1355)];
  v108 = (v51 >> 30) - ((2 * (v51 >> 30)) & 0xA688865A);
  HIDWORD(v51) = v107 ^ 0xFFFFFF8F;
  LODWORD(v51) = v107 ^ 0xF6C24D00;
  v109 = dword_18CF2CE80[((v104 | 0x3CA14090) - (v104 | 0xC35EBF6F) - 1017200785) ^ 0x2FB16045] ^ ((v51 >> 8)
                                                                                                 - ((2 * (v51 >> 8)) & 0x217D1A50)
                                                                                                 + 280923432) ^ dword_18CF4E670[HIBYTE(v52) ^ 0x1E] ^ v102 ^ (((2 * v103) & 0x441C366) - v103 + 2039160396) ^ (((32 * v102) ^ 0x3C76B4A0) - ((2 * ((32 * v102) ^ 0x3C76B4A0)) & 0x30156800) + 403354631);
  v110 = dword_18CF276B0[BYTE2(v82) ^ 0x90];
  v111 = (v54 ^ 0xBBF5A7F)
       + 2 * v54
       + ((2 * ((v53 ^ 0x73836A3E) + (v54 ^ 0xFFFFFF02) - ((2 * v54) & 0xFA) - 2)) & 0x1FC)
       + (((v53 ^ 0x3E) + (v54 ^ 2) - ((2 * v54) & 0xFA) - 2) ^ 0x7FF7B7FE);
  v112 = dword_18CF2B620[(v111 - 1463670114 + (~(2 * v111 + 1754389254) | 0x970D85CB)) ^ 0x34793DA9];
  v113 = ((v112 << 25) & 0xFC000000 ^ 0x1C000000) + ((v112 << 24) ^ 0x71DFC7BA);
  v114 = v110 ^ dword_18CF2CE80[((BYTE1(v85) ^ 0xB1) + 1433412372 - ((2 * (BYTE1(v85) ^ 0xB1)) & 0x1B8) + 200) ^ 0x55702314] ^ (((32 * v110) ^ 0xD0C62000) - ((2 * ((32 * v110) ^ 0xD0C62000)) & 0xD74A0780) + 1805976531) ^ ((BYTE1(v85) ^ 0x73) - ((2 * (BYTE1(v85) ^ 0x73)) & 0x2E) - 8160489) & 0x92000FFF ^ dword_18CF4E670[(v108 - 750501075) ^ 0x6BDA565B];
  v115 = (((v113 + 18888774) & 0xFF000000 | (v112 >> 8)) ^ 0x98F61209)
       + v113
       + ((2 * ((v113 + 18888774) & 0xFF000000 | (v112 >> 8))) & 0xCFFE5F76 ^ 0xFE13FBED);
  v116 = (((v112 >> 8) ^ 0xFF093DB2) - ((2 * ((v112 >> 8) ^ 0xFF093DB2) + 2) & 0xF365CE20) + 2041767697) ^ (v112 >> 8) ^ (v115 - ((2 * v115 - 767635450) & 0xBE4C5056) + 1212518446);
  HIDWORD(v51) = v114 ^ 0x6F6;
  LODWORD(v51) = v114 ^ 0xDD48B000;
  v117 = (v51 >> 12) - ((2 * (v51 >> 12)) & 0xB2E3039C) - 646872626;
  HIDWORD(v51) = v116 ^ 0xD76;
  LODWORD(v51) = (((v116 ^ 0xA6620D76) + v113 + 18888774) ^ 0xBFABFF97)
               + 1079246953
               + ((2 * ((v116 ^ 0xA6620D76) + v113 + 18888774)) & 0x7F57FF2E);
  v118 = ((v51 >> 12) - ((2 * (v51 >> 12)) & 0x473BCC40) + 597550624) ^ v117;
  HIDWORD(v51) = v118 ^ 0x8DE02;
  LODWORD(v51) = v118 ^ 0x7100000;
  v119 = (v51 >> 20) - ((2 * (v51 >> 20)) & 0x95655336) - 894260837;
  v120 = ((((v119 ^ 0x245AA9C9) >> (v43 & 8 ^ 8))
         - ((2 * ((v119 ^ 0x245AA9C9) >> (v43 & 8 ^ 8))) & 0x2E078E04)
         - 1761360126) ^ 0x9703C702) >> (v43 & 8);
  LOBYTE(v110) = v120 - ((2 * v120) & 0xAA) + 85;
  v121 = dword_18CF276B0[BYTE2(v99) ^ 0xA];
  v122 = ((v119 & 0x72 ^ 0x85740003) - (v119 & 0x8D) + 24716) ^ 0x917461AD;
  v123 = (((2 * v122) | 0xB7DEC06A) - v122 + 605069259) ^ 0xCFEF616D;
  v124 = BYTE1(v109);
  v125 = dword_18CF2B620[v123];
  HIDWORD(v51) = v125 ^ 0xFFFFFF8F;
  LODWORD(v51) = v125 ^ 0xF6C24D00;
  v126 = dword_18CF276B0[BYTE2(v109) ^ 0x8D];
  v127 = dword_18CF4E670[HIBYTE(v95) ^ 0xA1] ^ v121 ^ dword_18CF2CE80[((BYTE1(v109) ^ 0xF7)
                                                                     + ((v109 >> 8) & 0xAC ^ 0x908)
                                                                     - ((BYTE1(v109) ^ 0xF7) & 0xAC)) ^ 0x973] ^ (((32 * v121) ^ 0xD0C62000) - ((2 * ((32 * v121) ^ 0xD0C62000)) & 0xC17CCC00) + 1623090712) ^ ((v51 >> 8) - ((2 * (v51 >> 8)) & 0xA9F43AE2) - 721805967);
  v128 = (v110 ^ 0xE7) + (v110 & 0x9A ^ 0x84233118) - ((v110 ^ 0xE7) & 0x9A);
  v129 = dword_18CF2B620[(((2 * (v95 ^ 0xD7409)) | 0x83F762B0)
                        - (v95 ^ 0xD7409)
                        + 1040469672) ^ 0xC1F6C5B6];
  HIDWORD(v51) = v129 ^ 0xFFFFFF8F;
  LODWORD(v51) = v129 ^ 0xF6C24D00;
  v130 = dword_18CF4E670[HIBYTE(v99) ^ 0x96] ^ v126 ^ (((32 * v126) ^ 0xD0C62000)
                                                     - ((2 * ((32 * v126) ^ 0xD0C62000)) & 0x2E390800)
                                                     + 387744787) ^ ((v51 >> 8)
                                                                   - ((2 * (v51 >> 8)) & 0x8363C546)
                                                                   + 1102176931) ^ dword_18CF2CE80[((v110 & 0x53 ^ 0x80061C03)
                                                                                                  + (v110 & 0xAC ^ 0x1A0E1A5)
                                                                                                  - 1) ^ 0x81A6FD82];
  v131 = dword_18CF276B0[(((2 * (BYTE2(v119) ^ 0x18808053)) | 0xF49B3DB0) - (BYTE2(v119) ^ 0x18808053) + 95576360) ^ 0xE2CD1EC9];
  v132 = v131 ^ 0x6BA5C0D4;
  if ((v131 & 0x1000000) != 0)
    v133 = 0x1000000;
  else
    v133 = -16777216;
  v134 = v133 + v132 - 2 * ((v133 + v132) & 0x112969C5 ^ v132 & 4) + 287926721;
  v135 = ((v95 >> 8) & 0x79 ^ 0x3941A748) + ((v95 >> 8) & 0x86 ^ 0x81) - 1;
  v136 = dword_18CF2B620[v99 ^ 0x1B];
  HIDWORD(v137) = v136 ^ 0xFFFFFF8F;
  LODWORD(v137) = v136 ^ 0xF6C24D00;
  v138 = dword_18CF4E670[HIBYTE(v109) ^ 0x8B] ^ BYTE1(v95) ^ dword_18CF2CE80[((v135 & 0x7B5 ^ 0xA032184)
                                                                            + (v135 & 0x84A ^ 0x40A08049)
                                                                            - 1) ^ 0x4AA3A66D] ^ ((v137 >> 8)
                                                                                                - ((2 * (v137 >> 8)) & 0x84631172)
                                                                                                + 1110542521) ^ v134 ^ (((32 * v134) ^ 0xA15302A0) - ((2 * ((32 * v134) ^ 0xA15302A0)) & 0x8A8A4700) - 985324646);
  v139 = dword_18CF276B0[((BYTE2(v95) ^ 0x482B0497) - ((2 * (BYTE2(v95) ^ 0x482B0497)) & 0x80400878) - 501172676) ^ 0xAA0BB22F];
  v140 = dword_18CF2B620[v109 ^ 0x2F];
  HIDWORD(v137) = v140 ^ 0xFFFFFF8F;
  LODWORD(v137) = v140 ^ 0xF6C24D00;
  v141 = dword_18CF4E670[HIBYTE(v119) ^ 9] ^ v139 ^ (((v99 >> 8) & 0xC8 ^ 0xE978849) + ((v99 >> 8) & 0x37) - 1) ^ dword_18CF2CE80[((BYTE1(v99) ^ 0x2C7008D1 | 0xBB136560) - (BYTE1(v99) ^ 0x2C7008D1 | 0x44EC9A9F) + 1156356767) ^ 0x97636D10] ^ (((32 * v139) ^ 0xD0C62000) - ((2 * ((32 * v139) ^ 0xD0C62000)) & 0xE6CF3A40) - 211313376) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x55019C56) - 1434399189);
  v142 = v127 ^ v124;
  v143 = (BYTE1(v137) - ((2 * BYTE1(v137)) & 0x56) + 43) & 0x10;
  v144 = (v142 ^ ~HIWORD(v119) & 0x1000001 ^ 0x93559465) >> v143;
  HIDWORD(v137) = v141 ^ 0x1DA;
  LODWORD(v137) = v141 ^ 0x739D6400;
  v145 = (v137 >> 10) - ((2 * (v137 >> 10)) & 0x81F306BE) + 1090093919;
  v146 = ((v144 - ((2 * v144) & 0x2EF01A14) + 393743626) ^ 0x17780D0A) >> (v143 ^ 0x10);
  v147 = v146 - 2 * (v146 & 1);
  HIDWORD(v137) = v145 ^ 0x149C97;
  LODWORD(v137) = v145 ^ 0x86800000;
  v148 = (v137 >> 22) - ((2 * (v137 >> 22)) & 0xE879CF9E) - 197335089;
  v149 = v130 ^ v128 & 0x80001FFF;
  v150 = ((BYTE2(v130) ^ 2) - ((v130 >> 15) & 0x1D2) - 1938855447) ^ 0xA82F21FB;
  v151 = dword_18CF276B0[(((2 * v150) & 0x80015E4) - v150 + 837711117) ^ 0x15AE3DA6];
  v152 = ((v137 >> 22) - ((2 * (v137 >> 22)) & 0x9E) - 49) ^ 0x82;
  v153 = ((BYTE1(v138) ^ 0xFFFFFF7F) - 2057771225 + ((2 * BYTE1(v138)) | 0xF54E31B4)) ^ 0x70B71AFA;
  v154 = dword_18CF2B620[(((2 * v152) | 0x4C1BA472) - v152 + 1509043655) ^ 0xA60DD2B5];
  HIDWORD(v137) = v154 ^ 0xFFFFFF8F;
  LODWORD(v137) = v154 ^ 0xF6C24D00;
  v155 = dword_18CF4E670[HIBYTE(v127) ^ 0xBF] ^ v151 ^ dword_18CF2CE80[((v153 | 0x6FEEB25C)
                                                                      - (v153 | 0x90114DA3)
                                                                      - 1877914205) ^ 0x65FEB0A5] ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0xF2269F76) - 116174917) ^ ((BYTE1(v138) ^ 0x8848E409) + ((v138 >> 8) & 0x36 ^ 0x33A21936) - ((BYTE1(v138) ^ 0x8848E409) & 0x8008E036)) ^ (((32 * v151) ^ 0xD0C62000) - ((2 * ((32 * v151) ^ 0xD0C62000)) & 0x55C55A40) + 719498535);
  v156 = ((HIWORD(v138) & 0x77 ^ 0xFA107151) + (HIWORD(v138) & 0x88 ^ 0x81) - 1) ^ 0x2B80D9F5;
  v157 = dword_18CF276B0[(v156 - ((2 * v156) & 0x301446E) + 197845559) ^ 0xDA5A4AD3];
  v158 = ((BYTE1(v148) ^ 0x3D | 0xB2978492) - (BYTE1(v148) ^ 0x3D | 0x4D687B6D) + 1298692973) ^ 0xF0DFC492;
  v159 = ((((v148 >> 8) & 6) + (BYTE1(v148) ^ 0xA6)) | 0xB6E4EA00) - ((BYTE1(v148) ^ 0xA6) & 6);
  v160 = dword_18CF2B620[((v142 ^ 0x45C9808C | 0x841CB1EC)
                        - (v142 ^ 0x45C9808C | 0x7BE34E13)
                        + 2078494227) ^ 0xC1D531B7];
  HIDWORD(v137) = v160 ^ 0xFFFFFF8F;
  LODWORD(v137) = v160 ^ 0xF6C24D00;
  v161 = dword_18CF4E670[HIBYTE(v149) ^ 0x4A] ^ dword_18CF2CE80[((v159 & 0x20A0A9B2 ^ 0x480011A0)
                                                               + (v159 ^ 0xB1A6EE17)
                                                               - ((v159 ^ 0xB1A6EE17) & 0x50201B2)) ^ 0x6AE0BD40] ^ v157 ^ ((v137 >> 8) + 809773427 + (~(2 * (v137 >> 8)) | 0x9F77AD1B)) ^ (v158 - ((2 * v158) & 0xD3693246) - 374040285) ^ (((32 * v157) ^ 0xD0C62000) - ((2 * ((32 * v157) ^ 0xD0C62000)) & 0x8076E40) + 67352352);
  v162 = dword_18CF276B0[((BYTE2(v148) ^ 0xA8) + (HIWORD(v148) & 0x7B ^ 0x1753) - ((BYTE2(v148) ^ 0xA8) & 0x7B)) ^ 0x171F];
  v163 = (33 * (v162 ^ 0x6E863100)) ^ 0x6EF0E36F;
  v164 = (66 * (v162 ^ 0x6E863100)) & 0xDDE1C6DE;
  v165 = v127 >> 8;
  v166 = ((BYTE1(v127) ^ 0x8A) + ((v127 >> 8) & 0x33 ^ 0x34CFC131) - ((BYTE1(v127) ^ 0x8A) & 0x33333333)) ^ 0x344D5B3B;
  v167 = ((((2 * v162) ^ 0xDD0C6200) - 463771648 - 2 * (((2 * v162) ^ 0xDD0C6200) & 0x645B683C ^ (2 * v162) & 0x14) + 41) ^ 0xE45B6800) & ((((v162 << 6) ^ 0xA18C4000) - ((2 * ((v162 << 6) ^ 0xA18C4000)) & 0xACF79A80) - 696529581) ^ 0xD67BCD53);
  v168 = v164 + v163 + (v167 ^ 0xDEC854B2) - ((2 * v167) & 0x426F569A) + 1;
  v169 = dword_18CF2B620[((v149 ^ 0xAF) - ((2 * (v149 ^ 0xAF)) & 0xF6) + 2427) ^ 0x961];
  HIDWORD(v137) = v169 ^ 0xFFFFFF8F;
  LODWORD(v137) = v169 ^ 0xF6C24D00;
  v170 = HIBYTE(v148) ^ 0xD3;
  v171 = dword_18CF2CE80[((v165 & 0x77 ^ 0x18E) - (v165 & 0x88)) ^ 0x16A] ^ (v166 - ((2 * v166) & 0x47410) + 293550600) ^ dword_18CF4E670[HIBYTE(v138) ^ 0x21] ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x7F97DF0C) - 1077153914) ^ (v168 - ((2 * v168 + 1686998972) & 0x85913EE6) + 1963943761);
  v172 = (((2 * ((v147 - 127) ^ 0xD4)) | 0x9F030F90)
        - ((v147 - 127) ^ 0xD4)
        + 813594680) ^ 0x8F0A87DC;
  v173 = dword_18CF276B0[((v172 | 0x939ECCED) - (v172 | 0x6C613312) + 1818309394) ^ 0xD315CCB4];
  v174 = v149 >> 8;
  v175 = (v149 >> 8) & 0x6D ^ 0xA2D0925;
  v176 = BYTE1(v149);
  v177 = ((v176 ^ 0x48) + v175 - ((v176 ^ 0x48) & 0x6D)) ^ 0xA2D8965;
  v178 = v173 ^ dword_18CF4E670[v170] ^ (((32 * v173) ^ 0xD0C62000)
                                       - ((2 * ((32 * v173) ^ 0xD0C62000)) & 0x2DBA8600)
                                       - 1763884268);
  v179 = (v176 ^ 0xA3) + (v174 & 0x30 ^ 0x297C1F10) - ((v176 ^ 0xA3) & 0x30);
  v180 = dword_18CF2CE80[((v179 & 0x5D1EE3 ^ 0x908100C0) + (v179 ^ 0x497E5F23) - ((v179 ^ 0x497E5F23) & 0x20051EE3)) ^ 0xD0DF5E14];
  v181 = v180 ^ 0xA762988C;
  v182 = (v180 ^ 0xA762988C) + (v180 ^ 0xD42A6181 ^ v178) + 1;
  v183 = ((v138 & 0x27 ^ 0xBFF22004) + (v138 & 0xD8 ^ 9) - 1) ^ 0xBEF3A316;
  v184 = (v178 ^ ((v178 ^ 0x7348F90D) - ((2 * (v178 ^ 0x7348F90D) + 2) & 0x6E75C264) - 1220878029) ^ (v182 - ((2 * v182) & 0x548141C8) + 708878564) ^ 0x11CD4724)
       + v181;
  v185 = dword_18CF2B620[(v183 - ((2 * v183) & 0x2FDCA) + 739606245) ^ 0x2D14FD82];
  HIDWORD(v137) = v185 ^ 0xFFFFFF8F;
  LODWORD(v137) = v185 ^ 0xF6C24D00;
  v186 = (v184 - ((2 * v184) & 0xBA5FF08C) + 1563424838) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x7061C114) - 1204756342) ^ ((v177 | 0x745168CB) - (v177 | 0x8BAE9734) - 1951492300);
  v187 = dword_18CF276B0[BYTE2(v161) ^ 0x55];
  v188 = (v186 ^ 0x8C) - ((2 * (v186 ^ 0x8C)) & 0x142) - 1747142751;
  v189 = dword_18CF2B620[((v188 & 0x83540E18 ^ 0x8000A00) + (v188 ^ 0x87DEB53A) - ((v188 ^ 0x87DEB53A) & 0x10000E18)) ^ 0x8B560C74];
  HIDWORD(v137) = v189 ^ 0xFFFFFF8F;
  LODWORD(v137) = v189 ^ 0xF6C24D00;
  v190 = v187 ^ dword_18CF4E670[HIBYTE(v155) ^ 0xD0] ^ dword_18CF2CE80[BYTE1(v171) ^ 0xE3] ^ (((32 * v187) ^ 0xD0C62000)
                                                                                            + 1146938365
                                                                                            + (~(2
                                                                                               * ((32 * v187) ^ 0xD0C62000)) | 0x7746383F)) ^ ((BYTE1(v171) ^ 0x180C0091) + ((v171 >> 8) & 0xD5 ^ 0x452F944) - ((BYTE1(v171) ^ 0x180C0091) & 0x80400D5)) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x469E1AF2) + 592383353);
  v191 = ((HIWORD(v171) & 0x1B ^ 0xB8A86003) + (HIWORD(v171) & 0xE4 ^ 0xE1) - 1) ^ 0x594A9627;
  v192 = (((v186 >> 8) & 0x90 ^ 0xF507FA81) + ((v186 >> 8) & 0x6F) - 1) ^ 0xF4A3D695;
  v193 = dword_18CF276B0[(v191 - ((2 * v191) & 0x4201EECE) + 555022183) ^ 0xC0F601D4];
  v194 = dword_18CF2B620[(((2 * (v155 ^ 0x41)) | 0x95BEA02)
                        - (v155 ^ 0x41)
                        + 1800538879) & 0x1FFFFFFF ^ 0x14ADF5F0];
  v195 = (v194 >> 8) & 0x128C8F;
  v196 = (((2 * (v195 ^ 0x49D7C9C3)) & 0x92208186) - (v195 ^ 0x49D7C9C3) + 13614396) ^ 0x9A1A74C2;
  v197 = ((v194 >> 7) & 0x5191E ^ 0xD15F26FA)
       + (v195 ^ 0x17506C82)
       + ((((v194 >> 8) ^ 0x16E44EC2) + 1) ^ 0xFE6CE71F)
       + ((2 * (((v194 >> 8) ^ 0x16E44EC2) + 1)) & 0x2CD9CE3E);
  v198 = (((2 * v196) & 0x13E00D64) - v196 + 1980741965) ^ (v197 - ((2 * v197 + 96924100) & 0x246D5674) - 1793448932) ^ 0x37299247;
  v199 = ((v194 << 24) ^ 0xE6FFBADD) + ((v194 << 25) & 0xD2000000 ^ 0x12000000) - 1778367197 + v198;
  v200 = v199 - 2 * (v199 & 0x3C6F513D ^ v198 & 1) - 1133555396;
  v201 = dword_18CF276B0[BYTE2(v186) ^ 0xF2];
  v202 = dword_18CF4E670[HIBYTE(v161) ^ 0xFD] ^ v193 ^ (((32 * v193) ^ 0xD0C62000)
                                                      - ((2 * ((32 * v193) ^ 0xD0C62000)) & 0x446C9000)
                                                      - 1573500918) ^ v200 ^ ((v192 | 0x6066538F)
                                                                            - (v192 | 0x9F99AC70)
                                                                            - 1617318800) ^ dword_18CF2CE80[(((v186 >> 8) & 0x2B ^ 0x9FBBCC03) + ((v186 >> 8) & 0xD4 ^ 0xC1) - 1) ^ 0x9FBBCCB6];
  LOWORD(v200) = ((2 * (BYTE1(v155) ^ 0xC3)) & 0xC) - (BYTE1(v155) ^ 0xC3) - 23303;
  v203 = ((v161 ^ 0xC4) - ((2 * (v161 ^ 0xC4)) & 0x162) - 1458855247) ^ 0x398AAAB3;
  v204 = dword_18CF2B620[(v203 - ((2 * v203) & 0x17C6) + 643465187) ^ 0xB6DB77FF];
  HIDWORD(v137) = v204 ^ 0xFFFFFF8F;
  LODWORD(v137) = v204 ^ 0xF6C24D00;
  v205 = v201 ^ BYTE1(v155) ^ dword_18CF4E670[HIBYTE(v171) ^ 0x7B] ^ dword_18CF2CE80[((v200 & 0x6E9 ^ 0x5569221)
                                                                                    + (v200 & 0x116 ^ 0x8884911)
                                                                                    - 1) ^ 0xDDEDF9D] ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0xA36288F8) - 776911748) ^ (((32 * v201) ^ 0xD0C62000) - ((2 * ((32 * v201) ^ 0xD0C62000)) & 0xF93D4980) - 56711979);
  v206 = dword_18CF4E670[HIBYTE(v186) ^ 0x24];
  v207 = (v206 ^ 0x8B138B19) + 1;
  v206 ^= 0xF83DEE3B;
  v208 = v206 + (v207 ^ 0x5BE7B7E7) + ((2 * v207) & 0xB7CF6FCE) - 1541912551;
  v209 = dword_18CF276B0[BYTE2(v155) ^ 0x32];
  v210 = ((v208 - 1048142656 + (~(2 * v208) | 0x7CF2C681)) ^ 0x3E796341) + v206;
  v211 = BYTE1(v161) ^ 0xD79EDE36;
  v212 = v161 >> 8;
  v213 = 2 * (v161 >> 8);
  v214 = v213 & 0x7A ^ 0x13;
  v215 = (v213 ^ 0x1FAAA16) - ((2 * (v213 ^ 0x1FAAA16)) & 0xA0) + 464;
  v216 = v211 + v214 + (v215 & 0xE0) - ((2 * v215) & 0x40) + 677454194;
  v217 = dword_18CF2B620[v171 ^ 0xAE];
  HIDWORD(v137) = v217 ^ 0xFFFFFF8F;
  LODWORD(v137) = v217 ^ 0xF6C24D00;
  v218 = dword_18CF2CE80[v216] ^ v209 ^ (((32 * v209) ^ 0xD0C62000)
                                       - ((2 * ((32 * v209) ^ 0xD0C62000)) & 0xE4210940)
                                       - 233798493) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0xED3EC150) + 1990156456) ^ (v210 - ((2 * v210) & 0x15E1FDE2) - 1963917583);
  v219 = dword_18CF276B0[BYTE2(v202) ^ 0x81];
  v220 = (BYTE1(v205) ^ 0xE1) + ((v205 >> 8) & 0xB0 ^ 0x72A0010) - ((BYTE1(v205) ^ 0xE1) & 0xB0);
  v221 = dword_18CF2B620[(((2 * ((v218 ^ v212) ^ 0x510800FF)) | 0x10A8733C)
                        - ((v218 ^ v212) ^ 0x510800FF)
                        - 139737502) ^ 0x595C39A6];
  HIDWORD(v137) = v221 ^ 0xFFFFFF8F;
  LODWORD(v137) = v221 ^ 0xF6C24D00;
  v222 = dword_18CF4E670[HIBYTE(v190) ^ 0xC] ^ v219 ^ dword_18CF2CE80[((v220 & 0x39C69 ^ 0x89C18C01)
                                                                     + (v220 & 0x6396 ^ 0x40182281)
                                                                     - 1) ^ 0xC9DBAE39] ^ (((32 * v219) ^ 0xD0C62000)
                                                                                         - ((2
                                                                                           * ((32 * v219) ^ 0xD0C62000)) & 0xFB7E1E80)
                                                                                         - 37810347) ^ (((2 * (BYTE1(v205) ^ 0x7CFC2EA3)) & 0xA08048E0) - (BYTE1(v205) ^ 0x7CFC2EA3) + 767302287) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x3F762E34) - 1615128806);
  v223 = dword_18CF276B0[BYTE2(v205) ^ 0xE3];
  v224 = ((BYTE1(v218) ^ 0x72) + ((v218 >> 8) & 0x31 ^ 0xB4176A01) - ((BYTE1(v218) ^ 0x72) & 0x31)) ^ 0xFD574E79;
  v225 = (((2 * (BYTE2(v218) ^ 0x59)) | 0x6E770562) - (BYTE2(v218) ^ 0x59) + 1220836687) ^ 0xB69A2231;
  v226 = dword_18CF2B620[(((2 * (v190 ^ 0xAA)) | 0xC459C326)
                        - (v190 ^ 0xAA)
                        + 500375149) ^ 0xE22CE188];
  HIDWORD(v137) = v226 ^ 0xFFFFFF8F;
  LODWORD(v137) = v226 ^ 0xF6C24D00;
  v227 = dword_18CF4E670[HIBYTE(v202) ^ 0xA4] ^ v223 ^ (((32 * v223) ^ 0xD0C62000)
                                                      - ((2 * ((32 * v223) ^ 0xD0C62000)) & 0xABD23E00)
                                                      + 1441341190) ^ dword_18CF2CE80[(((2 * v224) | 0x506A860C)
                                                                                     - v224
                                                                                     + 1472904442) ^ 0xE1756766] ^ (((2 * (BYTE1(v218) ^ 0xDD)) & 0x1A) - (BYTE1(v218) ^ 0xDD) + 24562) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x6599537C) - 1295210050);
  v228 = dword_18CF276B0[(((2 * v225) | 0xEE25B544) - v225 - 1997724322) ^ 0x76B37A49];
  v229 = v228 ^ ((BYTE1(v190) ^ 0xA11C0440 | 0x41CE5A5F) - (BYTE1(v190) ^ 0xA11C0440 | 0xBE31A5A0) - 1104042592) ^ dword_18CF4E670[HIBYTE(v205) ^ 0x49] ^ dword_18CF2CE80[(((2 * (BYTE1(v190) ^ 0xB6)) & 0x20) - (BYTE1(v190) ^ 0xB6) + 1519) ^ 0x579] ^ (((32 * v228) ^ 0xD0C62000) - ((2 * ((32 * v228) ^ 0xD0C62000)) & 0x4C62E080) + 640774224);
  HIDWORD(v137) = v229 ^ 0x17;
  LODWORD(v137) = v229 ^ 0xE20E9040;
  v230 = (v137 >> 6) - ((2 * (v137 >> 6)) & 0xA837DCDA) - 736366995;
  v231 = dword_18CF2B620[v202 ^ 0x5D];
  HIDWORD(v137) = v231 ^ 0xFFFFFF8F;
  LODWORD(v137) = v231 ^ 0xF6C24D00;
  v232 = (v137 >> 8) + 1324161024 - ((2 * (v137 >> 8)) & 0x9DDA304E) + 39;
  HIDWORD(v137) = v232 ^ 0xFFFFFFE7;
  LODWORD(v137) = v232 ^ 0x4EED1800;
  v233 = (v137 >> 6) - ((2 * (v137 >> 6)) & 0xB4BC2DB8) - 631367972;
  HIDWORD(v137) = v233 ^ 0x3EAC78C ^ v230;
  LODWORD(v137) = v233 ^ ~v230;
  v234 = (v137 >> 26) - ((2 * (v137 >> 26)) & 0x9E4F2FE4) + 1327994866;
  v235 = (((2 * (BYTE2(v190) ^ 0xE2)) & 0x158) - (BYTE2(v190) ^ 0xE2) - 1781319597) ^ 0x55FFA831;
  v236 = dword_18CF276B0[((v235 | 0xDEFAA830) - (v235 | 0x210557CF) + 553998287) ^ 0x1ED638D4];
  LOWORD(v235) = (v205 ^ 0x48) + (v205 & 0x63 ^ 0x8323) - ((v205 ^ 0x48) & 0x63);
  v237 = ((BYTE1(v202) ^ 0xDD | 0x154F97A8) - (BYTE1(v202) ^ 0xDD | 0xEAB06857) - 357537705) ^ 0x914FD529;
  v238 = dword_18CF2B620[((v235 & 0xCBED ^ 0xE82DC80C) + (v235 & 0x3412 ^ 0x10401013) - 1) ^ 0xF86D5B7F];
  HIDWORD(v137) = v238 ^ 0xFFFFFF8F;
  LODWORD(v137) = v238 ^ 0xF6C24D00;
  v239 = dword_18CF276B0[BYTE2(v222) ^ 0xDC];
  v240 = v236 ^ dword_18CF4E670[HIBYTE(v218) ^ 0xD0] ^ dword_18CF2CE80[(v237 - ((2 * v237) & 0x251341CE) - 1836474137) ^ 0x1689E2B3] ^ ((v137 >> 8) + 2029420408 + (~(2 * (v137 >> 8)) | 0xE130111)) ^ (((32 * v236) ^ 0xD0C62000) - ((2 * ((32 * v236) ^ 0xD0C62000)) & 0x23B1A280) + 299422023);
  v241 = v239 ^ dword_18CF4E670[HIBYTE(v240) ^ 0x7C] ^ (((32 * v239) ^ 0xD0C62000)
                                                      - ((v239 << 6) & 0x40101B80)
                                                      + 537398727) ^ 0xA6C84EE6;
  v242 = ((v241 & 0xDDE3163B ^ 0x90630623)
        + (v241 & 0x901003A ^ 0x910681C)
        - ((v241 & 0xDDE3163B ^ 0x90630623) & 0x901003A)) ^ 0x555609A;
  v243 = ((BYTE1(v227) ^ 0x33 | 0xF7137C32) - (BYTE1(v227) ^ 0x33 | 0x8EC83CD) + 149717965) ^ 0xF601FE12;
  v244 = (v241 & 0xC000) + (v241 & 0x14C0C0 ^ 0xFFEBFFBF) + (v241 & 0xC000 | 0xF61F27D9);
  v245 = (v241 & 0x2080104 | v241 & 0x20002800 ^ 0x20000001) + 1291108455;
  v246 = ((v245 & 0x44C40104 ^ 0x10000100) + (v245 ^ 0xE7EDD444) - ((v245 ^ 0xE7EDD444) & 0x88000124)) ^ 0x57D5150C | (v244 | 1) ^ 0xF60B2759;
  v247 = (v246 - ((2 * v246) & 0x248DBD84) + 306634434) ^ 0x1246DEC2 | (v242 - ((2 * v242) & 0x88261388) - 1005368892) ^ 0xC4964140;
  v248 = dword_18CF2B620[v234 ^ 0x85];
  HIDWORD(v137) = v248 ^ 0xFFFFFF8F;
  LODWORD(v137) = v248 ^ 0xF6C24D00;
  v249 = dword_18CF2CE80[BYTE1(v227) ^ 0xBB] ^ (((2 * v243) | 0xF4D6DC7A) - v243 + 93622723) ^ ((v137 >> 8)
                                                                                              - ((2 * (v137 >> 8)) & 0x62806AA6)
                                                                                              + 826291539) ^ (v247 - ((2 * v247) & 0xAF805264) + 1472211250);
  v250 = (((LOBYTE(dword_18CF2CE80[BYTE1(v227) ^ 0xBB]) ^ (((2 * v243) | 0x7A) - v243 - 61) ^ (BYTE1(v137) - ((2 * BYTE1(v137)) & 0xA6) + 83) ^ (v247 - ((2 * v247) & 0x64) + 50)) ^ 0xFFD959DF)
        + 2532946
        + ((2 * v249) & 0x15C ^ 0x40))
       % 0x72;
  v251 = ((v202 >> 8) & 0x74 ^ 0x435) + ((v202 >> 8) & 0x8B);
  v252 = dword_18CF276B0[((HIWORD(v227) & 4)
                        + (BYTE2(v227) ^ 0x18D88AD)
                        - ((BYTE2(v227) ^ 0x18D88AD) & 0x898004)
                        + 436351744) ^ 0x1B063BD7];
  v253 = (((v234 >> 8) & 0x53 ^ 0xA12401) + ((v234 >> 8) & 0xAC ^ 0x1058C225) - 1) ^ 0x11798A28;
  v254 = ((BYTE1(v234) ^ 0x44) - ((2 * (BYTE1(v234) ^ 0x44)) & 0xFFFFFF0F) + 143704711) ^ 0x88D0AEC7;
  v255 = v240 ^ (v251 - 1);
  v256 = dword_18CF2B620[(v240 ^ (v251 - 1)) ^ 0x5B];
  HIDWORD(v137) = v256 ^ 0xFFFFFF8F;
  LODWORD(v137) = v256 ^ 0xF6C24D00;
  v257 = v252 ^ dword_18CF4E670[HIBYTE(v222) ^ 0xF5] ^ (((32 * v252) ^ 0xD0C62000)
                                                      - ((2 * ((32 * v252) ^ 0xD0C62000)) & 0xC5B7E940)
                                                      - 488901460) ^ ((v137 >> 8)
                                                                    - ((2 * (v137 >> 8)) & 0xD0AB94E6)
                                                                    - 397030797) ^ (((2 * v253) | 0xE4DD096C)
                                                                                  - v253
                                                                                  + 227638090) ^ dword_18CF2CE80[(v254 - ((2 * v254) & 0x804C02) + 871249409) ^ 0xB3AE5ADD];
  v258 = dword_18CF276B0[BYTE2(v234) ^ 0x4B];
  v259 = (((32 * v258) ^ 0xD0C62000) - ((2 * ((32 * v258) ^ 0xD0C62000)) & 0x3C4A23C0) - 1641737749) ^ v258;
  HIDWORD(v137) = v259 ^ 0x49E9B5;
  LODWORD(v137) = v259 ^ 0xD6000000;
  v260 = (v137 >> 25) - ((2 * (v137 >> 25)) & 0x448B3940) + 574987424;
  HIDWORD(v137) = v260 ^ 0x33333333;
  LODWORD(v137) = v260 ^ 0x57213380;
  v261 = dword_18CF2B620[((v222 ^ 0xFFFFFFFC) - 883106570 + ((2 * v222) | 0x69464616)) ^ 0x34A32340];
  v262 = ((BYTE1(v255) ^ 0xB | 0xC348E016) - (BYTE1(v255) ^ 0xB | 0x3CB71FE9) + 1018634217) ^ 0x41C8AB8E;
  v263 = ((BYTE2(v240) ^ 0x24) - ((2 * (BYTE2(v240) ^ 0x24)) & 0xFFFFFFBF) + 1330272479) ^ 0x8B4AD8CD;
  v264 = dword_18CF276B0[((v263 | 0xD17D64E3) - (v263 | 0x2E829B1C) + 780311324) ^ 0x157DE4CD];
  v265 = dword_18CF2CE80[(v262 - ((2 * v262) & 0x1639775C) - 1961051218) ^ 0x99CF0F8] ^ dword_18CF4E670[HIBYTE(v227) ^ 0x3C] ^ (((v261 << 24) ^ 0x8F000000) - ((2 * ((v261 << 24) ^ 0x8F000000)) & 0xEFFFFFFF) + 2008364344) ^ (((v255 >> 8) & 0x41) + (BYTE1(v255) ^ 0xFFFFFF71) + (BYTE1(v255) | 0x577ED1BE) + 1) ^ ((v137 >> 7) - ((2 * (v137 >> 7)) & 0x4C9A84A6) - 1504886189);
  v266 = ((2 * (v227 ^ 0xADACE597)) | 0xF169C632) - (v227 ^ 0xADACE597) - 2025120537;
  v267 = BYTE1(v222);
  v268 = (((2 * (v267 ^ 0xB1054ABA)) & 0x42080122) - (v267 ^ 0xB1054ABA) + 1477013102) ^ 0xAE4D29D1;
  v269 = dword_18CF2B620[((v266 & 0xC5180599 ^ 0x5410018) + (v266 ^ 0xCABE3DE1) - ((v266 ^ 0xCABE3DE1) & 0x57B3599)) ^ 0xDADD0EB9];
  HIDWORD(v137) = v269 ^ 0xFFFFFF8F;
  LODWORD(v137) = v269 ^ 0xF6C24D00;
  v270 = v264 ^ (((2 * v268) | 0xF963FA18) - v268 + 55444212) ^ dword_18CF2CE80[(((2 * (v267 ^ 0x80600965)) | 0x3B62147C)
                                                                               - (v267 ^ 0x80600965)
                                                                               + 1649341890) ^ 0x1DD1032E] ^ dword_18CF4E670[HIBYTE(v234) ^ 0x79] ^ (((32 * v264) ^ 0xD0C62000) - ((2 * ((32 * v264) ^ 0xD0C62000)) & 0xA3403340) - 778036802) ^ ((v137 >> 8) - ((2 * (v137 >> 8)) & 0x73B8537C) - 1176753730);
  v271 = v265 ^ (v261 >> 8);
  v272 = HIBYTE(v265) ^ 0x26;
  v274 = (((2 * (BYTE1(v270) ^ 0x83)) & 0x42) - (BYTE1(v270) ^ 0x83) - 336398882) ^ 0xEB70C56A;
  v275 = v274 - ((2 * v274) & 0x100631C) + 346913166;
  v276 = (v250 ^ 0x6716E61A) - 1729553946 + ((2 * v250) & 0x34);
  if ((v250 ^ 0xF9B7DFFF) + 2 * v250 != -105390081)
    v276 = 0;
  v277 = (((v249 ^ 0x259C4071) - v276) ^ 0xE7) + ((2 * ((v249 ^ 0x259C4071) - v276)) & 0xCE) + 25;
  v278 = dword_18CF2B620[(v277 + 1507896119 - ((2 * v277) & 0x108) + 77) ^ 0x59E0AB37];
  HIDWORD(v279) = v278 ^ 0xFFFFFF8F;
  LODWORD(v279) = v278 ^ 0xF6C24D00;
  v280 = dword_18CF276B0[BYTE2(v270) ^ 0x74];
  v273 = dword_18CF276B0[(((2 * (BYTE2(v271) ^ 0xD)) & 0x174) - (BYTE2(v271) ^ 0xD) + 9029) ^ 0x23D1];
  v281 = v273 ^ dword_18CF4E670[HIBYTE(v257) ^ 0x2A] ^ dword_18CF2CE80[v275 ^ 0x142F49F6] ^ (((32 * v273) ^ 0xD0C62000)
                                                                                           - ((2
                                                                                             * ((32 * v273) ^ 0xD0C62000)) & 0x7CEDC700)
                                                                                           + 1047978900) ^ v275 ^ ((v279 >> 8) - ((2 * (v279 >> 8)) & 0xC0409D24) - 534753646);
  v282 = (((v249 >> 8) & 0xA4 ^ 0xB7E4C305) + ((v249 >> 8) & 0x5B) - 1) ^ 0x7770B14C;
  v283 = dword_18CF2B620[((v257 ^ 0x504E94B)
                        - ((2 * (v257 ^ 0x504E94B)) & 0x8084216)
                        + 1993750283) ^ 0x73D2DE0E];
  HIDWORD(v279) = v283 ^ 0xFFFFFF8F;
  LODWORD(v279) = v283 ^ 0xF6C24D00;
  v284 = HIBYTE(v249) ^ 0x25;
  v285 = dword_18CF4E670[v272] ^ v280 ^ dword_18CF2CE80[(v282 - ((2 * v282) & 0x800880A0) - 400275120) ^ 0x28B03B28] ^ (((32 * v280) ^ 0xD0C62000) - ((2 * ((32 * v280) ^ 0xD0C62000)) & 0x167CE000) - 1958842347) ^ ((v279 >> 8) - ((2 * (v279 >> 8)) & 0x56A46C9E) + 726808143) ^ ((BYTE1(v249) ^ 0x5600840) + ((v249 >> 8) & 0xDA ^ 0x9A9FB79A) - ((BYTE1(v249) ^ 0x5600840) & 0x10008DA));
  v286 = dword_18CF276B0[(((2 * (BYTE2(v249) ^ 0x581887B8)) | 0xC52B00C4) - (BYTE2(v249) ^ 0x581887B8) + 493518750) ^ 0xBA8D075E];
  v287 = dword_18CF2B620[v271 ^ 0x67];
  HIDWORD(v279) = v287 ^ 0xFFFFFF8F;
  LODWORD(v279) = v287 ^ 0xF6C24D00;
  v288 = v286 ^ dword_18CF4E670[HIBYTE(v270) ^ 0xA2] ^ dword_18CF2CE80[BYTE1(v257) ^ 0x35] ^ (((2 * (BYTE1(v257) ^ 0xB3)) & 0x1AC)
                                                                                            - (BYTE1(v257) ^ 0xB3)
                                                                                            + 2089) ^ (((32 * v286) ^ 0xD0C62000) - ((2 * ((32 * v286) ^ 0xD0C62000)) & 0xB3674A80) + 1504945481) ^ ((v279 >> 8) - ((2 * (v279 >> 8)) & 0x35709F1A) - 1699197043);
  v289 = ((HIWORD(v257) & 0x2E ^ 0x1F565E21) + (HIWORD(v257) & 0xD1) - 1) ^ 0x15575E9E;
  v290 = dword_18CF276B0[(((2 * v289) & 0x1402007C) - v289 + 1891680705) ^ 0x7AC1C1F2];
  v291 = (((v271 >> 8) & 0x11 ^ 0xD2637B30) + ((v271 >> 8) & 0xCC ^ 0x8D) - 1) ^ 0xD6C27B35;
  v292 = ((v271 >> 8) & 2)
       + ((v271 >> 8) & 0x22 ^ 0x2203402F)
       - (((v271 >> 8) & 0x22 ^ 0x2203402F) & 0x2004003)
       - 871888944;
  v293 = ((BYTE1(v271) ^ 0x8C) - ((2 * (BYTE1(v271) ^ 0x8C)) & 0x10A) - 535402875) ^ 0xC010639D;
  v294 = (((2 * v291) & 0x84000B4) - v291 + 198645669) & 0x661A9CDD ^ 0x9FF777FF;
  v295 = dword_18CF2B620[(((2 * (v270 ^ 0x10A80EC)) & 0x1014A)
                        - (v270 ^ 0x10A80EC)
                        + 1191861082) ^ 0x4600DB89];
  HIDWORD(v279) = v295 ^ 0xFFFFFF8F;
  LODWORD(v279) = v295 ^ 0xF6C24D00;
  v296 = v290 ^ dword_18CF4E670[v284] ^ v292 ^ (((32 * v290) ^ 0xD0C62000)
                                              - ((2 * ((32 * v290) ^ 0xD0C62000)) & 0x7712C780)
                                              - 1148623912) ^ ((v279 >> 8)
                                                             - 1835160881
                                                             - ((2 * (v279 >> 8)) & 0x253B6972)
                                                             + 2538) ^ dword_18CF2CE80[((v293 | 0x5560F645)
                                                                                      - (v293 | 0xAA9F09BA)
                                                                                      - 1432417862) ^ 0x7566F350] ^ (v294 + 1067996247 + ((2 * v294) & 0x4C1028A8 ^ 0xCCBF7FFB));
  v297 = dword_18CF276B0[BYTE2(v285) ^ 0xE4];
  v298 = (((2 * (v296 ^ 0x28)) | 0xFBE79B48) - (v296 ^ 0x28) + 34353756) ^ 0xD9F32C84;
  v299 = dword_18CF2B620[((v298 | 0xFC122EEE) - (v298 | 0x3EDD111) + 65917201) ^ 0xD812CFC0];
  HIDWORD(v279) = v299 ^ 0xFFFFFF8F;
  LODWORD(v279) = v299 ^ 0xF6C24D00;
  v300 = dword_18CF4E670[HIBYTE(v281) ^ 0xF] ^ v297 ^ dword_18CF2CE80[(((2 * (BYTE1(v288) ^ 0x42150060)) | 0xBE8A279A)
                                                                     - (BYTE1(v288) ^ 0x42150060)
                                                                     + 549121075) ^ 0x9D501331] ^ (((32 * v297) ^ 0xD0C62000)
                                                                                                 - ((2 * ((32 * v297) ^ 0xD0C62000)) & 0x1792DBC0)
                                                                                                 + 197750271) ^ ((BYTE1(v288) ^ 0xB001008E | 0xB7239A54) - (BYTE1(v288) ^ 0xB001008E | 0x48DC65AB) + 1222403499) ^ ((v279 >> 8) - ((2 * (v279 >> 8)) & 0xC426C6) - 2141056157);
  v301 = ((v296 >> 8) & 0x40) + (BYTE1(v296) ^ 0xFFFFFF58) + (BYTE1(v296) | 0x73779FBF) + 1;
  v302 = dword_18CF276B0[((HIWORD(v288) & 0x65 ^ 0x113AC024) + (HIWORD(v288) & 0x9A ^ 0x8240001B) - 1) ^ 0x937AC063];
  v303 = (((v296 >> 8) & 0x10) + (BYTE1(v296) ^ 0xFFFFFF1D) + (BYTE1(v296) | 0x9A6422EF) + 1) ^ 0xB216240F;
  v304 = dword_18CF2B620[(((2 * (v281 ^ 0x47F9CC93)) | 0xCBDCC2E2)
                        - (v281 ^ 0x47F9CC93)
                        + 437362319) ^ 0xA217AD6E];
  v305 = ((v304 << 24) ^ 0x8F000000) - ((2 * ((v304 << 24) ^ 0x8F000000)) & 0x2000000) - 2120525093;
  v306 = dword_18CF4E670[HIBYTE(v285) ^ 0xF3] ^ v302 ^ dword_18CF2CE80[((v303 | 0xADA654FB)
                                                                      - (v303 | 0x5259AB04)
                                                                      + 1381608196) ^ 0x85D45280] ^ (v304 >> 8);
  v307 = dword_18CF276B0[(((2 * (BYTE2(v296) ^ 0xBE)) | 0xAE4EF542) - (BYTE2(v296) ^ 0xBE) + 685278559) ^ 0xD7277AD5];
  v308 = v306 ^ (((32 * v302) ^ 0xD0C62000) - ((2 * ((32 * v302) ^ 0xD0C62000)) & 0x285A3C0) + 21156329) ^ ((v301 & 0xB7A9E709 ^ 0x9489C000) + (v301 ^ 0x63723F19) - ((v301 ^ 0x63723F19) & 0xB7A9E709));
  v309 = v305 ^ v308 ^ 0x6D51162A;
  v310 = ((BYTE1(v281) ^ 0xD4) + ((v281 >> 8) & 0xBC ^ 0x5F57AD28) - ((BYTE1(v281) ^ 0xD4) & 0xBC)) ^ 0xFA5FA9DD;
  v311 = BYTE1(v281) ^ 0xC1;
  v312 = dword_18CF276B0[BYTE2(v281) ^ 0xB8];
  v313 = dword_18CF2B620[((v285 ^ 0xDBB3D1FC | 0x31A882F8)
                        - (v285 ^ 0xDBB3D1FC | 0xCE577D07)
                        - 833127161) ^ 0xEA1B53F8];
  v314 = v307 ^ dword_18CF4E670[HIBYTE(v288) ^ 0xB9] ^ dword_18CF2CE80[v311] ^ (((32 * v307) ^ 0xD0C62000)
                                                                              - ((v307 << 6) & 0x4E020E00)
                                                                              + 654378757) ^ (v310
                                                                                            + 2022541751
                                                                                            - ((2 * v310) & 0x40100F54)
                                                                                            + 3571) ^ (v313 >> 8) ^ (((v313 << 24) ^ 0x8F000000) - ((2 * ((v313 << 24) ^ 0x8F000000)) & 0x55555555) + 713699365);
  v315 = ((v285 >> 7) & 0x1CE) - BYTE1(v285) - 1368804840;
  v316 = ((v288 ^ 0xFFFFFFEC) + 1005155918 + ((2 * v288) | 0x882D1366)) ^ 0x50FEC811;
  v317 = dword_18CF2B620[(((2 * v316) | 0x7E7D469E) - v316 - 1061069647) ^ 0xABD6E21E];
  HIDWORD(v279) = v317 ^ 0xFFFFFF8F;
  LODWORD(v279) = v317 ^ 0xF6C24D00;
  v318 = dword_18CF4E670[HIBYTE(v296) ^ 0x7D] ^ dword_18CF2CE80[((v315 & 0x4400164 ^ 0x100164)
                                                               + (v315 ^ 0x7EE90209)
                                                               - ((v315 ^ 0x7EE90209) & 0x803164)) ^ 0xD4508110] ^ BYTE1(v285) ^ v312 ^ ((v279 >> 8) - ((2 * (v279 >> 8)) & 0x3DE54BE) - 2115032481) ^ (((32 * v312) ^ 0xD0C62000) - ((2 * ((32 * v312) ^ 0xD0C62000)) & 0x69FF1200) + 889162013);
  v319 = dword_18CF4F830[((HIWORD(v308) & 1 | 0x200034) + (HIWORD(v308) & 0xFE ^ 0x3016C80F) + 971) ^ 0x3036CCD3];
  HIDWORD(v279) = v319 ^ 6;
  LODWORD(v279) = v319 ^ 0x4D943000;
  v320 = ((BYTE1(v314) ^ 0x47 | 0x28FDB5AD) - (BYTE1(v314) ^ 0x47 | 0xD7024A52) - 687715758) ^ 0x2E6F159D;
  v321 = HIBYTE(v300) ^ dword_18CF272B0[HIBYTE(v300) ^ 0x47] ^ dword_18CF4DBF0[(((2 * v320) & 0x26920E60)
                                                                              - v320
                                                                              + 1823930575) ^ 0x6A245880] ^ 0xF8D04879 ^ ((v279 >> 10) - ((2 * (v279 >> 10)) & 0x590F3CA) - 2100790811);
  v322 = ((2 * (v321 & 0xA1A9E454 ^ 0x1092014)) | 0x4D565802) - (v321 & 0xA1A9E454 ^ 0x1092014) + 1498731519;
  v323 = ((v322 & 0x78DDA48 ^ 0x1858249 | v322 & 0xE87225B4) - 1) ^ 0x7876E0C | (((2 * (v321 & 0x5E561BAB ^ 0xAC583986)) | 0x8EE4D128)
                                                                               - (v321 & 0x5E561BAB ^ 0xAC583986)
                                                                               + 948803436) ^ 0x6F7A5890;
  v324 = dword_18CF4B8E0[v318 ^ 0xE3];
  HIDWORD(v279) = v324 ^ 0xBE34;
  LODWORD(v279) = v324 ^ 0x72AC0000;
  v325 = (v279 >> 18) - ((2 * (v279 >> 18)) & 0x3914C0F0) - 1668652936;
  v326 = ((2 * ((v325 >> 2) & 0x21D899CA ^ 0x20909842)) & 0x40A02010)
       - ((v325 >> 2) & 0x21D899CA ^ 0x20909842)
       + 1602857430;
  v327 = v325 ^ BYTE1(v314) ^ ((v326 & 0x6D09262A ^ 0x6806262D | v326 & 0x92F0D9D0) - 1) ^ (v323
                                                                                          - ((2 * v323) & 0x733CB426)
                                                                                          + 966679059);
  v328 = HIBYTE(v309) ^ 0x9FD6542B;
  v329 = dword_18CF272B0[HIBYTE(v309) ^ 0x8A] ^ 0x5602D4BC;
  v330 = (v328 & v329) - ((2 * (v328 & v329)) & 0x1A042950);
  v331 = ((v328 + v329) ^ 0xFE1EDD75)
       + ((2 * (v328 + v329)) & 0xFC3DBAEA)
       + ((2 * v330 - 1710986416) ^ 0x1B05C941)
       + ((2 * (2 * v330 - 1710986416)) & 0xFDFCBBDC ^ 0xCBF76D7F);
  v332 = v331 + 1 - 2 * ((v331 + 14647419) & 0x2480641F ^ (v331 + 1) & 1) - 1520442216;
  v333 = dword_18CF4F830[BYTE2(v314) ^ 0xB2];
  HIDWORD(v279) = v333 ^ 6;
  LODWORD(v279) = v333 ^ 0x4D943000;
  v334 = (v279 >> 10) - ((2 * (v279 >> 10)) & 0xD748F04) + 112871298;
  v335 = ((v300 ^ 0xDE | 0x70D5945) - (v300 ^ 0xDE | 0xF8F2A6BA) - 118315334) ^ 0xB7D69C4;
  v336 = dword_18CF4B8E0[((v335 | 0x41BA7EFC) - (v335 | 0xBE458103) - 1102741245) ^ 0x4DCA4E61];
  HIDWORD(v279) = v336 ^ 0xBE34;
  LODWORD(v279) = v336 ^ 0x72AC0000;
  v337 = (v279 >> 18) - ((2 * (v279 >> 18)) & 0x6777225E) + 867930415;
  v338 = (((2 * ((v337 >> 2) & 0x21D899CA ^ 0x20C810C2)) & 0x40B00394)
        - ((v337 >> 2) & 0x21D899CA ^ 0x20C810C2)
        - 1685791199) ^ 0x19824E0D;
  v339 = dword_18CF4F830[BYTE2(v318) ^ 0x1B];
  v340 = v334 ^ dword_18CF4DBF0[((BYTE1(v318) ^ 0xF1) - 451744019 - ((v318 >> 7) & 8) + 1815) ^ 0xE512F6F3] ^ (((2 * (BYTE1(v318) ^ 0xFE)) | 0x4108C71E) - (BYTE1(v318) ^ 0xFE) + 1601936497) ^ v337 ^ v332 ^ ((v338 | 0x49B3312A) - (v338 | 0xB64CCED5) - 1236480299);
  HIDWORD(v279) = v339 ^ 6;
  LODWORD(v279) = v339 ^ 0x4D943000;
  v341 = (((2 * (BYTE1(v300) ^ 0xC7)) & 0xB6) - (BYTE1(v300) ^ 0xC7) + 1460073380) ^ 0x7706F1E4;
  v342 = BYTE1(v300) ^ 0x50;
  LOBYTE(v337) = (v340 & 0x12 ^ 6 | 0x6E) - (v340 & 0x12 ^ 6 | 0x91) - 111;
  v343 = dword_18CF4B8E0[v308 ^ 5];
  v344 = ((((v343 ^ 0x72ACBE34u) >> (v337 ^ 0x78))
         - ((2 * ((v343 ^ 0x72ACBE34u) >> (v337 ^ 0x78))) & 0x7E94EFE)
         + 66365311) ^ 0x3F4A77F) >> (v337 ^ 0x6A);
  v345 = (v344 - ((2 * v344) & 0x368D6374) - 1689865798) ^ 0x9B46B1BA | (((v343 << 14) ^ 0x2F8D0000)
                                                                       - ((2 * ((v343 << 14) ^ 0x2F8D0000)) & 0x64910000)
                                                                       - 1303869637) ^ 0xB248873B;
  v346 = (HIWORD(v300) & 0x74 ^ 0x73C3DB65) + (HIWORD(v300) & 0x8B) - 1;
  v347 = dword_18CF4F830[((v346 & 0x2A1 ^ 0x802CD080) + (v346 & 0x5E ^ 0x8800055) - 1) ^ 0x88ACD252];
  v348 = v345 - ((2 * v345) & 0xEF62D6A2) - 139367599;
  v349 = ((v348 >> 2) & 0x21D899CA ^ 0x881148) - ((2 * ((v348 >> 2) & 0x21D899CA ^ 0x881148)) & 0x40B01290) - 1502073000;
  v350 = ((HIBYTE(v314) ^ 0x80000089) - 1590621635 + (~(2 * (HIBYTE(v314) ^ 0x80000089)) | 0xFFFFFF87)) ^ dword_18CF272B0[HIBYTE(v314) ^ 0xAC] ^ dword_18CF4DBF0[v342] ^ (v341 - ((2 * v341) & 0x40002E3C) + 1735620382) ^ ((v279 >> 10) - 617202638 - ((2 * (v279 >> 10)) & 0xB66C90D6) + 3129) ^ v348 ^ ((v349 & 0xD2F7CF40 ^ 0x50C38801 | v349 & 0x2D0830BA) - 1);
  v351 = (BYTE1(v309) ^ 0x44) - ((2 * (BYTE1(v309) ^ 0x44)) & 0x5E) - 1268961489;
  v352 = BYTE1(v309) ^ 0x165D86EC;
  v353 = dword_18CF4DBF0[(((((((v309 >> 8) & 0x4C) + v352) | 0x49205000) - (v352 & 0x1650824C)) & 0x539F ^ 0x1490231B)
                        + ((((((v309 >> 8) & 0x4C) + v352) | 0x49205000) - (v352 & 0x1650824C)) ^ 0xE929D8A4)
                        - (((((((v309 >> 8) & 0x4C) + v352) | 0x49205000) - (v352 & 0x1650824C)) ^ 0xE929D8A4) & 0x4039F)) ^ 0xB490FFC6];
  v354 = HIBYTE(v318) ^ (v347 >> 10) ^ dword_18CF272B0[HIBYTE(v318) ^ 0x11] ^ (((v347 << 22) ^ 0x1800000)
                                                                             - ((2 * ((v347 << 22) ^ 0x1800000)) & 0xC1000000)
                                                                             + 1621307158);
  v355 = (v353 ^ 0x163C5814) + (v353 ^ 0x40A76DFD ^ v354) + 1;
  v356 = (v354 ^ ((v354 ^ 0x569B35E9) - ((2 * (v354 ^ 0x569B35E9) + 2) & 0x3A627D3E) - 1657717088) ^ (v355 - ((2 * v355) & 0x559581CE) + 717930727) ^ 0x1E9F346E)
       + (v353 ^ 0x163C5814);
  v357 = v356 - ((2 * v356) & 0xFDF20A4C) + 2130248998;
  v358 = dword_18CF4B8E0[v314 ^ 0x2C];
  v359 = (v358 << 8) ^ 0xACBE3400;
  v360 = (v359 - ((2 * v359) & 0x3D03FE00) - 1635647672) & 0xFC000000 ^ 0x960120B9;
  v361 = (v359 - ((2 * v359) & 0x1F69C00) + 50023983) & 0x3FFFF00 ^ 0x3F85200;
  v362 = (((2 * v360) & 0x14000110) - v360 + 1947728241) ^ 0x7E16D9C8 | HIBYTE(v358) ^ 0x72;
  v363 = (v362 - ((2 * v362) & 0xB8000DD0) + 1589524200) ^ 0x5EBE36E8 | ((v361 | 0x625A4F3B)
                                                                       - (v361 | 0x9DA5B0C4)
                                                                       - 1650085692) ^ 0x6359533B;
  v364 = v363 - ((2 * v363) & 0x1C11136C) - 1912043082;
  HIDWORD(v279) = v364 ^ 0x37B27AC;
  LODWORD(v279) = v364 ^ 0x5C000000;
  v365 = (v279 >> 26) - ((2 * (v279 >> 26)) & 0x12131B38) + 151621020;
  v366 = v357 ^ ((v351 & 0x10403996 ^ 0xA021090) + (v351 ^ 0x957C2D2F) - ((v351 ^ 0x957C2D2F) & 0x20213996)) ^ v365 ^ (((((v365 >> 2) & 0x21D899CA ^ 0xAE7CF71D) - 1) & 0x100000 | (((v365 >> 2) & 0x21D899CA ^ 0xAE7CF71D) - 1) & 0x21C899CA ^ 0x4AE9C87F) + 511);
  v367 = STACK[0xB28];
  v368 = (_BYTE *)STACK[0xB28];
  *(_BYTE *)(v367 + 10) = byte_18CF38630[((BYTE1(v350) ^ 0x902A1FE | 0x216E8663)
                                        - (BYTE1(v350) ^ 0x902A1FE | 0xDE91799C)
                                        - 560891492) ^ 0x286C2775] ^ 0x15;
  v369 = ((2 * (BYTE1(v366) ^ 0x4A)) & 0xFFFFFF07) - (BYTE1(v366) ^ 0x4A) + 2004443772;
  *(_BYTE *)(v367 + 14) = byte_18CF38630[((v369 & 0x4168037A ^ 0x80028502)
                                        + (v369 ^ 0x5F6962F8)
                                        - ((v369 ^ 0x5F6962F8) & 0x2010037A)) ^ 0xC96A87F0] ^ 0x86;
  v370 = (((2 * (BYTE2(v327) ^ 0xB3)) & 0x1F0) - (BYTE2(v327) ^ 0xB3) - 1461751033) ^ 0xA4575237;
  *(_BYTE *)(v367 + 1) = byte_18CF36CF0[(v370 - ((2 * v370) & 0x800002C) - 2028503018) ^ 0x8B9FA14ALL] ^ 0x86;
  *(_BYTE *)(v367 + 13) = byte_18CF36CF0[(((2 * (BYTE2(v366) ^ 0x621AA)) | 0xB05A0E98)
                                        - (BYTE2(v366) ^ 0x621AA)
                                        - 1479345996) ^ 0x582B2629] ^ 0x86;
  LOBYTE(v357) = ((v350 ^ 0x38 | 0x98) - (v350 ^ 0x38 | 0x67) + 103) ^ 0xDA;
  LOBYTE(v370) = byte_18CF2E1B0[((v350 & 6 | 0xA0020000 | ((v350 & 0x2F ^ 0xF8) - (v350 & 0xD0)) & 0xFFFFFFF9 ^ 0x48C199E9)
                               + 401408) ^ 0xE8C9B989];
  LOBYTE(v357) = ((2 * v357) & 0x74) - v357 + 69;
  LOBYTE(v367) = ((v357 ^ 0x61) & (v370 ^ 0x1A)) - ((2 * ((v357 ^ 0x61) & (v370 ^ 0x1A))) & 0x1C);
  LOBYTE(v370) = (v370 ^ v357 ^ 0x7B) + ((2 * v367 + 28) ^ 0x43) + ((2 * (2 * v367 + 28)) & 0xBF ^ 0x38) - 95;
  v368[11] = v370 - ((2 * v370) & 0x4C) + 38;
  LOBYTE(v370) = byte_18CF4D5D0[HIBYTE(v327) ^ 0xCELL];
  *v368 = (v370 - ((2 * v370 + 28) & 0x3E) - 19) ^ 0x1A;
  v371 = ((BYTE2(v340) ^ 0x9422C2) + (HIWORD(v340) & 0xE4 ^ 0xB943C124) - ((BYTE2(v340) ^ 0x9422C2) & 0x8022E4)) ^ 0x46A83EFE;
  v372 = (((2 * (BYTE2(v340) ^ 0x79)) | 0x354FFE78) - (BYTE2(v340) ^ 0x79) + 1163395268) & 0x3FFFFFFF;
  v373 = v372 ^ (v371 - ((2 * v371 + 76) & 0xCC8D2EA2) + 1715902327) ^ 0x8518FEE ^ ((v372 ^ 0xC55800B8)
                                                                                  - ((2 * (v372 ^ 0xC55800B8) + 2) & 0xA961CFF0)
                                                                                  + 1420879865);
  v368[5] = byte_18CF36CF0[(v373 - 1931922883 + (~(2 * v373 + 74) | 0xE64D9AFD) + 106) ^ 0x8CD9323D] ^ 0x3D;
  v368[2] = byte_18CF38630[(((v327 >> 8) & 0xCF ^ 0x1C6) + ((v327 >> 8) & 0x30 ^ 0x11) - 1) ^ 0x11ALL] ^ 0xDF;
  v368[9] = byte_18CF36CF0[(((2 * (BYTE2(v350) ^ 0xD6)) | 0x983F51D2) - (BYTE2(v350) ^ 0xD6) - 1277143273) ^ 0x4C1FA85F] ^ 0x20;
  LOBYTE(v373) = byte_18CF4D5D0[HIBYTE(v366) ^ 0x6DLL];
  v350 >>= 24;
  v368[12] = (v373 - ((2 * v373 - 100) & 0x96) + 25) ^ 0xA2;
  v374 = (v350 ^ 0xFFFFFF1D) + 1;
  v350 ^= 0x51u;
  v375 = v350 + (v374 ^ 0x2F6FBFEE) + ((2 * v374) & 0x5EDF7FDC) - 795852782;
  v376 = ((v375 - ((2 * v375) & 0x2528C1E6) - 1835769613) ^ 0x6D6B9F0D) + v350;
  LOBYTE(v376) = byte_18CF4D5D0[(v376 - ((2 * v376) & 0x443A76A4) + 572341074) ^ 0x221D3BA1];
  v368[8] = (v376 - ((2 * v376 - 100) & 0x90) + 22) ^ 0xEE;
  v377 = (v340 ^ 0x8A) + (v340 & 0x93 ^ 0x35A4BF11) - ((v340 ^ 0x8A) & 0x93);
  LOBYTE(v377) = (byte_18CF2E1B0[((v377 & 0x31204709 ^ 0x88184501)
                                + (v377 ^ 0x31223A0A)
                                - ((v377 ^ 0x31223A0A) & 0x4004709)) ^ 0xB9BEC23ELL] ^ 0x1A)
               + (v340 ^ 0xE2);
  v368[7] = (v377 - ((2 * v377) & 0x9A) - 51) ^ 0x6F;
  v368[6] = byte_18CF38630[(((2 * (BYTE1(v340) ^ 0x320C11B2)) & 0x102306) - (BYTE1(v340) ^ 0x320C11B2u) - 149658500) ^ 0xC5187568] ^ 0x2F;
  LOBYTE(v377) = (byte_18CF2E1B0[((v327 ^ 0x26C480B8)
                                + (v327 & 0xB5 ^ 0x99105B05)
                                - ((v327 ^ 0x26C480B8) & 0x480B5)) ^ 0xBFD05B89] ^ 0x1A)
               + (v327 ^ 0x42);
  v368[3] = (v377 - ((2 * v377) & 0x56) + 43) ^ 0xE1;
  v378 = (v366 & 0xC3 ^ 0x56C7DF81) + (v366 & 0x3C ^ 0x31) - 1;
  LOBYTE(v378) = (v366 ^ 0xB7)
               + (byte_18CF2E1B0[((v378 & 0x2417674 ^ 0x200034)
                                + (v378 ^ 0xC2CBFFC3)
                                - ((v378 ^ 0xC2CBFFC3) & 0x10043674)) ^ 0x86695677] ^ 0x1A);
  v368[15] = (v378 - ((2 * v378) & 0x48) - 92) ^ 0xD7;
  LOBYTE(v378) = byte_18CF4D5D0[HIBYTE(v340) ^ 0xF5];
  v368[4] = (v378 - ((2 * v378 - 100) & 0xD0) - 74) ^ 0xED;
  v379 = STACK[0x680] - 114;
  v380 = STACK[0x688] + 637049731;
  v381 = v379 ^ 0xFFFFFFFFDA076559;
  v382 = 1755343967
       * (((v380 + v381) ^ *(_DWORD *)(qword_1EE0605B8 + (int)(dword_1EE0607C0 & 0xC7090E2C))) & 0x7FFFFFFF);
  *(_BYTE *)(v380 + v381) ^= byte_18CF50830[((_BYTE)v381 - 125) & 0xF | (16
                                                                       * ((1755343967 * (v382 ^ HIWORD(v382))) >> 24))] ^ (95 * (v382 ^ BYTE2(v382)));
  return ((uint64_t (*)(void))(qword_1E2538EC0[v379] - 12))();
}

void sub_18CAF8DB0()
{
  JUMPOUT(0x18CAF8D3CLL);
}

void sub_18CAF8DB8()
{
  JUMPOUT(0x18CAF8DECLL);
}

uint64_t sub_18CAF8E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;

  v5 = STACK[0x96C];
  STACK[0x8A0] -= 640;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * ((v3 + 83306269) ^ 0x4F72CFC ^ (1193 * (((((v5 - (v3 + 83306269)) | (v3 + 83306269 - v5)) >> (((v3 + 63) ^ 0xA) + ((v3 + 60) | 0x10))) & 1) == 0)))))(a1, a2, a3, 4294924393);
}

void sub_18CAF8EE8()
{
  _DWORD *v0;
  uint64_t v1;

  v0 = (_DWORD *)STACK[0x830];
  STACK[0x6A8] = STACK[0x830] + 40;
  v0[26] = 605314902;
  v0[27] = 1644515966;
  v0[28] = -350341328;
  v0[29] = 1670823864;
  v0[30] = 350341327;
  v0[31] = -1670823865;
  v0[33] = 1279171884;
  v0[34] = -366034006;
  v1 = (LODWORD(STACK[0x88C]) - 1947712291);
  LODWORD(STACK[0x86C]) = v1;
  STACK[0x928] = (v1 | ((unint64_t)(v1 < 0x5C2E07) << 32)) + 0x33EC7F25B4F85B6BLL;
  JUMPOUT(0x18CAF8FBCLL);
}

uint64_t sub_18CAF90D4@<X0>(int a1@<W2>, int a2@<W7>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  int v10;
  char v11;
  _BOOL4 v12;

  v9 = a2 - 974;
  v10 = a1 + 1;
  v11 = *(_BYTE *)(STACK[0x9A0] + (a1 - 603198772));
  *(_BYTE *)(v3 + (a3 - 518144652)) = v11 - ((2 * v11) & 0x62) - 79;
  v12 = v10 + v4 < v6;
  if (v6 < v7 != v10 + v4 < v5)
    v12 = v6 < v7;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * ((1619 * !v12) ^ v9)) - 8))(3776822644);
}

void sub_18CAF9170()
{
  JUMPOUT(0x18CAF910CLL);
}

uint64_t sub_18CAF9180(uint64_t a1, int a2)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;

  v8 = a2 + v5;
  v9 = (*(_DWORD *)(v2 + 68) ^ v3) + v8 + v3 - (v4 & (2 * ((*(_DWORD *)(v2 + 68) ^ v3) + v8)));
  *(_DWORD *)(v2 + 68) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((v9 ^ v3) < v8) * (v6 - 424)) ^ v6)) - 12))();
}

uint64_t sub_18CAF91C4()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 64) = *(_DWORD *)(v0 + 64) + ((v1 + 748) | 0x209) - 1740;
  return ((uint64_t (*)(void))STACK[0x918])();
}

uint64_t sub_18CAF91EC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  int v8;

  v2 = (v0 - 1734);
  v3 = STACK[0xA70];
  v4 = STACK[0x6A8];
  STACK[0x780] = *(_QWORD *)(v1 + 8 * (v0 - 1680)) + (v2 ^ 0xFFFFFFFFFFFFFFFBLL);
  v5 = (v0 + 1907619550) & 0x8E4C07FD;
  STACK[0x758] = v4;
  v6 = STACK[0x8A0];
  v7 = (char *)&STACK[0xBB0] + STACK[0x8A0];
  STACK[0x6C0] = (unint64_t)v7;
  STACK[0x8A0] = v6 + (v5 ^ 0x589);
  STACK[0x7D0] = v3;
  STACK[0xA38] = *(_QWORD *)(v1 + 8 * (int)v2);
  STACK[0x720] = v4;
  STACK[0x920] = (unint64_t)v7;
  v8 = ((2 * *(_DWORD *)(v4 + 68)) & 0x62 ^ 0x60) + (*(_DWORD *)(v4 + 68) & ((v5 - 766) ^ 0x294) ^ 0xF6B7EFCF);
  *(_BYTE *)(v4 + (v8 + 155717647)) = 49;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((23
                                               * (v8 + (((_DWORD)v5 + 1982751316) & 0x89D19ECF ^ 0x948091A) > 0xFFFFFFC7)) ^ v5))
                            - 4))();
}

uint64_t sub_18CAF947C()
{
  unsigned int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  _BOOL4 v5;
  int v9;

  v2 = STACK[0x718];
  v3 = STACK[0x718] + 16;
  v5 = STACK[0x718] < (unint64_t)&unk_18CF268E0 && v3 > (unint64_t)&unk_18CF268D0;
  if (v2 < (unint64_t)&unk_18CF268B0 && v3 > (unint64_t)byte_18CF268A0)
    v5 = 1;
  if (v2 < (unint64_t)&unk_18CF28E40 && v3 > (unint64_t)byte_18CF28E30)
    v5 = 1;
  v9 = v2 < (unint64_t)&unk_18CF2C150 && v3 > (unint64_t)byte_18CF2C140 || v5;
  return (*(uint64_t (**)(void))(v1 + 8 * ((115 * ((((v0 - 238) ^ v0 ^ v9) & 1) == 0)) ^ v0)))();
}

uint64_t sub_18CAF951C@<X0>(int8x16_t *a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  unsigned int v6;

  v3 = (v1 ^ 0x11E) - 1074;
  *a1 = veorq_s8(*a1, (int8x16_t)xmmword_18CF26830);
  v4 = (v3 + 712) | 0x120;
  v5 = STACK[0x940];
  *(_QWORD *)(v5 + 64) = 0x6205527E24145F56;
  *(_QWORD *)(v5 + 72) = 0x6396BFB8EB1E3730;
  *(_QWORD *)(v5 + 80) = 0x9C69404714E1C8CFLL;
  *(_QWORD *)(v5 + 92) = 0xEA2EC3AA4C3E9D2CLL;
  STACK[0x9A8] = *(_QWORD *)(v2 + 8 * v3);
  STACK[0xAA0] = v5;
  LODWORD(STACK[0x894]) = -289289346;
  STACK[0x710] = (unint64_t)&unk_18CF2DC84;
  v6 = ((2 * ((v4 - 1811858719) & 0x6BFEC7FD ^ 0x69A) - 52) & (2 * *(_DWORD *)(v5 + 68)) ^ 0x78)
     + (*(_DWORD *)(v5 + 68) & 0x3F ^ 0xD936EBC3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1310
                                          * (((v6 + 650712083) ^ 0xBBDF6D6A)
                                           + 1142985302
                                           + ((2 * (v6 + 650712083)) & 0x77BEDAD4) < 0xFFFFFFC0)) ^ v4))
                            - 8))();
}

uint64_t sub_18CAF95B8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(a1 + v4 - 2095062103) ^= *(_BYTE *)(v3 + v4 - 2095062103) ^ 0x66;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 + 1 != v2 + 16) * (v1 ^ 0x526)) ^ v1)))();
}

void sub_18CAF9600()
{
  JUMPOUT(0x18CAF953CLL);
}

uint64_t sub_18CAF9694()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 8 * (v0 ^ 0x756)) - 4))(0x5048710326010761, (v0 ^ 0x756u) - 345);
}

void sub_18CAF976C()
{
  JUMPOUT(0x18CAF9718);
}

uint64_t sub_18CAF9778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  char v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((((((v3 - 278) | 0x50C) - 166) ^ (v3 + 717))
                                                                         * (v4 == 14)) ^ v3)))(a1, a2, a3, 4294924393);
}

uint64_t sub_18CAF97B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  int v8;
  uint64_t v9;

  STACK[0x8A0] += 16;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((1980 * (((a8 + 8) & 0xF) == (((((v8 - 726) | 0x202) + 1122504512) ^ 0x42E81253) & (2 * (a8 + 8))))) ^ v8)) - 8))(a1, a2, a3, a4, a5, a6, a7, 3172462002);
}

uint64_t sub_18CAF983C()
{
  _BYTE *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;

  STACK[0x688] = (unint64_t)&STACK[0xBB0] + v2;
  *(_OWORD *)((char *)&STACK[0xBB0] + v2) = xmmword_18CF26820;
  v4 = 1755343967
     * ((v0 ^ *(_DWORD *)(qword_1EE0605B8 + (dword_1EE0607C0 & (v1 - 955708643)))) & 0x7FFFFFFF);
  *((_BYTE *)&STACK[0x1600] + STACK[0xAD0]) = byte_18CF50830[16 * (((v4 ^ HIWORD(v4)) * (v1 + 1755343184)) >> 24)] ^ *v0 ^ (95 * (v4 ^ BYTE2(v4)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v1 - 9) | 9)) - 4))();
}

void sub_18CAF9918()
{
  JUMPOUT(0x18CAF98B0);
}

uint64_t sub_18CAF9924()
{
  unint64_t v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;

  STACK[0xAD0] = v1 + 32;
  STACK[0xB60] = v0;
  STACK[0xB68] = v3;
  STACK[0xB80] = v0;
  STACK[0xB70] = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v2 ^ (2 * (STACK[0x688] != v0)))) - 4))();
}

uint64_t sub_18CAF99AC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v1 - 86) ^ 0x23A) * (v0 != 0)) ^ v1)) - 12))();
}

uint64_t sub_18CAF99D4()
{
  char *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  char *v4;
  char v5;

  v4 = (char *)&STACK[0x1600] + v1;
  *v4 = *v0;
  v4[1] = v0[1];
  v4[2] = v0[2];
  v4[3] = v0[3];
  v4[4] = v0[4];
  v4[5] = v0[5];
  v4[6] = v0[6];
  v4[7] = v0[7];
  v4[8] = v0[8];
  v4[9] = v0[9];
  v4[10] = v0[10];
  v4[11] = v0[11];
  v4[12] = v0[12];
  v4[13] = v0[13];
  v4[14] = v0[14];
  v5 = v0[15];
  STACK[0x688] = (unint64_t)v4;
  v4[15] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v2 - 516) ^ 0x23A) * (v0 != 0)) ^ (v2 - 430))) - 12))();
}

uint64_t sub_18CAF9A90()
{
  int v0;
  int v1;
  uint64_t v2;
  BOOL v4;

  v4 = (v1 & 0xF ^ 0x20D40E) - ((2 * (v1 & 0xF ^ 0x20D40E)) & 0x41A812) != -2151420
    || v1 == ((v0 - 149240930) & 0x8E53CEF) + 537001315;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((156 * (((v0 - 86) ^ v4) & 1)) ^ v0)) - 12))();
}

uint64_t sub_18CAF9B10()
{
  int v0;
  int v1;
  unsigned int v2;
  unint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  BOOL v7;
  int v8;
  uint64_t v9;

  LODWORD(STACK[0x670]) = v0;
  LODWORD(STACK[0x3D4]) = v1;
  v3 = 193 * (v2 ^ 0x4C5);
  STACK[0xB78] = 0;
  v4 = malloc(0x408uLL);
  STACK[0xB88] = (unint64_t)v4;
  v5 = malloc(0x408uLL);
  STACK[0xB78] = (unint64_t)v5;
  if (v4)
    v7 = v5 == 0;
  else
    v7 = 1;
  v8 = !v7;
  v9 = qword_1E2538EC0[(v8 * ((v2 ^ 0x4C5) + 631)) ^ v2];
  STACK[0x678] = v3;
  return ((uint64_t (*)(void *, uint64_t))(v9 - v3 + 378))(v5, v6);
}

#error "18CAF9B80: too big function (funcsize=0)"

void sub_18CB0A0DC()
{
  JUMPOUT(0x18CB09A98);
}

uint64_t sub_18CB0A0E8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((*(unsigned int *)(STACK[0x698] + 112) ^ 0x76F586F3A50F3C40)
                                           - 0x76F586F30358CC33
                                           + ((2 * (*(_DWORD *)(STACK[0x698] + 112) ^ 0x5910D29Eu)) & 0x1F83FDDBCLL) == 4173800107)
                                          * (5 * (v0 ^ 0x6C4) + 66)) ^ (v0 - 1169)))
                            - 4))();
}

uint64_t sub_18CB0A1C0()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1541 * (dword_1EE0569EC == 1197784504)) ^ ((v0 + 789) | 0x80)))
                            - (((((v0 + 789) | 0x80) + 963119996) & 0xC697F6F9)
                             + (unint64_t)(((v0 + 789) | 0x80u) - 830))
                            + 1720))();
}

uint64_t sub_18CB0A3C4()
{
  int v0;
  unint64_t v1;
  int v2;

  STACK[0x688] = v1;
  v2 = MEMORY[0x18D7894BC](0, &STACK[0x974]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(29
                                             * (((v2 << (((v0 + 55) & 0xDD) + 104)) & 0xAE776DFE) + (v2 ^ 0xD73BB6FF) != -683952385)) ^ v0]
                            - 8))();
}

uint64_t sub_18CB0A448()
{
  int v0;
  _BOOL4 v1;

  v1 = IOServiceMatching((const char *)&STACK[0x15E1]) != 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1592 * v1) ^ v0] - 8))();
}

uint64_t sub_18CB0A494(const __CFDictionary *a1)
{
  int v1;
  int v2;
  kern_return_t MatchingServices;

  LODWORD(STACK[0x680]) = v1;
  MatchingServices = IOServiceGetMatchingServices(STACK[0x974], a1, (io_iterator_t *)&STACK[0x734]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(787
                                             * (((MatchingServices << ((8 * v2) ^ 0xC9)) & 0x7EEFFDF6)
                                              + ((82 * (v2 ^ 0x89) + 1064827355) ^ MatchingServices) == 1064828667)) ^ v2]
                            - 8))();
}

uint64_t sub_18CB0A528()
{
  int v0;
  uint64_t v1;
  io_object_t v2;

  v2 = IOIteratorNext(STACK[0x734]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((v2 << ((v0 - 67) & 0xEF ^ 0xCC)) & 0xF7F9F1DE) + (v2 ^ 0xFBFCF8EF) == -67307281)
                                          * ((v0 - 1044) ^ 0x114)) ^ v0))
                            - 8))();
}

uint64_t sub_18CB0A59C@<X0>(int a1@<W8>)
{
  int v1;
  kern_return_t v2;

  v2 = IOServiceOpen(a1 + v1 + 67307013, *MEMORY[0x1E0C83DA0], 0, (io_connect_t *)&STACK[0x704]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1909 * (((2 * v2) & 0x73FF67F6) + (v2 ^ 0xB9FFB3FB) == -1174424581)) ^ v1]
                            - 12))();
}

uint64_t sub_18CB0A610()
{
  char v0;
  io_object_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 + 2540) = (LODWORD(STACK[0x704]) ^ 0x776FFFFB)
                         - 806044227
                         + ((LODWORD(STACK[0x704]) << (((v0 - 64) | 1) + 52)) & 0xEEDFFFF6);
  IOObjectRelease(v1);
  return sub_18CAEA424();
}

uint64_t sub_18CB0A658()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)((char *)&STACK[0xBB0] + v2) = 0;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((123
                                     * ((v0 ^ 9 ^ ((unint64_t)&STACK[0xBB0]
                                                                  + v1
                                                                  - v3
                                                                  + 0x40AF9B25784C1051 < (v0 ^ 0x628uLL))) & 1)) ^ v0)))();
}

uint64_t sub_18CB0A720()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)(v4 + v0) = *(_OWORD *)(v3 + v0);
  return (*(uint64_t (**)(void))(v5 + 8 * (((v0 != 16) * (((v2 + v1) & 0x307E5FDF) + 595)) ^ v2)))();
}

uint64_t sub_18CB0A75C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v3 + v1) = *(_DWORD *)(v2 + v1);
  return (*(uint64_t (**)(void))(v4 + 8 * ((46 * (v1 + 4 != (((v0 - 389) | 0x240) ^ 0x2FELL))) ^ v0)))();
}

uint64_t sub_18CB0A798()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 + v6 - 0x1CC047BF395CE745) = *(_BYTE *)(v1 + v5 - 0xDD46EE5EB465E56);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 + 1 != v0 + 36) * (v2 + 520)) ^ v2)))();
}

uint64_t sub_18CB0A7F8()
{
  int v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  *(_DWORD *)(v1 + 68) = 36;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((58
                                          * ((v2 ^ 0xFBC77FFFF6ED05EDLL)
                                           + 0x4388000DB589A4ELL
                                           + ((((v0 - 2088416173) & 0x7C7AB3DF) + 0x15FFBABD9) & (2
                                                                                                  * (v2 ^ 0x5910D29E))) != 2337698241)) ^ v0))
                            - 4))();
}

uint64_t sub_18CB0A8C4()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = v2 < v1;
  *(_BYTE *)(v4 + ((v0 + 51) ^ 0xA7C5A374DDE343B0) + v6) = *(_BYTE *)(v5 + v8 - 0x31AD9354BCD330F2);
  if (v10 == v7 - 0x505E43F50E0879ABLL < v1)
    v10 = v7 - 0x505E43F50E0879ABLL < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((v10 * v3) ^ v0)) - 4))();
}

uint64_t sub_18CB0A954@<X0>(int a1@<W8>)
{
  int v1;
  _DWORD *v2;
  int v3;
  _BOOL4 v4;

  v2[34] = v1;
  STACK[0x860] = 140;
  v4 = IOConnectCallStructMethod(a1 - 1197784504, 0x23u, v2, 0x8CuLL, v2, &STACK[0x860]) == 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(v4 * (v3 + 642)) ^ v3] - 12))();
}

uint64_t sub_18CB0A9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((*(_DWORD *)(v6 + 68) == 36) * (((v7 - 1416493854) & 0x546DFEDD) - 1712)) ^ v7))
                                                                                                - (v7 ^ 0x2E0u)
                                                                                                + 481))(a1, a2, a3, a4, a5, a6, 4294925247);
}

uint64_t sub_18CB0A9FC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((25
                                          * (v2 - ((uint64_t)&STACK[0xBB0] + v1) - 0x40AF9B25784C1051 >= (unint64_t)(a1 ^ 0x19u) - 484)) ^ a1))
                            - 12))();
}

uint64_t sub_18CB0AA88()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v2 + v0) = *(_OWORD *)(v3 + v0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1135 * (v0 + 16 == ((v1 + 460) ^ 0x3E0))) ^ v1))
                            - 12))();
}

uint64_t sub_18CB0AAC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)(v8 + v7) = *(_DWORD *)(v9 + v7);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10 + 8 * ((2018 * (v7 + 4 != ((a7 + 781) ^ 0x6E9))) ^ a7))
                                                                                               - 4))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_18CB0AAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v9 + v11 - 0xF231AED482677C8) = *(_BYTE *)(v8 + v12 - 0x4E2C008362DF0AE2);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v13 + 8 * ((736 * (v10 + (a7 ^ 0x720u) - 1740 == v7 + 36)) ^ a7))
                                                                                               - 12))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_18CB0AB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((LODWORD(STACK[0x690]) - 1539) ^ (417 * (a7 == 0))))
                            - ((LODWORD(STACK[0x690]) - 1516) | 0x102u)
                            + 479))();
}

uint64_t sub_18CB0ABA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((2026
                                * (((a7 == 5 * (LODWORD(STACK[0x690]) ^ 0x61D) - 1040) ^ (LODWORD(STACK[0x690]) + 18)) & 1)) ^ (LODWORD(STACK[0x690]) - 723))))();
}

uint64_t sub_18CB0AC08()
{
  int v0;
  BOOL v1;

  v1 = malloc_type_malloc(0x20uLL, 0x71F90CFBuLL) == 0;
  return ((uint64_t (*)(void))qword_1E2538EC0[(((v1 ^ (v0 - 1)) & 1) * (v0 - 362)) | v0])();
}

uint64_t sub_18CB0AC50(_BYTE *a1)
{
  int v1;
  uint64_t v2;

  *a1 = STACK[0xBB0];
  a1[1] = STACK[0xBB1];
  a1[2] = STACK[0xBB2];
  a1[3] = STACK[0xBB3];
  a1[4] = STACK[0xBB4];
  a1[5] = STACK[0xBB5];
  a1[6] = STACK[0xBB6];
  a1[7] = STACK[0xBB7];
  a1[8] = STACK[0xBB8];
  a1[9] = STACK[0xBB9];
  a1[10] = STACK[0xBBA];
  a1[11] = STACK[0xBBB];
  a1[12] = STACK[0xBBC];
  a1[13] = STACK[0xBBD];
  a1[14] = STACK[0xBBE];
  a1[15] = STACK[0xBBF];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((1734
                                               * (((((v1 - 18) & 0x7F) - 1) ^ ((unint64_t)&a1[-STACK[0x7D8] + 0x40AF9B25784C107DLL] < 0x10)) & 1)) ^ (v1 + 2086557678) & 0x83A1A77F))
                            - 12))();
}

void sub_18CB0AD94(unint64_t a1)
{
  int8x16_t *v1;
  int8x16_t *v2;
  int v3;
  uint64_t v4;
  int8x16_t v5;
  int8x16_t v6;

  v5.i64[0] = 0xEAEAEAEAEAEAEAEALL;
  v5.i64[1] = 0xEAEAEAEAEAEAEAEALL;
  v6.i64[0] = 0xF5F5F5F5F5F5F5F5;
  v6.i64[1] = 0xF5F5F5F5F5F5F5F5;
  *v1 = vaddq_s8(vsubq_s8(*v2, vandq_s8(vaddq_s8(*v2, *v2), v5)), v6);
  STACK[0x770] = a1;
  LODWORD(STACK[0x8DC]) = -510232838;
  STACK[0x8A0] = v4 + ((224 * (v3 ^ 0x37A) + 260) | 0x142u) - 828 - 906;
  JUMPOUT(0x18CB0AEBCLL);
}

uint64_t sub_18CB0AF1C()
{
  return sub_18CA918F8();
}

uint64_t sub_18CB0AF3C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((743 * (((STACK[0xA68] == 0) ^ ((v0 ^ 0x2F) + 1)) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_18CB0AF74()
{
  int v0;
  void *v1;

  free(v1);
  return ((uint64_t (*)(void))(qword_1E2538EC0[((STACK[0x938] != 0) * (((((v0 + 1029) | 0x228) - 1705) | 0x6C8) ^ 0x6AC)) ^ ((v0 + 1029) | 0x228)]
                            - 8))();
}

uint64_t sub_18CB0AFD8(void *a1)
{
  int v1;
  int v2;

  free(a1);
  LODWORD(STACK[0xA24]) = v2;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1422 * (STACK[0x8B8] != 0)) ^ (v1 - 1307)] - 8))();
}

uint64_t sub_18CB0B014(void *a1)
{
  int v1;

  free(a1);
  LODWORD(STACK[0xAB4]) = 870479216;
  return ((uint64_t (*)(void))qword_1E2538EC0[(53 * (STACK[0x770] == 0)) ^ (v1 - 1338)])();
}

uint64_t sub_18CB0B050()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1971 * (STACK[0xA78] != 0)) ^ (v0 - 890))) - 8))();
}

uint64_t sub_18CB0B078()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1422 * (STACK[0x8B8] != 0)) ^ (((v0 - 1122) | 0x481) - 1307)))
                            - 8))();
}

uint64_t sub_18CB0B0B0()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * ((53 * (STACK[0x770] == 0)) ^ (v0 - 1338))))();
}

uint64_t sub_18CB0B0D4(void *a1)
{
  int v1;

  free(a1);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1971 * (STACK[0xA78] != 0)) ^ (v1 - 890)] - 8))();
}

uint64_t sub_18CB0B108(void *a1)
{
  int v1;
  int v2;
  int v3;

  free(a1);
  return ((uint64_t (*)(unint64_t))qword_1E2538EC0[((v3 != 0) * (((v2 + v1 - 369824392) | 2) ^ 0x141)) ^ (v1 - 1151)])(STACK[0x9D8]);
}

uint64_t sub_18CB0B15C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((182 * (((a1 == 0) ^ (a2 & v2) ^ 0x8B) & 1)) ^ a2 & v2)))();
}

uint64_t sub_18CB0B18C(void *a1)
{
  int v1;
  uint64_t v2;

  free(a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((14 * (STACK[0x7A0] == 0)) ^ (v1 - 794))) - 12))();
}

void sub_18CB0B1C0(uint64_t a1)
{
  int v1;
  _QWORD *v2;
  _DWORD *v3;

  v3 = *(_DWORD **)(STACK[0x658] + 48);
  *v2 = a1;
  *(_DWORD *)STACK[0x630] = (LOWORD(STACK[0x936]) | ((LOWORD(STACK[0x936]) < ((v1 + 641332880) & 0xEDD ^ 0x3C81u)) << 16))
                          - 14924;
  *(_QWORD *)STACK[0x620] = STACK[0x7A0];
  *v3 = (LOWORD(STACK[0x76E]) | ((LOWORD(STACK[0x76E]) < 0x79B7u) << 16)) - 31159;
  JUMPOUT(0x18CA918B4);
}

uint64_t sub_18CB0B23C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((14 * (STACK[0x7A0] == 0)) ^ (v0 - 794))) - 12))();
}

void sub_18CB0B264(void *a1)
{
  free(a1);
  JUMPOUT(0x18CA918B4);
}

uint64_t sub_18CB0B2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  int v6;
  int v7;
  unsigned int v8;
  BOOL v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  BOOL v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  unint64_t v42;

  v7 = LODWORD(STACK[0x3B4]) ^ LODWORD(STACK[0x3E4]) ^ LODWORD(STACK[0x248]) ^ 0x5A7A2689;
  v8 = LODWORD(STACK[0x5F0]) ^ LODWORD(STACK[0x3E4]) ^ LODWORD(STACK[0x248]) ^ 0x82164830;
  v9 = (STACK[0x550] & 1) == 0;
  if ((STACK[0x550] & 1) != 0)
    v10 = STACK[0x384];
  else
    v10 = STACK[0x350];
  v11 = STACK[0x3B0];
  if ((STACK[0x550] & 1) == 0)
    v11 = STACK[0x2E8];
  LODWORD(STACK[0x670]) = v11;
  if (v9)
    v12 = v7;
  else
    v12 = STACK[0x37C];
  if (v9)
    v13 = STACK[0x380];
  else
    v13 = v8;
  if (v9)
    v14 = v8;
  else
    v14 = v7;
  if (v9)
    v15 = STACK[0x340];
  else
    v15 = STACK[0x348];
  if (v9)
    v16 = STACK[0x388];
  else
    v16 = STACK[0x394];
  v17 = LODWORD(STACK[0x660]) == -768964959;
  v18 = STACK[0x590];
  if (LODWORD(STACK[0x660]) == -768964959)
    v18 = STACK[0x560];
  LODWORD(STACK[0x384]) = v18;
  v19 = STACK[0x424];
  if (v17)
    v19 = STACK[0x420];
  LODWORD(STACK[0x388]) = v19;
  v20 = STACK[0x540];
  if (v17)
    v20 = STACK[0x4D0];
  LODWORD(STACK[0x380]) = v20;
  v21 = STACK[0x458];
  if (!v17)
    v21 = STACK[0x450];
  LODWORD(STACK[0x394]) = v21;
  v22 = STACK[0x44C];
  if (!v17)
    v22 = STACK[0x440];
  LODWORD(STACK[0x4D0]) = v22;
  v23 = STACK[0x438];
  if (!v17)
    v23 = STACK[0x428];
  LODWORD(STACK[0x418]) = v23;
  v24 = STACK[0x510];
  LODWORD(STACK[0x438]) = v10;
  if (v17)
    v24 = v10;
  LODWORD(STACK[0x2CC]) = v24;
  LODWORD(STACK[0x424]) = v12;
  LODWORD(STACK[0x420]) = v13;
  if (v17)
    v25 = v13;
  else
    v25 = v12;
  LODWORD(STACK[0x560]) = v25;
  v26 = STACK[0x4F0];
  LODWORD(STACK[0x428]) = v14;
  if (!v17)
    v26 = v14;
  LODWORD(STACK[0x590]) = v26;
  v27 = STACK[0x640];
  LODWORD(STACK[0x350]) = v15;
  if (v17)
    v27 = v15;
  LODWORD(STACK[0x3B4]) = v27;
  v28 = STACK[0x500];
  LODWORD(STACK[0x37C]) = v16;
  if (!v17)
    v28 = v16;
  LODWORD(STACK[0x3B0]) = v28;
  if ((STACK[0x3E0] & 1) != 0)
    v29 = STACK[0x298];
  else
    v29 = STACK[0x2B0];
  if ((STACK[0x3E0] & 1) != 0)
    v30 = STACK[0x278];
  else
    v30 = STACK[0x284];
  if ((STACK[0x3E0] & 1) != 0)
    v31 = STACK[0x28C];
  else
    v31 = STACK[0x2C8];
  v32 = STACK[0x270];
  if ((STACK[0x3E0] & 1) != 0)
    v32 = STACK[0x250];
  LODWORD(STACK[0x5F0]) = v32;
  v33 = LODWORD(STACK[0x668]) == -961433487;
  v34 = STACK[0x3E8];
  if (LODWORD(STACK[0x668]) != -961433487)
    v34 = STACK[0x3DC];
  LODWORD(STACK[0x270]) = v34;
  v35 = STACK[0x24C];
  if (!v33)
    v35 = STACK[0x230];
  LODWORD(STACK[0x440]) = v35;
  v36 = STACK[0x22C];
  if (!v33)
    v36 = STACK[0x228];
  LODWORD(STACK[0x458]) = v36;
  v37 = v6 ^ 0x32;
  v38 = STACK[0x3D8];
  if (v33)
    v38 = STACK[0x3C8];
  LODWORD(STACK[0x44C]) = v38;
  v39 = STACK[0x3C4];
  if (!v33)
    v39 = STACK[0x3C0];
  LODWORD(STACK[0x2B0]) = v39;
  STACK[0x678] = (v37 - 2014188314) & 0x780E10E7;
  LODWORD(STACK[0x540]) = LODWORD(STACK[0x5D0]) ^ 0x574CFFD3 ^ v37;
  v40 = STACK[0x3F8];
  LODWORD(STACK[0x3C4]) = v29;
  if (v33)
    v40 = v29;
  LODWORD(STACK[0x2C8]) = v40;
  LODWORD(STACK[0x3DC]) = v30;
  LODWORD(STACK[0x3D8]) = v31;
  if (v33)
    v41 = v30;
  else
    v41 = v31;
  LODWORD(STACK[0x450]) = v41;
  v42 = a6 - 1764038626 + ((unint64_t)(a6 < 0x692517E2) << 32);
  *(_QWORD *)(STACK[0xB70] + 8 * v42) = *(_QWORD *)(STACK[0xB80] + 8 * v42) ^ 0xC9C9C9C9C9C9C9C9;
  return ((uint64_t (*)(void))qword_1E2538EC0[(50 * (a6 - 1764038625 < STACK[0x680])) ^ v37])();
}

void sub_18CB0BB94()
{
  JUMPOUT(0x18CB0B5ACLL);
}

uint64_t sub_18CB0BBC0()
{
  int v0;
  uint64_t v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;

  if ((STACK[0x550] & 1) != 0)
    v2 = STACK[0x3A4];
  else
    v2 = STACK[0x3A0];
  v3 = LODWORD(STACK[0x660]) == -768964959;
  v4 = STACK[0x468];
  if (LODWORD(STACK[0x660]) != -768964959)
    v4 = STACK[0x464];
  LODWORD(STACK[0x3E8]) = v4;
  v5 = STACK[0x424];
  if (!v3)
    v5 = STACK[0x420];
  LODWORD(STACK[0x550]) = v5;
  v6 = STACK[0x4E0];
  if (v3)
    v6 = STACK[0x4C0];
  LODWORD(STACK[0x4E0]) = v6;
  v7 = STACK[0x670];
  LODWORD(STACK[0x464]) = v2;
  if (!v3)
    v7 = v2;
  LODWORD(STACK[0x468]) = v7;
  v8 = STACK[0x4B0];
  if (!v3)
    v8 = STACK[0x4A0];
  LODWORD(STACK[0x4C0]) = v8;
  v9 = STACK[0x498];
  if (!v3)
    v9 = STACK[0x480];
  LODWORD(STACK[0x420]) = v9;
  v10 = STACK[0x478];
  if (!v3)
    v10 = STACK[0x470];
  LODWORD(STACK[0x424]) = v10;
  LODWORD(STACK[0x3A4]) = LODWORD(STACK[0x294]) - LODWORD(STACK[0x254]);
  if ((STACK[0x3E0] & 1) != 0)
    v11 = STACK[0x2C0];
  else
    v11 = STACK[0x2B4];
  v12 = LODWORD(STACK[0x668]) == -961433487;
  v13 = STACK[0x2AC];
  if (LODWORD(STACK[0x668]) == -961433487)
    v13 = STACK[0x2A8];
  LODWORD(STACK[0x2C0]) = v13;
  v14 = STACK[0x3EC];
  if (!v12)
    v14 = STACK[0x2E0];
  LODWORD(STACK[0x2AC]) = v14;
  v15 = v1
      + (((unint64_t)(v1 - 0x7773979C74BE25F5) >> 24) ^ 0x820001426B001800)
      - (((unint64_t)(v1 - 0x7773979C74BE25F5) >> 23) & 0x17B29FFCFFELL);
  v16 = v15
      + (((v15 + 0x68C67212041C20BLL) >> 14) ^ 0xFFFEFFBC3BBAE7FFLL)
      + (((v15 + 0x68C67212041C20BLL) >> 13) & 0x5FF787775CFFELL);
  v17 = v16
      + (((v16 + 0x68D6764E486DA0CLL) >> 7) ^ 0x40002110940240B1)
      - (((v16 + 0x68D6764E486DA0CLL) >> 6) & 0x3FFBDDED7FB7E9CLL)
      + 2;
  v18 = v17 - ((2 * v17 - 0x72E573575EF6CD4ELL) & 0xC326463D59876512) + 0x28206972FD484BE2;
  v19 = ((2 * ((v18 ^ 0x6193231EACC3B289) + 0x1E624C75B7D25465)) & 0xD363FFABFEBFCB72)
      + (((v18 ^ 0x6193231EACC3B289) + 0x1E624C75B7D25465) ^ 0xE9B1FFD5FF5FE5B9);
  v20 = (((v19 + 0x164E002A00A01A47) >> 28) ^ 0x6FFDB7EFFFFFF5EFLL)
      + v19
      + (((v19 + 0x164E002A00A01A47) >> 27) & 0x1FFFFFEBDELL);
  v21 = (((v20 - 0x59AFB7C5FF5FDBA8) >> 8) ^ 0xEEFBFEBEEFF97EFBLL)
      + v20
      + (((v20 - 0x59AFB7C5FF5FDBA8) >> 7) & 0x1F7FD7DDFF2FDF6);
  v22 = v21
      + (((v21 - 0x48ABB684EF595AA3) >> 2) ^ 0x832C04902C113C18)
      - (((v21 - 0x48ABB684EF595AA3) >> 1) & 0x79A7F6DFA7DD87CELL)
      + 1;
  v23 = v22 - ((2 * v22 + 0x85089D5C92AD288) & 0x1A5314A111C6DB02) - 0x3EAE30C49287293BLL;
  v24 = ((2 * ((v23 ^ 0x8D298A5088E36D81) + 0x79858CF42C6EB4C9)) & 0xEBFC7BFFFF7FB6F6)
      + (((v23 ^ 0x8D298A5088E36D81) + 0x79858CF42C6EB4C9) ^ 0xF5FE3DFFFFBFDB7BLL);
  v25 = (((v24 + 0xA01C20000402485) >> 27) ^ 0x7FBEADCEFFFBEBEFLL)
      + v24
      + (((v24 + 0xA01C20000402485) >> 26) & 0x1DFFF7D7DELL);
  v26 = v25
      + (((v25 - 0x75BCEBCEFFBBC76ALL) >> 14) ^ 0x845083A114012082)
      - (((v25 - 0x75BCEBCEFFBBC76ALL) >> 13) & 0x6F8BDD7FDBEFALL);
  v27 = v26
      + (((v26 + 0x5F2908FEC431814) >> 6) ^ 0x8890188C0060C008)
      - (((v26 + 0x5F2908FEC431814) >> 5) & 0x6DFCEE7FF3E7FEELL)
      + 2;
  v28 = v27 - ((2 * v27 - 0x53B0FF8283B4FECLL) & 0xDB364F9453E154E0) - 0x15026031EA2CFD86;
  v29 = ((2 * ((v28 ^ 0x6D9B27CA29F0AA70) + 0x285B60A07B22FE6FLL)) & 0xF9BEFFF975FFFE6CLL)
      + (((v28 ^ 0x6D9B27CA29F0AA70) + 0x285B60A07B22FE6FLL) ^ 0xFCDF7FFCBAFFFF36);
  v30 = v29
      + (((v29 + 0x3208003450000CALL) >> 27) ^ 0x880008A0DC842A11)
      - (((v29 + 0x3208003450000CALL) >> 26) & 0x3E46F7ABDCLL);
  v31 = v30
      + (((v30 + 0x7B207762687BD6B9) >> 11) ^ 0x1409404088A84A09)
      - (((v30 + 0x7B207762687BD6B9) >> 10) & 0x2D7F7EEEAF6BECLL);
  v32 = v31
      + (((v31 + 0x67173721DFD38CB0) >> 7) ^ 0xBE7DF7FE7BD9FF91)
      + (((v31 + 0x67173721DFD38CB0) >> 6) & 0xFBEFFCF7B3FF22)
      + 2;
  v33 = v32 - ((2 * v32 + 0x51327E46C7F31A3ALL) & 0x8CE8D0BCF2B0F222) + 0x6F0DA781DD52062ELL;
  v34 = v33 ^ v18;
  v35 = ((2 * ((v33 ^ 0xC674685E79587911) + 0x2CA9E7BAB642E976)) & 0x8DCDBCF9BE7FE3FELL)
      + (((v33 ^ 0xC674685E79587911) + 0x2CA9E7BAB642E976) ^ 0xC6E6DE7CDF3FF1FFLL);
  v36 = (((v35 + 0x3919218320C00E01) >> 27) ^ 0x761D2D3FFF7FB8DFLL)
      + v35
      + (((v35 + 0x3919218320C00E01) >> 26) & 0x3FFEFF71BELL);
  v37 = v36
      + (((v36 - 0x3D040BBCDEBFAADELL) >> 8) ^ 0x4019111722130500)
      - (((v36 - 0x3D040BBCDEBFAADELL) >> 7) & 0x1CDDDD1BBD9F5FELL);
  v38 = v37
      + (((v37 - 0x7D1D1CD400D2AFDELL) >> 6) ^ 0x7F7B9FFF8AEFFB8BLL)
      + (((v37 - 0x7D1D1CD400D2AFDELL) >> 5) & 0x6F73FFF15DFF716)
      + 1;
  v39 = v38 - ((2 * v38 + 0x6CE8658E87AA92CLL) & 0xE676C258174260D4) - 0x95D5BA780217B00;
  v40 = (v39 ^ 0xC9CE7A509B39F6AELL)
      + ((v39 >> 24) ^ 0xA8018A6DCE38D031)
      + ((v39 >> 23) & 0xB7FF7AFEAALL ^ 0xFFFFFF6C638F5FDDLL)
      + 0x57FE755BFFBD7F57;
  v41 = (((((2 * v40) & 0xF5EBD12E9BFDF8D2) + (v40 ^ 0x7AF5E8974DFEFC69) - 0x7AF5E8974DFEFC69) >> 10) ^ 0x1F7EB57EB6EE5C1DLL)
      + ((2 * v40) & 0xF5EBD12E9BFDF8D2)
      + (v40 ^ 0x7AF5E8974DFEFC69)
      + (((((2 * v40) & 0xF5EBD12E9BFDF8D2) + (v40 ^ 0x7AF5E8974DFEFC69) - 0x7AF5E8974DFEFC69) >> 9) & 0x7D6AFD6DDCB83ALL);
  v42 = v41
      + (((v41 + 0x658B61E9FB12A77ALL) >> 5) ^ 0x12D2088003243688)
      - (((v41 + 0x658B61E9FB12A77ALL) >> 4) & 0xA5BEEFFF9B792EELL);
  v43 = v42
      + 1
      + (((v42 - 0xCB3434890CCD6BBLL) >> 29) ^ 0x240A08600028010ELL)
      - (((v42 - 0xCB3434890CCD6BBLL) >> 28) & 0xFFFAFFDE2);
  v44 = v43
      + (((v43 - 0x30BD4BA890F4D7CALL) >> 11) ^ 0x777E65FECFBFF766)
      + (((v43 - 0x30BD4BA890F4D7CALL) >> 10) & 0x3CCBFD9F7FEECCLL);
  v45 = v44
      + (((v44 + 0x57C44E589F4B30D0) >> 8) ^ 0x982810500A010401)
      - (((v44 + 0x57C44E589F4B30D0) >> 7) & 0x1AFDF5FEBFDF7FCLL)
      + 2;
  v46 = STACK[0x5F0];
  LODWORD(STACK[0x4B0]) = v11;
  if (v12)
    v46 = v11;
  LODWORD(STACK[0x278]) = v46;
  return sub_18CAE7E68(v0 ^ v34 ^ 0x2B24B6E ^ (v45 - ((2 * v45 + 714365338) & 0x65E8754C) + 1212049267), 2130705321, 152827930, -1328064443, -2125706550);
}

uint64_t sub_18CB0C990(uint64_t a1, int a2)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((38 * ((v2 ^ 0x18A549EF ^ (67 * (v2 ^ 0x4CD))) - a2 < 7)) ^ v2))
                            - 4))();
}

uint64_t sub_18CB0C9F0()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + (v2 + v1)) = 0xB1B1B1B1B1B1B1B1;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1798 * (((v3 + 1759192548) & 0x9724D97F) - 372 == ((v4 + 1) & 0x1FFFFFFF8))) ^ v3)))();
}

uint64_t sub_18CB0CA50(unsigned int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((1439 * (v1 != v2)) ^ a1)) - (a1 ^ 0x178)))();
}

uint64_t sub_18CB0CA9C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v1 + (v4 + v2)) = -79;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)((240
                                               * (((7 * (v5 ^ v3)) & ~(a1 + v4 + 1) | ((a1 + v4 + 1) ^ ~(7 * (v5 ^ v3))) & (a1 + v4 + 1 - 7 * (v5 ^ v3))) >> 31)) ^ (7 * (v5 ^ v3) + 324)))
                            - 4))();
}

void sub_18CB0CAF8()
{
  JUMPOUT(0x18CB0CAB0);
}

uint64_t sub_18CB0CB00(uint64_t a1, int a2)
{
  char v2;
  unint64_t v3;
  char v4;
  char v5;
  int v6;
  int v7;
  _BYTE *v8;
  char v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  char v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned __int8 v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  char v52;
  char v53;
  char v54;
  char v55;
  unsigned int v56;
  unsigned int v57;
  unsigned __int8 v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unint64_t v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  uint64_t v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  unsigned int v101;
  char v102;
  char v103;
  unint64_t v104;
  unsigned int v105;
  int v106;
  int v107;
  char v108;
  char v109;
  char v110;
  char v111;
  int v112;

  LODWORD(STACK[0x670]) = 0;
  LODWORD(STACK[0x5F0]) = a2 | 0x400;
  v10 = v8[109] ^ v3;
  LODWORD(STACK[0x560]) = ((a2 | 0x400) - 1767931186) & 0x69607FF7;
  v11 = v10 - ((v10 << ((a2 - 50) & 0xF7 ^ 0xE6)) & 0x1D8) - 1788685588;
  v12 = v8[21] ^ v3;
  LODWORD(STACK[0x678]) = ((a2 | 0x400) + 1012609835) & 0xC3A4C9FF;
  v13 = v12 - ((v12 << ((a2 + 43) ^ 0x4D)) & 0x136) - 851535717;
  v14 = ((v13 ^ 0xCD3E989B | v11 ^ 0x9562D2EC) - ((2 * (v13 ^ 0xCD3E989B | v11 ^ 0x9562D2EC)) & 0xCCCCCCCC) + 38) & 0x73;
  v15 = ((v13 ^ 0x8522809B) & (v11 ^ 0x12EC)) - ((2 * ((v13 ^ 0x8522809B) & (v11 ^ 0x12EC))) & 0x6AE5001C) + 896696334;
  v16 = ((v14 ^ 0x22 | v15 ^ 0x3572800E)
       - 2 * ((v14 ^ 0x22 | v15 ^ 0x3572800E) & 0x655BE99F ^ (v15 ^ 0x3572800E) & 0xC)
       + 1700522387) ^ 0x655BE993;
  v17 = ((2 * v16 * v16 * v16) & 0x5FFE73B8) + ((v16 * v16 * v16) ^ 0x2FFF39DC);
  v18 = STACK[0x680];
  LOBYTE(v15) = *(_BYTE *)(STACK[0x680] + (v8[40] & 0x3F ^ v3));
  LOBYTE(v13) = ((v15 & 0x50 ^ 0x99) + (v15 & 0x25) - 1) ^ 0xFC | (((v8[352] & 0x8A ^ 0x7D) - 65) & 0xF1 | -(v8[352] & 0x8A ^ 0x7D) & 0x7E) ^ 0xB0;
  LOBYTE(v13) = v13 - 2 * (v13 & 0x21 ^ v15 & 1) - 96;
  LOBYTE(v15) = v8[355];
  v19 = STACK[0x688];
  v20 = (*(_BYTE *)(STACK[0x688] + (v8[52] & 0x3F ^ v3)) ^ 0xE6) & (v15 ^ 0xE6);
  LOBYTE(v15) = (v20 + (~(2 * v20) | 0xCF) - 103) ^ 0x98 | ((v15 & 0xB8 ^ 0xE7) - 1) ^ 0xFE;
  LOBYTE(v13) = v13 ^ 0xA0;
  LOBYTE(v15) = (v15 - ((2 * v15) & 0xA0) + 80) ^ 0x50;
  v21 = ~((v15 | v13) - ((2 * (v15 | v13)) & 0x3A) + 61);
  LOBYTE(v13) = ((v21 & 0x2B) - ((2 * v21) & 0x12) + 29) ^ 0x1F | ((v15 & v13) - ((2 * (v15 & v13)) & 0x52) - 87) ^ 0xA9;
  LOBYTE(v13) = (v8[94] ^ v3) + (v13 ^ 0x12) - ((2 * v13) & 0xDA) - 18;
  v8[94] = v13 - ((2 * v13) & 0x58) + 44;
  LOBYTE(v13) = (v8[139] & 0x36 ^ 0x82) + (v8[139] & 0x12 ^ 0x51) - ((v8[139] & 0x36 ^ 0x82) & 0x92);
  LOBYTE(v13) = (v13 ^ 0x75 | byte_18CF28BD0[v8[85] & 0x3F ^ v3] & 0x40)
              - 2 * (((v13 ^ 0x75) & 0x46 | byte_18CF28BD0[v8[85] & 0x3F ^ v3] & 0x40) ^ v13 & 2)
              + 68;
  v22 = *(unsigned __int8 *)(v18 + (v8[157] & 0x3F ^ v3));
  v8[64] ^= 0x39 ^ ((v13 & 0xF7 ^ 0x4C) + ((2 * v13) & 0x62 ^ 0xEF) + 58);
  LODWORD(STACK[0x5E0]) = (v22 ^ 0x19) - ((2 * (_BYTE)v22 + 12) & 8);
  v23 = ((v8[125] & 0xC9) - ((2 * v8[125]) & 0x10) - 82) ^ 0x24;
  v24 = ((v23 | 0xFFFFFFB8) - (v23 | 0x47) + 71) & 0xFFFFFFF9 ^ 0x3A;
  v25 = *(unsigned __int8 *)(v18 + (v8[104] & 0x3F ^ v3));
  LODWORD(STACK[0x5D0]) = v24 - ((2 * v24) & 0xFFFFFFDF);
  v26 = v8[387];
  v27 = ((v26 & 0xA ^ 0xFFFFFF83 | v26 & v7) - 1) ^ 0xFFFFFFDC;
  v28 = ((((v27 + 108 - ((2 * v27) & 0xD8)) ^ 0x2A | (((2 * (v26 & 0xA1 ^ 0xFFFFFFE1)) | 7) - (v26 & 0xA1 ^ 0xFFFFFFE1)) ^ 0x46)
        - ((2 * (v27 + 108)) & 8)
        - 124) ^ 0xFFFFFF84) & (((v25 ^ 0xFFFFFFE6) * (v25 ^ 0xFFFFFFE6)
                               - ((2 * (v25 ^ 0xFFFFFFE6) * (v25 ^ 0xFFFFFFE6)) & 0xFFFFFFA8)
                               + 84) ^ 0x54);
  LODWORD(STACK[0x668]) = v28 - ((2 * v28) & 0x20);
  LOBYTE(v28) = (v8[52] ^ 0xD3) + (v8[175] ^ v3) + 1;
  v8[175] = v28 - ((2 * v28) & 0x58) + 44;
  v29 = 205 * (*(unsigned __int8 *)(v19 + (v8[44] & 0x3F ^ v3)) ^ 0xE6);
  LODWORD(STACK[0x5C0]) = (v29 >> 10) - ((v29 >> 9) & 0x6C);
  v8[100] = (v8[100] ^ v3) - ((2 * (v8[100] ^ v3) + 122) & 0x58) + 41;
  v8[327] = 26;
  LOBYTE(v29) = (v8[386] ^ 0xE6) + (*(_BYTE *)(v18 + (v8[17] & 0x3F ^ v3)) ^ 0xE6);
  v8[386] = v29 - ((2 * v29) & 0xCC) - 26;
  LOBYTE(v29) = byte_18CF28BD0[v8[57] & 0x3F ^ v3];
  LOBYTE(v29) = (107 - ((v29 & 0x60) + (v29 | 0xEC))) ^ 0x77;
  LOBYTE(v26) = (v8[415] & 4 ^ 0x44) - (v8[415] & 4) + (v8[415] & 0x8C ^ 8);
  LOBYTE(v29) = (127 - (((v26 & 0xD4 ^ 0x6F) - (v26 | v4) - 44) ^ 0xA7)) ^ 0x7F | (((2 * v29) & 0x64) - v29 - 55) ^ 0xC0;
  v30 = (v29 - ((2 * v29) & 0xC6) - 29) ^ 0xE3;
  v31 = (v8[101] ^ v3)
      + ((v30 / 3u) ^ 0x27)
      - (((171 * v30) >> 8) & 0xB0)
      - 39;
  v8[101] = v31 - ((2 * v31) & 0x58) + 44;
  LOBYTE(v31) = byte_18CF28BD0[v8[217] & 0x3F ^ v3];
  v32 = (((v31 & 0x75 ^ 0xFFFFFF8F) + ((2 * (v31 & 0x75 ^ 0xFFFFFF8F)) & 0x48 ^ 0xFFFFFFEB) + 47) ^ 0x2E) & (v8[398] ^ 0xFFFFFFE6);
  v33 = (v32 + (~(2 * v32) | 0xFFFFFFBB) + 35) ^ 0x22 | ((((v31 & 0x8A ^ 0xFFFFFFFD) - 81) & 0xFFFFFF83)
                                                       - (((v31 & 0x8A ^ 0xFFFFFFFD) - 81) | 0xFFFFFFA3)
                                                       + 127) ^ 0x50;
  v34 = (v33 - ((2 * v33) & 0x7A) - 67) ^ 0xFFFFFFBD | (v8[7] >> 1) ^ 0x16;
  LOBYTE(v34) = (v8[249] ^ v3) + (v34 ^ 0x40) - 2 * (v34 & 0x3F) - 64;
  v8[249] = v34 - ((2 * v34) & 0x58) + 44;
  v8[30] ^= 0x58u;
  LOBYTE(v16) = (*(_BYTE *)(v18 + (v8[241] & 0x3F ^ v3)) & 0xFC ^ 0xE7) - 1;
  LOBYTE(v34) = ((v16 & 0x87 ^ 5) + (v16 ^ 0x9A) - ((v16 ^ 0x9A) & 0x87)) ^ 0x1F | ((v8[383] & 3 ^ 2)
                                                                                  - 2 * (v8[383] & 1)
                                                                                  - 119) ^ 0x89;
  LOBYTE(v34) = (v34 - ((2 * v34) & 0xDF) - 17) ^ 0xEF;
  v8[215] = v34 * v34 * v34 + (~(2 * v34 * v34 * v34) | 0xA7) + 45;
  LODWORD(STACK[0x660]) = v17;
  v8[446] = *(_BYTE *)(v18 + ((28 - (_BYTE)v17) & 0x3F));
  v35 = (*(_BYTE *)(v18 + (v8[13] & 0x3F ^ v3)) & v3 ^ 0x3B) + 61;
  v36 = (v35 & v3 ^ 0x8F) - ((2 * v35) & 0x40) + 46;
  LOBYTE(v25) = (v8[146] ^ 0x75) - 89 + ((2 * (v8[146] ^ 8)) & 0xB2);
  LOBYTE(v25) = ((2 * v25 * v25 * v25) & 0xF6) + ((v25 * v25 * v25) ^ 0xFB);
  v37 = (((v36 ^ 0x22222222) & 0xEF) - ((2 * v36) & 0x102) - 1849324159) ^ 0x91C58D81;
  v8[381] = ((v37 << ((v25 + 5) & 7)) - ((2 * (v37 << ((v25 + 5) & 7))) & 0xE0) - 16) ^ ((v37 >> ((3 - v25) & 7))
                                                                                       - ((2 * (v37 >> ((3 - v25) & 7))) & 0x5A)
                                                                                       + 45) ^ 0x3B;
  v38 = (v8[131] ^ v3)
      - ((2 * (v8[131] ^ v3)) & 0x164)
      + 418557106;
  v39 = (v8[393] ^ 0xE6) - ((2 * (v8[393] ^ 0xE6)) & 0x174) - 1836848454;
  v40 = (((v39 ^ 0x9283EABA | v38 ^ 0x18F2ACB2) - ((2 * (v39 ^ 0x9283EABA | v38 ^ 0x18F2ACB2)) & 0x560) + 688) ^ 0x2B0) & (((v8[400] ^ 0xE6) - ((2 * (v8[400] ^ 0xE6)) & 0x15A) + 1646354861) ^ 0x622161AD);
  v41 = (v40 - ((2 * v40) & 0x11230EC8) - 2003728540) ^ 0x88918764 | (((v39 ^ 0x1082A2BA) & (v38 ^ 0xCB2))
                                                                    - ((2 * ((v39 ^ 0x1082A2BA) & (v38 ^ 0xCB2))) & 0x41D298AA)
                                                                    + 1625902165) ^ 0x60E94C55;
  LOBYTE(v38) = *(_BYTE *)(v19 + (v8[220] & 0x3F ^ v3)) & 3;
  LOBYTE(v38) = ((v38 ^ 6) + 2 * ((v38 ^ 6 | 0x79) ^ v38) - 77) ^ 0xB1;
  LOBYTE(v38) = ((2 * v38) & 0xFA) + (v38 ^ 0xFD);
  v42 = (v41 - ((2 * v41) & 0x3ED17D38) + 526958236) ^ 0x1F68BE9C;
  v43 = ((v42 >> (v38 + 3)) - ((2 * (v42 >> (v38 + 3))) & 0xA) + 5) ^ ((v42 << (5 - v38))
                                                                     - ((2 * (v42 << (5 - v38))) & 0x4C)
                                                                     + 38);
  LOBYTE(v43) = (v8[330] ^ 0xE6) + (v43 ^ 0x5E) + ((2 * v43) & 0xFB ^ 0x42) - 125;
  v8[330] = v43 - ((2 * v43) & 0xCC) - 26;
  v44 = (v8[10] >> 1) ^ 0x16;
  LOBYTE(v39) = *(_BYTE *)(v19 + (v8[27] & 0x3F ^ v3));
  LOBYTE(v39) = (v39 ^ 0x19) + 2 * (v39 ^ 0xE6) + 1;
  LOBYTE(v39) = ((2 * v39 * v39) & 0xDE) + ((v39 * v39) ^ 0xEF);
  v45 = (v44 - ((2 * v44) & 0x30) - 2099754728) ^ 0x82D84918;
  v46 = ((v45 >> ((v39 + 1) & 7)) - ((2 * (v45 >> ((v39 + 1) & 7))) & 0xF8) + 252) ^ ((v45 << ((7 - v39) & 7))
                                                                                    - ((2 * (v45 << ((7 - v39) & 7))) & 0xDA)
                                                                                    + 109);
  LOBYTE(v46) = (v8[67] ^ v3) + (v46 ^ 0x14) + ((2 * v46) & 0xF4 ^ 0xDF) + 124;
  v8[67] = v46 - ((2 * v46) & 0x58) + 44;
  LOBYTE(v46) = byte_18CF28BD0[v8[136] & 0x3F ^ v3] & 0xAC;
  LOBYTE(v46) = (v8[195] ^ v3) + (v46 ^ 0x69) + (v3 ^ (2 * v46)) - 127;
  v47 = *(unsigned __int8 *)(v18 + (v8[182] & 0x3F ^ v3));
  v8[195] = v46 + (~(2 * v46) | 0xA7) + 45;
  v48 = ((2 * ((v47 ^ 0xFFFFFFE6) + 13)) & 0x7A) + (((v47 ^ 0xFFFFFFE6) + 13) ^ 0xFFFFFFBD);
  v49 = 171 * (byte_18CF28BD0[v8[56] & 0x3F ^ v3] ^ 0xE3);
  v50 = (v49 >> 9) ^ 0xFFFFFFD9;
  v51 = (v49 >> 8) & 0xB2;
  LOBYTE(v49) = *(_BYTE *)(v18 + (v8[196] & 0x3F ^ v3)) ^ 0xE6;
  LOBYTE(v17) = *(_BYTE *)(v19 + (v8[21] & 0x3F ^ v3)) ^ 0xE6;
  v52 = (v17 | v49) - 2 * ((v17 | v49) & 7) - 57;
  v53 = (v52 & 9 ^ 0x4A) - (v52 & 0x40 | 0xBD);
  LOBYTE(v49) = (((v53 - 67) ^ 0x4B) + ((v53 + 61) & 0x82) - (((v53 - 67) ^ 0x4B) & 0x82)) ^ 0xC2 | ((v17 & v49) - ((2 * (v17 & v49)) & 0xA8) + 84) ^ 0x54;
  v54 = (*(_BYTE *)(v19 + (v8[127] & 0x3F ^ v3)) ^ 0xE6) + (v49 ^ 0x30) - ((2 * v49) & 0x9F) - 48;
  v55 = (v8[423] ^ 0xE6) + (v54 ^ 0x75) + ((2 * v54) & 0xEA) - 117;
  v8[423] = v55 - ((2 * v55) & 0xCC) - 26;
  v56 = *(_BYTE *)(v19 + (v8[65] & 0x3F ^ v3)) & 2;
  v57 = ((((v56 & 0xFFFFFFFB | (4 * ((v56 >> 1) & 1))) ^ 0xA) - 114) ^ 0xFFFFFF92) & (v8[140] ^ v3);
  v8[369] = v57 - ((2 * v57) & 0x4C) - 26;
  LOBYTE(v32) = (v8[134] & 0x89 ^ 0x1A) + 30;
  v58 = ((v32 | 0x74) + ((2 * v32) & 0x10 ^ 0x7F) - 55) ^ 0xC8;
  v8[321] = v58 / 5u - (((205 * v58) >> 9) & 0xCC) - 26;
  v59 = 171 * (v8[339] ^ 0xE6);
  v60 = ((v59 >> 9) - ((v59 >> 8) & 0x22222222) + 17) & 0x4D ^ 4;
  LOBYTE(v57) = (*(_BYTE *)(v18 + (v8[39] & 0x3F ^ v3)) ^ 0xE6) + 50;
  LOBYTE(v31) = (v57 ^ 0x3B) + ((2 * v57) & 0x36) + 5;
  LOBYTE(v31) = (((((2 * v60) | 0xA2) - v60 + 47) & 0x4E ^ 0x45) - ((-48 - (((2 * v60) | 0xA2) - v60)) | 0x4E) - 2) ^ 0x90 | ((v31 & 0x32) - ((2 * v31) & 0x20) - 44) ^ v4;
  LOBYTE(v31) = (v8[330] ^ 0xE6) + (v31 ^ 0xBF) + 2 * (v31 & 0x3F) + 65;
  v8[330] = v31 - ((2 * v31) & 0xCC) - 26;
  LOBYTE(v60) = (((2 * (v8[322] & 7 ^ 4)) | 0x32) - (v8[322] & 7 ^ 4) - 25) ^ 0x1B;
  LOBYTE(v60) = ((2 * v60) & 0xD2) + (v60 ^ 0x69);
  v61 = ((0x37u >> ((1 - v60) & 7)) - ((0x6Eu >> ((1 - v60) & 7)) & 0x32) + 244192281) ^ ((55 << (v60 - 105))
                                                                                        - ((110 << (v60 - 105)) & 0x25A0C36)
                                                                                        + 19727899);
  v62 = (((v61 & 0xFFFFFFD2 ^ 0xFA3122F) - ((2 * (v61 & 0xFFFFFFD2 ^ 0xFA3122F)) & 0x2FC) + 894) ^ 0x37E) & (((v8[401] ^ 0xE6) - ((2 * (v8[401] ^ 0xE6)) & 0xC6) - 1695866269) ^ 0x9AEB2263);
  v63 = (v62 - ((2 * v62) & 0x479BBF40) - 473047136) ^ 0xE3CDDFA0 | v61 & v6;
  LODWORD(STACK[0x590]) = ((LODWORD(STACK[0x668]) + 16) ^ 0x5B)
                        + ((v63 - ((2 * v63) & 0xB0) - 40) ^ 0xFFFFFFF7)
                        + ((2 * (v63 - ((2 * v63) & 0xB0) - 40)) & 0x5E ^ 0x10);
  LOBYTE(v63) = (v8[237] ^ v3) + (byte_18CF28BD0[v8[201] & 0x3F ^ v3] ^ 0xFA);
  v8[237] = v63 - ((2 * v63) & 0x58) + 44;
  v64 = *(unsigned __int8 *)(v19 + (v8[120] & 0x3F ^ v3)) ^ 0xE6;
  v65 = (v8[400] ^ 0xE6) - (v3 & (2 * (v8[400] ^ 0xE6))) - 898166250;
  v66 = v64 - ((2 * v64) & 0x1F0) + 2064123128;
  v67 = (((v66 ^ 0x7B0804F8 | v65 ^ 0xCA771216) - ((2 * (v66 ^ 0x7B0804F8 | v65 ^ 0xCA771216)) & 0x1DA) + 237) ^ 0xED) & (((v8[392] ^ 0xE6) - ((2 * v8[392]) & 0x12) - 1526673655) ^ 0xA500CF09);
  v68 = (v67 - ((2 * v67) & 0xFC0373C) - 941614178) ^ 0xC7E01B9E | (((v66 ^ 0x4A0000F8) & (v65 ^ 0x71216))
                                                                  - ((2 * ((v66 ^ 0x4A0000F8) & (v65 ^ 0x71216))) & 0x1F92A56C)
                                                                  - 1882631498) ^ 0x8FC952B6;
  v69 = ((v8[436] ^ 0xE6) - ((2 * (v8[436] ^ 0xE6)) & 0x46) + 94770211) ^ 0x5A61423;
  v70 = v68 - ((2 * v68) & 0x239EFF16) + 298811275;
  v71 = ((v70 ^ 0x11CF7F8B | v69) - ((2 * (v70 ^ 0x11CF7F8B | v69)) & 0x30) + 88) & 0x4F ^ 0x20A0069;
  v72 = (((2 * v71) & 0x4140014) - v71 - 1379872523) ^ 0xAFCAD0D4 | (((v70 ^ 0x78B) & v69)
                                                                   - ((2 * ((v70 ^ 0x78B) & v69)) & 0x15CCFB64)
                                                                   - 1964606030) ^ 0x8AE67DB2;
  LODWORD(STACK[0x580]) = v72 - ((2 * v72) & 0xAE);
  LODWORD(STACK[0x668]) = v48;
  v73 = v8[327];
  v74 = ((*(unsigned __int8 *)(v18 + (((_BYTE)v48 + 3) & 0x3F)) >> 1) ^ 0x73) & (v73 ^ 0x66);
  LOBYTE(v73) = ((((v8[208] ^ v3) + 43) ^ 0x7F) + 2 * ((v8[208] ^ v3) + 43) - 127) & (v73 ^ 0x19);
  LOBYTE(v74) = (v73 - ((2 * v73) & 0xFB) + 125) ^ 0x7D | (v74 - ((2 * v74) & 0xB0) - 40) ^ 0xD8;
  LOBYTE(v74) = (v8[335] ^ 0xE6) + (v74 ^ 0xF5) + ((2 * v74) & 0xEA) + 11;
  v8[335] = v74 - ((2 * v74) & 0xCC) - 26;
  LOBYTE(v74) = *(_BYTE *)(v19 + (v8[162] & 0x3F ^ v3));
  LOBYTE(v49) = (((v74 & 0x81 ^ 0xFE) - 2 * (v74 & 0x81) + 123) ^ 0x87) & (v8[323] ^ 0xE6);
  LOBYTE(v74) = (v49 - ((2 * v49) & 0x94) - 54) ^ v5 | (((2 * (v74 & 0x7E ^ 0x24)) | 0xA) - (v74 & 0x7E ^ 0x24) + 123) & 0xFE ^ 0xC6;
  v8[394] ^= (((v74 + (~(2 * v74) | 0x15) - 10) & 0xFE) >> 1) ^ 0x7A;
  LOBYTE(v49) = *(_BYTE *)(v18 + (v8[65] & 0x3F ^ v3)) ^ 0xE6;
  v8[356] ^= 0x7A ^ (v49 - ((2 * v49 + 98) & 0xA8) - 123);
  LOBYTE(v49) = (v8[103] ^ 0xD3) + (v8[436] ^ 0xE6) + 1;
  v8[436] = v49 - ((2 * v49) & 0xCC) - 26;
  v75 = *(unsigned __int8 *)(v19 + (v8[173] & 0x3F ^ v3));
  v76 = ((2 * v75) ^ 0xFFFFFFCB) + (v8[227] ^ v3) + ((16 * (v75 >> 2)) ^ 0x6F) - 6;
  v8[227] = v76 - ((2 * v76) & 0x58) + 44;
  v77 = v50 + v51 + 39;
  STACK[0x640] = v77;
  v8[383] ^= *(_BYTE *)(v19 + (v77 & 0x3F)) ^ 0xE6;
  LOBYTE(v77) = (v8[26] ^ v3) * (v8[26] ^ v3);
  LOBYTE(v77) = (v8[350] ^ 0xE6) + (v77 ^ 0xC8) - ((2 * v77) & 0x6E) + 56;
  v8[350] = v77 - ((2 * v77) & 0xCC) - 26;
  LOBYTE(v76) = *(_BYTE *)(v18 + (v8[136] & 0x3F ^ v3)) ^ 0xE6;
  LOBYTE(v16) = (v8[385] ^ 0xE6) - ((2 * (v8[385] ^ 0xE6)) & 0xB6) + 91;
  LOBYTE(v76) = v76 - ((2 * v76) & 0x96) - 53;
  LOBYTE(v77) = (((v76 ^ 0xCB | v16 ^ 0x5B) - ((2 * (v76 ^ 0xCB | v16 ^ 0x5B)) & 0x8E) + 71) ^ 0x47) & (((v8[378] ^ 0xE6) - ((2 * (v8[378] ^ 0xE6)) & 0x94) - 54) ^ 0xCA);
  LOBYTE(v77) = (v77 - ((2 * v77) & 0xD8) - 20) ^ 0xEC | (((v76 ^ 0xCB) & (v16 ^ 0x5B))
                                                        - ((2 * ((v76 ^ 0xCB) & (v16 ^ 0x5B))) & 0x94)
                                                        + 74) ^ 0x4A;
  LOBYTE(v16) = v77 - ((2 * v77) & 0x42) + 33;
  LOBYTE(v76) = (((2 * (v16 & 0xBD ^ 0xA5)) & 0x3E) - (v16 & 0xBD ^ 0xA5) - 30) ^ 0x24;
  LOBYTE(v17) = ((2 * v76) | 0x74) - v76 + 70;
  v78 = (v8[374] >> 1) ^ 0x73;
  LOBYTE(v16) = (((v16 | 0x3D) - ((2 * v16) & 0x84) - 78) ^ 0xD2) & ((v78 - ((2 * v78) & 0xA8) - 44) ^ 0xD4);
  LOBYTE(v16) = v17 ^ 0xF8 | (v16 - ((2 * v16) & 0x16) + 11) ^ 0xB;
  v8[358] = (v16 - ((2 * v16) & 0x6E) - 73) ^ 0x51;
  v79 = (v8[422] ^ 0xE6) - ((2 * (v8[422] ^ 0xE6)) & 0x140) - 1124769376;
  v80 = v79 & 0x8A ^ 0x81;
  v81 = (((v8[92] ^ v3) - ((2 * v8[92]) & 0x1A4) + 1204136914) ^ 0x4C52BD2) & (v79 ^ 0x1E5F);
  v82 = (v81 - ((2 * v81) & 0x3CD6AA50) + 1584092456) ^ 0x5E6B5528 | (v80 + 67) & 0xBBBBBBBB;
  LOBYTE(v80) = ((2 * ((79 - (((205 * (v8[155] ^ v3)) >> 10) & 7 ^ 0x46)) ^ 9)) & 0x76)
              + ((79 - (((205 * (v8[155] ^ v3)) >> 10) & 7 ^ 0x46)) ^ 0xB2);
  v83 = (v82 - ((2 * v82) & 0x7A63AFCE) + 1026676711) ^ 0x3D31D7E7;
  v84 = ((v83 << (v80 + 69)) - ((2 * (v83 << (v80 + 69))) & 0xC0) + 96) ^ ((v83 >> ((3 - v80) & 7))
                                                                         - ((2 * (v83 >> ((3 - v80) & 7))) & 0xC4)
                                                                         + 226);
  LOBYTE(v84) = (v8[395] ^ 0xE6) + (v84 ^ 0xE2) + ((2 * (v84 & 0x1F)) ^ 0xFB) - 95;
  v8[395] = v84 - ((2 * v84) & 0xCC) - 26;
  v8[345] ^= 0xFDu;
  LOBYTE(v84) = (v8[366] ^ 0xE6) * (v8[366] ^ 0xE6);
  LOBYTE(v84) = (v84 - ((2 * v84) & 0xBF) - 33) ^ 0xDF;
  LOBYTE(v84) = (v8[343] ^ 0xE6) + ((-90 * v84) & 0xF7) + ((-45 * v84) ^ 0x7B) - 123;
  v8[343] = v84 - ((2 * v84) & 0xCC) - 26;
  LOBYTE(v84) = (2 * *(_BYTE *)(v19 + (v8[85] & 0x3F ^ v3))) ^ 0xCC;
  v8[96] = (~(2 * v84) + v84) ^ v3;
  v85 = (v8[39] & 0x58 ^ 8) + ((v8[39] >> 1) & 0x6C ^ 0xFFFFFFBB) - 89;
  LODWORD(STACK[0x5A0]) = v85;
  LOBYTE(v17) = (*(_BYTE *)(v18 + (((v85 & 0xFE) - ((2 * (_BYTE)v85) & 0x54) + 43) & 0x3E ^ 0x2ALL)) ^ 0xE6) & (byte_18CF28BD0[v8[33] & 0x3F ^ v3] ^ 5);
  v8[373] ^= (v17 - ((2 * v17) & 0xAA) + 85) ^ 0x55;
  LOBYTE(v17) = v8[239] & 0x3F ^ 0xB4;
  v86 = (((v17 - ((2 * v17) & 0x7C) - 2) & 0xE3 ^ 0x81)
                        + ((v17 - ((2 * v17) & 0x7C) - 2) ^ 0x66)
                        - (((v17 - ((2 * v17) & 0x7C) - 2) ^ 0x66) & 0xE3)) ^ 0xE3;
  v87 = *(unsigned __int8 *)(v19 + v86) ^ 0xFFFFFFE6 | v8[148] ^ v3;
  v88 = (((2 * (v87 + 14)) & 4) + ((v87 + 14 - ((2 * v87) & 0x1C)) & 0xFFFFFFC6 ^ 0xFFFFFFBF) + 69) ^ 0x44;
  v89 = ((((2 * v88) | 0x1C) - v88 - 14) ^ 0x48 | *(_BYTE *)(v19 + (v8[105] & 0x3F ^ v3)) & 0x18)
      - 2
      * ((((((2 * v88) | 0x1C) - v88 - 14) ^ 0x48) & 0x33 | *(_BYTE *)(v19 + (v8[105] & 0x3F ^ v3)) & 0x10) ^ (((2 * v88) | 0x1C) - v88 - 14) & 2);
  LOBYTE(v87) = v8[354];
  LOBYTE(v88) = (v8[221] ^ v3) & (v87 ^ 0xE6);
  LOBYTE(v87) = (v8[339] ^ 0xE6) & (v87 ^ 0x19);
  LOBYTE(v88) = (v87 - ((2 * v87) & 0x5E) + 47) ^ 0x2F | (v88 + (~(2 * v88) | 0x99) + 52) ^ 0x33;
  v8[441] = (v88 - ((2 * v88) & 0x22) + 17) & 0x7F ^ 0xF7;
  v90 = 205 * (*(unsigned __int8 *)(v18 + (v8[171] & 0x3F ^ v3)) ^ 0xE6);
  v91 = (v8[24] ^ v3) + ((v90 >> 10) ^ 0xFFFFFFEB) + ((v90 >> 9) & 0x56) + 21;
  v8[44] ^= 0x61 ^ (v91 + (~(2 * v91) | 0x3D) + 98);
  v92 = (~((~((v8[137] >> 1) & 0x24) | 0x32) + ((v8[137] >> 1) & 0x20 | 0xD)) & 0x24 | v8[329] & 0x53) ^ 0x66;
  v8[423] ^= 0xCB ^ (v92 - ((2 * v92) & 0x87) - 53);
  v8[344] ^= 0xAB ^ (3 * (((v8[67] | 0x2F) - (v2 & (2 * (v8[67] | 0x2F))) + 53) ^ 0x35)
                                    + (~(6 * (((v8[67] | 0x2F) - (v2 & (2 * (v8[67] | 0x2F))) + 53) ^ 0x35)) | 0xA9)
                                    - 84);
  v8[370] = 83;
  v8[419] ^= 0xBDu;
  LOBYTE(v77) = ((v8[400] & 0xA1 ^ 0x7E) + 44) ^ v4;
  v93 = *(_BYTE *)(v18 + (v8[37] & 0x3F ^ v3)) & 0x5E ^ 0x1C;
  LOBYTE(v77) = ((((v93 - ((2 * v93) & 0x38) - 100) & 0x2E ^ 0xD) - ((v93 - ((2 * v93) & 0x38) - 100) | 0x2F) - 2) | (v77 + 110) & 0xA1) ^ 0x1A;
  LOBYTE(v77) = ((v77 - ((2 * v77) & 0xA8) - 44) ^ 0xDA) + (v8[188] ^ v3);
  LODWORD(STACK[0x5B0]) = byte_18CF28BD0[v86];
  LOBYTE(v92) = v8[61] ^ v3;
  v94 = byte_18CF28BD0[v8[193] & 0x3F ^ v3] ^ 5;
  LOBYTE(v50) = (((v94 | v92) - 2 * ((v94 | v92) & 0xF) + 15) ^ 0xF) & (v8[403] ^ 0xE6);
  v95 = (v50 - ((2 * v50) & 0xF4) - 6) ^ 0xFA | ((v94 & v92) - ((2 * (v94 & v92)) & 0xC) + 6) ^ 6;
  v96 = (v8[357] ^ 0xE6) + (v95 ^ 0x20) - ((2 * v95) & 0xBF) - 32;
  v8[357] = v96 + (~(2 * v96) | 0x33) - 25;
  v97 = *(_BYTE *)(v18 + (v8[159] & 0x3F ^ v3)) ^ 0xE6;
  LODWORD(STACK[0x608]) = v89 - 79;
  v98 = ((v97 & ((v89 - 79) ^ 0x4E)) - ((2 * (v97 & ((v89 - 79) ^ 0x4E))) & 0x58) + 44) & 0x9D ^ 0x2E;
  v8[371] ^= 0x85 ^ (v98 + (~(2 * v98) | 0xF5) - 122);
  LOBYTE(v92) = (v8[116] ^ v3) - ((2 * (v8[116] ^ v3)) & 0xC2) + 97;
  LOBYTE(v50) = (v8[416] ^ 0xE6) - (v3 & (2 * (v8[416] ^ 0xE6))) + 22;
  v99 = (((v50 ^ 0x16 | v92 ^ 0x61) - ((2 * (v50 ^ 0x16 | v92 ^ 0x61)) & 4) - 126) ^ 0x82) & (((v8[349] ^ 0xE6)
                                                                                             - ((2 * (v8[349] ^ 0xE6)) & 0xA2)
                                                                                             + 81) ^ 0x51);
  v100 = (v99 - ((2 * v99) & 0x94) - 54) ^ 0xCA | (((v50 ^ 0x16) & (v92 ^ 0x61))
                                                 - ((2 * ((v50 ^ 0x16) & (v92 ^ 0x61))) & 0xE2)
                                                 + 113) ^ 0x71;
  v101 = (((v85 & 0xFE) - ((2 * v85) & 0x54) - 1211791829) >> 1) ^ 0x5BE2C315;
  v102 = v100 - ((2 * v100) & 0x52) + 41;
  LOBYTE(v84) = (((v102 ^ 0x29 | v101) - ((2 * (v102 ^ 0x29 | v101)) & 0xA8) + 84) ^ 0x54) & (((v8[321] ^ 0xE6) + 0x80) ^ 0x80);
  v103 = (v84 - ((2 * v84) & 0x34) + 26) ^ 0x1A | (((v102 ^ 0x29) & v101) - ((2 * ((v102 ^ 0x29) & v101)) & 0xB6) - 37) ^ 0xDB;
  v8[347] = (v103 - ((2 * v103) & 0x62) - 79) ^ 0x57;
  LOBYTE(v77) = v77 - ((2 * v77) & 0x58) + 44;
  v8[188] = v77;
  LODWORD(v77) = *(unsigned __int8 *)(v19 + (v77 & 0x3F ^ v3));
  HIDWORD(v104) = v77 ^ 2;
  LODWORD(v104) = (v77 ^ 0xFFFFFFE7) << 24;
  LOBYTE(v77) = (v8[381] ^ 0xE6) - ((2 * (v8[381] ^ 0xE6)) & 0x3F);
  LOBYTE(v101) = (((2 * (v8[4] & 7 ^ 3)) | 4) - (v8[4] & 7 ^ 3) - 2) ^ 5;
  LOBYTE(v101) = ((2 * v101) & 0xBC) + (v101 ^ 0xDE);
  v105 = ((v8[430] ^ 0xE6) - ((2 * (v8[430] ^ 0xE6)) & 0x1E0) + 2111102448) ^ 0x7DD4DDF0;
  v106 = (v105 << (v101 + 34)) - ((2 * (v105 << (v101 + 34))) & 0x13E84114) - 1980489590;
  v107 = (v105 >> ((6 - v101) & 7)) - ((2 * (v105 >> ((6 - v101) & 7))) & 0x418734A0) + 1623431760;
  LOBYTE(v101) = (v8[415] ^ 0xE6) - ((2 * (v8[415] ^ 0xE6)) & 7);
  v8[151] = v3;
  LOBYTE(v78) = v8[247] ^ v3;
  v108 = *(_BYTE *)(v19 + (v8[41] & 0x3F ^ v3)) ^ 0xE6;
  LOBYTE(v78) = v78 - ((2 * v78) & 0xA) + 5;
  v109 = v108 - ((2 * v108) & 7) - 125;
  LOBYTE(v101) = (((v109 ^ 0x83 | v78 ^ 5) - ((2 * (v109 ^ 0x83 | v78 ^ 5)) & 0x30) + 24) ^ 0x18) & ((v101 - 125) ^ 0x83);
  v110 = (v101 - ((2 * v101) & 0x28) + 20) ^ 0x14 | (((v109 ^ 0x83) & (v78 ^ 5))
                                                   - ((2 * ((v109 ^ 0x83) & (v78 ^ 5))) & 6)
                                                   - 125) ^ 0x83;
  LOBYTE(v107) = v106 ^ 0xDA ^ v107;
  v111 = (v110 - ((2 * v110) & 0xB2) - 39) ^ 0xD9;
  LOBYTE(v77) = (((v111 | v107) - ((2 * (v111 | v107)) & 0x10) - 120) ^ 0x88) & ((v77 - 97) ^ 0x9F);
  LOBYTE(v77) = (v77 - ((2 * v77) & 0x9C) - 50) ^ 0xCE | ((v111 & v107) - ((2 * (v111 & v107)) & 0x94) + 74) ^ 0x4A;
  LOBYTE(v77) = (v8[354] ^ 0xE6)
              + ((v77 - ((2 * v77) & 0xBC) - 34) ^ 0xEB)
              + (v2 & (2 * (v77 - ((2 * v77) & 0xBC) - 34)) ^ v9)
              - 53;
  v8[354] = v77 - ((2 * v77) & 0xCC) - 26;
  LOBYTE(v77) = v8[442] ^ 0xE6;
  LOBYTE(v18) = v77 - 86;
  LOBYTE(v77) = v77 - 86 - ((2 * v77) & 0x55);
  LOBYTE(v18) = ((v77 & 0x23 ^ 1) - ((2 * v18) & 4) - 58) ^ 0xC4;
  LOBYTE(v77) = (((v8[372] ^ 0xE6) - ((2 * (v8[372] ^ 0xE6)) & 7) - 125) ^ 0x83) & (v77 ^ 0x55);
  LOBYTE(v77) = (v18 - ((2 * v18) & 0x58) + 44) ^ 0xD | (v77 - ((2 * v77) & 0x6C) - 74) ^ 0xB6;
  LOBYTE(v77) = (v77 - ((2 * v77) & 0x98) - 52) ^ 0xCC;
  v8[339] = ((2 * v77 * v77) & 0x33) - v77 * v77 - 26;
  LOBYTE(v77) = (v8[444] & 0x25 ^ 0xB6) + (v8[444] & 0x21 ^ 9) - ((v8[444] & 0x25 ^ 0xB6) & 0x23);
  LOBYTE(v77) = (v8[322] ^ 0xE6) + (v77 & 0xF5 ^ 0x37) + ((2 * v77) & 0xE3 ^ 0x99) + 117;
  LOBYTE(v77) = (v8[361] ^ 0xE6) + (v77 ^ 0xBC) + ((2 * v77) & 0x78) + 68;
  v8[361] = v77 - ((2 * v77) & 0xCC) - 26;
  LODWORD(v77) = (89 * (LODWORD(STACK[0x788]) != -289289362)) ^ LODWORD(STACK[0x5F0]);
  LODWORD(STACK[0x570]) = LODWORD(STACK[0x5E0]) + 2;
  LODWORD(STACK[0x5D0]) += 107;
  v112 = LODWORD(STACK[0x590]) - 47;
  LODWORD(STACK[0x5E0]) = LODWORD(STACK[0x580]) + 218;
  LODWORD(STACK[0x5F0]) = (v104 >> 26) - ((2 * (v104 >> 26)) & 0x76) + 59;
  return ((uint64_t (*)(void *, _QWORD))qword_1E2538EC0[(int)v77])(&unk_18CF26880, v112 ^ 0x7Fu);
}

uint64_t sub_18CB0EFAC(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  int v7;

  v4 = STACK[0x560];
  v5 = (LODWORD(STACK[0x560]) - 130361069) & 0x7C526BF;
  v6 = (v3 + (LODWORD(STACK[0x560]) ^ 0x362) - 1413) ^ v2;
  LODWORD(STACK[0x670]) = v6;
  if (v6 <= 1)
    v7 = 1;
  else
    v7 = v6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[((4
                                                                                       * ((v7 - 17) < 0xFFFFFFF7)) | (16 * ((v7 - 17) < 0xFFFFFFF7))) ^ v4]
                                                                     - v5
                                                                     + 1710))(a1, a2, 1127335163, 1127335163);
}

uint64_t sub_18CB0F028()
{
  unsigned int v0;
  unsigned int v1;

  return ((uint64_t (*)(void))qword_1E2538EC0[(667 * (((v1 < 0x10) ^ (v0 - 29) ^ 0xA5) & 1)) ^ v0])();
}

uint64_t sub_18CB0F064()
{
  int v0;
  int v1;
  _OWORD *v2;

  *v2 = xmmword_18CF26810;
  return ((uint64_t (*)(__n128))(qword_1E2538EC0[(1454
                                                          * (((v0 + 663221928) & 0xD87806AB ^ 0x431) == (v1 & 0xFFFFFFF0))) ^ (v0 - 1428)]
                                         - 12))((__n128)xmmword_18CF26810);
}

uint64_t sub_18CB0F0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  int v8;

  LODWORD(STACK[0x678]) = (2 * v6) ^ 0x90E;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))qword_1E2538EC0[((((2 * v6) ^ 0xFFFFF2C2) + v6 + 356) * (v8 != v7)) ^ v6])(a1, a2, 1127335163, a4, a5, a6, 9);
}

uint64_t sub_18CB0F12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))qword_1E2538EC0[(19 * (((v3 - 1405) & v5) == 0)) ^ v3])(a1, a2, a3, (_DWORD)a3 + v4 + ((v3 - 893) | 0x4B2u) - 1722);
}

uint64_t sub_18CB0F170(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int8x16x4_t v8;

  LODWORD(STACK[0x5C0]) = v2 & 0xFFFFFFF8;
  v8.val[0].i64[0] = v1 & 8;
  v8.val[0].i64[1] = v1 & 8 | 1;
  v8.val[1].i64[0] = v8.val[0].i64[0] | 2;
  v8.val[1].i64[1] = ((v5 ^ 0x149) - 1049) & v1 | 3;
  v8.val[2].i64[0] = v8.val[0].i64[0] | 4;
  v8.val[2].i64[1] = v8.val[0].i64[0] | 5;
  v8.val[3].i64[0] = v8.val[0].i64[0] | 6;
  v8.val[3].i64[1] = v8.val[0].i64[0] | 7;
  *(int8x8_t *)(v3 + v1) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(a1 + v8.val[0].i64[0]), *(int8x8_t *)(v4 + v8.val[0].i64[0])), *(int8x8_t *)(v6 + v8.val[0].i64[0] + 4)), (int8x8_t)0x1818181818181818), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v8, (int8x16_t)xmmword_18CF0E660), (int8x8_t)0x5959595959595959));
  return ((uint64_t (*)(__n128))(qword_1E2538EC0[(620 * ((v2 & 0xFFFFFFF8) - 8 == v1)) ^ v5] - 4))((__n128)xmmword_18CF0E660);
}

void sub_18CB0F24C()
{
  JUMPOUT(0x18CB0F1A8);
}

uint64_t sub_18CB0F254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;

  LODWORD(STACK[0x678]) = (v7 + 1006949213) & 0xC3FB29CD;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))qword_1E2538EC0[(439 * (((v6 == LODWORD(STACK[0x5C0])) ^ (v7 - 52)) & 1)) ^ v7])(a1, a2, 1127335163, a4, a5, a6, 9);
}

uint64_t sub_18CB0F2D0@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;

  v8 = 7 * (a4 ^ 0x62D);
  v9 = 166 * (v8 ^ 0x423);
  LODWORD(STACK[0x678]) = v9;
  *(_BYTE *)(v5 + (a3 - 1127335163)) = *(_BYTE *)(a1 + ((a3 - 1127335163) & 0xFLL)) ^ *(_BYTE *)((((_BYTE)a3 + 5) & 0xF) + v7 + 4) ^ *(_BYTE *)(v6 + ((a3 - 1127335163) & 0xFLL)) ^ (89 * ((a3 + 5) & 0xF)) ^ 0x18;
  return ((uint64_t (*)(void))qword_1E2538EC0[((a3 != (v8 ^ (a2 - 1056)) + v4) * (v9 ^ 0x3D7)) ^ v8])();
}

void sub_18CB0F364()
{
  JUMPOUT(0x18CB0F314);
}

uint64_t sub_18CB0F36C(char *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, char a8)
{
  int v8;
  char v9;
  char v10;
  _BYTE *v11;
  int v12;
  char v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  _BYTE *v17;
  uint64_t v18;
  char v19;
  char v20;
  int v21;
  char v22;
  char *v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  _BYTE *v29;
  char v30;
  _BYTE *v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  int v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  unsigned int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  char v71;
  char v72;
  char v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int8 v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;

  v19 = a8 ^ 0x46;
  v20 = v9 + v10;
  v21 = LODWORD(STACK[0x570]) ^ LODWORD(STACK[0x5D0]);
  v22 = (*v11 ^ 0xC9 ^ ((LOBYTE(STACK[0x678]) - 12) | 0x10)) + 127;
  *v11 = (((((2 * v22) & 0xEF) + (v22 ^ 0x77)) ^ 0xA1) + ((2 * (((2 * v22) & 0xEF) + (v22 ^ 0x77))) & 0x42) - 24) ^ 0x99;
  if (v8 == v14 + 1)
    v23 = a1;
  else
    v23 = a1 + 1;
  v24 = *v23;
  if (v8 == v14 + 1)
    v25 = 0;
  else
    v25 = v15;
  v26 = v24 ^ v25;
  if (v8 == v14 + 1)
    v27 = 4;
  else
    v27 = 5;
  v28 = v26 ^ *(_BYTE *)(v18 + v27);
  if (v8 == v14 + 1)
    v29 = v17;
  else
    v29 = v17 + 1;
  v30 = v28 ^ *v29;
  if (v8 == v14 + 1)
    v31 = v11;
  else
    v31 = v11 + 1;
  v32 = (((v30 ^ *v31) - 20) ^ 0x7F) + 2 * ((v30 ^ *v31) - 20) - 39;
  *v31 = v30 ^ ((v32 ^ 0x48) + ((2 * v32) & 0x90) + 96);
  v33 = STACK[0x670];
  v34 = 2u % LODWORD(STACK[0x670]);
  v35 = (v34 * v15) ^ a1[v34] ^ *(_BYTE *)(v18 + v34 + 4) ^ v17[v34];
  v36 = (((v35 ^ v11[v34]) + 111) ^ 0x9F) + 2 * (((v35 ^ v11[v34]) + 111) & 0x1F) + 127;
  v11[v34] = v35 ^ ((v36 ^ 0xCE) + ((2 * v36) & 0x9C) + 20);
  v37 = 3 % v33;
  v38 = (byte_18CF26950[v37] ^ v11[v37] ^ (-79 * v37) ^ byte_18CF4B8C0[v37] ^ byte_18CF35620[v37 | 4])
      + LODWORD(STACK[0x5A0]);
  v11[v37] = a1[v37] ^ (v37 * v15) ^ *(_BYTE *)(v18 + (v37 | 4)) ^ v17[v37] ^ (((((2 * v38) & 0x2E) + (v38 ^ 0x97) + 108) ^ 0x73)
                                                                             + ((2 * (((2 * v38) & 0x2E) + (v38 ^ 0x97))
                                                                               - 40) & 0xE7)
                                                                             - 118);
  v39 = STACK[0x788];
  v40 = LODWORD(STACK[0x788]) ^ v14;
  v41 = 4 % v40;
  v42 = (v41 * v15) ^ a1[v41] ^ *(_BYTE *)(v41 + v18 + 4) ^ v17[v41];
  v43 = (((v42 ^ v11[v41]) - 3) ^ 0xBE) + ((2 * ((v42 ^ v11[v41]) - 3)) & 0x7C) + 96;
  v11[v41] = v42 ^ ((v43 ^ 0x58) + ((2 * v43) & 0xB0) - 118);
  v44 = v16 % v40;
  v45 = (v44 * v15) ^ a1[v44] ^ *(_BYTE *)(v44 + v18 + 4) ^ v17[v44];
  v46 = (v45 ^ v11[v44]) + 17;
  v11[v44] = v45 ^ (((((2 * v46) & 0x76) + (v46 ^ 0xBB) + 127) ^ 0xA2)
                  + ((2 * (((2 * v46) & 0x76) + (v46 ^ 0xBB)) + 126) & 0x44)
                  + 36);
  v47 = 6 % v40;
  v48 = (byte_18CF26950[v47] ^ v11[v47] ^ (-79 * v47) ^ byte_18CF4B8C0[v47] ^ byte_18CF35620[v47 + 4]) + v19;
  v11[v47] = a1[v47] ^ (v47 * v15) ^ *(_BYTE *)(v18 + v47 + 4) ^ v17[v47] ^ ((v48 ^ 0x58) + ((2 * v48) & 0xB0) - 88);
  v49 = 7 % v40;
  v50 = (v49 * v15) ^ a1[v49] ^ *(_BYTE *)(v49 + v18 + 4) ^ v17[v49];
  v11[v49] = v50 ^ ((((v50 ^ v11[v49]) + 47) ^ 0x6F) + ((2 * ((v50 ^ v11[v49]) + 47)) & 0xDF) - 111);
  v51 = 8 % v40;
  v52 = v20 + (byte_18CF26950[v51] ^ v11[v51] ^ (-79 * v51) ^ byte_18CF4B8C0[v51] ^ byte_18CF35620[v51 + 4]) + 58;
  v11[v51] = a1[v51] ^ (v51 * v15) ^ *(_BYTE *)(v18 + v51 + 4) ^ v17[v51] ^ ((((v52 ^ 0x7F) + 2 * v52 - 18) ^ 0x99)
                                                                           + ((2 * ((v52 ^ 0x7F) + 2 * v52) + 28) & 0x33)
                                                                           - 6);
  v53 = a7 % v40;
  LOBYTE(v40) = (a1[v53] ^ v11[v53] ^ (v53 * v15) ^ *(_BYTE *)(v53 + v18 + 4) ^ v17[v53]) - 118;
  v11[v53] = byte_18CF26910[v53] ^ (63 * v53) ^ byte_18CF3A4A0[v53 + 1] ^ byte_18CF4D6D0[v53 + 7] ^ ((v40 ^ 0x1F) + 2 * (v40 & 0x1F) - 31);
  LODWORD(v53) = v39 ^ v14;
  v54 = 0xA % (v39 ^ v14);
  v55 = (63 * v54) ^ byte_18CF26910[v54] ^ byte_18CF3A4A0[v54 + 1] ^ byte_18CF4D6D0[v54 + 7];
  v56 = ((LODWORD(STACK[0x660]) + 36) ^ 0x10)
      - ((2 * (LODWORD(STACK[0x660]) + 36)) & 0xFFFFFFDF)
      + (v55 ^ v11[v54])
      - 16;
  v11[v54] = v55 ^ (((((2 * v56) & 0xBF) + (v56 ^ 0xDF) + 122) ^ 0xED)
                  + ((2 * (((2 * v56) & 0xBF) + (v56 ^ 0xDF)) - 12) & 0xDA)
                  - 70);
  v57 = 0xB % v53;
  LOBYTE(v55) = (63 * v57) ^ byte_18CF26910[v57] ^ byte_18CF3A4A0[v57 + 1] ^ byte_18CF4D6D0[v57 + 7];
  v11[v57] = v55 ^ ((((v55 ^ v11[v57]) - 44) ^ 0x77) + ((2 * ((v55 ^ v11[v57]) - 44)) & 0xEF) - 119);
  v58 = 0xC % v53;
  v59 = (63 * v58) ^ byte_18CF26910[v58] ^ byte_18CF3A4A0[v58 + 1] ^ byte_18CF4D6D0[v58 + 7];
  LODWORD(v57) = (v59 ^ v11[v58])
               + ~(((2 * (LODWORD(STACK[0x5E0]) - 3)) ^ 0xFFFFFFAE) + ((LODWORD(STACK[0x5E0]) - 3) ^ 0x28));
  v11[v58] = v59 ^ (((((2 * v57) & 0xD4) + (v57 ^ 0x6A) + 88) ^ 0x7F) + 2 * (((2 * v57) & 0xD4) + (v57 ^ 0x6A)) - 49);
  LODWORD(v57) = STACK[0x788];
  v60 = LODWORD(STACK[0x788]) ^ v14;
  v61 = 0xD % v60;
  v62 = (byte_18CF26950[v61] ^ v11[v61] ^ (-79 * v61) ^ byte_18CF4B8C0[v61] ^ byte_18CF35620[v61 + 4])
      + (LODWORD(STACK[0x5B0]) ^ v16);
  LOBYTE(v62) = (v62 ^ 0xF6) + ((2 * v62) & 0xEC) + 28;
  v11[v61] = byte_18CF26910[v61] ^ (63 * v61) ^ byte_18CF3A4A0[v61 + 1] ^ byte_18CF4D6D0[v61 + 7] ^ ((v62 ^ 0xD6) + ((2 * v62) & 0xAC) + 24);
  v63 = 0xE % v60;
  v64 = (63 * v63) ^ byte_18CF26910[v63] ^ byte_18CF3A4A0[v63 + 1] ^ byte_18CF4D6D0[v63 + 7];
  v65 = (v64 ^ v11[v63]) + 42;
  v11[v63] = v64 ^ ((((v13 & (2 * v65)) + (v65 ^ 0x6D) - 97) | 0x72)
                  - ((96 - ((v13 & (2 * v65)) + (v65 ^ 0x6D))) & 0x72)
                  - 12);
  v66 = 0xF % v60;
  v67 = (63 * v66) ^ byte_18CF26910[v66] ^ byte_18CF3A4A0[v66 + 1] ^ byte_18CF4D6D0[v66 + 7];
  v11[v66] = v67 ^ ((((v67 ^ v11[v66]) + 14) ^ 0x37) + ((2 * ((v67 ^ v11[v66]) + 14)) & 0x6E) + 112);
  LODWORD(v57) = v57 ^ v14;
  v68 = 0x10 % v57;
  v69 = v12
      + a2
      + (byte_18CF26950[v68 & 0xF] ^ v11[v68] ^ byte_18CF4B8C0[v68 & 0xF] ^ byte_18CF35620[(v68 & 0xF) + 4] ^ (-79 * (v68 & 0xF)))
      - 127;
  v11[v68] = byte_18CF26910[v68 & 0xF] ^ (63 * (v68 & 0xF)) ^ byte_18CF3A4A0[(v68 & 0xF) + 1] ^ byte_18CF4D6D0[(v68 & 0xF) + 7] ^ ((((v69 ^ 0xFE) + 4 * (v69 >> 1) + 96) ^ 0xC1) + ((2 * ((v69 ^ 0xFE) + 4 * (v69 >> 1)) - 64) & 0x83) - 31);
  v70 = 0x11 % v57;
  v71 = byte_18CF3A4A0[(v70 & 0xF) + 1] ^ byte_18CF26910[v70 & 0xF];
  v72 = 63 * (v70 & 0xF);
  LOBYTE(v68) = byte_18CF4D6D0[(v70 & 0xF) + 7];
  v73 = (v71 ^ v11[v70] ^ v68 ^ v72) + 35;
  v11[v70] = v71 ^ v72 ^ v68 ^ (((2 * v73) & 0xFB)
                              + (v73 ^ 0xFD)
                              + ((15 - (((2 * v73) & 0xFB) + (v73 ^ 0xFD))) | 0xCD)
                              + ((((2 * v73) & 0xFB) + (v73 ^ 0xFD) + 48) | 0xCD)
                              + 55);
  v74 = 0x12 % v57;
  v75 = (a1[v74 & 0xF] ^ v11[v74] ^ *(unsigned __int8 *)((v74 & 0xF) + v18 + 4) ^ ((v74 & 0xF) * v15) ^ v17[v74 & 0xF])
      + (LODWORD(STACK[0x5F0]) ^ 0xFFFFFF86);
  v11[v74] = byte_18CF26910[v74 & 0xF] ^ (63 * (v74 & 0xF)) ^ byte_18CF3A4A0[(v74 & 0xF) + 1] ^ byte_18CF4D6D0[(v74 & 0xF) + 7] ^ ((v75 ^ 0x7B) + ((2 * v75) & 0xF7) - 123);
  v76 = STACK[0x788];
  LODWORD(v74) = LODWORD(STACK[0x788]) ^ v14;
  v77 = 0x13 % v74;
  LOBYTE(v70) = (byte_18CF26950[v77 & 0xF] ^ v11[v77] ^ byte_18CF4B8C0[v77 & 0xF] ^ byte_18CF35620[(v77 & 0xF) + 4] ^ (-79 * (v77 & 0xF)))
              + STACK[0x640];
  LOBYTE(v59) = (v70 ^ 0xF6) + ((2 * v70) & 0xEC) + 30;
  v11[v77] = byte_18CF268C0[v77 & 0xF] ^ (-59 * (v77 & 0xF)) ^ byte_18CF26A00[(v77 & 0xF) + 1] ^ byte_18CF4CE50[(v77 & 0xF) + 1] ^ ((v59 ^ 0xF2) + ((2 * v59) & 0xE4) - 6);
  v78 = 0x14 % v74;
  v79 = (v78 & 0xF) + 1;
  LOBYTE(v63) = byte_18CF26A00[v79] ^ byte_18CF268C0[v78 & 0xF];
  LOBYTE(v79) = byte_18CF4CE50[v79];
  v80 = -59 * (v78 & 0xF);
  v81 = (v63 ^ v11[v78] ^ v79 ^ v80) - 64;
  v11[v78] = v63 ^ v80 ^ v79 ^ ((v81 ^ 0xF7) + ((2 * v81) & 0xEF) + 9);
  v82 = 0x15 % v74;
  v83 = (v82 & 0xF) + 1;
  LOBYTE(v63) = byte_18CF26A00[v83];
  LOBYTE(v83) = byte_18CF4CE50[v83];
  LOBYTE(v63) = v63 ^ byte_18CF268C0[v82 & 0xF];
  LOBYTE(v78) = -59 * (v82 & 0xF);
  LOBYTE(v79) = (v63 ^ v11[v82] ^ v83 ^ v78) - 26;
  v11[v82] = v63 ^ v78 ^ v83 ^ ((v79 ^ 0x55) + ((2 * v79) & 0xAA) - 85);
  LODWORD(v82) = v76 ^ v14;
  v84 = 0x16 % (v76 ^ v14);
  v85 = (v84 & 0xF) + 1;
  LOBYTE(v83) = byte_18CF26A00[v85] ^ byte_18CF268C0[v84 & 0xF];
  LOBYTE(v85) = byte_18CF4CE50[v85];
  LOBYTE(v78) = -59 * (v84 & 0xF);
  LOBYTE(v79) = (v83 ^ v11[v84] ^ v85 ^ v78) - 95;
  v11[v84] = v83 ^ v78 ^ v85 ^ ((v79 ^ 0xA7) + ((2 * v79) & 0x4E) + 89);
  v86 = 0x17 % v82;
  LOBYTE(v78) = (byte_18CF26950[v86 & 0xF] ^ v11[v86] ^ byte_18CF4B8C0[v86 & 0xF] ^ byte_18CF35620[(v86 & 0xF) + 4] ^ (-79 * (v86 & 0xF)))
              + (v21 ^ 0xB5);
  v11[v86] = byte_18CF268C0[v86 & 0xF] ^ (-59 * (v86 & 0xF)) ^ byte_18CF26A00[(v86 & 0xF) + 1] ^ byte_18CF4CE50[(v86 & 0xF) + 1] ^ ((v78 ^ 0xF4) + ((2 * v78) & 0xE8) + 12);
  v87 = 0x18 % v82;
  v88 = (v87 & 0xF) + 1;
  LOBYTE(v83) = byte_18CF26A00[v88] ^ byte_18CF268C0[v87 & 0xF];
  LOBYTE(v88) = byte_18CF4CE50[v88];
  LOBYTE(v78) = -59 * (v87 & 0xF);
  LOBYTE(v79) = (v83 ^ v11[v87] ^ v88 ^ v78) - 118;
  v11[v87] = v83 ^ v78 ^ v88 ^ ((v79 ^ 0x1D) + ((2 * v79) & 0x3A) - 29);
  v89 = 0x19 % v82;
  v90 = (v89 & 0xF) + 1;
  LOBYTE(v79) = byte_18CF26A00[v90] ^ byte_18CF268C0[v89 & 0xF];
  LOBYTE(v90) = byte_18CF4CE50[v90];
  LOBYTE(v83) = -59 * (v89 & 0xF);
  LOBYTE(v78) = (v79 ^ v11[v89] ^ v90 ^ v83) - 125;
  v11[v89] = v79 ^ v83 ^ v90 ^ ((v78 ^ 0x6D) + ((2 * v78) & 0xDA) - 109);
  LODWORD(v89) = STACK[0x788];
  LODWORD(v83) = LODWORD(STACK[0x788]) ^ v14;
  v91 = 0x1A % v83;
  v92 = (v91 & 0xF) + 1;
  v93 = byte_18CF26A00[v92];
  LOBYTE(v92) = byte_18CF4CE50[v92];
  LOBYTE(v90) = -59 * (v91 & 0xF);
  LOBYTE(v79) = v93 ^ byte_18CF268C0[v91 & 0xF];
  LOBYTE(v78) = (v79 ^ v11[v91] ^ v92 ^ v90) + 118;
  v11[v91] = v79 ^ v90 ^ v92 ^ ((v78 ^ 0x3A) + ((2 * v78) & 0x74) - 58);
  v94 = 0x1B % v83;
  LOBYTE(v59) = byte_18CF26A00[(v94 & 0xF) + 1] ^ byte_18CF268C0[v94 & 0xF] ^ (-59 * (v94 & 0xF)) ^ byte_18CF4CE50[(v94 & 0xF) + 1];
  v11[v94] = v59 ^ ((((v59 ^ v11[v94]) - 122) ^ 0xAB) + ((2 * (v59 ^ v11[v94]) + 12) & 0x56) + 6);
  v95 = 0x1C % v83;
  v96 = (v95 & 0xF) + 2;
  v97 = byte_18CF26E60[v96];
  LOBYTE(v96) = byte_18CF38B50[v96];
  LOBYTE(v90) = 87 * (v95 & 0xF);
  LOBYTE(v79) = v97 ^ byte_18CF26940[v95 & 0xF];
  LOBYTE(v75) = (v79 ^ v11[v95] ^ v96 ^ v90) + 115;
  v11[v95] = v79 ^ v90 ^ v96 ^ ((v75 ^ 0x75) + ((2 * v75) & 0xEA) - 117);
  v98 = 0x1D % v83;
  v99 = LODWORD(STACK[0x668])
      + (byte_18CF26950[v98 & 0xF] ^ v11[v98] ^ byte_18CF4B8C0[v98 & 0xF] ^ byte_18CF35620[(v98 & 0xF) + 4] ^ (-79 * (v98 & 0xF)))
      + 67;
  v11[v98] = byte_18CF26940[v98 & 0xF] ^ (87 * (v98 & 0xF)) ^ byte_18CF26E60[(v98 & 0xF) + 2] ^ byte_18CF38B50[(v98 & 0xF) + 2] ^ ((v99 ^ 0x9D) + ((2 * v99) & 0x3A) + 99);
  v100 = 0x1E % (v89 ^ v14);
  v101 = (v100 & 0xF) + 2;
  v102 = byte_18CF26E60[v101];
  LOBYTE(v101) = byte_18CF38B50[v101];
  LOBYTE(v90) = 87 * (v100 & 0xF);
  LOBYTE(v79) = v102 ^ byte_18CF26940[v100 & 0xF];
  LOBYTE(v83) = (v79 ^ v11[v100] ^ v101 ^ v90) + 81;
  v11[v100] = v79 ^ v90 ^ v101 ^ (((((2 * v83) & 0x9F) + (v83 ^ 0xCF) + 117) ^ 0x10)
                                + ((2 * (((2 * v83) & 0x9F) + (v83 ^ 0xCF)) + 42) & 0x20)
                                - 84);
  v103 = 0x1F % (v89 ^ v14);
  v104 = (byte_18CF26950[v103 & 0xF] ^ v11[v103] ^ byte_18CF4B8C0[v103 & 0xF] ^ (-79 * (v103 & 0xF)) ^ byte_18CF35620[(v103 & 0xF) + 4])
       + (LODWORD(STACK[0x608]) ^ 0xFFFFFFB1);
  LOBYTE(v104) = (v104 ^ 0xE9) + ((2 * v104) & 0xD2) + 64;
  v105 = (v103 & 0xF) + 2;
  v106 = byte_18CF26E60[v105];
  v11[v103] = byte_18CF26940[v103 & 0xF] ^ (87 * (v103 & 0xF)) ^ v106 ^ byte_18CF38B50[v105] ^ ((v104 ^ 0xDF)
                                                                                              + ((2 * v104) & 0xBF)
                                                                                              - 8);
  return sub_18CAEA480(v89 ^ v14, 1353391120, 2139391791, 1544884126, v106, -1353391120, 118);
}

uint64_t sub_18CB10350()
{
  int v0;
  const char *v1;
  size_t v2;
  _BOOL4 v3;

  v2 = strlen(v1);
  v3 = malloc_type_malloc((((v0 + 45) - 0x1246301214006F8 + ((v0 + 779) | 0x110u)) & (2 * v2))+ (v2 ^ 0x7F6DCE7F6F5FFFDFLL)- 0x7F6DCE7F6F5FFFC2, 0xBDDA8B5EuLL) != 0;
  return ((uint64_t (*)(void))qword_1E2538EC0[(108 * v3) ^ v0])();
}

uint64_t sub_18CB103F0()
{
  unint64_t v0;
  uint64_t v1;
  int v2;

  STACK[0x688] = v0;
  LODWORD(STACK[0x690]) = umask(0);
  return ((uint64_t (*)(void))qword_1E2538EC0[(51 * (v1 - 0x7F6DCE7ED59C0C4CLL + 59 * (v2 ^ 0x545u) == 2579757280)) ^ v2])();
}

uint64_t sub_18CB10488@<X0>(uint64_t a1@<X2>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  _BOOL4 v12;

  *(_BYTE *)(v4 + v8 - 0x160E6E96EA222CD3) = *(_BYTE *)(v3 + v7 - 0x747201F4DF06898DLL);
  v10 = v5 - 0x7F7076D6225EB42CLL;
  v11 = (a2 < v6) ^ (v10 < v6);
  v12 = v10 < a2;
  if (v11)
    v12 = a2 < v6;
  return (*(uint64_t (**)(void))(a1 + 8 * ((!v12 * v2) ^ v9)))();
}

uint64_t sub_18CB10530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  const char *v4;
  uint64_t v5;
  int v7;

  strcpy((char *)&v4[v5 - 0x7F6DCE7F6F5FFFDFLL], "/Library");
  v7 = mkdir(v4, 0x1EDu);
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((30
                                * (((((528 * (v3 ^ 0x54F) - 471015201) & 0x1C131F7E) + 1476375916) & (2 * v7))
                                 + (v7 ^ 0xABFFDCF5) != -1409295116)) ^ v3)))();
}

uint64_t sub_18CB105E0()
{
  int v0;
  _BOOL4 v1;

  v1 = *__error() == v0 - 1039;
  return ((uint64_t (*)(void))qword_1E2538EC0[(v1 * ((v0 - 800) ^ 0x73)) ^ v0])();
}

uint64_t sub_18CB10624()
{
  uint64_t v0;
  const char *v1;
  void *v2;
  int v3;
  int v4;

  qmemcpy(v2, "/ProvenanceV2", 13);
  *(_BYTE *)(v0 + 249) = 0;
  v4 = mkdir(v1, 0x1EDu);
  return ((uint64_t (*)(void))qword_1E2538EC0[(547 * (((2 * v4) & 0x776B298E) + (v4 ^ 0xBBB594C7) == -1145727802)) ^ v3])();
}

uint64_t sub_18CB106A4()
{
  int v0;
  _BOOL4 v1;

  v1 = *__error() == 17;
  return ((uint64_t (*)(void))qword_1E2538EC0[(v1 * (v0 ^ 0x47E)) ^ v0])();
}

uint64_t sub_18CB106E4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = (v3 + 187487503) & 0xF4D327D0;
  *(_DWORD *)v0 = 1668509743;
  *(_WORD *)(v0 + 4) = 26926;
  *(_BYTE *)(v0 + 6) = 100;
  *(_BYTE *)(v2 + v4 - 0x7F6DCE7F6F6000C3 + v5) = 0;
  *(_BYTE *)(v2 + STACK[0x688]) = 0;
  umask(STACK[0x690]);
  free(v1);
  return ((uint64_t (*)(void))qword_1E2538EC0[(int)((((v5 + 100) ^ 0x53) - 296) | v5)])();
}

uint64_t sub_18CB10780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((1298 * ((((9 * (v7 ^ 0x1F1) - 1277) ^ (v6 == 0)) & 1) == 0)) ^ v7)))(a1, a2, a3, a4, a5, a6, 4294924388);
}

uint64_t sub_18CB107C4()
{
  const char *v0;
  int v1;
  uint64_t v2;
  int v3;

  umask(0x12u);
  v3 = open(v0, 289);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((124
                                          * ((int)(((2 * v3) & 0xEBEFFFE6) + (v3 ^ 0xF5F7FFF3) - 1979187187) <= (int)(((v1 + 368238712) & 0xEA0D1AFE) - 181))) ^ v1))
                            - 4))();
}

uint64_t sub_18CB10858@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  v2 = fcntl(a1 + 168296461, 64);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[(113
                                                           * ((((_DWORD)v2 == ((v1 + 17) ^ 0xC5)) ^ (v1 - 1)) & 1)) ^ v1]
                                          - 8))(v2);
}

uint64_t sub_18CB108BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * (int)(((((v7 - 619083101) & 0x24E674EF ^ 0xFFFFFE25) + v7 + 45) * (v6 == 0)) ^ v7)))(a1, a2, a3, a4, a5, a6, 4294924388);
}

uint64_t sub_18CB10904()
{
  int v0;
  _BOOL4 v1;

  v1 = *__error() == 2;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(v1 * ((v0 - 1144) ^ 0x157)) ^ (v0 - 1144)]
                            - ((v0 - 1891529167) & 0x70BE6F9B ^ 0x302)))();
}

uint64_t sub_18CB10960(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  const char *v9;
  int v10;
  uint64_t v11;

  v11 = open_dprotected_np(v9, 801, 4, 0);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[(113
                                                           * ((int)(((2 * v11) & 0xBFFA6BFA)
                                                                  + (v11 ^ 0x5FFD35FD)
                                                                  + (((v10 ^ 0x71) + 990413883) ^ 0x1B0A4EEC)) > (int)(((v10 ^ 0x71) + 990413883) & 0xC4F77BD5 ^ 0xFFFFFF3A))) ^ v10 ^ 0x71]
                                          - 8))(v11);
}

uint64_t sub_18CB10A0C()
{
  int v0;
  int v1;
  int v2;
  unint64_t v3;
  ssize_t v4;

  v3 = LODWORD(STACK[0x9D0]);
  v4 = write(v0 + v1 + 1741, (const void *)STACK[0x9C8], (v3 - 1232404166));
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1539
                                             * ((v4 ^ 0xBFFF26AEE231DEFDLL)
                                              + ((2 * v4) & 0x7FFE4D5DC463BDFALL)
                                              + ((v2 + 1979977354) & 0x89FBF3BA ^ 0x87069F6B467EB3A5)
                                              - ((v3 | ((unint64_t)(v3 < 0x4974FEC6) << 32))
                                               + 0x36F79922D021246CLL) == 0x100E2CF70F1A6C7ALL)) ^ v2]
                            - 8))();
}

uint64_t sub_18CB10AF8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;

  ftruncate(v3, a1 - 0x36F799231996263CLL + (v4 + 581));
  return ((uint64_t (*)(void))(qword_1E2538EC0[((((v4 + 581) ^ 0x5C7) + v1 + v2 >= 0) * (((v4 + 1412) | 0x84) ^ 0x68A)) ^ (v4 + 581)]
                            - 12))();
}

uint64_t sub_18CB10B90(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  v3 = close(a1);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[((v2 < v1 - 1741) * ((v1 - 1500) ^ 0x392)) ^ (v1 - 290)]
                                          - 8))(v3);
}

uint64_t sub_18CB10BD0@<X0>(int a1@<W8>)
{
  int v1;

  return ((uint64_t (*)(void))(qword_1E2538EC0[a1 ^ (1248 * (v1 == -42925))] - ((a1 - 1796027734) & 0x6B0D34FB ^ 0xF9)))();
}

uint64_t sub_18CB10C20()
{
  int v0;
  const char *v1;
  int v2;
  _BOOL4 v3;

  v2 = strlen(v1);
  v3 = CFURLCreateFromFileSystemRepresentation((CFAllocatorRef)*MEMORY[0x1E0C9AE00], (const UInt8 *)v1, (v2 ^ 0x6E7CFBDC) - 1853684700 + ((2 * v2) & 0xDCF9F7B8), 0) == 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(v3 * (((v0 + 25) | 0x41) + 111)) ^ v0]
                            - ((v0 + 2007225606) & 0x885C2B3F ^ 0x13FLL)))();
}

uint64_t sub_18CB10CC0(const __CFURL *a1)
{
  void *v1;
  mode_t v2;
  int v3;

  CFURLSetResourcePropertyForKey(a1, (CFStringRef)*MEMORY[0x1E0C9B4E8], (CFTypeRef)*MEMORY[0x1E0C9AE50], 0);
  CFRelease(a1);
  umask(v2);
  free(v1);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(((STACK[0x9C8] != 0) << 7) | ((STACK[0x9C8] != 0) << 10)) ^ ((((v3 - 58) | 0x26) ^ 0x53) - 154)]
                            - ((((((v3 - 58) | 0x26) ^ 0x53) - 154) ^ 0x607u)
                             + (((((v3 - 58) | 0x26) ^ 0x53u) - 1596698888) ^ 0xFFFFFFFF5F2BA96BLL))))();
}

void sub_18CB10DA0(void *a1)
{
  free(a1);
  JUMPOUT(0x18CA918B4);
}

uint64_t sub_18CB10DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, unint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  _BOOL4 v14;

  v14 = v10 < a6 || v8 + v9 + (((v12 ^ a7) + 527) ^ a8) < v10;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(v14 * v11) ^ v12] - 8))();
}

uint64_t sub_18CB10DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;

  v12 = 1755343967 * ((*(_DWORD *)(a3 + a4) ^ (v8 + v5)) & 0x7FFFFFFF);
  v13 = (v12 ^ HIWORD(v12)) * (v4 + 1755342966);
  LODWORD(v13) = byte_18CF27AB0[v13 >> 24] ^ *(unsigned __int8 *)(v8 + v5) ^ byte_18CF2A0D0[(v13 >> 24) + 2] ^ byte_18CF4E560[v13 >> 24] ^ v13 ^ (-95 * (v13 >> 24));
  *(_BYTE *)(v7 + v5) = *(_BYTE *)(v10 + v5) ^ (v13 - ((2 * v13) & 0x5A) - 83);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(((v4 + 25) ^ v6) * (v5 == 254)) ^ (v4 + 25)] - ((v4 + 25) ^ v11 ^ v9)))();
}

uint64_t sub_18CB11040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, unint64_t a8)
{
  return sub_18CB10DA8(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_18CB1104C()
{
  uint64_t v0;
  int v1;
  int v2;
  char *v3;
  char *v4;

  v2 = LODWORD(STACK[0x670]) + LODWORD(STACK[0x668]) - 101702587;
  v3 = (char *)&STACK[0xBB0] + v0 + 383;
  STACK[0x8A0] = STACK[0x660] + (v1 - 1180) + 1035;
  STACK[0x680] = (unint64_t)&STACK[0xBB0] + v0 + 319;
  sub_18CBC7AC0(byte_18CF4D590, (char *)&STACK[0xBB0] + v0 + 319, 0x40uLL);
  STACK[0x688] = (unint64_t)v3;
  v4 = sub_18CBC7AC0(byte_18CF3A5C7, v3, 0x40uLL);
  return ((uint64_t (*)(char *))(qword_1E2538EC0[v1 ^ (924 * ((v2 + 452649520) < 0xF8))]
                                         - ((v1 - 1231) | 0x4C1u)
                                         + 1215))(v4);
}

uint64_t sub_18CB110F8()
{
  int v0;
  int v1;
  uint64_t v2;
  _BYTE *v3;
  int v4;
  uint64_t v5;

  LODWORD(STACK[0x788]) = -289289346;
  *v3 = *(_BYTE *)(v2 + 0u % (v0 + v1 + 8));
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8 * ((43 * (((v4 + 1180939513) ^ 0x4663B9BDLL) == 319)) ^ v4))
                            - 8))();
}

uint64_t sub_18CB1119C@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  int v11;
  int v12;
  uint64_t (*v13)(void);

  v6 = *(unsigned __int8 *)(v4 + (v3 + a2 + 44) % 0x13Fu);
  v7 = (unsigned __int16)(v3
                        + 19264
                        - 319
                        * ((unsigned __int16)(((39651 * (unsigned __int16)(v3 + 19264)) >> 16)
                                                             + ((unsigned __int16)((v3
                                                                                  + 19264
                                                                                  - ((39651
                                                                                    * (unsigned __int16)(v3 + 19264)) >> 16)) & 0xFFFE) >> 1)) >> 8));
  v8 = __PAIR64__(v6 ^ 0xCu, (v6 ^ 0x20u) << 24) >> 29;
  v9 = *(unsigned __int8 *)(v4 + (v3 + a2) % 0x13Fu);
  HIDWORD(v10) = v9 ^ 4;
  LODWORD(v10) = (v9 ^ 0x28) << 24;
  v11 = ((v10 >> 27) ^ 0xFFFFFFE5)
      + ((2 * (v10 >> 27)) & 0xFFFFFFCA)
      + (*(unsigned __int8 *)(v4 + v7) ^ 0x34 ^ (v8 - ((v8 << ((a2 + a1 + 94) ^ 0x20)) & 0x30) + 24))
      + 27;
  HIDWORD(v10) = *(unsigned __int8 *)(v4 + (v3 + a2 - 98) % 0x13Fu);
  LODWORD(v10) = (HIDWORD(v10) ^ 0x2C) << 24;
  v12 = ((v10 >> 25) ^ 0xFFFFFFC1) - ((2 * (v10 >> 25)) & 0x7C) + (v11 ^ 0x6A) + 1;
  LOBYTE(v11) = v12 + ((2 * v11) & 0xD4) - 2 * ((v12 + ((2 * v11) & 0xD4) + 20) & 0x2D ^ v12 & 1);
  v13 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a1 ^ (v2 + 2196) ^ (573 * (((v3 + 1 - a1) | (a1 - (v3 + 1))) >= 0))))
                          - 8);
  *(_BYTE *)(v4 + v7) = v11;
  return v13();
}

void sub_18CB11310()
{
  JUMPOUT(0x18CB1131CLL);
}

uint64_t sub_18CB1139C(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((2 * (((v1 + 8 == a1) ^ (v2 + 92)) & 1)) & 0xF7 | (8 * (((v1 + 8 == a1) ^ (v2 - 932)) & 1))) ^ v2))
                            - 4))();
}

void sub_18CB11454()
{
  unint64_t v0;

  STACK[0x8A0] = 0;
  STACK[0x988] = v0;
  STACK[0xA18] = STACK[0x688];
  JUMPOUT(0x18CB11478);
}

uint64_t sub_18CB11638@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 - 1171) ^ ((2 * (a1 == 0)) | ((a1 == 0) << 6)))) - 4))();
}

uint64_t sub_18CB11664()
{
  int v0;
  uint64_t v1;

  byte_1EE0605B0 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v0 - 1153) | 0x410 | (35 * (*(char *)(STACK[0x650] + 1) < 2))))
                            - ((((v0 - 1153) | 0x410) ^ 0x696u)
                             + 149)
                            + 347))();
}

uint64_t sub_18CB116C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((((v7 ^ 0x792) - 426) * (a7 == 1)) ^ v7)))(a1, a2, a3, a4, a5, a6, 4294924380);
}

void sub_18CB116E8()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  v2 = v0 - 1539;
  v3 = 1189216979 * ((1484279903 - ((v1 - 192) | 0x5878505F) + ((v1 - 192) | 0xA787AFA0)) ^ 0x896CA366);
  v4 = v2 + 1510;
  v5 = v2 + LODWORD(STACK[0x81C]) - 672224850 + v3;
  *(_QWORD *)(v1 - 176) = STACK[0x650];
  *(_DWORD *)(v1 - 184) = v5;
  *(_DWORD *)(v1 - 192) = v4 ^ v3;
  sub_18CB69CB8(v1 - 192);
  JUMPOUT(0x18CA918B4);
}

uint64_t sub_18CB11770@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 - 1086) ^ 0x2F5) * (a1 != 0)) ^ (v1 - 801))))();
}

void sub_18CB11798()
{
  JUMPOUT(0x18CA918B4);
}

uint64_t sub_18CB117C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((639 * (a7 == ((v7 + 3) ^ 0xCF))) ^ v7))
                                                                                                - 4))(a1, a2, a3, a4, a5, a6, 4294924380);
}

uint64_t sub_18CB117FC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  if (*(unsigned __int8 *)(STACK[0x650] + 2) == (v2 ^ 0xCC))
    v4 = v0;
  else
    v4 = -42018;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)(((v4 == 0) * ((v1 + 983582453) & 0xC55FBBFD ^ 0x2F8)) ^ v1))
                            - 4))();
}

uint64_t sub_18CB11854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  _BOOL4 v14;

  v8 = (((a7 ^ 0x570) - 1390) ^ 0xFFFFF15F)
     + ((*(unsigned __int8 *)(STACK[0x650] + 3) - ((2 * *(unsigned __int8 *)(STACK[0x650] + 3)) & 0x1A)) << 8)
     - 25344;
  v9 = ((v8 ^ 0xFFFF8D00) - 27904 + (~(2 * v8) | 0xFFFFDBFF)) ^ 0xFFFF92FF | (*(unsigned __int8 *)(STACK[0x650] + 4)
                                                                            + 8690
                                                                            + (~(2
                                                                               * *(unsigned __int8 *)(STACK[0x650] + 4)) | 0xFFFFFE1D)) ^ 0x21F1;
  v10 = (v9 - ((2 * v9) & 0x3076) - 26565) ^ 0x983B;
  v11 = ((2 * v10) & 0x1AF6A) + ((unsigned __int16)v10 ^ 0xFFEBD7B5) + 776186655;
  v12 = LODWORD(STACK[0x81C]) - 372386224;
  v13 = (v12 < 0x2E2F82D4) ^ (v11 < 0x2E2F82D4);
  v14 = v11 < v12;
  if (v13)
    v14 = v12 < 0x2E2F82D4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * ((1716 * v14) ^ a7))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 4294925278);
}

uint64_t sub_18CB11970()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;

  v3 = STACK[0x650] + 5;
  v4 = 1189216979 * (((v2 - 192) & 0x97A295A5 | ~((v2 - 192) | 0x97A295A5)) ^ 0x46B6669C);
  *(_DWORD *)(v2 - 192) = (v0 + 1361) ^ v4;
  *(_DWORD *)(v2 - 184) = v4 + 476348231 + v1;
  *(_QWORD *)(v2 - 176) = v3;
  sub_18CB69CB8(v2 - 192);
  return ((uint64_t (*)(void))qword_1E2538EC0[((*(_DWORD *)(v2 - 188) == ((v0 + 1409116768) & 0xAC0297FD) - 957)
                                            * ((v0 + 1390) ^ 0x193)) ^ v0])();
}

uint64_t sub_18CB11A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * ((1443 * (*(unsigned __int8 *)(STACK[0x650] + (v7 + 1321040)) == (((v8 + 18) | 5) ^ (v8 + 16)))) ^ v8))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 4294925278);
}

uint64_t sub_18CB11A80()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  __int16 v6;
  int v7;
  _BOOL4 v8;

  v5 = ((v3 + 1527115432) | ((unint64_t)(v3 + 1527115432 < (((v0 & 0x5301CEFA) + 1539) ^ 0x5A2u)
                                                                              + 1525793512) << 32))
     + STACK[0x650]
     - 1525794391;
  v6 = (((*(unsigned __int8 *)v5 - ((2 * *(unsigned __int8 *)v5) & 0xB8)) << 8) + 23552) ^ 0x5C00;
  LOWORD(v5) = (v6 - ((2 * v6) & 0xB200) - 9983) ^ 0xD901 | (*(unsigned __int8 *)(v5 + 1)
                                                           - ((2 * *(unsigned __int8 *)(v5 + 1)) & 0x196)
                                                           + 2251) ^ 0x8CB;
  LODWORD(v5) = (unsigned __int16)(v5 - ((2 * v5) & 0x2810) + 5128) ^ 0x1408;
  LODWORD(v5) = ((v2 + 3922) & (2 * v5)) + (v5 ^ 0x7FDDDF5E) - 429163034;
  v7 = ((v4 + 568832192) < 0x66495D44) ^ (v5 < 0x66495D44);
  v8 = v5 < v4 + 568832192;
  if (v7)
    v8 = (v4 + 568832192) < 0x66495D44;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1283 * v8) ^ v0 & 0x5301CEFAu)) - 4))();
}

uint64_t sub_18CB11BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  _BOOL4 v12;

  v12 = v9 == 2145247070 || STACK[0x650] + v10 + a7 + (v7 ^ 0x230u) == 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((210 * v12) ^ v7))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 4294925273);
}

uint64_t sub_18CB11C24()
{
  int v0;
  int v1;
  unsigned int v2;
  void *v3;

  v2 = ((v0 - 2145247070) & 0xFFFFFFF0 ^ 0x37ABB37F) + ((2 * (v0 - 2145247070)) & 0x6F5766E0);
  LODWORD(STACK[0x9D0]) = v2 + 298404718;
  v3 = malloc_type_malloc(v2 - 933999448, 0xEE36C167uLL);
  STACK[0x9C8] = (unint64_t)v3;
  return ((uint64_t (*)(void))qword_1E2538EC0[(1124 * (v3 != 0)) ^ v1])();
}

uint64_t sub_18CB11CA4(uint64_t a1)
{
  int v1;
  __int16 v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;

  *(_WORD *)a1 = 513;
  *(_BYTE *)(a1 + 2) = ((unsigned __int16)(v2 - ((((v5 - 317) | 0x490) ^ 0xFBF2) & (2 * v2 - 26334)) - 13259) >> 8) ^ 0x7F;
  *(_BYTE *)(a1 + 3) = (v2 - ((((v5 - 61) | 0x90) ^ 0xF2) & (2 * v2 + 34)) + 53) ^ 0xA4;
  *(_BYTE *)(a1 + 4) = ((unsigned __int16)(v2 - v1 - ((2 * (v2 - v1) + 6110) & 0x2718) - 16517) >> 8) ^ 0x93;
  *(_BYTE *)(a1 + 5) = (v2 - v1 - ((2 * (v2 - v1) - 34) & 0x18) + 123) ^ 0x8C;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((v5 + 1085) ^ (42
                                              * (((v1 + 1341028784) | ((unint64_t)(v3 < v4) << 32)) != 3486275854)))))();
}

uint64_t sub_18CB11DB0(uint64_t a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  *(_BYTE *)(v6 + a1 + 601 * (v1 ^ 0x59Eu) - 0x1D2DE0147D34107ELL) = *(_BYTE *)(v5 + v8 - 0x513F94EB6E173DBALL);
  v10 = v3 < v2;
  if (v10 == v7 - 0x2242D5E3F9160B8ALL < v2)
    v10 = v7 - 0x2242D5E3F9160B8ALL < v3;
  return (*(uint64_t (**)(void))(v9 + 8 * ((v10 * v4) ^ v1)))();
}

uint64_t sub_18CB11E48@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((440
                                          * (((((v1 - 808) ^ 0x19Bu) + 0x7FE5A3577FF73D8ELL) ^ (a1 + 1211247599))
                                           - 0x7FE5A3577043E03ELL
                                           + (((uint64_t)(a1 + 1211247599) << (((v1 - 40) | 0x25) ^ 0xAEu)) & 0xFFCB46AEFFEE7B3ELL) == 263413089)) ^ v1))
                            - 8))();
}

void sub_18CB11EEC()
{
  int v0;
  int v1;

  LODWORD(STACK[0x6F0]) = ((261 * (v0 ^ 0x14)) ^ 0xE8A52EE3) + v1;
  JUMPOUT(0x18CB1592CLL);
}

uint64_t sub_18CB11F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v7;
  uint64_t v8;

  byte_1EE0605B0 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((LODWORD(STACK[0x9E0]) != 2038988232) * ((v7 - 732) ^ 0x281)) | a7))
                                                                                                - 8))(a1, a2, a3, a4, a5, a6, 4294925273);
}

uint64_t sub_18CB11F60()
{
  int v0;
  int v1;

  v1 = strcmp("mobactivationd", (const char *)*MEMORY[0x1E0C80BA8]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1650
                                             * (((((v0 ^ 0x17E) + 409) ^ (((2 * v1) & 0x9ED897BA) + (v1 ^ 0xCF6C4BDD) == -814986275)) & 1) == 0)) ^ v0]
                            - 4))();
}

uint64_t sub_18CB11FE0()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("mobileactivationd", *v0);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(620
                                             * ((((v1 - 409) ^ 0x7F9D9D3D) & (2 * v2))
                                              + ((((v1 - 319630379) & 0x130D2BF3) - 1076966424) ^ v2) != -1076965415)) ^ v1]
                            - 12))();
}

uint64_t sub_18CB1205C()
{
  const char **v0;
  unsigned int v1;
  int v2;

  v2 = strcmp("findmydeviced", *v0);
  return ((uint64_t (*)(void))(qword_1E2538EC0[((((v2 << ((v1 + 59) ^ 0x2D)) & 0x9EF957FA) + (v2 ^ 0x4F7CABFD) != 1333570557)
                                             * ((v1 ^ 0x17E) + 733)) ^ v1]
                            - 4))();
}

uint64_t sub_18CB120D4()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("findmydeviced-nano-support", *v0);
  return ((uint64_t (*)(void))qword_1E2538EC0[(1128
                                            * (((((v1 - 32) | 0x11) ^ 0xBEFA56A3) & (2 * v2)) + (v2 ^ 0xDF7D2BDF) != (v1 ^ 0xDF7D2AF3))) ^ v1])();
}

uint64_t sub_18CB12148()
{
  const char **v0;
  int v1;
  int v2;
  int v3;

  v3 = strcmp("identityservicesd", *v0);
  return ((uint64_t (*)(void))qword_1E2538EC0[(49
                                            * ((((31 * (v1 ^ 0x13D)) ^ 0x9FDA945E) & (2 * v3))
                                             + ((((v1 + 1854351842) & 0x9178D78F) + 1340950864) ^ v3) == (v2 | 0x4FED4950))) ^ v1])();
}

uint64_t sub_18CB121D8()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("amsaccountsd", *v0);
  return ((uint64_t (*)(void))(qword_1E2538EC0[((((2 * v2) & 0xBEF917FE) + (v2 ^ 0xDF7C8BFF) == -545485825)
                                             * ((v1 - 978) ^ 0x412 ^ ((v1 - 978) | 0x281) ^ 0x682)) | v1]
                            - 4))();
}

uint64_t sub_18CB12248()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("AppStore", *v0);
  return ((uint64_t (*)(void))(qword_1E2538EC0[((((2 * v2) & 0x7FFB5FF2) + (v2 ^ 0xBFFDAFF9) != -1073893383)
                                             * ((v1 ^ 0x693) - 653)) ^ v1]
                            - 8))();
}

uint64_t sub_18CB122A4()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("itunesstored", *v0);
  return ((uint64_t (*)(void))(qword_1E2538EC0[((((2 * v2) & 0x3EB957FA) + ((v1 + 257832897) ^ v2 ^ 0x10029020) != 526167037)
                                             * ((v1 - 397) ^ 0x18C)) ^ v1]
                            - 8))();
}

uint64_t sub_18CB12318()
{
  const char **v0;
  int v1;
  int v2;
  int v3;
  int v4;

  v3 = strcmp("StoreKitUIService", *v0);
  v4 = ((2 * v3) & 0x1EBC77BA) + (v3 ^ (v1 + 1052));
  return ((uint64_t (*)(void))(qword_1E2538EC0[v2 ^ (v1 + 2100) ^ (103
                                                                * ((((v4 - v2) | (v2 - v4)) >> ((v2 - v1 + 16) ^ 0x33)) & 1))]
                            - 12))();
}

uint64_t sub_18CB12394()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("appstored", *v0);
  return ((uint64_t (*)(void))qword_1E2538EC0[(1579
                                            * (((v2 << ((-125 * (((v1 - 36) | 0x20) ^ 0x2D)) ^ 0x8E)) & 0x5FDB7FB6)
                                             + (v2 ^ 0xAFEDBFDB) != -1343373349)) ^ v1])();
}

uint64_t sub_18CB12408()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("Fitness", *v0);
  return ((uint64_t (*)(void))(qword_1E2538EC0[((((2 * v2) & 0x3FF9F7F2) + (v2 ^ 0x9FFCFBF9) != -1610810375)
                                             * ((v1 ^ 0x34) - 248)) ^ v1]
                            - 12))();
}

uint64_t sub_18CB12468()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("appinstallationmetricsd", *v0);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(355
                                             * (((5 * (v1 ^ 0x49F) + 1333603696) ^ v2) + ((2 * v2) & 0x9EFA5FFE) != 1333604351)) ^ v1]
                            - 8))();
}

uint64_t sub_18CB124E0()
{
  const char **v0;
  int v1;
  int v2;
  int v3;
  int v4;

  v3 = strcmp("attributionkitd", *v0);
  v4 = ((2 * v3) & 0x1E9AFFB6) + (v3 ^ (v2 + 1044));
  return ((uint64_t (*)(void))qword_1E2538EC0[(v2 + ((v1 + 1890746543) | 0x205) + 161) ^ v1 ^ (634
                                                                                            * (((v4 - v1) | (v1 - v4)) >> 31))])();
}

uint64_t sub_18CB12554()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("test", *v0);
  return ((uint64_t (*)(void))(qword_1E2538EC0[((((2 * v2) & 0x1EBD57BE) + (v2 ^ 0xF5EABDF) != 257862623)
                                             * (131 * (((v1 + 1890746825) | 0x219) ^ 0x3B8) + 20)) ^ (v1 + 1890747469)]
                            - 12))();
}

uint64_t sub_18CB125DC()
{
  const char **v0;
  int v1;
  int v2;

  v2 = strcmp("ProvenanceCombo", *v0);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1941
                                             * (((2 * v2) & 0x5EBD97FA)
                                              + ((((v1 + 1003436850) & 0xC430C39F) + 794741102) ^ v2) == 794741757)) ^ v1]
                            - ((v1 + 784) ^ 0x6C1)))();
}

uint64_t sub_18CB12664()
{
  int v0;
  void *v1;

  v1 = malloc_type_malloc(0x98uLL, 0x10300401EA5018FuLL);
  STACK[0xA10] = (unint64_t)v1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1868
                                             * (((v1 == 0) ^ (75 * ((v0 + 78) & 0xEF ^ 0xCF) + 1)) & 1)) ^ v0]
                            - 8))();
}

uint64_t sub_18CB126E0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  unint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = a2 < v2;
  *(_BYTE *)(a1
           + ((v4 - 1497249851) | ((unint64_t)((v4 - 1497249851) < 0x269FA71D) << 32))
           - 647997213) = 0;
  if (v6 == v2 > 0xFB35D62)
    v6 = a2 > 0xFB35D62;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((!v6 * ((v3 - 1301005328) & 0x4D8BC271 ^ 0x2B5)) ^ v3)) - 12))();
}

void sub_18CB1279C()
{
  JUMPOUT(0x18CB1274CLL);
}

uint64_t sub_18CB127A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  int v4;
  char *v5;
  FILE *v6;

  v5 = &v3[v1 + v0];
  *((_QWORD *)v5 + 59) = 0x7972617262694C2FLL;
  qmemcpy(&v5[(v4 - 409224070) & 0x186443EA], "/ProvenanceV2", 13);
  *(_QWORD *)&v5[v4 - 75 + 189] = 0x6975732E6373702FLL;
  v5[501] = 0;
  free(v2);
  v6 = fopen(v3, "rb");
  free(v3);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1017 * (v6 != 0)) ^ v4] - 8))();
}

uint64_t sub_18CB12874()
{
  FILE *v0;
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;

  fseek(v0, 0, 2);
  v3 = MEMORY[0x18D789F78](v0);
  v4 = (((v1 + 22349792) | 0x40200002) ^ 0xFEAE175F) + v3 - ((2 * v3) & 0x7FB63C92) - 4;
  v5 = ((v1 + 22349792) ^ 0x7EC73592 ^ (2 * v4) & 0xFFD37FAA) + (v4 ^ 0xC032A19C);
  LODWORD(STACK[0x78C]) = v5 - 92276240;
  v6 = fseek(v0, 0, 0);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((519 * (v5 - 2146025429 > 0x31)) | v1)))(v6);
}

uint64_t sub_18CB12954()
{
  uint64_t v0;
  int v1;
  size_t v2;
  void *v3;
  void *v4;
  BOOL v5;
  int v6;

  v3 = malloc_type_malloc(v2, 0x33D658CuLL);
  STACK[0x7B8] = (unint64_t)v3;
  v4 = malloc_type_malloc(v2, 0x293AA273uLL);
  STACK[0x6B8] = (unint64_t)v4;
  if (v3)
    v5 = v4 == 0;
  else
    v5 = 1;
  v6 = !v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((v6 * (v1 - 923)) ^ v1)) - 12))();
}

uint64_t sub_18CB129C0()
{
  uint64_t v0;
  FILE *v1;
  void *v2;
  int v3;
  size_t v4;
  int v5;

  v5 = fread(v2, 1uLL, v4, v1);
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((1437 * ((_DWORD)v4 == ((v5 - ((2 * v5) & 0x544B72D2) - 1440368279) ^ 0xAA25B969))) ^ (v3 - 626))))();
}

uint64_t sub_18CB12A44()
{
  uint64_t v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((542
                                * (((v2 - 92276231) & 0xF) == (((v2 - 92276231) << ((v1 - 25) & 0xFA ^ 0x13)) & ((v1 ^ 0x466) - 1356)))) ^ v1)))();
}

uint64_t sub_18CB12AB4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((56
                                          * ((v2 | ((unint64_t)(v2 < 0x7A69B9C5) << 32))
                                           - 956642588 != ((a1 - 989165592) & 0x3AF573F1) + 1097106297)) ^ a1))
                            - 12))();
}

uint64_t sub_18CB12B4C()
{
  int v0;
  int v1;
  FILE *v2;
  void *v3;
  int v4;
  uint64_t v5;

  v4 = v0 + 1098188770;
  free(v3);
  STACK[0x7B8] = 0;
  v5 = fclose(v2);
  LODWORD(STACK[0x874]) = v1;
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[(240 * (v4 ^ 0x41750910)) | 9]
                                          - ((240 * (v4 ^ 0x41750910) - 1943259665) & 0x73D3CEFD)
                                          + 1733))(v5);
}

uint64_t sub_18CB12BA4@<X0>(int a1@<W8>)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;

  v8 = v2 < v1;
  *(_BYTE *)(v4 + v7 - 0x63D1D571F12D6FACLL) = *(_BYTE *)(v3 + v6 - 0x5625C435AD2988E2);
  if (v8 == v5 - 0x46735A98979AB355 < v1)
    v8 = v5 - 0x46735A98979AB355 < v2;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(v8 * ((a1 ^ 0x466) - 248)) ^ a1] - 12))();
}

uint64_t sub_18CB12C40@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  _BOOL4 v3;

  v2 = ((v1 - 365) ^ 0x562) * a1;
  STACK[0x7F0] = 1;
  v3 = container_system_group_path_for_identifier() == 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(v3 * (v2 ^ 0xC5)) | (v1 - 365)] - ((v1 - 1430) ^ 0x133)))();
}

uint64_t sub_18CB12CA8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * ((1928 * (STACK[0x7F0] == (((v0 - 247) | 0x124u) ^ 0x165))) ^ v0)))();
}

uint64_t sub_18CB12CE4()
{
  int v0;
  int v1;
  uint64_t v2;
  io_object_t v3;
  unsigned int v4;
  uint64_t v5;

  v4 = (v0 + 1910899623) & 0x8E19FFEF;
  *(_DWORD *)(v2 + 2540) = (v4 ^ 0x6F7EBB30)
                         + (LODWORD(STACK[0x6B4]) ^ 0xD7E5FFBB)
                         + ((2 * LODWORD(STACK[0x6B4])) & 0xAFCBFF76);
  IOObjectRelease(v3);
  v5 = IOObjectRelease(STACK[0x6CC]);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[(1269
                                                           * (*(_DWORD *)(v2 + 2540) != v1
                                                                                      + ((((v4 - 743550672) & 0x2C51A9EE)
                                                                                        - 424) | 0x30B)
                                                                                      - 847)) ^ (v4 - 743550672) & 0x2C51A9EE]
                                          - 4))(v5);
}

uint64_t sub_18CB12D34(double a1)
{
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(double *)(v1 + v4) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 == 0) * v3) | v2)) - 4))();
}

uint64_t sub_18CB12D5C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (473 * (v0 != v2))))
                            - ((v1 + 1058) ^ 0xFFFFFFFFFFFFF92FLL)
                            - ((v1 + 1393170451) & 0xACF5E567)))();
}

uint64_t sub_18CB12DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  v13 = a6 + 1;
  v14 = (a6 + v7);
  *(_BYTE *)(v11 + (a5 + v9)) = *(_BYTE *)(v10 + v14) ^ *((_BYTE *)&unk_18CF26890 + (v14 & 0xF)) ^ byte_18CF4BCE0[(v14 & 0xF) + 3] ^ byte_18CF4F810[(v14 & 0xF) + 2] ^ (25 * (v14 & 0xF)) ^ 0xB1;
  return ((uint64_t (*)(_BYTE *, uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v12
                                                                                 + 8
                                                                                 * ((732 * (v13 + v7 < v8)) ^ (307 * (a7 ^ 0x614))))
                                                                     - 12))(byte_18CF4BCE0, 1540, byte_18CF4F810, 25);
}

void sub_18CB12E48()
{
  JUMPOUT(0x18CB12DE0);
}

uint64_t sub_18CB12E58(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unsigned __int8 *v15;
  int v16;
  unint64_t v17;

  v15 = (unsigned __int8 *)(*(_QWORD *)(v11 + 8)
                          + (int)((v8 ^ 0x399)
                                + ((((v8 - 758) | 5) + 2 * a2 + 1965792619) ^ 0xED7CEBDB)
                                + ((2 * (((v8 - 758) | 5) + 2 * a2 + 1965792619)) & 0xDAF9D7B4)
                                + 310580150));
  v16 = *v15;
  v17 = ((((v15 ^ *(_DWORD *)(v10 + a1)) & 0x7FFFFFFF) * v9) ^ ((((v15 ^ *(_DWORD *)(v10 + a1)) & 0x7FFFFFFF)
                                                                             * v9) >> 16))
      * v9;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1390
                                             * (v16 != (*(_BYTE *)((v17 >> 24) + v12 + 3) ^ *(_BYTE *)(a8 + (v17 >> 24)) ^ *(_BYTE *)((v17 >> 24) + v13 + 2) ^ v17 ^ (BYTE3(v17) * v14)))) ^ v8]
                            - 8))();
}

uint64_t sub_18CB12F24(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  char v17;
  unint64_t v18;

  v16 = (char *)(a7 + (v9 ^ 0x7B6BBF6F) - 2070658927 + (((a4 ^ 0x30F) - 153650308) & v11));
  v17 = *v16;
  LODWORD(v16) = ((v16 ^ v8) & 0x7FFFFFFF) * (v10 + a4 + 1630 - 1741);
  v18 = (v16 ^ (v16 >> 16)) * v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15
                                        + 8
                                        * ((199
                                          * ((char)(*(_BYTE *)(a8 + (v18 >> 24)) ^ v17 ^ *(_BYTE *)((v18 >> 24) + v12 + 3) ^ *(_BYTE *)((v18 >> 24) + v13 + 2) ^ v18 ^ (BYTE3(v18) * v14)) > 47)) ^ a4))
                            - 8))();
}

uint64_t sub_18CB12FDC(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a5 ^ (244 * (a3 < 0x3Au)))) - (((a5 - 787) | 0x22u) ^ 0x67)))();
}

uint64_t sub_18CB13028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;

  v13 = (_BYTE *)(a7 + (int)((v8 ^ 0x775DD5FF) + ((a5 - 288) | 0x400) + ((2 * v8) & 0xEEBBABFC) - 2002639934));
  v14 = ((((v13 ^ v7) & 0x7FFFFFFF) * v9) ^ ((((v13 ^ v7) & 0x7FFFFFFF) * v9) >> 16)) * v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * (((char)(v14 ^ *v13 ^ *(_BYTE *)(v10 + (v14 >> 24)) ^ *(_BYTE *)(v11 + (v14 >> 24) + 2) ^ *(_BYTE *)(a6 + (v14 >> 24)) ^ (-95 * BYTE3(v14))) < 48) | (a5 - 490)))
                            - 8))();
}

uint64_t sub_18CB131EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((39
                                          * ((char)(a3 ^ a7 ^ *(_BYTE *)(a8 + v12) ^ (v12 * v13) ^ *(_BYTE *)(v11 + v8) ^ *(_BYTE *)(v10 + ((v9 - 1339) ^ 0x106) + v12)) > (char)(((v9 - 65) & 0x7B) - 27))) ^ (v9 - 1339)))
                            - ((v9 - 2077890389) & 0x7BDA11FE)
                            + 230))();
}

uint64_t sub_18CB13280@<X0>(unsigned __int8 a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  if (a1 >= (((v2 + 5) & 0xDD) - 102))
    v5 = 1085724678;
  else
    v5 = v1 - 242230317;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((226
                                               * (((((v2 - 1669636603) & 0x6384A7DD ^ 0x13193E11) + v3) & (((((v2 - 1669636603) & 0x6384A7DD) - 1362) ^ 0x3F492682u) + v5)) >> 31)) | (((v2 - 1669636603) & 0x6384A7DD) - 1480)))
                            - 4))();
}

uint64_t sub_18CB13444@<X0>(int a1@<W1>, uint64_t a2@<X5>, char a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  unint64_t v13;

  v11 = (16 * v6 - (((((v8 ^ 0x65) + 87) & 0xF6 ^ 0x76) + 32 * v6) & 0x40) + 107) ^ 0xAB | (a3 - 7);
  v12 = (_BYTE *)(v7 + a1 - 1164587208);
  v13 = ((((v12 ^ v3) & 0x7FFFFFFF) * v5) ^ ((((v12 ^ v3) & 0x7FFFFFFF) * v5) >> 16)) * v5;
  *v12 = v13 ^ (-95 * BYTE3(v13)) ^ *(_BYTE *)(v10 + (v13 >> 24)) ^ *(_BYTE *)((v13 >> 24) + v4 + 2) ^ *(_BYTE *)(a2 + (v13 >> 24)) ^ (v11 + (((v8 ^ 0x65) - 59) & 0x97) - ((2 * v11) & 0x22) + 12) ^ 0x11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (v8 ^ 0x465 ^ (350 * ((a1 - 1164587207) > 0x13))))
                            - 8))();
}

uint64_t sub_18CB13564(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_18CB12E58(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_18CB13570(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((a3 - 1207662886) & 0x47FB7BBF) + 215) * (LODWORD(STACK[0x680]) == 0)) ^ a3))
                            - (a3 + 118)
                            + 375))();
}

uint64_t sub_18CB135B4@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1706 * (*(_QWORD *)(v1 + 8) != 0)) ^ a1))
                            - (((a1 - 727) | 0x605) ^ 0x6C1)))();
}

uint64_t sub_18CB135EC(void *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  free(a1);
  *(_QWORD *)(v1 + 8) = v3;
  *(_DWORD *)(v1 + 16) = 1990266993;
  *(_DWORD *)v1 = 65;
  STACK[0x8C0] = 1;
  v4 = (uint64_t (*)(void))(qword_1E2538EC0[((container_system_group_path_for_identifier() != 0)
                                          * (((v2 - 1229) | 0x423) ^ 0x2B1)) ^ (v2 - 1362)]
                         - ((v2 - 1261) ^ 0x1E8));
  return v4();
}

uint64_t sub_18CB1360C()
{
  int v0;
  void *v1;
  int v2;
  uint64_t v3;
  int v4;

  v4 = v0;
  free(v1);
  LODWORD(STACK[0x874]) = 546355592;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v4 == 0) | (8 * (v4 == 0)) | v2 ^ 0x9B))
                            - (((v2 ^ 0x9B) - 1943259665) & 0x73D3CEFD)
                            + 1733))();
}

uint64_t sub_18CB13634()
{
  LODWORD(STACK[0x888]) = 173755484;
  return sub_18CB13644();
}

void sub_18CB13644()
{
  sub_18CA8C694();
  JUMPOUT(0x18CB1366CLL);
}

uint64_t sub_18CB13730()
{
  int v0;
  unsigned int v1;
  char *v2;
  CFStringEncoding SystemEncoding;
  _BOOL4 v4;

  v1 = v0 & 0x9E96CF67;
  v2 = off_1EE0569E0;
  LOBYTE(STACK[0xB99]) = (((v0 & 0x67) + 74) ^ 0x97 ^ (((v0 & 0x67) + 29) | 0x20)) + *off_1EE0569E0;
  LOBYTE(STACK[0xB9A]) = v2[1] - 102;
  LOBYTE(STACK[0xB9B]) = v2[2] - 102;
  LOBYTE(STACK[0xB9C]) = v2[3] - 102;
  LOBYTE(STACK[0xB9D]) = v2[4] - 102;
  LOBYTE(STACK[0xB9E]) = v2[5] - 102;
  LOBYTE(STACK[0xB9F]) = v2[6] - 102;
  LOBYTE(STACK[0xBA0]) = v2[7] - 102;
  LOBYTE(STACK[0xBA1]) = v2[8] - 102;
  LOBYTE(STACK[0xBA2]) = v2[9] - 102;
  LOBYTE(STACK[0xBA3]) = v2[10] - 102;
  LOBYTE(STACK[0xBA4]) = v2[11] - 102;
  LOBYTE(STACK[0xBA5]) = v2[12] - 102;
  LOBYTE(STACK[0xBA6]) = v2[13] - 102;
  LOBYTE(STACK[0xBA7]) = v2[14] - 102;
  LOBYTE(STACK[0xBA8]) = v2[15] - 102;
  LOBYTE(STACK[0xBA9]) = v2[16] - 102;
  LOBYTE(STACK[0xBAA]) = v2[17] - 102;
  LOBYTE(STACK[0xBAB]) = v2[18] - 102;
  LOBYTE(STACK[0xBAC]) = v2[19] - 102;
  LOBYTE(STACK[0xBAD]) = v2[20] - 102;
  LOBYTE(STACK[0xBAE]) = v2[21] - 102;
  LOBYTE(STACK[0xBAF]) = off_1EE0569E0[22] - 102;
  SystemEncoding = CFStringGetSystemEncoding();
  v4 = CFStringCreateWithCString(0, (const char *)&STACK[0xB99], SystemEncoding) != 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1428 * v4) ^ v1] - 12))();
}

uint64_t sub_18CB138B4()
{
  int v0;
  _BOOL4 v1;

  v1 = MGCopyAnswer() != 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(2023 * v1) ^ v0] - 12))();
}

uint64_t sub_18CB138E8()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  STACK[0x668] = v1;
  STACK[0x8A0] += 64;
  v3 = STACK[0x8E0];
  STACK[0x640] = STACK[0x8E0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((2 * (v3 != 0)) | (4 * (v3 != 0))) ^ (v0 + 627))) - 8))();
}

uint64_t sub_18CB13948(const void *a1)
{
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  CFTypeID v5;
  uint64_t v6;
  unint64_t v7;
  CFTypeID TypeID;
  _BOOL4 v9;

  STACK[0x660] = v1;
  STACK[0x680] = (unint64_t)&STACK[0xBB0] + v1;
  v4 = -16
     * (((((&STACK[0xBB0] + v1) ^ (v2 + 29)) ^ 2)
       + 2 * (&STACK[0xBB0] + v1)
       + 1) & 2)
     - 0x844BD49333D7290;
  STACK[0x688] = (v4 ^ 0x32CC2959313DBF0ELL) + 0x7FBDDF3BBFDADDC0 + (~(2 * v4) & 0x8A66854D998400E0);
  v5 = CFGetTypeID(a1);
  v6 = v5 ^ 0x6D5FFF76E5FF7FA7;
  v7 = (2 * v5) & 0xDABFFEEDCBFEFF4ELL;
  TypeID = CFStringGetTypeID();
  v9 = v6 + (TypeID ^ 0x800D880480648A12) + v7 - ((TypeID << ((v2 - 29) ^ 0xECu)) & 0xFFE4EFF6FF36EBDALL) + 1 == ((v2 - 72273555) & 0x7D318C9B ^ 0xED6D877B66640DA9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((2 * v9) | (8 * v9)) ^ (v2 + 2028126237))) - 12))();
}

uint64_t sub_18CB13AB0()
{
  const __CFString *v0;
  unsigned int v1;
  uint64_t v2;
  CFIndex Length;
  void *v4;

  Length = CFStringGetLength(v0);
  v4 = malloc_type_malloc(((Length << (v1 - 9 + 2 * (v1 ^ 0xF3) + 55)) & 0xDBFFC6DFBDFDFEDCLL)+ (Length ^ 0x6DFFE36FDEFEFF6ELL)- 0x6DFFE36FDEFEFF6DLL, 0x9EBEB066uLL);
  STACK[0x7E0] = (unint64_t)v4;
  return ((uint64_t (*)(const __CFString *))(*(_QWORD *)(v2 + 8 * ((585 * (v4 != 0)) ^ v1)) - 8))(v0);
}

uint64_t sub_18CB13B78(const __CFString *a1)
{
  char *v1;
  CFIndex v2;
  int v3;
  uint64_t v4;
  char *v5;
  CFStringEncoding SystemEncoding;
  Boolean CString;
  _BOOL4 v9;

  v5 = v1;
  SystemEncoding = CFStringGetSystemEncoding();
  STACK[0x458] = (unint64_t)a1;
  CString = CFStringGetCString(a1, v5, v2, SystemEncoding);
  v9 = (((((v3 - 99) & 0xB6) - 94) & (2 * CString)) + (CString ^ 0xDB)) != 219;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v9 | (4 * v9)) ^ v3)) - 4))();
}

uint64_t sub_18CB13BF4()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  _BOOL4 v4;

  v3 = (((v0 + 553713811) << (v1 + 65)) & 0xFFD3A2FE) + ((v0 + 553713811) ^ 0xFFE9D17F);
  LODWORD(STACK[0x8CC]) = v3 + 1991720670;
  v4 = malloc_type_malloc((v1 ^ 0x24B) + 1452790 + v3, 0x18BA6C9CuLL) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1992 * v4) ^ v1)) - 4))();
}

uint64_t sub_18CB13CA8()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_DWORD *)(STACK[0x8E0] + 16) >= ((((v0 - 1453) | 0x201) - 329199750) & 0x139F2FFF ^ (v1 + 416)))
                                * ((((v0 - 1453) | 0x201) - 134) ^ 0x173)) ^ ((v0 - 1453) | 0x201))))();
}

void sub_18CB13CB0()
{
  const void *v0;

  CFRelease(v0);
  JUMPOUT(0x18CB145A0);
}

uint64_t sub_18CB13CC4()
{
  const void *v0;
  unsigned int v1;
  uint64_t v2;
  CFTypeID v3;
  unint64_t v4;
  unint64_t v5;
  CFTypeID TypeID;

  v3 = CFGetTypeID(v0);
  v4 = v3 ^ 0xFF16FFBAEFFA7749;
  v5 = (2 * v3) & 0xFE2DFF75DFF4EE92;
  TypeID = CFDataGetTypeID();
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1000
                                          * (v4
                                           + (TypeID ^ 0x2C0210A20081520)
                                           + v5
                                           - (((v1 + 1632163538) & 0x9EB723F7 ^ 0xFA7FBDEBBFEFD508) & (2 * TypeID)) != 0x1D720C510028C69)) ^ v1))
                            - 4))();
}

uint64_t sub_18CB13D78()
{
  const void *v0;
  int v1;
  uint64_t v2;
  CFTypeID v3;
  uint64_t v4;
  unint64_t v5;
  CFTypeID TypeID;

  v3 = CFGetTypeID(v0);
  v4 = v3 ^ 0x491FBF3EF7FF7FE5;
  v5 = (2 * v3) & 0x923F7E7DEFFEFFCALL;
  TypeID = CFNumberGetTypeID();
  return ((uint64_t (*)(const void *))(*(_QWORD *)(v2
                                                           + 8
                                                           * ((797
                                                             * (v4
                                                              + (TypeID ^ 0x1E20292541070804)
                                                              + v5
                                                              - ((2 * TypeID) & 0xC3BFADB57DF1EFF6)
                                                              + 1 == ((v1 - 1891809565) & 0xF7DFFE6F ^ 0x673FE864BE1BC1E0))) ^ v1))
                                               - 4))(v0);
}

uint64_t sub_18CB13E40(const __CFNumber *a1)
{
  char v1;
  int v2;
  uint64_t v3;
  Boolean Value;

  STACK[0x458] = (unint64_t)a1;
  Value = CFNumberGetValue(a1, kCFNumberSInt64Type, &STACK[0x6D0]);
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v3
                                                               + 8
                                                               * ((119
                                                                 * ((((2 * Value) & 0xBF)
                                                                                    + (Value ^ 0x5F)) != ((v2 ^ (v1 - 38)) ^ 0x55))) ^ v2))
                                                   - 4))(STACK[0x458]);
}

uint64_t sub_18CB13E9C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  void *v4;

  LODWORD(STACK[0x8CC]) = v0 + 8;
  v4 = malloc_type_malloc(8uLL, 0xD29E14C9uLL);
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v3 + 8 * ((944 * (v4 != 0)) ^ v2))
                                                   - ((((v2 - 1757585853) & 0xEFDFE70F) - v1 - 1263) ^ 0x13CLL)))(STACK[0x458]);
}

uint64_t sub_18CB13F0C()
{
  _BYTE *v0;
  int v1;
  uint64_t v2;
  int v3;

  *v0 = (HIBYTE(STACK[0x6D0]) - ((STACK[0x6D0] >> 55) & 0x90) + 72) ^ (((v1 + 70) ^ 0x60) + 42);
  v0[1] = (HIWORD(STACK[0x6D0]) - ((STACK[0x6D0] >> 47) & 0xE4) - 14) ^ 0xF2;
  v0[2] = (((unsigned __int16)WORD2(STACK[0x6D0]) >> 8) - ((STACK[0x6D0] >> 39) & 0x5A) - 83) ^ 0xAD;
  v0[3] = (HIDWORD(STACK[0x6D0]) - ((STACK[0x6D0] >> 31) & 0xE4) - 14) ^ 0xF2;
  v0[4] = (((HIBYTE(LODWORD(STACK[0x6D0])) - ((LODWORD(STACK[0x6D0]) >> 23) & 0xF6) - 125) ^ 5) - 8) ^ 0x7E;
  v0[5] = (HIWORD(LODWORD(STACK[0x6D0])) - ((LODWORD(STACK[0x6D0]) >> 15) & 0x56) - 85) ^ 0xAB;
  v0[6] = (BYTE1(LODWORD(STACK[0x6D0])) - ((LODWORD(STACK[0x6D0]) >> 7) & 0x1E) + 15) ^ 0xF;
  v0[7] = (LOBYTE(STACK[0x6D0]) - ((2 * LOBYTE(STACK[0x6D0])) & 0xB2) + 89) ^ 0x59;
  v3 = malloc_type_malloc(8uLL, 0xDD79556CuLL) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((32 * v3) | (v3 << 6)) ^ v1)) - 8))();
}

uint64_t sub_18CB14080()
{
  uint64_t v0;
  _BYTE *v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v7;

  v5 = 3 * (v3 ^ (v2 + 208));
  v6 = 1755343967
     * ((*(_DWORD *)(qword_1EE0605B8 + (dword_1EE0607C0 & 0xFFFFFFFFB2A98008)) ^ v1) & 0x7FFFFFFF);
  v7 = 1755343967 * (v6 ^ HIWORD(v6));
  *v1 = byte_18CF4CB30[v7 >> 24] ^ *(_BYTE *)((v5 - 282) + v0 + 0x3F22FA18022DAF9DLL - 0x3F22FA18022DAFBBLL) ^ byte_18CF28D20[(v7 >> 24) + 3] ^ byte_18CF3A4C0[(v7 >> 24) + 2] ^ v7 ^ (13 * BYTE3(v7));
  return ((uint64_t (*)(void *, _BYTE *, uint64_t, unint64_t))(*(_QWORD *)(v4 + 8 * (v5 ^ 0x535)) - 8))(&unk_1EE060000, byte_18CF3A4C0, 13, 0xAABDF864E597DC21);
}

void sub_18CB141B8()
{
  JUMPOUT(0x18CB14130);
}

uint64_t sub_18CB141C8()
{
  const __CFData *v0;
  int v1;
  uint64_t v2;
  int Length;
  unsigned int v4;
  int v5;

  Length = CFDataGetLength(v0);
  v4 = (((v1 - 474) ^ 0x7866B0A3 ^ ((v1 + 34159637) | 0x85140408)) & (2
                                                                    * (Length - ((2 * Length) & 0x60EE6068) - 1334366156)) ^ 0x606A6028)
     + ((Length - ((2 * Length) & 0x60EE6068) - 1334366156) ^ 0x4FCAC969);
  LODWORD(STACK[0x8CC]) = v4 + 1994594048;
  v5 = malloc_type_malloc(v4 + 4327075, 0x8DF370BBuLL) != 0;
  return ((uint64_t (*)(const __CFData *))(*(_QWORD *)(v2 + 8 * ((32 * v5) | (v5 << 7) | (v1 - 474))) - 8))(v0);
}

uint64_t sub_18CB1429C(const __CFData *a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  UInt8 *v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  _BOOL4 v8;
  CFRange v10;

  v7 = (_QWORD *)(STACK[0x688] + STACK[0x680] - 0x45354B2BBDDA103ELL);
  v10.length = (v3 & 0xFFFFFFFEFFFFFFFFLL | ((unint64_t)(v3 < v1) << 32)) - 1990266973;
  *v7 = 0;
  v7[1] = v10.length;
  STACK[0x458] = (unint64_t)a1;
  v10.location = 0;
  CFDataGetBytes(a1, v10, v4);
  v8 = malloc_type_malloc(((v2 - 1045) ^ 0x420693u) + v5, 0xE2457E5FuLL) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((196 * v8) ^ v2)) - 12))();
}

uint64_t sub_18CB14334()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((485 * ((v1 << 32) + v2 + (v0 ^ 0x475u) + 1155131492 != 3145398513)) ^ v0))
                            - 12))();
}

void sub_18CB143B0(int a1@<W8>)
{
  LODWORD(STACK[0xAB0]) = a1;
  JUMPOUT(0x18CB143DCLL);
}

uint64_t sub_18CB14430()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(*(_QWORD *)(v3
                                     + 8
                                     * ((211
                                       * (((unsigned __int16)((v0 + 916) ^ v1 ^ 0x2F) ^ ((v0 ^ 0x797) + 2145054745))
                                        + ((2 * ((v0 + 916) ^ v1 ^ 0x2F)) & 0x1EDCC) == 2145056486)) ^ v0))
                         - 12);
  STACK[0x608] = v2;
  return v4();
}

uint64_t sub_18CB144B0(void *a1)
{
  int v1;

  free(a1);
  return ((uint64_t (*)(unint64_t))(qword_1E2538EC0[(1291 * (LODWORD(STACK[0x6E4]) == 0)) ^ (v1 - 1558)]
                                                   - ((v1 - 134364910) & 0x8F1F7E2A ^ 0x871D460ELL)))(STACK[0x458]);
}

void sub_18CB14540(const void *a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0x640];
  *(_DWORD *)(v3 + 16) = STACK[0x8CC];
  *(_QWORD *)(v3 + 8) = v2;
  STACK[0x8A0] = v1;
  CFRelease(a1);
  JUMPOUT(0x18CB14588);
}

uint64_t sub_18CB145F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                 + 8
                                                                                 * (((10 * (v4 ^ 0x14B) + 831)
                                                                                   * (a4 == v5 + 41)) ^ v4))
                                                                     - 8))(a1, a2, a3, 4294924389);
}

uint64_t sub_18CB14630()
{
  unsigned int v0;
  _BOOL4 v1;

  v1 = malloc_type_malloc(0x14uLL, 0xAACB7BF8uLL) == 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1322 * ((((v0 + 101) ^ v1) & 1) == 0)) ^ v0] - (v0 + 301) + 672))();
}

uint64_t sub_18CB14684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;

  LODWORD(STACK[0x680]) = v7;
  v9 = (int)((((v8 + 1246443855) & 0xB5B4C7FE) - 1297515502) & dword_1EE0607C0);
  LODWORD(STACK[0x688]) = -1614807042;
  return sub_18CB12E58(v9, 1164587208, a3, a4, a5, (uint64_t)byte_18CF4E560, a7, (uint64_t)byte_18CF4CB30);
}

uint64_t sub_18CB14724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                 + 8
                                                                                 * (((a4 == ((v4 - 1033284508) & 0x3D96AEFF ^ (v5 + 1099)))
                                                                                   * (v4 + 1497)) ^ v4))
                                                                     - 8))(a1, a2, a3, 4294924389);
}

uint64_t sub_18CB1476C()
{
  unsigned int v0;
  BOOL v1;

  v1 = malloc_type_malloc(0x19uLL, 0xFD034588uLL) == 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(367 * ((v1 ^ (v0 + 42)) & 1)) ^ v0] - 4))();
}

uint64_t sub_18CB147D8(_BYTE *a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  char *v5;
  char v6;
  int v7;
  unint64_t v8;
  unint64_t v9;

  v5 = *(char **)(v1 + 8);
  v6 = *v5;
  v7 = *(_DWORD *)(qword_1EE0605B8 + (dword_1EE0607C0 & 0xFFFFFFFFB2A98008));
  v8 = ((1755343967 * ((v5 ^ v7) & 0x7FFFFFFF)) ^ ((1755343967 * ((v5 ^ v7) & 0x7FFFFFFF)) >> 16))
     * (((v2 - 663) | 0x401) ^ 0x68A0681E);
  v9 = 1755343967
     * ((1755343967 * ((a1 ^ v7) & 0x7FFFFFFF)) ^ ((1755343967 * ((a1 ^ v7) & 0x7FFFFFFF)) >> 16));
  *a1 = byte_18CF27AB0[v8 >> 24] ^ v6 ^ byte_18CF2A0D0[(v8 >> 24) + 2] ^ byte_18CF4E560[v8 >> 24] ^ byte_18CF27AB0[v9 >> 24] ^ byte_18CF2A0D0[(v9 >> 24) + 2] ^ byte_18CF4E560[v9 >> 24] ^ v8 ^ v9 ^ (-95 * BYTE3(v8)) ^ (-95 * BYTE3(v9));
  return (*(uint64_t (**)(void))(v3 + 8 * v2))();
}

void sub_18CB148F4()
{
  JUMPOUT(0x18CB14838);
}

uint64_t sub_18CB148FC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (23 * (v1 != 0))))
                            - (v0 ^ 0x8F5F3728)
                            - ((v0 - 308165010) & 0x125E35FF)
                            + 2405381136))();
}

uint64_t sub_18CB14950()
{
  int v0;
  void *v1;
  int v2;
  int v3;
  int v4;

  v4 = (v0 + 1889586423) | 0x180;
  free(v1);
  LODWORD(STACK[0x874]) = v3;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(v2 == 0) | (8 * (v2 == 0)) | v4]
                            - ((v4 - 1943259665) & 0x73D3CEFD)
                            + 1733))();
}

uint64_t sub_18CB14978@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((a1 + 380784414) & 0x294DB6FF) - 308) * (*(_QWORD *)(v1 + 8) != 0)) ^ a1)))();
}

void sub_18CB149B4(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  free(a1);
  *(_QWORD *)(v1 + 8) = v2;
  JUMPOUT(0x18CB149C4);
}

uint64_t sub_18CB14A3C()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((STACK[0x8C0] == 1) * (((v0 - 581737750) ^ 0x22AC9372) + v0 - 61)) ^ v0))
                            - 12))();
}

uint64_t sub_18CB14A80@<X0>(int a1@<W8>)
{
  const char *v1;
  int v2;
  uint64_t v3;
  size_t v4;
  _BOOL4 v5;

  v3 = (v2 - a1 + 1920470123) & 0xB0348776;
  v4 = strlen(v1);
  v5 = malloc_type_malloc(((v3 ^ 0x3EBF17FFD7F9F57ELL) & (2 * v4)) + (v4 ^ 0x9F5F8BFFEBFCF994) + 0x60A074001403068ALL, 0xAE21939FuLL) == 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(965 * v5) ^ v2] - 12))();
}

void sub_18CB14B28()
{
  void *v0;

  free(v0);
  JUMPOUT(0x18CB14B4CLL);
}

uint64_t sub_18CB14B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                                 + 8
                                                                                 * ((2016
                                                                                   * (*(unsigned __int8 *)STACK[0x6B8] == (((v3 + 120) | 2) - 89))) ^ v3))
                                                                     - (v3 + 1261)
                                                                     + 1733))(a1, a2, a3, 4294924391);
}

uint64_t sub_18CB14BD0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;

  v3 = STACK[0x8A0];
  v4 = 230600693 * (((v2 - 192) & 0xB0AAFE3F | ~((v2 - 192) | 0xB0AAFE3F)) ^ 0x9D6987EB);
  *(_DWORD *)(v2 - 164) = LODWORD(STACK[0x78C]) - v4 - 127064485;
  *(_DWORD *)(v2 - 192) = (v1 - 414) ^ v4;
  *(_QWORD *)(v2 - 184) = (char *)&STACK[0xBB0] + v3;
  *(_QWORD *)(v2 - 176) = v0;
  sub_18CBBB7EC((_DWORD *)(v2 - 192));
  return ((uint64_t (*)(void))qword_1E2538EC0[(59 * (*(_DWORD *)(v2 - 168) != 0)) ^ v1])();
}

uint64_t sub_18CB14CA8()
{
  int v0;
  unint64_t v1;
  int v2;
  uint64_t v3;

  STACK[0x8A0] = v1;
  STACK[0x680] = 0;
  LODWORD(STACK[0x660]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * ((1852 * ((((v0 - 1686) | 0x1C0) ^ 0x1F7) == -42903)) ^ (v0 - 1423)))
                            - 4))();
}

uint64_t sub_18CB14CB8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((278 * (v0 + 1 == v2 + 16)) ^ v1)))();
}

uint64_t sub_18CB14D40@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  v4 = (((v1 >> 4) ^ 0xF8246007)
      - 2 * ((a1 - 641 + ((a1 - 1016708466) & 0x3C99BFDD) - 2213) & (v1 >> 4) ^ ((v1 >> 4) ^ 0xF8246007) & 0x46690C1E)
      + 1181289494) ^ 0x46690C16 | v1 ^ v2;
  v5 = ((((int)(v4 - ((2 * v4) & 0x45D44A14) - 1561713398) >> 2) ^ 0xE8BA8942)
      - ((2 * (((int)(v4 - ((2 * v4) & 0x45D44A14) - 1561713398) >> 2) ^ 0xE8BA8942)) & 0x957412EE)
      - 893777545) ^ 0xCABA0977 | (v4 - ((2 * v4) & 0x45D44A14) - 1561713398) ^ 0xA2EA250A;
  return (*(uint64_t (**)(void))(v3 + 8 * ((469 * ((v5 & 1 | ((((v5 + 2) >> 1) & 1) == 0)) == 0)) ^ a1)))();
}

uint64_t sub_18CB14E14@<X0>(unint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  STACK[0x428] = v2;
  STACK[0x430] = a1;
  STACK[0x438] = v3;
  v6 = (a2 + 1102579597);
  v7 = ((2 * (_QWORD)&STACK[0x7E8]) & 0xC5DFFDFFD6FBDFF8)
     - 0x62EFFEFFEB7DEFFFLL
     + ((unint64_t)&STACK[0x7E8] ^ 0x62EFFEFFAAC5E384 ^ v6);
  STACK[0x450] = ((v7 % 0x25) ^ 0x5FBFABBFFD27DFBBLL)
               - 0x5FBFABBFFD27DFABLL
               + ((2 * (v7 % 0x25)) & 0x76);
  v8 = STACK[0x688] + STACK[0x680] - 0x45354B2BBDDA103ELL;
  v9 = 1856021207 * ((v5 - 192) ^ 0xED14979B4E69D6FELL);
  LODWORD(STACK[0x44C]) = (v4 + 1860574894) & 0x9119DEEE;
  LODWORD(STACK[0x670]) = v4 - 1252392926;
  *(int32x4_t *)&STACK[0x560] = vdupq_n_s32(0xCE7A6DCD);
  *(int32x4_t *)&STACK[0x550] = vdupq_n_s32(0x2C3F9E5u);
  *(int32x4_t *)&STACK[0x540] = vdupq_n_s32(0x40A9A9BEu);
  *(int32x4_t *)&STACK[0x530] = vdupq_n_s32(0x3F565640u);
  v10 = 516615401
      * ((2 * ((v5 - 192) & 0x48D57A0D0CC69FA0) - (v5 - 192) - 0x48D57A0D0CC69FA4) ^ 0x3F960D89805A666ELL);
  LODWORD(STACK[0x680]) = -380625658;
  STACK[0x678] = STACK[0xAA8];
  STACK[0x688] = v8;
  STACK[0x440] = v8 + 16;
  STACK[0x5F0] = v9;
  STACK[0x470] = 694118461 - v9;
  STACK[0x498] = v10;
  STACK[0x468] = v10 + 419711402;
  *(int32x4_t *)&STACK[0x5E0] = vdupq_n_s32(0xF2AC030B);
  *(int32x4_t *)&STACK[0x5D0] = vdupq_n_s32(0x7FFFFFFEu);
  *(int32x4_t *)&STACK[0x5C0] = vdupq_n_s32(0x775A672Eu);
  *(int32x4_t *)&STACK[0x5B0] = vdupq_n_s32(0x6D29B7D4u);
  *(int32x4_t *)&STACK[0x5A0] = vdupq_n_s32(0xC96B2414);
  *(int32x4_t *)&STACK[0x590] = vdupq_n_s32(0xF2AC030A);
  *(int32x4_t *)&STACK[0x580] = vdupq_n_s32(0xE9501D06);
  *(int32x4_t *)&STACK[0x570] = vdupq_n_s32(0x904BAFB8);
  *(int32x4_t *)&STACK[0x520] = vdupq_n_s32(0xBA104401);
  *(int32x4_t *)&STACK[0x510] = vdupq_n_s32(0x4001019Fu);
  *(int32x4_t *)&STACK[0x500] = vdupq_n_s32(0x4D217929u);
  *(int32x4_t *)&STACK[0x4F0] = vdupq_n_s32(0xD13E67B2);
  *(int32x4_t *)&STACK[0x4E0] = vdupq_n_s32(0xE051628A);
  *(int32x4_t *)&STACK[0x4D0] = vdupq_n_s32(0x202C8C14u);
  *(int32x4_t *)&STACK[0x4C0] = vdupq_n_s32(0x9016460A);
  *(int32x4_t *)&STACK[0x4B0] = vdupq_n_s32(0x609E32D4u);
  *(int32x4_t *)&STACK[0x4A0] = vdupq_n_s32(0x4825D7DCu);
  *(int32x4_t *)&STACK[0x480] = vdupq_n_s32(0xC87FA3Fu);
  LODWORD(STACK[0x478]) = 2002413358;
  return sub_18CADE7FC(-1102580827, 141, 1, 22, v6);
}

uint64_t sub_18CB15214(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((58
                                          * (v3 + 0x60A074007A7FD0F8 != ((v2 - 1509833819) & 0x59FE377F ^ 0x667CCBF7))) ^ v2))
                            - 8))();
}

uint64_t sub_18CB152AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = v2 < v4;
  *(_BYTE *)(v6 + v10 - 0xD05A22989016BA1) = *(_BYTE *)(v5 + v9 - 0x2964FBFC17A1BD6ALL);
  if (v11 == v7 - 0x4EE90E7D979C443CLL < (unint64_t)(v8 ^ 0x72Du) + a2)
    v11 = v7 - 0x4EE90E7D979C443CLL < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v11 * v3) ^ v8)) - 8))();
}

uint64_t sub_18CB15340()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  char v13;
  _BOOL4 v14;

  v11 = *(_DWORD *)(qword_1EE0605B8 + (dword_1EE0607C0 & 0xFFFFFFFFB2A98008)) ^ (v4 + v6 + 1554110436);
  v12 = 1755343967 * ((1755343967 * (v11 & 0x7FFFFFFF)) ^ ((1755343967 * (v11 & 0x7FFFFFFFu)) >> 16));
  v13 = byte_18CF4CB30[v12 >> 24] ^ *(_BYTE *)(v9 + v3 + (v7 ^ 0x8625374A6402DB87)) ^ byte_18CF28D20[(v12 >> 24) + 3] ^ byte_18CF3A4C0[(v12 >> 24) + 2] ^ v12 ^ (13 * BYTE3(v12));
  if (v1 < v0 != v5 - 0x69811A54A982107 < v0)
    v14 = v1 < v0;
  else
    v14 = v5 - 0x69811A54A982107 < v1;
  *(_BYTE *)(v4 + v6 - 0x6018E046A35E281CLL) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v14 * v2) ^ v8)) - 12))();
}

uint64_t sub_18CB1545C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  LODWORD(STACK[0x6E4]) = a6;
  return sub_18CB14430();
}

uint64_t sub_18CB15488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BOOL4 v9;
  unint64_t v10;
  int v11;
  _BOOL4 v12;

  v7 = (STACK[0x680] & 0x15754) + 320832379 + (((v3 ^ 0x658) + 200123613) ^ v5);
  v8 = v6 + v4 + 653925208;
  v9 = v8 < 0x650711C4;
  v10 = (v7 + 1174004454) | ((unint64_t)(v7 < v3 + 520957517) << 32);
  v11 = v9 ^ (v10 < 0x650711C4);
  v12 = v10 <= v8;
  if (!v11)
    v9 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((14 * v9) ^ v3)) - 4))();
}

uint64_t sub_18CB15540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  LODWORD(STACK[0x670]) = STACK[0x890];
  return sub_18CAB05D0(4294953326, a7 - 0x3749BB5A557E7DA5, 105, a7 - 1935219079, a5, 4864, a7, 22062);
}

uint64_t sub_18CB15624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  int v9;

  LODWORD(STACK[0x670]) = v8;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t))(*(_QWORD *)(a7
                                                                                 + 8
                                                                                 * ((966
                                                                                   * ((v7 ^ 0x737E9E7F65F3FFA5)
                                                                                    - 0x737E9E7F3749FFE3
                                                                                    + ((v7 << ((2 * (v9 + 23)) ^ 0xC9u)) & 0xCBE7FF4ALL) == 782892994)) ^ (v9 - 233)))
                                                                     - 12))(a1, a2, STACK[0x628]);
}

uint64_t sub_18CB156D8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X6>, int a3@<W8>)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = v4 < v3;
  *(_BYTE *)(v9 + ((a3 - 1358) ^ 0x907AF2DF57432EEFLL) + v7) = (*(_BYTE *)(v6 + a1 - 0x1634CF424AD9C6FBLL) ^ 0x3F)
                                                                           + 2
                                                                           * (*(_BYTE *)(v6 + a1 - 0x1634CF424AD9C6FBLL) & 0x3F)
                                                                           - 3;
  if (v10 == v8 - 0x25D4F355F8D0751DLL < v3)
    v10 = v8 - 0x25D4F355F8D0751DLL < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((!v10 * v5) ^ a3)) - 12))();
}

uint64_t sub_18CB1579C()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((120 * (v0 != (v1 + ((v1 + 61) & 0xDD) + 79))) ^ v1)))();
}

void sub_18CB157E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v11 = (v9 - 277) | 0x102;
  v12 = ((v9 - 21) | 2) - 63;
  v14 = *(_DWORD *)(v8 + 64);
  v13 = *(_DWORD *)(v8 + 68);
  *(_BYTE *)(v8 + 56) = (((_BYTE)v13 << v12) ^ 0xF0) + (~(2 * (((_BYTE)v13 << v12) ^ 0xF0)) | 0x9F) - 78;
  *(_BYTE *)(v8 + 57) = (v13 >> 5) ^ 0x22;
  *(_BYTE *)(v8 + 58) = (v13 >> 13) ^ 0x9B;
  *(_BYTE *)(v8 + 59) = (v13 >> 21) ^ 0xA1;
  HIDWORD(v15) = v14 + 468426922;
  LODWORD(v15) = v13 ^ 0x60000000;
  *(_BYTE *)(v8 + 60) = ((v15 >> 29) - ((2 * (v15 >> 29)) & 0xD6) - 21) ^ 0x5A;
  *(_BYTE *)(v8 + 61) = ((~((v14 - 605314902) >> 4) | 0xF3)
                       + ((v14 - 605314902) >> 5)
                       + 7) ^ 0xB7;
  *(_BYTE *)(v8 + 62) = (((v14 - 605314902) >> 13) - (((v14 - 605314902) >> 12) & 0xA8) + 84) ^ 0xE5;
  *(_BYTE *)(v8 + 63) = (((v14 - 605314902) >> 21) - (((v14 - 605314902) >> 20) & 0x12) + 9) ^ 0xB8;
  STACK[0x840] = (((v11 - 296) | 0x20u) ^ 0xFFFFFFFFFFFFFFC6) + *(_QWORD *)(v10 + 8 * ((v11 - 296) | 0x20));
  LODWORD(STACK[0x668]) = a8 ^ 0x556;
  LODWORD(STACK[0x670]) = (a8 ^ 0x556) + 1790221395;
  LODWORD(STACK[0x688]) = -514044794;
  LODWORD(STACK[0x680]) = 2042623983;
  LODWORD(STACK[0x678]) = -1076953617;
  JUMPOUT(0x18CAEA904);
}

uint64_t sub_18CB158D0()
{
  int v0;
  unsigned __int16 v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v1 == (unsigned __int16)(5 * (v0 ^ 0x422) - 139))
                                          * (((2 * v0) ^ 0x95C) + 504)) ^ v0))
                            - 8))();
}

void sub_18CB15910()
{
  JUMPOUT(0x18CB15928);
}

uint64_t sub_18CB15984()
{
  int v0;
  int v1;
  int v2;

  LODWORD(STACK[0x660]) = v1;
  v2 = MEMORY[0x18D7894BC](0, &STACK[0xA28]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1196
                                             * (((82 * (v0 ^ 0x156) - 451158573) ^ v2) + ((2 * v2) & 0xCA37BF7E) == -451158081)) | v0]
                            - 8))();
}

uint64_t sub_18CB159F0()
{
  int v0;
  BOOL v1;

  v1 = IOServiceMatching((const char *)&STACK[0x15E1]) == 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(229 * ((v1 ^ (41 * (v0 ^ 0x5C) + 1)) & 1)) ^ v0] - 8))();
}

uint64_t sub_18CB15A40(const __CFDictionary *a1)
{
  int v1;
  kern_return_t MatchingServices;

  MatchingServices = IOServiceGetMatchingServices(STACK[0xA28], a1, (io_iterator_t *)&STACK[0x6CC]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1612
                                             * (((7 * (v1 ^ 0x104) + 2129657258) & (2 * MatchingServices))
                                              + (MatchingServices ^ 0x3F77FFFB) == 1064828923)) ^ v1]
                            - ((4 * v1) ^ 0x548)))();
}

uint64_t sub_18CB15AB8()
{
  int v0;
  uint64_t v1;
  io_object_t v2;

  v2 = IOIteratorNext(STACK[0x6CC]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((2 * v2) & 0x95EFBEDC) + (v2 ^ 0xCAF7DF6E) == -889725074)
                                          * ((v0 - 989109965) & 0x3AF49FB6 ^ 0x316)) ^ v0))
                            - 8))();
}

void sub_18CB15B1C()
{
  JUMPOUT(0x18CB15BB0);
}

uint64_t sub_18CB15B24@<X0>(int a1@<W8>)
{
  int v1;
  kern_return_t v2;

  v2 = IOServiceOpen(a1 + 889725074, *MEMORY[0x1E0C83DA0], 0, (io_connect_t *)&STACK[0x6B4]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[((((2 * v2) & 0x32BE7EF4) + (v2 ^ 0x995F3F7A) == -1721811078)
                                             * (((v1 + 1607384009) & 0xA03147CD) - 315)) ^ v1]
                            - 12))();
}

uint64_t sub_18CB15C1C()
{
  int v0;
  int v1;
  _DWORD *v2;
  unsigned int v3;
  uint64_t v4;

  *v2 = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((2 * v0) ^ 0x68D)
                                          * ((v3 | ((unint64_t)(v3 < 0x2090B988) << 32)) == 546355592)) ^ v0))
                            - 8))();
}

uint64_t sub_18CB15CC4@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  int v2;
  int v3;
  _BOOL4 v4;

  v1[501] = v3 - 546355592;
  STACK[0xAC8] = 2008;
  v4 = IOConnectCallStructMethod(a1 - 1197784504, 0x22u, v1, 0x7D8uLL, v1, &STACK[0xAC8]) == 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(v4 * (v2 + 159)) ^ v2] - 4))();
}

uint64_t sub_18CB15D2C()
{
  uint64_t (*v0)(void);
  unint64_t v1;

  STACK[0x8A0] = v1;
  return v0();
}

uint64_t sub_18CB15D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((167 * (a7 == ((LODWORD(STACK[0x690]) - 1706) ^ 0x23))) ^ (LODWORD(STACK[0x690]) - 350)))
                            - 4))();
}

void sub_18CB15D70()
{
  *(_BYTE *)(STACK[0x9C8] + (LODWORD(STACK[0x6F0]) - 542170979)) = 0x80;
  JUMPOUT(0x18CB15DC4);
}

uint64_t sub_18CB15E3C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v1 - 2006230721) | 0x31008050) + 1184113003) * (v0 == 0)) ^ (v1 - 546)))
                            - ((v1 - 1604) | 0x224u)
                            + 677))();
}

uint64_t sub_18CB15E90()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((11 * (v0 ^ 0xB96BE023)) ^ 0xD2)) - 4))();
}

void sub_18CB15F40()
{
  JUMPOUT(0x18CB15EF0);
}

uint64_t sub_18CB15F48()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v2 < v1;
  *(_BYTE *)(v4 + v7 - 0x43A1922699E5887ALL) = *(_BYTE *)(v3 + v6 - 0x19354F63E159EE0DLL);
  if (v9 == v5 - 0x5B5F2A1360F1471BLL < v1)
    v9 = v5 - 0x5B5F2A1360F1471BLL < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((19 * ((((v0 - 355) ^ v9) & 1) == 0)) ^ v0)) - 8))();
}

uint64_t sub_18CB15FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((2 * (((a7 == 0) ^ (LOBYTE(STACK[0x690]) + 26)) & 1)) & 0xF7 | (8 * (((a7 == 0) ^ (LODWORD(STACK[0x690]) - 1914082534)) & 1))) ^ (LODWORD(STACK[0x690]) - 246)))
                            - 8))();
}

uint64_t sub_18CB16020()
{
  int v0;
  uint64_t v1;
  int v2;

  v2 = STACK[0x874];
  STACK[0x680] = 0;
  LODWORD(STACK[0x660]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8
                                             * ((1852 * ((((v0 - 1686) | 0x1C0) ^ 0x1F7) == -42903)) ^ (v0 - 1423)))
                            - 4))();
}

uint64_t sub_18CB16034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                                 + 8
                                                                                 * ((1699
                                                                                   * (*(_BYTE *)(STACK[0x6B8] + 2) == 1)) ^ (v3 - 1914082535) & 0x72168FF9u))
                                                                     - ((((v3 - 1914082535) & 0x72168FF9) + 50) ^ 0x4DFu)
                                                                     + 1733))(a1, a2, a3, 4294924392);
}

uint64_t sub_18CB16094()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1033
                                * (*(unsigned __int8 *)(v1 + v2 - 546355592 + (v0 ^ 0x3E8u) - 505) == (((v0 - 82) | 0x20) ^ 0xE0))) ^ v0)))();
}

uint64_t sub_18CB160E4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;

  v3 = 10 * (v0 ^ 0x1CA);
  v4 = v1 - 1119544050 + v3;
  if (v4 < 0xDDD5D886 != (int)v1 - 1119543554 < ((v3 - 174) ^ 0xDDD5D7BE) + ((v3 - 174) | 0xC8))
    v5 = (int)v1 - 1119543554 < ((v3 - 174) ^ 0xDDD5D7BE) + ((v3 - 174) | 0xC8);
  else
    v5 = (int)v1 - 1119543554 >= v4;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * ((1516 * v5) ^ v3)) - 8))(1, v1);
}

uint64_t sub_18CB16180@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * (((a1 & ~(a3 ^ (*(_BYTE *)(v5 + (a2 + a4)) == 0))) * v4) ^ a3)))();
}

void sub_18CB161B0()
{
  JUMPOUT(0x18CB16124);
}

uint64_t sub_18CB161B8(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((a2 == 128) * (((v2 + 556) | 0x2C1) ^ 0x5CA)) ^ v2))
                            - ((v2 + 136864798) & 0xF7D79F0D ^ 0x504)))();
}

uint64_t sub_18CB16210()
{
  int v0;
  void *v1;
  void *v2;
  BOOL v3;
  int v4;

  v1 = malloc_type_malloc(0x10uLL, 0x4E5327F9uLL);
  STACK[0x7C0] = (unint64_t)v1;
  v2 = malloc_type_malloc(0x10uLL, 0x4EAEF4CEuLL);
  STACK[0x848] = (unint64_t)v2;
  if (v1)
    v3 = v2 == 0;
  else
    v3 = 1;
  v4 = v3;
  return ((uint64_t (*)(void))qword_1E2538EC0[((((v0 - 1164) ^ v4) & 1) == 0) | v0])();
}

uint64_t sub_18CB16270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;

  v7 = ((2 * *(unsigned __int8 *)(v4 + 3)) & 0x5C) + (*(unsigned __int8 *)(v4 + 3) ^ 0xFFFFFF2E);
  v8 = v7 + 1953753600;
  v9 = v5 - v7;
  LODWORD(STACK[0x79C]) = v9 - 229;
  LODWORD(STACK[0x88C]) = v8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * ((458
                                                                         * (((v9 + 3) & 0xF)
                                                                          + ((((v3 | 0x5C) + 36) | 0x40C) ^ 0x2625E1CF)
                                                                          - ((2 * (v9 + 3)) & 8) != 640017603)) ^ (v3 | 0x5C))))(a1, a2, a3, 4294924393);
}

uint64_t sub_18CB16300(unint64_t a1, uint64_t a2, unint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v9;

  STACK[0x880] = a3;
  STACK[0x790] = a1;
  STACK[0x718] = v6 + 510;
  STACK[0x940] = v6 + 528;
  LODWORD(STACK[0x788]) = -289289327;
  STACK[0x680] = v5 + 4;
  v9 = v5 == -4 && v4 != ((v3 + 377) ^ 0x25B) + 1953753376;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((v9 * (48 * ((v3 + 377) ^ 0x25B) - 427)) ^ (v3 + 377))) - 12))();
}

uint64_t sub_18CB163A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v11;

  v11 = a6 == (v7 ^ 0x6A2) + 1990265947 || v8 != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((v11 * ((v6 + v7 - 672) ^ (v6 - 496))) ^ v7)) - 12))();
}

uint64_t sub_18CB163E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  STACK[0x660] = v7;
  LODWORD(STACK[0x670]) = v6;
  LODWORD(STACK[0x688]) = a1 - 1614625540;
  v8 = qword_1EE0605B8;
  v9 = dword_1EE0607C0 & 0xFFFFFFFFB2A98008;
  LODWORD(STACK[0x668]) = a6;
  STACK[0x678] = (a5 - a6);
  return sub_18CB10DA8(a1, (a6 + v6 - 1350088456), v8, v9, a5, 0x80621F8u, 0x3E8u, 0xFFFFFFFFD9DE3836);
}

uint64_t sub_18CB16498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((((101 * (v7 ^ 0x6CF)) ^ (v7 - 610)) * ((_DWORD)v6 == 0)) ^ (v7 - 1385))))(a1, a2, a3, a4, a5, a6, v6);
}

uint64_t sub_18CB164D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((LODWORD(STACK[0x690]) ^ 0x644) + 257 + 5 * (LODWORD(STACK[0x690]) ^ 0x644) + 847)
                                * (a7 == 0)) ^ (LODWORD(STACK[0x690]) - 1347))))();
}

uint64_t sub_18CB1650C()
{
  int v0;
  int v1;
  void *v2;

  v1 = LODWORD(STACK[0x89C]) - LODWORD(STACK[0xA50]);
  LODWORD(STACK[0x8EC]) = v1;
  v2 = malloc_type_malloc(v1 + ((v0 + 291) ^ 0xE278BB88), 0xB996B06BuLL);
  STACK[0x9B8] = (unint64_t)v2;
  return ((uint64_t (*)(void))qword_1E2538EC0[(1502 * (v2 != 0)) ^ v0])();
}

uint64_t sub_18CB16570()
{
  int v0;
  uint64_t v1;
  char v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((8 * ((v2 & 3) == 0)) | (((v2 & 3) == 0) << 7)) ^ v0))
                            - (v0 - 693)
                            + 709))();
}

uint64_t sub_18CB165A0()
{
  char v0;
  char v1;
  char v2;
  char v3;
  char v4;

  v3 = (v0 - 61) | 0x88;
  v4 = arc4random();
  return sub_18CB165CC(v4 + v2 - ((v3 ^ (v1 + 57)) & (2 * v4)));
}

uint64_t sub_18CB165CC@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 + v4 - 2056426868) = a1 ^ 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1518 * (v5 + (v3 ^ 0x7B7u) - 125 - 1280 == v2 + 16)) ^ v3)) - 4))();
}

uint64_t sub_18CB16618(int a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((442
                                          * (v2 - a2 + ((a1 - 217228017) & 0xCF2A65F ^ 0x1F62B92Bu) >= ((a1 - 84317223) & 0x50697FF ^ 0x672u))) ^ a1))
                            - 12))();
}

uint64_t sub_18CB1669C(uint64_t a1, char a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v15;

  v12 = v10 + v9 + a8 + 1551;
  v15 = ((10 - a2) & 0xFu) < (v12 & 0xF) || v12 > ((a3 - 618) | 0x200) - 1537 || 1496755164 - v8 < v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((225 * (((a3 + 39) ^ v15) & 1)) ^ a3)) - 8))();
}

uint64_t sub_18CB1670C(uint64_t a1, char a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _BOOL4 v19;

  v10 = (v4 + v5) + v8;
  v11 = v10 - v7 - v6;
  v12 = (a2 + 5) & 0xF;
  v13 = v10 - ((_QWORD)&unk_18CF26890 + v12);
  v14 = -v12 - (_QWORD)byte_18CF4BCE0 + v10 - ((a4 ^ 0x325u) + 1310);
  v15 = -v12 - (_QWORD)byte_18CF4F810 + v10 - 2;
  v19 = v13 > 0xF && v11 > 0xF && v14 + 1695 >= ((4 * (a4 ^ 0x325u)) ^ 0x600uLL) && v15 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((28 * v19) ^ a4)) - 12))();
}

uint64_t sub_18CB167AC(void *a1)
{
  int v1;

  free(a1);
  STACK[0x6B8] = 0;
  return ((uint64_t (*)(void))qword_1E2538EC0[((*(_QWORD *)(STACK[0x8E0] + 8) == 0)
                                            * (((474 * (v1 ^ 0x2D6) - 1046433721) & 0x3E5F4FBF) - 940)) ^ (474 * (v1 ^ 0x2D6))])();
}

uint64_t sub_18CB1680C(void *a1)
{
  uint64_t v1;

  free(a1);
  *(_QWORD *)(v1 + 8) = 0;
  *(_DWORD *)(v1 + 16) = 1990266973;
  STACK[0x8A0] -= 144;
  return ((uint64_t (*)(void))STACK[0x808])();
}

uint64_t sub_18CB1683C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v0 - 1350) ^ (15 * (v1 == 0))))
                            - ((159 * (v0 ^ 0x6CBu)) ^ 0x3B2)))();
}

uint64_t sub_18CB16878()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((986 * (v1 != (((v0 - 1214) | 0x80) ^ 0x28F))) ^ (v0 - 1349)))
                            - 8))();
}

uint64_t sub_18CB168C4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  v2 = a1 - 729;
  v3 = *(unsigned __int8 *)STACK[0x648];
  LODWORD(STACK[0x690]) = v2 + v3 - 1223708077 - ((2 * v3) & 0xAE) - 221;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((char)v3 < (char)(v2 + 35)) * ((v2 ^ 0x2B) - 198)) | v2)) - 12))();
}

uint64_t sub_18CB16924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  char v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((1364 * (((a7 + 115) ^ ((-(((~(a7 - 224) | 0xFFFFFF00) + ((((a7 + 115) | 0xB) ^ 0xA0) + v7)) ^ (~(a7 + 32) + (((a7 + 115) | 0xB) ^ 0xA0) + v7)) | ((~(a7 - 224) | 0xFFFFFF00) + ((((a7 + 115) | 0xB) ^ 0xA0) + v7))) >> 15)) & 1)) ^ (a7 + 732)))
                                                                                                - 12))(a1, a2, a3, a4, a5, a6, 4294925295);
}

uint64_t sub_18CB16988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned __int8 v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (int)(((v6 == ((v7 + 53) ^ 0xFB)) * ((v7 + 338709813) & 0xEBCFB35F ^ 0x349)) ^ v7))
                                                                                                - 4))(a1, a2, a3, a4, a5, a6, 4294925295);
}

uint64_t sub_18CB169DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((1237 * (LODWORD(STACK[0x6A4]) - 1041036908 >= ((((a7 - 1319416676) & 0x4EA4B3FF) + 1234) ^ 0x68Eu))) ^ a7)))(a1, a2, a3, a4, a5, a6, 4294925278);
}

uint64_t sub_18CB16A40()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v2 = STACK[0x958];
  v3 = ~STACK[0x648];
  STACK[0x688] = STACK[0x958];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((v3 + v2 + ((v0 - 1595679438) & 0x5F1C23FF) - 785 < 0x10)
                                          * ((v0 + 46) ^ 0x1FB)) ^ v0))
                            - 4))();
}

uint64_t sub_18CB16AE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v5 + a1 - 0x3A03A2395EF99A87) = *(_BYTE *)(v4 + v2 - 0x60D51A211B09A23ALL)
                                             - ((117 * (v3 ^ 0x2A) + 11) & (2
                                                                          * *(_BYTE *)(v4 + v2 - 0x60D51A211B09A23ALL)))
                                             + 53;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((4 * (v6 + 1 == v1 + 16)) | ((v6 + 1 == v1 + 16) << 8)) ^ v3))
                            - 4))();
}

uint64_t sub_18CB16B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  _BOOL4 v13;
  _BOOL4 v14;

  v9 = ((*(unsigned __int8 *)(STACK[0x648] + 65) - ((2 * *(unsigned __int8 *)(STACK[0x648] + 65)) & 0xC8)) << 8) + 25600;
  v10 = ((v9 ^ 0x6400) - ((v9 << ((((v7 - 91) | 1) ^ 4) & 0x37)) & 0x2200) - 28286) ^ 0xFFFF9182 | (*(unsigned __int8 *)(STACK[0x648] + 66)
                                                                                                  - ((2 * *(unsigned __int8 *)(STACK[0x648] + 66)) & 0x96)
                                                                                                  + 2379) ^ 0x94B;
  LOWORD(v10) = v10 - ((2 * v10) & 0xF214) - 1782;
  LOWORD(STACK[0x872]) = v10;
  v11 = (unsigned __int16)v10 ^ 0xF90A;
  LODWORD(STACK[0x680]) = 2 * v11;
  v12 = 2 * v11 + ((unsigned __int16)v10 ^ 0x96CF06F5) - 1398789968;
  v13 = v12 < 0x4370286C;
  v14 = v12 > v6 + 90386944;
  if ((v6 + 90386944) < 0x4370286C != v13)
    v14 = v13;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((1245 * !v14) ^ v7)))(a1, a2, a3, a4, a5, a6, 4294925278);
}

uint64_t sub_18CB16C9C()
{
  size_t v0;
  int v1;
  void *v2;

  v2 = malloc_type_malloc(v0, 0xA23FB50CuLL);
  STACK[0x678] = (unint64_t)v2 + 0x4E36C53A99817805;
  STACK[0xA80] = (unint64_t)v2 + 0x4E36C53A99817805;
  return ((uint64_t (*)(void))qword_1E2538EC0[((v2 != 0) * (((v1 ^ 0xC2) + 1328) ^ 0x271)) ^ v1])();
}

uint64_t sub_18CB16D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;

  v5 = (v3 ^ 0xBB3B8FDFBF7FFFBELL) + 0x44C47020F7A1AE8BLL + ((2 * (int)v3) & 0x1FF7CLL) == ((v4 - 264) ^ 0xB721AEDCLL);
  return (*(uint64_t (**)(void))(a3 + 8 * (((4 * v5) | (v5 << 6)) ^ v4)))();
}

uint64_t sub_18CB16DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X6>, unint64_t a4@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _BOOL4 v9;

  v9 = v4 < a4;
  *(_BYTE *)(v6 + a1 - 0x2A2D4C3DC919F48ELL) = *(_BYTE *)(v5 + a3 - 0x4924F95ABA6A3D25)
                                             - ((2 * *(_BYTE *)(v5 + a3 - 0x4924F95ABA6A3D25)) & 0x34)
                                             - 102;
  if (v9 == v7 - 0x44250FD4E13FBBDBLL < a4)
    v9 = v7 - 0x44250FD4E13FBBDBLL < v4;
  return (*(uint64_t (**)(void))(a2 + 8 * (((4 * !v9) | (!v9 << 6)) ^ v8)))();
}

void sub_18CB16E40()
{
  unsigned int v0;
  uint64_t v1;

  STACK[0x9A8] = *(_QWORD *)(v1 + 8 * (int)(v0 - 1709)) + (v0 ^ 0xFFFFFFFFFFFFF935);
  JUMPOUT(0x18CB16F40);
}

uint64_t sub_18CB17008(int a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;

  v9 = v6 + v5;
  if ((v9 + 1) > 0x40)
    v10 = v9 + 1;
  else
    v10 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((102 * (v7 - a1 - a4 + v10 < ((v4 + 166706765) & 0xF61045F7 ^ 0x4FC))) ^ v4))
                            - ((v4 + 166706765) ^ 0x9EFBEF7)))();
}

uint64_t sub_18CB170AC(int a1, uint64_t a2, uint64_t a3, int a4, int a5, unsigned int a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  BOOL v14;

  v10 = a4 + a1;
  v11 = (a5 ^ 0x43B ^ (v7 + 201)) + v10;
  if (v11 <= 0x40)
    v11 = a6;
  v12 = a7 + v11;
  v14 = v8 - v10 < v12 || v12 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((466 * (((a5 + 18) ^ v14) & 1)) ^ a5)) - 4))();
}

uint64_t sub_18CB17110(int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;
  char v14;

  v9 = (a1 + v5) + v7;
  v10 = v9 - v2;
  v11 = (unint64_t)(v9 - v2) < 0x10;
  v12 = v9 - v3 - 3;
  if (v12 < 0x10)
    v11 = 1;
  v13 = v9 - v4 - 2;
  if (v13 < 0x10)
    v11 = 1;
  v14 = (unint64_t)(v9 - v6) < 0x10 || v11;
  if (v10 < (((a2 - 72) | 0x40Du) ^ 0xFFFFFFFFFFFFF82DLL) + ((a2 + 312) | 0x170u))
    v14 = 1;
  if (v12 < 0x10)
    v14 = 1;
  if (v13 < 0x10)
    v14 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((1044 * ((v14 & 1) == 0)) | a2)) - 12))();
}

uint64_t sub_18CB171B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int8x16_t *v4;
  uint64_t v5;
  uint64_t v6;

  *(int8x16_t *)(v5 + (((v3 ^ 0x3B8u) + 4294967095) & (v1 + a1))) = veorq_s8(*v4, (int8x16_t)xmmword_18CF26840);
  return (*(uint64_t (**)(__n128))(v6 + 8 * ((193 * (((v2 + 1) & 0x1FFFFFFF0) == 16)) ^ v3)))((__n128)xmmword_18CF26840);
}

void sub_18CB17214()
{
  JUMPOUT(0x18CB171ECLL);
}

void sub_18CB17220()
{
  JUMPOUT(0x18CB17230);
}

uint64_t sub_18CB172A0()
{
  unsigned int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = (*(_DWORD *)(v3 + 68) ^ v0) + v1 + v0 - (v4 & (2 * ((*(_DWORD *)(v3 + 68) ^ v0) + v1)));
  *(_DWORD *)(v3 + 68) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (int)((((v6 ^ v0) >= v1)
                                               * ((((v2 - 79) | 0x60) ^ 0xFFFFFF02) + ((v2 + 62) | 0x40))) ^ v2))
                            - 4))();
}

void sub_18CB172F8()
{
  JUMPOUT(0x18CB17308);
}

uint64_t sub_18CB173B4(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((a2 - 413486843) < 0x38)
                                          * ((v2 - 155) ^ 0x5E ^ (v2 - 1851043592) & 0x6E54ACFF)) ^ (v2 - 1361)))
                            - 4))();
}

uint64_t sub_18CB17410()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((980
                                               * ((char)((((v1 - 53) & 0xDE) - 104) ^ *(_BYTE *)(v0 + 96)) >= (char)(((((v1 - 53) & 0xDE) + 94) ^ 0xA6) + ((v1 - 53) & 0xDE) + 102))) ^ (v1 + 953554891) & 0xC729E3DE))
                            - 12))();
}

uint64_t sub_18CB1746C()
{
  unsigned __int8 v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1949 * (v0 == ((v1 + 19) ^ 0xB2 ^ (2 * v1) ^ 0xBE))) ^ v1)))();
}

void sub_18CB174A4()
{
  uint64_t v0;
  char v1;
  char v2;
  int v3;
  unsigned int v4;
  unint64_t v5;

  v2 = v1 ^ 0x17;
  v3 = *(_DWORD *)(v0 + 64);
  v4 = *(_DWORD *)(v0 + 68);
  *(_BYTE *)(v0 + 56) = (((v3 - 605314902) >> 21)
                       - (((v3 - 605314902) >> 21 << (v2 - 65)) & 0x56)
                       - 85) ^ 0x1A;
  *(_BYTE *)(v0 + 57) = (((v3 - 605314902) >> 13) - (((v3 - 605314902) >> 12) & 0xB6) - 37) ^ 0x6A;
  HIDWORD(v5) = v3 + 468426922;
  LODWORD(v5) = v4 ^ 0x60000000;
  *(_BYTE *)(v0 + 58) = (((v3 - 605314902) >> 5) - (((v3 - 605314902) >> 4) & 0xFC) - 2) ^ 0x4F;
  *(_BYTE *)(v0 + 59) = ((v5 >> 29) - ((2 * (v5 >> 29)) & 0x2A) - 107) ^ 0x24;
  *(_BYTE *)(v0 + 60) = (v4 >> 21) ^ 0xA1;
  *(_BYTE *)(v0 + 61) = (v4 >> 13) ^ 0x9B;
  *(_BYTE *)(v0 + 62) = (v4 >> 5) ^ 0x22;
  JUMPOUT(0x18CB17594);
}

uint64_t sub_18CB175C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10 + 8 * (v7 ^ (1695 * ((v8 + v9 + 1782) < 0x40)))) - ((42 * (v7 ^ 0x2BE) - 850) | 6u) + 30))(a1, a2, a3, a4, a5, a6, a7, LODWORD(STACK[0x690]));
}

uint64_t sub_18CB17610()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v0 - v1 - v2 + 96 >= (v3 ^ 0x375u)) * (v3 + 585)) ^ v3)) - 8))();
}

uint64_t sub_18CB17654()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((((((v1 ^ 0x1F4) - 476) ^ 0x667) - 1672) * (v0 < 0xF)) ^ v1 ^ 0x1F4))
                            - 8))();
}

uint64_t sub_18CB17690@<X0>(int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)&v6 = 0xB1B1B1B1B1B1B1B1;
  *((_QWORD *)&v6 + 1) = 0xB1B1B1B1B1B1B1B1;
  *(_OWORD *)(v2 + (a1 + a2)) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((v3 & 0x1FFFFFFF0) == 16) * (v4 ^ 7)) ^ (v4 - 720))) - 4))();
}

uint64_t sub_18CB176D4(__n128 a1)
{
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(__n128 *)(v1 + v4) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 == 0) * v3) ^ v2)) - 4))();
}

uint64_t sub_18CB176FC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((7 * (v2 ^ 0x35E)) ^ 0x2BC) * (v0 != v1)) ^ v2)) - 4))();
}

uint64_t sub_18CB17738()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((433 * ((v0 & 8) == (((v1 - 667) | 0x82u) ^ 0xAALL))) ^ v1))
                            - ((v1 - 1895265012) & 0x70F776FD ^ 0x6C5)))();
}

uint64_t sub_18CB17798@<X0>(int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_QWORD *)(v2 + (v4 + a1 + a2)) = 0xB1B1B1B1B1B1B1B1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8 * (((v4 - (v3 & 0x1FFFFFFF8) == -8) * (((v5 - 39) | 0x228) - 423)) | v5))
                            - 4))();
}

uint64_t sub_18CB177E8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  uint64_t v4;

  *(_BYTE *)(v1 + (v2 + a1)) = -79;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)((117 * ((v2 + 1 + a1) < 0x40)) ^ (v3 - 1058)))
                            - (v3 ^ 0x6C5)))();
}

void sub_18CB17830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  STACK[0x840] = *(_QWORD *)(v9 + 8 * v8);
  LODWORD(STACK[0x668]) = a8 ^ 0x556;
  LODWORD(STACK[0x670]) = (a8 ^ 0x556) + 1790221395;
  LODWORD(STACK[0x688]) = -514044794;
  LODWORD(STACK[0x680]) = 2042623983;
  LODWORD(STACK[0x678]) = -1076953617;
  JUMPOUT(0x18CAEA904);
}

uint64_t sub_18CB17848(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (a1 ^ (499 * (v1 == v2)))) - ((a1 - 197) ^ 0x48Eu) + 1153))();
}

void sub_18CB17878()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x730]) = v1;
  STACK[0x840] = *(_QWORD *)(v2 + 8 * (int)v0) + (v0 ^ 0xFFFFFFFFFFFFFFF7);
  JUMPOUT(0x18CB178A0);
}

uint64_t sub_18CB1795C@<X0>(int a1@<W2>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v8 + (v6 + a2)) = *(_BYTE *)(v7 + v2 - 526565179) ^ *(_BYTE *)(v3 + ((v2 - 526565179) & 0xF)) ^ *(_BYTE *)(((v2 - 526565179) & 0xF) + v4 + 3) ^ (((v2 - 59) & 0xF) * (((a1 ^ 0xB6) - 80) & 0x17 ^ 0x1A)) ^ *(_BYTE *)(((v2 - 526565179) & 0xF) + v5 + 2) ^ 0xB1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((1462 * ((v6 - 1496755164) < 0x40)) ^ a1 ^ 0x5B6))
                            - 12))();
}

void sub_18CB17A00()
{
  JUMPOUT(0x18CB17990);
}

uint64_t sub_18CB17A08(int a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  unint64_t v12;
  int v13;
  _BOOL4 v14;

  v11 = v1 < v2;
  *(_BYTE *)(v3 + v4 + v8) = 0;
  v12 = v3 + v9 + (v5 & v6);
  v13 = v11 ^ (v12 < v2);
  v14 = v12 < v1;
  if (!v13)
    v11 = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((!v11 * a1) ^ v7)) - 4))();
}

uint64_t sub_18CB17A58(int a1)
{
  return sub_18CB17A08(a1);
}

uint64_t sub_18CB17A60(void *a1)
{
  int v1;
  unsigned int v2;

  v2 = (v1 + 1779892486) & 0x95E8FFD6;
  free(a1);
  STACK[0x7B8] = 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[((STACK[0x6B8] != 0) * ((v2 ^ 0x160) + 1010)) ^ v2] - 8))();
}

uint64_t sub_18CB17AB8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * ((208 * (v4 + 8 != ((v5 - 1487276188) & 0x58A60EED ^ (v5 + 434 + a4)))) ^ v5)))();
}

uint64_t sub_18CB17BA4(void *a1)
{
  unint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  unsigned int v5;
  int v6;

  STACK[0x8A0] = STACK[0x5D0];
  v5 = ((v2 ^ 0x19B) + 1581196815) & 0xA1C0DEDD;
  STACK[0x948] = v1;
  STACK[0x8F0] = STACK[0x678];
  free(a1);
  v6 = STACK[0x5F0];
  STACK[0x680] = v3;
  LODWORD(STACK[0x660]) = v4;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1852 * (v6 == (((v5 - 1686) | 0x1C0) ^ 0x1F7))) ^ (v5 - 1423)] - 4))();
}

uint64_t sub_18CB17BEC()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x72C]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1404
                                          * ((LODWORD(STACK[0x82C]) | ((unint64_t)(LODWORD(STACK[0x82C]) < 0x1B53B28EuLL) << 32))
                                           - 332463153 != ((v1 + 2134350393) & 0xF2FEFFFD ^ ((v1 + 1368)
                                                                                           + 1974740772)))) ^ v1))
                            - 4))();
}

uint64_t sub_18CB17C60()
{
  return sub_18CB17A08(23);
}

uint64_t sub_18CB17CBC@<X0>(int a1@<W1>, int a2@<W8>)
{
  uint64_t v2;

  LODWORD(STACK[0x82C]) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((972 * (((STACK[0x7B8] == 0) ^ ((a1 ^ 0x78) + 1)) & 1)) ^ a1 ^ 0x72369A5B))
                            - 12))();
}

uint64_t sub_18CB17CD4()
{
  unsigned int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x680];
  LODWORD(STACK[0x890]) = *(unsigned __int8 *)(STACK[0x680] + 1)
                        - (((v0 ^ 0xB8) - 176) & (2 * *(unsigned __int8 *)(STACK[0x680] + 1)))
                        + 1985812931;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((67 * (*(unsigned __int8 *)(v2 + 6) != ((v0 - 17) ^ 0x7D))) ^ v0))
                            - 8))();
}

uint64_t sub_18CB17D30()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((233
                                          * ((LODWORD(STACK[0x72C]) | ((unint64_t)(LODWORD(STACK[0x72C]) < 0x456D9175uLL) << 32)) != 1164808565)) ^ v0))
                            - 8))();
}

uint64_t sub_18CB17DB0@<X0>(unint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = v2 < v3;
  *((_BYTE *)&STACK[0xBB0] + v4 - 0x7874E3F8E112FF29) = 40;
  if (v6 == v4 - 0x7874E3F8AD22A4CALL < a1)
    v6 = v4 - 0x7874E3F8AD22A4CALL < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((2 * !v6) | (8 * !v6)) ^ (v1 - 1110)))
                            - (v1 - 1368)
                            + 365))();
}

uint64_t sub_18CB17E74@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(unsigned __int8 *)STACK[0x680] - 1 < 2)
                                          * ((a1 - 1178359376) & 0x463C579F ^ 0x7B0)) ^ a1))
                            - 4))();
}

uint64_t sub_18CB17F00()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((STACK[0x6B8] != 0) * ((v0 ^ 0x160) + 1010)) ^ v0)) - 8))();
}

uint64_t sub_18CB18028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((131 * (v8 + 8 != a8)) ^ v9))
                            - ((((v9 - 707) | 0x470u) + 217) ^ 0x6C5)))();
}

uint64_t sub_18CB18068(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v3;
  int v4;
  int v5;

  v5 = v4 - 116;
  STACK[0x8A0] = STACK[0x5C0];
  STACK[0x740] = v3;
  STACK[0xA48] = STACK[0x678];
  free(a3);
  STACK[0x7C0] = 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[((((v5 + 108) | 0x481) - 920) * (STACK[0x848] != 0)) ^ v5] - 8))();
}

void sub_18CB180CC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 928048777 * (((a1 | 0x634B8ECF) - (a1 | 0x9CB47130) - 1665896144) ^ 0x4557FBA2);
  __asm { BR              X10 }
}

uint64_t sub_18CB18184()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((445
                                          * (((*(_QWORD *)(v1 + 120) == 0x6262E0568D5240A8) ^ (((v0 + 22) ^ 0xBF) - 23)) & 1)) ^ (v0 + 278)))
                            - 4))();
}

uint64_t sub_18CB182D0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 - 559) ^ 0x204) * (v2 != v1)) ^ v0)))();
}

uint64_t sub_18CB182F4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((*(_QWORD *)(v1 - 0x6262E0568D5240A0) != 0) * (a1 - 371)) ^ a1))
                            - 8))();
}

uint64_t sub_18CB18328@<X0>(void *a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  v4 = a2 - 488;
  free(a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * ((v4 + 806) | (8 * (*(_QWORD *)(v2 - 0x6262E0568D524090) == 0))))
                            - 4))();
}

uint64_t sub_18CB18360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  free((void *)(v1 - 0x6262E0568D5240A8));
  *(_QWORD *)(v0 + 120) = 0x6262E0568D5240A8;
  v4 = malloc_type_malloc(0x28uLL, 0x1010040725982CDuLL) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((v3 + 619220206) & 0xDB1772D6 ^ (v3 - 1790488947) & 0x6AB8B56F ^ 0x56D)
                                               * v4) ^ (v3 + 1114)))
                            - 4))();
}

uint64_t sub_18CB18454(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v6;
  void *v7;

  v6 = *(_DWORD *)(v1 + 20) + v2;
  *a1 = *(_QWORD *)(v1 + 40) ^ v2;
  a1[1] = 0;
  a1[3] = 0;
  v7 = malloc_type_malloc((v6 - 1808951162), 0x45FA0C94uLL);
  a1[1] = (uint64_t)v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((57 * (((v4 - 107) ^ (v7 == 0)) & 1)) ^ v4))
                            - 12))();
}

uint64_t sub_18CB184B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  *(_DWORD *)(v0 + 16) = v2;
  v4 = (v2 | ((unint64_t)(v2 < 0x6BD2677A) << 32)) + 307034700 != (v3 ^ 0x418u)
                                                                                     - 157
                                                                                     + 2115985648;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v4 | (8 * v4)) ^ v3 ^ 0x418)) - 12))();
}

uint64_t sub_18CB18544@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;
  char v10;

  v9 = v3 < v2;
  v10 = *(_BYTE *)(v4 + *(_QWORD *)(v7 + 32) - 0x46CAA1F943420962);
  *(_BYTE *)(v5 + a1 - 0x4AB2092B44DC0CF6) = v10 - ((a2 ^ 0x2D) & (2 * v10)) - 81;
  if (v9 == v6 - 0x75FCE2784E5EFC13 < v2)
    v9 = v6 - 0x75FCE2784E5EFC13 < v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v9 | (8 * v9)) ^ a2)) - 12))();
}

uint64_t sub_18CB185EC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  void *v5;

  v5 = malloc_type_malloc(*(_DWORD *)(v0 + 28) ^ v2 ^ 0x7670799Bu, 0x4C9DE76uLL);
  *(_QWORD *)(v1 + 24) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((725 * (((v5 == 0) ^ (v4 + 90) ^ 0x5B) & 1)) ^ v4))
                            - 12))();
}

uint64_t sub_18CB18648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;

  *(_DWORD *)(v0 + 32) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v3 ^ (104
                                               * ((v1 ^ 0xEFBFFFFFDCDCF7FFLL)
                                                + 0x10400000C98F0068
                                                + ((2 * v1) & 0x1B9B9EFFELL) == 2792093799))))
                            - 12))();
}

uint64_t sub_18CB186F8(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  _BOOL4 v11;

  v11 = v2 < v3;
  *(_BYTE *)(v6 + a1 - 0x220F83238F6918E4) = *(_BYTE *)(v5 + *v8 - 0x5514BB7B4338F102)
                                             - (((v10 + 61) & 0xBF ^ 0x73) & (2
                                                                            * *(_BYTE *)(v5 + *v8 - 0x5514BB7B4338F102)))
                                             - 81;
  if (v11 == v7 - 0x766F905786A7B282 < v1)
    v11 = v7 - 0x766F905786A7B282 < v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((!v11 * v4) ^ v10)) - 12))();
}

void sub_18CB187B4(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v2 + 120) = a1;
  *(_DWORD *)(v2 + 96) = (*(_DWORD *)(v2 + 96) & 0xFFFFFFFB ^ 0x79887DCC)
                       + 2038987977
                       + ((2
                         * ((*(_DWORD *)(v2 + 96) & 0xFFFFFFFB ^ 0x79887DCC) & (3 * (v1 ^ 0x176) + 2038987977) ^ (*(_DWORD *)(v2 + 96) | 0x7FFFFFED))) ^ 0x2D)
                       + 260;
  *(_DWORD *)v2 = 2023518722;
  *(_DWORD *)(v2 + 4) = -1223708077;
  *v3 = v2;
}

uint64_t xtiKg(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  unint64_t v5;
  _DWORD v7[2];
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v5 = 444472921
     * ((((unint64_t)v7 | 0xEA735D22C64C6F32)
       - ((unint64_t)v7 | 0x158CA2DD39B390CDLL)
       + 0x158CA2DD39B390CDLL) ^ 0x6A6885817B3808DCLL);
  v10 = v5 ^ 0x68D9B3A5;
  v8 = a4;
  v9 = v5 + 0x18CA8C9A8;
  v12 = a2;
  v13 = a1;
  v7[0] = v5 ^ a5;
  v7[1] = v5 ^ a3;
  sub_18CA8C904((uint64_t)v7);
  return v11;
}

uint64_t sub_18CB18D94(uint64_t result)
{
  unint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  _BOOL4 v6;
  int v7;

  v1 = 1606104089 * ((((2 * result) | 0x3ADB71A5212363FCLL) - result - 0x1D6DB8D29091B1FELL) ^ 0xDFD343E6E586F3C0);
  v2 = *(_DWORD *)(result + 24) ^ (1606104089 * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0));
  v3 = *(_QWORD *)(result + 32) + v1;
  v4 = *(_QWORD *)result - v1;
  v5 = (uint64_t)v4 < (uint64_t)v3;
  v6 = v4 < v3;
  v7 = v5;
  if (((*(_DWORD *)(result + 12) ^ (1606104089
                                   * ((((2 * (_DWORD)result) | 0x212363FC) - (_DWORD)result + 1869499906) ^ 0xE586F3C0))) & 1) != 0)
    v6 = v7;
  if (!v6)
    v2 = *(_DWORD *)(result + 20) - 1606104089 * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0);
  *(_DWORD *)(result + 8) = *(_DWORD *)(result + 16) ^ (1606104089
                                                      * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0)) ^ v2;
  return result;
}

void sub_18CB18E30(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_18CB18EB4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((785 * (*(_DWORD *)(a1 + 8) + a2 == 640809546)) ^ v2))
                            - ((v2 + 1423) ^ 0x63BLL)))();
}

uint64_t sub_18CB18EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char v13;

  v11 = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(a1 + 56))
    v12 = v11 == 0x353232397341B08CLL;
  else
    v12 = 1;
  v13 = v12;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * ((15 * (((v9 + 114) ^ v13) & 1)) ^ v9)) - 2 * (v9 ^ 0x661u) + 152))(a1, v11, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_18CB18F54@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((25
                                          * (((*(_DWORD *)(a1 + 4) - a2) ^ 0x41800A13) == *(_DWORD *)(a1 + 48)
                                                                                        + a2
                                                                                        + ((v2 - 1439) ^ 0xB544CA68))) | (v2 - 1423)))
                            - 8))();
}

uint64_t sub_18CB18FAC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  char v3;
  uint64_t v4;
  int v5;
  _BOOL4 v7;

  v5 = (v3 & 0xF ^ 0x71E4164B | 0x4BCDD096) - ((v2 - 1271779627) | v3 & 0xF ^ 0x71E4164B);
  v7 = *(_DWORD *)(a1 + 64) - a2 != 290818466 || v5 != -2047371403;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v7 * ((v2 ^ 0x30) - 116)) ^ v2)) - 8))();
}

_DWORD *sub_18CB19020(_DWORD *result)
{
  int v1;

  *result = v1;
  return result;
}

#error "18CB19044: too big function (funcsize=0)"

void sub_18CB69458(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,int a22,int a23,int a24,int a25,char a26,uint64_t a27,int a28,int a29)
{
  int v29;
  int v30;
  int v31;
  int v32;
  int v36;
  int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  int v49;

  if (v32 == 52)
    a19 = a4;
  LODWORD(STACK[0x2D8]) = a19;
  if (v32 == 52)
    a20 = v31;
  LODWORD(STACK[0x2D4]) = a20;
  if (v32 == 52)
    a22 = v30;
  LODWORD(STACK[0x2CC]) = a22;
  v36 = LODWORD(STACK[0x458]) + 669;
  if (v32 == 52)
    a21 = v29;
  LODWORD(STACK[0x2D0]) = a21;
  v38 = ((LODWORD(STACK[0x28C]) + 1) & 3) + 1893226842 - (((LODWORD(STACK[0x28C]) + 1) << (v36 ^ 0x73)) & 4);
  v39 = STACK[0x42C];
  v40 = ((((a29 + 2) & 3) + 1182176802 - ((2 * (a29 + 2)) & 4)) | LODWORD(STACK[0x42C])) ^ 0x46769622;
  v41 = (LODWORD(STACK[0x274]) + 1) & 3;
  v42 = (v41 - 1306575377 - 2 * v41) ^ 0xB21F3DEF | LODWORD(STACK[0x42C]);
  LODWORD(STACK[0x2C0]) = (v42 ^ 0x3EFB7FF7) - 9569301 + ((2 * v42) & 0x7DF6FFEE);
  v43 = (((a25 + 9112610) & 3) + 1629555866 - ((2 * (a25 + 9112610)) & 4)) ^ 0x61210C9A | v39;
  LODWORD(STACK[0x2B0]) = (v43 ^ 0x4BE6BF7E) - 50466856 + ((2 * v43) & 0x158D66DC);
  v44 = (LODWORD(STACK[0x428]) + 2) & 3 | v39;
  v45 = (((a26 + 81) & 3) + 590103129 - 2 * ((a26 + 81) & 1)) ^ 0x232C4259 | v39;
  v46 = ((LODWORD(STACK[0x278]) + 1) & 3 | v39)
      - 2
      * (((LODWORD(STACK[0x278]) + 1) & 3 | v39) ^ (LODWORD(STACK[0x278]) + 1) & 2);
  v47 = (LODWORD(STACK[0x27C]) + 2) & 3;
  v48 = (v47 - 1056220193 - 2 * v47) ^ 0xC10B5BDF | v39;
  LODWORD(STACK[0x428]) = (v48 ^ 0x3B762EAD) - 840049665 + ((2 * v48) & 0x76EC5D5A);
  v49 = ((STACK[0x280] & 3) + 62153145 - 2 * (STACK[0x280] & 1)) ^ 0x3B461B9 | v39;
  LODWORD(STACK[0x2A0]) = (v49 ^ 0xFFCAFAFF) + 1564463026 + ((2 * v49) & 0x7F95F5FE);
  LODWORD(STACK[0x438]) = v39 | 0xD7FD50A0 | (LODWORD(STACK[0x430]) - 1) & 3;
  LODWORD(STACK[0x298]) = ((v38 ^ 0x70D8595A | v39) ^ 0xBEEF57FE)
                        + 2078277408
                        + ((2 * (v38 ^ 0x70D8595A | v39)) & 0x1C4E0D7C);
  LODWORD(STACK[0x28C]) = a18 + 1263796212;
  LODWORD(STACK[0x2B8]) = v40 - ((2 * v40) & 0x1000809E) + 134665807;
  LODWORD(STACK[0x2A8]) = v44 - 2146609709 - ((2 * v44) & 0x1C) + 11;
  LODWORD(STACK[0x274]) = v45 - ((2 * v45) & 0x28A0620C) + 930361670;
  LODWORD(STACK[0x440]) = v46 + 1461125917;
  JUMPOUT(0x18CB1B3C0);
}

void sub_18CB69794(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_18CB69810(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  _QWORD v7[3];
  int v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v2 + 24);
  v6 = 941074649 * (((v7 | 0xB3A4DD8A) - (v7 & 0xB3A4DD8A)) ^ 0xB36C12EE);
  v7[1] = *(_QWORD *)(v2 + 16);
  v7[2] = v5;
  LODWORD(v7[0]) = v6 - 1425378415 + v1 + 239;
  v9 = v4;
  v8 = a1 - v6;
  sub_18CBBB678(v7);
  *(_DWORD *)(v3 + 16) = HIDWORD(v7[0]);
}

uint64_t SwZuQte6Dm(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  _QWORD v5[4];
  int v6;
  unsigned int v7;
  _QWORD *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t vars0;

  v10 = *MEMORY[0x1E0C80C00];
  v5[0] = 0x18CB69810;
  v5[1] = a1;
  v5[2] = a2;
  v5[3] = a3;
  v6 = a4;
  v7 = (230600693 * ((&vars0 - 333391412 - 2 * ((&vars0 - 32) & 0xEC20D9EC)) ^ 0x3E1C5FC7)) ^ 0x54F58F50;
  v8 = v5;
  sub_18CB69794((uint64_t)&v7);
  return v9;
}

void sub_18CB69CB8(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;

  v1 = 1189216979 * ((2 * (a1 & 0xB5105BF) - a1 - 189859264) ^ 0xDA45F686);
  v2 = *(_DWORD *)a1 ^ v1;
  if (*(_QWORD *)(a1 + 16))
    v3 = *(_DWORD *)(a1 + 8) - v1 == 475027196;
  else
    v3 = 1;
  v4 = v3;
  __asm { BR              X8 }
}

uint64_t sub_18CB69D8C()
{
  int v0;
  int v1;
  void *v2;

  v2 = malloc_type_malloc((((v0 + 138) ^ 0xFFFFFE3E) & (v1 - 475027181) ^ 0x57BFDFDF)+ ((v0 ^ 0xAF7FBEE4) & (2 * (v1 - 475027181)))- 1472192461, 0x69448721uLL);
  STACK[0x3A8] = (unint64_t)v2;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(939 * (v2 != 0)) ^ v0] - 4))();
}

uint64_t sub_18CB69E14(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;

  STACK[0x358] = v6;
  *a1 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((29
                                          * ((((v7 | ((unint64_t)(v7 < v5) << 32)) == 475027196) ^ (11 * (v4 ^ 0x4B))) & 1)) ^ v4))
                            - 8))();
}

uint64_t sub_18CB69ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;

  v13 = v5 < v4;
  *(_BYTE *)(v8 + v11 - 0x2DC1E73D7BCF3CB6) = *(_BYTE *)(((v10 + 997) | 4u) + v7 + v12 - 0x70C8EF7C0E1664A0);
  if (v13 == v9 - 0x2529CB755DDA9528 < v4)
    v13 = v9 - 0x2529CB755DDA9528 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((v13 * v6) ^ v10)) - 8))();
}

uint64_t sub_18CB69F64@<X0>(unint64_t a1@<X0>, uint64_t a2@<X3>, unint64_t a3@<X4>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  int v6;
  unint64_t v7;

  STACK[0x338] = v7;
  STACK[0x350] = a1;
  LODWORD(STACK[0x34C]) = v6;
  STACK[0x340] = a3;
  *(_BYTE *)(a3 + v5 - 0x217F59977FC75E46) = 0x80;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((117 * (((a4 + 785031716) & 0xD13558B7 ^ 0xCB34FFB6) + v4 > 0x7FFFFFFE)) ^ a4))
                            - 4))();
}

uint64_t sub_18CB69FE8@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;

  *(_BYTE *)(v4 + ((3 * (a2 ^ 0x586)) ^ (v3 + 145)) + v2) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v2 + v3 > v5) * v6) ^ a2)) - 4))();
}

uint64_t sub_18CB6A028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((dword_1EE0569EC == 1197784504) * ((v4 + 89) ^ 0xBD)) ^ v4))
                            - (((v4 + 83) | 0x100u) ^ 0x1EALL)))();
}

uint64_t sub_18CB6A070()
{
  int v0;
  int v1;

  v1 = MEMORY[0x18D7894BC](0, &STACK[0x3C4]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[((((2 * v1) & 0xFFFF36DE) + (v1 ^ 0x7FFF9B6F) == 2147457903)
                                             * (((8 * v0) ^ 0x1D0) - 1710)) ^ v0]
                            - 4))();
}

uint64_t sub_18CB6A0C4()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  strcpy((char *)(v1 - 215), "com_apple_driver_FairPlayIOKit");
  v2 = IOServiceMatching((const char *)(v1 - 215)) != 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1318 * v2) ^ v0] - ((v0 + 292) | 0x4A0u) + 1708))();
}

uint64_t sub_18CB6A158(const __CFDictionary *a1)
{
  int v1;
  kern_return_t MatchingServices;

  MatchingServices = IOServiceGetMatchingServices(STACK[0x3C4], a1, (io_iterator_t *)&STACK[0x360]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1394
                                             * (((2 * MatchingServices) & 0xDF7EDFFE)
                                              + (MatchingServices ^ ((v1 ^ 0x59A) + 1874815625)) == 1874817023)) ^ v1]
                            - ((v1 + 1476) ^ 0x6B4)))();
}

uint64_t sub_18CB6A1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  io_object_t v6;

  v6 = IOIteratorNext(STACK[0x360]);
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((189
                                          * ((((107 * (v4 ^ 0x566)) ^ (((2 * v6) & 0xD7ABF4FC) + (v6 ^ 0xEBD5FA7E) == -338298242)) & 1) == 0)) ^ v4))
                            - 8))();
}

uint64_t sub_18CB6A234@<X0>(int a1@<W8>)
{
  int v1;
  kern_return_t v2;

  v2 = IOServiceOpen(a1 + 338298242, *MEMORY[0x1E0C83DA0], 0, (io_connect_t *)&STACK[0x378]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(28
                                             * (((v2 << (-42 * (v1 ^ 0x7E) + 81)) & 0x78FF67FC) + (v2 ^ 0xBC7FB3FE) != -1132481538)) ^ v1 ^ 0x191]
                            - 8))();
}

uint64_t sub_18CB6A2C0()
{
  int v0;
  int v1;
  io_object_t v2;
  uint64_t v3;
  uint64_t v4;

  IOObjectRelease(v2);
  v4 = IOObjectRelease(STACK[0x360]);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[((*(_DWORD *)(v3 + 2540) == v1)
                                                           * (((v0 - 1610) | 0x180) ^ 0x1A1)) ^ (v0 - 1565)]
                                          - 12))(v4);
}

uint64_t sub_18CB6A354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  LODWORD(STACK[0x510]) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(a4
                                                                                   + 8
                                                                                   * ((27
                                                                                     * ((v5 | ((unint64_t)(v5 < 0x511B57D6) << 32))
                                                                                      + 1135769905 == 28 * (v4 ^ 0x1E3u) + 2496516219)) ^ v4))
                                                                       - 4))(a1, a2, &STACK[0x510]);
}

uint64_t sub_18CB6A3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;

  v14 = v7 < v9;
  *(_BYTE *)(v11 + v13 - 0x6F1BBE0CE1938ABCLL) = *(_BYTE *)(v10 + a5 - 0x5C7293304D46266);
  if (v14 == v12 - 0x7AF88F636F6F810 < (unint64_t)((v5 - 478) | 0x84u) + v6)
    v14 = v12 - 0x7AF88F636F6F810 < v7;
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(a4 + 8 * ((!v14 * v8) ^ v5)) - 4))(v12 - 0x7AF88F636F6F810 < v7);
}

uint64_t sub_18CB6A498@<X0>(void *a1@<X2>, unint64_t a2@<X4>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  _BOOL4 v6;

  STACK[0x330] = a2;
  LODWORD(STACK[0xCE4]) = v4 + v3;
  STACK[0x478] = 2008;
  STACK[0x328] = (unint64_t)a1;
  v6 = IOConnectCallStructMethod(a3 - 1197784504, 0x22u, a1, 0x7D8uLL, a1, &STACK[0x478]) == 0;
  return ((uint64_t (*)(void))qword_1E2538EC0[(v6 * ((16 * (v5 ^ 0xE7)) ^ 0x522)) ^ v5])();
}

uint64_t sub_18CB6A504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (int)(((LODWORD(STACK[0xCE4]) - v4 == v3)
                                     * ((v5 - 1334674570) ^ 0xB0727C59 ^ (428 * (v5 ^ 0x88)))) ^ v5)))();
}

uint64_t sub_18CB6A550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * ((78 * (((v5 + 1599546412 - v4) | (v4 - (v5 + 1599546412))) >= 0)) ^ ((int)v4 + 1334675341)))
                            - ((v4 ^ (v3 + 589))
                             + 462)
                            + 899))();
}

uint64_t sub_18CB6A624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;

  v12 = v5 < v4;
  *(_BYTE *)(v9 + a4 - 0x772B6EFA3BF7139ELL) = *(_BYTE *)(v8 + v11 - 0x3192EBE1C4EA65A8);
  if (v12 == v10 - 0x12697B86E9B1E352 < v4)
    v12 = v10 - 0x12697B86E9B1E352 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((!v12 * v6) ^ v7)) - 12))();
}

uint64_t sub_18CB6A6BC@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  unint64_t v6;

  STACK[0x3F0] = 0x7BB775407D70C8E2;
  v5 = 230600693 * ((v4 - 152) ^ 0xD23C862B);
  *(_DWORD *)(v4 - 124) = (a2 ^ 0x13CCB390)
                        - v5
                        + 2013195452
                        + ((a2 << (((v3 - 17) ^ 0x9D) + v3 + 19)) & 0xF5AFE6E8 ^ 0xD02680C8);
  v6 = STACK[0x350];
  *(_QWORD *)(v4 - 144) = a1 + v2;
  *(_QWORD *)(v4 - 136) = v6;
  *(_DWORD *)(v4 - 152) = (v3 + 251) ^ v5;
  sub_18CBBB7EC((_DWORD *)(v4 - 152));
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1259 * (*(_DWORD *)(v4 - 128) == 0)) ^ v3] - 4))();
}

uint64_t sub_18CB6A78C()
{
  int v0;
  BOOL v1;

  STACK[0x490] = 1;
  v1 = container_system_group_path_for_identifier() == 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(((v1 ^ (v0 + 1)) & 1) * (42 * (v0 ^ 0xCF) + 33)) ^ v0]
                            - 12))();
}

uint64_t sub_18CB6A7F0()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((26 * (STACK[0x490] == (v1 + 578) - 1711)) ^ v1))
                            - 12))();
}

uint64_t sub_18CB6A820()
{
  unsigned int v0;
  const char *v1;
  size_t v2;
  _BOOL4 v3;

  v2 = strlen(v1);
  v3 = malloc_type_malloc((v2 ^ 0x7F5EBAEF6C5FFBFDLL ^ v0 ^ 0x40E) + ((2 * v2) & 0xFEBD75DED8BFF73ALL) + (v0 ^ 0x80A1451093A000EFLL), 0xBDDA8B5EuLL) != 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(293 * v3) ^ v0] - 12))();
}

uint64_t sub_18CB6A8B4()
{
  int v0;
  unint64_t v1;

  LODWORD(STACK[0x310]) = umask(0);
  STACK[0x318] = v1;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(239 * (v1 + (v0 ^ 0x3EC7F2BEu) - 0x7F5EBAEEEE68DD1ELL == 3166638429)) ^ v0]
                            - 12))();
}

uint64_t sub_18CB6A94C@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;

  *(_BYTE *)(v3 + v9 - 0x64EA68701FB662CLL) = *(_BYTE *)(v6 + v2 + v8 - 0x720860B23EFB7B39);
  v11 = v4 - 0x281EACE23B562FC6 < a1;
  if (a1 < v7 != v4 - 0x281EACE23B562FC6 < v7)
    v11 = a1 < v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((!v11 * v1) ^ v5)) - 12))();
}

uint64_t sub_18CB6A9DC()
{
  int v0;
  const char *v1;
  uint64_t v2;
  int v3;

  strcpy((char *)&v1[STACK[0x318] - 0x7F5EBAEF6C5FFB9DLL], "/Library");
  STACK[0x320] = (unint64_t)v1;
  v3 = mkdir(v1, 0x1EDu);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((v0 - 1053290981) ^ (2
                                                              * ((v0 ^ 0x27 ^ (((((2 * v3) & 0x7D8FE5BE) + (v3 ^ 0x3EC7F2DF) - v0) | (v0 - (((2 * v3) & 0x7D8FE5BE) + (v3 ^ 0x3EC7F2DFu)))) >> ((v0 ^ 0x62) + 99))) & 1))))
                            - 4))();
}

uint64_t sub_18CB6AA94()
{
  int v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = *__error() != 17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v2 * (v0 + 500)) ^ v0)) - (v0 ^ 0x112u) + 487))();
}

uint64_t sub_18CB6AAD4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;

  strcpy((char *)(v0 + 570), "/ProvenanceV2");
  v3 = mkdir((const char *)STACK[0x320], 0x1EDu);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((118
                                          * (((2 * v3) & 0x67DBAB8E) + (v3 ^ ((v1 ^ 0x6A8) - 1276259405)) != -1276258874)) ^ v1))
                            - 4))();
}

uint64_t sub_18CB6AB6C()
{
  int v0;
  uint64_t v1;
  signed int v2;

  v2 = ((*__error() == ((v0 - 145) | 0x68) - 474) * ((v0 - 1852257) & 0xF4FF797F ^ 0xF4E33EED)) ^ v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v2) - 4))();
}

uint64_t sub_18CB6ABD0()
{
  uint64_t v0;
  void *v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 583) = 0x6975732E6373702FLL;
  *(_BYTE *)(STACK[0x318] - 0x7F5EBAEF6C5FFDCFLL + STACK[0x320] + 591) = 0;
  STACK[0x320] = 0;
  umask(STACK[0x310]);
  free(v1);
  return (*(uint64_t (**)(void))(v3 + 8 * ((v2 - 941826616) & 0x433FEBEF)))();
}

uint64_t sub_18CB6AC7C()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((((v0 + 1308) ^ 0x6E5) * (STACK[0x320] == 0)) ^ v0))
                            - (v0 ^ 0x190)))();
}

void sub_18CB6ACBC(void *a1)
{
  int v1;
  uint64_t v2;
  void *v3;

  free(a1);
  free(v3);
  *(_DWORD *)(v2 + 4) = v1;
}

uint64_t sub_18CB6C660(int a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  int v5;
  _BOOL4 v6;

  if (v2 < v3 != v4 + v1 < v3)
    v6 = v2 < v3;
  else
    v6 = v4 + v1 < v2;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(v6 * a1) ^ v5] - 8))();
}

uint64_t sub_18CB6CD4C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,unsigned int a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  int a66;
  unsigned int a70;
  int a72;
  int a73;
  int a74;
  uint64_t v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  BOOL v78;
  int v81;
  unsigned int v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  int v99;
  int v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v109;

  v78 = LODWORD(STACK[0x328]) == -315061333;
  if (LODWORD(STACK[0x328]) == -315061333)
    a66 = a41;
  HIDWORD(a36) = a66;
  if (LODWORD(STACK[0x328]) == -315061333)
    a74 = a73;
  LODWORD(STACK[0x208]) = a74;
  v81 = STACK[0x330];
  if (v78)
    v81 = STACK[0x2F8];
  LODWORD(STACK[0x204]) = v81;
  if ((STACK[0x2E8] & 2) != 0)
    a40 = a70;
  v83 = STACK[0x350];
  if ((STACK[0x2E8] & 2) == 0)
    v83 = STACK[0x21C];
  v109 = __PAIR64__(a40, v83);
  LODWORD(STACK[0x350]) = a33 - 154123353;
  LODWORD(STACK[0x330]) = a31 + HIDWORD(a31);
  LODWORD(STACK[0x21C]) = HIDWORD(a30) ^ a32;
  LODWORD(a62) = a72 ^ 0x3199466D;
  HIDWORD(a30) = HIDWORD(a33) ^ 0xE85C78FF;
  LODWORD(STACK[0x2F8]) = HIDWORD(a33) ^ 0x6FB56AA;
  v84 = ((v75 + 1107432187) | 0x85A86140)
      + (unint64_t)v77
      + ((unint64_t)(v77 < v76) << 32)
      - 0x104CC0AE1;
  v85 = *(_QWORD *)(STACK[0x4A8] + 8 * v84) ^ 0xAEAEAEAEAEAEAEAELL;
  v86 = 0x5F3D51B5D321F3ADLL * v85 - ((0xE7AA36BA643E75ALL * v85) & 0x9C0205775A3526ALL) + 0x4E0102BBAD1A935;
  v87 = ((2 * ((v74 ^ 0xD70042CD3D8E5C0ELL ^ v86) + v84)) & 0xEB5FFF97BEF5FF66)
      + (((v74 ^ 0xD70042CD3D8E5C0ELL ^ v86) + v84) ^ 0x75AFFFCBDF7AFFB3);
  v88 = v87
      + (((v87 - 0x75AFFFCBDF7AFFB3) >> 32) ^ 0xC322009C11008C41)
      - (((v87 - 0x75AFFFCBDF7AFFB3) >> 31) & 0x1DDFEE77CLL);
  v89 = v88
      + (((v88 - 0x38D20067F07B8BF4) >> 16) ^ 0x3F1B579BFBBEF9FDLL)
      + (((v88 - 0x38D20067F07B8BF4) >> 15) & 0xAF37F77DF3FALL);
  v90 = v89
      + (((v89 - 0x77ED5803EC3A85F1) >> 8) ^ 0x8288099040082100)
      - (((v89 - 0x77ED5803EC3A85F1) >> 7) & 0xEFECDF7FEFBDFELL)
      + 2;
  LODWORD(v89) = v90 - ((2 * v90 + 125481498) & 0xF1F9656);
  v91 = v90 - ((2 * v90 + 0x42187B6119171EDALL) & 0x459B1ED95A3B0054) - 0x7C2632E2C656F069;
  v92 = 0x5F3D51B5D321F3ADLL * v85 - ((0xBE7AA36BA643E75ALL * v85) & 0xF8016C756A7E6C20) + 0x7C00B63AB53F3610;
  v93 = ((2 * v91) ^ 0x459B1ED95A3B0054)
      - ((2 * ((2 * v91) ^ 0x459B1ED95A3B0054)) & 0x1515B3A0159C7194)
      + 0xA8AD9D00ACE38CALL;
  v94 = (v91 ^ 0x794C102815D3B64ALL)
      + (v93 & 0xB7033E89719C6CC0 ^ 0x1966E3FE6F56F15FLL)
      + ((2 * v93) & 0x26007410C3309100 ^ 0x400300001101100)
      - 0x1B64FB7E6FDAD99FLL;
  v95 = ((2 * ((v92 ^ 0x7F3AA8C0F2D6C52ELL ^ (v94 - ((2 * v94) & 0x6743DF48FD3E67CLL) + 0x33A1EFA47E9F33ELL)) + v84)) & 0xFF9BDB563FFB3FFELL)
      + (((v92 ^ 0x7F3AA8C0F2D6C52ELL ^ (v94 - ((2 * v94) & 0x6743DF48FD3E67CLL) + 0x33A1EFA47E9F33ELL)) + v84) ^ 0xFFCDEDAB1FFD9FFFLL);
  v96 = v95
      + (((v95 + 0x321254E0026001) >> 32) ^ 0x20A00146098C6D82)
      - (((v95 + 0x321254E0026001) >> 31) & 0x1ECE724FALL);
  v97 = v96
      + (((v96 - 0x206DEEF1298A0D81) >> 16) ^ 0xE0D9C7EDBBBF77EFLL)
      + (((v96 - 0x206DEEF1298A0D81) >> 15) & 0x18FDB777EEFDELL);
  v98 = v97
      + (((v97 - 0x147B6DEE5498570) >> 8) ^ 0x3471100011450120)
      - (((v97 - 0x147B6DEE5498570) >> 7) & 0x11DDFFFDD75FDBELL)
      + 2;
  v99 = v98 - ((2 * v98 + 316863196) & 0x1868E6A0);
  v100 = ((2 * (v98 + 158431598)) & 0x77FD7BDC) + ((v98 + 158431598) ^ 0xBBFEBDEE);
  v101 = v98 - ((2 * v98 + 0x294EF54F61BCC5CLL) & 0x3DB590138F012E78) + 0x20253FB4428E7D6ALL;
  v102 = ((2 * ((v86 ^ 0x9A3AD8227D513E09 ^ v101) + v84)) & 0xFFFA7BCFD3CDD29ELL)
       + (((v86 ^ 0x9A3AD8227D513E09 ^ v101) + v84) ^ 0x7FFD3DE7E9E6E94FLL);
  v103 = v102
       + (((v102 - 0x7FFD3DE7E9E6E94FLL) >> 32) ^ 0xC080152259A80066)
       - (((v102 - 0x7FFD3DE7E9E6E94FLL) >> 31) & 0x14CAFFF32)
       + 1;
  v104 = v103 - ((2 * v103 + 0x7F0559EB78E22C94) & 0xBA3453B08E5D93F2) - 0x63632931FC601FBDLL;
  v105 = 2
       * ((((v104 >> 16) ^ 0xDD1A29D8472ELL) & (v104 ^ 0x29D8472EC9F9))
        - ((2 * (((v104 >> 16) ^ 0xDD1A29D8472ELL) & (v104 ^ 0x29D8472EC9F9))) & 0x1A062F4A88A64))
       - 0x56A25F9D0B57759CLL;
  v106 = (v104 ^ 0xDD1AF4C26EF68ED7 ^ (v104 >> 16))
       + (v105 ^ 0x28798030F3D9BLL)
       + 0x56A0D80508584801
       + ((2 * v105) & 0x52BE4FF5EF4F6FFCLL ^ 0x52BA40C5E94104C8);
  v107 = ((2 * v106) & 0x78D5FEBE79BBFDCELL)
       + (v106 ^ 0x3C6AFF5F3CDDFEE7)
       + (((((2 * v106) & 0x78D5FEBE79BBFDCELL) + (v106 ^ 0x3C6AFF5F3CDDFEE7) - 0x3C6AFF5F3CDDFEE7) >> 8) ^ 0x5020040840A4420)
       - (((((2 * v106) & 0x78D5FEBE79BBFDCELL) + (v106 ^ 0x3C6AFF5F3CDDFEE7) - 0x3C6AFF5F3CDDFEE7) >> 7) & 0x1FBFF7EF7EB77BELL);
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(88 * ((v77 & 0xFFFFFFFE) != v76 - 1)) ^ v75] - 12))(v100 - ((2 * v100 - 107024156) & 0xCCBA9DE2) - 483604637, 3811362659, 3218045342, a4 ^ ((_DWORD)v89 + 1531782200) ^ (v99 + 363195582) ^ 0x1189EBC0 ^ ((_DWORD)v107+ 1- 2* (((_DWORD)v107 + 521649401) & 0x1A3253BF ^ ((_DWORD)v107 + 1) & 4u)- 649457485), 1531782200, 0xDD1AF4C26EF68ED7, 835515170, 1187175654, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           v109,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

void sub_18CB6D68C()
{
  JUMPOUT(0x18CB6CED0);
}

#error "18CB7020C: call analysis failed (funcsize=1832)"

uint64_t sub_18CB70214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int v71;
  unsigned int v72;
  int v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  int v93;
  int v94;

  v73 = STACK[0x280];
  if (LODWORD(STACK[0x328]) == -315061333)
    v73 = STACK[0x27C];
  LODWORD(a38) = v73;
  LODWORD(STACK[0x338]) = a68 ^ 0x469E4E42;
  LODWORD(a51) = LODWORD(STACK[0x2C8]) ^ 0x3096450C;
  LODWORD(a26) = a26 - a71;
  HIDWORD(a25) = a69 - a70;
  LODWORD(STACK[0x280]) = LODWORD(STACK[0x270]) ^ 0x49DD2801;
  LODWORD(STACK[0x27C]) = a30 - a67;
  v74 = STACK[0x4A8];
  LODWORD(STACK[0x350]) = 223 * (a6 ^ 0x3AD);
  v75 = v72 - 1389159816 + ((unint64_t)(v72 < LODWORD(STACK[0x350]) + 1389159370) << 32);
  v76 = 0x5F3D51B5D321F3ADLL * (*(_QWORD *)(v74 + 8 * v75) ^ 0xAEAEAEAEAEAEAEAELL)
      - ((0xBE7AA36BA643E75ALL * (*(_QWORD *)(v74 + 8 * v75) ^ 0xAEAEAEAEAEAEAEAELL)) & 0xD20D7122EDD468A4)
      + 0x6906B89176EA3452;
  v77 = ((2 * ((a1 ^ 0x8604011440B61650 ^ v76) + v75)) & 0xFFFCFBFF7F7DDB5ELL)
      + (((a1 ^ 0x8604011440B61650 ^ v76) + v75) ^ 0x7FFE7DFFBFBEEDAFLL);
  v78 = v77
      + (((v77 - 0x7FFE7DFFBFBEEDAFLL) >> 32) ^ 0x40CC20010154142DLL)
      - (((v77 - 0x7FFE7DFFBFBEEDAFLL) >> 31) & 0x1FD57D7A4);
  v79 = v78
      + (((v78 + 0x3F3561FF3EECFE24) >> 16) ^ 0xDF67F5EF7FEEE3BFLL)
      + (((v78 + 0x3F3561FF3EECFE24) >> 15) & 0x1EBDEFFDDC77ELL);
  v80 = v79
      + (((v79 + 0x5FCD6C0FBEFE1A65) >> 8) ^ 0xE4C825004803C880)
      - (((v79 + 0x5FCD6C0FBEFE1A65) >> 7) & 0x6FB5FF6FF86EFELL)
      + 2;
  v81 = v80 - ((2 * v80 + 0x64110B31D12D7D46) & 0x527A37296CB3297ELL) - 0x24BA5ED2610FAC9ELL;
  LODWORD(v80) = (2 * (v80 - ((2 * v80 - 785547962) & 0x6CB3297E) - 1628417182)) ^ 0x6CB3297E;
  LODWORD(v80) = (v80 - ((2 * v80) & 0xEF354F1C) - 140859506) & v71 ^ 0x44442828;
  v82 = ((2 * ((v76 ^ 0xC03BA305C0B3A0EDLL ^ v81) + v75)) & 0xEAFC7B9EF6F74FF2)
      + (((v76 ^ 0xC03BA305C0B3A0EDLL ^ v81) + v75) ^ 0x757E3DCF7B7BA7F9);
  v83 = v82
      + (((v82 - 0x757E3DCF7B7BA7F9) >> 32) ^ 0x98620A0230110686)
      - (((v82 - 0x757E3DCF7B7BA7F9) >> 31) & 0x19FDDF2F2);
  v84 = v83
      + (((v83 - 0xDE047D1AB8CAE7FLL) >> 16) ^ 0xEE6FAFE7E8DE2CFFLL)
      + (((v83 - 0xDE047D1AB8CAE7FLL) >> 15) & 0x15FCFD1BC59FELL);
  v85 = v84
      + (((v84 + 0x3B008466B952482) >> 8) ^ 0x7A3D0092C0808A22)
      + 2
      - (((v84 + 0x3B008466B952482) >> 7) & 0x185FEDA7EFEEBBALL);
  v86 = v85 - ((2 * v85 + 0xEC8C7A39620E3CLL) & 0x73C804244624CC8CLL) - 0x5A5B7B0C03C929CLL;
  LODWORD(v85) = (2 * (v85 - ((2 * v85 + 962727484) & 0x4624CC8C) + 1069772132)) ^ 0x4624CC8C;
  v87 = ((_DWORD)v85 - ((2 * (_DWORD)v85) & 0x33EA950C) - 1711977849) & v71 ^ v86;
  v88 = ((2 * ((v76 ^ 0xD0E2BA8355F85214 ^ v86) + v75)) & 0xFFBFFFF995F77F76)
      + (((v76 ^ 0xD0E2BA8355F85214 ^ v86) + v75) ^ 0x7FDFFFFCCAFBBFBBLL);
  v89 = v88
      + (((v88 - 0x7FDFFFFCCAFBBFBBLL) >> 32) ^ 0x810D00126910E960)
      - (((v88 - 0x7FDFFFFCCAFBBFBBLL) >> 31) & 0x12DDE2D3ELL);
  v90 = v89
      + (((v89 - 0xED000F340CA91BLL) >> 16) ^ 0xD9D3E3EFDFC37C5BLL)
      + (((v89 - 0xED000F340CA91BLL) >> 15) & 0x1C7DFBF86F8B6);
  v91 = v90 + (((v90 + 0x253F1C00EC2FDA8ALL) >> 8) ^ 0x8100320141A42A20) + 2;
  v92 = v91 - (((v90 + 0x253F1C00EC2FDA8ALL) >> 7) & 0x1FF9BFD7CB7ABBELL);
  v93 = (v92 - 1433685912) ^ 0xD141084C ^ (((2 * v92 - ((4 * v92 - 1439776352) & 0xE94A0E84) + 1237084178) & v71 ^ 0x27F40E9D)
                                         - 1) & v71;
  LODWORD(v79) = 2 * (v92 - ((2 * v92 + 944781904) & 0x6CB84404) + 1384398634);
  LODWORD(v79) = (v79 ^ 0x6CB84404) - 2 * ((v79 ^ 0x6CB84404) & 0x289E2D6 ^ v79 & 0x12) + 42590917;
  LODWORD(v79) = ((v79 & 0xF8058048 ^ 0x7010004B) + (v79 & 0x56A7C24 ^ 0x4A4705) - 2) ^ 0xF19CA423;
  LODWORD(v80) = a8 ^ v81 ^ (((((2 * v80) | 0x2C7C0636) - v80 - 373162779) & 0x721ED54B ^ 0x700E5440)
                           + ((((2 * v80) | 0x2C7C0636) - v80 - 373162779) ^ 0x87308B0B)
                           - (((((2 * v80) | 0x2C7C0636) - v80 - 373162779) ^ 0x87308B0B) & 0x721ED548)) ^ v87 ^ 0x63C8E97D ^ (((2 * v79) | 0xC7349934) - v79 + 476427110) ^ (v92 - ((2 * v92 + 944781904) & 0x6CB84404) + 1384398634);
  v94 = ((v80 & 0xA2FBE306 ^ 0xF3C106) - ((2 * (v80 & 0xA2FBE306 ^ 0xF3C106)) & 0x15C004) - 586487598) & 0xFFFFE31E ^ 0xFDD8E116 | (((2 * (v80 & 0x5D041CF9 ^ 0x10C0)) | 0x530EFE6A) - (v80 & 0x5D041CF9 ^ 0x10C0) + 1450737867) ^ 0xED8763DC;
  return ((uint64_t (*)(unint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))qword_1E2538EC0[(int)(((8 * (v72 - 1389159815 > 1)) | (16 * (v72 - 1389159815 > 1))) ^ a6)])(v92 - ((2 * v92 - 0x497BAEEDC7AFC5B0) & 0xDE05730A6CB84404) + 0x4A44E20E52843F2ALL, 227550054, ~(2 * (v93 & 0x9F971F ^ (v91 & 1))) + v93 + 10458911, v87, 0x195B1FC63DBF96F0, a6, 2322451083, v94 + 227550054 + (~(2 * v94) | 0xE4DFB935), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_18CB70ECC()
{
  JUMPOUT(0x18CB70338);
}

uint64_t sub_18CB70ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30,uint64_t a31,int a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  unsigned __int8 a64;
  int a68;
  int a70;
  int a72;
  int v72;
  unsigned int v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  int v144;
  unint64_t v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  uint64_t v151;

  LODWORD(STACK[0x328]) = a23 - a24;
  v72 = ((2 * (a70 ^ LODWORD(STACK[0x2B8]) ^ LODWORD(STACK[0x27C]))) ^ 0x4D7CBE50)
      - ((2 * ((2 * (a70 ^ LODWORD(STACK[0x2B8]) ^ LODWORD(STACK[0x27C]))) ^ 0x4D7CBE50)) & 0x28DA30FC)
      + 342694014;
  v73 = (v72 & 0x246BD864 ^ 0x24D8D913 | v72 & 0xD9042408) - 1;
  LODWORD(STACK[0x2B8]) = v73 & 0xDC4CE408 ^ 0xCE100401 | v73 & 0x21231864;
  v74 = 0x5F3D51B5D321F3ADLL * (*(_QWORD *)STACK[0x4A8] ^ 0xAEAEAEAEAEAEAEAELL)
      - ((0x3E7AA36BA643E75ALL * (*(_QWORD *)STACK[0x4A8] ^ 0xAEAEAEAEAEAEAEAELL)) & 0x46BE85F90739CE66)
      + 0x235F42FC839CE733;
  v90 = 0x5F3D51B5D321F3ADLL * (*(_QWORD *)(STACK[0x4A8] + 8) ^ 0xAEAEAEAEAEAEAEAELL)
      - ((0xBE7AA36BA643E75ALL * (*(_QWORD *)(STACK[0x4A8] + 8) ^ 0xAEAEAEAEAEAEAEAELL)) & 0xA4545B06A8A9D098)
      + 0x522A2D835454E84CLL;
  v75 = ((2 * v74) & 0xE7DB7FBFAAEFFBE8 ^ 0x834859ABA864CA60) + (v74 ^ 0xB64B930A2BC598C7);
  v76 = v75
      + (((v75 - 0x73EDBFDFD577FDF4) >> 32) ^ 0x99998840051E8250)
      - (((v75 - 0x73EDBFDFD577FDF4) >> 31) & 0x1F5C2FB5ELL);
  v77 = v76
      + (((v76 - 0xD87481FDA968044) >> 16) ^ 0xBD7DD5F71FFF1ADCLL)
      + (((v76 - 0xD87481FDA968044) >> 15) & 0x1ABEE3FFE35B8);
  v78 = v77
      + (((v77 + 0x34FAE1E9056A64E0) >> 8) ^ 0xA871011042680086)
      - (((v77 + 0x34FAE1E9056A64E0) >> 7) & 0x11DFDDF7B2FFEF2)
      + 2;
  v79 = v78 - ((2 * v78 - 0x78E5C13B96C25DD0) & 0x80C2CAF46B79946ELL) + 0x3EE84DC6A5B9B4FLL;
  v80 = ((2 * (v79 ^ v74)) & 0xFEDDE9FD33D5EDFELL ^ 0xC65C490D20404808) + (v79 ^ v74 ^ 0x1C50D3782FCADBFBLL);
  v81 = v80
      + (((v80 + 0x910B0166150901) >> 32) ^ 0x208403E12470B821)
      - (((v80 + 0x910B0166150901) >> 31) & 0x1B71E8FBCLL);
  v82 = v81
      + (((v81 - 0x1FF2F8DFBE5BAF20) >> 16) ^ 0x1DEDB6EBFE7EBAAELL)
      + (((v81 - 0x1FF2F8DFBE5BAF20) >> 15) & 0x16DD7FCFD755CLL);
  v83 = v82
      + (((v82 - 0x3DE0AFCBBCDA69CELL) >> 8) ^ 0x8083000581184A89)
      - (((v82 - 0x3DE0AFCBBCDA69CELL) >> 7) & 0xF9FFF4FDCF6AECLL)
      + 2;
  v84 = v83 - ((2 * v83 - 0xEC0E28F98AC8F32) & 0xDEDB08A590008C60) - 0x17F2ECF504560169;
  v85 = ((2 * (v84 ^ v74)) & 0x42DE3FEDFFDAFEBELL ^ 0x440D4C97184206) + (v84 ^ v74 ^ 0x6D5DD958B471DE5CLL);
  v86 = v85
      + (((unint64_t)(v85 + 0x5E90E009001280A1) >> 32) ^ 0x203C9000308212C5)
      - (((unint64_t)(v85 + 0x5E90E009001280A1) >> 31) & 0x19EFBDA74);
  v87 = v86
      + (((v86 + 0x3E545008CF906DDCLL) >> 16) ^ 0xFFD41F3EBF8A79FFLL)
      + (((v86 + 0x3E545008CF906DDCLL) >> 15) & 0x3E7D7F14F3FELL);
  v88 = v87
      + (((v87 + 0x3E8030CA1005F3DDLL) >> 8) ^ 0xC7A4110444030000)
      - (((v87 + 0x3E8030CA1005F3DDLL) >> 7) & 0xB7DDF777F9FFFELL)
      + 2;
  v89 = v88 - ((2 * v88 + 0x1BBEBC9E7B3EC136) & 0x1D065A14D790869ELL) - 0x439D74A656985C16;
  v91 = ((2 * ((v90 ^ 0xDCA900893F9CAB03 ^ v89) + 1)) & 0xFFC6B66FF3F13FB4)
      + (((v90 ^ 0xDCA900893F9CAB03 ^ v89) + 1) ^ 0xFFE35B37F9F89FDALL);
  v92 = v91
      + (((v91 + 0x1CA4C806076026) >> 32) ^ 0x87230B5100828DCCLL)
      - (((v91 + 0x1CA4C806076026) >> 31) & 0x1FEFAE466);
  v93 = v92
      + (((v92 + 0x78F999770584D25ALL) >> 16) ^ 0xDAFFFFFF65B1FAFBLL)
      + (((v92 + 0x78F999770584D25ALL) >> 15) & 0x1FFFECB63F5F6);
  v94 = v93
      + (((v93 - 0x62066688602D28A1) >> 8) ^ 0x24902602A89A94)
      - (((v93 - 0x62066688602D28A1) >> 7) & 0x1B6DFB3FAAECAD6)
      + 2;
  v95 = v94 - ((2 * v94 + 0x3BAA12A33A547992) & 0xF0CEC08137924B12) + 0x163C699238F36252;
  v96 = ((2 * v95) ^ 0xF0CEC08137924B12)
      - ((2 * ((2 * v95) ^ 0xF0CEC08137924B12)) & 0x95CFC4770B056B5CLL)
      + 0x4AE7E23B8582B5AELL;
  v95 ^= 0x23E6FF04230713E9uLL;
  v97 = v95
      + (v96 & 0xB7033E89719C6CC0 ^ 0x599899DFFA7E6337)
      + ((2 * v96) & 0x26067500E3388900 ^ 0x406440003000900)
      - 0x5B9BBBD6FBFE47B7;
  v98 = v97 - 2 * (v97 & 0x60DE2E8F3E4B2457 ^ v95 & 1) + 0x60DE2E8F3E4B2456;
  v99 = (v98 ^ 0x60DE2E8F3E4B2456)
      - 2
      * (((v98 ^ 0x60DE2E8F3E4B2456) + 0x5B819F44B8CE3660) & 0x7AD92E3AABA726DCLL ^ (v98 ^ 0x60DE2E8F3E4B2456) & 4)
      - 0x29A532809B8AA2C8;
  v100 = ((2 * ((v99 ^ v90) & 0xD362FDD1353660F8 ^ 0x3028D1024104098)) & 0xA6807A2028248120)
       - ((v99 ^ v90) & 0xD362FDD1353660F8 ^ 0x3028D1024104098)
       - 0x7FCD3D38DE1A5693;
  v101 = (((v99 ^ v90) & 0x2C9D022ECAC99F07 ^ 0x49C000880899500 | 0xC1B04F6DD07EE998)
        - ((v99 ^ v90) & 0x2C9D022ECAC99F07 ^ 0x49C000880899500 | 0x3E4FB0922F811667)
        + 0x3E4FB0922F811667) ^ 0x5DF4E54D9870E39CLL;
  v102 = ((v100 & 0xCD429450834AC708 ^ 0x45401410810A4201 | v100 & 0x32BD6BA37CB528F0) - 1) ^ 0xC6125A52B1CDEB60 | (((2 * v101) & 0x14CEDDC3FCC6730ALL) - v101 + 0x7598911E019CC67ALL) ^ 0xC5D1391E03DAD77ALL;
  v103 = (v102 ^ 0x3D9FCA1F7F533CE7)
       + ((2 * v102) & 0x7B3F943EFEA679CELL)
       + ((((v102 ^ 0x3D9FCA1F7F533CE7) + ((2 * v102) & 0x7B3F943EFEA679CELL) - 0x3D9FCA1F7F533CE6) >> 32) ^ 0xA0081448C40400A1)
       - ((((v102 ^ 0x3D9FCA1F7F533CE7) + ((2 * v102) & 0x7B3F943EFEA679CELL) - 0x3D9FCA1F7F533CE6) >> 31) & 0x77F7FEBC);
  v104 = v103
       + (((v103 + 0x22582197BCA8C279) >> 16) ^ 0x4DF3CDFBE9F2F7EDLL)
       + (((v103 + 0x22582197BCA8C279) >> 15) & 0x19BF7D3E5EFDALL);
  v105 = v104
       + 0x3A40A567DBABF4FBLL
       + (((v104 - 0x2B9BAC642D4A3574) >> 8) ^ 0x4041010020E67100)
       - (((v104 - 0x2B9BAC642D4A3574) >> 7) & 0x17DFDFFBE331DFELL)
       + 2;
  v106 = v105 - ((2 * v105 - 0x4C3AA59853B936E2) & 0xC5CBD195F67CF48ELL) - 0x43376A012E9E212ALL;
  v107 = (v106 ^ 0x62E5E8CAFB3E7A47)
       - 2 * (((v106 ^ 0x62E5E8CAFB3E7A47) + 0x17033E89719C6CC0) & 0x1E49935387B783F7 ^ v106 & 0x30)
       + 0x554CD1DCF953F087;
  v108 = ((2 * ((v90 ^ 0xCC63BED0D3E36B8BLL ^ v107) + 1)) & 0x75F767FFDEFEEECELL)
       + (((v90 ^ 0xCC63BED0D3E36B8BLL ^ v107) + 1) ^ 0x3AFBB3FFEF7F7767);
  v109 = v108
       + (((v108 - 0x3AFBB3FFEF7F7767) >> 32) ^ 0x809017A101237804)
       - (((v108 - 0x3AFBB3FFEF7F7767) >> 31) & 0x1FDB90FF6);
  v110 = v109
       + (((v109 + 0x4474345F0F5D1095) >> 16) ^ 0x371BEB4FFFF731B5)
       + (((v109 + 0x4474345F0F5D1095) >> 15) & 0x1D69FFFEE636ALL);
  v111 = v110
       + (((v110 + 0xD58490F0F65DEE0) >> 8) ^ 0x90C928002000240CLL)
       - (((v110 + 0xD58490F0F65DEE0) >> 7) & 0x6DAFFFBFFFB7E6);
  v112 = (((v111 - 0xF98974BEA9A581ALL) >> 30) ^ 0x774F3B7FDB771F7FLL)
       + v111
       + 2
       + (((v111 - 0xF98974BEA9A581ALL) >> 29) & 0x7B6EE3EFELL);
  v113 = (((v112 + 0x79182D3439EE8865) >> 12) ^ 0xC7E133FB31FDFEFFLL)
       + v112
       + (((v112 + 0x79182D3439EE8865) >> 11) & 0x267F663FBFDFELL);
  v114 = v113
       + (((v113 - 0x4EC906C6F80F769ALL) >> 7) ^ 0x8408506412500)
       - (((v113 - 0x4EC906C6F80F769ALL) >> 6) & 0x3EF7EF5F37DB5FELL)
       + 1;
  v115 = v114 - ((2 * v114 + 0x625D7168035EC8CALL) & 0xE97EE72A12FDE43ELL) - 0x5A11D3B6F4D1A97CLL;
  v116 = ((2 * ((v115 ^ 0xF4BF7395097EF21FLL) + 0x288AB139EA2E5744)) & 0xE6FF5F57FDBD1F76)
       + (((v115 ^ 0xF4BF7395097EF21FLL) + 0x288AB139EA2E5744) ^ 0x737FAFABFEDE8FBBLL);
  v117 = v116
       + (((v116 - 0x737FAFABFEDE8FBBLL) >> 24) ^ 0xBC80620A50844461)
       - (((v116 - 0x737FAFABFEDE8FBBLL) >> 23) & 0x1EB5EF7773CLL);
  v118 = v117
       + (((v117 - 0x300011B64F62D41CLL) >> 13) ^ 0x48541C0C842A4108)
       - (((v117 - 0x300011B64F62D41CLL) >> 12) & 0x7C7E6F7AB7DEELL);
  v119 = v118
       + (((v118 - 0x78542DC2D38D1524) >> 5) ^ 0x8411122608442580)
       - (((v118 - 0x78542DC2D38D1524) >> 4) & 0x7DDDBB3EF77B4FELL)
       + 3;
  v120 = v119 - ((2 * v119 + 0x735802E485D8AB2) & 0x9224864939CCA530) - 0x3352FCC43EEAE80FLL;
  v121 = (v120 ^ 0xE1034D759F4647B8)
       + ((v120 >> 31) ^ 0x9F305609F85218A9)
       + ((v120 >> 30) & 0x38B56FB7ALL ^ 0xFFFFFFFC7FFBCEADLL)
       + 0x60CFA9F7C5AB7DBFLL;
  v122 = (((((2 * v121) & 0xFDDF7DDAFFFF81FCLL) + (v121 ^ 0xFEEFBEED7FFFC0FELL) + 0x110411280003F02) >> 11) ^ 0x3BBE7FF7EF5FEDD6)
       + ((2 * v121) & 0xFDDF7DDAFFFF81FCLL)
       + (v121 ^ 0xFEEFBEED7FFFC0FELL)
       + (((((2 * v121) & 0xFDDF7DDAFFFF81FCLL) + (v121 ^ 0xFEEFBEED7FFFC0FELL) + 0x110411280003F02) >> 10) & 0x3CFFEFDEBFDBACLL);
  v123 = (((v122 - 0x3AAE3EE56F5FAED4) >> 4) ^ 0x7F5CFDB377DFBB7FLL)
       + v122
       + (((v122 - 0x3AAE3EE56F5FAED4) >> 3) & 0x1EB9FB66EFBF76FELL);
  v124 = v123 - ((2 * v123 - 0x74167931CE7ED4A6) & 0xC24D2D9632EC5F6CLL) - 0x58E4A5CDCDC93A9DLL;
  v125 = ((2 * ((v124 ^ 0x612696CB19762FB6) + 0x1E4A8A832E7300A6)) & 0xFDE17F1FA1FFB67ELL)
       + (((v124 ^ 0x612696CB19762FB6) + 0x1E4A8A832E7300A6) ^ 0xFEF0BF8FD0FFDB3FLL);
  v126 = v125
       + (((v125 + 0x10F40702F0024C1) >> 30) ^ 0x8A14AD011C118031)
       - (((v125 + 0x10F40702F0024C1) >> 29) & 0x5C7DCFF9CLL);
  v127 = v126
       + (((v126 + 0x76FA936F12EEA490) >> 15) ^ 0xEAB9FFDFFF9FDFBALL)
       + (((v126 + 0x76FA936F12EEA490) >> 14) & 0x3FFBFFF3FBF74);
  v128 = v127
       + (((v127 - 0x73BF6C70ECB13B2ALL) >> 8) ^ 0xFF0EB77AFFFB5E9ELL)
       + (((v127 - 0x73BF6C70ECB13B2ALL) >> 7) & 0x1D6EF5FFF6BD3CLL)
       + 1;
  v129 = v128 - ((2 * v128 + 0x1A63B82826A6CC6ELL) & 0x83307D049FDC2926) - 0x3135E5699CBE8536;
  v130 = ((2 * ((v129 ^ 0x41983E824FEE1493) + 0x2C1E97BC5C429E81)) & 0xC87FAE5EDFFFDFF6)
       + (((v129 ^ 0x41983E824FEE1493) + 0x2C1E97BC5C429E81) ^ 0xE43FD72F6FFFEFFBLL);
  v131 = (((v130 + 0x1BC028D090001005) >> 27) ^ 0x36FDEBD7F4D79CBFLL)
       + v130
       + (((v130 + 0x1BC028D090001005) >> 26) & 0x2FE9AF397ELL);
  v132 = (((v131 - 0x1B3DC30764D78CBALL) >> 15) ^ 0xF5DF7BFE60FDFAB7)
       + v131
       + (((v131 - 0x1B3DC30764D78CBALL) >> 14) & 0x2F7FCC1FBF56ELL);
  v133 = (((v132 - 0x111D3F05C5D58771) >> 8) ^ 0x7FFFF9D5A9DFF7DELL)
       + v132
       + (((v132 - 0x111D3F05C5D58771) >> 7) & 0x1FFF3AB53BFEFBCLL);
  v134 = v133 - ((2 * v133 + 0x5DC58E4920950162) & 0x471DEA4217220AD4) + 0x1271BC459BDB861BLL;
  v135 = (v134 ^ 0x3F9F7086A7EED5FALL)
       + ((v134 >> 30) ^ 0xBDEFBF5D07881CA6)
       + ((v134 >> 29) & 0x3F3EBBD78 ^ 0x1F0EB8430)
       + 0x421040A2060A2144;
  v136 = (((((2 * v135) & 0xF782BBDFDF1DB7FELL) + (v135 ^ 0xFBC15DEFEF8EDBFFLL) + 0x43EA21010712401) >> 8) ^ 0xB7FF6EFF7B7FD9EBLL)
       + ((2 * v135) & 0xF782BBDFDF1DB7FELL)
       + (v135 ^ 0xFBC15DEFEF8EDBFFLL)
       + (((((2 * v135) & 0xF782BBDFDF1DB7FELL) + (v135 ^ 0xFBC15DEFEF8EDBFFLL) + 0x43EA21010712401) >> 7) & 0x1FEDDFEF6FFB3D6);
  v137 = v136
       + (((v136 + 0x4C3F331094F14A16) >> 8) ^ 0x2550600AEC0492BLL)
       - (((v136 + 0x4C3F331094F14A16) >> 7) & 0x155F3FEA27F6DA8)
       + 1;
  v138 = v137 - ((2 * v137 - 0x6C2BA5E0339DFE2CLL) & 0xDB23A16AC411FAA6) - 0x4884023AB7C601C3;
  v139 = ((2 * ((v138 ^ 0x6D91D0B56208FD53) + 0x75D572E7727DD82)) & 0xB747CFFF0FCADEEELL)
       + (((v138 ^ 0x6D91D0B56208FD53) + 0x75D572E7727DD82) ^ 0xDBA3E7FF87E56F77);
  v140 = (((v139 + 0x245C1800781A9089) >> 29) & 0x7DFB8EE6ELL)
       + (((v139 + 0x245C1800781A9089) >> 30) ^ 0x55FBFE8FEFDC7737);
  v141 = v140
       + v139
       + ((2 * v140 + 0x540802E020471192) ^ 0x8441010080D4CA0FLL)
       - ((2 * (2 * v140 + 0x540802E020471192)) & 0xF77DFDFEFE566BE0);
  v142 = v141
       + (((v141 + 0x4A1F187007694F43) >> 9) ^ 0x1604514C02F568DCLL)
       - (((v141 + 0x4A1F187007694F43) >> 8) & 0xF75D67FA152E46);
  v143 = v142
       + (((v142 + 0x341AC7240473E667) >> 7) ^ 0x6FD8BFFDFF653FEBLL)
       + (((v142 + 0x341AC7240473E667) >> 6) & 0x3B17FFBFECA7FD6);
  LODWORD(v98) = (((_DWORD)v143 + 1 - ((2 * ((_DWORD)v143 + 1) + 169692406) & 0x1F41B390u) + 347045955) >> 2) & 0x1DBD7AF5 ^ 0xCB40034;
  v144 = (((2 * v98) | 0x3C15C372) - v98 + 1643454023) ^ 0x930873FF;
  LODWORD(STACK[0x300]) = 67 * (LODWORD(STACK[0x350]) ^ 0x1BD);
  LODWORD(STACK[0x268]) = v144;
  LODWORD(STACK[0x260]) = v144 & 0x8137420A;
  LODWORD(STACK[0x318]) = LODWORD(STACK[0x2E0]) ^ 0x35F37427;
  LODWORD(STACK[0x2B8]) = a30 ^ a68;
  LODWORD(STACK[0x338]) = a30 ^ a68 ^ 0x4848D2A4;
  LODWORD(STACK[0x328]) = LODWORD(STACK[0x21C]) ^ 0x6408D0B4;
  v145 = STACK[0x4A0];
  v146 = (2 * ((STACK[0x308] & 0xC5F5353) - ((2 * (STACK[0x308] & 0xC5F5353)) & 0xB4CB872)) - 1957906318) ^ 0x8B4CB872;
  v147 = (v146 - 362110525 + (~(2 * v146) | 0x2B2ABC7B)) ^ 0xE635F291;
  v148 = (v147 & STACK[0x338]) + 1248142135 - ((2 * (v147 & STACK[0x338])) & 0x94CA466E);
  v149 = (((v147 & STACK[0x328]) - 911930745 - ((2 * (v147 & STACK[0x328])) & 0x934A150E)) ^ 0xC9A50A87) << LODWORD(STACK[0x340]);
  v150 = (((v148 ^ 0x4A652337) >> LODWORD(STACK[0x330]))
        - 1073180374
        - ((2 * ((v148 ^ 0x4A652337) >> LODWORD(STACK[0x330]))) & 0x80112254)) ^ 0xC008912A | (v149
                                                                                             + 2027048344
                                                                                             - ((2 * v149) & 0xF1A49B30)) ^ 0x78D24D98;
  v151 = 4 * (a64 ^ 0x55u);
  *(_DWORD *)(STACK[0x4C0] + v151) = a33 ^ a72 ^ 0x42952603 ^ (v150 - ((2 * v150) & 0xEBB4F0FA) - 170231683);
  *(_DWORD *)(v145 + v151) = a33 ^ a72 ^ 0xE23662B2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[SLODWORD(STACK[0x350])]
                                                                                                - 12))(2136970370, 3221786922, 1845183310, 2772586886, 2717358262, 2027048344, 1717708016);
}

#error "18CB74B18: too big function (funcsize=0)"

void sub_18CB88B50()
{
  JUMPOUT(0x18CB88B00);
}

uint64_t sub_18CB88B5C@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W8>, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t (*v6)(void);
  unint64_t v7;

  LODWORD(STACK[0x318]) = a2;
  v4 = (a3 - 210625942);
  v5 = ((unint64_t)&STACK[0x444] ^ 0x7DDA7FCDEFFAEAFFLL)
     - 0x7DDA7FCDEFFAEAFFLL
     + ((2 * (_QWORD)&STACK[0x444]) & 0xFBB4FF9BDFF5D5F8);
  STACK[0x328] = ((2 * (v5 % 0x25)) & 0x4CLL)
               + ((v5 % 0x25) ^ v4 ^ 0xFFE7F3FEDEFFFFE5)
               + 0x180C012100012ALL;
  v6 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)(v4 ^ 0x613))
                         - (((v4 ^ 0x7B3) - 565) ^ (v4 + 892)));
  v7 = STACK[0x3F0];
  STACK[0x310] = STACK[0x3F0];
  STACK[0x350] = STACK[0x418];
  STACK[0x320] = (unint64_t)&a4 + v7 - 0x7BB775407D70C3C2;
  return v6();
}

uint64_t sub_18CB88CC8(int8x16_t a1, int8x16_t a2, int32x4_t a3, int8x16_t a4, int32x4_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int32x4_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int32x4_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int32x4_t v24;
  int8x16_t v25;
  int8x16_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int32x4_t v35;
  int32x4_t v36;
  int8x16_t v37;

  v27 = 4 * v12;
  v28 = v16 + 4 * v12;
  v29 = v14 | v12;
  v30 = v12 + 4;
  LODWORD(v29) = *(_DWORD *)(v16 + 4 * v29);
  v26.i32[0] = *(_DWORD *)(v16 + (v27 | 4));
  v26.i32[1] = v29;
  v26.i32[2] = *(_DWORD *)(v16 + (v27 | 0xC));
  v31 = vextq_s8(a1, v26, 0xCuLL);
  v32 = v26;
  v32.i32[3] = *(_DWORD *)(v16 + 4 * v30);
  v33 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v31, a2), a3), a4), a5);
  v34 = veorq_s8(vandq_s8(v32, a6), a7);
  v35 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v34, a8), (int32x4_t)vorrq_s8(v34, (int8x16_t)v17)), v17), v18);
  v36 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v35, v35), v19), v35), v20), veorq_s8(v33, v21)), v22);
  v37.i32[0] = *(_DWORD *)(v15 + 4 * ((*(_DWORD *)(v16 + (v27 | 4)) & 1) == 0));
  v37.i32[1] = *(_DWORD *)(v15 + 4 * ((v29 & 1) == 0));
  v37.i32[2] = *(_DWORD *)(v15 + 4 * (~*(_DWORD *)(v16 + (v27 | 0xC)) & 1));
  v37.i32[3] = *(_DWORD *)(v15 + 4 * ((v32.i8[12] & 1) == 0));
  *(int8x16_t *)v28 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v28 + 1588), v37), v25), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v36, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v36, v36), v23)), v24), 1uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a12 + 8 * ((1022 * (v30 != 224)) ^ v13)) - 8))();
}

uint64_t sub_18CB88DE4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned int v15;

  v10 = (unsigned int *)(v7 + 4 * (v6 + v8));
  v11 = ((((a4 + 5 * (a5 ^ 0x11) + 3985) | v5) + 421544968) ^ 0x629199BE) - 1301341158;
  v12 = v6 + 1;
  v13 = *(_DWORD *)(v7 + 4 * (v12 + v8));
  v14 = (a3 - (v13 & 0x7FFFFFFE ^ 0x3D4BF1B0 | a3) + (v13 & 0x7FFFFFFE ^ 0x3D4BF1B0 | 0x6B63DD2F)) ^ 0x36B5A2B;
  v15 = ((((2 * v14) | 0x4E2E362) - v14 - 40989105) | v11 ^ 0xAE20F9D3) ^ 0x535939;
  *v10 = v10[397] ^ *(_DWORD *)(v9 - 184 + 4 * ((v13 & 1) == 0)) ^ ((v15 - ((2 * v15) & 0xBC54B998) + 1579834572) >> 1) ^ 0x2645C819;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((504 * (v12 != a2 + 3)) ^ a5)) - 8))();
}

uint64_t sub_18CB88F0C()
{
  int v0;
  uint64_t v1;
  int8x16_t v2;
  const float *v3;
  int8x16_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int32x4_t v9;
  int32x4_t v10;
  int32x4_t v11;
  int8x16_t v12;

  v3 = (const float *)&aHAwAwAwAwAwAwA[912];
  v4 = (int8x16_t)vld1q_dup_f32(v3);
  v5.i64[0] = 0x8000000080000000;
  v5.i64[1] = 0x8000000080000000;
  v2.i64[0] = *(_QWORD *)&aHAwAwAwAwAwAwA[916];
  v2.i32[2] = *(_DWORD *)&aHAwAwAwAwAwAwA[924];
  v6 = vextq_s8(v4, v2, 0xCuLL);
  v7 = v2;
  v7.i32[3] = *(_DWORD *)&aHAwAwAwAwAwAwA[928];
  v8 = vandq_s8(v6, v5);
  v9 = (int32x4_t)veorq_s8(vandq_s8(v7, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x24AF0CCEu));
  v10 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v9, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v9, v9), (int8x16_t)vdupq_n_s32(0x8E02B88u))), vdupq_n_s32(0x847015C4)), (int8x16_t)vdupq_n_s32(0xB4FC4584));
  v11 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vsubq_s32(v10, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v10, v10), (int8x16_t)vdupq_n_s32(0x5F1C27FCu))), vdupq_n_s32(0x2F8E13FEu)), v8), (int8x16_t)vdupq_n_s32(0x6CCC114Cu));
  v12.i32[0] = *(_DWORD *)(v1 + 4 * ((aHAwAwAwAwAwAwA[916] & 1) == 0));
  v12.i32[1] = *(_DWORD *)(v1 + 4 * (*(_DWORD *)&aHAwAwAwAwAwAwA[920] & ((v0 - 216) ^ 0x396u) ^ 1));
  v12.i32[2] = *(_DWORD *)(v1 + 4 * (~*(_DWORD *)&aHAwAwAwAwAwAwA[924] & 1));
  v12.i32[3] = *(_DWORD *)(v1 + 4 * (~*(_DWORD *)&aHAwAwAwAwAwAwA[928] & 1));
  *(int8x16_t *)&aHAwAwAwAwAwAwA[912] = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)&aHAwAwAwAwAwAwA[4], v12), (int8x16_t)vdupq_n_s32(0x4720AB1Fu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v11, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v11, v11), (int8x16_t)vdupq_n_s32(0x39C13580u))), vdupq_n_s32(0x9CE09AC0)), 1uLL));
  return ((uint64_t (*)(void))qword_1E2538EC0[v0])();
}

void sub_18CB89098()
{
  JUMPOUT(0x18CB88FB0);
}

uint64_t sub_18CB890A4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _DWORD *v2;
  uint64_t v3;
  unsigned int v4;

  v4 = ((((((428 * ((a1 + 452215587) & 0xE50BBFF5 ^ 0x6B4) + 505050048) & *v2 ^ 0x9C102201) - 1) & 0x5F0A6F38 | *v2 & 0x41000508) ^ 0x940A0701)
      + (((((428 * ((a1 + 452215587) & 0xE50BBFF5 ^ 0x6B4) + 505050048) & *v2 ^ 0x9C102201) - 1) & 0x20F590C6 | *v2 & 0x20E58086) ^ 0x751001)
      - 2) ^ 0xDF0E6B3C;
  v2[623] = v2[396] ^ *(_DWORD *)(v3 - 184 + 4 * ((*v2 & 1) == 0)) ^ (((v4 | ((v2[623] & 0x80000000) - 1572641050) ^ 0xA24366E6)
                                                                       - ((2 * v4) & 0x38A62B50)
                                                                       + 475207080) >> 1) ^ 0x7796CAB;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((47 * (LODWORD(STACK[0x424]) < 0x270)) ^ a1)) - 12))();
}

uint64_t sub_18CB891CC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  v3 = LODWORD(STACK[0x424])++;
  *(_DWORD *)(v1 + 2536) = v3 + 73583858;
  v4 = *(_DWORD *)aHAwAwAwAwAwAwA;
  v5 = 516615401 * (((~(v2 - 152) | 0x3E25FA4912891144) + ((v2 - 152) | 0xC1DA05B6ED76EEBBLL)) ^ 0x49668DCD9E15E888);
  *(_QWORD *)(v2 - 120) = v5 + 3574677777u;
  *(_DWORD *)(v2 - 112) = (v0 - 185257513) ^ v5;
  *(_DWORD *)(v2 - 108) = v5 + v0 + 1787044281 - 45;
  *(_DWORD *)(v2 - 128) = v5 ^ (v0 + 1787044281) ^ 0xC;
  *(_DWORD *)(v2 - 152) = v5 + 1;
  *(_DWORD *)(v2 - 148) = v0 + 1787044281 - v5;
  *(_QWORD *)(v2 - 136) = (v4 - 1414407980) ^ v5;
  v6 = sub_18CA8D328(v2 - 152);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[*(int *)(v2 - 144)] - 12))(v6);
}

void sub_18CB892D4()
{
  unsigned int v0;
  unsigned int v1;
  int v2;

  if (v0 >= v1)
    v2 = *(_DWORD *)aHAwAwAwAwAwAwA + 1;
  else
    v2 = 694118461;
  *(_DWORD *)aHAwAwAwAwAwAwA = v2;
  JUMPOUT(0x18CB8946CLL);
}

uint64_t sub_18CB894F0(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((324 * (v1 + 8 == ((v2 + 674) ^ a1 ^ (v2 + 1632772207) & 0x9EADDBFF))) ^ v2))
                            - 4))();
}

uint64_t sub_18CB89538()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 - 184) = 0x905856A00950E67FLL;
  LODWORD(STACK[0x424]) = dword_1EE0569E8 - 73583857;
  v3 = *(unsigned int *)aHAwAwAwAwAwAwA;
  v4 = 1856021207 * ((v2 + 0x3092E5873C345D6FLL - 2 * ((v2 - 152) & 0x3092E5873C345E07)) ^ 0xDD86721C725D88F9);
  *(_DWORD *)(v2 - 140) = v0 - 1229013907 + v4;
  *(_QWORD *)(v2 - 136) = v3 - v4;
  *(_QWORD *)(v2 - 128) = v4 ^ v1;
  *(_DWORD *)(v2 - 120) = v4 + v0 + 1123495865;
  *(_DWORD *)(v2 - 116) = v4;
  *(_DWORD *)(v2 - 148) = v4 ^ (v0 - 1229013907) ^ 7;
  *(_DWORD *)(v2 - 144) = (v0 - 1229013788) ^ v4;
  v5 = sub_18CBBB420(v2 - 152);
  return ((uint64_t (*)(uint64_t))qword_1E2538EC0[*(int *)(v2 - 152)])(v5);
}

uint64_t sub_18CB89618()
{
  int v0;
  uint64_t v1;
  int v2;
  uint32_t v3;
  unsigned int v4;
  int v5;

  LODWORD(STACK[0x2D0]) = v0;
  STACK[0x308] = (unint64_t)malloc_type_malloc(STACK[0x2B8], 0xC5732911uLL);
  v3 = arc4random();
  v4 = v3 + 1465998909 - ((v3 << (((v2 + 80) | 0x40) ^ 0x41)) & 0xAEC2BC7A);
  *(_DWORD *)&aHAwAwAwAwAwAwA[4] = v4;
  LODWORD(STACK[0x328]) = 1465998908;
  v5 = v4 ^ LODWORD(STACK[0x328]) ^ (v4 >> 30);
  *(_DWORD *)(v1 + 4) = ((((v2 - 1456) | 0x440) - 792) ^ 0xF0FFDCC3 ^ (1812433253 * v5))
                      + ((-670100790 * v5) & 0xE1FFBDD6)
                      + 1717665619
                      - ((2
                        * (((((v2 - 1456) | 0x440) - 792) ^ 0xF0FFDCC3 ^ (1812433253 * v5))
                         + ((-670100790 * v5) & 0xE1FFBDD6))
                        + 503333420) & 0xAEC2BC7A);
  return ((uint64_t (*)(void))qword_1E2538EC0[(v2 - 1456) | 0x449])();
}

void sub_18CB8973C()
{
  JUMPOUT(0x18CB896D0);
}

uint64_t sub_18CB89758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  const float *v4;
  int8x16_t v5;
  int8x16_t v6;

  v5 = (int8x16_t)vld1q_dup_f32(v4);
  v6.i64[0] = 0x8000000080000000;
  v6.i64[1] = 0x8000000080000000;
  return sub_18CB88CC8(v5, v6, vdupq_n_s32(0x19204408u), (int8x16_t)vdupq_n_s32(0x629199BEu), vdupq_n_s32(0xB26F1C1A), (int8x16_t)vdupq_n_s32(0x7FFFFFFEu), (int8x16_t)vdupq_n_s32(0x3D4BF1B0u), (int8x16_t)vdupq_n_s32(0x6B63DD2Fu), a1, a2, a3, a4);
}

uint64_t sub_18CB8A0D4()
{
  unint64_t v0;

  STACK[0x448] = v0;
  STACK[0x400] = STACK[0x308];
  return ((uint64_t (*)(void))STACK[0x2A0])();
}

uint64_t sub_18CB8A0E8()
{
  free((void *)STACK[0x2A8]);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1339
                                             * (LODWORD(STACK[0x37C]) == (((LODWORD(STACK[0x34C]) ^ 0x620) + 1835992012) ^ 0x6D6F057C ^ (2 * (LODWORD(STACK[0x34C]) ^ 0x620))))) ^ (LODWORD(STACK[0x34C]) - 1073)]
                            - 8))();
}

void sub_18CB8A178()
{
  const void *v0;

  LODWORD(STACK[0x520]) = STACK[0x38C];
  STACK[0x518] = STACK[0x2C0];
  STACK[0x3F0] = STACK[0x2D8];
  CFRelease(v0);
  JUMPOUT(0x18CB8A1D8);
}

uint64_t sub_18CB8A244@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((a1 == v3 + 41) ^ v1) & 1)
                                          * ((v1 - 297365962) & 0x11B971CD ^ 0x1BD)) ^ v1))
                            - 4))();
}

uint64_t sub_18CB8A290()
{
  unsigned int v0;
  _BOOL4 v1;

  v1 = malloc_type_malloc(0x14uLL, 0xAACB7BF8uLL) != 0;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1530 * v1) ^ v0] - 193 * (v0 ^ 0x1C5) + 768))();
}

uint64_t sub_18CB8A2E0()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  int v3;
  unsigned int v4;
  unint64_t v5;

  STACK[0x2F8] = v2;
  STACK[0x2F0] = v1;
  v3 = 134 * (v0 ^ 0x30E);
  v4 = ((STACK[0x518] ^ *(_DWORD *)(qword_1EE0605B8 + ((v3 - 200036676) & dword_1EE0607C0))) & 0x7FFFFFFF)
     * (((v3 + 1189855848) & 0xB91439FF) + 1755343547);
  v5 = 1755343967 * (v4 ^ HIWORD(v4));
  return ((uint64_t (*)(uint64_t))qword_1E2538EC0[(115
                                                          * (*(unsigned __int8 *)STACK[0x518] == (byte_18CF51950[v5 >> 24] ^ byte_18CF4C530[v5 >> 24] ^ byte_18CF2E8C0[v5 >> 24] ^ v5 ^ (-33 * BYTE3(v5))))) ^ v3])(400697702);
}

uint64_t sub_18CB8A444(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  unint64_t v13;
  int v14;

  v12 = (_BYTE *)(v6 + (int)((v2 ^ 0xFE363FBB) + 29999173 + (v5 & 0xFC6C7F74)));
  v13 = (((((v12 ^ v1) & 0x7FFFFFFF) * v4) >> (((v8 ^ 0xD) + 37) ^ 0xA)) ^ (((v12 ^ v1) & 0x7FFFFFFF)
                                                                                        * v4))
      * v4;
  v14 = (char)(v13 ^ *v12 ^ *(_BYTE *)(v3 + (v13 >> 24)) ^ *(_BYTE *)(v9 + (v13 >> 24)) ^ *(_BYTE *)((v13 >> 24) + v7 + 1) ^ (BYTE3(v13) * v11));
  return (*(uint64_t (**)(uint64_t, _QWORD))(v10 + 8 * ((((v14 > 47) << 7) | ((v14 > 47) << 10)) ^ v8)))(a1, ((2 * v14) & 0xF26FFFBE) + (v14 ^ 0x7937FFDF));
}

uint64_t sub_18CB8A508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((((char)(v8 ^ *(_BYTE *)(a7 + a3) ^ *(_BYTE *)(a8 + a3) ^ *(_BYTE *)(v9 + a3) ^ ((v10 ^ 0x2A) * a3)) < 58)
                                          * (v10 - 1304)) ^ v10))
                            - 4))();
}

uint64_t sub_18CB8A554(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE *v13;
  unint64_t v14;

  v13 = (_BYTE *)(v9 + (int)((a5 ^ 0x5BEBD7BF) - 1542182846 + ((2 * a5) & 0xB7D7AF7C)));
  v14 = ((v7 + (v8 ^ 0x45) - 330 - 1338) ^ ((v8 ^ 0x45) - 1500))
      * ((((v13 ^ v5) & 0x7FFFFFFF) * v7) ^ ((((v13 ^ v5) & 0x7FFFFFFF) * v7) >> 16));
  LODWORD(v13) = (char)(*(_BYTE *)(v6 + (v14 >> 24)) ^ *v13 ^ *(_BYTE *)(v11 + (v14 >> 24)) ^ *(_BYTE *)((v14 >> 24) + v10 + 1) ^ v14 ^ (BYTE3(v14) * v12)) > 47;
  return ((uint64_t (*)(uint64_t, _QWORD))(qword_1E2538EC0[((32 * (int)v13) | ((_DWORD)v13 << 9)) ^ ((v8 ^ 0x45) - 1292)]
                                                  - 8))(a1, (a2 - 939300095));
}

uint64_t sub_18CB8A7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W4>, int a4@<W8>)
{
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v4
                                                             + 8
                                                             * ((27
                                                               * ((((v5 - 742) ^ (v5 + 403781776) & 0xE7EEC379 ^ (a3 < 0x3Au)) & 1) == 0)) ^ v5)))(a1, a2, ((2 * a4) & 0x73FF7FFE) + (a4 ^ 0xB9FFBFFF));
}

uint64_t sub_18CB8A810()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v1 <= (v0 - 48)) * (285 * (v0 ^ 0x175) - 1213)) ^ v0))
                            - 8))();
}

uint64_t sub_18CB8A844@<X0>(unsigned __int8 a1@<W4>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((4 * (((a1 < 0x47u) ^ (5 * (a2 ^ 0xC5) + a2 + 31 + 1)) & 1)) & 0xF7 | (8 * (((a1 < 0x47u) ^ (5 * (a2 ^ 0x5C5) + a2 + 287 + 1)) & 1)) | a2))
                            - 8))();
}

uint64_t sub_18CB8A888(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v4;

  return ((uint64_t (*)(void))(qword_1E2538EC0[((((v4 - 966378781) ^ 0xC6663C53) + 1291) * (a4 > 0x60)) ^ v4] - 8))();
}

uint64_t sub_18CB8A8C4@<X0>(int a1@<W1>, int a2@<W2>, unsigned __int8 a3@<W4>, int a4@<W8>)
{
  int v4;

  if (a3 >= 0x67u)
    v4 = 1303956645;
  else
    v4 = a2 - 1816590944 + a4 + 966380073;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1856
                                             * (((a1 + 1053070576) & (((4 * (a4 + 966380073)) ^ 0x3247299Au) + v4)) >> 31)) ^ (a4 + 966378781)]
                            - ((53 * ((a4 + 966380073) ^ 0x6B4u)) ^ 0xDCLL)))();
}

uint64_t sub_18CB8A988@<X0>(int a1@<W0>, char a2@<W1>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  char v13;
  _BYTE *v14;
  unint64_t v15;

  v12 = a3 ^ 0x19C4;
  v13 = (16 * a2 - (((((v12 - 100) | 4) ^ 0xA4) + 32 * a2) & 0xE0) + 121) ^ 0x79 | (v7 + 90);
  v14 = (_BYTE *)(v8 + a1 - 400697702);
  v15 = ((((v14 ^ v4) & 0x7FFFFFFF) * v6) ^ ((((v14 ^ v4) & 0x7FFFFFFF) * v6) >> 16)) * v6;
  *v14 = v15 ^ (BYTE3(v15) * v11) ^ *(_BYTE *)(v5 + (v15 >> 24)) ^ *(_BYTE *)(v10 + (v15 >> 24)) ^ *(_BYTE *)((v15 >> 24) + v9 + 1) ^ 0xAD ^ (v13 - ((2 * v13) & 0x5A) - 83);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v12 | (8 * ((a1 - 400697701) > 0x13)))) - 12))();
}

void sub_18CB8AA78()
{
  JUMPOUT(0x18CB8A368);
}

uint64_t sub_18CB8AA80@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 + 657) * (a1 == v3 + 26)) ^ v2)))();
}

uint64_t sub_18CB8AAA4()
{
  int v0;
  _BOOL4 v1;

  v1 = malloc_type_malloc(0x19uLL, 0xFD034588uLL) != 0;
  return ((uint64_t (*)(void))qword_1E2538EC0[(((v0 - 338539421) & 0x142DB737 ^ 0x464) * v1) ^ v0])();
}

uint64_t sub_18CB8AAF8(_BYTE *a1)
{
  int v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  STACK[0x2F8] = v3;
  STACK[0x2F0] = v2;
  v4 = *(_DWORD *)(qword_1EE0605B8 + (dword_1EE0607C0 & 0xFFFFFFFFF413B3F8));
  v5 = 1755343967
     * ((1755343967 * ((STACK[0x518] ^ v4) & 0x7FFFFFFF)) ^ ((1755343967
                                                                          * ((STACK[0x518] ^ v4) & 0x7FFFFFFF)) >> 16));
  v6 = 1755343967
     * ((1755343967 * ((a1 ^ v4) & 0x7FFFFFFF)) ^ ((1755343967 * ((a1 ^ v4) & 0x7FFFFFFF)) >> 16));
  *a1 = byte_18CF4FC30[v5 >> (v1 - 15)] ^ *(_BYTE *)STACK[0x518] ^ byte_18CF4B7B0[v5 >> (v1 - 15)] ^ byte_18CF2BA20[(v5 >> (v1 - 15)) + 1] ^ byte_18CF4FC30[v6 >> 24] ^ byte_18CF4B7B0[v6 >> 24] ^ byte_18CF2BA20[(v6 >> 24) + 1] ^ v5 ^ v6 ^ (41 * (v5 >> (v1 - 15))) ^ (41 * BYTE3(v6));
  return ((uint64_t (*)(void))(qword_1E2538EC0[v1] - 4))();
}

void sub_18CB8AC1C()
{
  JUMPOUT(0x18CB8AB54);
}

uint64_t sub_18CB8AC24()
{
  int v0;
  int v1;

  return ((uint64_t (*)(void))(qword_1E2538EC0[((8 * (((v0 == 0) ^ (v1 + 70 + v1 - 95)) & 1)) & 0xEF | (16 * (((v0 == 0) ^ (v1 + 70 + v1 - 95)) & 1))) ^ (v1 + 70)]
                            - 4))();
}

void sub_18CB8AC60()
{
  void *v0;

  free(v0);
  JUMPOUT(0x18CB6ACD0);
}

uint64_t sub_18CB8AC70@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(qword_1E2538EC0[(1616 * (STACK[0x518] != 0)) ^ (a1 | 4)]
                            - (((((a1 | 4) + 868) | 0x280u) + 12) ^ ((a1 | 4u) + 1508))))();
}

uint64_t sub_18CB8ACB8(void *a1)
{
  int v1;
  _BYTE *v2;
  unint64_t v3;
  int v4;

  free(a1);
  STACK[0x518] = v3;
  LODWORD(STACK[0x340]) = v4 + 25;
  LODWORD(STACK[0x520]) = STACK[0x340];
  LODWORD(STACK[0x510]) = 65;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(8 * (*v2 == 1)) | ((*v2 == 1) << 9) | (v1 - 1499)]
                            - ((v1 + 1937795367) & 0x8C7F90FD)
                            + 201))();
}

uint64_t sub_18CB8ADFC()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  int v5;

  v2 = *(unsigned __int8 *)STACK[0x330];
  STACK[0x320] = v2;
  v3 = ((2 * v2) & 0xE4) + (v2 ^ 0xDBF59F72);
  v4 = STACK[0x338];
  LODWORD(STACK[0x308]) = v3;
  v5 = v4 - v3;
  LODWORD(STACK[0x2E0]) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1724
                                          * ((((_BYTE)v5 + ((v0 - 37) ^ 0xB3)) & 0xF) == 2 * (((_BYTE)v5 + ((v0 - 37) ^ 0xB3)) & 3))) ^ v0))
                            - 12))();
}

uint64_t sub_18CB8AE6C()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  unint64_t v4;
  BOOL v5;
  char v6;

  v2 = (v0 + 43) | 2;
  v3 = v2 + LODWORD(STACK[0x308]) + 788528302;
  v4 = STACK[0x350] + 3;
  STACK[0x2B0] = STACK[0x3F0];
  LODWORD(STACK[0x2E8]) = 1935652661;
  LODWORD(STACK[0x474]) = 1935652661;
  STACK[0x338] = v4;
  if (v4)
    v5 = 1;
  else
    v5 = v3 == 183868706;
  v6 = !v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((2 * ((v6 ^ (v2 - 1)) & 1)) & 0xEF | (16 * ((v6 ^ (v2 - 1)) & 1))) ^ v2))
                            - ((8 * (v2 ^ 0x1D4u)) ^ 0x6B8)))();
}

uint64_t sub_18CB8AEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  int v10;
  int v11;
  char *v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v11 = (v10 - 258) | 0x1C4;
  v12 = (char *)&a9 + STACK[0x2B0] - 0x7BB775407D70C3D2;
  STACK[0x328] = (unint64_t)(v12 + 255);
  STACK[0x2C0] = (unint64_t)(v12 + 510);
  STACK[0x330] = (unint64_t)v12;
  STACK[0x300] = (unint64_t)(v12 + 528);
  v13 = STACK[0x340];
  v14 = (LODWORD(STACK[0x340]) - 1816283062);
  STACK[0x318] = (v9 + LODWORD(STACK[0x340]) - 1456910838);
  v15 = qword_1EE0605B8;
  v16 = dword_1EE0607C0 & 0xFFFFFFFFF413B3F8;
  STACK[0x310] = -v13 + 1031026413;
  return ((uint64_t (*)(uint64_t, unint64_t))(qword_1E2538EC0[(((((v11 ^ 0x2CC) + 800236343) & 0xD04D5BF7 ^ 0xBF8561ACuLL)
                                                                              + 296520604 < v14)
                                                                             * (((v11 ^ 0x2CC) + 194) ^ 0x393)) ^ v11 ^ 0x2CC]
                                                            - 8))(v15, v16);
}

uint64_t sub_18CB8B048(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;
  unint64_t v14;

  v13 = ((*(_DWORD *)(a1 + a2) ^ (v5 + v2)) & 0x7FFFFFFF) * v4;
  v14 = (v13 ^ HIWORD(v13)) * v4;
  LODWORD(v14) = byte_18CF4FC30[v14 >> 24] ^ *(unsigned __int8 *)(v5 + v2) ^ byte_18CF4B7B0[v14 >> 24] ^ byte_18CF2BA20[(v14 >> 24) + 1] ^ v14 ^ ((v14 >> 24) * (v7 - 270));
  *(_BYTE *)(STACK[0x330] + v2) = *(_BYTE *)(v6 + v2) ^ (v14 - (v8 & (2 * v14)) - 103);
  return ((uint64_t (*)(void))(qword_1E2538EC0[((v2 + 1 + v3 != ((((v7 - 143) ^ v10) * v11) ^ (unint64_t)(v3 + 416)))
                                             * v12) ^ (v7 - 143)]
                            - ((v7 - 143) ^ v9)
                            + 764))();
}

void sub_18CB8B264()
{
  JUMPOUT(0x18CB8B008);
}

void sub_18CB8B26C()
{
  int v0;
  void *v1;

  STACK[0x3F0] = STACK[0x2B0];
  free(v1);
  STACK[0x518] = 0;
  LODWORD(STACK[0x520]) = v0;
  JUMPOUT(0x18CB6ACD0);
}

uint64_t sub_18CB8B27C()
{
  int v0;
  int v1;
  char *v2;
  char *v3;

  v1 = LODWORD(STACK[0x340]) + LODWORD(STACK[0x308]) + 1428728482;
  v2 = (char *)&STACK[0x4D0] + STACK[0x2B0] - 0x7BB775407D70C8A2;
  STACK[0x3F0] = STACK[0x2B0] + 1088;
  STACK[0x340] = (unint64_t)(v2 + 959);
  sub_18CBC7AC0(byte_18CF4D590, v2 + 959, 0x40uLL);
  STACK[0x318] = (unint64_t)(v2 + 1023);
  v3 = sub_18CBC7AC0(byte_18CF3A5C7, v2 + 1023, 0x40uLL);
  return ((uint64_t (*)(char *))(qword_1E2538EC0[(((v0 - 383) ^ 0x196 ^ (5 * (v0 ^ 0x112)))
                                                          * ((v1 - 1855095041) < 0xF8)) ^ v0]
                                         - 4))(v3);
}

uint64_t sub_18CB8B340()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  v4 = (v2 - 1402945422) & 0x539F3F36;
  LODWORD(STACK[0x474]) = 1935652826;
  *(_BYTE *)(v3 + 640) = *(_BYTE *)(STACK[0x330] + 0 % ((v4 ^ v0) + v1));
  return ((uint64_t (*)(void))(qword_1E2538EC0[(((v4 - 776) | 0x2C4) - 563) ^ v4] - 12))();
}

uint64_t sub_18CB8B408()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t (*v11)(void);

  v5 = (unsigned __int16)(v3 + 14256) % (unsigned __int16)(((v4 - 748) | 0x218) - 219);
  v6 = *(unsigned __int8 *)(v1 + (v3 + v0 + 142) % 0x13Fu);
  HIDWORD(v8) = v6 ^ 0x18;
  LODWORD(v8) = v6 << 24;
  v7 = v8 >> 29;
  HIDWORD(v8) = *(unsigned __int8 *)(v1 + (v3 + v0 + 98) % 0x13Fu);
  LODWORD(v8) = (HIDWORD(v8) ^ 0x18) << 24;
  v9 = ((v8 >> 27) ^ 0xFFFFFFDB)
     + ((2 * (v8 >> 27)) & 0xFFFFFFB6)
     + (*(unsigned __int8 *)(v1 + v5) ^ (v7 + (~(2 * v7) | 0x37) - 27) ^ 0xFFFFFFFC)
     + 37;
  HIDWORD(v8) = *(unsigned __int8 *)(v1 + (v3 + v0) % 0x13Fu);
  LODWORD(v8) = (HIDWORD(v8) ^ 0x18) << 24;
  v10 = ((v8 >> 25) ^ 0xFFFFFFD2) - ((2 * (v8 >> 25)) & 0x5A) + (v9 ^ 0x27) + ((2 * v9) & 0x4E) + 1;
  v11 = (uint64_t (*)(void))(qword_1E2538EC0[(476 * (v3 + 1 != v2 + 1276)) ^ v4] - 12);
  *(_BYTE *)(v1 + v5) = v10 - ((2 * v10 + 12) & 0x30) + 30;
  return v11();
}

_QWORD *sub_18CB8B54C@<X0>(unsigned int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  char v3;
  char v4;
  _BYTE *v5;
  int v6;
  char v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  unsigned int v24;
  char v25;
  char v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  char v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  char v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned __int8 v64;
  unsigned int v65;
  unsigned int v66;
  char v67;
  char v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  int v93;
  int v94;
  char v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  uint64_t v107;
  unsigned int v108;
  int v109;
  char v110;
  unsigned int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  unint64_t v116;
  unsigned int v117;
  int v118;
  int v119;
  char v120;
  char v121;
  int v122;
  int v123;

  LODWORD(STACK[0x310]) = 0;
  v8 = (v5[109] ^ 0x18)
     - ((((a3 - 217) | 2) - 197) & (2 * (v5[109] ^ 0x18)))
     + 1554726207;
  v9 = v5[21];
  LODWORD(STACK[0x280]) = (a3 - 217) ^ 0x122;
  v10 = (((a3 + 39) ^ 0x22) - 75) ^ v9;
  v11 = v10 + 406554332 + (~(2 * v10) | 0xFFFFFE47) + 1;
  v12 = ((v11 ^ 0x183B86DC | v8 ^ 0x5CAB3D3F) - ((2 * (v11 ^ 0x183B86DC | v8 ^ 0x5CAB3D3F)) & 0xDDDDDDDD) + 46) & 0x73 ^ 0x31;
  v13 = ((((v12 | 0x27751349) - (v12 | 0xD88AECB6) - 661984074) & 0x57501D7 ^ 0x8086104)
       + (((v12 | 0x27751349) - (v12 | 0xD88AECB6) - 661984074) ^ 0xB7F59ED3)
       - ((((v12 | 0x27751349) - (v12 | 0xD88AECB6) - 661984074) ^ 0xB7F59ED3) & 0x85D7)) ^ 0x9DFD685E | (((v11 ^ 0x182B06DC) & (v8 ^ v6)) - ((2 * ((v11 ^ 0x182B06DC) & (v8 ^ v6))) & 0x32) - 1782902759) ^ 0x95BB1019;
  v14 = (v13 - ((2 * v13) & 0x44DBCDB2) + 1651369689) ^ 0x626DE6D9;
  v15 = ((2 * v14 * v14 * v14) & 0xAEBFFFFE) + ((v14 * v14 * v14) ^ 0xD75FFFFF);
  v16 = STACK[0x340];
  LOBYTE(v8) = *(_BYTE *)(STACK[0x340] + (v5[40] & 0x3F ^ 0x18)) & 0x75 ^ 0x31;
  LOBYTE(v8) = (((v8 - ((2 * v8) & 0x22) + 19) & 0x86 ^ 0x82)
              + ((v8 - ((2 * v8) & 0x22) + 19) ^ 0x4C)
              - (((v8 - ((2 * v8) & 0x22) + 19) ^ 0x4C) & 0x86)) ^ 0x8C | ((((v5[352] & 0x80) - (v5[352] | 0xF5)) ^ 0xB0)
                                                                         - 1) ^ 0x38;
  v17 = v8 - (v4 & (2 * v8)) - 37;
  LOBYTE(v8) = v5[355];
  v18 = STACK[0x318];
  LOBYTE(v11) = (*(_BYTE *)(STACK[0x318] + (v5[52] & 0x3F ^ 0x18)) ^ 0xE6) & (v8 ^ 0xE6);
  LOBYTE(v8) = (v11 - ((2 * v11) & 0x46) + 35) ^ 0x23 | (((2 * v8) & 0x10) + (v8 & 0xB8 ^ 0xDF) + 120) ^ 0x4F;
  v19 = v17 ^ v3;
  v20 = (v8 - ((2 * v8) & 0x56) + 43) ^ 0x2B;
  LOBYTE(v8) = (v19 | v20) - 2 * ((v19 | v20) & 3);
  LOBYTE(v8) = ((-36 - v8) | 0xDE) + ((v8 + 51) & 0xA);
  v21 = (((-35 - v8) ^ 0x33) + ((93 - v8) & 0x83) - (((-35 - v8) ^ 0x33) & 0x83)) ^ 0x4D | ((v19 & v20)
                                                                                          - ((2 * (v19 & v20)) & 0xD6)
                                                                                          - 21) ^ 0xEB;
  v22 = (v5[94] ^ 0x18) + (v21 ^ 0x8B) - ((2 * v21) & 0xE8) + 117;
  v5[94] = v22 - ((2 * v22) & 0x30) + 24;
  v23 = v5[139];
  v24 = (v5[366] ^ 0xFFFFFFE6) * (v5[366] ^ 0xFFFFFFE6);
  LODWORD(STACK[0x298]) = (v5[343] ^ 0xFFFFFFE6) - 45 * (~v24 + 2 * v24);
  v25 = (((v23 & 0x12 ^ 0x12) - (v23 & 0x12) + (v23 & 0x36 ^ 4)) | byte_18CF28BD0[v5[85] & 0x3F ^ 0x18] & 0x40) ^ 6;
  v26 = (v25 - ((2 * v25) & 0x6A) + 53) & 0xF7 ^ 0x3D;
  v5[64] ^= (v26 - 2 * (v26 & 1) + 1) ^ 1;
  v27 = *(unsigned __int8 *)(v16 + (v5[157] & 0x3F ^ 0x18)) ^ 0x19;
  LODWORD(STACK[0x2D0]) = v27 - 2 * (v27 & 1);
  v28 = (v5[125] & 0x41) + (v5[125] & 0x88 ^ 9) + 15;
  v29 = (((v28 & 0xFFFFFF8E ^ 0xFFFFFF89) - 1) & 0xFFFFFFFD | v28 & 0x51) ^ 0xFFFFFF9A;
  LODWORD(STACK[0x2C8]) = v29 - ((2 * v29) & 0xFFFFFFF9);
  v30 = *(unsigned __int8 *)(v16 + (v5[104] & 0x3F ^ 0x18)) ^ 0xFFFFFFE6;
  v31 = v5[387];
  v32 = ((v31 & 0xA1 ^ 0xFFFFFF9B) + (v31 & 0xA1 ^ 0xA0 | 0xFFFFFFC7) + ((v31 & 0xA1 ^ 0xA0) & 0x20) - 63) ^ 0xFFFFFFC3;
  v33 = v32 | ((((v31 & 0x26) + (v31 & 0x3E ^ 0x36)) | 0xFFFFFF80) - ((v31 & 0x3E ^ 0x36) & 0xFFFFFFE7)) ^ 0xFFFFFF88;
  v34 = ((v33 - 2 * (v33 & 0x77 ^ v32 & 1) + 118) ^ 0x76) & ((v30 * v30 - ((2 * v30 * v30) & 0x38) - 100) ^ 0xFFFFFF9C);
  LODWORD(STACK[0x2B8]) = v34 - ((2 * v34) & 0xFFFFFF8A);
  LOBYTE(v34) = (v5[52] ^ 0xE7) + (v5[175] ^ 0x18) + 1;
  v5[175] = v34 - ((2 * v34) & 0x30) + 24;
  v35 = 205 * (*(unsigned __int8 *)(v18 + (v5[44] & 0x3F ^ 0x18)) ^ 0xE6);
  LODWORD(STACK[0x2A8]) = (v35 >> 10) - ((v35 >> 9) & 0x1E);
  v5[100] = (v5[100] ^ 0x18) - ((2 * (v5[100] ^ 0x18) + 58) & 0x30) + 21;
  v5[327] = 26;
  LOBYTE(v35) = (v5[386] ^ 0xE6) + (*(_BYTE *)(v16 + (v5[17] & 0x3F ^ 0x18)) ^ 0xE6);
  LOBYTE(v32) = byte_18CF28BD0[v5[57] & 0x3F ^ 0x18];
  v5[386] = v35 - ((2 * v35) & 0xCC) - 26;
  LOBYTE(v35) = ((v32 & 0x60 ^ 0x25) + (v32 & 0x13) - 1) ^ 0x74;
  LOBYTE(v12) = ((v35 | 0xE8) - (v35 | 0x17) + 23) ^ 0xB9 | ((v5[415] & 0x8C ^ 0x7B)
                                                           + ((2 * (v5[415] & 0x8C)) | 0x2C)
                                                           + 107) ^ 0x96;
  v36 = (v12 - ((2 * v12) & 0x8C) - 58) ^ 0xC6;
  v37 = (v5[101] ^ 0x18)
      + (((171 * v36) >> 9) ^ 0x30)
      - (((171 * v36) >> 8) & 0x9E)
      - 48;
  v5[101] = v37 - ((2 * v37) & 0x30) + 24;
  v38 = byte_18CF28BD0[v5[217] & 0x3F ^ 0x18];
  v39 = (((v38 & 0x75 ^ 0xFFFFFF8F) - ((2 * v38) & 0x60) + 48) ^ 0x30) & (v5[398] ^ 0xFFFFFFE6);
  v40 = (v39 - ((2 * v39) & 0xFFFFFFCF) + 103) ^ 0x67 | ((v38 & 0x8A) - ((2 * v38) & 0x14) + 59) ^ 0x3B;
  v41 = (v40 - ((2 * v40) & 0xFFFFFFE7) - 13) ^ 0xFFFFFFF3 | (v5[7] >> 1) ^ 0xC;
  LOBYTE(v41) = (v5[249] ^ 0x18) + (v41 ^ 0x18) - ((2 * v41) & 0xCF) - 24;
  v5[249] = v41 + (~(2 * v41) | 0xCF) + 25;
  v5[30] ^= 0x58u;
  LOBYTE(v41) = *(_BYTE *)(v16 + (v5[241] & 0x3F ^ 0x18));
  LOBYTE(v41) = (v41 & 0xE4 ^ 0x7C) - (v41 | 0xE7) - 25;
  LOBYTE(v41) = (((v41 ^ 0x67) + ((2 * v41) & 0x40) - 35) | v5[383] & 3 ^ 2) ^ 0xDC;
  LOBYTE(v35) = (v41 - ((2 * v41) & 0x2C) - 106) ^ 0x96;
  LOBYTE(v35) = (((v35 * v35) ^ 0x5E) + ((2 * v35 * v35) & 0xBC) - 94) * v35;
  LODWORD(STACK[0x2E8]) = v15;
  LOBYTE(v41) = *(_BYTE *)(v16 + ((63 - (_BYTE)v15) & 0x3F));
  v5[215] = v35 + (~(2 * v35) | 0xCF) + 25;
  LOBYTE(v35) = *(_BYTE *)(v16 + (v5[13] & 0x3F ^ 0x18));
  v5[446] = v41;
  v42 = ((((v35 & 0x2C ^ 0x1F) + 63) & 0x2C ^ 0xAB) - ((2 * ((v35 & 0x2C ^ 0x1F) + 63)) & 8) - 44) ^ 0xD4;
  LOBYTE(v41) = (v5[146] ^ 0xAA) + 78 + ((2 * (v5[146] ^ 0x10)) & 0x64);
  LOBYTE(v41) = ((2 * ((v41 * v41 + 16) ^ 0x10) * v41) & 0x54) + ((((v41 * v41 + 16) ^ 0x10) * v41) ^ 0xAA);
  v43 = (v42 - ((2 * v42) & 0x1F6) - 1643132165) ^ 0x9E0FCAFB;
  v5[381] = ((v43 << ((v41 + 6) & 7)) - ((2 * (v43 << ((v41 + 6) & 7))) & 0x6A) + 53) ^ ((v43 >> ((2 - v41) & 7))
                                                                                       - ((2 * (v43 >> ((2 - v41) & 7))) & 0x26)
                                                                                       + 19) ^ 0xC0;
  v44 = (v5[131] ^ 0x18) - ((2 * (v5[131] ^ 0x18)) & 0x172) + 554257337;
  v45 = (v5[393] ^ 0xE6) - ((2 * (v5[393] ^ 0xE6)) & 0xCA) + 655203941;
  v46 = (((v45 ^ 0x270D9E65 | v44 ^ 0x21094BB9) - ((2 * (v45 ^ 0x270D9E65 | v44 ^ 0x21094BB9)) & 0x3FD2) + 8169) ^ 0x1FE9) & (((v5[400] ^ 0xE6) - ((2 * (v5[400] ^ 0xE6)) & 0x68) + 1055408436) ^ 0x3EE84134);
  v47 = (v46 - ((2 * v46) & 0x80E92B4) + 1141328218) ^ 0x4407495A | (((v45 ^ 0x21090E65) & (v44 ^ 0x3B9))
                                                                   - ((2 * ((v45 ^ 0x21090E65) & (v44 ^ 0x3B9))) & 0x5F909852)
                                                                   - 272085975) ^ 0xEFC84C29;
  LOBYTE(v44) = *(_BYTE *)(v18 + (v5[220] & 0x3F ^ 0x18)) & 3 ^ 6;
  LOBYTE(v8) = (v44 - ((2 * v44) & 4) - 50) ^ 0xD6;
  LOBYTE(v8) = ((2 * v8) & 0xE7) + (v8 ^ 0xF3);
  v48 = (v47 - ((2 * v47) & 0x62C05DFE) + 1902128895) ^ 0x71602EFF;
  LOBYTE(v48) = ((v48 >> (v8 + 13)) - ((2 * (v48 >> (v8 + 13))) & 0xF2) + 121) ^ ((v48 << (-5 - v8))
                                                                                - ((2 * (v48 << (-5 - v8))) & 0xAE)
                                                                                + 87);
  LOBYTE(v48) = (v5[330] ^ 0xE6) + (v48 ^ 0x51) + ((2 * v48) ^ 0x5C) - 127;
  v5[330] = v48 - ((2 * v48) & 0xCC) - 26;
  v49 = (v5[10] >> 1) ^ 0xC;
  LOBYTE(v44) = *(_BYTE *)(v18 + (v5[27] & 0x3F ^ 0x18));
  LOBYTE(v44) = (v44 ^ 0x19) + 2 * (v44 ^ 0xE6) + 1;
  LOBYTE(v44) = ((2 * v44 * v44) & 0x42) + ((v44 * v44) ^ 0x21);
  v50 = (v49 - ((2 * v49) & 0xB8) + 858890332) ^ 0x3331A05C;
  v51 = ((v50 >> ((v44 - 1) & 7)) - ((2 * (v50 >> ((v44 - 1) & 7))) & 0x98) + 76) ^ ((v50 << ((1 - v44) & 7))
                                                                                   - ((2 * (v50 << ((1 - v44) & 7))) & 0xC2)
                                                                                   + 225);
  v52 = (v5[67] ^ 0x18) + (v51 ^ 0x2C) + ((4 * (v51 >> 1)) ^ 0xFFFFFFA7) - 128;
  v5[67] = v52 - ((2 * v52) & 0x30) + 24;
  LOBYTE(v52) = byte_18CF28BD0[v5[136] & 0x3F ^ 0x18] & 0xAC ^ 0x84;
  LOBYTE(v52) = ((((2 * v52) & 0x18) - v52 - 77) ^ 0x36) - 1;
  v53 = v5[195];
  LOBYTE(v52) = (v53 ^ 0x18) + (v52 & 0xEF ^ 0x6B) + ((2 * v52) & 0xD8 ^ 0x28) - 125;
  v5[195] = v52 + ~(2 * (v52 & 0x99 ^ v53 & 1)) + 25;
  v54 = (*(unsigned __int8 *)(v16 + (v5[182] & 0x3F ^ 0x18)) ^ 0xFFFFFFE6) + 13;
  v55 = ((2 * v54) & 0xFFFFFFAC) + (v54 ^ 0x56);
  v56 = 171 * (byte_18CF28BD0[v5[56] & 0x3F ^ 0x18] ^ 0xE3);
  v57 = ((v56 >> 8) & 0xF2) + ((v56 >> 9) ^ 0x79);
  v58 = *(unsigned __int8 *)(v16 + (v5[196] & 0x3F ^ 0x18)) ^ 0xFFFFFFE6;
  v59 = *(unsigned __int8 *)(v18 + (v5[21] & 0x3F ^ 0x18)) ^ 0xFFFFFFE6;
  v60 = ((v59 | v58) - ((2 * (v59 | v58)) & 0x18) + 12) & 0x49 ^ 9;
  v61 = (((2 * v60) & 0xFFFFFF8F) - v60 - 70) ^ 0xFFFFFFBA;
  v62 = ((v61 | 0xFFFFFFA1) - (v61 | 0x5E) + 94) ^ 0xFFFFFFA0 | ((v59 & v58) + (~(2 * (v59 & v58)) | 0xFFFFFFA5) - 82) ^ 0xFFFFFFAD;
  v63 = (*(unsigned __int8 *)(v18 + (v5[127] & 0x3F ^ 0x18)) ^ 0xFFFFFFE6)
      + (v5[423] ^ 0xFFFFFFE6)
      + (v62 ^ 0xFFFFFF87)
      - 16 * (v62 >> 3)
      + 121;
  v5[423] = v63 - ((2 * v63) & 0xCC) - 26;
  LOBYTE(v63) = (((*(_BYTE *)(v18 + (v5[65] & 0x3F ^ 0x18)) & 2 ^ 0xA) - 52) ^ 0xDC) & (v5[140] ^ 8);
  v5[369] = v63 - ((2 * v63) & 4) - 26;
  v64 = ((v5[134] & 0x89 ^ 0x3E) - ((2 * (v5[134] & 0x89 ^ 0x3E) + 28) & 0x10) + 86) ^ 0xF8;
  v5[321] = v64 / 5u - (((205 * v64) >> 9) & 0xCC) - 26;
  v65 = 171 * (v5[339] ^ 0xE6);
  v66 = ((v65 >> 9) - ((v65 >> 8) & 0x6A) + 53) & 0x4D ^ 0xFFFFFFC4;
  v67 = (*(_BYTE *)(v16 + (v5[39] & 0x3F ^ 0x18)) ^ 0xE6) + 50;
  v68 = (v67 ^ 0x3B) + ((2 * v67) & 0x36) + 5;
  LOBYTE(v66) = (((2 * v66) | 0x4C) - v66 + 90) ^ 0x67 | ((v68 & 0x32) - ((2 * v68) & 0x20) - 36) ^ 0xDC;
  LOBYTE(v66) = (v5[330] ^ 0xE6) + (v66 ^ 0xB2) + ((2 * v66) & 0x64) + 78;
  v5[330] = v66 - ((2 * v66) & 0xCC) - 26;
  LOBYTE(v66) = (v5[322] & 7 ^ 6 | 0x8D) - (v5[322] & 7 ^ 6 | 0x72) + 114;
  LOBYTE(v58) = v66 ^ 0xD2;
  LOBYTE(v59) = v66 ^ 0xD;
  v69 = ((a1 >> ((7 - (((2 * v59) & 0xBE) + v58)) & 7))
       - ((0x6Eu >> ((7 - (((2 * v59) & 0xBE) + v58)) & 7)) & 0x36)
       - 1453256741) ^ ((a1 << (((2 * v59) & 0xBE) + v58 - 95))
                      - 1431738406
                      + (~(110 << (((2 * v59) & 0xBE) + v58 - 95)) | 0xAAAD304D));
  v70 = ((((v69 & a2 ^ 0x3C8682F) + 78284 + ((2 * (v69 & a2 ^ 0x3C8682F)) & 0x26380 ^ 0x3FFE7)) | 1) ^ 0x131CC) & (((v5[401] ^ 0xE6) - ((2 * (v5[401] ^ 0xE6)) & 0x144) - 1457111134) ^ 0xA9263FA2);
  v71 = (v70 - ((2 * v70) & 0x368F65AE) - 1689799977) ^ 0x9B47B2D7 | ((v69 & 0x2C | 0x258CDFD3)
                                                                    - ((v69 & 0x2D)
                                                                     + 264832)
                                                                    + (((v69 & 0x2D) + 264832) & 0x40AAC)) ^ 0x258CDFD3;
  v72 = v71 + (~(2 * v71) | 0xFFFFFFC9) - 100;
  LODWORD(STACK[0x2A0]) = v72 ^ 0xFFFFFF8E;
  LODWORD(STACK[0x29C]) = (2 * v72) & 0x2A ^ 0x22;
  LOBYTE(v72) = (v5[237] ^ 0x18) + (byte_18CF28BD0[v5[201] & 0x3F ^ 0x18] ^ 0xFA);
  v5[237] = v72 - ((2 * v72) & 0x30) + 24;
  v73 = *(unsigned __int8 *)(v18 + (v5[120] & 0x3F ^ 0x18)) ^ 0xE6;
  v74 = (v5[400] ^ 0xE6) - 2 * ((v5[400] ^ 0xE6) & 0x7F) + 1473653631;
  v75 = v73 - ((2 * v73) & 0x9E) + 265454415;
  v76 = (((v75 ^ 0xFD2834F | v74 ^ 0x57D62B7F) - ((2 * (v75 ^ 0xFD2834F | v74 ^ 0x57D62B7F)) & 0x816) + 3083) ^ 0xC0B) & (((v5[392] ^ 0xE6) - ((2 * (v5[392] ^ 0xE6)) & 0x142) + 2006919329) ^ 0x779F28A1);
  v77 = (v76 - ((2 * v76) & 0x260FAF48) + 319281060) ^ 0x1307D7A4 | (((v75 ^ 0x7D0034F) & (v74 ^ 0x22B7F))
                                                                   - ((2 * ((v75 ^ 0x7D0034F) & (v74 ^ 0x22B7F))) & 0x311BF0E0)
                                                                   - 661784464) ^ 0xD88DF870;
  v78 = ((v5[436] ^ 0xE6) - ((2 * (v5[436] ^ 0xE6)) & 0x1E4) + 1103120626) ^ 0x41C048F2;
  v79 = v77 - ((2 * v77) & 0x7A0EE6B6) + 1023898459;
  v80 = ((v79 ^ 0x3D07735B | v78) - ((2 * (v79 ^ 0x3D07735B | v78)) & 0x1C) + 14) & 0x4F ^ 0x47;
  v81 = (v80 - 530376418 - ((2 * v80) & 0xFFFFFF8F) + 57) ^ 0xE063191E | (((v79 ^ 0x35B) & v78)
                                                                        - ((2 * ((v79 ^ 0x35B) & v78)) & 0x32DBCD1E)
                                                                        + 1500374671) ^ 0x596DE68F;
  LODWORD(STACK[0x290]) = v81 - ((2 * v81) & 0xF2);
  LODWORD(STACK[0x308]) = v55;
  v82 = v5[327];
  v83 = ((*(unsigned __int8 *)(v16 + (((_BYTE)v55 + 42) & 0x3F)) >> 1) ^ 0x73) & (v82 ^ 0x66);
  LOBYTE(v82) = ((((v5[208] ^ 0x18) + 43) ^ 0x3A) + ((2 * ((v5[208] ^ 0x18) + 43)) & 0x74) - 58) & (v82 ^ 0x19);
  v84 = (v82 + (~(2 * v82) | 0x63) + 79) ^ v7 | (v83 - ((2 * v83) & 0xCC) + 102) ^ 0x66;
  v85 = (v5[335] ^ 0xE6) + (v84 ^ 0xD7) + ((2 * v84) & 0xAE) + 41;
  v5[335] = v85 - ((2 * v85) & 0xCC) - 26;
  v86 = *(_BYTE *)(v18 + (v5[162] & 0x3F ^ 0x18));
  LOBYTE(v83) = (((v86 & 0x81 ^ 0xFE) + ((2 * (v86 & 0x81)) ^ 0xBB) - 92) ^ 0xA3) & (v5[323] ^ 0xE6);
  v87 = (v83 - ((2 * v83) & 0x6C) + 54) ^ 0x36 | v86 & 0x7E ^ 0x66;
  LOBYTE(v83) = *(_BYTE *)(v16 + (v5[65] & 0x3F ^ 0x18));
  v5[394] ^= (((v87 + (~(2 * v87) | 0xA1) + 48) & 0xFE) >> 1) ^ 0x17;
  v5[356] ^= 0x1A ^ ((v83 ^ 0xE6) - ((2 * (v83 ^ 0xE6) + 98) & 0x68) + 101);
  v88 = (v5[103] ^ 0xE7) + (v5[436] ^ 0xE6) + 1;
  v5[436] = v88 - ((2 * v88) & 0xCC) - 26;
  v89 = *(_BYTE *)(v18 + (v5[173] & 0x3F ^ 0x18));
  v90 = ~(((2 * v89) ^ 0x33) + ((4 * v89) ^ 0x98)) + (v5[227] ^ 0x18);
  v5[227] = v90 - ((2 * v90) & 0x30) + 24;
  LODWORD(STACK[0x2D8]) = v57;
  v5[383] ^= *(_BYTE *)(v18 + (((_BYTE)v57 + 7) & 0x3F)) ^ 0xE6;
  v91 = (v5[26] ^ 0x18) * (v5[26] ^ 0x18);
  v92 = (v5[350] ^ 0xE6) + (v91 ^ 0xC9) - ((2 * v91) & 0x6C) + 55;
  v5[350] = v92 - ((2 * v92) & 0xCC) - 26;
  LOBYTE(v83) = *(_BYTE *)(v16 + (v5[136] & 0x3F ^ 0x18)) ^ 0xE6;
  LOBYTE(v66) = (v5[385] ^ 0xE6) - ((2 * (v5[385] ^ 0xE6)) & 0xBE) + 95;
  LOBYTE(v83) = v83 - ((2 * v83) & 0x1F) - 113;
  LOBYTE(v8) = (((v83 ^ 0x8F | v66 ^ 0x5F) - ((2 * (v83 ^ 0x8F | v66 ^ 0x5F)) & 0xAE) + 87) ^ 0x57) & (((v5[378] ^ 0xE6) - ((2 * (v5[378] ^ 0xE6)) & 0x1C) + 14) ^ 0xE);
  LOBYTE(v8) = (v8 - ((2 * v8) & 0x86) + 67) ^ 0x43 | (((v83 ^ 0x8F) & (v66 ^ 0x5F))
                                                     - ((2 * ((v83 ^ 0x8F) & (v66 ^ 0x5F))) & 0xE8)
                                                     - 12) ^ 0xF4;
  LOBYTE(v8) = v8 - ((2 * v8) & 0xE8) - 12;
  LOBYTE(v66) = ((v8 & 0xBD ^ 0x3C | 0x6F) - (v8 & 0xBD ^ 0x3C | 0x90) - 112) ^ 0x8D;
  LOBYTE(v83) = ((2 * v66) | 0x88) - v66 + 60;
  v93 = (v5[374] >> 1) ^ 0x73;
  LOBYTE(v8) = (((v8 & 0xC2 ^ 0xFD) - ((2 * (v8 & 0xC2 ^ 0xFD)) & 4) - 26) ^ 0x1E) & ((v93 - ((2 * v93) & 0x30) - 104) ^ 0x98);
  LOBYTE(v8) = (v8 - ((2 * v8) & 0xA2) - 47) ^ 0xD1 | v83 ^ 0xAE;
  v5[358] = (v8 - ((2 * v8) & 0x36) - 101) ^ 0x7D;
  v94 = v5[422] ^ 0xE6;
  v95 = v94 - 34;
  v96 = v94 + 1824918494 - ((2 * v94) & 0x184) - 28;
  v97 = (v96 & 0x8A ^ 0x41D41509) + (v95 & 2 ^ 0xB22BE206) - ((v96 & 0x8A ^ 0x41D41509) & 0x40141403);
  v98 = (v96 ^ 0x743D) & (((v5[92] ^ 0x18)
                         - ((2 * (v5[92] ^ 0x18)) & 0x112)
                         - 791297655) ^ 0xD0D5C189);
  v99 = (v98 - ((2 * v98) & 0x18BD41DC) - 1939955474) ^ 0x8C5EA0EE | v97 ^ 0xB3EBE38C;
  v100 = 205 * (v5[155] ^ 0x18);
  LOBYTE(v100) = ((v100 >> 10) - ((v100 >> 9) & 4) + 2) & 7 ^ 6;
  LOBYTE(v100) = (v100 - 2 * (v100 & 3) + 91) ^ 0x4F;
  LOBYTE(v83) = ((v100 | 0x5E) - (v100 | 0xA1) + 33) ^ 0xCE;
  v101 = (v99 - ((2 * v99) & 0x5CC5DE48) - 295506140) ^ 0xEE62EF24;
  v102 = v101 << ((((v100 | 0x5E) - (v100 | 0xA1) + 33) ^ 0x36) + ((2 * v83) & 0xF0) + 8);
  v103 = (v102 + (~(2 * v102) | 0xFFFFFF61) + 208) ^ ((v101 >> (-(char)v83 & 7))
                                                    - 2 * ((v101 >> (-(char)v83 & 7)) & 1)
                                                    + 1);
  LOBYTE(v39) = (v5[395] ^ 0xE6) + (v103 ^ 0xCC) + ((2 * v103) & 0xFB ^ 0x67) - 1;
  v5[395] = v39 - ((2 * v39) & 0xCC) - 26;
  v5[345] ^= 0xFDu;
  v5[343] = LOBYTE(STACK[0x298]) - 45 + (~(2 * (LOBYTE(STACK[0x298]) - 45)) | 0x33) - 25;
  v104 = v5[69] & 0xAC ^ 0xFFFFFF88;
  LODWORD(STACK[0x298]) = (((((v104 | 0xFFFFFFE2) - (v104 | 0x1D) + 29) & 0xFFFFFFBC ^ 0x62)
                          + ((2 * ((v104 | 0xFFFFFFE2) - (v104 | 0x1D) + 29)) & 0x30 ^ 0x7F)
                          + 89) ^ 0x58)
                        * (*(unsigned __int8 *)(v16 + (v5[116] & 0x3F ^ 0x18)) ^ 0x19);
  LOBYTE(v104) = (2 * *(_BYTE *)(v18 + (v5[85] & 0x3F ^ 0x18))) ^ 0xCC;
  v5[96] = (v104 - ((2 * v104) & 0x4C) - 89) ^ 0x40;
  v105 = (v5[39] & 0x48 ^ 8) + ((v5[39] >> 1) & 0x6C ^ 0x3B) + 47;
  LODWORD(STACK[0x288]) = v105;
  v106 = (v105 & 0xFE) - ((2 * v105) & 0xF0) - 276130184;
  LOBYTE(v103) = (*(_BYTE *)(v16 + (((v105 & 0xFE) - ((2 * (_BYTE)v105) & 0xF0) + 120) & 0x3E ^ 0x38)) ^ 0xE6) & (byte_18CF28BD0[v5[33] & 0x3F ^ 0x18] ^ 5);
  v5[373] ^= 0x89 ^ (v103 - ((2 * v103) & 0x12) - 119);
  LOBYTE(v103) = (v5[239] & 0x3F ^ 0x35) + (v5[239] & 0x3D ^ 0x88) - ((v5[239] & 0x3F ^ 0x35) & 0xFD);
  v107 = ((v103 & 0x9F ^ 0x8E) + (v103 ^ 0x51) - ((v103 ^ 0x51) & 0x9F)) ^ 0x5ELL;
  LOBYTE(v103) = *(_BYTE *)(v18 + v107) ^ 0xE6 | v5[148] ^ 0x18;
  LOBYTE(v103) = ((v103 + (~(2 * v103) | 0xC3) - 97) & 0xC6 ^ 0xC3) - 1;
  v108 = *(unsigned __int8 *)(v18 + (v5[105] & 0x3F ^ 0x18));
  v109 = ((32 * ((v108 >> 4) & 1)) | 0x49) - (v108 & 0x18);
  LOBYTE(v103) = ((v103 & 0x84 ^ 0xA1) + (v103 ^ 0x4C) - ((v103 ^ 0x4C) & 0x84)) ^ 0xAD | ((v109 ^ 0xF6)
                                                                                         + ((2 * v109) & 0xA0)
                                                                                         + 44) ^ 0x6B;
  v110 = v103 - ((2 * v103) & 0x60);
  LOBYTE(v109) = v5[354];
  LOBYTE(v103) = (v5[221] ^ 0x18) & (v109 ^ 0xE6);
  LOBYTE(v109) = (v5[339] ^ 0xE6) & (v109 ^ 0x19);
  LOBYTE(v103) = (v109 - ((2 * v109) & 0xFB) - 3) ^ 0xFD | (v103 - ((2 * v103) & 0xB2) - 39) ^ 0xD9;
  v5[441] = (v103 - ((2 * v103) & 0xCF) + 39) & 0x7F ^ 0xC1;
  v111 = 205 * (*(unsigned __int8 *)(v16 + (v5[171] & 0x3F ^ 0x18)) ^ 0xE6);
  v112 = (v5[24] ^ 0x18) + ((v111 >> 10) ^ 0x59) + ((v111 >> 9) & 0x32) - 89;
  v5[44] ^= 0x62 ^ (v112 - ((2 * v112) & 0xC4) + 98);
  v113 = (v5[137] >> 1) & 0x24 ^ 0xE;
  LOBYTE(v113) = ((v113 | 0x62) - (v113 | 0x9D) - 99) ^ 0x68 | v5[329] & 0x53 ^ 0x42;
  v5[423] ^= 0x97 ^ (v113 + (~(2 * v113) | 0xD1) - 104);
  v5[344] ^= (3 * (((v5[67] & 0xD0 ^ 0x3F) + ((2 * (v5[67] & 0xD0)) ^ 0x9D) - 14) ^ 0xF1)
                             - ((6 * (((v5[67] & 0xD0 ^ 0x3F) + ((2 * (v5[67] & 0xD0)) ^ 0x9D) - 14) ^ 0xF1)) & 0xD8)
                             - 18) ^ 0xEE;
  v5[370] = 83;
  v5[419] ^= 0xBDu;
  LOBYTE(v109) = *(_BYTE *)(v16 + (v5[37] & 0x3F ^ 0x18));
  LOBYTE(v113) = ((v109 & 0x56 ^ 0x74) - (v109 | 0xF7)) ^ 0x3B | ((v5[400] & 0xA1 ^ 0xC1)
                                                                - ((2 * (v5[400] & 0xA1 ^ 0xC1)) & 0x83)
                                                                - 51) ^ 0xAC;
  LOBYTE(v113) = ((v113 - ((2 * v113) & 0x6C) - 74) ^ 0xB8) + (v5[188] ^ 0x18);
  LODWORD(STACK[0x294]) = byte_18CF28BD0[v107];
  LOBYTE(v56) = v113 - ((2 * v113) & 0x30);
  LOBYTE(v113) = v5[61] ^ 0x18;
  LOBYTE(v105) = byte_18CF28BD0[v5[193] & 0x3F ^ 0x18] ^ 5;
  LOBYTE(v109) = (((v105 | v113) - ((2 * (v105 | v113)) & 0xE4) + 114) ^ 0x72) & (v5[403] ^ 0xE6);
  LOBYTE(v105) = (v109 + (~(2 * v109) | 0xDD) + 18) ^ 0x11 | ((v105 & v113) - ((2 * (v105 & v113)) & 0x14) + 10) ^ 0xA;
  LOBYTE(v105) = (v5[357] ^ 0xE6) + (v105 ^ 0xC2) - ((2 * v105) & 0x7A) + 62;
  v5[357] = v105 - ((2 * v105) & 0xCC) - 26;
  LOBYTE(v113) = (*(_BYTE *)(v16 + (v5[159] & 0x3F ^ 0x18)) ^ 0xE6) & ((v110 - 80) ^ 0x4F);
  LOBYTE(v113) = (((v113 - ((2 * v113) & 0x76) + 59) & 0x9C ^ 0x85) - ((v113 + 1) | 0xFE) - 2) ^ 0x21;
  LOBYTE(v113) = ((v113 | 0xC3) - (v113 | 0x3C) + 60) & 0xDD ^ 0x7E;
  v5[371] ^= (v113 - ((2 * v113) & 0x10) + 8) ^ 8;
  LOBYTE(v109) = (v5[116] ^ 0x18) - ((2 * (v5[116] ^ 0x18)) & 0xB6) - 37;
  LOBYTE(v60) = (v5[416] ^ 0xE6) - ((2 * (v5[416] ^ 0xE6)) & 0x6C) + 54;
  LOBYTE(v93) = (((v60 ^ 0x36 | v109 ^ 0xDB) - ((2 * (v60 ^ 0x36 | v109 ^ 0xDB)) & 0x8E) + 71) ^ 0x47) & (((v5[349] ^ 0xE6) - ((2 * (v5[349] ^ 0xE6)) & 0xC8) + 100) ^ 0x64);
  LOBYTE(v93) = (v93 - ((2 * v93) & 0x3A) - 99) ^ 0x9D | (((v60 ^ 0x36) & (v109 ^ 0xDB))
                                                        - ((2 * ((v60 ^ 0x36) & (v109 ^ 0xDB))) & 0xB2)
                                                        - 39) ^ 0xD9;
  v114 = (v106 >> 1) ^ 0x77C54B3C;
  LOBYTE(v93) = v93 - ((2 * v93) & 0x7C) + 62;
  LOBYTE(v113) = (((v93 ^ 0x3E | v114) - ((2 * (v93 ^ 0x3E | v114)) & 0xEA) - 11) ^ 0xF5) & (((v5[321] ^ 0xE6)
                                                                                            - ((2 * (v5[321] ^ 0xE6)) & 0x1A)
                                                                                            - 115) ^ 0x8D);
  LOBYTE(v114) = (v113 - ((2 * v113) & 0x6A) + 53) ^ 0x35 | (((v93 ^ 0x3E) & v114)
                                                           - ((2 * ((v93 ^ 0x3E) & v114)) & 0x46)
                                                           - 93) ^ 0xA3;
  v5[347] = (v114 - ((2 * v114) & 0x4A) + 37) ^ 0xC3;
  v5[188] = v56 + 24;
  v115 = *(unsigned __int8 *)(v18 + (((_BYTE)v56 + 24) & 0x3F ^ 0x18));
  HIDWORD(v116) = v115 ^ 2;
  LODWORD(v116) = (v115 ^ 0xFFFFFFE7) << 24;
  LOBYTE(v56) = 2 * (((2 * ((v5[4] & 7 ^ 3) & 3) - (v5[4] & 7 ^ 3) + 20) ^ 0x17) & 0xF)
              + ((2 * ((v5[4] & 7 ^ 3) & 3) - (v5[4] & 7 ^ 3) + 20) ^ 0x78);
  v117 = ((v5[430] ^ 0xE6) - ((2 * v5[430]) & 0x12) + 1169180425) ^ 0x45B04709;
  v118 = (v117 << (v56 - 111)) - ((2 * (v117 << (v56 - 111))) & 0x59843EF8) - 1396564100;
  v119 = (v117 >> ((7 - v56) & 7)) - ((2 * (v117 >> ((7 - v56) & 7))) & 0x167C6E30) - 1958856936;
  v120 = *(_BYTE *)(v18 + (v5[41] & 0x3F ^ 0x18));
  LOBYTE(v102) = (v5[247] ^ 0x18) - ((2 * v5[247]) & 0x46) + 35;
  v121 = (v120 ^ 0xE6) - ((2 * v120) & 0x32) + 25;
  LOBYTE(v56) = (((v121 ^ 0x19 | v102 ^ 0x23) - ((2 * (v121 ^ 0x19 | v102 ^ 0x23)) & 0x92) - 55) ^ 0xC9) & (((v5[415] ^ 0xE6) - ((2 * v5[415]) & 0x10) + 8) ^ 8);
  LOBYTE(v56) = (v56 - ((2 * v56) & 0xBA) + 93) ^ 0x5D | (((v121 ^ 0x19) & (v102 ^ 0x23))
                                                        - ((2 * ((v121 ^ 0x19) & (v102 ^ 0x23))) & 0x90)
                                                        - 56) ^ 0xC8;
  LOBYTE(v119) = v118 ^ 0x64 ^ v119;
  LOBYTE(v56) = (v56 - ((2 * v56) & 0xBC) + 94) ^ 0x5E;
  LOBYTE(v113) = (((v56 | v119) - ((2 * (v56 | v119)) & 0xA2) + 81) ^ 0x51) & (((v5[381] ^ 0xE6)
                                                                              - ((2 * (v5[381] ^ 0xE6)) & 0x50)
                                                                              + 40) ^ 0x28);
  LOBYTE(v113) = (v113 - ((2 * v113) & 0xB2) + 89) ^ 0x59 | ((v56 & v119) - ((2 * (v56 & v119)) & 0xCE) + 103) ^ 0x67;
  LOBYTE(v113) = (v5[354] ^ 0xE6)
               + ((v113 - ((2 * v113) & 0xE0) + 112) ^ 0x87)
               + ((2 * (v113 - ((2 * v113) & 0xE0) + 112)) & 0xEF ^ 0xE0)
               + 9;
  v5[354] = v113 - ((2 * v113) & 0xCC) - 26;
  LOBYTE(v113) = (v5[442] ^ 0xE6) - ((2 * (v5[442] ^ 0xE6)) & 0xDD) - 18;
  LOBYTE(v119) = (((v5[372] ^ 0xE6) - ((2 * (v5[372] ^ 0xE6)) & 0xB6) + 91) ^ 0x5B) & (v113 ^ 0x11);
  LOBYTE(v113) = (v119 - ((2 * v119) & 0x42) + 33) ^ 0x21 | ((v113 & 0xE3 ^ 0x3E) + 60) & 0x23;
  LOBYTE(v113) = (v113 - ((2 * v113) & 0x74) - 70) ^ 0xBA;
  v5[339] = (v113 * v113 + (~(2 * v113 * v113) | 0x57) - 43) ^ 0x32;
  LOBYTE(v113) = v5[444] & 0x25 ^ 0x2D;
  LOBYTE(v113) = (v5[322] ^ 0xE6)
               + (((v113 | 0xE0) - (v113 | 0x1F) + 31) & 0xE5 ^ 0x29)
               + ((2 * ((v113 | 0xE0) - (v113 | 0x1F) + 31)) & 0x4A ^ 0xAD)
               + 63;
  LOBYTE(v113) = (v5[361] ^ 0xE6) + (v113 ^ 0xFD) + ((2 * v113) & 0xFB) + 3;
  v5[361] = v113 - ((2 * v113) & 0xCC) - 26;
  v122 = (61 * (LODWORD(STACK[0x474]) == 1935652810)) ^ a3;
  v123 = LODWORD(STACK[0x2B8]) + 69;
  LODWORD(STACK[0x28C]) = LODWORD(STACK[0x2A8]) - 49;
  v5[151] = 24;
  LODWORD(STACK[0x2A8]) = LODWORD(STACK[0x290]) + 138;
  LODWORD(STACK[0x2C8]) = (v116 >> 26) - ((2 * (v116 >> 26)) & 0x60) - 80;
  return ((_QWORD *(*)(_QWORD *__return_ptr, _QWORD, void *, void *))qword_1E2538EC0[v122])(qword_18CF268E0, v123 ^ 0xEu, &unk_18CF4C110, &unk_18CF26870);
}

uint64_t sub_18CB8DA30@<X0>(int a1@<W0>, char *a2@<X1>, _BYTE *a3@<X2>, int a4@<W4>, int a5@<W7>, _BYTE *a6@<X8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v10;
  unint64_t v11;
  char v12;
  _BYTE *v13;
  char v14;
  char v15;
  char *v16;
  char v17;
  _BYTE *v18;
  char v19;
  _BYTE *v20;
  unsigned int v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  unsigned int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  char v81;
  char v82;
  char v83;
  char v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  int v91;
  unint64_t v92;

  v9 = a1 + LODWORD(STACK[0x2A0]) + LODWORD(STACK[0x29C]);
  LODWORD(STACK[0x2B8]) = a4 ^ a5 ^ 0xFFFFFFA7;
  LODWORD(STACK[0x2D0]) = v7 ^ 0xFFFFFFB0;
  v10 = v8 == 1935652811;
  v11 = STACK[0x328];
  v12 = (*(_BYTE *)STACK[0x328] ^ 0x99) + 127;
  *(_BYTE *)STACK[0x328] = (((((2 * v12) & 0xBF) + (v12 ^ 0xDF) + 118) | 0x13)
                          - ((9 - (((2 * v12) & 0xBF) + (v12 ^ 0xDF))) & 0x13)
                          - 85) ^ 0x99;
  if (v8 == 1935652811)
    v13 = a6;
  else
    v13 = a6 + 1;
  if (v8 == 1935652811)
    v14 = 0;
  else
    v14 = 11;
  v15 = *v13 ^ v14;
  if (v8 == 1935652811)
    v16 = a2;
  else
    v16 = a2 + 1;
  v17 = *v16;
  if (v8 == 1935652811)
    v18 = a3;
  else
    v18 = a3 + 1;
  v19 = v15 ^ v17 ^ *v18;
  if (v10)
    v20 = (_BYTE *)v11;
  else
    v20 = (_BYTE *)(v11 + 1);
  *v20 = v19 ^ ((v19 ^ *v20) - 20);
  v21 = STACK[0x310];
  v22 = 2u % LODWORD(STACK[0x310]);
  v23 = (11 * v22) ^ a6[v22] ^ a2[v22] ^ a3[v22];
  *(_BYTE *)(v11 + v22) = v23 ^ ((((v23 ^ *(_BYTE *)(v11 + v22)) + 111) ^ 0x7B)
                               + ((2 * ((v23 ^ *(_BYTE *)(v11 + v22)) + 111)) & 0xF7)
                               - 123);
  v24 = 3 % v21;
  v25 = (11 * v24) ^ a6[v24] ^ a2[v24] ^ a3[v24];
  v26 = (v25 ^ *(unsigned __int8 *)(v11 + v24)) + LODWORD(STACK[0x288]);
  *(_BYTE *)(v11 + v24) = v25 ^ ((v26 ^ 0x13) + ((2 * v26) & 0x26) - 19);
  v27 = 4 % v21;
  LOBYTE(v25) = (11 * v27) ^ a6[v27] ^ a2[v27] ^ a3[v27];
  LOBYTE(v26) = (v25 ^ *(_BYTE *)(v11 + v27)) - 3;
  *(_BYTE *)(v11 + v27) = v25 ^ (((2 * v26) & 0xDC)
                               + (v26 ^ 0x6E)
                               + ((24 - (((2 * v26) & 0xDC) + (v26 ^ 0x6E))) | 0xA1)
                               + ((((2 * v26) & 0xDC) + (v26 ^ 0x6E) + 103) | 0xA1)
                               - 14);
  v28 = STACK[0x474];
  v29 = LODWORD(STACK[0x474]) ^ 0x735FB7CA;
  v30 = 5 % v29;
  v31 = (-111 * v30) ^ byte_18CF269B0[v30] ^ byte_18CF4EBE0[v30 + 1] ^ byte_18CF4CC30[v30 + 1];
  v32 = (v31 ^ *(unsigned __int8 *)(v11 + v30)) + 17;
  *(_BYTE *)(v11 + v30) = v31 ^ ((((v32 ^ 0xFE) + 4 * (v32 >> 1) + 62) ^ 0x43)
                               + ((2 * ((v32 ^ 0xFE) + 4 * (v32 >> 1)) + 124) & 0x87)
                               - 127);
  v33 = 6 % v29;
  v34 = (*((unsigned __int8 *)&unk_18CF26890 + v33) ^ *(unsigned __int8 *)(v11 + v33) ^ (25 * v33) ^ byte_18CF4BCE0[v33 + 3] ^ byte_18CF4F810[v33 + 2])
      + (LODWORD(STACK[0x28C]) ^ 0xFFFFFFBF);
  *(_BYTE *)(v11 + v33) = byte_18CF269B0[v33] ^ (-111 * v33) ^ byte_18CF4EBE0[v33 + 1] ^ byte_18CF4CC30[v33 + 1] ^ ((v34 ^ 0x4F) + ((2 * v34) & 0x9F) - 79);
  v35 = 7 % v29;
  LOBYTE(v34) = (-111 * v35) ^ byte_18CF269B0[v35] ^ byte_18CF4EBE0[v35 + 1] ^ byte_18CF4CC30[v35 + 1];
  LOBYTE(v21) = (v34 ^ *(_BYTE *)(v11 + v35)) + 47;
  *(_BYTE *)(v11 + v35) = v34 ^ (((((2 * v21) & 0x6C) + (v21 ^ 0xB6) + 124) | 0x5A)
                               - ((3 - (((2 * v21) & 0x6C) + (v21 ^ 0xB6))) & 0x5A)
                               - 50);
  v36 = 8 % v29;
  v37 = LODWORD(STACK[0x298])
      + (a6[v36] ^ *(unsigned __int8 *)(v11 + v36) ^ (11 * v36) ^ a2[v36] ^ a3[v36])
      + 97;
  *(_BYTE *)(v11 + v36) = byte_18CF269B0[v36] ^ (-111 * v36) ^ byte_18CF4EBE0[v36 + 1] ^ byte_18CF4CC30[v36 + 1] ^ ((v37 ^ 0x7F) + 2 * v37 - 127);
  v38 = 9 % v29;
  LOBYTE(v37) = (-111 * v38) ^ byte_18CF269B0[v38] ^ byte_18CF4EBE0[v38 + 1] ^ byte_18CF4CC30[v38 + 1];
  LOBYTE(v21) = (v37 ^ *(_BYTE *)(v11 + v38)) - 118;
  *(_BYTE *)(v11 + v38) = v37 ^ (((((2 * v21) & 0xEF) + (v21 ^ 0x77) - 53) ^ 0xC9)
                               + ((2 * (((2 * v21) & 0xEF) + (v21 ^ 0x77)) - 106) & 0x92)
                               - 11);
  v39 = 0xA % v29;
  v40 = (-111 * v39) ^ byte_18CF269B0[v39] ^ byte_18CF4EBE0[v39 + 1] ^ byte_18CF4CC30[v39 + 1];
  v41 = ((LODWORD(STACK[0x2E8]) + 1) ^ 0xFFFFFFC0)
      - 2 * ((LODWORD(STACK[0x2E8]) + 1) & 0x3F)
      + (v40 ^ *(unsigned __int8 *)(v11 + v39))
      + 64;
  LOBYTE(v41) = (v41 ^ 0x7B) + ((2 * v41) & 0xF7) - 2;
  *(_BYTE *)(v11 + v39) = v40 ^ ((v41 ^ 0xCF) + ((2 * v41) & 0x9F) - 72);
  v42 = 0xB % (v28 ^ 0x735FB7CAu);
  LOBYTE(v41) = (-111 * v42) ^ byte_18CF269B0[v42] ^ byte_18CF4EBE0[v42 + 1] ^ byte_18CF4CC30[v42 + 1];
  *(_BYTE *)(v11 + v42) = v41 ^ ((((((v41 ^ *(_BYTE *)(v11 + v42)) - 44) ^ 0x7F)
                                 + 2 * ((v41 ^ *(_BYTE *)(v11 + v42)) - 44)
                                 - 19) ^ 0xA1)
                               + ((2
                                 * ((((v41 ^ *(_BYTE *)(v11 + v42)) - 44) ^ 0x7F)
                                  + 2 * ((v41 ^ *(_BYTE *)(v11 + v42)) - 44)
                                  - 19)) & 0x42)
                               - 13);
  v43 = 0xC % (v28 ^ 0x735FB7CAu);
  v44 = (-111 * v43) ^ byte_18CF269B0[v43] ^ byte_18CF4EBE0[v43 + 1] ^ byte_18CF4CC30[v43 + 1];
  v45 = ((LODWORD(STACK[0x2A8]) - 17) ^ 0x5B)
      + ((2 * (LODWORD(STACK[0x2A8]) - 17)) & 0xFFFFFFBA ^ 0x4D)
      + (v44 ^ *(unsigned __int8 *)(v11 + v43))
      - 33;
  *(_BYTE *)(v11 + v43) = v44 ^ (((2 * v45) & 0xDF)
                               + (v45 ^ 0xEF)
                               + ((44 - (((2 * v45) & 0xDF) + (v45 ^ 0xEF))) | 0x89)
                               + ((((2 * v45) & 0xDF) + (v45 ^ 0xEF) + 83) | 0x89)
                               - 23);
  v46 = 0xD % (v28 ^ 0x735FB7CAu);
  LODWORD(v43) = (a6[v46] ^ *(unsigned __int8 *)(v11 + v46) ^ (11 * v46) ^ a2[v46] ^ a3[v46])
               + (LODWORD(STACK[0x294]) ^ 5);
  *(_BYTE *)(v11 + v46) = byte_18CF269B0[v46] ^ (-111 * v46) ^ byte_18CF4EBE0[v46 + 1] ^ byte_18CF4CC30[v46 + 1] ^ ((v43 ^ 0xFB) + ((2 * v43) & 0xF7) + 5);
  v47 = STACK[0x474];
  LODWORD(v46) = LODWORD(STACK[0x474]) ^ 0x735FB7CA;
  v48 = 0xE % v46;
  LOBYTE(v43) = (byte_18CF269B0[v48] ^ *(_BYTE *)(v11 + v48) ^ (-111 * v48) ^ byte_18CF4EBE0[v48 + 1] ^ byte_18CF4CC30[v48 + 1])
              + 42;
  *(_BYTE *)(v11 + v48) = byte_18CF26970[v48] ^ (-9 * v48) ^ byte_18CF29690[v48 + 4] ^ byte_18CF51830[v48] ^ ((((v43 ^ 0x7F) + 2 * v43 - 32) ^ 0x83) + 2 * (((v43 ^ 0x7F) + 2 * v43) & 3) + 30);
  v49 = 0xF % v46;
  v50 = (-9 * v49) ^ byte_18CF26970[v49] ^ byte_18CF29690[v49 + 4] ^ byte_18CF51830[v49];
  v51 = (v50 ^ *(_BYTE *)(v11 + v49)) - 75;
  *(_BYTE *)(v11 + v49) = v50 ^ (((2 * (((2 * v51) & 0x5E) + (v51 ^ 0xAF))) & 0xD4)
                               + ((((2 * v51) & 0x5E) + (v51 ^ 0xAF) + 96) ^ 0x6A)
                               + 71);
  v52 = 0x10 % v46;
  v53 = v9 + (a6[v52 & 0xF] ^ *(_BYTE *)(v11 + v52) ^ a2[v52 & 0xF] ^ a3[v52 & 0xF] ^ (11 * (v52 & 0xF))) - 21;
  *(_BYTE *)(v11 + v52) = byte_18CF26970[v52 & 0xF] ^ (-9 * (v52 & 0xF)) ^ byte_18CF29690[(v52 & 0xF) + 4] ^ byte_18CF51830[v52 & 0xF] ^ ((((v53 ^ 0x7F) + 2 * v53 - 34) ^ 0x8C) + ((2 * ((v53 ^ 0x7F) + 2 * v53) + 28) & 0x18) + 23);
  LODWORD(v52) = v47 ^ 0x735FB7CA;
  v54 = 0x11 % (v47 ^ 0x735FB7CAu);
  v55 = byte_18CF29690[(v54 & 0xF) + 4] ^ byte_18CF26970[v54 & 0xF];
  v56 = byte_18CF51830[v54 & 0xF];
  v57 = -9 * (v54 & 0xF);
  LOBYTE(v29) = (v55 ^ *(_BYTE *)(v11 + v54) ^ v56 ^ v57) + 35;
  *(_BYTE *)(v11 + v54) = v55 ^ v57 ^ v56 ^ ((v29 ^ 0x1E) + ((2 * v29) & 0x3C) - 30);
  v58 = 0x12 % v52;
  v59 = (a6[v58 & 0xF] ^ *(unsigned __int8 *)(v11 + v58) ^ a2[v58 & 0xF] ^ a3[v58 & 0xF] ^ (11 * (v58 & 0xF)))
      + (LODWORD(STACK[0x2C8]) ^ 0xD);
  *(_BYTE *)(v11 + v58) = byte_18CF26970[v58 & 0xF] ^ (-9 * (v58 & 0xF)) ^ byte_18CF29690[(v58 & 0xF) + 4] ^ byte_18CF51830[v58 & 0xF] ^ ((((v59 ^ 0x7E) + 4 * (v59 >> 1) - 40) ^ 8) + (~(2 * ((v59 ^ 0x7E) + 4 * (v59 >> 1))) & 0x10) - 94);
  v60 = 0x13 % v52;
  LODWORD(v58) = LODWORD(STACK[0x2D8])
               + (a6[v60 & 0xF] ^ *(unsigned __int8 *)(v11 + v60) ^ a2[v60 & 0xF] ^ a3[v60 & 0xF] ^ (11 * (v60 & 0xF)))
               - 121;
  *(_BYTE *)(v11 + v60) = byte_18CF26970[v60 & 0xF] ^ (-9 * (v60 & 0xF)) ^ byte_18CF29690[(v60 & 0xF) + 4] ^ byte_18CF51830[v60 & 0xF] ^ (((((2 * v58) & 0xDF) + (v58 ^ 0xEF) + 127) ^ 0x8C) + ((2 * (((2 * v58) & 0xDF) + (v58 ^ 0xEF)) + 30) & 0x18) + 6);
  LODWORD(v58) = STACK[0x474];
  LODWORD(v60) = LODWORD(STACK[0x474]) ^ 0x735FB7CA;
  v61 = 0x14 % v60;
  v62 = byte_18CF29690[(v61 & 0xF) + 4] ^ byte_18CF26970[v61 & 0xF] ^ (-9 * (v61 & 0xF)) ^ byte_18CF51830[v61 & 0xF];
  *(_BYTE *)(v11 + v61) = v62 ^ ((((v62 ^ *(_BYTE *)(v11 + v61)) - 64) ^ 0x7F)
                               + 2 * ((v62 ^ *(_BYTE *)(v11 + v61)) - 64)
                               - 127);
  v63 = 0x15 % v60;
  v64 = byte_18CF51830[v63 & 0xF];
  v65 = -9 * (v63 & 0xF);
  v66 = byte_18CF29690[(v63 & 0xF) + 4] ^ byte_18CF26970[v63 & 0xF];
  LOBYTE(v49) = (v66 ^ *(_BYTE *)(v11 + v63) ^ v64 ^ v65) - 26;
  *(_BYTE *)(v11 + v63) = v66 ^ v65 ^ v64 ^ (((((2 * v49) & 0xE3) + (v49 ^ 0x71) + 75) ^ 0x43)
                                           + ((2 * (((2 * v49) & 0xE3) + (v49 ^ 0x71)) - 106) & 0x87)
                                           + 1);
  v67 = 0x16 % v60;
  v68 = byte_18CF29690[(v67 & 0xF) + 4] ^ byte_18CF26970[v67 & 0xF] ^ (-9 * (v67 & 0xF)) ^ byte_18CF51830[v67 & 0xF];
  *(_BYTE *)(v11 + v67) = v68 ^ ((((v68 ^ *(_BYTE *)(v11 + v67)) - 95) ^ 0xBF)
                               + 2 * (((v68 ^ *(_BYTE *)(v11 + v67)) - 95) & 0x3F)
                               + 65);
  v69 = 0x17 % v60;
  v70 = (*((unsigned __int8 *)&unk_18CF26890 + (v69 & 0xF)) ^ *(unsigned __int8 *)(v11 + v69) ^ byte_18CF4BCE0[(v69 & 0xF) + 3] ^ (25 * (v69 & 0xF)) ^ byte_18CF4F810[(v69 & 0xF) + 2])
      + LODWORD(STACK[0x2B8]);
  *(_BYTE *)(v11 + v69) = byte_18CF26970[v69 & 0xF] ^ (-9 * (v69 & 0xF)) ^ byte_18CF29690[(v69 & 0xF) + 4] ^ byte_18CF51830[v69 & 0xF] ^ (((2 * v70) & 0xE7) + (v70 ^ 0x73) + ((65 - (((2 * v70) & 0xE7) + (v70 ^ 0x73))) | 0x1D) + ((((2 * v70) & 0xE7) + (v70 ^ 0x73) - 66) | 0x1D) + 113);
  v71 = 0x18 % (v58 ^ 0x735FB7CA);
  LOBYTE(v43) = (byte_18CF26970[v71 & 0xF] ^ *(_BYTE *)(v11 + v71) ^ byte_18CF29690[(v71 & 0xF) + 4] ^ byte_18CF51830[v71 & 0xF] ^ (-9 * (v71 & 0xF)))
              - 118;
  *(_BYTE *)(v11 + v71) = byte_18CF26990[v71 & 0xF] ^ (-37 * (v71 & 0xF)) ^ byte_18CF26930[v71 & 0xF] ^ byte_18CF26960[v71 & 0xF] ^ ((v43 ^ 0xF7) + ((2 * v43) & 0xEF) + 9);
  v72 = 0x19 % (v58 ^ 0x735FB7CA);
  v73 = byte_18CF26960[v72 & 0xF];
  LOBYTE(v71) = -37 * (v72 & 0xF);
  LOBYTE(v49) = byte_18CF26930[v72 & 0xF] ^ byte_18CF26990[v72 & 0xF];
  LOBYTE(v28) = (v49 ^ *(_BYTE *)(v11 + v72) ^ v73 ^ v71) - 125;
  *(_BYTE *)(v11 + v72) = v49 ^ v71 ^ v73 ^ ((v28 ^ 0xFD) + ((2 * v28) & 0xFB) + 3);
  v74 = 0x1A % (v58 ^ 0x735FB7CA);
  v75 = byte_18CF26960[v74 & 0xF];
  LOBYTE(v71) = -37 * (v74 & 0xF);
  LOBYTE(v49) = byte_18CF26930[v74 & 0xF] ^ byte_18CF26990[v74 & 0xF];
  LOBYTE(v28) = (v49 ^ *(_BYTE *)(v11 + v74) ^ v75 ^ v71) + 118;
  *(_BYTE *)(v11 + v74) = v49 ^ v71 ^ v75 ^ ((v28 ^ 0x5E) + ((2 * v28) & 0xBC) - 94);
  v76 = 0x1B % (v58 ^ 0x735FB7CA);
  v77 = byte_18CF26960[v76 & 0xF];
  LOBYTE(v71) = -37 * (v76 & 0xF);
  v78 = byte_18CF26930[v76 & 0xF] ^ byte_18CF26990[v76 & 0xF];
  LOBYTE(v28) = (v78 ^ *(_BYTE *)(v11 + v76) ^ v77 ^ v71) + 55;
  *(_BYTE *)(v11 + v76) = v78 ^ v71 ^ v77 ^ (((((2 * v28) & 0xF3) + (v28 ^ 0x79)) ^ 0xF8)
                                           + ((2 * (((2 * v28) & 0xF3) + (v28 ^ 0x79))) & 0xF0)
                                           - 113);
  LODWORD(v71) = STACK[0x474];
  v79 = LODWORD(STACK[0x474]) ^ 0x735FB7CA;
  v80 = 0x1C % v79;
  v81 = byte_18CF26960[v80 & 0xF];
  LOBYTE(v29) = -37 * (v80 & 0xF);
  v82 = byte_18CF26930[v80 & 0xF] ^ byte_18CF26990[v80 & 0xF];
  v83 = (v82 ^ *(_BYTE *)(v11 + v80) ^ v81 ^ v29) + 115;
  v84 = (v83 ^ 0xFD) + ((2 * v83) & 0xFB) + 87;
  *(_BYTE *)(v11 + v80) = v82 ^ v29 ^ v81 ^ ((v84 ^ 3) + 2 * (v84 & 3) - 87);
  v85 = 0x1D % v79;
  v86 = LODWORD(STACK[0x308])
      + (a6[v85 & 0xF] ^ *(_BYTE *)(v11 + v85) ^ a2[v85 & 0xF] ^ a3[v85 & 0xF] ^ (11 * (v85 & 0xF)))
      - 86;
  *(_BYTE *)(v11 + v85) = byte_18CF26990[v85 & 0xF] ^ (-37 * (v85 & 0xF)) ^ byte_18CF26930[v85 & 0xF] ^ byte_18CF26960[v85 & 0xF] ^ ((v86 ^ 0x3F) + 2 * (v86 & 0x3F) - 63);
  v87 = 0x1E % v79;
  v88 = byte_18CF26930[v87 & 0xF];
  v89 = (v88 ^ byte_18CF26990[v87 & 0xF] ^ (-37 * (v87 & 0xF)) ^ byte_18CF26960[v87 & 0xF] ^ *(_BYTE *)(v11 + v87)) + 81;
  *(_BYTE *)(v11 + v87) = v88 ^ byte_18CF26990[v87 & 0xF] ^ (-37 * (v87 & 0xF)) ^ byte_18CF26960[v87 & 0xF] ^ ((v89 ^ 0xE1) + ((2 * v89) & 0xC3) + 31);
  v90 = 0x1F % v79;
  v91 = (a6[v90 & 0xF] ^ *(unsigned __int8 *)(v11 + v90) ^ a2[v90 & 0xF] ^ a3[v90 & 0xF] ^ (11 * (v90 & 0xF)))
      + LODWORD(STACK[0x2D0]);
  *(_BYTE *)(v11 + v90) = byte_18CF26990[v90 & 0xF] ^ (-37 * (v90 & 0xF)) ^ byte_18CF26930[v90 & 0xF] ^ byte_18CF26960[v90 & 0xF] ^ ((v91 ^ 0x66) + ((2 * v91) & 0xCC) - 102);
  v92 = STACK[0x318];
  *(_BYTE *)(STACK[0x328] + 0 % (v71 ^ 0x735FB7CA)) ^= *(_BYTE *)STACK[0x340] ^ 0xE6;
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))qword_1E2538EC0[v6])(1897387887, v92, 476726722, 1897387887, 3696230153, 476726722, 598737143, -598737143);
}

uint64_t sub_18CB8EA04@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X5>, unsigned int a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = ((int)a2 - 476726722) % a4;
  *(_BYTE *)(v5 + v13) ^= *(_BYTE *)(a2 + a1 - 476726722) ^ *(_BYTE *)(v6 + (v13 & 0xF)) ^ *(_BYTE *)(v7 + (v13 & 0xF)) ^ (-37 * (v13 & 0xF)) ^ (89 * (v13 & 0xF)) ^ *(_BYTE *)(v8 + (v13 & 0xF)) ^ *(_BYTE *)(v10 + (v13 & 0xF)) ^ *(_BYTE *)((v13 & 0xF) + v11 + 3) ^ *(_BYTE *)(v12 + (v13 & 0xF)) ^ 0xE6;
  return (*(uint64_t (**)(void))(v9 + 8 * ((14 * (a2 + 1 != a3 + 64)) | v4)))();
}

uint64_t sub_18CB8EAB8@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + ((int)v1 - 1377818204) % a1) ^= *(_BYTE *)(v1 + v3 - 1377818204) ^ 0x18;
  return (*(uint64_t (**)(void))(v6 + 8 * (v2 ^ (4 * (v1 + 1 == v4 + 319)))))();
}

uint64_t sub_18CB8EB14@<X0>(int a1@<W0>, int a2@<W3>, unsigned int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  uint64_t (*v18)(void);

  v9 = (a2 - 1897387894) % a3;
  v10 = (a2 - 1897387924) % a3;
  v11 = *(unsigned __int8 *)(v8 + (v10 & 0xF));
  v12 = *(unsigned __int8 *)(v6 + (v10 & 0xF)) ^ *(unsigned __int8 *)(v4 + v10) ^ *(unsigned __int8 *)((v10 & 0xF) + v7 + 3);
  HIDWORD(v13) = *(unsigned __int8 *)(v6 + (v9 & 0xF)) ^ *(unsigned __int8 *)(v4 + v9) ^ *(unsigned __int8 *)((v9 & 0xF) + v7 + 3) ^ *(unsigned __int8 *)(v8 + (v9 & 0xF)) ^ (89 * (v9 & 0xF));
  LODWORD(v13) = HIDWORD(v13) << 24;
  LODWORD(v9) = v13 >> 31;
  HIDWORD(v13) = v12 ^ v10 ^ v11;
  LODWORD(v13) = (v12 ^ (89 * (((a2 - 1897387924) % a3) & 0xF)) ^ v11) << 24;
  v14 = (a2 - 1897388064) % a3;
  v15 = *(unsigned __int8 *)(v8 + (v14 & 0xF));
  v16 = *(unsigned __int8 *)(v6 + (v14 & 0xF)) ^ *(unsigned __int8 *)(v4 + v14) ^ *(unsigned __int8 *)((v14 & 0xF) + v7 + 3);
  v17 = (v13 >> 26) - ((2 * (v13 >> 26)) & 0x84);
  HIDWORD(v13) = v16 ^ v14 ^ v15;
  LODWORD(v13) = (v16 ^ (89 * (((a2 - 1897388064) % a3) & 0xF)) ^ v15) << 24;
  v18 = *(uint64_t (**)(void))(v5 + 8 * ((1215 * (a2 + 1 == a1 + 256)) ^ v3));
  *(_BYTE *)(v4 + (a2 - 1897387887) % a3) ^= (v9 - (((_BYTE)v9 << (((v3 - 125) & 0xAF) + 90)) & 0xC6) - 29) ^ (v17 + 66) ^ ((v13 >> 27) - ((2 * (v13 >> 27)) & 0xDF) - 17) ^ 0x4E;
  return v18();
}

uint64_t sub_18CB8EC94(double a1, double a2, double a3, double a4, double a5, double a6, double a7, __n128 a8)
{
  int v8;
  int v9;
  unint64_t v10;
  int v11;
  _QWORD *v12;
  int v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  int v17;

  v9 = 8 * (v8 ^ 0x1A2);
  v10 = STACK[0x3F0];
  LODWORD(STACK[0x2E8]) = STACK[0x474];
  v11 = (v9 - 34) | 0x200;
  STACK[0x3F0] = v10 - 448;
  v12 = (_QWORD *)STACK[0x330];
  v12[74] = 0x9C29E977165AD0EBLL;
  v12[75] = 0xC1AE29E94926A161;
  v12[76] = 0x3E51D616B6D95E9ELL;
  *(_QWORD *)((char *)v12 + 620) = 0x5A382E206A757CBELL;
  STACK[0x398] = qword_1E2538EC0[v9];
  v13 = STACK[0x2E0];
  LODWORD(STACK[0x340]) = LODWORD(STACK[0x2E0]) - 1592160998;
  STACK[0x310] = STACK[0x338] + STACK[0x320];
  LODWORD(STACK[0x2A0]) = v13 + 1126403181;
  LODWORD(STACK[0x2A8]) = v13 - 1079687069;
  LODWORD(STACK[0x308]) = v13 - 1079687651 + v11;
  LODWORD(v12) = STACK[0x34C];
  LODWORD(STACK[0x318]) = 67 * (LODWORD(STACK[0x34C]) ^ 0x6A0);
  v14.n128_u64[0] = 0x3E3E3E3E3E3E3E3ELL;
  v14.n128_u64[1] = 0x3E3E3E3E3E3E3E3ELL;
  v15.n128_u64[0] = 0x1F1F1F1F1F1F1F1FLL;
  v15.n128_u64[1] = 0x1F1F1F1F1F1F1F1FLL;
  LODWORD(STACK[0x29C]) = (_DWORD)v12 - 521074685;
  LODWORD(STACK[0x298]) = (_DWORD)v12 + 1269915979;
  LODWORD(STACK[0x294]) = (_DWORD)v12 + 1004475373;
  v16.n128_u64[0] = 0x5B5B5B5B5B5B5B5BLL;
  v16.n128_u64[1] = 0x5B5B5B5B5B5B5B5BLL;
  a8.n128_u16[0] = 23387;
  a8.n128_u8[2] = 91;
  a8.n128_u8[3] = 91;
  a8.n128_u8[4] = 91;
  a8.n128_u8[5] = 91;
  a8.n128_u8[6] = 91;
  a8.n128_u8[7] = 91;
  LODWORD(STACK[0x338]) = -512473929;
  STACK[0x3B8] = STACK[0x300];
  v17 = STACK[0x2E8];
  LODWORD(STACK[0x454]) = STACK[0x2E8];
  STACK[0x3D8] = STACK[0x328];
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(qword_1E2538EC0[(22 * ((v17 ^ 0xCB04835) - 2146435135 + ((2 * (v17 ^ 0x735FB7CA)) & 0xFFDFFFFF) < 0xFFFFFFC0)) ^ v11]
                                                                                                 - 4))((__n128)xmmword_18CF26850, v14, v15, (__n128)xmmword_18CF26830, (__n128)xmmword_18CF0E650, (__n128)xmmword_18CF0E660, v16, a8);
}

uint64_t sub_18CB8EF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  v9 = a7 + 854;
  v10 = v8 - 1814019223;
  if ((v10 + 1) > 0x40)
    v11 = v10 + 1;
  else
    v11 = 64;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))qword_1E2538EC0[(43
                                                                                              * (-(int)a1
                                                                                               - v7
                                                                                               + (((v9 - 1050) | 0x21) ^ 0x6C1FBDF5u)
                                                                                               + v11 > 0xE)) ^ v9])(a1, a2, 2131970610, 3152738156, 17);
}

uint64_t sub_18CB8F00C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;

  v10 = 32 * (a7 ^ 0x54D);
  v11 = a1 + v7 - 1814019223;
  if ((v11 + 1) > 0x40)
    v12 = v11 + 1;
  else
    v12 = 64;
  v13 = v8 + ((v10 + 334835166) & 0xEC0AD55D ^ 0x6C1FB9CA) + v12;
  v14 = __CFADD__(v11, v13);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8
                                             * (((2 * ((v13 < 0x10) & ~v14)) | (((v13 < 0x10) & ~v14) << 7)) ^ v10))
                            - 4))();
}

uint64_t sub_18CB8F0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  unint64_t v17;
  char v18;

  v13 = (char *)&STACK[0x4D0] + STACK[0x2B0] + v7 - 0x7BB775407D70C692;
  v14 = (unint64_t)&v13[-v10];
  v15 = (unint64_t)&v13[-v10] < 0x10;
  v16 = (unint64_t)&v13[-v11 - 5];
  if (v16 < 0x10)
    v15 = 1;
  v17 = (unint64_t)&v13[-v12];
  if ((unint64_t)&v13[-v12] < 0x10)
    v15 = 1;
  v18 = (unint64_t)&v13[-v8] < ((a7 + 960786083) & 0xC6BB8D63 ^ 0x173uLL) || v15;
  if (v14 < (((a7 - 1112) | 0x13u) ^ 0x107uLL))
    v18 = 1;
  if (v16 < 0x10)
    v18 = 1;
  if (v17 < 0x10)
    v18 = 1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((918 * ((v18 & 1) == 0)) ^ a7)))();
}

uint64_t sub_18CB8F17C(int8x16_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  unsigned int v6;
  int v7;

  *(int8x16_t *)(STACK[0x300] + (v7 + a5)) = veorq_s8(*(int8x16_t *)STACK[0x328], a1);
  return ((uint64_t (*)(void))(qword_1E2538EC0[(487
                                             * (((((v6 ^ 0x1FFFFFEE7) & (v5 + 1)) == 16) ^ ((v6 ^ 0xE7) - 1)) & 1)) ^ v6 ^ 0x1E7]
                            - 12))();
}

void sub_18CB8F1F8()
{
  JUMPOUT(0x18CB8F1ACLL);
}

uint64_t sub_18CB8F200()
{
  int v0;
  unsigned int v1;

  return ((uint64_t (*)(void))qword_1E2538EC0[(113
                                            * (((v0 + 5) ^ (((v0 + 694650660) & 0xD698762F) - 1028 < v1)) & 1)) ^ (v0 - 1277)])();
}

uint64_t sub_18CB91864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;
  unsigned int v9;

  v9 = (*(_DWORD *)(a7 + 68) ^ 0x9C29E977)
     + v8
     - 1674974857
     - ((((*(_DWORD *)(a7 + 68) ^ 0x9C29E977) + v8) << ((v7 - 5) ^ 0xB1)) & 0x3853D2EE);
  *(_DWORD *)(a7 + 68) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((1960 * ((v9 ^ 0x9C29E977) < v8)) ^ v7)) - 8))();
}

uint64_t sub_18CB918C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  *(_DWORD *)(a7 + 64) = v7 + *(_DWORD *)(a7 + 64) - 180;
  return ((uint64_t (*)(void))STACK[0x398])();
}

void sub_18CB918DC()
{
  STACK[0x408] = qword_1E2538EC0[LODWORD(STACK[0x34C]) - 1678] + (LODWORD(STACK[0x34C]) - 1684) - 36;
  JUMPOUT(0x18CB91D5CLL);
}

uint64_t sub_18CB9190C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  unsigned int v7;

  v7 = v4 + 2131969564 - v6 + v5 + 18;
  LODWORD(STACK[0x2B8]) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((399 * (v7 >= ((v5 - 669813782) & 0x27EC8BF5 ^ 0x3ECu))) ^ v5))
                            - 8))();
}

uint64_t sub_18CB91978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  char v11;
  unsigned int v12;
  _BOOL4 v15;

  v12 = v9 + 2131969564 + a8 + 1045;
  v15 = v12 > 0xF || ((2 * (v8 ^ 0xEF) - v11 + 11) & 0xFu) < (v12 & 0xF) || 1142229139 - v10 < v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * ((v15 * (((v8 - 979) | 0x206) + 1481)) ^ v8)) - 8))();
}

uint64_t sub_18CB919F0(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v22;

  v13 = (v8 + v11) + a7;
  v14 = v13 - a1 - a5;
  v15 = (v12 + 14) & 0xF;
  v16 = v13 - (v9 + v15);
  v17 = v13 - ((_QWORD)&unk_18CF4CF70 + v15) - 5;
  v18 = v13 - (v10 + v15);
  v22 = v16 < 0x10 || v14 < 0x10 || v17 < 0x10 || v18 < 0x10;
  return ((uint64_t (*)(void))qword_1E2538EC0[(1800 * ((v22 ^ (v7 - 16)) & 1)) ^ v7])();
}

uint64_t sub_18CB91A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return (*(uint64_t (**)(_QWORD))(a4
                                           + 8
                                           * (((LODWORD(STACK[0x2B8]) >= ((v4 + 1073) ^ 0x658u)) * ((v4 - 207) ^ 0x16A)) ^ (v4 - 266))))(0);
}

uint64_t sub_18CB91AB8(double a1, double a2, int8x16_t a3, double a4, int8x16_t a5, double a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  int8x16x4_t v22;

  v17 = (v14 - 584) | 0x245;
  v18 = STACK[0x2B8] & 0xFFFFFFF0;
  LODWORD(STACK[0x2D0]) = v16 + 9;
  LODWORD(STACK[0x2C8]) = v16 + 10;
  LODWORD(STACK[0x288]) = v16 + 11;
  LODWORD(STACK[0x28C]) = v16 + 12;
  LODWORD(STACK[0x290]) = v16 + 13;
  STACK[0x328] = (v16 + 3) & 0xF;
  STACK[0x2E8] = (v16 + 4) & 0xF;
  STACK[0x2E0] = (v16 + 7) & 0xF;
  STACK[0x2D8] = ((_BYTE)v16 + 8) & 0xF;
  STACK[0x2D0] = STACK[0x2D0] & 0xF;
  STACK[0x2C8] = STACK[0x2C8] & 0xF;
  v22.val[0].i64[0] = ((_BYTE)v16 - 50) & 0xF;
  v22.val[0].i64[1] = ((_BYTE)v16 - 1) & 0xF;
  v22.val[1].i64[0] = v16 & 0xF;
  v22.val[1].i64[1] = ((_BYTE)v16 + 1) & 0xF;
  v22.val[2].i64[0] = ((v17 ^ 7) + v16) & 0xF;
  v22.val[2].i64[1] = STACK[0x328];
  v22.val[3].i64[0] = STACK[0x2E8];
  v22.val[3].i64[1] = ((_BYTE)v16 + 5) & 0xF;
  v22.val[0].i64[0] = vqtbl4q_s8(v22, a5).u64[0];
  v22.val[1].i64[0] = ((_BYTE)v16 + 6) & 0xF;
  v22.val[1].i64[1] = STACK[0x2E0];
  v22.val[2].i64[0] = STACK[0x2D8];
  v22.val[2].i64[1] = STACK[0x2D0];
  v22.val[3].i64[0] = STACK[0x2C8];
  v22.val[3].i64[1] = STACK[0x288] & 0xF;
  v19 = STACK[0x28C] & 0xF;
  v20 = STACK[0x290] & 0xF;
  v22.val[0].i64[1] = vqtbl4q_s8(*(int8x16x4_t *)((char *)&v22 + 16), a5).u64[0];
  *(int8x16_t *)(a14 + (v15 - 1142229140)) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a12 + (v16 - 2131970610)), *(int8x16_t *)((char *)&unk_18CF268F0+ (((_BYTE)v16 - 50) & 0xF))), veorq_s8(*(int8x16_t *)((char *)&unk_18CF4CF70+ ((v16 - 50) & 0xF)+ 5), *(int8x16_t *)((char *)&unk_18CF2EDD0+ (((_BYTE)v16 - 50) & 0xF)))), a3), vmulq_s8(v22.val[0], a7));
  return ((uint64_t (*)(void))(qword_1E2538EC0[(13 * ((((v17 - 537) | 0xD1) ^ 0x4ED) != v18)) ^ v17] - 8))();
}

void sub_18CB91C9C()
{
  STACK[0x398] = qword_1E2538EC0[LODWORD(STACK[0x34C]) - 1679];
  STACK[0x328] = (unint64_t)&unk_18CF2DC94;
  JUMPOUT(0x18CB8EE70);
}

void sub_18CB91CD0()
{
  STACK[0x408] = (STACK[0x294] & 0xC420E57E ^ 0xFFFFFFFFFFFFFFE4) + qword_1E2538EC0[LODWORD(STACK[0x34C]) - 1701];
  JUMPOUT(0x18CB91D5CLL);
}

uint64_t sub_18CB91DF8(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * (((a1 + 254 + ((a1 - 253) | 0x10) + 1247) * ((v4 + 1713) < 0x40)) ^ a1))
                            - 4))();
}

uint64_t sub_18CB91E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;

  return (*(uint64_t (**)(uint64_t))(a4
                                            + 8 * ((30 * ((((v4 + 1177) | 0x10) ^ 0x6FBFFCCDu) - (v6 + v7) > 6)) ^ v4)))(v5);
}

uint64_t sub_18CB91E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X6>, unsigned int a4@<W8>)
{
  char v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(a3 + ((14 * (v6 ^ a4) + v7) & (a1 + v8))) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((((a1 + 1 + v8) < 0x40) * v5) ^ (v6 - 1447))) - 4))();
}

void sub_18CB91EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  STACK[0x438] = *(_QWORD *)(a4 + 8 * a8) + ((a8 + 1235676963) & 0xB65911E6) - 306;
  JUMPOUT(0x18CB922C8);
}

uint64_t sub_18CB922FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((104
                                * (((v4 + 2098388939) & 0x82ED19A6 ^ 0x81ABCE7E ^ (v4 + 258686807) & 0xF094B9FD)
                                 + 2119446951 < 0x10)) ^ (v4 - 369))))();
}

void sub_18CB92380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char v8;
  uint64_t v9;

  *(_BYTE *)(a7 + a1) ^= *(_BYTE *)(v9 + a1) ^ ((v8 ^ a8) + 74);
  JUMPOUT(0x18CB92344);
}

void sub_18CB923A4(double a1, double a2, double a3, int8x16_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int8x16_t *a11)
{
  uint64_t v11;
  _DWORD *v12;

  *a11 = veorq_s8(*a11, a4);
  v12 = (_DWORD *)STACK[0x330];
  v12[156] = 1513631264;
  v12[149] = -1674974857;
  v12[148] = 375050475;
  v12[150] = 1227268449;
  v12[151] = -1045550615;
  v12[152] = -1227268450;
  v12[153] = 1045550614;
  v12[155] = 1786084542;
  STACK[0x398] = (v11 + 558) + *(_QWORD *)(a8 + 8 * v11) - 571;
  JUMPOUT(0x18CB92430);
}

uint64_t sub_18CB92438(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return ((uint64_t (*)(void))(qword_1E2538EC0[(((a8 - 1008) ^ 0xEB) * (LODWORD(STACK[0x2B8]) != a1)) ^ a8] - 12))();
}

uint64_t sub_18CB924A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((794
                                * ((STACK[0x2B8] & 8) == ((((v4 + 171436225) & 0xF5C81779) + 718) ^ (523 * (v4 ^ 0x10F))))) ^ v4)))();
}

uint64_t sub_18CB92508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v7;
  char v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;

  v18 = v10 - 596;
  v19 = v9 + 1;
  v20 = (v9 + v16);
  *(_BYTE *)(a7 + (v17 + v15)) = *(_BYTE *)(a5 + v20) ^ *(_BYTE *)(v13 + (v20 & 0xF)) ^ byte_18CF4CF70[(v20 & 0xF) + 5] ^ *(_BYTE *)(v14 + (v20 & 0xF)) ^ ((v20 & 0xF) * (((v18 + v7) & v8) - 90)) ^ 0x1F;
  return (*(uint64_t (**)(void))(a4 + 8 * (((v19 + v16 < v12) * v11) ^ v18)))();
}

void sub_18CB9257C()
{
  JUMPOUT(0x18CB9250CLL);
}

uint64_t sub_18CB92588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  unint64_t v5;

  v5 = (*(unsigned int *)(STACK[0x390] + 92) | ((unint64_t)(*(_DWORD *)(STACK[0x390] + 92) < 0x6A757CAEu) << 32))
     + 425909497;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((826
                                          * ((((v4 + 610540048 + 67 * (v4 ^ 0x6B3)) ^ (((v5
                                                                                       - (v4 - 2082974985)) | ((v4 - 2082974985) - v5)) >> 63)) & 1) == 0)) ^ (v4 - 295)))
                            - 12))();
}

uint64_t sub_18CB92618@<X0>(unint64_t a1@<X8>)
{
  int v1;
  int v2;
  _BOOL4 v3;

  v3 = a1 < 0x83D859A7;
  *(_BYTE *)(STACK[0x428] - 0x57F7A3E501E5FAB3) = *(_BYTE *)STACK[0x380] ^ 0x99;
  if (a1 >= 0x83D859A7)
    v3 = a1 > 0x83D859A8;
  return ((uint64_t (*)(unint64_t, uint64_t, unint64_t))(qword_1E2538EC0[(42 * v3) ^ ((v1 | 0xA1100) - 611200055)]
                                                                              - 12))(0xC6882A920996AE25, ((((v1 | 0xA1100) - 611200055) ^ 0x58Au) * v2) ^ 0xC8, 0xF2096CF42D57B6A7);
}

void sub_18CB92764()
{
  JUMPOUT(0x18CB926D8);
}

uint64_t sub_18CB92774()
{
  int v0;
  void *v1;
  void *v2;
  BOOL v3;
  int v4;

  STACK[0x3F0] -= 32;
  STACK[0x4B0] = (unint64_t)&STACK[0x538];
  LODWORD(STACK[0x300]) = v0 ^ 0x410;
  STACK[0x4B8] = STACK[0x2F0];
  STACK[0x498] = (unint64_t)&STACK[0x538];
  STACK[0x2A0] = (unint64_t)&STACK[0x538];
  STACK[0x4A8] = (unint64_t)&STACK[0x538];
  STACK[0x4C0] = 0;
  v1 = malloc(0x404uLL);
  STACK[0x4C0] = (unint64_t)v1;
  v2 = malloc(0x408uLL);
  STACK[0x4A0] = (unint64_t)v2;
  if (v1)
    v3 = v2 == 0;
  else
    v3 = 1;
  v4 = !v3;
  return ((uint64_t (*)(void))(qword_1E2538EC0[(v4 * (((v0 ^ 0x410) - 712) ^ 0x206)) ^ v0] - 8))();
}

#error "18CB99C28: call analysis failed (funcsize=5886)"

uint64_t sub_18CB99CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,int a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  int a66;
  int a69;
  int a70;
  char a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  int a79;
  uint64_t v79;
  unsigned int v80;
  int v82;
  int v83;
  int v84;
  BOOL v86;
  int v87;
  int v88;
  int v90;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v105;
  int v106;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v125;
  uint64_t v126;

  if ((a63 & 0x100000000) != 0)
    a43 = STACK[0x228];
  if ((a63 & 0x100000000) != 0)
    v82 = STACK[0x320];
  else
    v82 = STACK[0x288];
  v83 = a50;
  if ((a63 & 0x100000000) != 0)
  {
    v84 = a44;
  }
  else
  {
    v83 = a48;
    v84 = HIDWORD(a47);
  }
  if ((a63 & 0x100000000) != 0)
    a45 = a46;
  v86 = LODWORD(STACK[0x328]) == -315061333;
  v87 = STACK[0x224];
  if (LODWORD(STACK[0x328]) != -315061333)
    v87 = STACK[0x220];
  LODWORD(a37) = v87;
  v88 = STACK[0x218];
  if (LODWORD(STACK[0x328]) != -315061333)
    v88 = STACK[0x214];
  LODWORD(STACK[0x228]) = v88;
  if (v86)
    a77 = a76;
  LODWORD(STACK[0x220]) = a77;
  if (v86)
    v90 = v83;
  else
    v90 = a54;
  LODWORD(STACK[0x224]) = v90;
  if (v86)
    a75 = a74;
  LODWORD(a38) = a75;
  v92 = HIDWORD(a40) ^ a78 ^ 0x7E3C5639;
  HIDWORD(a40) = v82;
  if (v86)
    v93 = a43;
  else
    v93 = v82;
  LODWORD(a54) = v93;
  LODWORD(STACK[0x218]) = v84;
  HIDWORD(v126) = a45;
  if (v86)
    v94 = v84;
  else
    v94 = a45;
  LODWORD(STACK[0x288]) = v94;
  if ((a72 & 1) != 0)
    v95 = a30;
  else
    v95 = v92;
  if ((a72 & 1) != 0)
    v96 = v92;
  else
    v96 = HIDWORD(a29);
  if ((a72 & 1) != 0)
    v97 = a40;
  else
    v97 = a36;
  v98 = HIDWORD(a35);
  if ((a72 & 1) == 0)
    v98 = a35;
  v99 = a34;
  if ((a72 & 1) == 0)
    v99 = HIDWORD(a31);
  v100 = HIDWORD(a33);
  if ((a72 & 1) == 0)
    v100 = a33;
  LODWORD(STACK[0x350]) = v100;
  v101 = HIDWORD(a30);
  if ((a72 & 1) != 0)
    v101 = HIDWORD(a32);
  HIDWORD(a35) = v97;
  LODWORD(a36) = v95;
  if ((STACK[0x2E8] & 2) == 0)
    a70 = v95;
  LODWORD(a50) = a70;
  LODWORD(a40) = v96;
  if ((STACK[0x2E8] & 2) != 0)
    a73 = v96;
  LODWORD(a61) = a73;
  if ((STACK[0x2E8] & 2) == 0)
    a69 = v97;
  LODWORD(a48) = a69;
  if ((STACK[0x2E8] & 2) != 0)
    v105 = v98;
  else
    v105 = v99;
  HIDWORD(a47) = v105;
  if ((STACK[0x2E8] & 2) != 0)
    v98 = v99;
  LODWORD(v126) = v98;
  v106 = a32;
  if ((STACK[0x2E8] & 2) == 0)
    v106 = a31;
  HIDWORD(v125) = v106;
  if ((STACK[0x2E8] & 2) == 0)
    a79 = v101;
  LODWORD(v125) = a79;
  v108 = v80 - 318500354 + ((unint64_t)(v80 < (((_DWORD)a1 - 53) ^ 0x12FBEC06u)) << 32);
  v109 = *(_QWORD *)(STACK[0x498] + 8 * v108);
  v110 = 0x5F3D51B5D321F3ADLL * v109 - ((0x3E7AA36BA643E75ALL * v109) & 0x7F2CCEF1F7D4266ELL) - 0x406998870415ECC9;
  *(_QWORD *)(STACK[0x4A8] + 8 * v108) = v109 ^ 0xAEAEAEAEAEAEAEAELL;
  v111 = ((2 * ((v79 ^ 0xAC28D8CDA4789D88 ^ v110) + v108)) & 0xD7FFF3BF7DB5E7FELL)
       + (((v79 ^ 0xAC28D8CDA4789D88 ^ v110) + v108) ^ 0x6BFFF9DFBEDAF3FFLL);
  v112 = v111
       + (((v111 - 0x6BFFF9DFBEDAF3FFLL) >> 32) ^ 0x81EAA302159391D4)
       - (((v111 - 0x6BFFF9DFBEDAF3FFLL) >> 31) & 0x1D4D8DC56);
  v113 = v112
       + (((v112 + 0x1215631E2B917A2DLL) >> 16) ^ 0x5B189CEF5A66B6BFLL)
       + (((v112 + 0x1215631E2B917A2DLL) >> 15) & 0x139DEB4CD6D7ELL);
  v114 = v113
       + (((v113 - 0x490339D12ED53C92) >> 8) ^ 0x288141300F008084)
       - (((v113 - 0x490339D12ED53C92) >> 7) & 0xFD7D9FE1FEFEF6)
       + 2;
  v115 = v114 - ((2 * v114 - 0x750278EF9872A0B0) & 0xF9E2A80AEB166326) - 0x3D8FE87256AE1EC5;
  v116 = ((2 * ((v110 ^ 0xC367337D8E6122A4 ^ v115) + v108)) & 0xFF4A5FEF95F9B67ELL)
       + (((v110 ^ 0xC367337D8E6122A4 ^ v115) + v108) ^ 0xFFA52FF7CAFCDB3FLL);
  v117 = v116
       + (((v116 + 0x5AD008350324C1) >> 32) ^ 0x2A110412890103B2)
       - (((v116 + 0x5AD008350324C1) >> 31) & 0xEDFDF89A);
  v118 = v117
       + (((v117 - 0x29B6340A53FDDEF1) >> 16) ^ 0x7E9DFF3BA6BDBFFFLL)
       + (((v117 - 0x29B6340A53FDDEF1) >> 15) & 0x1FE774D7B7FFELL);
  v119 = v118
       + (((v118 + 0x57ABCCBA05446110) >> 8) ^ 0x11012A1162280000)
       - (((v118 + 0x57ABCCBA05446110) >> 7) & 0x1FDABDD3BAFFFFELL)
       + 2;
  v120 = v119 - ((2 * v119 + 0x1B5BC26429719B9CLL) & 0x1EE642CF0D2CE346) - 0x72DEFD6664B0C08FLL;
  v121 = ((2 * ((v110 ^ 0x30E5461F7D7C6294 ^ v120) + v108)) & 0xAECFD17FFFEEFBEELL)
       + (((v110 ^ 0x30E5461F7D7C6294 ^ v120) + v108) ^ 0xD767E8BFFFF77DF7);
  v122 = v121
       + (((v121 + 0x2898174000088209) >> 32) ^ 0x6056008DC888218)
       - (((v121 + 0x2898174000088209) >> 31) & 0x46EEFBCE);
  v123 = v122
       + (((v122 + 0x2292B737237FFFF1) >> 16) ^ 0xFFB9ABBDFD5B473FLL)
       + (((v122 + 0x2292B737237FFFF1) >> 15) & 0x1577BFAB68E7ELL);
  HIDWORD(a52) = a66 ^ 0xD87DBFDF;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(int)((1939 * (v80 - 318500353 > 1)) ^ a1)] - 8))(a1, 318500354, 0x17CEE5F7EDBFAF0, 3688890070, 364670442, v123+ (((v123 + 0x22D90B792624B8B2) >> 8) ^ 0x104188D040920287)- (((v123 + 0x22D90B792624B8B2) >> 7) & 0x17CEE5F7EDBFAF0)+ 2, 1975353146, 2243753618, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           v125,
           v126,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

void sub_18CB9A53C()
{
  JUMPOUT(0x18CB99F34);
}

uint64_t sub_18CB9A54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43,uint64_t a44,int a45,int a46,int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;
  int v69;
  int v70;
  int v71;
  int v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  int v112;
  int v113;
  int v114;
  unint64_t v115;
  uint64_t v116;
  int v117;
  char v118;
  char v119;
  BOOL v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;

  v73 = (((unint64_t)(a6 - 0x799035B1F46D5CC5) >> 29) & 0x25F9FFBFELL)
      + a6
      + ((v72 - 80) ^ ((unint64_t)(a6 - 0x799035B1F46D5CC5) >> 30) ^ 0x1CBF3F792FCFFC4BLL);
  v74 = (((v73 + 0x69B08AD4DBC2A53CLL) >> 12) ^ 0x9F3FDFC7FB9B3D47)
      + v73
      + (((v73 + 0x69B08AD4DBC2A53CLL) >> 11) & 0x1FBF8FF7367A8ELL);
  v75 = v74
      + (((v74 - 0x358F54F31FD8980BLL) >> 7) ^ 0x9028040100800A2)
      - (((v74 - 0x358F54F31FD8980BLL) >> 6) & 0x1FAFF7FDFEFFEBALL)
      + 1;
  v76 = v75 - ((2 * v75 - 0x7D23AA665FC1315CLL) & 0xB994C7432146485CLL) - 0x61C771919F3D7480;
  v77 = ((2 * ((v76 ^ 0xDCCA63A190A3242ELL) + 0x288AB139EA2E5744)) & 0xE7FF5757FC7C7DDALL)
      + (((v76 ^ 0xDCCA63A190A3242ELL) + 0x288AB139EA2E5744) ^ 0xF3FFABABFE3E3EEDLL);
  v78 = v77
      + (((v77 + 0xC00545401C1C113) >> 24) ^ 0x90840C1102002293)
      - (((v77 + 0xC00545401C1C113) >> 23) & 0x1DDFBFFBAD8);
  v79 = v78
      + (((v78 + 0x7B7C4842FFC19E80) >> 13) ^ 0x3758017820281821)
      - (((v78 + 0x7B7C4842FFC19E80) >> 12) & 0xFFD0FBFAFCFBCLL);
  v80 = v79
      + (((v79 + 0x442446CADF99865FLL) >> 5) ^ 0x10287908AC2000)
      - (((v79 + 0x442446CADF99865FLL) >> 4) & 0xFDFAF0DEEA7BFFELL)
      + 3;
  v81 = v80 - ((2 * v80 + 0x8283CA3ADDACCB8) & 0x25D9AD49E1AA794ELL) - 0x28FF0B09383D5CFDLL;
  v82 = (v81 ^ 0xBAFDD8F5F3752987)
      + ((v81 >> 31) ^ 0x101244053DFB11CBLL)
      + ((v81 >> 30) & 0x36FFEBFBELL ^ 0xFFFFFFFD9409DC69)
      - 0x101244044800A01FLL;
  v83 = (((((2 * v82) & 0xF37BEABB76FFFBFCLL) + (v82 ^ 0xF9BDF55DBB7FFDFELL) + 0x6420AA244800202) >> 11) ^ 0xEEBCEFF7F50F915DLL)
      + ((2 * v82) & 0xF37BEABB76FFFBFCLL)
      + (v82 ^ 0xF9BDF55DBB7FFDFELL)
      + (((((2 * v82) & 0xF37BEABB76FFFBFCLL) + (v82 ^ 0xF9BDF55DBB7FFDFELL) + 0x6420AA244800202) >> 10) & 0x39DFEFEA1F22BALL);
  v84 = (((v83 + 0x17851AAA4F7070A5) >> 4) ^ 0x7FFB3BA2F7E86FFFLL)
      + v83
      + (((v83 + 0x17851AAA4F7070A5) >> 3) & 0x1FF67745EFD0DFFELL);
  v85 = v84 - 0x6805E993C067D362 + (~(2 * v84 + 0x13BE0EAF10014CLL) | 0xFF1F91362FDFA811);
  v86 = ((2 * ((v85 ^ 0x703764E8102BF7) + 0x1E4A8A832E7300A6)) & 0xFFFFFDBFF67FBEAELL)
      + (((v85 ^ 0x703764E8102BF7) + 0x1E4A8A832E7300A6) ^ 0xFFFFFEDFFB3FDF57);
  v87 = v86
      + (((v86 + 0x12004C020A9) >> 30) ^ 0x44008C0CEA028C11)
      - (((v86 + 0x12004C020A9) >> 29) & 0x62BFAE7DCLL);
  v88 = v87
      + (((v87 - 0x44008AECE5426B68) >> 15) ^ 0x3938FAFF87F3BF9ELL)
      + (((v87 - 0x44008AECE5426B68) >> 14) & 0x1F5FF0FE77F3CLL);
  v89 = v88
      + (((v88 - 0x7D3985EC6D362B06) >> 8) ^ 0xFFB5E77BEFB75DF7)
      + (((v88 - 0x7D3985EC6D362B06) >> 7) & 0x16BCEF7DF6EBBEELL)
      + 1;
  v90 = v89 - ((2 * v89 + 0x621252F4624EE04) & 0xD460B24072623150) - 0x12BF144823BC7056;
  v91 = ((2 * ((v90 ^ 0x6A305920393118A8) + 0x2C1E97BC5C429E81)) & 0xF2FDEFBF2E4FF3FCLL)
      + (((v90 ^ 0x6A305920393118A8) + 0x2C1E97BC5C429E81) ^ 0x797EF7DF9727F9FELL);
  v92 = (((v91 - 0x797EF7DF9727F9FELL) >> 27) ^ 0xFFDB7CF077FEBF48)
      + v91
      + (((v91 - 0x797EF7DF9727F9FELL) >> 26) & 0x20EFFD7E90);
  v93 = (((v92 - 0x795A74D00F26B946) >> 15) ^ 0x777F37F75DABEDEBLL)
      + v92
      + (((v92 - 0x795A74D00F26B946) >> 14) & 0x26FEEBB57DBD6);
  v94 = (((v93 + 0xF265338932D58CFLL) >> 8) ^ 0xF2D43FFAFD7FD63BLL)
      + v93
      + (((v93 + 0xF265338932D58CFLL) >> 7) & 0x1A87FF5FAFFAC76);
  v95 = v94 - ((2 * v94 + 0x38A4267B2B5B0528) & 0x220468122728BA24) + 0x2D544746A941DFA6;
  v96 = (v95 ^ 0x8D13B1AEBFEB8D82)
      + ((v95 >> 30) ^ 0x7D5FF5FDC9B9F95DLL)
      + ((v95 >> 29) & 0x7FBEE7FCELL ^ 0x4688C0D44)
      - 0x7D5FF5FFFDF73FE7;
  v97 = (((((2 * v96) & 0xD65EF7AFFEFF96C0) + (v96 ^ 0xEB2F7BD7FF7FCB60) + 0x14D08428008034A0) >> 8) ^ 0x7FFEEFBFF985EE7DLL)
      + ((2 * v96) & 0xD65EF7AFFEFF96C0)
      + (v96 ^ 0xEB2F7BD7FF7FCB60)
      + (((((2 * v96) & 0xD65EF7AFFEFF96C0) + (v96 ^ 0xEB2F7BD7FF7FCB60) + 0x14D08428008034A0) >> 7) & 0x1FDDF7FF30BDCFALL);
  v98 = v97
      + (((v97 - 0x6B2E6B97F905B9DDLL) >> 8) ^ 0x1C300212041A60A9)
      - (((v97 - 0x6B2E6B97F905B9DDLL) >> 7) & 0x19FFBDBF7CB3EACLL)
      + 1;
  v99 = v98 - ((2 * v98 + 0x14324AC05BFCAF2) & 0xF29198417489EBALL) - 0x7FC9E0E7F17BCB2ALL;
  v100 = ((2 * ((v99 ^ 0x7948CC20BA44F5DLL) + 0x75D572E7727DD82)) & 0x13B779FDE753FFFALL)
       + (((v99 ^ 0x7948CC20BA44F5DLL) + 0x75D572E7727DD82) ^ 0x89DBBCFEF3A9FFFDLL);
  v101 = v100
       + (((v100 + 0x762443010C560003) >> 30) ^ 0xE000180688040078)
       - (((v100 + 0x762443010C560003) >> 29) & 0x2EFF7FF0ELL);
  v102 = v101
       + (((v101 - 0x69DBD5057BAE0075) >> 9) ^ 0x9717040201908061)
       - (((v101 - 0x69DBD5057BAE0075) >> 8) & 0xD1F7FBFCDEFF3CLL);
  v103 = v102
       + (((v102 - 0xF2D9077D3E80D6) >> 7) ^ 0xCCFFF2FBB7FFEDF7)
       + (((v102 - 0xF2D9077D3E80D6) >> 6) & 0x1FFE5F76FFFDBEELL)
       + 2;
  v104 = v103 - ((2 * v103 + 0x641A67F995832262) & 0x42DA25FBA8265986) - 0x2C85B905612B420CLL;
  v105 = ((2 * ((v104 ^ 0xA16D12FDD4132CC3) + 0x20226CA5EA003BB7)) & 0xEEFDD7F8F63E7AFELL)
       + (((v104 ^ 0xA16D12FDD4132CC3) + 0x20226CA5EA003BB7) ^ 0x777EEBFC7B1F3D7FLL);
  v106 = v105
       + (((v105 - 0x777EEBFC7B1F3D7FLL) >> 27) ^ 0x8081010900246000)
       - (((v105 - 0x777EEBFC7B1F3D7FLL) >> 26) & 0x2DFFB73FFELL);
  v107 = v106
       + (((v106 + 0x80012FA84BC6281) >> 13) ^ 0x57FEFD7E76BED76FLL)
       + (((v106 + 0x80012FA84BC6281) >> 12) & 0xDFAFCED7DAEDELL);
  v108 = v107
       + (((v107 - 0x4FFEEA83F20274EELL) >> 4) ^ 0x7FBFB707D6EF9FF5)
       + (((v107 - 0x4FFEEA83F20274EELL) >> 3) & 0x1F7F6E0FADDF3FEALL)
       + 1;
  v109 = v108 - ((2 * v108 + 0x2082BCE86E1BD638) & 0x3F8E45F7AB40589ALL) + 0x500881700CAE1769;
  v110 = (v109 ^ 0x6DA080B3AA4AD302)
       + ((v109 >> 26) ^ 0x7FB7DFA7BB475705)
       + ((v109 >> 25) & 0x79A6CEF7DELL ^ 0x30804051D4)
       - 0x7FB7DFBCD3677BEFLL;
  v111 = ((2 * v110) & 0x5FFF9FAABF5D5FBELL)
       + (v110 ^ 0x2FFFCFD55FAEAFDFLL)
       + (((((2 * v110) & 0x5FFF9FAABF5D5FBELL) + (v110 ^ 0x2FFFCFD55FAEAFDFuLL) - 0x2FFFCFD55FAEAFDFLL) >> 15) ^ 0x12084A94E0005009)
       - (((((2 * v110) & 0x5FFF9FAABF5D5FBELL) + (v110 ^ 0x2FFFCFD55FAEAFDFuLL) - 0x2FFFCFD55FAEAFDFLL) >> 14) & 0x36AD63FFF5FECLL);
  v112 = ((v111 - 0x42081A6A3FAEFFE8) >> 6) - (((v111 - 0x42081A6A3FAEFFE8) >> 5) & 0xF6C76080);
  LODWORD(v111) = ((2 * (v111 - 1068433384)) & 0xFF6B9FFE)
                + ((v111 - 1068433384) ^ 0xFFB5CFFF)
                + ((v112 - 77352896) ^ 0xE6790CC2)
                + ((2 * (v112 - 77352896)) & 0xC5CA86FA ^ 0x3B3DFF7F);
  v113 = v99 ^ v85 ^ v69 ^ (v111 - 2 * ((v111 + 53441408) & 0xAF6C51E ^ v111 & 0x1A) + 1847998596);
  LODWORD(v85) = (((2 * (v113 & 7 ^ 0xA6586F41)) | 0xEEF5A00A) - (v113 & 7 ^ 0xA6586F41) + 142946299) ^ 0x7369BF62;
  v114 = (v85 | 0x14993C17) - (v85 | 0xEB66C3E8) - 345586712;
  LODWORD(v85) = (((v113 ^ 0x4617345) + 1) ^ 3) + 2 * ((v113 ^ 0x4617345) + 1) + 5;
  v115 = ((v85 & 7) - ((2 * (_DWORD)v85) & 0xA) - 1814470115) ^ 0x93D9621D;
  v116 = 255;
  if (v114 == 919747635)
    v116 = 0;
  STACK[0x320] = v115;
  v117 = (v116 << v115) - ((2 * (v116 << v115)) & 0x3FA64FB8) - 1613551652;
  v118 = (v117 ^ 0x67)
       + ((2 * v117) & 0x76 ^ 0x30)
       + 69
       + ((((2 * v117) ^ 0xB8) - ((2 * ((2 * v117) ^ 0xB8)) & 0x88) + 68) ^ 0xBB);
  v119 = (v118 ^ 0xF2) + 14 + ((2 * v118) & 0xE4);
  if (v114 == 919747635)
    v119 = 0;
  v120 = LODWORD(STACK[0x328]) == -315061333;
  v121 = STACK[0x2D0];
  if (LODWORD(STACK[0x328]) == -315061333)
    v121 = STACK[0x21C];
  LODWORD(STACK[0x214]) = v121;
  v122 = STACK[0x218];
  if (v120)
    v122 = a46;
  LODWORD(STACK[0x218]) = v122;
  v123 = STACK[0x210];
  if (!v120)
    v123 = STACK[0x20C];
  LODWORD(STACK[0x210]) = v123;
  v124 = STACK[0x208];
  if (!v120)
    v124 = STACK[0x204];
  LODWORD(STACK[0x20C]) = v124;
  if ((a69 & 1) != 0)
    a43 = a47;
  v126 = v90 ^ v76 ^ v70 ^ v104;
  v127 = v95 ^ v81 ^ v71 ^ v109;
  v128 = ((v126 & 0x7F ^ 0x13) - ((2 * (v126 & 0x7F ^ 0x13)) & 0x14) + 898999946) ^ 0x351DB68B;
  v129 = (((2 * v128) | 0x85DE4244) - v128 + 1024515806) ^ 0xC2673120;
  v130 = (((2 * (v117 ^ 0x6F)) & 0xFFFFFF3F) - (v117 ^ 0x6F) - 68209568) ^ 0xFBEF34D3;
  v131 = ((v119 & (v126 ^ 0xD6)) + (~(2 * (v119 & (v126 ^ 0xD6))) | 0x59) - 44) ^ 0x5F;
  v132 = ((v131 | 0xC5EE9834) - (v131 | 0x3A1167CB) + 974219211) ^ 0x4FEEBAB0;
  v133 = (((2 * ((v127 ^ BYTE1(v127) ^ BYTE2(v127)) ^ 0x36600703)) | 0x69F031BA)
        - ((v127 ^ BYTE1(v127) ^ BYTE2(v127)) ^ 0x36600703)
        + 1258809123) ^ HIBYTE(v127) ^ 0x82981F19;
  LODWORD(STACK[0x2D0]) = (2 * v126) & 0xDDFB7F74 ^ 0xD0095220;
  LODWORD(STACK[0x2D8]) = 33686018 * v129;
  LODWORD(STACK[0x2E0]) = (((2 * v132) & 0x1256D6F6) - v132 + 1993643140) ^ ((~(33686018 * v130) | 0x6DB07AA9)
                                                                           + 16843009 * v130
                                                                           - 920141140);
  LODWORD(STACK[0x200]) = (16843009 * v133 - ((33686018 * v133) & 0xCAA66C64) - 447531470) ^ 0x4D40146D;
  LODWORD(STACK[0x21C]) = a43;
  return sub_18CB6C660(944);
}

uint64_t sub_18CB9B864()
{
  int v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;

  v1 = STACK[0x280];
  v2 = (LODWORD(STACK[0x280]) + 378119576) & 0xE9765BA6;
  v3 = (LODWORD(STACK[0x280]) + 1935652711) ^ v0;
  LODWORD(STACK[0x310]) = v3;
  if (v3 <= 1)
    v4 = 1;
  else
    v4 = v3;
  return ((uint64_t (*)(void))qword_1E2538EC0[(206 * (v4 - 17 >= v2 - 427)) ^ v1])();
}

uint64_t sub_18CB9B8E0()
{
  unsigned int v0;
  int v1;

  return ((uint64_t (*)(void))(qword_1E2538EC0[(8 * (v0 < ((v1 - 220) ^ 0x415u))) | (16 * (v0 < ((v1 - 220) ^ 0x415u))) | v1]
                            - (((v1 - 689) | 0x480u) ^ 0x6B8)))();
}

uint64_t sub_18CB9B92C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  *(_OWORD *)STACK[0x328] = xmmword_18CF26810;
  return ((uint64_t (*)(__n128))qword_1E2538EC0[(235
                                                         * ((((v4 & 0xFFFFFFF0) == 16) ^ (29 * (a4 ^ 0xA3))) & 1)) ^ (a4 - 573)])((__n128)xmmword_18CF26810);
}

void sub_18CB9B984()
{
  JUMPOUT(0x18CB9B960);
}

uint64_t sub_18CB9B98C()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))qword_1E2538EC0[(385 * (((v1 == v2) ^ (v0 + 26)) & 1)) ^ v0])();
}

uint64_t sub_18CB9B9C4()
{
  int v0;
  unsigned int v1;

  return ((uint64_t (*)(void))(qword_1E2538EC0[((((v0 + 474) | 4) - 1008) * ((v1 >> 3) & 1)) ^ (v0 + 348)] - 12))();
}

uint64_t sub_18CB9BA04@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  unsigned int v5;
  int8x16x4_t v7;

  v7.val[0].i64[0] = v5 & 8;
  v7.val[0].i64[1] = (11 * (v3 ^ 0x40C)) ^ 0x62 | v5 & 8;
  v7.val[1].i64[0] = v7.val[0].i64[0] | 2;
  v7.val[1].i64[1] = v7.val[0].i64[0] | 3;
  v7.val[2].i64[0] = v7.val[0].i64[0] | 4;
  v7.val[2].i64[1] = v7.val[0].i64[0] | 5;
  v7.val[3].i64[0] = v7.val[0].i64[0] | 6;
  v7.val[3].i64[1] = v7.val[0].i64[0] | 7;
  *(int8x8_t *)(STACK[0x328] + v5) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(a3 + v7.val[0].i64[0]), *(int8x8_t *)(a1 + v7.val[0].i64[0])), *(int8x8_t *)(a2 + v7.val[0].i64[0])), (int8x8_t)0x1818181818181818), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v7, (int8x16_t)xmmword_18CF0E660), (int8x8_t)0xB0B0B0B0B0B0B0BLL));
  return ((uint64_t (*)(__n128))(qword_1E2538EC0[(42 * ((v4 & 0xFFFFFFF8) - 8 == v5)) ^ v3] - 12))((__n128)xmmword_18CF0E660);
}

void sub_18CB9BAE4()
{
  JUMPOUT(0x18CB9BA48);
}

uint64_t sub_18CB9BAEC()
{
  int v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))qword_1E2538EC0[(((v1 + 1537353624) & 0xA45DD9A6 ^ ((v1 - 32) | 0x100) ^ 0x2A5) * (v0 == v2)) ^ v1])();
}

uint64_t sub_18CB9BB38@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  int v6;

  *(_BYTE *)(STACK[0x328] + (v4 - 954000439)) = *(_BYTE *)(a4 + ((v4 - 954000439) & 0xFLL)) ^ *(_BYTE *)(a1 + (((_BYTE)v4 - 55) & 0xF)) ^ *(_BYTE *)(a2 + (((_BYTE)v4 - 55) & 0xF)) ^ (((v4 - 55) & 0xF) * (a3 ^ 0xA9)) ^ 0x18;
  return ((uint64_t (*)(void))qword_1E2538EC0[(901 * (v4 == v6 + v5 - 1)) ^ a3])();
}

void sub_18CB9BBAC()
{
  JUMPOUT(0x18CB9BB5CLL);
}

uint64_t sub_18CB9BBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((1555 * (v3 + 8 == v5)) ^ v4))
                            - (((v4 ^ 0x7B3u) - 565) ^ (v4 + 892))))();
}

uint64_t sub_18CB9BBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  LODWORD(STACK[0x330]) = v4;
  STACK[0x4C8] = 0xE7E06F487EE8DF97;
  LODWORD(STACK[0x444]) = dword_1EE0569E8 - 73583857;
  v6 = *(unsigned int *)aHAwAwAwAwAwAwA;
  v7 = 1856021207
     * ((((v5 - 152) | 0x8A6AD391298A1BEDLL) - (v5 - 152) + ((v5 - 152) & 0x75952C6ED675E410)) ^ 0x677E440A67E3CD13);
  *(_DWORD *)(v5 - 140) = v3 + 1877625344 + v7;
  *(_DWORD *)(v5 - 120) = v7 + v3 + 1123495865;
  *(_DWORD *)(v5 - 116) = v7;
  *(_QWORD *)(v5 - 136) = v6 - v7;
  *(_QWORD *)(v5 - 128) = v7 ^ 0x295F683D;
  *(_DWORD *)(v5 - 148) = (v3 + 1877625358) ^ v7;
  *(_DWORD *)(v5 - 144) = v7 ^ (v3 + 1877625344) ^ 0x53;
  v9 = sub_18CBBB420(v5 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a3 + 8 * *(int *)(v5 - 152)) - 8))(v9);
}

uint64_t sub_18CB9BCF0()
{
  int v0;
  uint32_t v1;

  v0 = LODWORD(STACK[0x34C]) - 1222;
  STACK[0x350] = (unint64_t)malloc_type_malloc(STACK[0x328], 0xC5732911uLL);
  v1 = arc4random();
  *(_DWORD *)&aHAwAwAwAwAwAwA[4] = v1 + 1465998909 - ((v1 << (v0 ^ 0xEB)) & 0xAEC2BC7A);
  *(_DWORD *)&aHAwAwAwAwAwAwA[8] = ((1812433253
                                   * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0xB3EBDFF8 ^ ((*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30) | 0xE48A81C4))) ^ 0xFBFBFF3D)
                                 + ((-670100790
                                   * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0xB3EBDFF8 ^ ((*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30) | 0xE48A81C4))) & ((v0 - 833546813) & 0x31AEEAD6 ^ 0xF7F7FCFE))
                                 + 1533370113
                                 - ((2
                                   * (((1812433253
                                      * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0xB3EBDFF8 ^ ((*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30) | 0xE48A81C4))) ^ 0xFBFBFF3D)
                                    + ((-670100790
                                      * (*(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0xB3EBDFF8 ^ ((*(_DWORD *)&aHAwAwAwAwAwAwA[4] >> 30) | 0xE48A81C4))) & ((v0 - 833546813) & 0x31AEEAD6 ^ 0xF7F7FCFE)))
                                   + 134742408) & 0xAEC2BC7A);
  return ((uint64_t (*)(void))(qword_1E2538EC0[v0] - 12))();
}

void sub_18CB9BE30()
{
  JUMPOUT(0x18CB9BDC0);
}

uint64_t sub_18CB9BE4C()
{
  int8x16_t v0;
  int v1;
  const float *v2;
  int8x16_t v3;
  int8x16_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int32x4_t v8;
  int8x16_t v9;

  v1 = 409 * (LODWORD(STACK[0x34C]) ^ 0x6B3);
  v2 = (const float *)&aHAwAwAwAwAwAwA[4];
  v3 = (int8x16_t)vld1q_dup_f32(v2);
  v4.i64[0] = 0x8000000080000000;
  v4.i64[1] = 0x8000000080000000;
  v0.i64[0] = *(_QWORD *)&aHAwAwAwAwAwAwA[8];
  v0.i32[2] = *(_DWORD *)&aHAwAwAwAwAwAwA[16];
  v5 = vextq_s8(v3, v0, 0xCuLL);
  v6 = v0;
  v6.i32[3] = *(_DWORD *)&aHAwAwAwAwAwAwA[20];
  v7 = veorq_s8(vandq_s8(v6, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x5B75524Eu));
  v8 = (int32x4_t)veorq_s8((int8x16_t)vsubq_s32((int32x4_t)vandq_s8(v7, (int8x16_t)vdupq_n_s32(0x645C2AB6u)), (int32x4_t)vorrq_s8(v7, (int8x16_t)vdupq_n_s32(0xE45C2AB7))), (int8x16_t)vdupq_n_s32(0x17B7D93Bu));
  v9.i32[0] = *((_DWORD *)&STACK[0x4C8] + ((aHAwAwAwAwAwAwA[8] & 1) == 0));
  v9.i32[1] = *((_DWORD *)&STACK[0x4C8] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[12] & 1));
  v9.i32[2] = *((_DWORD *)&STACK[0x4C8] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[16] & 1));
  v9.i32[3] = *((_DWORD *)&STACK[0x4C8] + (~*(_DWORD *)&aHAwAwAwAwAwAwA[20] & 1));
  *(int8x16_t *)&aHAwAwAwAwAwAwA[4] = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)&aHAwAwAwAwAwAwA[1592], v9), (int8x16_t)vdupq_n_s32(0x79EEFAD2u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vbicq_s8(v4, v5), (int8x16_t)vdupq_n_s32(0x8E0C4A8B)), v8), (int32x4_t)vmvnq_s8(vandq_s8((int8x16_t)vaddq_s32(v8, v8), (int8x16_t)vdupq_n_s32(0x1C189514u)))), 1uLL));
  return ((uint64_t (*)(void))(qword_1E2538EC0[v1 ^ 0x2D7] - 8))();
}

uint64_t sub_18CB9C864@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, int a3@<W5>, uint64_t a4@<X6>, uint64_t a5@<X7>, int a6@<W8>)
{
  int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v8 = -451793628 - ((v6 & 0x80000000 | 0x6888635C) & (a3 + 6));
  v9 = *(_DWORD *)(a2 + 4 * (v7 + a4 + ((a6 - 1225) | 0xB8u)));
  v10 = (((v9 & 0x7FFFFFFE ^ 0x5B75524E) & 0x645C2AB6) - (v9 & 0x7FFFFFFE ^ 0x5B75524E | 0xE45C2AB7)) ^ 0x17B7D93B;
  *(_DWORD *)(a2 + 4 * (v7 + a4) + 740) = *(_DWORD *)(a2 + 4 * (v7 + a4) + 2328) ^ *((_DWORD *)&STACK[0x4C8]
                                                                                   + ((v9 & 1) == 0)) ^ ((v10 + (v8 & 0x80000000 ^ 0x8E0C4A8B) + (~(2 * v10) | 0xE3E76AEB)) >> 1) ^ 0x79EEFAD2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((31 * (v7 + 1 == a5 + 3)) ^ a6)) - 8))();
}

uint64_t sub_18CB9C950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  int8x16_t v7;
  unsigned int v8;
  const float *v9;
  int8x16_t v10;
  uint64_t v11;
  int32x4_t v12;
  int32x4_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int32x4_t v18;
  int8x16_t v19;
  int32x4_t v20;
  int8x16_t v21;

  v8 = (v6 - 1302990607) & 0x4DAA0EF7;
  v9 = (const float *)(a5 + 908);
  v10 = (int8x16_t)vld1q_dup_f32(v9);
  v11 = 4 * v8 + 264;
  v12 = vdupq_n_s32(0xE18AC144);
  v13 = vdupq_n_s32(0x10D826D7u);
  v14.i64[0] = 0x8000000080000000;
  v14.i64[1] = 0x8000000080000000;
  v7.i32[0] = *(_DWORD *)(a5 + 912);
  v7.i32[1] = *(_DWORD *)(a5 + v11);
  v7.i32[2] = *(_DWORD *)(a5 + 920);
  v15 = vextq_s8(v10, v7, 0xCuLL);
  v16 = v7;
  v16.i32[3] = *(_DWORD *)(a5 + 924);
  v17 = (int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v15, v14), v12);
  v18 = (int32x4_t)veorq_s8(vandq_s8(v16, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x1CB35CF4u));
  v19 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v18, v18), (int8x16_t)vdupq_n_s32(0xA761B6C2)), v18), vdupq_n_s32(0x2C4F249Fu)), (int8x16_t)vdupq_n_s32(0xD070D921));
  v20 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v19, (int8x16_t)vdupq_n_s32(0xEF27D928)), (int32x4_t)vorrq_s8(v19, (int8x16_t)v13)), v13), (int8x16_t)vdupq_n_s32(0xA735D9A0));
  v21.i32[0] = *(_DWORD *)(v5 + 4 * ((*(_DWORD *)(a5 + 912) & 1) == 0));
  v21.i32[1] = *(_DWORD *)(v5 + 4 * ((*(_DWORD *)(a5 + v11) & 1) == 0));
  v21.i32[2] = *(_DWORD *)(v5 + 4 * (~*(_DWORD *)(a5 + 920) & 1));
  v21.i32[3] = *(_DWORD *)(v5 + 4 * (~v16.i32[3] & 1));
  *(int8x16_t *)(a5 + 908) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)a5, v21), (int8x16_t)vdupq_n_s32(0x313B0FEDu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v20, veorq_s8(v17, (int8x16_t)v12)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v20, v20), (int8x16_t)vdupq_n_s32(0x3F4F41E8u))), vdupq_n_s32(0x9FA7A0F4)), 1uLL));
  return ((uint64_t (*)(void))(qword_1E2538EC0[v8 ^ 0x19] - 12))();
}

void sub_18CB9CB08()
{
  JUMPOUT(0x18CB9CA14);
}

uint64_t sub_18CB9CB14@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unsigned int v2;

  v2 = (((((a1 + 135) ^ 0x1FC) + 1498) ^ 0x1B04AD06 ^ ((((8 * ((a1 + 135) ^ 0x1FC) + 2147481934) & *(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0xD6173B0) & 0x6B2C2B4E)
                                                     - ((8 * ((a1 + 135) ^ 0x1FC) + 2147481934) & *(_DWORD *)&aHAwAwAwAwAwAwA[4] ^ 0xD6173B0 | 0xEB2C2B4F)))
      - 1) ^ 0x55D7528A;
  *(_DWORD *)&aHAwAwAwAwAwAwA[2496] = *(_DWORD *)&aHAwAwAwAwAwAwA[1588] ^ *((_DWORD *)&STACK[0x4C8]
                                                                          + ((aHAwAwAwAwAwAwA[4] & 1) == 0)) ^ (((((*(_DWORD *)&aHAwAwAwAwAwAwA[2496] & 0x80000000) - 388570880) ^ 0xE8D6E100) + v2 - ((2 * v2) & 0x80946D90) - 1068878136) >> 1) ^ 0x1ECDC4F3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1857 * (LODWORD(STACK[0x444]) > 0x26F)) ^ (a1 + 135))) - 4))();
}

uint64_t sub_18CB9CC14@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  LODWORD(STACK[0x444]) = 0;
  v2 = LODWORD(STACK[0x444])++;
  dword_1EE0569E8 = v2 + 73583858;
  v3 = (*(_DWORD *)aHAwAwAwAwAwAwA - 1274634254);
  v4 = 1606104089
     * ((~((v1 - 152) ^ 0x9AF036D0EEA70D4BLL | 0xD7C1FE4EC6377693)
       + (((v1 - 152) ^ 0x9AF036D0EEA70D4BLL) & 0xD7C1FE4EC6377693)) ^ 0x7070CC55A278C619);
  *(_DWORD *)(v1 - 132) = ((a1 + 1651105280) | 0xB) + v4;
  *(_DWORD *)(v1 - 128) = (a1 + 1651105280) ^ v4;
  *(_DWORD *)(v1 - 124) = -1231242094 - v4 + a1;
  *(_QWORD *)(v1 - 120) = 3714451503u - v4;
  *(_QWORD *)(v1 - 152) = v3 + v4;
  *(_DWORD *)(v1 - 140) = v4;
  *(_DWORD *)(v1 - 136) = ((a1 + 1651105280) | 0x43) ^ v4;
  v5 = sub_18CB18D94(v1 - 152);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[*(int *)(v1 - 144)] - 12))(v5);
}

uint64_t sub_18CB9CD34(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  int v4;

  if (v2 >= v3)
    v4 = (((LODWORD(STACK[0x34C]) - 1707) | 0x47A) ^ 0x47E) + *(_DWORD *)aHAwAwAwAwAwAwA;
  else
    v4 = 694118461;
  *(_DWORD *)aHAwAwAwAwAwAwA = v4;
  return sub_18CB9CEA8(a1, a2, qword_1E2538EC0, STACK[0x2F0], &unk_18CF268F0, byte_18CF4CF70, &unk_18CF2EDD0, 3924581327);
}

uint64_t sub_18CB9CEA8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, int a6@<W7>, int a7@<W8>)
{
  int v7;
  char v8;
  int v9;
  int v10;
  unsigned int v11;

  v11 = (v7 ^ (((a7 - 943) ^ 0x1D3u) + a6)) >> (((a7 + 81) | 4) + v8 - 19);
  LOBYTE(v11) = (v11 - ((2 * v11) & 0x5A) + 45) ^ 0x37;
  *(_BYTE *)(a2 + (v10 - 85688685)) = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((252
                                          * (v10
                                           - ((*(unsigned __int8 *)(a3 + ((v10 - 85688685) & 0xFLL)) ^ (91 * ((v10 - 109) & 0xF)) ^ *(unsigned __int8 *)(((v10 - 85688685) & 0xFLL) + a4 + 5) ^ *(unsigned __int8 *)(a5 + ((v10 - 85688685) & 0xFLL))) != v11) != v9)) ^ a7))
                            - 4))();
}

uint64_t sub_18CB9CF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  int v4;

  STACK[0x3F0] = STACK[0x310];
  STACK[0x3E8] = v3;
  STACK[0x418] = STACK[0x350];
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((((v4 - 84) ^ (STACK[0x518] == 0)) & 1) == 0) | v4))
                            - ((v4 - 84) | 0x630u)
                            + 1700))();
}

uint64_t ZyNF2D9(uint64_t a1)
{
  unint64_t v1;
  unsigned int v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = 941074649
     * ((((unint64_t)&v3 | 0x6B6B37162FCDE1F4) - ((unint64_t)&v3 & 0x6B6B37162FCDE1F4)) ^ 0x6AEDD0F42F052E90);
  v6 = -804802556 - v1;
  v4 = v1 + 0x18CBBB5DCLL;
  v5 = a1;
  sub_18CBBB4BC((uint64_t)&v3);
  return v3;
}

uint64_t qSCskg(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD v8[4];
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  _QWORD *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t vars0;

  v16 = *MEMORY[0x1E0C80C00];
  v8[0] = 0x18CB69914;
  v8[1] = a1;
  v9 = a3;
  v8[2] = a2;
  v8[3] = a4;
  v10 = a5;
  v11 = a6;
  v12 = a7;
  v13 = (230600693
       * ((((&vars0 - 32) | 0x4099155E) - ((&vars0 - 32) & 0x4099155E)) ^ 0x92A59375)) ^ 0x54F58F50;
  v14 = v8;
  sub_18CB69794((uint64_t)&v13);
  return v15;
}

void sub_18CB9D144(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  char *v4;

  v1 = MEMORY[0x1E0C80A78](a1);
  v2 = *(_DWORD *)(v1 + 64) + 1448877107 * (v1 ^ 0x713B1D2A);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = (char *)malloc_type_malloc(0x5400uLL, 0xBDD0132FuLL);
  *(_QWORD *)(v3 - 0x3E93D6427590D1A8) = v4 + 0x5C13350084191667;
  __asm { BR              X8 }
}

uint64_t sub_18CB9D238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  uint64_t v16;
  _BOOL4 v20;

  v16 = *(unsigned int *)(a14 + 80);
  v20 = (_DWORD)v16 - v15 == 2085568946
     || (*(_DWORD *)(a14 + 32) ^ v15) == 2064621751
     || *(_DWORD *)(a14 + 4) - v15 == 1940630634
     || *(_DWORD *)a14 + v15 == 943899293;
  *(_DWORD *)(*(_QWORD *)(a14 + 56) - 0x58405A597B241F58) = 2047018587;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(224 * v20) ^ v14] - ((215 * (v14 ^ 0x266)) ^ 0x4ABu) + 1570))(v16, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_18CB9D2F4@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v8;
  _BOOL4 v12;

  v8 = a8[5];
  v12 = a8[9] == 0xC2C3062343A3C93
     || a8[6] == 0x511395B3EF1E789
     || v8 == 0x8ED1C57AC03BA80
     || a8[3] == 0x4E36C53A99817805;
  return ((uint64_t (*)(uint64_t, uint64_t))qword_1E2538EC0[((((a2 ^ v12) & 1) == 0) * (a2 ^ 0x64C)) ^ a2])(a1, v8);
}

uint64_t sub_18CB9D38C@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;

  v1 = 199 * (a1 ^ 0x62A);
  v2 = (v1 - 840246062) ^ 0xCDEADFEE;
  *((_DWORD *)&STACK[0x8D0] + (((194 * v2) & 0x55763F9A) + ((97 * v2) ^ 0x2ABB1FCD) - 716852513) % 0x55C) = -840245266;
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[(1913
                                                           * (((v2 - 840245266 - ((2 * v2 + 2) & 0x9BD5BFDC) + 1) ^ 0xCDEADFE0) > 0x18F)) ^ v1]
                                          - 4))(97);
}

uint64_t sub_18CB9DB14(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x1570]) = -840245266;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * ((8 * ((v2 ^ 0xCDEADFEF) > 0x19F)) | (16
                                                                                            * ((v2 ^ 0xCDEADFEF) > 0x19F)) | (a2 + 1056)))
                                          - 12))(1979067812);
}

uint64_t sub_18CB9DBFC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  uint64_t v35;

  v14 = v9 + v8;
  v15 = a7 + v13;
  v16 = (v15 - 1860105850) % 0x190u - 1669107760 + (~(2 * ((v15 - 1860105850) % 0x190u)) | 0xFFFFFC5F) + 1;
  v17 = (((v15 - 1860105850) * (v15 - 1860105850)) ^ 0x67DEE7FF)
      + v12
      + v11
      + ((((v15 - 1860105850) * (v15 - 1860105850)) << ((a2 - 21) ^ 0x71)) & 0xCFBDCFFE);
  v18 = ((((v17 + 1886119219) % 0xFFFF) ^ 0x6D76EFE3) - 1836511203 + ((2 * ((v17 + 1886119219) % 0xFFFF)) & 0x1DFC6))
      % 0x190;
  v19 = a7
      + v13
      - 303071396
      + (((v10 + a8 - 2027623525) * (v10 + a8 - 2027623525)) ^ 0x5E33CCB7)
      + ((2 * (v10 + a8 - 2027623525) * (v10 + a8 - 2027623525)) & 0xBC67996E);
  v20 = 4
      * ((97 * (((2 * ((v12 + v11 - 666186447) % 0x190u)) & 0x15E) + (((v12 + v11 - 666186447) % 0x190u) ^ 0xE553D4AF))
        + 456997981)
       % 0x55C);
  v21 = *(_DWORD *)((char *)&STACK[0x8D0] + v20);
  v22 = 4 * ((97 * (((2 * v18) & 0x1EE) + (v18 ^ 0x6F719AF7)) - 973792491) % 0x55C);
  *(_DWORD *)((char *)&STACK[0x8D0] + v20) = *(_DWORD *)((char *)&STACK[0x8D0] + v22);
  v23 = ((((v19 + 1157479796) % 0xFFFF) ^ 0x7BD7DFF7) - 2077745143 + ((2 * ((v19 + 1157479796) % 0xFFFF)) & 0x1BFEE))
      % 0x190;
  *(_DWORD *)((char *)&STACK[0x8D0] + v22) = v21;
  v24 = 4 * ((((194 * (v16 ^ 0x9C836FD0)) & 0x37EE7C) + ((97 * (v16 ^ 0x9C836FD0)) ^ 0xDEFBF73E) + 553966446) % 0x55C);
  v25 = *(_DWORD *)((char *)&STACK[0x8D0] + v24);
  v26 = 4 * ((((194 * v23) & 0x135FE) + ((97 * v23) ^ 0x53DE9AFF) - 1407043667) % 0x55C);
  *(_DWORD *)((char *)&STACK[0x8D0] + v24) = *(_DWORD *)((char *)&STACK[0x8D0] + v26);
  v27 = (((v14 - 582432868) * (v14 - 582432868)) ^ 0x7B7FEDFB)
      + v10
      + a8
      + ((2 * (v14 - 582432868) * (v14 - 582432868)) & 0xF6FFDBF6);
  *(_DWORD *)((char *)&STACK[0x8D0] + v26) = v25;
  LODWORD(v24) = ((((v27 + 195362209) % 0xFFFF) ^ 0x7C7EBFF9)
                - 2088681465
                + ((2 * ((v27 + 195362209) % 0xFFFF)) & 0x17FF2))
               % 0x190;
  v28 = ((v10 + a8 - 2027623525) % 0x190u - 2045952226 - ((2 * ((v10 + a8 - 2027623525) % 0x190u)) & 0x23C)) ^ 0x860D3F1E;
  LODWORD(v26) = 97 * v28;
  v29 = (97 * v28) ^ 0xFBF3B3CD;
  v28 *= 194;
  v30 = *((_DWORD *)&STACK[0x8D0] + ((v28 & 0x1E7679A) + v29 + 67968735) % 0x55C);
  v31 = 4 * ((((194 * (_DWORD)v24) & 0xEFF8) + ((97 * (_DWORD)v24) ^ 0x9FF377FC) + 1611487920) % 0x55C);
  *((_DWORD *)&STACK[0x8D0] + ((v28 & 0x1B9F6FE) + (v26 ^ 0xBBDCFB7F) + 1143199533) % 0x55C) = *(_DWORD *)((char *)&STACK[0x8D0] + v31);
  *(_DWORD *)((char *)&STACK[0x8D0] + v31) = v30;
  LODWORD(v20) = ((v14 - 582432868) % 0x190u - 809361142 - ((2 * ((v14 - 582432868) % 0x190u)) & 0x214)) ^ 0xCFC2210A;
  v32 = (v14
       + (((v17 + 1886119219) * (v17 + 1886119219)) ^ 0x77D7BFEB)
       + ((2 * (v17 + 1886119219) * (v17 + 1886119219)) & 0xEFAF7FD6)
       + 1701906354)
      % 0xFFFF;
  v33 = ((v32 ^ 0x77E557F9) - 2011518969 + ((2 * v32) & 0xAFF2)) % 0x190;
  v34 = (v33 + 1884049702 - ((2 * v33) & 0x24C)) ^ 0x704C5126;
  v35 = 4 * ((((194 * v34) & 0x1F517E) + ((97 * v34) ^ 0x5FFFA8BFu) - 1610536467) % 0x55C);
  LODWORD(v31) = *((_DWORD *)&STACK[0x8D0]
                 + (((194 * (_DWORD)v20) & 0x376DF2) + ((97 * (_DWORD)v20) ^ 0x7BFBB6F9u) - 2080040013) % 0x55C);
  *((_DWORD *)&STACK[0x8D0] + (((194 * (_DWORD)v20) & 0x2FB974) + ((97 * (_DWORD)v20) ^ 0xEF57DCBA) + 279508466) % 0x55C) = *(_DWORD *)((char *)&STACK[0x8D0] + v35);
  *(_DWORD *)((char *)&STACK[0x8D0] + v35) = v31;
  return ((uint64_t (*)(void))(qword_1E2538EC0[a2 - 365] - 12))();
}

void sub_18CB9E1D8()
{
  JUMPOUT(0x18CB9DC58);
}

uint64_t sub_18CB9E20C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;

  v4 = *((_DWORD *)&STACK[0x8D0]
       + (((194 * (a1 ^ 0xCDEADFEE)) & 0xFFBFDEFE)
        + 2155309
        + ((97 * (a1 ^ 0xCDEADFEE)) ^ (809 * (v3 ^ 0x672) - 2102995)))
       % 0x55C) ^ 0xCDEADFEE;
  *((_DWORD *)&STACK[0x8D0] + (((194 * v4) & 0xA9E6AF6E) + ((97 * v4) ^ 0xD4F357B7) + 722342533) % 0x55C) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((140
                                          * ((((a1 ^ 0xCDEADFEE)
                                             - 840245266
                                             - ((2 * (a1 ^ 0xCDEADFEE) + 2) & 0x9BD5BFDC)
                                             + 1) ^ v1) < 0x190)) ^ v3))
                            - 12))();
}

uint64_t sub_18CB9E310(uint64_t a1, uint64_t a2, unsigned int a3, int a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t (*v16)(void);

  v11 = 4
      * (v8 * v7
       - 1212914617
       - ((((v8 * v7 - 1212914617) * (unint64_t)a3) >> 32) >> 10) * a4);
  v12 = dword_18CF2FC20[(((2722 * (*(_DWORD *)(a5 + v11) ^ v6)) & 0xBAF77F7C)
                       + ((1361 * (*(_DWORD *)(a5 + v11) ^ v6)) ^ 0x5D7BBFBE)
                       - 1568041325)
                      % 0x12E0] ^ 0xB7AE8AB6;
  v13 = v12 * v10 - 790419061 - ((-2114329278 * v12) & 0xA1C65316);
  v14 = 8 * ((v13 ^ 0xD0E3298B) * (v13 ^ 0xD0E3298B) - ((2 * (v13 ^ 0xD0E3298B) * (v13 ^ 0xD0E3298B)) & 0x1693E18A));
  v15 = v13 ^ 0x97853DB8 ^ (((v14 - 632322520) ^ 0xDA4F8628)
                          + 969164811
                          - 2 * (((v14 - 632322520) ^ 0xDA4F8628) & 0x39C44818 ^ ((_BYTE)v14 - 88) & 0x10));
  v16 = (uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((2 * (v8 != 2049294244)) | (32 * (v8 != 2049294244))) ^ v5)) - 12);
  *(_DWORD *)(a5 + v11) = v15;
  return v16();
}

uint64_t sub_18CB9E460@<X0>(int a1@<W1>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  uint64_t (*v14)(void);

  v9 = (((v6 - 1535481858) ^ 0xE) - 2044738605 - ((((v3 - 594) | 0x28A) ^ 0xC3F812C) & (2 * ((v6 - 1535481858) ^ 0xE)))) ^ 0x861FC3D3;
  v10 = ((v9 * v4) & 0xF9F67FDE) + ((v9 * a3) ^ 0xFCFB3FEF) + 50992738;
  v11 = *(_DWORD *)(a2 + 4 * (v10 - (((v10 * (unint64_t)v5) >> 32) >> 10) * a1)) ^ 0xB7AE8AB6;
  v12 = v11 * v8 + 1064432081 - ((33154370 * v11) & 0x7EE3E3A2);
  v13 = (8 * ((v12 ^ 0x3F71F1D1) * (v12 ^ 0x3F71F1D1) - ((2 * (v12 ^ 0x3F71F1D1) * (v12 ^ 0x3F71F1D1)) & 0x27C2C12))
       + 166768712) ^ 0x9F0B048;
  v14 = (uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((242 * (v6 == 1535482273)) ^ v3)) - 12);
  *((_DWORD *)&STACK[0x8D0] + (97 * v6 + 1382207866) % 0x55Cu) = v12 ^ 0xA1440AF6 ^ (v13
                                                                                   - ((2 * v13) & 0xC12F4E30)
                                                                                   - 526932193);
  return v14();
}

uint64_t sub_18CB9E5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  uint64_t v64;
  int v65;
  uint64_t v66;
  int v67;

  v67 = (((v65 - 1658332939) & 0x62D821CA)
       + (((v64 + 268320724) * (v64 + 458225857)) ^ 0xEFF2FEBF)
       + ((2 * (v64 + 268320724) * (v64 + 458225857)) & 0xDFE5FD7E)
       - 1546677728)
      * (v64 + 458225857);
  *(_DWORD *)(*a64 + 4 * (v64 + 2085868788) - 0x5C13350208288733) = ((2 * v67) & 0xE2FDCAFE)
                                                                                    + (v67 ^ 0xF17EE57F)
                                                                                    - ((2
                                                                                      * (((2 * v67) & 0xE2FDCAFE)
                                                                                       + (v67 ^ 0xF17EE57F))
                                                                                      - 437902512) & 0x9BD5BFDC)
                                                                                    + 1088287126;
  return ((uint64_t (*)(void))(*(_QWORD *)(v66 + 8 * ((19 * (v64 == 3836746814)) ^ v65)) - 4))();
}

uint64_t sub_18CB9E6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,uint64_t a63)
{
  int a64;
  unsigned int v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;

  v66 = malloc_type_malloc((HIDWORD(a11) + a13 + a12 - ((2 * (HIDWORD(a11) + a13 + a12) + 703259226) & 0x5A200EA0) + 1107654781) ^ 0xAD100750, 0x100004077774924uLL);
  v72 = (a12 + 2006160853) < 0xEB3F423F;
  v66[a62 + HIDWORD(a11) - a64 + 144776599] = *(_BYTE *)(a60 - 0x8ED1C57AC03BA80);
  if ((a12 + 2006160853) >= 0xEB3F423F)
    v72 = (a12 + 2006160853) > 0xEB3F4240;
  return ((uint64_t (*)(_BYTE *, uint64_t, _QWORD, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 + 8 * ((1229 * (((-41 * (v64 ^ 0x49)) ^ v72) & 1)) ^ v64)) - 12))(v66, v67, HIDWORD(a11), v68, v69, v66, v70, v71, a9, a10, a11);
}

void sub_18CB9E818()
{
  JUMPOUT(0x18CB9E7B4);
}

uint64_t sub_18CB9E824(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  _BOOL4 v64;

  v64 = (a13 + 1779884717) < 0xE666245F;
  *(_BYTE *)(a6 + (a3 - 2064621751)) = *(_BYTE *)(a62 - 0xC2C3062343A3C93);
  if ((a13 + 1779884717) >= 0xE666245F)
    v64 = (a13 + 1779884717) > 0xE6662460;
  return (*(uint64_t (**)(void))(v63 + 8 * ((62 * v64) ^ (v62 + 840))))();
}

void sub_18CB9E8DC()
{
  JUMPOUT(0x18CB9E880);
}

uint64_t sub_18CB9E8E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  _BOOL4 v67;
  _BOOL4 v68;

  v65 = 347 * (v63 ^ 0x287u);
  v66 = v63 - 118;
  v67 = (a3 - 2035463796) < 0x1BCEA43;
  *(_BYTE *)(a6 + (v65 ^ 0x8C1B7690712DB853) + 0x73E4896F8ED2451BLL) = *(_BYTE *)(a63
                                                                                  - 0x511395B3EF1E789
                                                                                  + (v65 ^ 0x8C1B7690712DB853)
                                                                                  + 0x73E4896F8ED2451BLL)
                                                                       - ((2
                                                                         * *(_BYTE *)(a63
                                                                                    - 0x511395B3EF1E789
                                                                                    + (v65 ^ 0x8C1B7690712DB853)
                                                                                    + 0x73E4896F8ED2451BLL)) & 0x6A)
                                                                       + 53;
  v68 = (a3 - 2035463796) > 0x1BCEA44;
  if (!v67)
    v67 = v68;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v64 + 8 * ((1227 * !v67) ^ v66)) - 8))(1469728142);
}

void sub_18CB9E9E4()
{
  JUMPOUT(0x18CB9E974);
}

uint64_t sub_18CB9E9EC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3
                                                               + 8
                                                               * ((((v2 ^ (v1 - 16)) > ((a1 + 709) ^ 0x494A2838u) - 1229597988)
                                                                 * (10 * ((a1 + 709) ^ 0x524) - 697)) ^ (a1 + 709)))
                                                   - 12))(53, 53);
}

uint64_t sub_18CB9EBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int a66;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unint64_t v132;
  int v133;
  unsigned int v134;
  int v135;
  int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  unsigned int v188;
  int v189;
  int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  unsigned int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  unsigned int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  unsigned int v237;
  int v238;
  int v239;
  unsigned int v240;
  int v241;
  int v242;
  int v243;
  unsigned int v244;
  int v245;
  unsigned int v246;
  int v247;
  int v248;
  unsigned int v249;
  int v250;
  int v251;
  int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  int v256;
  unsigned int v257;
  int v258;
  int v259;
  unsigned int v260;
  int v261;
  int v262;
  int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  unsigned int v276;
  int v277;
  unsigned int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  int v298;
  int v299;
  unsigned int v300;
  int v301;
  int v302;
  unsigned int v303;
  unsigned int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  unsigned int v310;
  int v311;
  int v312;
  unsigned int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  int v318;
  unsigned int v319;
  int v320;
  int v321;
  int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  unsigned int v348;
  unsigned int v349;
  int v350;
  unsigned int v351;
  int v352;
  unsigned int v353;
  unsigned int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  unsigned int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  unsigned int v379;
  int v380;
  unsigned int v381;
  int v382;
  int v383;
  unsigned int v384;
  int v385;
  unsigned int v386;
  unsigned int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  int v406;
  int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  int v414;
  unsigned int v415;
  int v416;
  unsigned int v417;
  unsigned int v418;
  int v419;
  int v420;
  unsigned int v421;
  int v422;
  int v423;
  unsigned int v424;
  int v425;
  int v426;
  int v427;
  int v428;
  int v429;
  int v430;
  unsigned int v431;
  unsigned int v432;
  int v433;
  unsigned int v434;
  unsigned int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  int v440;
  unsigned int v441;
  int v442;
  int v443;
  int v444;
  unsigned int v445;
  int v446;
  int v447;
  int v448;
  unsigned int v449;
  unsigned int v450;
  int v451;
  int v452;
  unsigned int v453;
  int v454;
  unsigned int v455;
  int v456;
  int v457;
  unsigned int v458;
  int v459;
  unsigned int v460;
  int v461;
  int v462;
  int v463;
  int v464;
  int v465;
  unsigned int v466;
  unsigned int v467;
  unsigned int v468;
  int v469;
  unsigned int v470;
  unsigned int v471;
  int v472;
  unsigned int v473;
  int v474;
  int v475;
  int v476;
  int v477;
  int v478;
  unsigned int v479;
  int v480;
  int v481;
  unsigned int v482;
  int v483;
  unsigned int v484;
  int v485;
  int v486;
  int v487;
  unsigned int v488;
  unsigned int v489;
  int v490;
  int v491;
  unsigned int v492;
  int v493;
  int v494;
  unsigned int v495;
  unsigned int v496;
  int v497;
  int v498;
  int v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  int v510;
  int v511;
  int v512;
  int v513;
  unsigned int v514;
  unsigned int v515;
  unsigned int v516;
  unsigned int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  int v522;
  unsigned int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  unsigned int v529;
  unsigned int v530;
  unsigned int v531;
  unsigned int v532;
  unsigned int v533;
  int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  int v538;
  int v539;
  unsigned int v540;
  unsigned int v541;
  unsigned int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  unsigned int v547;
  int v548;
  int v549;
  int v550;
  unsigned int v551;
  unsigned int v552;
  int v553;
  unsigned int v554;
  int v555;
  unsigned int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  int v561;
  int v562;
  int v563;
  int v564;
  unsigned int v565;
  unsigned int v566;
  unsigned int v567;
  int v568;
  unsigned int v569;
  int v570;
  int v571;
  unsigned int v572;
  int v573;
  int v574;
  int v575;
  int v576;
  unsigned int v577;
  int v578;
  int v579;
  int v580;
  int v581;
  unsigned int v582;
  unsigned int v583;
  unsigned int v584;
  int v585;
  int v586;
  int v587;
  int v588;
  unsigned int v589;
  unsigned int v590;
  unsigned int v591;
  int v592;
  int v593;
  int v594;
  unsigned int v595;
  int v596;
  int v597;
  unsigned int v598;
  unsigned int v599;
  int v600;
  unsigned int v601;
  int v602;
  int v603;
  unsigned int v604;
  int v605;
  unsigned int v606;
  int v607;
  int v608;
  int v609;
  int v610;
  int v611;
  int v612;
  unsigned int v613;
  int v614;
  int v615;
  unsigned int v616;
  unsigned int v617;
  unsigned int v618;
  int v619;
  int v620;
  int v621;
  unsigned int v622;
  int v623;
  unsigned int v624;
  unsigned int v625;
  int v626;
  int v627;
  int v628;
  int v629;
  int v630;
  int v631;
  int v632;
  unsigned int v633;
  int v634;
  int v635;
  int v636;
  int v637;
  int v638;
  int v639;
  unsigned int v640;
  int v641;
  int v642;
  unsigned int v643;
  int v644;
  int v645;
  int v646;
  unsigned int v647;
  unsigned int v648;
  unsigned int v649;
  unsigned int v650;
  int v651;
  int v652;
  int v653;
  int v654;
  unsigned int v655;
  int v656;
  unsigned int v657;
  unsigned int v658;
  int v659;
  unsigned int v660;
  unsigned int v661;
  int v662;
  unsigned int v663;
  unsigned int v664;
  int v665;
  unsigned int v666;
  int v667;
  unsigned int v668;
  int v669;
  unsigned int v670;
  int v671;
  int v672;
  int v673;
  unsigned int v674;
  unsigned int v675;
  int v676;
  unsigned int v677;
  int v678;
  int v679;
  int v680;
  unsigned int v681;
  int v682;
  unsigned int v683;
  int v684;
  unsigned int v685;
  int v686;
  int v687;
  unsigned int v688;
  int v689;
  int v690;
  unsigned int v691;
  int v692;
  int v693;
  int v694;
  unsigned int v695;
  int v696;
  int v697;
  int v698;
  int v699;
  int v700;
  int v701;
  unsigned int v702;
  int v703;
  int v704;
  int v705;
  unsigned int v706;
  unsigned int v707;
  int v708;
  unsigned int v709;
  unsigned int v710;
  int v711;
  int v712;
  int v713;
  unsigned int v714;
  unsigned int v715;
  int v716;
  int v717;
  int v718;
  int v719;
  unsigned int v720;
  unsigned int v721;
  unsigned int v722;
  unsigned int v723;
  unsigned int v724;
  unsigned int v725;
  int v726;
  unsigned int v727;
  int v728;
  int v729;
  unsigned int v730;
  int v731;
  unsigned int v732;
  int v733;
  int v734;
  unsigned int v735;
  int v736;
  int v737;
  int v738;
  int v739;
  unsigned int v740;
  unsigned int v741;
  unsigned int v742;
  unsigned int v743;
  unsigned int v744;
  unsigned int v745;
  int v746;
  int v747;
  int v748;
  int v749;
  int v750;
  int v751;
  unsigned int v752;
  unsigned int v753;
  unsigned int v754;
  unsigned int v755;
  unsigned int v756;
  int v757;
  unsigned int v758;
  unsigned int v759;
  unsigned int v760;
  int v761;
  int v762;
  int v763;
  unsigned int v764;
  int v765;
  unsigned int v766;
  unsigned int v767;
  int v768;
  unsigned int v769;
  int v770;
  unsigned int v771;
  unsigned int v772;
  int v773;
  unsigned int v774;
  unsigned int v775;
  int v776;
  int v777;
  int v778;
  unsigned int v779;
  int v780;
  unsigned int v781;
  int v782;
  int v783;
  int v784;
  int v785;
  unsigned int v786;
  unsigned int v787;
  int v788;
  unsigned int v789;
  unsigned int v790;
  unsigned int v791;
  unsigned int v792;
  unsigned int v793;
  int v794;
  int v795;
  unsigned int v796;
  int v797;
  int v798;
  int v799;
  unsigned int v800;
  unsigned int v801;
  int v802;
  unsigned int v803;
  int v804;
  unsigned int v805;
  int v806;
  int v807;
  unsigned int v808;
  int v809;
  unsigned int v810;
  int v811;
  int v812;
  int v813;
  int v814;
  unsigned int v815;
  int v816;
  int v817;
  unsigned int v818;
  unsigned int v819;
  int v820;
  unsigned int v821;
  int v822;
  int v823;
  int v824;
  int v825;
  int v826;
  int v827;
  unsigned int v828;
  int v829;
  unsigned int v830;
  int v831;
  unsigned int v832;
  unsigned int v833;
  int v834;
  uint64_t v836;
  unint64_t v837;
  unint64_t v838;
  unint64_t v839;
  unint64_t v840;
  unint64_t v841;
  unint64_t v842;
  unint64_t v843;
  uint64_t v844;
  int v845;
  uint64_t v846;
  unsigned int v847;
  uint64_t v848;
  int v849;
  uint64_t v850;
  unsigned int v851;
  unint64_t v852;
  unint64_t v853;
  uint64_t v854;
  uint64_t v855;
  unint64_t v856;
  unint64_t v857;
  int v858;
  unint64_t v859;
  uint64_t v860;
  int v861;
  uint64_t v862;
  unint64_t v863;
  uint64_t v864;
  uint64_t v865;
  uint64_t v866;
  unint64_t v867;
  int v868;
  uint64_t v869;
  unsigned int v870;
  uint64_t v871;
  int v872;
  unsigned int v873;
  unint64_t v874;
  unsigned int v875;
  unsigned int v876;
  int v877;
  int v878;
  int v879;
  int v880;
  int v881;
  unsigned __int8 v882;
  int v883;
  int v884;
  int v885;

  HIDWORD(v864) = v67;
  HIDWORD(v866) = *(unsigned __int8 *)(a6 + (a20 - 1755578127));
  v71 = (v66 - 44108220) & 0x6FFBD73F;
  v72 = ((((a20 - 1755578127) ^ 1) - 312041437 + (~(2 * ((a20 - 1755578127) ^ 1)) | 0x2532BFB9) + 1) ^ 0xED66A023)
      + ((v71 - 1834668344) & (2 * a20))
      + ((2 * ((v71 - 1834668344) & (2 * a20))) ^ 4)
      - 2;
  v73 = ((2 * v72) & 0xBDFE77D6) + (v72 ^ 0x5EFF3BEB);
  v883 = *(unsigned __int8 *)(a6 + v73 - 1593785322);
  v884 = *(unsigned __int8 *)(a6 + v73 - 1593785321);
  v74 = *(unsigned __int8 *)(a6 + v73 - 1593785320);
  v75 = *(unsigned __int8 *)(a6 + v73 - 1593785319);
  v881 = *(unsigned __int8 *)(a6 + v73 - 1593785318);
  v882 = *(_BYTE *)(a6 + v73 - 1593785317);
  v76 = *(unsigned __int8 *)(a6 + v73 - 1593785316);
  v77 = *(unsigned __int8 *)(a6 + v73 - 1593785315);
  v78 = *(unsigned __int8 *)(a6 + v73 - 1593785314);
  LODWORD(v865) = v68 + (v70 ^ v68) - 2 * (((v70 ^ v68) + 1073741792) & 0x2D10075E ^ v70 & 0xE) - 32;
  LODWORD(v866) = *(unsigned __int8 *)(a6 + v73 - 1593785313);
  v79 = *(unsigned __int8 *)(a6 + v73 - 1593785312);
  v80 = *(unsigned __int8 *)(a6 + v73 - 1593785311);
  v81 = *(unsigned __int8 *)(a6 + v73 - 1593785310);
  v879 = *(unsigned __int8 *)(a6 + v73 - 1593785309);
  v82 = *(unsigned __int8 *)(a6 + v73 - 1593785308);
  v83 = *(unsigned __int8 *)(a6 + v73 - 1593785307);
  v84 = *(unsigned __int8 *)(a6 + v73 - 1593785306);
  v85 = *(unsigned __int8 *)(a6 + v73 - 1593785305);
  v86 = *(unsigned __int8 *)(a6 + v73 - 1593785304);
  v878 = *(unsigned __int8 *)(a6 + v73 - 1593785303);
  v880 = *(unsigned __int8 *)(a6 + v73 - 1593785302);
  v877 = *(unsigned __int8 *)(a6 + v73 - 1593785301);
  v87 = *(unsigned __int8 *)(a6 + v73 - 1593785300);
  v88 = *(unsigned __int8 *)(a6 + v73 - 1593785299);
  v89 = *(unsigned __int8 *)(a6 + v73 - 1593785296);
  v90 = *(unsigned __int8 *)(a6 + v73 - 1593785295);
  v91 = *(unsigned __int8 *)(a6 + v73 - 1593785294);
  HIDWORD(v865) = *(unsigned __int8 *)(a6 + v73 - 1593785323);
  v92 = *(unsigned __int8 *)(a6 + v73 - 1593785293);
  LODWORD(v836) = v73 + 161792835;
  LODWORD(v862) = (v71 - 739297337) | 0x8002444;
  v93 = ((((v862 ^ 0x494A24FE) + (v87 ^ v69) - ((2 * (v87 ^ v69)) & 0x16A)) << 16)
       - 393216) ^ 0x9B50000;
  v94 = ((((v88 ^ v69) + 2943308 - ((2 * (v88 ^ v69)) & 0x5C)) << 8) - 7680) ^ 0x2CE92E00;
  v842 = __PAIR64__(v90, v89);
  v95 = (v93 + 1371031689 - ((2 * v93) & 0x23700000)) ^ 0x51B84889 | (v94 - 1567651594 - ((2 * v94) & 0x451F1000)) ^ 0xA28F88F6;
  v96 = v95 - 2106260844 - ((2 * v95) & 0x4EA0528);
  HIDWORD(v836) = *(unsigned __int8 *)(a6 + v73 - 1593785298);
  v97 = v96 ^ 0x82750294 | ((BYTE4(v836) ^ v69) - 389958789 - ((2 * (HIDWORD(v836) ^ v69)) & 0xF6)) ^ 0xE8C1B37B;
  v876 = v97 - ((2 * v97) & 0xF1BA709E) + 2027763791;
  v98 = (v90 ^ v69) - ((2 * (v90 ^ v69)) & 0x15A);
  v837 = __PAIR64__(v87, *(unsigned __int8 *)(a6 + v73 - 1593785297));
  v99 = (v837 ^ v69) + 1161098812 - ((2 * (v837 ^ v69)) & 0x78);
  v100 = (((v876 << 8) ^ 0xDD384F00) + 1169129742 - ((2 * ((v876 << 8) ^ 0xDD384F00)) & 0x8B5F0200)) ^ 0x45AF810E | v99 ^ 0x4534F63C;
  v101 = v100 - 1084912426 - ((2 * v100) & 0x7EAB19AC);
  v839 = __PAIR64__(v84, v82);
  v102 = (v82 ^ v69) - ((2 * (v82 ^ v69)) & 0x15A);
  v843 = __PAIR64__(v91, v76);
  v841 = __PAIR64__(v77, v74);
  v103 = (v77 ^ v69) - ((2 * (v77 ^ v69)) & 0x2C);
  v104 = (v74 ^ v69) - ((2 * (v74 ^ v69)) & 0x1F0);
  v105 = ((((v76 ^ v69) - ((2 * (v76 ^ v69)) & 0x8E)) << 16) + 289865728) ^ 0x11470000;
  v106 = (v105 + 730830994 - ((2 * v105) & 0x571E0000)) ^ 0x2B8F9892 | ((((v103 << 8) - 670034432) ^ 0xD8101600)
                                                                      - 420801044
                                                                      - ((2 * (((v103 << 8) - 670034432) ^ 0xD8101600)) & 0x4DD62A00)) ^ 0xE6EB15EC;
  v107 = v106 - 333420215 - ((2 * v106) & 0x5840D292);
  v838 = __PAIR64__(v88, v79);
  v108 = (v79 ^ v69) - ((2 * (v79 ^ v69)) & 0x19E);
  v109 = ((((v83 ^ v69) - ((2 * (v83 ^ v69)) & 0x15E)) << 8) + 2041097984) ^ 0x79A8AF00;
  v110 = ((((v102 << 16) + 229441536) ^ 0xDAD0000)
        - 1642230756
        - ((2 * (((v102 << 16) + 229441536) ^ 0xDAD0000)) & 0x3C3A0000)) ^ 0x9E1D8C1C | (v109
                                                                                       - 1981487533
                                                                                       - ((2 * v109) & 0x13C9CC00)) ^ 0x89E4E653;
  v875 = v110 - 82145385 - ((2 * v110) & 0x76351F2E);
  v111 = v875 ^ 0xFB1A8F97 | ((v84 ^ v69) - 1668944810 - ((2 * (v84 ^ v69)) & 0xAC)) ^ 0x9C85EC56;
  v112 = (((v89 ^ v69) - ((2 * (v89 ^ v69)) & 0x60)) << 16) + 573571072;
  v113 = ((((v98 << 8) - 1090409216) ^ 0xBF01AD00)
        - 495093611
        - ((2 * (((v98 << 8) - 1090409216) ^ 0xBF01AD00)) & 0x44FAF000)) ^ 0xE27D7895 | ((v112 ^ 0x22300000)
                                                                                       - 926575216
                                                                                       - ((2 * v112) & 0x118A0000)) ^ 0xC8C59590;
  v870 = v113 + 1877118556 - ((2 * v113) & 0x5FC51CB8);
  v114 = v870 ^ 0x6FE28E5C | ((v91 ^ v69) - 248597445 - ((2 * (v91 ^ v69)) & 0x76)) ^ 0xF12EB43B;
  LODWORD(a44) = v114 - ((2 * v114) & 0x4504537A) + 578955709;
  v115 = (((v111 - ((2 * v111) & 0xBB98E2)) << 8) - 573804288) ^ 0xDDCC7100;
  v840 = __PAIR64__(v83, v80);
  v867 = __PAIR64__(v86, v85);
  v872 = (v85 ^ v69) - 1599528582 - ((2 * (v85 ^ v69)) & 0xF4);
  v116 = (v115 + 134708267 - ((2 * v115) & 0x100EF800)) ^ 0x8077C2B | v872 ^ 0xA0A9217A;
  v117 = v116 - 45500119 - ((2 * v116) & 0xFA937252);
  v863 = __PAIR64__(v78, v75);
  v118 = (v75 ^ v69) - ((2 * (v75 ^ v69)) & 0x1CC);
  v119 = (v86 ^ v69) - ((2 * (v86 ^ v69)) & 0xFFFFFFF3);
  v120 = (((v101 << 15) ^ 0xC66B0000) - 1891050501 - ((2 * ((v101 << 15) ^ 0xC66B0000)) & 0x1E910000)) ^ 0x8F48DBFB | (v96 >> 9) ^ 0x413A81;
  v121 = (v878 ^ v69) - ((2 * (v878 ^ v69)) & 0x16E);
  v122 = v107 ^ 0xEC206949 | ((v78 ^ v69) - 422485461 - ((2 * (v78 ^ v69)) & 0x56)) ^ 0xE6D1622B;
  v123 = (((v122 - ((2 * v122) & 0x9C26A6)) << 8) + 1309889280) ^ 0x4E135300;
  v124 = (v866 ^ v69) - 296281511 - ((2 * (v866 ^ v69)) & 0xB2);
  v125 = (v123 + 106165355 - ((2 * v123) & 0xCA7E800)) ^ 0x653F46B | v124 ^ 0xEE571A59;
  v126 = v125 + 1693573248 - ((2 * v125) & 0xC9E3C1EE) + 119;
  v127 = (BYTE4(v866) ^ v69) - ((2 * (HIDWORD(v866) ^ v69)) & 0x3A);
  LODWORD(v864) = v92;
  HIDWORD(a45) = (v92 ^ v69) + 872906846 - ((2 * (v92 ^ v69)) & 0xBC);
  v128 = ((((_DWORD)a44 << 8) ^ 0x8229BD00) + 1454523172 - ((2 * (((_DWORD)a44 << 8) ^ 0x8229BD00)) & 0xAD648600)) ^ 0x56B24324 | HIDWORD(a45) ^ 0x3407805E;
  v129 = ((((v80 ^ v69) - ((2 * (v80 ^ v69)) & 0x1F0)) << 8) + 391772160) ^ 0x1759F800;
  v130 = ((((v108 << 16) + 1137639424) ^ 0x43CF0000)
        - 221755271
        - ((2 * (((v108 << 16) + 1137639424) ^ 0x43CF0000)) & 0x65900000)) ^ 0xF2C84879 | (v129
                                                                                         - 2118204172
                                                                                         - ((2 * v129) & 0x37D8800)) ^ 0x81BEC4F4;
  v131 = v130 + 1420560198 - ((2 * v130) & 0x29580E8C);
  LODWORD(v871) = v101;
  HIDWORD(v132) = v99 ^ 0x3C;
  LODWORD(v132) = v101 ^ 0xBF558C80;
  v868 = v132 >> 7;
  HIDWORD(v862) = v81;
  v133 = v131 ^ 0x54AC0746 | ((v81 ^ v69) + 547769213 - ((2 * (v81 ^ v69)) & 0xFA)) ^ 0x20A64B7D;
  v134 = (((v133 - ((2 * v133) & 0xE76712)) << 8) - 206337792) ^ 0xF3B38900;
  v135 = (BYTE4(v865) ^ v69) - ((2 * (HIDWORD(v865) ^ v69)) & 0xF8);
  v136 = v128 + 1859689344 + (~(2 * v128) | 0x224EC845) + 94;
  v137 = ((v136 << 15) ^ 0x4DEE8000) - 1750839527 - ((2 * ((v136 << 15) ^ 0x4DEE8000)) & 0x2F480000);
  v138 = ((((v118 << 8) - 591534592) ^ 0xDCBDE600)
        + 1515988771
        - ((2 * (((v118 << 8) - 591534592) ^ 0xDCBDE600)) & 0x34B84E00)) ^ 0x5A5C2723 | ((((v104 << 16) + 1358430208) ^ 0x50F80000)
                                                                                       - 164811462
                                                                                       - ((2
                                                                                         * (((v104 << 16) + 1358430208) ^ 0x50F80000)) & 0x6C5A0000)) ^ 0xF62D2D3A;
  v139 = v138 - 589348010 - ((2 * v138) & 0xB9BE86AC);
  v140 = (v879 ^ 0x35) - 958722577 - ((2 * (v879 ^ 0x35)) & 0x1DE);
  v873 = (((v101 << 14) ^ 0x63358000) - 555584322 - ((2 * ((v101 << 14) ^ 0x63358000)) & 0xBDC48000)) ^ 0xDEE274BE | (v96 >> 10) ^ 0x209D40;
  HIDWORD(v132) = v124 ^ 0x59;
  LODWORD(v132) = v126 ^ 0x64F1E080;
  v141 = ((((v135 << 8) - 2034336768) ^ 0x86BE7C00)
        - 192043225
        - ((2 * (((v135 << 8) - 2034336768) ^ 0x86BE7C00)) & 0x691B4E00)) ^ 0xF48DA727 | ((((v127 << 16) + 320667648) ^ 0x131D0000)
                                                                                        + 196175249
                                                                                        - ((2
                                                                                          * (((v127 << 16) + 320667648) ^ 0x131D0000)) & 0x17620000)) ^ 0xBB16591;
  v142 = (((v101 << 13) ^ 0xB19AC000) - 1277271007 - ((2 * ((v101 << 13) ^ 0xB19AC000)) & 0x67BCC000)) ^ 0xB3DE6421 | (v96 >> 11) ^ 0x104EA0;
  v143 = (v877 ^ 0x35) + 1563275273 - ((2 * (v877 ^ 0x35)) & 0x12);
  v144 = ((v134 - 978681429 - ((2 * v134) & 0x8B550200)) ^ 0xC5AA81AB | v140 ^ 0xC6DB0DEF)
       + 641300480
       - ((2 * ((v134 - 978681429 - ((2 * v134) & 0x8B550200)) ^ 0xC5AA81AB | v140 ^ 0xC6DB0DEF)) & 0x4C72F020)
       + 16;
  v145 = v139 ^ 0xDCDF4356 | ((v881 ^ 0x35) + 1556948323 - ((2 * (v881 ^ 0x35)) & 0xC6)) ^ 0x5CCD2563;
  v146 = (((v145 - ((2 * v145) & 0xC76358)) << 8) + 1672588288) ^ 0x63B1AC00;
  v147 = ((((v880 ^ 0x35) - ((2 * (v880 ^ 0x35)) & 0x9C)) << 8) + 1477463552) ^ 0x58104E00;
  v148 = v143 ^ 0x5D2DB009 | (v147 + 249970877 - ((2 * v147) & 0x1DCC8000)) ^ 0xEE640BD;
  v149 = ((((v121 << 16) - 1028194304) ^ 0xC2B70000)
        + 627837841
        - ((2 * (((v121 << 16) - 1028194304) ^ 0xC2B70000)) & 0x4AD80000)) ^ 0x256C0B91 | ((((v119 << 24) + 2030043136) ^ 0x79000000)
                                                                                         - 523099187
                                                                                         - ((((v119 << 24) + 2030043136) ^ 0x79000000) >> 29 << 30)) ^ 0xE0D223CD;
  v150 = v149 + 483716275 - ((2 * v149) & 0x39A9D966);
  v151 = v136;
  v152 = (((v126 << 14) ^ 0x783DC000) - 635489731 - ((2 * ((v126 << 14) ^ 0x783DC000)) & 0xB43E0000)) ^ 0xDA1F323D | (v107 >> 10) ^ 0x3B081A;
  v153 = v150 ^ 0x1CD4ECB3 | (v148 + 601699076 - ((2 * v148) & 0x47BA6608)) ^ 0x23DD3304;
  v154 = (((v136 << 13) ^ 0x137BA000) + 396185449 - ((2 * ((v136 << 13) ^ 0x137BA000)) & 0x2F3A8000)) ^ 0x179D4F69 | (v870 >> 11) ^ 0xDFC51;
  v851 = v126;
  v155 = ((v126 >> 3) ^ 0xC980F1E)
       + ((v876 >> 2) ^ 0xE0889AFC)
       + ((v126 >> 2) & 0x3FF399FE ^ 0xE6CFE7C3)
       + ((v132 >> 7) ^ 0x3C7BDFFF)
       + ((2 * (v132 >> 7)) & 0x78F7BFFE)
       + ((2 * (v876 >> 2)) & 0x7D7FA9DE ^ 0x3C6E8806)
       + (v152 ^ 0xFF57BDFD)
       + ((2 * v152) & 0xFEAF7BFA)
       + (v142 ^ 0x9C942081)
       + (v120 ^ 0x1100684E);
  v156 = (2 * v120) & 0xDDFF2F62;
  v157 = (2 * v142) & 0xC6D7BEFC;
  v158 = v153 + 1762465152 + (~(2 * v153) | 0x2DE5D44D) + 90;
  v159 = v155 - v157;
  v160 = v154 ^ 0xE5FEDBF7;
  v161 = (2 * v154) & 0xCBFDB7EE;
  v162 = v159 - v156 + 2 - ((2 * (v159 - v156 + 2) + 799253130) & 0x56344334) + 1122759391;
  v163 = v137 ^ 0x97A44F19 | (v870 >> 9) ^ 0x37F147;
  HIDWORD(v132) = v140 ^ 0xFFFFFFEF;
  LODWORD(v132) = v144 ^ 0x26397800;
  v164 = v132 >> 7;
  v165 = (v146 - 30776529 - ((2 * v146) & 0xFC54C600)) ^ 0xFE2A632F | v882 ^ 0x35;
  v166 = v165 - 1421236366 - ((2 * v165) & 0x56934EE4);
  v167 = (((v117 << 14) ^ 0x6E4A4000) - 274126617 - ((2 * ((v117 << 14) ^ 0x6E4A4000)) & 0xDF520000)) ^ 0xEFA928E7 | (v875 >> 10) ^ 0x3EC6A3;
  v168 = (((v144 << 14) ^ 0x5E040000) - 1352951788 - ((2 * ((v144 << 14) ^ 0x5E040000)) & 0x5EB70000)) ^ 0xAF5B9814 | (v131 >> 10) ^ 0x152B01;
  HIDWORD(v132) = v872 ^ 0x7A;
  LODWORD(v132) = v117 ^ 0xFD49B900;
  v861 = v166;
  v169 = (v166 ^ 0x805386E8 ^ v162)
       + (v166 ^ 0xAB49A772)
       - 1149331840
       - ((2 * ((v166 ^ 0x805386E8 ^ v162) + (v166 ^ 0xAB49A772))) & 0x76FD2D5E)
       + 47;
  v170 = ((v132 >> 7) ^ 0x6FFDFFFB)
       + ((2 * (v132 >> 7)) & 0xDFFBFFF6)
       + (v167 ^ 0x22318001)
       - ((2 * v167) & 0xBB9CFFFC)
       + 1;
  HIDWORD(v132) = v169 ^ 0x696AF;
  LODWORD(v132) = v169 ^ 0xBB780000;
  v171 = (v132 >> 19) - ((2 * (v132 >> 19)) & 0x371C8EB8);
  v172 = v160
       + (v163 ^ 0x75E8ECBD)
       + ((2 * v163) & 0xEBD1D97A)
       + v161
       - 2
       * ((v160 + (v163 ^ 0x75E8ECBD) + ((2 * v163) & 0xEBD1D97A) + v161 + 605566796) & 0x4EA72F16 ^ (v160 + (v163 ^ 0x75E8ECBD) + ((2 * v163) & 0xEBD1D97A) + v161) & 2);
  HIDWORD(v132) = v169 ^ 0x96AF;
  LODWORD(v132) = v169 ^ 0xBB7E0000;
  v173 = (v132 >> 17) - ((2 * (v132 >> 17)) & 0x76957D8) - 2085311508;
  v174 = ((v144 >> 3) ^ 0xBA98D8F2)
       + ((v144 >> 2) & 0x3CBFEFE0 ^ 0x88E4E00)
       + (v164 ^ 0x1F6CBFAF)
       + ((2 * v164) & 0x3ED97F5E)
       + (v168 ^ 0x51ACFDF3)
       + ((2 * v168) & 0xA359FBE6)
       - 796505490
       + ((v172 - 222337440) ^ (a44 >> 2) ^ 0x4607A57B);
  v175 = v174 - 882405790 - ((2 * v174) & 0x96CF1CC4);
  HIDWORD(v132) = v169 ^ 0x296AF;
  LODWORD(v132) = v169 ^ 0xBB7C0000;
  v176 = v132 >> 18;
  HIDWORD(v132) = v158 ^ 0x115D9;
  LODWORD(v132) = v150 ^ 0x1CD40000;
  v177 = v132 >> 18;
  v178 = v169;
  v179 = ((v171 + 462309212) ^ (v169 >> 10) ^ v173 ^ 0x98143315)
       + ((v170 - ((2 * v170 + 1537277958) & 0x6563CAD8) + 545416559) ^ (v117 >> 3) ^ 0xAD18D249);
  v180 = (v141 + 1951841638 - ((2 * v141) & 0x68AD7ACC)) ^ 0x7456BD66 | ((v883 ^ 0x35)
                                                                       - 2122147913
                                                                       - ((2 * (v883 ^ 0x35)) & 0x16E)) ^ 0x818297B7;
  HIDWORD(v848) = v144;
  v181 = ((4 * v144) & 0x3A5AFFCC ^ 0x1840E040)
       + ((2 * v144) ^ 0x515F8FC7)
       + (v179 ^ 0x7F6FDA8F)
       + ((2 * v179) & 0xFEDFB51E);
  v182 = v181 - ((2 * v181 - 960148716) & 0xCD59F396) - 904945835;
  v183 = (((v180 - ((2 * v180) & 0xF8DC8)) << 8) - 2017008640) ^ 0x87C6E400;
  HIDWORD(v132) = v143 ^ 9;
  LODWORD(v132) = v158 ^ 0x690D1580;
  v184 = v132 >> 7;
  HIDWORD(v132) = v169 ^ 0x2F;
  LODWORD(v132) = v169 ^ 0xBB7E9680;
  v185 = v132 >> 7;
  HIDWORD(v132) = HIDWORD(a45) ^ 0x5E;
  LODWORD(v132) = v151 ^ 0x6ED89B80;
  v186 = v132 >> 7;
  HIDWORD(v132) = v175 ^ 0x78E62;
  LODWORD(v132) = v175 ^ 0xCB600000;
  v187 = v132 >> 19;
  v188 = v175;
  HIDWORD(v132) = v175 ^ 0x18E62;
  LODWORD(v132) = v175 ^ 0xCB660000;
  v189 = v132 >> 17;
  v190 = v182 ^ 0xF9CB;
  v191 = v182 ^ 0x66AC0000;
  HIDWORD(v132) = v182 ^ 0xF9CB;
  LODWORD(v132) = v182 ^ 0x66AC0000;
  v192 = (v189 ^ 0x25FDCF77) + (v187 ^ 0xDB762F75) + ((2 * v187) & 0xB6EC5EEA) + ((2 * v189) & 0x4BFB9EEE);
  v193 = ((v158 >> 3) ^ 0xDBDEDDC8)
       + (v177 ^ 0xAFF8CEBF)
       + ((2 * v177) & 0x5FF19D7E)
       + ((2 * (v158 >> 3)) & 0x2DFEFEE6 ^ 0x8424466)
       + 2030547406
       + ((v192 - 426128919 - ((2 * v192 - 48758232) & 0xD01B91AA)) ^ (v175 >> 10) ^ 0xE83F1136);
  v194 = (v184 ^ 0xFFF19BD2) + ((2 * v184) & 0xFFE337A4) + (v193 ^ 0x85000600) - ((2 * v193) & 0xF5FFF3FE) + 1;
  v195 = (((v151 << 14) ^ 0x26F74000) + 1576596949 - ((2 * ((v151 << 14) ^ 0x26F74000)) & 0xBBF18000)) ^ 0x5DF8F5D5 | (v870 >> 10) ^ 0x1BF8A3;
  LODWORD(v850) = v117 ^ 0xFD49B929;
  v196 = (v117 ^ 0x864B21FB ^ (v194 - ((2 * v194 - 165888934) & 0xF60531A4) - 166660353)) + (v117 ^ 0xFD49B929);
  v197 = v196 + 612324503 - ((2 * v196) & 0x48FEA92E);
  v198 = v182;
  v199 = ((v182 >> 10) ^ 0xABE657E1)
       + ((v182 >> 9) & 0x7FF9BE ^ 0x33503C)
       + 1409286945
       + (((v132 >> 17) - ((2 * (v132 >> 17)) & 0xEFCEEF6E) + 2011658167) ^ (v182 >> 19) ^ (((v182 << 13) ^ 0x9F396000)
                                                                                          - ((2
                                                                                            * ((v182 << 13) ^ 0x9F396000)) & 0xA44B8000)
                                                                                          - 769275996) ^ 0xA5C2BCC6);
  v852 = __PAIR64__(v151, v158);
  v200 = (v178 >> 3) ^ 0x69B32C28;
  v201 = v178;
  v202 = (v178 >> 2) & 0x3DB9FDFA ^ 0x2C99A5AA;
  v203 = ((v871 >> 3) ^ 0x86E699A2)
       + (v868 ^ 0x7C7FEEF7)
       + ((2 * v868) & 0xF8FFDDEE)
       + ((v871 >> 2) & 0x1DE7AF8E ^ 0xF23ADCFB)
       + ((2 * v158) ^ 0x9E1B74D)
       + ((4 * v158) & 0xB7F739FC ^ 0xA4341164)
       + (v873 ^ 0x848805CC)
       - ((2 * v873) & 0xF6EFF466)
       + (v199 ^ 0x92CB0045)
       - ((2 * v199) & 0xDA69FF74)
       + 4;
  v204 = v203 - ((2 * v203 - 28669060) & 0xC16989AE) + 1608125077;
  v205 = ((v151 >> 3) ^ 0x8DCF3B1E)
       + (v186 ^ 0xE83EF1BD)
       + ((2 * v186) & 0xD07DE37A)
       + ((v151 >> 2) & 0x3FD7AF34 ^ 0xE469D9CB)
       + (v195 ^ 0xE506FE84)
       - ((2 * v195) & 0x35F202F6)
       + 3;
  HIDWORD(v132) = v197 ^ 0x75497;
  LODWORD(v132) = v197 ^ 0x24780000;
  v206 = (v132 >> 19) - ((2 * (v132 >> 19)) & 0x31DCE3E0) - 1729203728;
  HIDWORD(v132) = v197 ^ 0x15497;
  LODWORD(v132) = v197 ^ 0x247E0000;
  v207 = ((v197 >> 10) ^ 0x30583FF5)
       + ((v197 >> 9) & 0x5DBFBE ^ 0xFFEFC055)
       - 810623007
       + (v206 ^ ((v132 >> 17) - ((2 * (v132 >> 17)) & 0xC40539F8) + 1644338428) ^ 0xFAECED0C);
  v208 = (v207 - ((2 * v207) & 0xBE17B274) - 552871622) ^ (v205 - ((2 * v205 + 1699466928) & 0x84A3A020) - 185092248);
  HIDWORD(v132) = v204 ^ 0x4C4D7;
  LODWORD(v132) = v204 ^ 0x60B00000;
  v209 = (v132 >> 19) - ((2 * (v132 >> 19)) & 0x16FB976A) + 192793525;
  v210 = (v185 ^ 0x5D3BDFF3) + v200 + (v176 ^ 0xEB2E1E3F) + v202 + ((2 * v185) & 0xBA77BFE6) + ((2 * v176) & 0xD65C3C7E);
  v211 = v210 - ((2 * v210 + 1903297954) & 0xFDB12516) + 932287836;
  v212 = v204 ^ 0xC4D7;
  v213 = v204 ^ 0x60B40000;
  HIDWORD(v132) = v204 ^ 0xC4D7;
  LODWORD(v132) = v204 ^ 0x60B40000;
  v214 = (v132 >> 17) - ((2 * (v132 >> 17)) & 0xF89203F4) + 2085159418;
  HIDWORD(v132) = v188 ^ 0x62;
  LODWORD(v132) = v188 ^ 0xCB678E00;
  v215 = v132 >> 7;
  v216 = (__PAIR64__(v190, v191) >> 18) - ((2 * (__PAIR64__(v190, v191) >> 18)) & 0x3C7DCEE0);
  v217 = v188;
  HIDWORD(v132) = v188 ^ 0x38E62;
  LODWORD(v132) = v188 ^ 0xCB640000;
  v218 = v132 >> 18;
  v219 = ((2 * v151) ^ 0xA24E5C44)
       + ((4 * v151) & 0xFFFED7FC ^ 0xBB624774)
       - 2147445758
       + (v211 ^ (v204 >> 10) ^ v209 ^ v214 ^ 0x89F475F5);
  v220 = v219 - 434465709 - ((2 * v219) & 0xCC3528A6);
  v221 = v204;
  HIDWORD(v132) = v204 ^ 0x57;
  LODWORD(v132) = v204 ^ 0x60B4C480;
  v222 = (v132 >> 7) - ((2 * (v132 >> 7)) & 0x6DDD9DC8);
  HIDWORD(a45) = (v183 + 969469199 - ((2 * v183) & 0x7391DA00)) ^ 0x39C8ED0F | ((v884 ^ 0x35)
                                                                              + 880128987
                                                                              - ((2 * (v884 ^ 0x35)) & 0x1B6)) ^ 0x3475B3DB;
  HIDWORD(v132) = v220 ^ 0x9453;
  LODWORD(v132) = v220 ^ 0xE61A0000;
  v223 = v132 >> 17;
  HIDWORD(v132) = v198 ^ 0x4B;
  LODWORD(v132) = v198 ^ 0x66ACF980;
  v224 = (v132 >> 7) - ((2 * (v132 >> 7)) & 0x75AE9D70);
  HIDWORD(v132) = v208 ^ 0x92A;
  LODWORD(v132) = v208 ^ 0x9D5A0000;
  v225 = v132 >> 17;
  v226 = (v218 ^ 0xFDF5FBFF) + ((v217 >> 3) ^ 0x668B4A32) + (v215 ^ 0x72F3CF77);
  v227 = v217;
  v228 = ((2 * v218) & 0xFBEBF7FE) + ((v217 >> 2) & 0x3FCF77FC ^ 0x32C96398) + ((2 * v215) & 0xE5E79EEE) + v226;
  v229 = v228 - 2 * ((v228 + 254703756) & 0x6BF1C5DB ^ v226 & 1);
  HIDWORD(v132) = v208 ^ 0x2092A;
  LODWORD(v132) = v208 ^ 0x9D580000;
  v230 = (v225 ^ 0x55FBBFBF)
       + ((v208 >> 10) ^ 0x8027C184)
       + ((v132 >> 19) ^ 0x7FBEB77A)
       + ((v208 >> 9) & 0x7ED1F2 ^ 0xFFB17EFF)
       + ((2 * v225) & 0xABF77F7E)
       + ((2 * (v132 >> 19)) & 0xFF7D6EF4);
  v231 = ((2 * v201) ^ 0x6EFD88CF)
       + ((4 * v201) & 0xCFFEB4DC ^ 0x3205EF63)
       - 402695568
       + ((v229 + 2065710694) ^ 0x9FDED2E8 ^ (v230 - ((2 * v230 + 1418322820) & 0xE85E2E64) - 1636562700));
  v232 = v231 + 224768155 - ((2 * v231) & 0x1ACB6136);
  HIDWORD(v132) = v197 ^ 0x17;
  LODWORD(v132) = v197 ^ 0x247F5480;
  v233 = (v132 >> 7) - ((2 * (v132 >> 7)) & 0x262AB358);
  HIDWORD(v132) = v197 ^ 0x35497;
  LODWORD(v132) = v197 ^ 0x247C0000;
  v234 = (v132 >> 18) - ((2 * (v132 >> 18)) & 0x375F2BA);
  v235 = (v216 - 1640044688) ^ (v224 + 987188920);
  HIDWORD(v854) = v198;
  HIDWORD(v132) = v208 ^ 0x2092A;
  LODWORD(v132) = v208 ^ 0x9D580000;
  v236 = v132 >> 18;
  v237 = ((HIDWORD(v854) >> 3) ^ 0xE38AC2F6)
       + ((HIDWORD(v854) >> 2) & 0x1EBEBB9E ^ 0x18AA3A12)
       + 278962737
       + (v235 ^ 0xA4E9A9C8);
  v238 = (__PAIR64__(v212, v213) >> 18) - ((2 * (__PAIR64__(v212, v213) >> 18)) & 0xDA7B3290);
  HIDWORD(v132) = v220 ^ 0x29453;
  LODWORD(v132) = v220 ^ 0xE6180000;
  v853 = __PAIR64__(v201, v227);
  v239 = (v227 ^ 0xCB678E62)
       + ((v132 >> 19) ^ 0x677DFFF9)
       + (v223 ^ 0x5FEFF79F)
       + ((2 * (v132 >> 19)) & 0xCEFBFFF2)
       + ((2 * v223) & 0xBFDFEF3E);
  v240 = (v237 ^ 0x15DFFD3F)
       + ((2 * v237) & 0x2BBFFA7E)
       + ((v220 >> 10) ^ 0xF3487B89)
       + ((2 * (v220 >> 10)) & 0x63FA58 ^ 0x630848)
       + ((v239 + 949094504) ^ 0x30001010)
       - ((2 * (v239 + 949094504)) & 0x9FFFDFDE)
       + 1;
  HIDWORD(v132) = v232 ^ 0x5B09B;
  LODWORD(v132) = v232 ^ 0xD600000;
  v241 = v132 >> 19;
  v242 = v232 ^ 0x1B09B;
  v243 = v232 ^ 0xD640000;
  v244 = v232;
  HIDWORD(v132) = v232 ^ 0x1B09B;
  LODWORD(v132) = v232 ^ 0xD640000;
  v245 = (v241 ^ 0x6FFF65FE)
       + ((v132 >> 17) ^ 0xBDA7D5EF)
       + ((2 * (v132 >> 17)) & 0x7B4FABDE)
       + ((2 * v241) & 0xDFFECBFC);
  v246 = (v240 - ((2 * v240 + 224127752) & 0x40F4FB18) + 1730704144) ^ v227;
  HIDWORD(v132) = v246 ^ 0x5F3EE;
  LODWORD(v132) = v246 ^ 0x6B180000;
  v247 = v132 >> 19;
  HIDWORD(v132) = v208 ^ 0xAAAAAAAA;
  LODWORD(v132) = v208 ^ 0x9D5A0900;
  v248 = v132 >> 7;
  HIDWORD(v132) = v244 ^ 0x1B;
  LODWORD(v132) = v244 ^ 0xD65B080;
  v249 = (v233 + 320166316) ^ (v197 >> 3) ^ (v234 - 2118452899) ^ (v244 >> 10) ^ (v245
                                                                                - ((2 * v245 - 1531869146) & 0xE5E7F4CA)
                                                                                + 1162657400);
  v250 = (v132 >> 7) - 82846989 + (~(2 * (v132 >> 7)) | 0x9E04A1B);
  HIDWORD(v132) = v220 ^ 0x53;
  LODWORD(v132) = v220 ^ 0xE61A9400;
  v251 = v132 >> 7;
  HIDWORD(v855) = v221;
  HIDWORD(v132) = v246 ^ 0x1F3EE;
  LODWORD(v132) = v246 ^ 0x6B1C0000;
  v252 = ((v221 >> 3) ^ 0x7169099)
       + ((v221 >> 2) & 0x29FFEFF8 ^ 0xF7D2DECF)
       + ((v222 - 1225863452) ^ (v238 + 1832753480) ^ 0xDBD357AC)
       + ((v246 >> 10) ^ 0x40DA9BB8)
       + (v247 ^ 0xF4DFFFFF)
       + ((v132 >> 17) ^ 0xC2882080)
       + ((2 * v247) & 0xE9BFFFFE)
       - ((2 * (v132 >> 17)) & 0x7AEFBEFE)
       + ((v246 >> 9) & 0x7F4676 ^ 0xFFCAF98F)
       - 52987204;
  LODWORD(v854) = v197;
  v253 = (v197 ^ 0x247F5497) + (v252 ^ 0xF5FE77FF) + ((2 * v252) & 0xEBFCEFFE) + 167872513;
  v254 = v253 - ((2 * v253) & 0x1BE4BFD4);
  v255 = (__PAIR64__(v242, v243) >> 18) - ((2 * (__PAIR64__(v242, v243) >> 18)) & 0x76A3BECC);
  HIDWORD(v132) = v246 ^ 0x1F3EE;
  LODWORD(v132) = v246 ^ 0x6B1C0000;
  v256 = v132 >> 18;
  v257 = v246;
  HIDWORD(v132) = v246 ^ 0xEEEEEEEE;
  LODWORD(v132) = v246 ^ 0x6B1DF380;
  v258 = v132 >> 7;
  HIDWORD(v132) = v220 ^ 0x29453;
  LODWORD(v132) = v220 ^ 0xE6180000;
  v259 = v132 >> 18;
  v260 = (v254 + 233988074) ^ v197;
  HIDWORD(v132) = v260 ^ 0x50B7D;
  LODWORD(v132) = v260 ^ 0x29880000;
  v261 = v132 >> 19;
  HIDWORD(v132) = v249 ^ 0xE96A;
  LODWORD(v132) = v249 ^ 0xE4D00000;
  v262 = v132 >> 17;
  HIDWORD(v132) = v249 ^ 0xE96A;
  LODWORD(v132) = v249 ^ 0xE4D00000;
  v263 = ((v132 >> 19) ^ 0xF4FB7B73)
       + (v262 ^ 0x4FEC920D)
       + ((2 * v262) & 0x9FD9241A)
       + ((2 * (v132 >> 19)) & 0xE9F6F6E6);
  v264 = (v236 ^ 0x7B73DFEF)
       + ((v208 >> 3) ^ 0x7E5C3CDA)
       + (v248 ^ 0x37DFFEFF)
       + ((v208 >> 2) & 0x1BEEFBFE ^ 0x346824A)
       + ((2 * v236) & 0xF6E7BFDE)
       + ((2 * v248) & 0x6FBFFDFE)
       + ((v263 - 2 * ((v263 + 454554240) & 0x1FBBBECF ^ v263 & 4) - 623660725) ^ (v249 >> 10) ^ 0xE07D750E);
  HIDWORD(v132) = v260 ^ 0x10B7D;
  LODWORD(v132) = v260 ^ 0x298C0000;
  v265 = ((v220 >> 3) ^ 0x7394BD55)
       + (v251 ^ 0x691D3FCA)
       + (v259 ^ 0x8403B483)
       + ((v220 >> 2) & 0x1EAFDFBE ^ 0x18868514)
       + ((2 * v251) & 0xD23A7F94)
       - ((2 * v259) & 0xF7F896F8)
       + ((v260 >> 10) ^ 0x37D5DC39)
       + ((v132 >> 17) ^ 0x7FBF7BDD)
       + (v261 ^ 0x7FFEB7FD)
       + ((v260 >> 9) & 0x3F7EF6 ^ 0x144684)
       + ((2 * (v132 >> 17)) & 0xFF7EF7BA)
       + ((2 * v261) & 0xFFFD6FFA)
       + 1;
  LODWORD(v855) = v208 ^ 0x9D5A092A;
  v266 = (v208 ^ 0x554E2D37 ^ (v265 - ((2 * v265 - 674082564) & 0x9028483A) + 872238235)) + (v208 ^ 0x9D5A092A);
  v267 = v266 + 490948736 - ((2 * v266) & 0x3A86918E);
  v268 = v264 - ((2 * v264 - 1117174232) & 0xA2AFFC8C) - 1341349542;
  HIDWORD(v132) = v268 ^ 0x7FE46;
  LODWORD(v132) = v268 ^ 0xD1500000;
  v269 = v132 >> 19;
  HIDWORD(a40) = v249;
  HIDWORD(v132) = v249 ^ 0x6A;
  LODWORD(v132) = v249 ^ 0xE4D0E900;
  v270 = v132 >> 7;
  HIDWORD(v132) = v268 ^ 0x1FE46;
  LODWORD(v132) = v268 ^ 0xD1560000;
  v271 = ((v132 >> 17) ^ 0xE97FF5FF)
       + (v269 ^ 0xEDEF8C3F)
       + ((2 * v269) & 0xDBDF187E)
       + ((2 * (v132 >> 17)) & 0xD2FFEBFE);
  v272 = v267 + 71;
  HIDWORD(v132) = (v267 + 71) ^ 0x148C7;
  LODWORD(v132) = (v267 + 71) ^ 0x1D420000;
  v273 = v132 >> 17;
  v274 = (v267 + 71) ^ 0x348C7;
  v275 = v272 ^ 0x1D400000;
  v276 = v272;
  HIDWORD(v132) = v274;
  LODWORD(v132) = v272 ^ 0x1D400000;
  v277 = v132 >> 19;
  v278 = (v256 ^ 0x24200210) + (v258 ^ 0x7DF1BCF6) + ((2 * v258) & 0xFBE379EC) - ((2 * v256) & 0xB7BFFBDE) + 1;
  HIDWORD(v132) = v249 ^ 0xE96A;
  LODWORD(v132) = v249 ^ 0xE4D00000;
  v279 = v132 >> 18;
  v856 = __PAIR64__(v220, v244);
  v280 = ((v244 >> 3) ^ 0x7E52C0E5)
       + ((v244 >> 2) & 0x3FFCEDEC ^ 0x3586C24)
       - 2147383030
       + ((v271 - ((2 * v271 + 1361116036) & 0xCC4FA4A2) - 1900523501) ^ (v268 >> 10) ^ 0x661387AE);
  v281 = ((v255 + 995221350) ^ v250 ^ 0xC05E0594) + (v280 ^ 0x80042E00) - ((2 * v280) & 0xFFF7A3FE) + 2147209728;
  v282 = v260;
  HIDWORD(v132) = v260 ^ 0xFFFFFFFD;
  LODWORD(v132) = v260 ^ 0x298D0B00;
  v283 = v132 >> 7;
  HIDWORD(v132) = v268 ^ 0x3FE46;
  LODWORD(v132) = v268 ^ 0xD1540000;
  v284 = (v132 >> 18) - ((2 * (v132 >> 18)) & 0xB72F3638);
  v285 = (v279 ^ 0x80142A3) + (v270 ^ 0xBF3B3F77) + ((2 * v270) & 0x7E767EEE) - ((2 * v279) & 0xEFFD7AB8) + 1;
  HIDWORD(v132) = a61 ^ 0x13;
  LODWORD(v132) = a61 ^ 0x4A33E5C0;
  v286 = v132 >> 6;
  v287 = (v277 ^ 0xB8689293) + (v273 ^ 0xEFB7ED4F) + ((2 * v273) & 0xDF6FDA9E) - ((2 * v277) & 0x8F2EDAD8) + 1;
  HIDWORD(v132) = v268 ^ 0x46;
  LODWORD(v132) = v268 ^ 0xD157FE00;
  v288 = (v132 >> 7) - ((2 * (v132 >> 7)) & 0x554A4106);
  v289 = ((v278 + 62145460 + (~(2 * v278 + 1004306930) | 0xB473FA8B)) ^ (v257 >> 3) ^ 0xA8A5BCC7) + (v244 ^ 0xD65B09B);
  v290 = (v289 ^ 0x2B8FFFE6)
       + ((2 * v289) & 0x571FFFCC)
       - 730857446
       + ((v287 - ((2 * v287 - 1346437062) & 0x856F2530) + 446108341) ^ (v276 >> 10) ^ 0xC2B0C24A);
  v291 = v281 - 1287400704 - ((2 * v281) & 0x6687A616) + 11;
  HIDWORD(v132) = v291 ^ 0x1D30B;
  LODWORD(v132) = v291 ^ 0xB3420000;
  v292 = v132 >> 17;
  HIDWORD(v132) = v291 ^ 0x3D30B;
  LODWORD(v132) = v291 ^ 0xB3400000;
  v293 = ((v285 - ((2 * v285 + 1904671690) & 0x8C61AD94) - 17541969) ^ (v249 >> 3) ^ 0xDAAACBE7)
       + ((v291 >> 10) ^ 0x25BDD5E0)
       + ((v132 >> 19) ^ 0xC8200C02)
       + (v292 ^ 0x10A10000)
       + ((v291 >> 9) & 0x5DF5D6 ^ 0xFFA65E3F)
       - ((2 * v292) & 0xDEBDFFFE)
       - ((2 * (v132 >> 19)) & 0x6FBFE7FA)
       + 28176107;
  v294 = (v257 ^ 0x35C38328 ^ (v293 - ((2 * v293) & 0xBDBCE18C) + 1591636166)) + (v257 ^ 0x6B1DF3EE);
  v295 = (v244 ^ 0xD65B09B) + (v290 ^ 0xCCF7CDA9) + ((2 * v290) & 0x99EF9B52) + 856175191;
  v296 = v295 + 2061384111 - ((2 * v295) & 0xF5BC735E);
  v297 = v276;
  LODWORD(a41) = v276;
  HIDWORD(v132) = v276 ^ 0xFFFFFFC7;
  LODWORD(v132) = v276 ^ 0x1D434880;
  v298 = v132 >> 7;
  HIDWORD(v132) = v296 ^ 0x39AF;
  LODWORD(v132) = v296 ^ 0x7ADE0000;
  v299 = (v132 >> 17) - ((2 * (v132 >> 17)) & 0xA25F2DBC);
  v300 = v294 + 2094467584 - ((2 * v294) & 0xF9AE14CC) + 102;
  HIDWORD(v132) = v300 ^ 0x70A66;
  LODWORD(v132) = v300 ^ 0x7CD00000;
  v301 = v132 >> 19;
  HIDWORD(v132) = v296 ^ 0x639AF;
  LODWORD(v132) = v296 ^ 0x7AD80000;
  v302 = ((v282 >> 3) ^ 0xDAEE5A14)
       + ((__PAIR64__(v260 ^ 0x10B7D, v260 ^ 0x298C0000) >> 18) ^ 0xDFFBA3D5)
       + ((2 * (__PAIR64__(v260 ^ 0x10B7D, v260 ^ 0x298C0000) >> 18)) & 0xBFF747AA)
       + ((v282 >> 2) & 0x3FBFF6F6 ^ 0xA2342D6)
       + 1076125872
       + (((v132 >> 19) - ((2 * (v132 >> 19)) & 0x386484D4) - 1674427798) ^ (v296 >> 10) ^ (v299 - 785410338) ^ 0x4D03633A);
  v303 = (v283 ^ 0x7FFBFF7D) + ((2 * v283) & 0xFFF7FEFA) + (v302 ^ 0xAA400E0) - ((2 * v302) & 0xEAB7FE3E) + 1;
  v304 = v303 - ((2 * v303 - 356516028) & 0xB884749A);
  HIDWORD(v132) = v291 ^ 0x3D30B;
  LODWORD(v132) = v291 ^ 0xB3400000;
  v305 = (v132 >> 18) - ((2 * (v132 >> 18)) & 0x67745D0C);
  HIDWORD(v132) = a61 ^ 0x5D3;
  LODWORD(v132) = a61 ^ 0x4A33E000;
  v306 = v132 >> 11;
  HIDWORD(v132) = a61 ^ 0x33E5D3;
  LODWORD(v132) = a61 ^ 0x4A000000;
  v307 = ((v132 >> 25) ^ 0xC211578E)
       + (v306 ^ 0x49B80642)
       + (v286 ^ 0x31B5FBFD)
       + ((2 * v286) & 0x636BF7FA)
       - ((2 * (v132 >> 25)) & 0x7BDD50E2)
       - ((2 * v306) & 0x6C8FF37A);
  HIDWORD(v132) = v300 ^ 0x10A66;
  LODWORD(v132) = v300 ^ 0x7CD60000;
  v308 = v132 >> 17;
  v309 = v307 + 2 - ((2 * (v307 + 2) + 83971170) & 0x7319D222);
  v310 = v291;
  HIDWORD(v132) = v291 ^ 0xB;
  LODWORD(v132) = v291 ^ 0xB343D300;
  v311 = (v132 >> 7) - ((2 * (v132 >> 7)) & 0xE84D6BC0);
  HIDWORD(v132) = v296 ^ 0x2F;
  LODWORD(v132) = v296 ^ 0x7ADE3980;
  v849 = v132 >> 7;
  HIDWORD(v132) = v300 ^ 0x30A66;
  LODWORD(v132) = v300 ^ 0x7CD40000;
  v858 = v132 >> 18;
  v312 = ((v268 >> 3) ^ 0x2D9381BB)
       + ((v268 >> 2) & 0x2F72FCE6 ^ 0x2450FC80)
       - 934903411
       + ((v284 - 610821348) ^ (v288 - 1432018813) ^ 0x7132BB9F);
  v313 = (v312 ^ 0x6E7FFFB)
       + ((2 * v312) & 0xDCFFFF6)
       + ((v300 >> 10) ^ 0x77A9DB20)
       + (v308 ^ 0x7EFFAFE)
       + (v301 ^ 0xB8E40000)
       + ((v300 >> 9) & 0x6DDDC4 ^ 0x2C4984)
       + ((2 * v308) & 0xFDFF5FC)
       - ((2 * v301) & 0x8E37FFFE)
       + 1;
  HIDWORD(v132) = ~a61;
  LODWORD(v132) = a61 ^ 0x4A33E5D0;
  v314 = v132 >> 2;
  LODWORD(a38) = v260;
  v315 = (v282 ^ 0x57FB8A42 ^ (v313 - ((2 * v313 - 2128991160) & 0xFCED027E) + 1057199971)) + (v282 ^ 0x298D0B7D);
  v316 = v315 + 1566171274 - ((2 * v315) & 0xBAB3C114);
  v317 = ((__PAIR64__(v274, v275) >> 18) ^ 0x80944231)
       + (v298 ^ 0xBFFF21BE)
       + ((2 * v298) & 0x7FFE437C)
       - ((2 * (__PAIR64__(v274, v275) >> 18)) & 0xFED77B9C)
       + 1;
  HIDWORD(v132) = a61 ^ 0x33E5D3;
  LODWORD(v132) = a61 ^ 0x4A000000;
  v318 = v132 >> 22;
  v319 = v304 + 1369586159;
  HIDWORD(v132) = (v304 + 1369586159) ^ 0x3A4D;
  LODWORD(v132) = (v304 + 1369586159) ^ 0xDC420000;
  v320 = v132 >> 17;
  HIDWORD(v132) = a61 ^ 0x5D3;
  LODWORD(v132) = a61 ^ 0x4A33E000;
  v321 = v132 >> 13;
  HIDWORD(v132) = v316 ^ 0x1E08A;
  LODWORD(v132) = v316 ^ 0x5D580000;
  LODWORD(v844) = v316 ^ 0x1E08A;
  HIDWORD(v844) = v316 ^ 0x5D580000;
  v322 = (v132 >> 19) - ((2 * (v132 >> 19)) & 0x4CDAD6DA);
  v874 = __PAIR64__(v319, v310);
  v323 = ((v310 >> 3) ^ 0xD137829E)
       + ((v310 >> 2) & 0xEBFF1FE ^ 0xC90F0C2)
       + 950011649
       + ((v305 + 867839622) ^ (v311 - 198789664) ^ 0xC79C9B66);
  v845 = v319 ^ 0x23A4D;
  v847 = v319 ^ 0xDC400000;
  HIDWORD(v132) = v319 ^ 0x23A4D;
  LODWORD(v132) = v319 ^ 0xDC400000;
  v324 = ((v317 - ((2 * v317 + 2128164896) & 0x7C439506) + 2106484371) ^ (v297 >> 3) ^ 0xBD89A39B)
       + ((v319 >> 10) ^ 0x7E99FD75)
       + (v320 ^ 0xF3D4DBFA)
       + ((v132 >> 19) ^ 0xC41A80A8)
       + ((v319 >> 9) & 0x5DDBF6 ^ 0x4C0114)
       + ((2 * v320) & 0xE7A9B7F4)
       - ((2 * (v132 >> 19)) & 0x77CAFEAE)
       - 916343453;
  v325 = (a66 ^ a61 ^ 0x9C842CBB)
       + (((a62 ^ 0x5C6047C5) + (a66 ^ 0xD6B7C968)) ^ 0xEF9BEEFD)
       + ((2 * ((a62 ^ 0x5C6047C5) + (a66 ^ 0xD6B7C968))) & 0xDF37DDFA)
       + 274993411;
  v326 = (a64 ^ ((a61 ^ 0x4A33E5D3)
               + (a62 ^ a61 ^ 0x1653A216)
               - ((2 * ((a61 ^ 0x4A33E5D3) + (a62 ^ a61 ^ 0x1653A216))) & 0x245E1012)
               + 305072137) ^ 0x4171E098 ^ (v309 + 2081263426))
       + 694531638;
  v327 = (((a61 ^ 0x4A33E5D3) + (a62 ^ 0x5C6047C5)) ^ 0x10429801)
       + (v318 ^ 0xE3BFFF6F)
       + (v314 ^ 0x773F1B7F)
       + (v321 ^ 0xD6025A00)
       + ((2 * v318) & 0xC77FFEDE)
       + ((2 * v314) & 0xEE7E36FE)
       - ((2 * ((a61 ^ 0x4A33E5D3) + (a62 ^ 0x5C6047C5))) & 0xDF7ACFFC)
       - ((2 * v321) & 0x53FB4BFE)
       + (v325 ^ 0xEBBDEFF7)
       + ((2 * v325) & 0xD77BDFEE)
       + (v326 ^ 0xF6ADBFC2)
       + ((2 * v326) & 0xED5B7F84)
       + (HIDWORD(a45) ^ 0xFF7FFEF4)
       + ((2 * HIDWORD(a45)) & 0xFEFFFDE8)
       + 2;
  HIDWORD(v132) = v316 ^ 0x1E08A;
  LODWORD(v132) = v316 ^ 0x5D580000;
  v328 = (v132 >> 17) - ((2 * (v132 >> 17)) & 0x26CB795C);
  v857 = __PAIR64__(v257, v268);
  v329 = (v268 ^ 0x2EA801B9) + (v268 ^ 0xD66573AF ^ (v324 - ((2 * v324) & 0xE651BD2) + 120753641)) + 1;
  v330 = v329 - ((2 * v329) & 0x16BF3E68);
  v331 = v296;
  HIDWORD(v132) = v296 ^ 0x239AF;
  LODWORD(v132) = v296 ^ 0x7ADC0000;
  v332 = v132 >> 18;
  v333 = v327 - ((2 * v327 - 1180661564) & 0xBAB25BD2) + 975794763;
  v334 = (v333 << 21) ^ 0xBD200000;
  v335 = (v334 - 2001000704 - ((2 * v334) & 0x11400000) + 3707) & 0xF8000000 ^ 0xD0000000;
  v336 = (v333 >> 11) ^ 0xBAB25;
  v337 = (((v335 - (v335 >> 29 << 30) + 1691288058) & 0xF8000000 ^ 0x70010001) + 67248839) ^ 0x4C0322C8 | v336;
  v338 = v337 - 2 * (v337 & 0x1007A3D4 ^ v336 & 4);
  v339 = ((v316 >> 10) ^ 0x68C2466C)
       + ((v316 >> 9) & 0x55DFD6 ^ 0xFFFB732F)
       - 1758793747
       + ((v322 + 644705133) ^ (v328 + 325434542) ^ 0x3508D7C3);
  HIDWORD(v132) = v300 ^ 0x66666666;
  LODWORD(v132) = v300 ^ 0x7CD70A00;
  v340 = v132 >> 7;
  HIDWORD(v132) = (v333 >> 11) ^ 0x3AB25;
  LODWORD(v132) = (v338 - 1786272816) ^ 0x95800000;
  v341 = (v132 >> 19) + 1770591488 - ((2 * (v132 >> 19)) & 0xD3122ABE);
  v342 = (v339 - ((2 * v339) & 0x1F4C3A6C) - 1884938954) ^ (v323 - ((2 * v323) & 0xE936BDE6) + 1956339443);
  v343 = v330 + 190816052;
  HIDWORD(v132) = (v330 + 190816052) ^ 0x79F34;
  LODWORD(v132) = (v330 + 190816052) ^ 0xB580000;
  v344 = (v132 >> 19) - ((2 * (v132 >> 19)) & 0xCEEF2B36);
  v341 += 95;
  HIDWORD(v132) = v341 ^ 0x5F;
  LODWORD(v132) = v341 ^ 0x69891500;
  v345 = (v132 >> 8) + 83457675 - ((2 * (v132 >> 8)) & 0x9F2ED16);
  HIDWORD(v132) = v333 ^ 0x1592DE9;
  LODWORD(v132) = v333 ^ 0x5C000000;
  v346 = v132 >> 25;
  HIDWORD(v132) = v333 ^ 0x192DE9;
  LODWORD(v132) = v333 ^ 0x5D400000;
  v347 = v132 >> 22;
  HIDWORD(v132) = v343 ^ 0x19F34;
  LODWORD(v132) = v343 ^ 0xB5E0000;
  v348 = (v334 + 1831963319 - ((2 * v334) & 0xDA400000)) ^ 0x6D318AB7 | v336;
  v349 = v348 - ((2 * v348) & 0xC6601F1E);
  LODWORD(a44) = a62 ^ 0x5C6047C5;
  v350 = ((v132 >> 17) - ((2 * (v132 >> 17)) & 0xFE3AA7EC) - 14855178) ^ (v344 + 1735890331);
  HIDWORD(v132) = v342 ^ 0x143C5;
  LODWORD(v132) = v342 ^ 0xFB3C0000;
  v351 = ((v343 >> 10) ^ 0xB37D0898) + ((v343 >> 9) & 0x7FBEFE ^ 0x5AECE) + 1283465345 + (v350 ^ 0x986AC66D);
  v352 = (v132 >> 17) - ((2 * (v132 >> 17)) & 0xF88AC71A);
  v353 = v345 ^ 0x4F9768B | (((v333 << 26) ^ 0xA4000000) + 363942263 - ((2 * ((v333 << 26) ^ 0xA4000000)) & 0x28000000)) ^ 0x15B15177;
  HIDWORD(v132) = v342 ^ 0x543C5;
  LODWORD(v132) = v342 ^ 0xFB380000;
  v354 = v353 - ((2 * v353) & 0x1618F89A);
  v355 = (v132 >> 19) - ((2 * (v132 >> 19)) & 0x5335CD7C);
  HIDWORD(v132) = v333 ^ 1;
  LODWORD(v132) = v333 ^ 0x5D592DE8;
  v356 = v132 >> 2;
  HIDWORD(v132) = v333 ^ 0xDE9;
  LODWORD(v132) = v333 ^ 0x5D592000;
  v357 = v132 >> 13;
  v358 = (v874 ^ 0x4CBC2CF4) + (v351 ^ 0xFE9FD6DF) + ((2 * v351) & 0xFD3FADBE) + 23079202;
  v359 = ((v331 >> 3) ^ 0x875BCF2D)
       + (v849 ^ 0x5FE7A5DD)
       + (v332 ^ 0xA022338C)
       + ((v331 >> 2) & 0x2FFFEFCE ^ 0xF14871B5)
       + ((2 * v849) & 0xBFCF4BBA)
       - ((2 * v332) & 0xBFBB98E6)
       + (v358 ^ 0x6AFFF5FD)
       + ((2 * v358) & 0xD5FFEBFA);
  v360 = v359 + 3 - 2 * ((v359 + 217458819) & 0x528577F7 ^ (v359 + 3) & 5);
  v361 = (v333 ^ 0x5D592DE9)
       + (a61 ^ 0x4A33E5D3)
       - 536754999
       - ((2 * ((v333 ^ 0x5D592DE9) + (a61 ^ 0x4A33E5D3))) & 0xC0038992);
  v362 = ((v349 + 1664094095) ^ 0x683C73C2 ^ (v354 + 185367629))
       + (a62 ^ v361 ^ 0x104BD736 ^ ((a62 ^ 0xA39FB83A)
                                   + (v333 ^ 0x5D592DE9)
                                   + 1
                                   - ((2 * ((a62 ^ 0xA39FB83A) + (v333 ^ 0x5D592DE9) + 1)) & 0x5854A874)
                                   - 1406512070));
  v363 = (a66 ^ 0xD6B7C968) + (v346 ^ 0x6F7DFB6F) + ((2 * v346) & 0xDEFBF6DE) - 1870527343;
  v364 = (v363 ^ 0xBDDFFF7F) + ((2 * v363) & 0x7BBFFEFE) + (v362 ^ 0x60001081) - ((2 * v362) & 0x3FFFDEFC) + 1;
  LODWORD(v860) = v342;
  HIDWORD(v869) = v316;
  HIDWORD(v132) = v316 ^ 0xA;
  LODWORD(v132) = v316 ^ 0x5D59E080;
  HIDWORD(a45) = v132 >> 7;
  v365 = ((v342 >> 10) ^ 0x5FD958AE)
       + ((v342 >> 9) & 0x4F2FFC ^ 0x4D0EA0)
       - 1609013246
       + ((v352 + 2084922253) ^ (v355 - 1449466178) ^ 0xD5DF8533);
  HIDWORD(v871) = v300;
  v366 = ((v300 >> 3) ^ 0x2E1EC15F)
       + (v340 ^ 0xFFF79AFB)
       + (v858 ^ 0xBDEDD5BF)
       + ((v300 >> 2) & 0x3CF7BFD8 ^ 0xE3CA7D67)
       + ((2 * v340) & 0xFFEF35F6)
       + ((2 * v858) & 0x7BDBAB7E)
       + (v365 ^ 0x800E8408)
       - ((2 * v365) & 0xFFE2F7EE)
       + 3;
  v367 = (a61 ^ 0x176AC83A ^ v333)
       + (((v333 ^ 0x5D592DE9) + (a62 ^ 0x5C6047C5)) ^ 0x5C27A0C3)
       - ((2 * ((v333 ^ 0x5D592DE9) + (a62 ^ 0x5C6047C5))) & 0x47B0BE78)
       - 1546100931;
  v368 = (((a62 ^ 0x5C6047C5) + (a61 ^ 0xB5CC1A2C) + 1) ^ 0xDFF77976)
       + ((2 * ((a62 ^ 0x5C6047C5) + (a61 ^ 0xB5CC1A2C) + 1)) & 0xBFEEF2EC)
       + (v347 ^ 0xE0064622)
       + (v357 ^ 0xF9F71FFF)
       + (v356 ^ 0x3BDDDF7F)
       + ((2 * v357) & 0xF3EE3FFE)
       + ((2 * v356) & 0x77BBBEFE)
       - ((2 * v347) & 0x3FF373BA)
       + (v367 ^ 0xDB6F77FF)
       + ((2 * v367) & 0xB6DEEFFE)
       + 784189675
       + (v861 ^ 0x3F9B43D5 ^ (v364 - ((2 * v364 + 61127162) & 0x29A5C94E) - 156941916));
  v369 = v368 - 1096878080 - ((2 * v368) & 0x7D3DF616);
  HIDWORD(v860) = __PAIR64__(v316 ^ 0x1E08A, v316 ^ 0x5D580000) >> 18;
  LODWORD(a39) = v331;
  v370 = (v331 ^ 0x8521C650) + (v331 ^ 0x4BBC9C7D ^ (v366 - ((2 * v366 + 1091556946) & 0x62C54BA4) - 773156613)) + 1;
  v371 = v370 - ((2 * v370) & 0x4423AD0E);
  HIDWORD(v132) = HIDWORD(v874) ^ 0x4D;
  LODWORD(v132) = HIDWORD(v874) ^ 0xDC423A00;
  LODWORD(v848) = (v132 >> 7) - ((2 * (v132 >> 7)) & 0xE3CD0492);
  v372 = v369 + 779;
  v373 = (v369 + 779) ^ 0xBE9EFB0B;
  v374 = ((2 * (v373 + (v333 ^ 0x5D592DE9))) & 0x3FFCBDBE) + ((v373 + (v333 ^ 0x5D592DE9)) ^ 0x9FFE5EDF);
  HIDWORD(v846) = (__PAIR64__(v845, v847) >> 18) - ((2 * (__PAIR64__(v845, v847) >> 18)) & 0x90DFFAC2);
  HIDWORD(v132) = (v369 + 779) ^ 0xB;
  LODWORD(v132) = (v369 + 779) ^ 0xBE9EFB00;
  v375 = (v132 >> 6) + 2125142444 - ((2 * (v132 >> 6)) & 0xFD563962);
  HIDWORD(v132) = (v369 + 779) ^ 0x30B;
  LODWORD(v132) = (v369 + 779) ^ 0xBE9EF800;
  v376 = v132 >> 11;
  HIDWORD(v132) = (v369 + 779) ^ 0x1B0B;
  LODWORD(v132) = (v369 + 779) ^ 0xBE9EE000;
  v377 = v132 >> 13;
  HIDWORD(v132) = (v369 + 779) ^ 0x9EFB0B;
  LODWORD(v132) = (v369 + 779) ^ 0xBE000000;
  v378 = ((v132 >> 25) ^ 0x7BDEEFFF)
       - 2078212036
       + ((2 * (v132 >> 25)) & 0xF7BDDFFE)
       + ((v376 - ((2 * v376) & 0x697D47AA) + 884909013) ^ (v375 + 773) ^ 0x4A15BF64)
       + 4037;
  v379 = (a61 ^ 0xF4AD1ED8 ^ (v369 + 779)) + 1610719521 + v374;
  HIDWORD(v132) = (v369 + 779) ^ 0x1EFB0B;
  LODWORD(v132) = (v369 + 779) ^ 0xBE800000;
  v380 = v132 >> 22;
  v381 = (v360 - 545546126) ^ v874;
  HIDWORD(v132) = v381 ^ 0x6A4F9;
  LODWORD(v132) = v381 ^ 0x61C00000;
  LODWORD(v846) = (v132 >> 19) - ((2 * (v132 >> 19)) & 0x897F7756);
  HIDWORD(v132) = -796 - v369;
  LODWORD(v132) = (v369 + 779) ^ 0xBE9EFB08;
  v382 = v132 >> 2;
  v383 = (a61 ^ 0x4A33E5D3) + (v379 ^ 0x372FBFF6) + ((2 * v379) & 0x6E5F7FEC) - 925876214;
  v384 = (v383 ^ 0xFBFB2FFD)
       + ((2 * v383) & 0xF7F65FFA)
       + 67424259
       + (a62 ^ 0x973F5D61 ^ (v378 - ((2 * v378) & 0x96BE3548) - 882959708));
  v859 = __PAIR64__(v343, v381);
  HIDWORD(v132) = v381 ^ 0xA4F9;
  LODWORD(v132) = v381 ^ 0x61C60000;
  v385 = (v132 >> 17) - ((2 * (v132 >> 17)) & 0x62EBFB94);
  v386 = (v361 ^ 0xE001C4C9)
       + ((v373 + 1 + (v333 ^ 0xA2A6D216) - ((2 * (v373 + 1 + (v333 ^ 0xA2A6D216))) & 0x7DEC15DE) + 1056312047) ^ (v373 + (a61 ^ 0x4A33E5D3) - ((2 * (v373 + (a61 ^ 0x4A33E5D3))) & 0x65B1731C) + 853064078) ^ 0xF3D14C9E)
       + 1;
  v387 = (v380 ^ 0xB0C28A08)
       + (v382 ^ 0x7FFE9FDF)
       + (v377 ^ 0x7F7DFBFE)
       + ((2 * v382) & 0xFFFD3FBE)
       + ((2 * v377) & 0xFEFBF7FC)
       - ((2 * v380) & 0x9E7AEBEE)
       + (v386 ^ 0xDFFFB4FA)
       + ((2 * v386) & 0xBFFF69F4)
       + 1874928929
       + (v851 ^ 0x705FC0FF ^ (((2 * v384) & 0xFFDBBB7E)
                             + (v384 ^ 0x7FEDDDBF)
                             - ((2 * (((2 * v384) & 0xFFDBBB7E) + (v384 ^ 0x7FEDDDBF)) + 12707854) & 0x295C4010)
                             - 1794173937));
  HIDWORD(v850) = v371 + 571594375;
  v388 = (v371 + 571594375) ^ 0x1D687;
  v389 = (v371 + 571594375) ^ 0x22100000;
  v390 = __PAIR64__(v388, v389) >> 19;
  v391 = __PAIR64__(v388, v389) >> 17;
  v392 = v387 + 2017511046 - ((2 * v387) & 0xF0818D0C);
  v393 = (v372 ^ 0x416104F4)
       + (v392 ^ 0x7840C686)
       + 1502413600
       - ((2 * ((v372 ^ 0x416104F4) + (v392 ^ 0x7840C686) + 1)) & 0xB31A063E);
  HIDWORD(v132) = v392 ^ 0xC686;
  LODWORD(v132) = v392 ^ 0x78787878;
  v394 = v132 >> 22;
  HIDWORD(v132) = v392 ^ 0x686;
  LODWORD(v132) = v392 ^ 0x7840C000;
  v395 = (v132 >> 13) - ((2 * (v132 >> 13)) & 0x30BD97D8);
  HIDWORD(v132) = v392 ^ 0x686;
  LODWORD(v132) = v392 ^ 0x7840C000;
  v396 = (v132 >> 11) - ((2 * (v132 >> 11)) & 0xCF1354DE);
  HIDWORD(v132) = (v387 + 2017511046) ^ 2;
  LODWORD(v132) = v392 ^ 0x7840C684;
  v397 = (v132 >> 2) - ((2 * (v132 >> 2)) & 0x7843F07A);
  HIDWORD(v132) = v392 ^ 0x40C686;
  LODWORD(v132) = v392 ^ 0x78000000;
  v398 = (v132 >> 25) - ((2 * (v132 >> 25)) & 0xA8416524);
  v399 = (v394 ^ 0xB05AC184)
       - ((2 * v394) & 0x9F4A7CF6)
       + 1336229500
       + ((v397 - 1138624451) ^ (v395 - 1738617876) ^ 0x247F33D1);
  HIDWORD(v132) = v392 ^ 6;
  LODWORD(v132) = v392 ^ 0x7840C680;
  v400 = (v393 ^ ((v392 ^ 0x7840C686)
                + (v333 ^ 0x5D592DE9)
                - ((2 * ((v392 ^ 0x7840C686) + (v333 ^ 0x5D592DE9))) & 0x7FBDF0BA)
                - 1075906467) ^ 0xE653FB42)
       - v374;
  v401 = v373 - 2147415999 + ((2 * v392) ^ 0x8F7F7BF3) + ((4 * v392) & 0xFFFDEDFC ^ 0xE1010818) + 192;
  v402 = (a61 ^ 0x4A33E5D3)
       + ((v396 + 1737075311) ^ ((v132 >> 6) - ((2 * (v132 >> 6)) & 0xD0E72B24) - 395078254) ^ (v398 - 736054638) ^ 0xA4257290)
       + 1;
  v403 = ((2 * v333) ^ 0x61512429)
       + ((4 * v333) & 0xB7C6FFF4 ^ 0x3544B7A4)
       + (v401 ^ 0x21AC6010)
       - ((2 * v401) & 0xBCA73FDE)
       + (v402 ^ 0x77EDF5EB)
       + ((2 * v402) & 0xEFDBEBD6)
       + 1;
  v404 = (HIDWORD(v848) ^ 0x26AAAE90 ^ (v403 - ((2 * v403 + 13338154) & 0x127AD00) - 1057384043))
       + ((v399 - ((2 * v399) & 0x9A6B33E4) + 1295358450) ^ (v400 - ((2 * v400 + 1073528254) & 0xB8D6784C) + 2087295749) ^ 0x915EA5D4);
  v405 = v404 - 523289688 - ((2 * v404) & 0xC19E7750);
  HIDWORD(v132) = v405 ^ 0x28;
  LODWORD(v132) = v405 ^ 0xE0CF3B80;
  v406 = (v132 >> 6) - ((2 * (v132 >> 6)) & 0xFB748A06);
  HIDWORD(v132) = v405 ^ 0x1BA8;
  LODWORD(v132) = v405 ^ 0xE0CF2000;
  v407 = v132 >> 13;
  HIDWORD(v132) = v405 ^ 0xF3BA8;
  LODWORD(v132) = v405 ^ 0xE0C00000;
  v408 = v132 >> 22;
  v409 = (v390 ^ 0xA04AC200) + (v391 ^ 0xAEFD7BFF) + ((2 * v391) & 0x5DFAF7FE) - ((2 * v390) & 0xBF6A7BFE);
  LODWORD(v869) = v409 + 1 - 2 * ((v409 + 280478209) & 0x1724047F ^ (v409 + 1) & 0x18);
  v410 = (v392 ^ 0x87BF3979) + 1;
  v411 = (((v405 ^ 0xE0CF3BA8) + v410) ^ 0x7D75BB3F) - 2104867647 + ((2 * ((v405 ^ 0xE0CF3BA8) + v410)) & 0xFAEB767E);
  v412 = (v372 ^ 0x416104F4)
       + (((v405 ^ 0xE0CF3BA8) + (v392 ^ 0x7840C686)) ^ 0xBFF5FD9D)
       + ((2 * ((v405 ^ 0xE0CF3BA8) + (v392 ^ 0x7840C686))) & 0x7FEBFB3A)
       + 1074397796;
  v413 = ((2 * (v373 + 1 + (v405 ^ 0x1F30C457))) & 0xF7EAFDE6)
       + ((v373 + 1 + (v405 ^ 0x1F30C457)) ^ 0xFBF57EF3)
       + (v412 ^ 0xFF76EF9F)
       + ((2 * v412) & 0xFEEDDF3E);
  HIDWORD(v132) = v405 ^ 0xCF3BA8;
  LODWORD(v132) = v405 ^ 0xE0000000;
  v414 = v132 >> 25;
  HIDWORD(v132) = v405 ^ 0x3A8;
  LODWORD(v132) = v405 ^ 0xE0CF3800;
  v415 = (v393 ^ 0x598D031F)
       - 2147415999
       + ((v411 + (v372 ^ 0x5E51C0A3 ^ v405)) ^ 0x7FFEED5D)
       + ((2 * (v411 + (v372 ^ 0x5E51C0A3 ^ v405))) & 0xFFFDDABA);
  v416 = (v414 ^ 0x7ADFFFF5)
       + ((2 * v414) & 0xF5BFFFEA)
       - 2061500404
       + ((v406 + 2109359363) ^ ((v132 >> 11) - ((2 * (v132 >> 11)) & 0xBAA08E6A) - 581941451) ^ 0x5F15FDC9);
  v417 = (v333 ^ 0x5D592DE9) + (v416 ^ 0xFEFF7D96) + ((2 * v416) & 0xFDFEFB2C) + 16810602;
  v418 = ((v413 - ((2 * v413 + 153559772) & 0xEA822DEA) - 103503773) ^ 0x50580AC7 ^ (v417
                                                                                   - ((2 * v417) & 0x4A323864)
                                                                                   - 1525081038))
       + 672521749;
  HIDWORD(v132) = v404;
  LODWORD(v132) = v405 ^ 0xE0CF3BA8;
  v419 = v850 + (v418 ^ 0xD9ABBEBB) + ((2 * v418) & 0xB3577D76) + 643055941;
  v420 = ((v132 >> 2) ^ 0xD4D67EDE)
       + (v408 ^ 0x598DBDEE)
       + (v407 ^ 0x4000)
       + ((2 * (v132 >> 2)) & 0xA9ACFDBC)
       + ((2 * v408) & 0xB31B7BDC)
       - ((2 * v407) & 0xFFFF7FFF)
       + ((v415 + 2658) ^ 0xC4107C0)
       - ((2 * (v415 + 2658)) & 0xE77DF07E)
       + (v419 ^ 0x7F7FF77F)
       + ((2 * v419) & 0xFEFFEEFE);
  v421 = (2 * v420 - 1951070230) & 0xDED9E1D4;
  v420 -= 1253608225;
  v422 = v420 - v421;
  v423 = (v420 - v421) ^ 0x6F6CF0EA;
  v424 = v423 + (v405 ^ 0xE0CF3BA8) - 2003948803 - ((2 * (v423 + (v405 ^ 0xE0CF3BA8))) & 0x111C55FA);
  v425 = ((2 * v300) ^ 0xA71E823)
       + ((4 * v300) & 0xE7BFF9DC ^ 0xE31C2998)
       + 203424529
       + ((v381 >> 10) ^ 0xF5D237C8 ^ (v385 - 1317667382) ^ (v846 + 1153416107));
  HIDWORD(v132) = v420 ^ 2;
  LODWORD(v132) = v422 ^ 0x6F6CF0E8;
  v426 = v132 >> 2;
  HIDWORD(v132) = v422 ^ 0x10EA;
  LODWORD(v132) = v422 ^ 0x6F6CE000;
  v427 = v132 >> 13;
  HIDWORD(v132) = v422 ^ 0xAAAAAAAA;
  LODWORD(v132) = v422 ^ 0x6F6CF0C0;
  v428 = v132 >> 6;
  HIDWORD(v132) = v422 ^ 0x2CF0EA;
  LODWORD(v132) = v422 ^ 0x6F400000;
  v429 = v132 >> 22;
  HIDWORD(v132) = v422 ^ 0xEA;
  LODWORD(v132) = v422 ^ 0x6F6CF000;
  v430 = v132 >> 11;
  v885 = ((v848 - 236551607) ^ (HIDWORD(v874) >> 3) ^ (HIDWORD(v846) + 1215298913) ^ 0x5DFEC79E)
       + 4198664
       + (v425 ^ 0xFFBFDFEF)
       + ((2 * v425) & 0xFF7FBFDE);
  v431 = (v392 ^ 0xE8D3C993 ^ v422) + (v424 ^ 0x888E2AFD) + 1;
  HIDWORD(v132) = v422 ^ 0x16CF0EA;
  LODWORD(v132) = v422 ^ 0x6E000000;
  v432 = ((v423 + v410 - ((2 * (v423 + v410)) & 0xDCA9A89E) + 1851053135) ^ v424 ^ 0xE6DAFEB2) + v411;
  v433 = v373
       + (v430 ^ 0x6B41918)
       + ((v132 >> 25) ^ 0xF2B34F6F)
       + (v428 ^ 0x3EEE76CD)
       + ((2 * (v132 >> 25)) & 0xE5669EDE)
       + ((2 * v428) & 0x7DDCED9A)
       - ((2 * v430) & 0xF297CDCE)
       - 945151828;
  v434 = (v433 ^ 0xFDAFBFDF)
       + ((2 * v433) & 0xFB5F7FBE)
       + 38813729
       + (v392 ^ 0x891F5504 ^ (v431 - ((2 * v431) & 0xE2BF2704) - 245394558));
  v435 = (v429 ^ 0x38A02224)
       + (v427 ^ 0x80C02113)
       + (v426 ^ 0xCFF3FFEB)
       + ((2 * v426) & 0x9FE7FFD6)
       - ((2 * v429) & 0x8EBFBBB6)
       - ((2 * v427) & 0xFE7FBDD8)
       + (v432 ^ 0xDFEFC7AF)
       + ((2 * v432) & 0xBFDF8F5E);
  v436 = (v852 ^ 0x690D15D9) + (v434 ^ 0xF23FFFEF) + ((2 * v434) & 0xE47FFFDE) - 2099205870;
  v437 = v435 + (v436 ^ 0x733BDE7B) + ((2 * v436) & 0xE677BCF6) + 2;
  v438 = v437 - ((2 * v437 + 117452132) & 0x397EA1A6);
  v439 = v438 + 1077897093;
  v440 = (v438 + 1077897093) ^ 0x1CBF50D3;
  v441 = ((2 * (v440 + (v405 ^ 0xE0CF3BA8))) & 0x733FFF4E) + ((v440 + (v405 ^ 0xE0CF3BA8)) ^ 0x399FFFA7);
  HIDWORD(v132) = (v438 + 1077897093) ^ 0x13;
  LODWORD(v132) = (v438 + 1077897093) ^ 0x1CBF50C0;
  v442 = v132 >> 6;
  HIDWORD(v132) = (v438 + 1077897093) ^ 0x10D3;
  LODWORD(v132) = (v438 + 1077897093) ^ 0x1CBF4000;
  v443 = v132 >> 13;
  HIDWORD(v132) = (v438 + 1077897093) ^ 0xD3;
  LODWORD(v132) = (v438 + 1077897093) ^ 0x1CBF5000;
  v444 = v132 >> 11;
  v445 = (v422 ^ 0x90930F15) + 1;
  HIDWORD(v132) = (v438 + 1077897093) ^ 0xBF50D3;
  LODWORD(v132) = (v438 + 1077897093) ^ 0x1C000000;
  v446 = (v132 >> 25) + 749917999 + (~(2 * (v132 >> 25)) | 0xA69A51A3);
  HIDWORD(v132) = -1077897114 - v438;
  LODWORD(v132) = (v438 + 1077897093) ^ 0x1CBF50D0;
  v447 = v132 >> 2;
  v448 = (v440 + v445 + 952647845 - ((2 * (v440 + v445)) & 0x7190814A)) ^ 0x38C840A5 ^ (v441 - 966786983);
  v449 = (v444 ^ 0x7FD7F57F) + (v442 ^ 0x795F7EE5) + ((2 * v442) & 0xF2BEFDCA) + ((2 * v444) & 0xFFAFEAFE);
  HIDWORD(v132) = v439 ^ 0x3F50D3;
  LODWORD(v132) = v439 ^ 0x1C800000;
  v450 = (v405 ^ 0xE0CF3BA8) + ((v440 + v423) ^ 0xEED3EF7B) + ((2 * (v440 + v423)) & 0xDDA7DEF6) + v441;
  v451 = ((v132 >> 22) ^ 0xB6BDEF7B)
       + (v447 ^ 0xD7CF77EE)
       + (v443 ^ 0x82002C88)
       + ((2 * (v132 >> 22)) & 0x6D7BDEF6)
       + ((2 * v447) & 0xAF9EEFDC)
       - ((2 * v443) & 0xFBFFA6EE)
       + 1;
  v452 = (v446 ^ 0x626ACD36 ^ (v449 - 2 * ((v449 + 113806236) & 0x4ED81A1B ^ v449 & 3) + 1436591540))
       + (v392 ^ 0x7840C686);
  v453 = ((v448 - 231389574 - ((2 * v448) & 0xE46A8CF4)) ^ 0xF235467A) + (v405 ^ 0x8FA3CB42 ^ v422);
  v454 = (v871 ^ 0xBF558CD6) + ((v450 - 678686498) ^ 0xEFF37FDD) + ((2 * (v450 - 678686498)) & 0xDFE6FFBA) + 269254691;
  v455 = (v454 ^ 0xC0010C01)
       - ((2 * v454) & 0x7FFDE7FC)
       + (v452 ^ 0x3FFEDDEF)
       + ((2 * v452) & 0x7FFDBBDE)
       + ((v451 - ((2 * v451 - 555427812) & 0xDCF807FE) + 1575907341) ^ 0x20B713FA ^ (v453
                                                                                    - ((2 * v453) & 0x9D96200A)
                                                                                    + 1321930757))
       - 1695378935;
  v456 = v455 + 402276173 - ((2 * v455) & 0x2FF47E9A);
  v457 = v456 ^ 0x17FA3F4D;
  v458 = (((v456 ^ 0x17FA3F4D) + v445) ^ 0xBEDFF34F)
       + (((v456 ^ 0x17FA3F4D) + v440) ^ 0xBB0FFCF7)
       + ((2 * ((v456 ^ 0x17FA3F4D) + v440)) & 0x761FF9EE)
       + ((2 * ((v456 ^ 0x17FA3F4D) + v445)) & 0x7DBFE69E);
  HIDWORD(v132) = v456 ^ 1;
  LODWORD(v132) = v456 ^ 0x17FA3F4C;
  v459 = v132 >> 2;
  v460 = (v439 ^ 0xE340AF2C) + 1;
  v461 = (v456 ^ 0x17FA3F4D) + v460 - 1145192530 - ((2 * ((v456 ^ 0x17FA3F4D) + v460)) & 0x777B7F5C);
  HIDWORD(v132) = v456 ^ 0xD;
  LODWORD(v132) = v456 ^ 0x17FA3F40;
  v462 = v132 >> 6;
  HIDWORD(v132) = v456 ^ 0x74D;
  LODWORD(v132) = v456 ^ 0x17FA3800;
  v463 = v132 >> 11;
  HIDWORD(v132) = v456 ^ 0x1F4D;
  LODWORD(v132) = v456 ^ 0x17FA2000;
  v464 = v132 >> 13;
  HIDWORD(v132) = v456 ^ 0x1FA3F4D;
  LODWORD(v132) = v456 ^ 0x16000000;
  v465 = v132 >> 25;
  HIDWORD(v132) = v456 ^ 0x3A3F4D;
  LODWORD(v132) = v456 ^ 0x17C00000;
  v466 = (v463 ^ 0xA0100200)
       + (v465 ^ 0x6B3F0DF7)
       + (v462 ^ 0xB6F5D37F)
       + ((2 * v465) & 0xD67E1BEE)
       + ((2 * v462) & 0x6DEBA6FE)
       - ((2 * v463) & 0xBFDFFBFE)
       + 1035672714
       + (v422 ^ 0xFFADE935 ^ ((v461 ^ 0xBBBDBFAE)
                             + (v422 ^ 0x7896CFA7 ^ v456)
                             - ((2 * ((v461 ^ 0xBBBDBFAE) + (v422 ^ 0x7896CFA7 ^ v456))) & 0x218233BE)
                             - 1866393121));
  v467 = (v405 ^ 0xE0CF3BA8) + (v466 ^ 0x86424504) - ((2 * v466) & 0xF37B75F6) + 2042477308;
  v468 = (v464 ^ 0xFF7D96FF)
       + ((2 * v464) & 0xFEFB2DFE)
       + 8546561
       + (v422 ^ v439 ^ 0xB03D6ECB ^ (v458 - ((2 * v458 + 203431796) & 0x87DD9DE4) + 1241439916));
  v469 = (v459 ^ 0x6DF77FFF)
       + ((v132 >> 22) ^ 0x87BDBD79)
       + ((2 * v459) & 0xDBEEFFFE)
       + ((2 * (v132 >> 22)) & 0xF7B7AF2)
       + (v468 ^ 0x58408A00)
       - ((2 * v468) & 0x4F7EEBFE);
  v470 = (HIDWORD(v852) ^ 0x6ED89BDD) + (v467 ^ 0x7B7BDFE6) + ((2 * v467) & 0xF6F7BFCC) - 115429705;
  v471 = v469 + (v470 ^ 0xBD3FC6CF) + ((2 * v470) & 0x7A7F8D9E);
  v472 = (2 * v471 + 1771365234) & 0x49D4F08C;
  v471 += 431286783;
  v473 = v471 - v472;
  HIDWORD(v132) = v471 ^ 2;
  LODWORD(v132) = v473 ^ 0x24EA7844;
  v474 = v132 >> 2;
  HIDWORD(v132) = v473 ^ 6;
  LODWORD(v132) = v473 ^ 0x24EA7840;
  v475 = v132 >> 6;
  HIDWORD(v132) = v473 ^ 0x46;
  LODWORD(v132) = v473 ^ 0x24EA7800;
  v476 = v132 >> 11;
  HIDWORD(v132) = v473 ^ 0x1846;
  LODWORD(v132) = v473 ^ 0x24EA6000;
  v477 = v473 ^ 0x24EA7846;
  v478 = ((v132 >> 13) ^ 0xF9D7FBB5)
       + (v474 ^ 0x7FF1FFDF)
       + ((2 * v474) & 0xFFE3FFBE)
       + ((2 * (v132 >> 13)) & 0xF3AFF76A);
  v479 = (v476 ^ 0x1800702) + (v475 ^ 0xB672FFFE) + ((2 * v475) & 0x6CE5FFFC) - ((2 * v476) & 0xFCFFF1FA) + 1;
  HIDWORD(v132) = v473 ^ 0x2A7846;
  LODWORD(v132) = v473 ^ 0x24C00000;
  v480 = (v132 >> 22) - ((2 * (v132 >> 22)) & 0x847148FA);
  HIDWORD(v132) = v473 ^ 0xEA7846;
  LODWORD(v132) = v473 ^ 0x24000000;
  v481 = v439 ^ v456;
  v482 = (v481 ^ 0x44B154CA ^ v473 ^ ((v473 ^ 0x24EA7846)
                                    + v460
                                    - ((2 * ((v473 ^ 0x24EA7846) + v460)) & 0xD63C8624)
                                    + 1797145362))
       - 898248179;
  v483 = (v482 ^ 0xBDBDFBFB)
       + ((2 * v482) & 0x7B7BF7F6)
       + 1111622661
       + (v422 ^ ((v132 >> 25) - ((2 * (v132 >> 25)) & 0xA56C2282) - 759819967) ^ 0xF61E5FDE ^ (v479
                                                                                              - 1814972555
                                                                                              + (~(2 * v479 - 1877347842) | 0x68768315)));
  v484 = (HIDWORD(v853) ^ 0x7FC0B93B ^ (v483 - ((2 * v483) & 0x897C5F28) - 994168940))
       + (v481 ^ v461 ^ (v480 - 1036475267) ^ 0x8D08635E ^ (v478 - ((2 * v478 + 208406744) & 0xFF902E26) - 2046944385));
  v485 = v484 - 2125588480 - ((2 * v484) & 0x29C3F08);
  v486 = (v473 ^ 0x24EA7846) + (v456 ^ 0x17FA3F4D) - ((2 * ((v473 ^ 0x24EA7846) + (v456 ^ 0x17FA3F4D))) & 0x71010F08);
  v487 = v485 + 1924;
  v488 = (v485 + 1924) ^ 0x814E1F84;
  v489 = (v456 ^ 0xE805C0B2) + v488 + 1 - ((2 * ((v456 ^ 0xE805C0B2) + v488 + 1)) & 0xA6A0137A);
  HIDWORD(v132) = (v485 + 1924) ^ 0x14E1F84;
  LODWORD(v132) = v485 - 2147481724;
  v490 = v132 >> 25;
  HIDWORD(v132) = (v485 + 1924) ^ 4;
  LODWORD(v132) = (v485 + 1924) ^ 0x814E1F80;
  v491 = v132 >> 6;
  v492 = v488 + (v473 ^ 0x24EA7846) + 1189952680 - ((2 * (v488 + (v473 ^ 0x24EA7846))) & 0x8DDA7950);
  HIDWORD(v132) = v487 ^ 0x1F84;
  LODWORD(v132) = v487 ^ 0x814E0000;
  v493 = v132 >> 13;
  HIDWORD(v132) = v487 ^ 0x784;
  LODWORD(v132) = v487 ^ 0x814E1800;
  v494 = ((v132 >> 11) ^ 0x80224A)
       + (v491 ^ 0xFF6FFFEB)
       + ((2 * v491) & 0xFEDFFFD6)
       - ((2 * (v132 >> 11)) & 0xFEFFBB6A)
       + 1;
  v495 = (v456 ^ 0x17FA3F4D)
       + (((v456 ^ 0x96B420C9 ^ v487) + (v473 ^ 0x24EA7846)) ^ 0xF7FF5DCF)
       + ((2 * ((v456 ^ 0x96B420C9 ^ v487) + (v473 ^ 0x24EA7846))) & 0xEFFEBB9E)
       + 134259249;
  HIDWORD(v132) = v487 ^ 0xE1F84;
  LODWORD(v132) = v487 ^ 0x81400000;
  v496 = ((v490 - ((2 * v490) & 0x505D8C0C) - 1473329658) ^ 0x7A114903 ^ (v494
                                                                        - ((2 * v494 + 2079636) & 0xA47F1E0A)
                                                                        - 766546737))
       + v440;
  v497 = v488 + (v495 ^ 0x50008030) - ((2 * v495) & 0x5FFEFF9E) - 1342210096;
  v498 = (v853 ^ 0x3498719D)
       + (v497 ^ 0xF77EF7FF)
       + ((2 * v497) & 0xEEFDEFFE)
       + (v496 ^ 0x3F8FD61C)
       + ((2 * v496) & 0x7F1FAC38);
  v499 = (v493 ^ 0x8F028A01)
       + ((__PAIR64__(v487, v488) >> 2) ^ 0xFF6D9FCF)
       + ((v132 >> 22) ^ 0xA0609885)
       + ((2 * (__PAIR64__(v487, v488) >> 2)) & 0xFEDB3F9E)
       - ((2 * (v132 >> 22)) & 0xBF3ECEF4)
       - ((2 * v493) & 0xE1FAEBFC)
       + ((v486 - 1199536252) ^ v492 ^ 0xAD3DB291 ^ (v489 + 1397754301))
       - 785433173;
  v500 = ((2 * v499) & 0xF2F3E798)
       + (v499 ^ 0x7979F3CC)
       + ((v498 + 727728131) ^ 0xF7B775FF)
       + ((2 * (v498 + 727728131)) & 0xEF6EEBFE);
  v501 = v500 - ((2 * v500 + 496839786) & 0xAE7B9F3E);
  v502 = v501 + 1712088532;
  HIDWORD(v132) = (v501 + 1712088532) ^ 0x1F;
  LODWORD(v132) = (v501 + 1712088532) ^ 0xD73DCF80;
  v503 = v132 >> 6;
  v504 = (v501 + 1712088532) ^ 0xD73DCF9F;
  v505 = ((v504 + v488) ^ 0xFB4FEEEF) + (v473 ^ 0xC284826 ^ (v501 + 1712088532)) + ((2 * (v504 + v488)) & 0xF69FDDDE);
  HIDWORD(v132) = (v501 + 1712088532) ^ 0xF9F;
  LODWORD(v132) = (v501 + 1712088532) ^ 0xD73DC000;
  v506 = v132 >> 13;
  HIDWORD(v132) = ~(v501 + 1712088556);
  LODWORD(v132) = (v501 + 1712088532) ^ 0xD73DCF9C;
  v507 = v132 >> 2;
  v508 = (v501 + 1712088532) ^ v487;
  v509 = (v508 ^ 0x4DC2F0CE ^ (v504 + (v473 ^ 0x24EA7846) - ((2 * (v504 + (v473 ^ 0x24EA7846))) & 0x376241AA) + 464593109))
       + (v492 ^ 0x46ED3CA8);
  HIDWORD(v132) = v502 ^ 0xFFFFFF9F;
  LODWORD(v132) = v502 ^ 0xD73DC800;
  v510 = (v132 >> 11) - ((2 * (v132 >> 11)) & 0x598EE5C2) - 1396215071;
  HIDWORD(v132) = v510 ^ 0x772E1;
  LODWORD(v132) = v510 ^ 0xACC00000;
  v511 = (v132 >> 19) - ((2 * (v132 >> 19)) & 0xB434AC94);
  HIDWORD(v132) = v502 ^ 0x13DCF9F;
  LODWORD(v132) = v502 ^ 0xD6000000;
  v512 = v132 >> 25;
  v511 += 1511675466;
  HIDWORD(v132) = v511 ^ 0x164A;
  LODWORD(v132) = v511 ^ 0x5A1A4000;
  v513 = v132 >> 13;
  v514 = (v506 ^ 0x12000BA0) + (v507 ^ 0x6FB75ABB) + ((2 * v507) & 0xDF6EB576) - ((2 * v506) & 0xDBFFE8BE);
  HIDWORD(v132) = v502 ^ 0x3DCF9F;
  LODWORD(v132) = v502 ^ 0xD7000000;
  v515 = v457
       + (v512 ^ 0xC2828CF)
       + (v503 ^ 0x37820A40)
       - ((2 * v503) & 0x90FBEB7E)
       - ((2 * v512) & 0xE7AFAE60)
       + (v513 ^ 0x7D7FAFFD)
       + ((2 * v513) & 0xFAFF5FFA)
       + 1054219508;
  v516 = (v473 ^ 0xCEFF0175 ^ (v505 - ((2 * v505 + 157295140) & 0xD42AF266) - 289043899))
       + (v515 ^ 0x4BEAF9DE)
       + ((2 * v515) & 0x97D5F3BC)
       - 1273690590;
  v517 = (HIDWORD(v854) ^ 0x99530634) + (v516 ^ 0xFB707DDF) + ((2 * v516) & 0xF6E0FBBE) - 1977325525;
  v518 = (((v132 >> 22) - ((2 * (v132 >> 22)) & 0x21E2DFFA) - 1863225347) ^ (v509
                                                                           - ((2 * v509) & 0x5B173362)
                                                                           - 1383360079) ^ (v514
                                                                                          + 1
                                                                                          - ((2 * (v514 + 1) + 1016148808) & 0x255DD688)
                                                                                          - 1862826776) ^ 0x2FD41D08)
       + 344657
       + (v517 ^ 0xFFFABDAF)
       + ((2 * v517) & 0xFFF57B5E);
  v519 = (2 * v518) & 0x4FA6DF84;
  v518 -= 1479315518;
  v520 = v518 - v519;
  HIDWORD(v132) = v518 ^ 2;
  LODWORD(v132) = v520 ^ 0xA7D36FC0;
  v521 = (v132 >> 2) - ((2 * (v132 >> 2)) & 0xD31060EC);
  HIDWORD(v132) = v520 ^ 0xFC2;
  LODWORD(v132) = v520 ^ 0xA7D36000;
  v522 = (v132 >> 13) - ((2 * (v132 >> 13)) & 0x77FAB6E0);
  v523 = (v520 ^ 0xA7D36FC2) + v504 - 131958060 - ((2 * ((v520 ^ 0xA7D36FC2) + v504)) & 0xF044F5A8);
  HIDWORD(v132) = v520 ^ 0x136FC2;
  LODWORD(v132) = v520 ^ 0xA7C00000;
  v524 = v132 >> 22;
  HIDWORD(v132) = v520 ^ 0x7C2;
  LODWORD(v132) = v520 ^ 0xA7D36800;
  v525 = v132 >> 11;
  v521 += 1770532982;
  HIDWORD(v132) = v521 ^ 0x3076;
  LODWORD(v132) = v521 ^ 0x69880000;
  v526 = (v132 >> 15) - ((2 * (v132 >> 15)) & 0x4C4C94C6) - 1507440029;
  HIDWORD(v132) = v526 ^ 0x4A63;
  LODWORD(v132) = v526 ^ 0xA6260000;
  v527 = (v132 >> 17) + 14196710 + (~(2 * (v132 >> 17)) | 0xFE4EC035);
  HIDWORD(v132) = v520 ^ 2;
  LODWORD(v132) = v520 ^ 0xA7D36FC0;
  v528 = v132 >> 6;
  HIDWORD(v132) = v520 ^ 0x1D36FC2;
  LODWORD(v132) = v520 ^ 0xA6000000;
  v529 = (v524 ^ 0xFFE3EDF5) + ((2 * v524) & 0xFFC7DBEA) + 1839627 + ((v522 - 1141023888) ^ 0xBB25C495 ^ v527);
  v530 = v529 - ((2 * v529) & 0xACDE55E8);
  v531 = v523 ^ 0xF8227AD4;
  v532 = (((v520 ^ 0xA7D36FC2) + v488) ^ 0x7F757FE0)
       + ((2 * ((v520 ^ 0xA7D36FC2) + v488)) & 0xFEEAFFC0)
       - 2138406880
       + (v523 ^ 0xF8227AD4);
  v533 = (((v487 ^ 0x7EB1E07B)
         + (v520 ^ 0xA7D36FC2)
         + 1
         - ((2 * ((v487 ^ 0x7EB1E07B) + (v520 ^ 0xA7D36FC2) + 1)) & 0xD2569316)
         + 1764444555) ^ v523 ^ 0x9109335F)
       + (v508 ^ 0x5673D01B);
  v534 = v477
       + (v525 ^ 0xF3FDFFCF)
       + ((v132 >> 25) ^ 0x33FFC7BB)
       + ((2 * v525) & 0xE7FBFF9E)
       + ((2 * (v132 >> 25)) & 0x67FF8F76)
       - 670943114;
  v535 = (v528 ^ 0x80202698) - ((2 * v528) & 0xFFBFB2CE) + (v534 ^ 0xFE66DA4B) + ((2 * v534) & 0xFCCDB496);
  v536 = v488 + (v532 ^ 0x7A1E74F6) + ((2 * v532) & 0xF43CE9EC) - 2048816374;
  v537 = v535 + (v536 ^ 0x80383A1) - ((2 * v536) & 0xEFF8F8BC) + 2;
  v538 = ((v533 - ((2 * v533) & 0x59E11036) - 1393522661) ^ 0xFA9FA2EF ^ (v530 + 1450126068))
       + (v854 ^ 0x94037F7C ^ (v537 - ((2 * v537 + 947953396) & 0x60F857D6) + 1287420773));
  v539 = v538 - 1087184960 - ((2 * v538) & 0x7E65BF80);
  v540 = v539 ^ 0xBF32DFC0;
  v541 = (v539 ^ 0xBF32DFC0) + v504 - ((2 * ((v539 ^ 0xBF32DFC0) + v504)) & 0xB167C6AE);
  v542 = (v502 ^ 0x680F105F ^ v539)
       + (((v539 ^ 0xBF32DFC0) + (v520 ^ 0xA7D36FC2)) ^ 0x7FA7EDED)
       + ((2 * ((v539 ^ 0xBF32DFC0) + (v520 ^ 0xA7D36FC2))) & 0xFF4FDBDA)
       - 2141711853;
  HIDWORD(v132) = v538;
  LODWORD(v132) = v539 ^ 0xBF32DFC0;
  v543 = (v132 >> 2) - ((2 * (v132 >> 2)) & 0x777DB3A2) - 1145120303;
  HIDWORD(v132) = v543 ^ 0x3ED9D1;
  LODWORD(v132) = v543 ^ 0xBBBBBBBB;
  v544 = (v132 >> 23) + 540486158 - ((2 * (v132 >> 23)) & 0x406E541C);
  HIDWORD(v132) = v544 ^ 0x20372A0E;
  LODWORD(v132) = v544;
  v545 = v132 >> 30;
  HIDWORD(v132) = v539 ^ 0x7C0;
  LODWORD(v132) = v539 ^ 0xBF32D800;
  v546 = v132 >> 11;
  v547 = v545 - 884942848 - ((2 * v545) & 0x9681B206) + 259;
  HIDWORD(v132) = v547 ^ 0x103;
  LODWORD(v132) = v547 ^ 0xCB40D800;
  v548 = v132 >> 11;
  HIDWORD(v132) = v539 ^ 0x1FC0;
  LODWORD(v132) = v539 ^ 0xBF32C000;
  v549 = v132 >> 13;
  HIDWORD(v132) = v539 ^ 0x132DFC0;
  LODWORD(v132) = v539 ^ 0xBE000000;
  v550 = v132 >> 25;
  v551 = v541 + 1488184151;
  v552 = (v539 ^ 0xBF32DFC0)
       + (v520 ^ 0x582C903D)
       - 1775220252
       + (~(2 * ((v539 ^ 0xBF32DFC0) + (v520 ^ 0x582C903D) + 1)) | 0xD39F6C39)
       + 1;
  HIDWORD(v132) = v538;
  LODWORD(v132) = v539 ^ 0xBF32DFC0;
  v553 = (v546 ^ 0xEAAFBE6E)
       + (v550 ^ 0x6BAFE3F5)
       + ((v132 >> 6) ^ 0xDFFADFFE)
       + ((2 * v550) & 0xD75FC7EA)
       + ((2 * v546) & 0xD55F7CDC)
       + ((2 * (v132 >> 6)) & 0xBFF5BFFC);
  HIDWORD(v132) = v539 ^ 0x32DFC0;
  LODWORD(v132) = v539 ^ 0xBF000000;
  v554 = v487 ^ 0x82096BB4 ^ (v553 - ((2 * v553 + 55245630) & 0x68EE860) - 856886833);
  v555 = (v502 ^ 0x5C6DA35F ^ (v542 - ((2 * v542) & 0x16A0D980) - 1957663552)) - 2114705756;
  v556 = (v555 ^ 0x67EE7BDF) + ((2 * v555) & 0xCFDCF7BE) + v554 - 1743682527;
  v557 = ((v132 >> 22) ^ 0x6FFB79DE)
       + (v549 ^ 0xB3F2CDDF)
       + ((2 * (v132 >> 22)) & 0xDFF6F3BC)
       + ((2 * v549) & 0x67E59BBE)
       + (((v552 ^ v551 ^ 0xCE83AAB4) + v531) ^ 0x20400118)
       - ((2 * ((v552 ^ v551 ^ 0xCE83AAB4) + v531)) & 0xBF7FFDCE)
       + (v548 ^ 0x7FCFFF5F)
       + ((2 * v548) & 0xFF9FFEBE)
       + (HIDWORD(v855) ^ 0x9EB0C217 ^ (v556 - ((2 * v556) & 0xFC080D80) - 33290560))
       + 1006745548;
  v558 = v557 + 238100750;
  v559 = v557 + 238100750 - ((2 * v557) & 0x1C62420C) - 8;
  HIDWORD(v132) = v559 ^ 6;
  LODWORD(v132) = v559 ^ 0xE312100;
  v560 = v132 >> 6;
  HIDWORD(v132) = v559 ^ 0x312106;
  LODWORD(v132) = v559 ^ 0xE000000;
  v561 = (v132 >> 22) - ((2 * (v132 >> 22)) & 0xCEBC65C2);
  HIDWORD(v132) = v559 ^ 0x312106;
  LODWORD(v132) = v559 ^ 0xE000000;
  v562 = v132 >> 25;
  HIDWORD(v132) = v559 ^ 0x106;
  LODWORD(v132) = v559 ^ 0xE312000;
  v563 = (v562 ^ 0xFEFFEB97)
       + (v560 ^ 0x6B77DCBF)
       + ((v132 >> 11) ^ 0x182408)
       + ((2 * v562) & 0xFDFFD72E)
       + ((2 * v560) & 0xD6EFB97E)
       - ((2 * (v132 >> 11)) & 0xFFCFB7EE)
       + 1;
  HIDWORD(v132) = v558 ^ 2;
  LODWORD(v132) = v559 ^ 0xE312104;
  v564 = (v132 >> 2) - ((2 * (v132 >> 2)) & 0x99B4A170);
  v565 = (v559 ^ 0xE312106)
       + (v520 ^ 0xA7D36FC2)
       - ((2 * ((v559 ^ 0xE312106) + (v520 ^ 0xA7D36FC2))) & 0x143CFDF8)
       - 1977712900;
  v566 = ((2 * ((v559 ^ 0xE312106) + (v539 ^ 0xBF32DFC0))) & 0xFFEFB6CC)
       + (((v559 ^ 0xE312106) + (v539 ^ 0xBF32DFC0)) ^ 0x7FF7DB66)
       + (v565 ^ 0x75E18103);
  v567 = (v502 ^ 0xDC2AFDB3 ^ (v563 - ((2 * v563 + 182462274) & 0x162E6458) - 1601747507))
       + (v520 ^ 0x60F45A9C ^ (v566 - ((2 * v566 + 1067318) & 0x8E4E6ABC) + 1194285561));
  HIDWORD(v132) = v559 ^ 0x106;
  LODWORD(v132) = v559 ^ 0xE312000;
  v568 = v855 + (v567 ^ 0x2FCEE7B7) + ((2 * v567) & 0x5F9DCF6E);
  v569 = (v559 ^ v539 ^ 0x3B1D803A ^ v565) + (v552 ^ 0x963049E3);
  v570 = (((v132 >> 13) - ((2 * (v132 >> 13)) & 0xE19683A8) - 255114796) ^ (v564 + 1289375928) ^ (v561 + 1734226657) ^ 0xCA817571 ^ (v569 - ((2 * v569) & 0x239CADF8) + 298735356))
       + ((v568 + 267221282) ^ 0x3BADFDF5)
       + ((2 * (v568 + 267221282)) & 0x775BFBEA)
       - 1001258485;
  v571 = v570 + 775057280 - ((2 * v570) & 0x5C64DF00);
  v572 = (v559 ^ 0xF1CEDEF9)
       + (v571 ^ 0x2E326F80)
       - 1873171914
       - ((2 * ((v559 ^ 0xF1CEDEF9) + (v571 ^ 0x2E326F80) + 1)) & 0x20B3546A);
  HIDWORD(v132) = v571 ^ 0x326F80;
  LODWORD(v132) = v571 ^ 0x2E000000;
  v573 = v132 >> 22;
  HIDWORD(v132) = v571 ^ 0x326F80;
  LODWORD(v132) = v571 ^ 0x2E000000;
  v574 = v132 >> 25;
  HIDWORD(v132) = v570;
  LODWORD(v132) = v571 ^ 0x2E326F80;
  v575 = (v132 >> 6) - ((2 * (v132 >> 6)) & 0xD5054D8C);
  HIDWORD(v132) = v571 ^ 0xF80;
  LODWORD(v132) = v571 ^ 0x2E326000;
  v576 = (v132 >> 13) - ((2 * (v132 >> 13)) & 0x635E02C0);
  v577 = (v539 ^ 0x9100B040 ^ v571)
       + (((v571 ^ 0x2E326F80) + (v559 ^ 0xE312106)) ^ 0xFB1FDD97)
       + ((2 * ((v571 ^ 0x2E326F80) + (v559 ^ 0xE312106))) & 0xF63FBB2E)
       + 81797737;
  HIDWORD(v132) = v570;
  LODWORD(v132) = v571 ^ 0x2E326F80;
  v578 = (v573 ^ 0x401108)
       - 4202754
       - ((2 * v573) & 0xFF7FDDEE)
       + (((v132 >> 2) - ((2 * (v132 >> 2)) & 0x2EA9B230) - 1756047080) ^ (v576 - 1313930912) ^ 0x26FBD878)
       + 4090;
  v579 = (v577 - ((2 * v577) & 0xF5B1224) - 2018670318) ^ v559 ^ v539 ^ (v578 - ((2 * v578) & 0x279B0A10) - 1815247608);
  HIDWORD(v132) = v571 ^ 0x780;
  LODWORD(v132) = v571 ^ 0x2E326800;
  v580 = (v574 ^ 0x18080088)
       - ((2 * v574) & 0xCFEFFEEE)
       - 403177608
       + (((v132 >> 11) - ((2 * (v132 >> 11)) & 0x3F7ED2BC) - 1614845602) ^ (v575 + 1786947270) ^ 0xF53DCF98);
  HIDWORD(v132) = v579 ^ 0x163F2DC;
  LODWORD(v132) = v579 ^ 0xA4000000;
  v581 = (v132 >> 26) - 464857088 - ((2 * (v132 >> 26)) & 0xC895B72E) + 919;
  HIDWORD(v132) = v581 ^ 0x397;
  LODWORD(v132) = v581 ^ 0xE44AD800;
  v582 = (v539 ^ 0x40CD203F)
       + (v572 ^ ((v571 ^ 0x2E326F80)
                + (v539 ^ 0xBF32DFC0)
                - ((2 * ((v571 ^ 0x2E326F80) + (v539 ^ 0xBF32DFC0))) & 0x2AB750A)
                - 2125088123) ^ 0x110C10B0)
       + 1;
  v583 = (v582 ^ 0xAF3BBEFD)
       + ((2 * v582) & 0x5E777DFA)
       + 1355038979
       + (v520 ^ 0x65F3DF75 ^ (v580 - ((2 * v580) & 0x8441616E) - 1038045001));
  v584 = (HIDWORD(v856) ^ 0xE61A9453) + (v583 ^ 0x3DD4FBDA) + ((2 * v583) & 0x7BA9F7B4) + 800867604;
  v585 = (v132 >> 11) - ((2 * (v132 >> 11)) & 0x5E22EBB8) + 789673436;
  HIDWORD(v132) = v585 ^ 0x71175DC;
  LODWORD(v132) = v585 ^ 0x28000000;
  v586 = ((2 * v584) & 0xBFFFDE9E)
       + (v584 ^ 0x5FFFEF4F)
       + ((v132 >> 27) ^ 0x3FFFFEFF)
       + ((2 * (v132 >> 27)) & 0x7FFFFDFE);
  v587 = v586 + 322506754;
  v588 = v586 + 322506754 - ((2 * v586 + 1073750884) & 0x6671FCA0);
  v589 = v588 ^ 0xB338FE50;
  v590 = (v571 ^ 0xD1CD907F) + 1;
  v591 = (v588 ^ 0xB338FE50) + v590 + 607591614 - ((2 * ((v588 ^ 0xB338FE50) + v590)) & 0x486E397C);
  HIDWORD(v132) = v588 ^ 0x10;
  LODWORD(v132) = v588 ^ 0xB338FE40;
  v592 = v132 >> 6;
  HIDWORD(v132) = v588 ^ 0x650;
  LODWORD(v132) = v588 ^ 0xB338F800;
  v593 = v132 >> 11;
  HIDWORD(v132) = v588 ^ 0x1E50;
  LODWORD(v132) = v588 ^ 0xB338E000;
  v594 = v132 >> 13;
  v595 = (v571 ^ 0x9D0A91D0 ^ v588)
       + (((v588 ^ 0xB338FE50) + (v559 ^ 0xE312106)) ^ 0x7EF6B7EE)
       + ((2 * ((v588 ^ 0xB338FE50) + (v559 ^ 0xE312106))) & 0xFDED6FDC)
       - 2130098158;
  HIDWORD(v132) = v588 ^ 0x138FE50;
  LODWORD(v132) = v588 ^ 0xB2000000;
  v596 = v132 >> 25;
  HIDWORD(v132) = v587;
  LODWORD(v132) = v588 ^ 0xB338FE50;
  v597 = ((v132 >> 2) ^ 0xF9FDBFFD) + (v594 ^ 0x77BDBF7F) + ((2 * v594) & 0xEF7B7EFE) + ((2 * (v132 >> 2)) & 0xF3FB7FFA);
  HIDWORD(v132) = v588 ^ 0x38FE50;
  LODWORD(v132) = v588 ^ 0xB3000000;
  v598 = v540
       + (v592 ^ 0x64101100)
       + (v593 ^ 0x7DDF6FFF)
       + (v596 ^ 0x77FFEFF7)
       + ((2 * v593) & 0xFBBEDFFE)
       + ((2 * v596) & 0xEFFFDFEE)
       - ((2 * v592) & 0x37DFDDFE)
       - 1508864246;
  v599 = (v559 ^ 0xF656BAE5 ^ (v595 - ((2 * v595) & 0xF0CF37C6) - 127427613))
       + (v598 ^ 0xDFF5FEFF)
       + ((2 * v598) & 0xBFEBFDFE)
       + 537526529;
  v600 = (v559 ^ 0x42F620A9 ^ v588) + (v591 ^ 0x24371CBE) + 1;
  v601 = (v572 ^ 0x9059AA35) + (v600 ^ 0x17FEEFFC) + ((2 * v600) & 0x2FFDDFF8) - 402583548;
  v602 = (((v132 >> 22) - ((2 * (v132 >> 22)) & 0xF57CD02C) + 2059298838) ^ 0x7D0EF46 ^ (v597
                                                                                       - ((2 * v597 + 478740744) & 0xFADD0EA0)
                                                                                       + 196282324))
       + (v601 ^ 0x4AAFF39B)
       + ((2 * v601) & 0x955FE736)
       - 1253045147;
  v603 = (v856 ^ 0xF29A4F64) + (v599 ^ 0xFCFF7987) + ((2 * v599) & 0xF9FEF30E) + 1435067169;
  v604 = ((2 * v602) & 0x4DFFFBF6) + (v602 ^ 0x26FFFDFB) + (v603 ^ 0xAFF8FFDE) + ((2 * v603) & 0x5FF1FFBC);
  v605 = (2 * v604 + 1376650318) & 0x660ABAF0;
  v604 += 1544314783;
  v606 = v604 - v605;
  HIDWORD(v132) = (v604 - v605) ^ 0x578;
  LODWORD(v132) = (v604 - v605) ^ 0x33055800;
  v607 = v132 >> 11;
  HIDWORD(v132) = (v604 - v605) ^ 0x38;
  LODWORD(v132) = (v604 - v605) ^ 0x33055D40;
  v608 = v132 >> 6;
  HIDWORD(v132) = (v604 - v605) ^ 0x1D78;
  LODWORD(v132) = (v604 - v605) ^ 0x33054000;
  v609 = v132 >> 13;
  HIDWORD(v132) = (v604 - v605) ^ 0x1055D78;
  LODWORD(v132) = (v604 - v605) ^ 0x33333333;
  v610 = (v132 >> 25) - ((2 * (v132 >> 25)) & 0x1497ACA0);
  v611 = v606 ^ 0x33055D78;
  HIDWORD(v132) = v604;
  LODWORD(v132) = (v604 - v605) ^ 0x33055D78;
  v612 = (v609 ^ 0x3D7FBECF) + ((v132 >> 2) ^ 0xBAF4D31F) + ((2 * (v132 >> 2)) & 0x75E9A63E) + ((2 * v609) & 0x7AFF7D9E);
  v613 = (v606 ^ 0x33055D78) + v590;
  v614 = (v588 ^ 0x4CC701AF) + 1;
  v615 = (v606 ^ 0x33055D78) + v614;
  v616 = (v613 ^ 0x7B75DECE) + (v615 ^ 0xFE4BFF7E);
  v617 = v616 + ((2 * v615) & 0xFC97FEFC) + ((2 * v613) & 0xF6EBBD9C);
  v618 = (v607 ^ 0x188A010) + (v608 ^ 0x3FFF37BF) + ((2 * v608) & 0x7FFE6F7E) - ((2 * v607) & 0xFCEEBFDE);
  HIDWORD(v132) = v606 ^ 0x55D78;
  LODWORD(v132) = v606 ^ 0x33333333;
  v619 = v617 - 2 * ((v617 + 104735156) & 0x48F3DDDF ^ v616 & 1) - 818806894;
  v620 = v559 ^ v571 ^ (v610 - 1974741424) ^ v619 ^ (v618
                                                   + 1
                                                   - 2 * ((v618 + 1048062001) & 0x6E6CD8DB ^ (v618 + 1) & 8)
                                                   - 1394278141) ^ 0xCD79DDB;
  v621 = (((v132 >> 22) - ((2 * (v132 >> 22)) & 0x22EFC650) - 1854414040) ^ 0xF3C44931 ^ (v612
                                                                                        - ((2 * v612 + 253156388) & 0xC5675432)
                                                                                        + 1782519851))
       + (v591 ^ 0x933B3E9F ^ v619)
       + 1;
  v622 = (v621 ^ 0xDEFFFDFB)
       + ((2 * v621) & 0xBDFFFBF6)
       + 553648645
       + (HIDWORD(v857) ^ 0x4F23B86 ^ (v620 - 2 * ((v620 + 1922563192) & 0x6FEFC86D ^ v620 & 5) - 494418720));
  v623 = v622 - 2095159208 - ((2 * v622) & 0x63CD0B0);
  v624 = v623 ^ 0x831E6858;
  v625 = (v623 ^ 0x831E6858) + (v588 ^ 0xB338FE50) - ((2 * ((v623 ^ 0x831E6858) + (v588 ^ 0xB338FE50))) & 0xDBD44E1E);
  HIDWORD(v132) = v623 ^ 0x18;
  LODWORD(v132) = v623 ^ 0x831E6840;
  v626 = (v132 >> 6) - ((2 * (v132 >> 6)) & 0x52EE9ABA);
  HIDWORD(v132) = v623 ^ 0x11E6858;
  LODWORD(v132) = v623 ^ 0x83FFFFFF;
  v627 = (v132 >> 25) - ((2 * (v132 >> 25)) & 0xF646E3F2);
  HIDWORD(v132) = v623 ^ 0x58;
  LODWORD(v132) = v623 ^ 0x831E6800;
  v628 = v606 ^ v588;
  v629 = (((v628 ^ 0x803DA328) + v614) ^ 0x5F1ED7F6)
       + ((2 * ((v628 ^ 0x803DA328) + v614)) & 0xBE3DAFEC)
       - 1595856886
       + (v571 ^ ((v132 >> 11) - 1162428184 + (~(2 * (v132 >> 11)) | 0x8A927E31)) ^ (v626 - 1451799203) ^ (v627 + 2065920505) ^ 0x46D093C3);
  HIDWORD(v132) = v623 ^ 0x858;
  LODWORD(v132) = v623 ^ 0x831E6000;
  v630 = v132 >> 13;
  HIDWORD(v132) = v623 ^ 0x1E6858;
  LODWORD(v132) = v623 ^ 0x83000000;
  v631 = v132 >> 22;
  v632 = v623 ^ v606;
  HIDWORD(v132) = v622;
  LODWORD(v132) = v623 ^ 0x831E6858;
  v633 = (v628 ^ 0x7FC25CD7) + (v623 ^ v606 ^ 0xDDF1122F ^ (v625 + 1844061967)) + 1;
  v634 = (v631 ^ 0x6EFB9FB6)
       + (v630 ^ 0x7D7CF73C)
       + ((v132 >> 2) ^ 0x7FF9E4BB)
       + ((2 * v631) & 0xDDF73F6C)
       + ((2 * v630) & 0xFAF9EE78)
       + ((2 * (v132 >> 2)) & 0xFFF3C976)
       + (v633 ^ 0xEEF7FDEB)
       + ((2 * v633) & 0xDDEFFBD6)
       - 1533704600
       + (HIDWORD(a40) ^ 0x100C53FC ^ (((2 * v629) & 0xE97FBFE)
                                     + (v629 ^ 0x74BFDFF)
                                     - ((2 * (((2 * v629) & 0xE97FBFE) + (v629 ^ 0x74BFDFF)) + 920225790) & 0xE9B9752C)
                                     - 1874231659));
  v635 = v634 + 823891553 - ((2 * v634) & 0x62372CC2);
  HIDWORD(v132) = v635 ^ 0x1B9661;
  LODWORD(v132) = v635 ^ 0x31000000;
  v636 = (v132 >> 22) - ((2 * (v132 >> 22)) & 0x87674D4E);
  HIDWORD(v132) = v635 ^ 0xFFFFFFE1;
  LODWORD(v132) = v635 ^ 0x311B9640;
  v637 = v132 >> 6;
  HIDWORD(v132) = v635 ^ 0x661;
  LODWORD(v132) = v635 ^ 0x311B9000;
  v638 = ((v132 >> 11) ^ 0x280C149A)
       + (v637 ^ 0xEE7B7EBB)
       + ((2 * v637) & 0xDCF6FD76)
       - ((2 * (v132 >> 11)) & 0xAFE7D6CA)
       + 1;
  v639 = v635 ^ 0x311B9661;
  v640 = (v606 ^ 0x21ECB19 ^ v635)
       + (((v635 ^ 0x311B9661) + (v623 ^ 0x831E6858)) ^ 0x3BEE9DF7)
       + ((2 * ((v635 ^ 0x311B9661) + (v623 ^ 0x831E6858))) & 0x77DD3BEE)
       - 1005493751;
  HIDWORD(v132) = v635 ^ 0x11B9661;
  LODWORD(v132) = v635 ^ 0x30000000;
  v641 = (v132 >> 25) - ((2 * (v132 >> 25)) & 0xA2F9B972);
  HIDWORD(v132) = v635 ^ 1;
  LODWORD(v132) = v635 ^ 0x311B9660;
  v642 = (v132 >> 2) - ((2 * (v132 >> 2)) & 0xFF9874E4);
  HIDWORD(v132) = v635 ^ 0x1661;
  LODWORD(v132) = v635 ^ 0x311B8000;
  v643 = ((v641 - 780346183) ^ 0xABAAD49F ^ (v638 - ((2 * v638 - 755967660) & 0xF5AC104C) + 1682863312)) + v589;
  v644 = (v632 ^ 0x7B26355 ^ (v640 - ((2 * v640) & 0x6F52ACEA) - 1213639051))
       + ((v642 + 2144090738) ^ ((v132 >> 13) - ((2 * (v132 >> 13)) & 0x20F04B3E) + 276309407) ^ (v636 - 1011636569) ^ 0xAC07B94A);
  v645 = (v623 ^ 0x2B436832 ^ (v643 - ((2 * v643) & 0x50BA00D4) - 1470300054)) + 846739860;
  v646 = (a38 ^ 0xD672F482) + (v645 ^ 0xE6FFAFDB) + ((2 * v645) & 0xCDFF5FB6) + 419450918;
  v647 = ((2 * v644) & 0xFFFF6DAE) + (v644 ^ 0x7FFFB6D7) + (v646 ^ 0xFAEFBEAB) + ((2 * v646) & 0xF5DF7D56);
  v648 = v647 - ((2 * v647 + 169940220) & 0x51B2598A);
  v649 = v648 + 770291523;
  v650 = (v648 + 770291523) ^ 0xA8D92CC5;
  HIDWORD(v132) = (v648 + 770291523) ^ 5;
  LODWORD(v132) = (v648 + 770291523) ^ 0xA8D92CC0;
  v651 = (v132 >> 6) - ((2 * (v132 >> 6)) & 0xCB46CD62);
  HIDWORD(v132) = (v648 + 770291523) ^ 0xD92CC5;
  LODWORD(v132) = (v648 + 770291523) ^ 0xA8000000;
  v652 = v132 >> 25;
  HIDWORD(v132) = (v648 + 770291523) ^ 0x4C5;
  LODWORD(v132) = (v648 + 770291523) ^ 0xA8D92800;
  v653 = (v132 >> 11) - ((2 * (v132 >> 11)) & 0xBA4CAA56);
  HIDWORD(v132) = (v648 + 770291523) ^ 0xCC5;
  LODWORD(v132) = (v648 + 770291523) ^ 0xA8D92000;
  v654 = v132 >> 13;
  HIDWORD(v132) = (v648 - 1) ^ 1;
  LODWORD(v132) = (v648 + 770291523) ^ 0xA8D92CC4;
  v655 = (v652 ^ 0x73FDFFE7)
       + ((2 * v652) & 0xE7FBFFCE)
       - 1946025958
       + ((v653 - 584690389) ^ (v651 + 1705207473) ^ 0x477ACC65);
  v656 = (v654 ^ 0x21521209)
       + ((v132 >> 2) ^ 0xE3EFBDD4)
       + ((2 * (v132 >> 2)) & 0xC7DF7BA8)
       - ((2 * v654) & 0xBD5BDBEC)
       + 1;
  HIDWORD(v132) = v649 ^ 0x192CC5;
  LODWORD(v132) = v649 ^ 0xA8C00000;
  v657 = (v635 ^ 0xCEE4699E) + v650 + 1 - ((2 * ((v635 ^ 0xCEE4699E) + v650 + 1)) & 0x9023B26C) - 938354378;
  v658 = v611 + (v655 ^ 0x67F75F7F) + ((2 * v655) & 0xCFEEBEFE) - 1744265087;
  v659 = (((v132 >> 22) - ((2 * (v132 >> 22)) & 0xD3CA63F8) - 370855428) ^ 0x17A80C7E ^ (v656
                                                                                       - ((2 * v656 - 176398268) & 0xFC9A7B04)
                                                                                       - 116691548))
       + (v623 ^ ((v623 ^ 0x7CE197A7)
                + (v635 ^ 0x311B9661)
                + 1176974272
                + (~(2 * ((v623 ^ 0x7CE197A7) + (v635 ^ 0x311B9661) + 1)) | 0x73B19883)) ^ v649 ^ 0xA5F1AE15 ^ v657);
  v660 = ((2 * v623) ^ 0x7D42278F) + ((4 * v623) & 0xF6FDEE7C ^ 0x479A060) - 2071918399 + v650;
  v661 = (v660 ^ 0xDF3FEEEF) + ((2 * v660) & 0xBE7FDDDE) + 549458194 + (v657 ^ 0x37EE26C9);
  v662 = (v857 ^ 0xD157FE46)
       + (v661 ^ 0xEBABF645)
       + ((2 * v661) & 0xD757EC8A)
       + (v658 ^ 0xFFF7DB7F)
       + ((2 * v658) & 0xFFEFB6FE)
       + 1352779030;
  v663 = ((2 * v659) & 0xDDFDF9F4) + (v659 ^ 0xEEFEFCFA) + (v662 ^ 0xEBFCAFEB) + ((2 * v662) & 0xD7F95FD6);
  v664 = v663 - 69459501 - ((2 * v663 + 1242080822) & 0xADAF9D30) - 32;
  HIDWORD(v132) = v664 ^ 0xE98;
  LODWORD(v132) = v664 ^ 0xD6D7C000;
  v665 = v132 >> 13;
  v666 = v664 ^ 0xD6D7CE98;
  HIDWORD(v132) = v664 ^ 0x17CE98;
  LODWORD(v132) = v664 ^ 0xD6C00000;
  v667 = v132 >> 22;
  v668 = v635 ^ 0x99C2BAA4 ^ v649;
  v669 = v668 + v639 - ((2 * (v668 + v639)) & 0x650D1A7E);
  v670 = v668
       + (((v664 ^ 0xD6D7CE98) + v639) ^ 0xF76F5ADE)
       + ((2 * ((v664 ^ 0xD6D7CE98) + v639)) & 0xEEDEB5BC)
       + 143697186;
  HIDWORD(v132) = v664 ^ 0x698;
  LODWORD(v132) = v664 ^ 0xD6D7C800;
  v671 = v132 >> 11;
  HIDWORD(v132) = v664 ^ 0x18;
  LODWORD(v132) = v664 ^ 0xD6D7CE80;
  v672 = v132 >> 6;
  HIDWORD(v132) = v664 ^ 0xD7CE98;
  LODWORD(v132) = v664 ^ 0xD6000000;
  v673 = v624
       + ((v132 >> 25) ^ 0x8904C0A2)
       + (v671 ^ 0x93008789)
       + (v672 ^ 0x2026641)
       - ((2 * v671) & 0xD9FEF0EC)
       - ((2 * (v132 >> 25)) & 0xEDF67EBA)
       - ((2 * v672) & 0xFBFB337C)
       - 503819884;
  v674 = (v669 + 847678783) ^ 0x7F4A4F9A ^ (v673 - ((2 * v673) & 0x9B99854A) + 1305264805);
  HIDWORD(v132) = v663 - 69459501;
  LODWORD(v132) = v664 ^ 0xD6D7CE98;
  v675 = (v649 ^ 0x7E0EE25D ^ v664) + (v670 ^ 0x3212020D) - ((2 * v670) & 0x9BDBFBE4) - 840040973;
  v676 = (v667 ^ 0xFF3FD734)
       + (v665 ^ 0xFFBFF7FF)
       + ((v132 >> 2) ^ 0x737FBD7F)
       + ((2 * v667) & 0xFE7FAE68)
       + ((2 * v665) & 0xFF7FEFFE)
       + ((2 * (v132 >> 2)) & 0xE6FF7AFE)
       + (v675 ^ 0xF9E6B8FF)
       + ((2 * v675) & 0xF3CD71FE)
       - 1818641841
       + (a41 ^ 0xB45D51A8 ^ (v674 - 662400878 + (~(2 * v674 + 1590488644) | 0xADC3CD21)));
  v677 = v676 + 1609988268 - ((2 * v676) & 0xBFECF158);
  v678 = (v649 ^ 0x5726D33A) + (v677 ^ 0x5FF678AC) + 1;
  HIDWORD(v132) = v677 ^ 0x18AC;
  LODWORD(v132) = v677 ^ 0x5FF66000;
  v679 = v132 >> 13;
  HIDWORD(v132) = v677 ^ 0x2C;
  LODWORD(v132) = v677 ^ 0x5FF67880;
  v680 = v132 >> 6;
  v681 = v678 + 1369400955 - ((2 * v678) & 0xA33ECCF6);
  v682 = (v664 ^ 0x29283167) + 1;
  v683 = (v677 ^ 0x5FF678AC) + v682 - 662939320 - ((2 * ((v677 ^ 0x5FF678AC) + v682)) & 0xB0F8B290);
  HIDWORD(v132) = v677 ^ 0xAC;
  LODWORD(v132) = v677 ^ 0x5FF67800;
  v684 = v132 >> 11;
  v685 = (((v664 ^ 0xD6D7CE98) + v650) ^ 0x8D402482)
       - ((2 * ((v664 ^ 0xD6D7CE98) + v650)) & 0xE57FB6FA)
       + (((v681 ^ 0x519F667B) + (v683 ^ 0xD87C5948)) ^ 0xFFDFDFF7)
       + ((2 * ((v681 ^ 0x519F667B) + (v683 ^ 0xD87C5948))) & 0xFFBFBFEE)
       + 1;
  HIDWORD(v132) = v677 ^ 0x1F678AC;
  LODWORD(v132) = v677 ^ 0x5E000000;
  v686 = v639
       - 1652604933
       + ((v132 >> 25) ^ 0x2008004)
       + (v680 ^ 0xE280C238)
       + (v684 ^ 0x7DFF77DD)
       - ((2 * v680) & 0x3AFE7B8E)
       - ((2 * (v132 >> 25)) & 0xFBFEFFF6);
  HIDWORD(v132) = v676;
  LODWORD(v132) = v677 ^ 0x5FF678AC;
  v687 = v132 >> 2;
  v688 = ((v681 ^ v683 ^ 0x89E33F33) + v650 - ((2 * ((v681 ^ v683 ^ 0x89E33F33) + v650)) & 0x7AEC9948) + 1031163044) ^ 0xADBAEFE7 ^ (v686 + ((2 * v684) & 0xFBFEEFBA) + 1516 - ((2 * (v686 + ((2 * v684) & 0xFBFEEFBA) + 1516)) & 0x21994686) - 1865637053);
  HIDWORD(v132) = v677 ^ 0x3678AC;
  LODWORD(v132) = v677 ^ 0x5FC00000;
  v689 = ((v132 >> 22) ^ 0xAEFB7F7D)
       + (v687 ^ 0x7F9FEDF5)
       + (v679 ^ 0xE4D05A24)
       + ((2 * (v132 >> 22)) & 0x5DF6FEFA)
       + ((2 * v687) & 0xFF3FDBEA)
       - ((2 * v679) & 0x365F4BB6)
       + 1;
  v690 = (v874 ^ 0xF3D002A3 ^ (v688 - ((2 * v688 + 1845629730) & 0x8127A350) - 141239495))
       + ((v689 - ((2 * v689 + 422080722) & 0x39E10D9C) + 159694647) ^ 0x17A85B72 ^ (v685
                                                                                   - ((2 * v685 + 96466700) & 0x16B1BB78)
                                                                                   + 2117654850));
  v691 = v690 + 1975210037 - ((2 * v690) & 0xEB76A06A);
  v692 = v691 ^ 0x75BB5035;
  v693 = (v691 ^ 0x75BB5035)
       + (v677 ^ 0x5FF678AC)
       + 1057904863
       - ((2 * ((v691 ^ 0x75BB5035) + (v677 ^ 0x5FF678AC))) & 0x7E1CB1BE);
  HIDWORD(v132) = v691 ^ 0x35;
  LODWORD(v132) = v691 ^ 0x75BB5000;
  v694 = (v132 >> 11) - ((2 * (v132 >> 11)) & 0xE683BA36);
  v695 = ((2 * ((v691 ^ 0x75BB5035) + v682)) & 0xDDFDF7F4) + (((v691 ^ 0x75BB5035) + v682) ^ 0x6EFEFBFA);
  v696 = (v677 ^ 0x2A4D2899 ^ v691)
       + 1862204410
       - v695
       - ((2 * ((v677 ^ 0x2A4D2899 ^ v691) + 1862204410 - v695)) & 0x57EA03AE);
  HIDWORD(v132) = v691 ^ 0x35;
  LODWORD(v132) = v691 ^ 0x75BB5000;
  v697 = (v132 >> 6) - ((2 * (v132 >> 6)) & 0xF59A0948);
  HIDWORD(v132) = v691 ^ 0x1BB5035;
  LODWORD(v132) = v691 ^ 0x74000000;
  v698 = ((v132 >> 25) ^ 0x41B8411)
       - ((2 * (v132 >> 25)) & 0xF7C8F7DC)
       - 68912145
       + ((v697 + 2060256420) ^ (v694 + 1933696283) ^ 0x98CD9BF);
  HIDWORD(v132) = v691 ^ 0x3B5035;
  LODWORD(v132) = v691 ^ 0x75800000;
  v699 = v132 >> 22;
  v700 = v650 + (v698 ^ 0x2FD6EF98) + ((2 * v698) & 0x5FADDF30) - 802615192;
  HIDWORD(v132) = v691 ^ 1;
  LODWORD(v132) = v691 ^ 0x75BB5034;
  v701 = (v132 >> 2) - ((2 * (v132 >> 2)) & 0x44571DCC);
  HIDWORD(v132) = v691 ^ 0x1035;
  LODWORD(v132) = v691 ^ 0x75BB4000;
  v702 = (v664 ^ 0x8921B634 ^ v677)
       + ((v695 - 1862204410 + (v693 ^ 0x3F0E58DF)) ^ 0x76D7BFFF)
       + ((2 * (v695 - 1862204410 + (v693 ^ 0x3F0E58DF))) & 0xEDAF7FFE)
       - 1993850879;
  v703 = v664 ^ (v696 + 737477079) ^ 0x4B334C78 ^ (v700 - ((2 * v700) & 0x6C23066E) - 1240366281);
  v704 = (v699 ^ 0x81400005)
       - ((2 * v699) & 0xFD7FFFF4)
       + (((v132 >> 13) - ((2 * (v132 >> 13)) & 0x1742AF16) + 195123083) ^ (v701 - 1574203674) ^ 0xA98AD96D)
       + (v702 ^ 0xD6063002)
       - ((2 * v702) & 0x53F39FFA)
       - 1464217607;
  v705 = (v331 ^ 0x7ADE39AF) + ((v703 - 1298429573) ^ 0x1E6BFFE7) + ((2 * (v703 - 1298429573)) & 0x3CD7FFCE) - 510394343;
  v706 = ((2 * v704) & 0xBF77B736) + (v704 ^ 0xDFBBDB9B) + (v705 ^ 0xDBAF58FE) + ((2 * v705) & 0xB75EB1FC);
  v707 = v706 - 76348585;
  v708 = 2 * v706 + 153720526;
  v709 = (~v708 | 0x92439021) + v706 - 76348585;
  v710 = v709 ^ 0xB6DE37EF;
  HIDWORD(v132) = v708 - v707;
  LODWORD(v132) = v709 ^ 0xB6DE37EC;
  v711 = (v132 >> 2) - ((2 * (v132 >> 2)) & 0x413CA026);
  HIDWORD(v132) = v709 ^ 0xDE37EF;
  LODWORD(v132) = v709 ^ 0xB6000000;
  v712 = v132 >> 25;
  HIDWORD(v132) = v709 ^ 0x1E37EF;
  LODWORD(v132) = v709 ^ 0xB6C00000;
  v713 = v132 >> 22;
  v714 = (v691 ^ 0x75BB5035)
       + (((v709 ^ 0xB6DE37EF) + (v677 ^ 0x5FF678AC)) ^ 0x73C7FDF9)
       + ((2 * ((v709 ^ 0xB6DE37EF) + (v677 ^ 0x5FF678AC))) & 0xE78FFBF2)
       - 1942486521;
  v715 = (v709 ^ 0xB6DE37EF) + (v714 ^ 0x83082402) - ((2 * v714) & 0xF9EFB7FA) + 2096618494;
  HIDWORD(v132) = v709 ^ 0xFFFFFFEF;
  LODWORD(v132) = v709 ^ 0xB6DE3000;
  v716 = v132 >> 11;
  HIDWORD(v132) = v709 ^ 0xFFFFFFEF;
  LODWORD(v132) = v709 ^ 0xB6DE37C0;
  v717 = v132 >> 6;
  HIDWORD(v132) = v709 ^ 0x17EF;
  LODWORD(v132) = v709 ^ 0xB6DE2000;
  v718 = v709 ^ v691;
  v719 = (v713 ^ 0x32451004)
       - ((2 * v713) & 0x9B75DFF6)
       - 843386884
       + ((v711 + 547246099) ^ ((v132 >> 13) - ((2 * (v132 >> 13)) & 0x283B8594) + 337494730) ^ 0x348392D9);
  v720 = (v677 ^ 0x16D7B0BC ^ v709) + (v709 ^ v691 ^ 0xC36567DA) + 1;
  v721 = (v677 ^ 0x5FF678AC) + (v720 ^ 0x7DE1F38E) + ((2 * v720) & 0xFBC3E71C);
  v722 = (v719 ^ 0x7FFDE686)
       + ((2 * v719) & 0xFFFBCD0C)
       - 2147346054
       + (v693 ^ 0x89870642 ^ (v715 - ((2 * v715) & 0x6D12BD3A) - 1232511331));
  v723 = v666
       + (v712 ^ 0x2C3A3083)
       + (v717 ^ 0x2382802)
       + (v716 ^ 0xDDBDFDF6)
       - ((2 * v717) & 0xFB8FAFFA)
       - ((2 * v712) & 0xA78B9EF8)
       + ((2 * v716) & 0xBB7BFBEC)
       + ((v721 - 2111959950) ^ 0x88002610)
       - ((2 * (v721 - 2111959950)) & 0xEFFFB3DE)
       + 1808761717;
  v724 = (v722 ^ 0x7F767BFE)
       + ((2 * v722) & 0xFEECF7FC)
       - 2138471422
       + (v300 ^ 0x42F281FE ^ (((2 * v723) & 0x5CEEFEFC)
                             + (v723 ^ 0xAE777F7E)
                             - ((2 * (((2 * v723) & 0x5CEEFEFC) + (v723 ^ 0xAE777F7E)) + 904612110) & 0x7C4B1730)
                             + 421212191));
  v725 = v724 - 489236428 - ((2 * v724) & 0xC5ADB068);
  HIDWORD(v132) = v725 ^ 0x34;
  LODWORD(v132) = v725 ^ 0xE2D6D800;
  v726 = v132 >> 11;
  v727 = v725 ^ 0xE2D6D834;
  HIDWORD(v132) = v725 ^ 0x34;
  LODWORD(v132) = v725 ^ 0xE2D6D800;
  v728 = v132 >> 6;
  v729 = v709 ^ 0x5408EFDB ^ v725;
  v730 = (v691 ^ 0x689277FE ^ v725) + v729 + 1 - ((2 * ((v691 ^ 0x689277FE ^ v725) + v729 + 1)) & 0xAB72C21C);
  HIDWORD(v132) = v725 ^ 0xD6D834;
  LODWORD(v132) = v725 ^ 0xE3FFFFFF;
  v731 = v132 >> 25;
  v732 = ((2 * ((v725 ^ 0xE2D6D834) + (v709 ^ 0x4921C810) + 1)) & 0x7FEEFFFC)
       + (((v725 ^ 0xE2D6D834) + (v709 ^ 0x4921C810) + 1) ^ 0xBFF77FFE)
       + (((v691 ^ 0x75BB5035) + (v725 ^ 0x1D2927CB) + 1) ^ 0x9BF0FE66)
       + ((2 * ((v691 ^ 0x75BB5035) + (v725 ^ 0x1D2927CB) + 1)) & 0x37E1FCCC);
  HIDWORD(v132) = v725 ^ 0x1834;
  LODWORD(v132) = v725 ^ 0xE2D6C000;
  v733 = v132 >> 13;
  v734 = (v732 - ((2 * v732 + 137298744) & 0x3C658376) + 1112163159) ^ v691;
  v735 = (v731 ^ 0x82081028)
       + (v726 ^ 0x96014202)
       + (v728 ^ 0x99FEDF7F)
       + ((2 * v728) & 0x33FDBEFE)
       - ((2 * v731) & 0xFBEFDFAE)
       - ((2 * v726) & 0xD3FD7BFA)
       + 2;
  HIDWORD(v132) = v725 ^ 0x16D834;
  LODWORD(v132) = v725 ^ 0xE2C00000;
  v736 = v132 >> 22;
  HIDWORD(v132) = v734 ^ 0x89918E;
  LODWORD(v132) = v734 ^ 0xEB000000;
  v737 = (v132 >> 24) + 825487872 - ((2 * (v132 >> 24)) & 0x6267E5A4) + 210;
  HIDWORD(v132) = v737 ^ 0xD2;
  LODWORD(v132) = v737 ^ 0x3133F200;
  v738 = (v132 >> 8) - ((2 * (v132 >> 8)) & 0x1EF3D18A);
  HIDWORD(v132) = v724;
  LODWORD(v132) = v725 ^ 0xE2D6D834;
  v739 = (v736 ^ 0xE1005108)
       + (v733 ^ 0x8C00420A)
       + ((v132 >> 2) ^ 0x337FFC5F)
       + ((2 * (v132 >> 2)) & 0x66FFF8BE)
       - ((2 * v736) & 0x3DFF5DEE)
       - ((2 * v733) & 0xE7FF7BEA)
       + 2;
  v740 = (v677 ^ (v735 - ((2 * v735 + 468688042) & 0x79BFAB14) - 1965579297) ^ 0xEC5045E3 ^ (v738 - 1887835963))
       + 1088089828;
  v741 = (HIDWORD(v874) ^ 0x23BDC5B2) + (v740 ^ 0x4F5F7BF3) + ((2 * v740) & 0x9EBEF7E6) - 1331657714;
  v742 = (v718 ^ (v730 + 1438212366) ^ 0x4136E14 ^ (v739 - ((2 * v739 + 1056891162) & 0x259ED180) - 229713587))
       + (v741 ^ 0x7FF78A5F)
       + ((2 * v741) & 0xFFEF14BE)
       - 2146929247;
  v743 = v742 - 527458207 - ((2 * v742) & 0xC11F40C2);
  v744 = v743 ^ 0xE08FA061;
  v745 = (v743 ^ 0xE08FA061) + (v725 ^ 0xE2D6D834);
  HIDWORD(v132) = v743 ^ 0xFFFFFFE1;
  LODWORD(v132) = v743 ^ 0xE08FA040;
  v746 = (v132 >> 6) - ((2 * (v132 >> 6)) & 0xF83B9D54);
  HIDWORD(v132) = v743 ^ 1;
  LODWORD(v132) = v743 ^ 0xE08FA060;
  v747 = (v132 >> 2) - ((2 * (v132 >> 2)) & 0x795D076E);
  HIDWORD(v132) = v743 ^ 0x8FA061;
  LODWORD(v132) = v743 ^ 0xE0000000;
  v748 = v132 >> 25;
  HIDWORD(v132) = v743 ^ 0x61;
  LODWORD(v132) = v743 ^ 0xE08FA000;
  v749 = (v132 >> 11) - ((2 * (v132 >> 11)) & 0xCB0680AE);
  HIDWORD(v132) = v743 ^ 0xFA061;
  LODWORD(v132) = v743 ^ 0xE0800000;
  v750 = (v132 >> 22) - ((2 * (v132 >> 22)) & 0x7B14A98);
  HIDWORD(v132) = v743 ^ 0x61;
  LODWORD(v132) = v743 ^ 0xE08FA000;
  v751 = v743 ^ v709;
  v752 = (v748 ^ 0xEDFFBE77)
       + ((2 * v748) & 0xDBFF7CEE)
       + 302006666
       + ((v749 + 1703100503) ^ (v746 - 65155414) ^ 0x66617102);
  v753 = (v751 ^ 0xAB597EB3 ^ (v745 - ((2 * v745) & 0xFA11D27A) - 49747651)) + v710;
  v754 = v692 + (v752 ^ 0xF3B47BEC) + ((2 * v752) & 0xE768F7D8);
  v755 = v751 ^ 0x11B67E15 ^ (v745 - ((2 * v745) & 0x8FCFD336) + 1206380955);
  v756 = (HIDWORD(v869) ^ 0x5D59E08A)
       + (v753 ^ 0x7FFE7B74)
       + ((2 * v753) & 0xFFFCF6E8)
       + ((v754 + 206275604) ^ 0xFF37FF7B)
       + ((2 * (v754 + 206275604)) & 0xFE6FFEF6)
       + 1462309420;
  v757 = ((v755 + v729) ^ 0x80404580)
       + 2143268731
       + ((v747 - 1129413705) ^ ((v132 >> 13) - ((2 * (v132 >> 13)) & 0x5C81D10A) - 1371477883) ^ (v750 + 64529740) ^ 0x1136CE7E)
       - ((2 * (v755 + v729)) & 0xFF7F74FE)
       + 2821;
  v758 = ((2 * v757) & 0xFF8EEDF8) + (v757 ^ 0x7FC776FC) + (v756 ^ 0x1DDFDBF7) + ((2 * v756) & 0x3BBFB7EE);
  v759 = v758 - ((2 * v758 + 1152473626) & 0x47C26AC6);
  v760 = v759 - 2043026832;
  HIDWORD(v132) = (v759 - 2043026832) ^ 0xFFFFFFE3;
  LODWORD(v132) = (v759 - 2043026832) ^ 0x23E13540;
  v761 = v132 >> 6;
  HIDWORD(v132) = (v759 - 2043026832) ^ 0x563;
  LODWORD(v132) = (v759 - 2043026832) ^ 0x23E13000;
  v762 = v132 >> 11;
  HIDWORD(v132) = (v759 - 2043026832) ^ 0x1E13563;
  LODWORD(v132) = (v759 - 2043026832) ^ 0x22222222;
  v763 = (v132 >> 25) - ((2 * (v132 >> 25)) & 0x981A0D8A) - 871561531;
  v764 = (v762 ^ 0x5FBCFECE) + (v761 ^ 0x6ABBDB6A) + ((2 * v761) & 0xD577B6D4) + ((2 * v762) & 0xBF79FD9C);
  HIDWORD(v132) = (v759 - 2043026832) ^ 0x1563;
  LODWORD(v132) = (v759 - 2043026832) ^ 0x23E12000;
  v765 = (v132 >> 13) - ((2 * (v132 >> 13)) & 0xCBF87810) + 1711029256;
  v766 = (v743 ^ 0xC36E9502 ^ (v759 - 2043026832)) + (v725 ^ 0xC137ED57 ^ (v759 - 2043026832));
  v767 = ((v759 - 2043026832) ^ 0xDC1ECA9C) + 1;
  HIDWORD(v132) = 2043026823 - v759;
  LODWORD(v132) = (v759 - 2043026832) ^ 0x23E13560;
  v768 = (v132 >> 2) - ((2 * (v132 >> 2)) & 0x716EACC4);
  HIDWORD(v132) = v760 ^ 0x213563;
  LODWORD(v132) = v760 ^ 0x23C00000;
  v769 = v767 + (v743 ^ 0xE08FA061);
  v770 = v763 ^ 0x6D5664A8 ^ (v764 - ((2 * v764 + 1796098960) & 0x42B6C4DA) - 689797067);
  v771 = (v743 ^ 0xE08FA061) + ((v770 + v710) ^ 0x171FFF6F) + ((2 * (v770 + v710)) & 0x2E3FFEDE) - 387972975;
  v772 = (v725 ^ 0x2597855 ^ v743) + (v766 ^ 0x80A24508) - ((2 * v766) & 0xFEBB75EE) + 2136849144;
  v773 = (v772 ^ 0x5D7F9F1D)
       + ((2 * v772) & 0xBAFF3E3A)
       + ((v768 - 1195944350) ^ v765 ^ ((v132 >> 22) - ((2 * (v132 >> 22)) & 0xA6E87D6C) + 1400127158) ^ 0x8E3F54DC)
       - 1568644893;
  v774 = (v773 ^ 0xFE7FE7FF)
       + ((2 * v773) & 0xFCFFCFFE)
       + 25171969
       + (HIDWORD(v859) ^ 0x9E319D28 ^ (((2 * v771) & 0x75EFFFFE)
                                      + (v771 ^ 0xBAF7FFFF)
                                      - ((2 * (((2 * v771) & 0x75EFFFFE) + (v771 ^ 0xBAF7FFFF)) + 602893468) & 0x2ADC0438)
                                      - 1486505878));
  v775 = v774 + 1182267705 - ((2 * v774) & 0x8CEFF272);
  v776 = v760 ^ 0x23E13563;
  v777 = v775 ^ 0x4677F939;
  HIDWORD(v132) = v775 ^ 0x37F939;
  LODWORD(v132) = v775 ^ 0x46400000;
  v778 = v132 >> 22;
  v779 = (v743 ^ 0x5907A6A7 ^ v775)
       + (((v775 ^ 0x4677F939) + (v760 ^ 0x23E13563)) ^ 0x5FFE6EFD)
       + ((2 * ((v775 ^ 0x4677F939) + (v760 ^ 0x23E13563))) & 0xBFFCDDFA)
       - 1610510076;
  HIDWORD(v132) = v775 ^ 0x139;
  LODWORD(v132) = v775 ^ 0x4677F800;
  v780 = v132 >> 11;
  v781 = ((2 * v769) & 0x3FFFFD36) + (v769 ^ 0x1FFFFE9B) + (v779 ^ 0x6F7F2FDB) + ((2 * v779) & 0xDEFE5FB6);
  HIDWORD(v132) = v775 ^ 0x77F939;
  LODWORD(v132) = v775 ^ 0x46000000;
  v782 = v132 >> 25;
  HIDWORD(v132) = v775 ^ 0x1939;
  LODWORD(v132) = v775 ^ 0x4677E000;
  v783 = (v132 >> 13) - ((2 * (v132 >> 13)) & 0x3798C9DE);
  HIDWORD(v132) = v775 ^ 0xFFFFFFF9;
  LODWORD(v132) = v775 ^ 0x4677F900;
  v784 = v132 >> 6;
  HIDWORD(v132) = v775 ^ 1;
  LODWORD(v132) = v775 ^ 0x4677F938;
  v785 = (v778 ^ 0x132A202)
       - ((2 * v778) & 0xFD9ABBFA)
       - 20095490
       + ((v783 - 1681103633) ^ ((v132 >> 2) - ((2 * (v132 >> 2)) & 0x23E7DEE2) + 301199217) ^ 0x8A3F8B9E);
  v786 = v727
       + (v782 ^ 0x2C481840)
       + (v780 ^ 0x29E6FFBF)
       + (v784 ^ 0xB7DFBF54)
       + ((2 * v780) & 0x53CDFF7E)
       + ((2 * v784) & 0x6FBF7EA8)
       - ((2 * v782) & 0xA76FCF7E)
       - 235853651;
  v787 = (v760 ^ 0x23E13563) + (v786 ^ 0x6EF97FFF) + ((2 * v786) & 0xDDF2FFFE) - 1861844991;
  v788 = (v860 ^ 0xEDDBEDFB ^ (((2 * v787) & 0xFDBE5B3A)
                             + (v787 ^ 0x7EDF2D9D)
                             - 2
                             * ((((2 * v787) & 0xFDBE5B3A) + (v787 ^ 0x7EDF2D9D) + 32093732) & 0x16E6AE3F ^ (v787 ^ 0x7EDF2D9D) & 1)
                             + 2026923106))
       + ((v785 - ((2 * v785) & 0x9992972) - 2066967367) ^ (v781 - ((2 * v781 + 1627497236) & 0x52C2E986) + 434259533) ^ 0x2DADE07A);
  v789 = v788 - 751504256 - ((2 * v788) & 0xA669E922);
  v790 = v789 + 37;
  v791 = v789 + 17;
  v792 = (v789 + 17) ^ 0xD334F491;
  v793 = v792 + (v775 ^ 0x4677F939) - ((2 * (v792 + (v775 ^ 0x4677F939))) & 0xFF619DD2) + 2142293737;
  HIDWORD(v132) = v791 ^ 0x1491;
  LODWORD(v132) = v791 ^ 0xD334E000;
  v794 = (v132 >> 13) - ((2 * (v132 >> 13)) & 0x5570299E) - 1430776625;
  HIDWORD(v132) = v791 ^ 0x134F491;
  LODWORD(v132) = v791 ^ 0xD2000000;
  v795 = v132 >> 25;
  v796 = ((v767 + v792 - ((2 * (v767 + v792)) & 0x3ECE2826) - 1620634605) ^ v793 ^ 0xE0D7DAFA) + (v760 ^ 0x23E13563);
  HIDWORD(v132) = v790 ^ 1;
  LODWORD(v132) = v791 ^ 0xD334F490;
  v797 = (v132 >> 2) - ((2 * (v132 >> 2)) & 0x43343778);
  HIDWORD(v132) = v791 ^ 0x11111111;
  LODWORD(v132) = v791 ^ 0xD334F480;
  v798 = v132 >> 6;
  HIDWORD(v132) = v791 ^ 0x34F491;
  LODWORD(v132) = v791 ^ 0xD3000000;
  v799 = v132 >> 22;
  HIDWORD(v132) = v791 ^ 0x491;
  LODWORD(v132) = v791 ^ 0xD334F000;
  v800 = (v775 ^ 0x95430DA8 ^ v791) + (v760 ^ 0xF0D5C1F2 ^ v791);
  v801 = (v760 ^ 0x6596CC5A ^ v775) + (v800 ^ 0xFFBFB7CF) + ((2 * v800) & 0xFF7F6F9E) + 4212785;
  v802 = v744
       + (v795 ^ 0x42470C10)
       + (v798 ^ 0x15064588)
       + ((v132 >> 11) ^ 0x7EF5EFFF)
       - ((2 * v798) & 0xD5F374EE)
       - ((2 * v795) & 0x7B71E7DE)
       + ((2 * (v132 >> 11)) & 0xFDEBDFFE)
       + 700235369;
  v803 = (v799 ^ 0x20DC0804) - ((2 * v799) & 0xBE47EFF6) - 551290884 + (v794 ^ (v797 - 1583735876) ^ 0xB220F73);
  v804 = (v859 ^ 0x61C6A4F9)
       + (v796 ^ 0xFFD57DF6)
       + (v802 ^ 0xC3EF69BB)
       + ((2 * v796) & 0xFFAAFBEC)
       + ((2 * v802) & 0x87DED376)
       - 231582322;
  v805 = ((v801 - ((2 * v801) & 0x75E64EBE) - 1158469793) ^ 0xEF383821 ^ (v803 - ((2 * v803) & 0xAB963EFC) + 1439375230))
       + (v804 ^ 0x779FC0FB)
       + ((2 * v804) & 0xEF3F81F6)
       - 2006958331;
  v806 = v805 + 366854144 - ((2 * v805) & 0x2BBB9E6E);
  v807 = v806 + 3895;
  v808 = ((2 * ((v806 + 3895) ^ v791)) & 0xD9FFFBFA ^ 0x89D27348) + ((v806 + 3895) ^ v791 ^ 0x2A16C65B);
  v809 = (v806 + 3895) ^ 0x15DDCF37;
  v810 = ((v809 + (v775 ^ 0x4677F939)) ^ 0xC1A80A08) - ((2 * (v809 + (v775 ^ 0x4677F939))) & 0x7CAFEBEE) + v808 + 1;
  HIDWORD(v132) = (v806 + 3895) ^ 0xF37;
  LODWORD(v132) = (v806 + 3895) ^ 0x15DDC000;
  v811 = v132 >> 13;
  HIDWORD(v132) = (v806 + 3895) ^ 0xFFFFFFF7;
  LODWORD(v132) = (v806 + 3895) ^ 0x15DDCF00;
  v812 = v132 >> 6;
  HIDWORD(v132) = (v806 + 3895) ^ 0x737;
  LODWORD(v132) = (v806 + 3895) ^ 0x15DDC800;
  v813 = v132 >> 11;
  HIDWORD(v132) = (v806 + 3895) ^ 0x1DDCF37;
  LODWORD(v132) = (v806 + 3895) ^ 0x14000000;
  v814 = v132 >> 25;
  v815 = (v775 ^ 0x53AA360E ^ (v806 + 3895))
       + (((v791 ^ 0x2CCB0B6E) + v809 + 1) ^ 0xF7B2FDBD)
       + ((2 * ((v791 ^ 0x2CCB0B6E) + v809 + 1)) & 0xEF65FB7A)
       + 139264579;
  HIDWORD(v132) = -3896 - v806;
  LODWORD(v132) = (v806 + 3895) ^ 0x15DDCF34;
  v816 = v132 >> 2;
  HIDWORD(v132) = v807 ^ 0x1DCF37;
  LODWORD(v132) = v807 ^ 0x15C00000;
  v817 = v777 + (v815 ^ 0x1DE377D3) + ((2 * v815) & 0x3BC6EFA6) - 501446611;
  v818 = v776
       + (v813 ^ 0xC60069A4)
       + (v814 ^ 0xB8CBEBD)
       + (v812 ^ 0x30402400)
       + ((2 * v814) & 0x17197D7A)
       - ((2 * v813) & 0x73FF2CB6)
       - ((2 * v812) & 0x9F7FB7FE)
       - 30231649;
  v819 = (HIDWORD(v850) ^ 0xDDEE2978) + (v818 ^ 0xEDF7C75F) + (v817 ^ 0xCF71DDF7);
  v820 = (v811 ^ 0x4511804A)
       + (v816 ^ 0x5EFF6EFB)
       + ((v132 >> 22) ^ 0x20DA6A14)
       + ((2 * v816) & 0xBDFEDDF6)
       - ((2 * (v132 >> 22)) & 0xBE4B2BD6)
       - ((2 * v811) & 0x75DCFF6A)
       + 991209127
       + (v793 ^ 0x56EC2DE1 ^ (v810 - ((2 * v810 + 581955572) & 0x52B9C610) + 2058672898));
  v821 = ((2 * v820) & 0xFFFFBE7E)
       + (v820 ^ 0xFFFFDF3F)
       + ((v819 + ((2 * v818) & 0xDBEF8EBE) + ((2 * v817) & 0x9EE3BBEE) - 1222377336) ^ 0xFDDBFFA9)
       + ((2 * (v819 + ((2 * v818) & 0xDBEF8EBE) + ((2 * v817) & 0x9EE3BBEE) - 1222377336)) & 0xFBB7FF52);
  v822 = v821 - 1436363522 - ((2 * v821 + 71844400) & 0x507D67BC) - 8;
  HIDWORD(v132) = v822 ^ 0x1E;
  LODWORD(v132) = v822 ^ 0xA83EB3C0;
  v823 = v132 >> 6;
  HIDWORD(v132) = v822 ^ 0x3DE;
  LODWORD(v132) = v822 ^ 0xA83EB000;
  v824 = v132 >> 11;
  HIDWORD(v132) = v822 ^ 0x3EB3DE;
  LODWORD(v132) = v822 ^ 0xA8000000;
  v825 = v132 >> 25;
  HIDWORD(v132) = v822 ^ 0x3EB3DE;
  LODWORD(v132) = v822 ^ 0xA8000000;
  v826 = v132 >> 22;
  v827 = v822 ^ v791;
  v828 = v777
       + (v825 ^ 0x4402A00)
       + (v824 ^ 0xBEFDDF6B)
       + (v823 ^ 0xBF3FFDE)
       + ((2 * v824) & 0x7DFBBED6)
       + ((2 * v823) & 0x17E7FFBC)
       - ((2 * v825) & 0xF77FABFE);
  HIDWORD(v132) = (v821 - 1436363522) ^ 2;
  LODWORD(v132) = v822 ^ 0xA83EB3DC;
  v829 = v132 >> 2;
  HIDWORD(v132) = v822 ^ 0x13DE;
  LODWORD(v132) = v822 ^ 0xA83EA000;
  v830 = v792
       + (((v827 ^ 0x7B0A474F)
         + (((v822 ^ 0xA83EB3DE) + v809) ^ 0x3B87B9FA)
         + ((2 * ((v822 ^ 0xA83EB3DE) + v809)) & 0x770F73F4)
         - 998750714) ^ 0x42)
       - ((2
         * ((v827 ^ 0x7B0A474F)
          + (((v822 ^ 0xA83EB3DE) + v809) ^ 0x3B87B9FA)
          + ((2 * ((v822 ^ 0xA83EB3DE) + v809)) & 0x770F73F4)
          - 998750714)) & 0xFFFFFF7A);
  v831 = (v829 ^ 0x7E76D39F)
       + ((v132 >> 13) ^ 0x7D95D7EF)
       + (v826 ^ 0x92200114)
       + ((2 * v829) & 0xFCEDA73E)
       + ((2 * (v132 >> 13)) & 0xFB2BAFDE)
       - ((2 * v826) & 0xDBBFFDD6)
       + 1;
  v832 = (v827 ^ 0x7C917632 ^ ((v807 ^ 0xEA2230C8)
                             + (v822 ^ 0xA83EB3DE)
                             + 1
                             - ((2 * ((v807 ^ 0xEA2230C8) + (v822 ^ 0xA83EB3DE) + 1)) & 0xF3662FA)
                             + 127611261))
       - v808;
  v833 = ((v885 + 3850) ^ 0xEA75FDBF)
       + ((2 * (v885 + 3850)) & 0xD4EBFB7E)
       + ((v828 + 818804407) ^ 0x4DF87C5D)
       + ((v830 - 66) ^ 0xB4BFBF73)
       + ((2 * (v830 - 66)) & 0x697F7EE6)
       + ((2 * (v828 + 818804407)) & 0x9BF0F8BA)
       + 180427193
       + ((v832 - ((2 * v832 + 436206586) & 0x2E94A0A4) + 71978575) ^ (v831
                                                                     - ((2 * v831 - 475617606) & 0xB41F5BE6)
                                                                     - 874315440) ^ 0x4D45FDA1);
  v834 = v833 - 2002756791 - ((2 * v833) & 0x1140B692);
  HIDWORD(v132) = v834 ^ 0x349;
  LODWORD(v132) = v834 ^ 0x88A05800;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t))qword_1E2538EC0[(int)((((int)((v862 ^ HIDWORD(v864) ^ (335 * (v862 ^ 0x494A2D47) - 671)) & (HIDWORD(v864) - v862) | HIDWORD(v864) & ~(_DWORD)v862) >= 0) * ((5 * (v862 ^ 0x494A2DCE)) ^ 0x2B8)) ^ (v862 - 1229597168))])(v862, (v132 >> 11) ^ 0xA00A02, (v834 ^ 0x88A05B49)+ (_DWORD)a44+ 1549813701+ (~(2 * ((v834 ^ 0x88A05B49) + (_DWORD)a44)) | 0x473F7075)+ 1, (v132 >> 11), 2033122798, ((v822 ^ 0x209EE897 ^ v834) + (v807 ^ 0x9D7D947E ^ v834)) ^ 0xDAE63BBF, 3939631488, 2292210505, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           v836,
           v837,
           v838,
           v839,
           v840,
           v841,
           v842,
           v843,
           v844,
           v846,
           v848,
           v850,
           v852,
           v853,
           v854,
           v855,
           v856,
           v857,
           a38,
           a39,
           a40,
           a41,
           v859,
           v860,
           a44,
           a45,
           v862,
           v863,
           v864,
           v865,
           v866,
           v867,
           v869,
           v871,
           v874);
}

uint64_t sub_18CBA8AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unsigned int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unsigned int a57,unsigned int a58,unsigned int a59,unsigned int a60)
{
  int v60;
  int v61;
  uint64_t v62;

  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v62 + 8 * ((41 * (v61 != v60 + 1229597351)) ^ v60)) - (v60 ^ 0x28u) + 690))(a60, a59, a3, a58, a5, a19, a57, a47);
}

void sub_18CBA8B6C()
{
  JUMPOUT(0x18CB9EB74);
}

#error "18CBAED80: call analysis failed (funcsize=5128)"

void sub_18CBAED84()
{
  JUMPOUT(0x18CBAE978);
}

uint64_t sub_18CBAED8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  _BOOL4 v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;

  LOBYTE(STACK[0x3A5]) = BYTE1(v65) ^ 0x44;
  LOBYTE(STACK[0x552]) = BYTE2(v67) ^ 0xB;
  LOBYTE(STACK[0x737]) = HIBYTE(v65) ^ 0xF4;
  LOBYTE(STACK[0x389]) = BYTE1(v67) ^ 0xE0;
  LOBYTE(STACK[0x56E]) = BYTE2(v65) ^ 0x20;
  LOBYTE(STACK[0x71B]) = HIBYTE(v67) ^ 0xE3;
  LOBYTE(STACK[0x76F]) = HIBYTE(v66) ^ 0x1B;
  LOBYTE(STACK[0x214]) = v66 ^ 0x62;
  LOBYTE(STACK[0x3C1]) = BYTE1(v64) ^ 0x1D;
  LOBYTE(STACK[0x58A]) = BYTE2(v64) ^ 0x75;
  LOBYTE(STACK[0x3DD]) = BYTE1(v66) ^ 0x6B;
  LOBYTE(STACK[0x753]) = HIBYTE(v64) ^ 0x48;
  LOBYTE(STACK[0x5A6]) = BYTE2(v66) ^ 0x1F;
  v69 = (HIDWORD(a12) - 1230202205) < 0x32FBDC55;
  v70 = *(unsigned __int8 *)((a5 - 1132) + 1491152648 + a15 - 1491152943);
  v71 = (a3 ^ 0x16BAD583) - 838698623 * (((2 * (v70 ^ 0x31)) & 0xFFFFFFE7) + (v70 ^ 0xDE9FFFC6)) - 1484772467;
  v72 = ((2 * v71) & 0x9DFFFD6A) + (v71 ^ 0x4EFFFEB5);
  v73 = (v72 - 1325399733) % 0x101;
  v74 = v64 ^ v68;
  v75 = v74
      + (((v63 ^ 0xCE93D11D) - 1325399733 + v72 + 1) ^ 0x4FFDFD9F)
      + ((2 * ((v63 ^ 0xCE93D11D) - 1325399733 + v72 + 1)) & 0x9FFBFB3E)
      - 1342045599;
  v76 = ((2 * v73) & 0x33E) + (v73 ^ 0xE6BB739F) + (v75 ^ 0xD7E77E3B) + ((2 * v75) & 0xAFCEFC76);
  v77 = v76 - ((2 * v76 - 2101732276) & 0xD2A81886) - 1431233943;
  v78 = v77 ^ v66;
  v79 = (v78 ^ 0x2DB84A75) + 1;
  v80 = v79 + v74 - ((2 * (v79 + v74)) & 0x41856184) - 1597853502;
  v81 = v79 + (v63 ^ 0x316C2EE2) - ((2 * (v79 + (v63 ^ 0x316C2EE2))) & 0xC2600664) - 516947150;
  v82 = (v81 ^ v78 ^ 0x3377B6B8) + 644140058;
  v83 = v82 ^ 0xFFFFF27F;
  v84 = (2 * v82) & 0xFFFFE4FE;
  if ((HIDWORD(a12) - 1230202205) >= 0x32FBDC55)
    v69 = (HIDWORD(a12) - 1230202205) > 0x32FBDC56;
  v85 = v77 ^ 0xFC6DEBDD;
  v86 = v85 + v83 + v84 + 3457;
  v87 = (v86 ^ 0xFFDD33EF)
      + (v80 ^ 0x5F3D4F3D)
      + ((2 * v86) & 0xFFBA67DE)
      - 2
      * (((v86 ^ 0xFFDD33EF) + (v80 ^ 0x5F3D4F3D) + ((2 * v86) & 0xFFBA67DE) + 2280466) & 0x4FDCA9 ^ ((v86 ^ 0xFFDD33EF) + (v80 ^ 0x5F3D4F3D)) & 1)
      + 7514298;
  v88 = v87 ^ v80;
  v89 = v87 ^ v81;
  v87 ^= 0x4FDCA8u;
  v90 = v87 + v85 + 200486236 - ((2 * (v87 + v85)) & 0x17E65AB8);
  v91 = (((v88 ^ 0xA08D6C6A) + v87) ^ 0xFFFF9F7C) + (v89 ^ 0x1E802065) + ((2 * ((v88 ^ 0xA08D6C6A) + v87)) & 0xFFFF3EF8);
  v92 = v90 ^ 0x32D3D44F ^ (v91 - ((2 * v91 + 49418) & 0x7241F226) + 958486936);
  v93 = v92 - ((2 * v92 - 1717201034) & 0x96EF223C) + 407526617;
  v94 = (((v93 ^ 0xCB77911E) + (v90 ^ 0xBF32D5C)) ^ 0x1148A400)
      - ((2 * ((v93 ^ 0xCB77911E) + (v90 ^ 0xBF32D5C))) & 0xDD6EB7FE)
      - 289973248
      + (v93 ^ v88 ^ 0xEAD02173 ^ ((v93 ^ 0xCB77911E)
                                 + (v93 ^ v89 ^ 0xD5F7B17B)
                                 + 1
                                 - ((2 * ((v93 ^ 0xCB77911E) + (v93 ^ v89 ^ 0xD5F7B17B) + 1)) & 0x255B80E)
                                 - 2127897593));
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(675 * !v69) ^ a5] - 4))(86108246, 762686214, ((2 * v94) & 0xCFF15F3E)+ (v94 ^ 0x67F8AF9F)- ((2 * (((2 * v94) & 0xCFF15F3E) + (v94 ^ 0x67F8AF9F)) + 86108246) & 0x2D75AB06)- 649344594, 1325399733, a5, 855366741, 200486236, 5233832, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_18CBAF2F0()
{
  JUMPOUT(0x18CBAEEE0);
}

uint64_t sub_18CBAF2F8@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  _BOOL4 v9;

  LOBYTE(STACK[0x24C]) = v8 ^ 0x32;
  LOBYTE(STACK[0x415]) = BYTE1(v8) ^ 0xAE;
  LOBYTE(STACK[0x78B]) = HIBYTE(a1) ^ 0x23;
  LOBYTE(STACK[0x5DE]) = BYTE2(v8) ^ 0x87;
  LOBYTE(STACK[0x5C2]) = BYTE2(a1) ^ 0x8F;
  LOBYTE(STACK[0x230]) = a1 ^ 0xB6;
  LOBYTE(STACK[0x3F9]) = BYTE1(a1) ^ 0xE0;
  LOBYTE(STACK[0x268]) = v6 ^ 0xC2;
  LOBYTE(STACK[0x5FA]) = BYTE2(v6) ^ 0x75;
  LOBYTE(STACK[0x616]) = BYTE2(v7) ^ 0x1F;
  LOBYTE(STACK[0x44D]) = BYTE1(v7) ^ 0x6B;
  LOBYTE(STACK[0x7A7]) = HIBYTE(v8) ^ 9;
  LOBYTE(STACK[0x7C3]) = HIBYTE(v6) ^ 0x48;
  LOBYTE(STACK[0x284]) = v7 ^ 0x62;
  LOBYTE(STACK[0x431]) = BYTE1(v6) ^ 0x1D;
  LOBYTE(STACK[0x7DF]) = HIBYTE(v7) ^ 0x1B;
  v9 = (a6 + 1861178222) < 0xE29AFFD8 || (a6 + 1861178222) > 0xE29AFFD9;
  return ((uint64_t (*)(uint64_t, uint64_t))(qword_1E2538EC0[(106 * !v9) ^ a2] - 12))(2056409035, 2042673813);
}

void sub_18CBAF88C()
{
  JUMPOUT(0x18CBAF454);
}

uint64_t sub_18CBAF894(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  int v10;
  int v11;
  int v12;
  int v13;
  char v14;
  _BOOL4 v15;

  LOBYTE(STACK[0x469]) = BYTE1(v13) ^ 6;
  LOBYTE(STACK[0x7FB]) = HIBYTE(v13) ^ 0xAA;
  LOBYTE(STACK[0x2BC]) = v10 ^ 0xD7;
  LOBYTE(STACK[0x2D8]) = v11 ^ 0xC2;
  LOBYTE(STACK[0x4A1]) = BYTE1(v11) ^ 0x1D;
  LOBYTE(STACK[0x817]) = HIBYTE(v10) ^ 4;
  LOBYTE(STACK[0x485]) = BYTE1(v10) ^ 0x1B;
  LOBYTE(STACK[0x64E]) = BYTE2(v10) ^ 0x59;
  LOBYTE(STACK[0x66A]) = BYTE2(v11) ^ 0x75;
  LOBYTE(STACK[0x2F4]) = v12 ^ 9;
  LOBYTE(STACK[0x632]) = BYTE2(v13) ^ 0xB7;
  LOBYTE(STACK[0x686]) = BYTE2(v12) ^ 0x4B;
  LOBYTE(STACK[0x833]) = HIBYTE(v11) ^ 0x48;
  v14 = ((v13 & 0x35 ^ 0xCE) + ((2 * (v13 & 0x35)) ^ 0xE3) - 64) ^ 0xBF;
  LOBYTE(STACK[0x2A0]) = (v14 & (v13 & 0xCA ^ 0x7F)) - ((2 * v14) & 0x6A) + 53;
  LOBYTE(STACK[0x84F]) = HIBYTE(v12) ^ 0x53;
  LOBYTE(STACK[0x4BD]) = BYTE1(v12) ^ 0x39;
  v15 = (a10 + 1512204369) < 0x92652AEE;
  if ((a10 + 1512204369) >= 0x92652AEE)
    v15 = (a10 + 1512204369) > 0x92652AEF;
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[(91 * !v15) ^ a4] - 4))(1577045098);
}

void sub_18CBAFEA0()
{
  JUMPOUT(0x18CBAFA30);
}

uint64_t sub_18CBAFEB8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unint64_t v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  uint64_t v152;
  uint64_t v153;
  int v155;

  LOBYTE(STACK[0x32C]) = v65 ^ 0xD7;
  LOBYTE(STACK[0x310]) = a3 ^ 0x3B;
  LOBYTE(STACK[0x887]) = HIBYTE(v65) ^ 4;
  LOBYTE(STACK[0x4D9]) = BYTE1(a3) ^ 0x51;
  LOBYTE(STACK[0x6DA]) = BYTE2(v66) ^ 0xA;
  LOBYTE(STACK[0x6BE]) = BYTE2(v65) ^ 0x59;
  LOBYTE(STACK[0x86B]) = (a3 >> ((100 * (v68 ^ 0x3B)) ^ 0x38)) ^ 0x2A;
  LOBYTE(STACK[0x364]) = v67 ^ 0x62;
  LOBYTE(STACK[0x4F5]) = BYTE1(v65) ^ 0x1B;
  LOBYTE(STACK[0x348]) = v66 ^ 0xAB;
  LOBYTE(STACK[0x8A3]) = HIBYTE(v66) ^ 0xEF;
  LOBYTE(STACK[0x6F6]) = BYTE2(v67) ^ 0x1F;
  LOBYTE(STACK[0x6A2]) = BYTE2(a3) ^ 0xDD;
  LOBYTE(STACK[0x52D]) = BYTE1(v67) ^ 0x6B;
  LOBYTE(STACK[0x8BF]) = HIBYTE(v67) ^ 0x1B;
  LOBYTE(STACK[0x511]) = BYTE1(v66) ^ 0xA1;
  v155 = 100 * (v68 ^ 0x33B);
  v69 = (v155 + 1981151927) & 0x89EA033A;
  v70 = -362980607
      - 1487347361
      * (((2 * (*(&a65 + v69 - 1800 * ((v69 - 274) / 0x708) - 274) ^ 0x35)) & 0xF6)
       + (*(&a65 + v69 - 1800 * ((v69 - 274) / 0x708) - 274) ^ 0x7FBFAF4E));
  v71 = v70
      - 418090588
      + (((v70 - 1560073347) % 0x101u) ^ 0xCDD7D7DD)
      + ((2 * ((v70 - 1560073347) % 0x101u)) & 0x3BA)
      - 718580832;
  v72 = (v71 ^ 0x6BDFC7FF) + 621096836 + ((2 * v71) & 0xD7BF8FFE) - 1809827839;
  v73 = ((v72 - ((2 * v72) & 0xE97F41B0) + 1958715608) ^ 0x36990F76) - 1738420157;
  v74 = (((v73 ^ 0x3FFAF7DD)
        + 1554772381
        + ((2 * v73) & 0x7FF5EFBA)
        + 1
        - ((2 * ((v73 ^ 0x3FFAF7DD) + 1554772381 + ((2 * v73) & 0x7FF5EFBA) + 1) + 923258538) & 0x33E7C2A0)
        + 1433913509) ^ 0xC8DF7C93)
      - 1226364049;
  v75 = ((v74 - ((2 * v74 + 1784666428) & 0x4677D98C) + 1483463012) ^ 0xE36AABA7) - 35086739;
  v76 = (v75 - ((2 * v75) & 0x7AA0A172) + 1028673721) ^ 0xC7F1901B;
  v77 = v76 - ((2 * v76 - 597685216) & 0xAA531882) + 1129943633;
  v78 = (v77 ^ 0x2AD673BE) + 417920183 - ((2 * ((v77 ^ 0x2AD673BE) + 644941651)) & 0xE4EFDAC8);
  v79 = (v77 ^ 0x2AD673BE) + 621096837;
  v80 = v79 ^ 0x7F7BD7EB;
  v81 = (2 * v79) & 0xFEF7AFD6;
  v82 = v77 ^ 0xA3C9B81B;
  v83 = (v77 ^ 0x2AD673BE) + 95714791 - ((2 * ((v77 ^ 0x2AD673BE) + 1117723493)) & 0x862AC504);
  v84 = ((2 * ((v77 ^ 0xD5298C41) - 1068415135)) & 0xBDFADFFE) + (((v77 ^ 0xD5298C41) - 1068415135) ^ 0x5EFD6FFF);
  v85 = v77 ^ 0x970F23EF;
  v86 = (v77 ^ 0x970F23EF) + (v77 ^ 0xD5298C41);
  v87 = v86 ^ 0xDFCFAFFE;
  v88 = (2 * v86) & 0xBF9F5FFC;
  v89 = v80 - 2138822635 + v81;
  v90 = v77 ^ 0x323DFDE5;
  v91 = (v78 ^ 0xF277ED64)
      + (((v77 ^ 0x1C5416EA) + v89) ^ 0x776EBFBF)
      + ((2 * ((v77 ^ 0x1C5416EA) + v89)) & 0xEEDD7F7E)
      - 2003746751;
  v92 = ((v90 + v87 + v88 + 540037122) ^ 0xFFF7AFEE)
      + ((2 * (v90 + v87 + v88 + 540037122)) & 0xFFEF5FDC)
      + (v91 ^ 0xA2604002);
  v93 = v77 ^ 0x26DAC522;
  v94 = v77 ^ 0xA32C63EE;
  v95 = (v77 ^ 0x2AD673BE)
      + 1817193031
      - ((2 * ((v77 ^ 0x2AD673BE) + 1817193031) + 590407758) & 0x48D4629C)
      - 1241340555;
  v96 = v77 ^ 0xB7CD66C7;
  v97 = (v77 ^ 0x2AD673BE) - 1738420156 - ((2 * ((v77 ^ 0x2AD673BE) - 1738420156)) & 0xF83658CA) + 2082155621;
  v98 = (v77 ^ 0xD5298C41) + 334030835 - ((2 * ((v77 ^ 0xD5298C41) + 334030835)) & 0x2B3A77D4) - 1784857622;
  v99 = (((v77 ^ 0xD5298C41) - 179867185) ^ 0xFFD9FBF3)
      + 2491405
      + ((2 * ((v77 ^ 0xD5298C41) - 179867185)) & 0xFFB3F7E6);
  v100 = (v97 ^ 0xC77E3936 ^ (v92
                            - ((2 * v91) & 0xBB3F7FFA)
                            + 1
                            - ((2 * (v92 - ((2 * v91) & 0xBB3F7FFA) + 1) + 995106846) & 0x76CA2AA6)
                            + 420291938))
       + v99;
  v101 = (v77 ^ 0xF2664D6F) + (v83 ^ 0x9FD7C9C8 ^ (v100 - ((2 * v100) & 0xB9855694) + 1556261706)) + 1;
  v77 ^= 0x9159A24C;
  v102 = v77 + (v101 ^ 0xF3DA3F52) + ((2 * v101) & 0xE7B47EA4) + 203800750;
  v103 = (v94 ^ v98 ^ 0x24E03B1D ^ (v102 - ((2 * v102) & 0x1528C48E) - 1969987001)) - v84;
  v104 = (v93 ^ 0xF6AD763E) + (v95 ^ 0xA394B126 ^ (v103 - ((2 * v103 + 234545150) & 0xFFD00D0) - 419696537)) + 1;
  v105 = ((2 * v104) & 0xCBB57FEE)
       + (v104 ^ 0xE5DABFF7)
       - ((2 * (((2 * v104) & 0xCBB57FEE) + (v104 ^ 0xE5DABFF7)) + 1896703486) & 0x7953411E)
       - 1255124082;
  v106 = (v105 ^ 0xBCA9A08F) + v77 - ((2 * ((v105 ^ 0xBCA9A08F) + v77)) & 0x57189318) + 730614156;
  v107 = ((2 * ((v105 ^ 0xBCA9A08F) + (v83 ^ 0xC3156282))) & 0xEFB6FE7E)
       + (((v105 ^ 0xBCA9A08F) + (v83 ^ 0xC3156282)) ^ 0x77DB7F3F);
  v108 = v105 ^ v94;
  v109 = v105 ^ v98;
  v110 = v105 ^ v93;
  v111 = (v105 ^ 0xBCA9A08F) + v90 - ((2 * ((v105 ^ 0xBCA9A08F) + v90)) & 0xF3A80CCE) - 103545241;
  v112 = ((2 * ((v105 ^ 0xBCA9A08F) + (v95 ^ 0x246A314E))) & 0xF767ECFE)
       + (((v105 ^ 0xBCA9A08F) + (v95 ^ 0x246A314E)) ^ 0xFBB3F67F);
  v113 = ((2 * ((v105 ^ 0xBCA9A08F) + v99)) & 0xFA7AEBCE) + (((v105 ^ 0xBCA9A08F) + v99) ^ 0x7D3D75E7);
  v114 = v105 ^ v82;
  v115 = v85 + (v105 ^ 0x43565F70) - 74149442 - ((2 * (v85 + (v105 ^ 0x43565F70) + 1)) & 0xF729237A);
  v116 = v105 ^ v96;
  v117 = (v105 ^ 0xBCA9A08F) + v89 - 1163676313 - ((2 * ((v105 ^ 0xBCA9A08F) + v89)) & 0x75476ACE);
  v118 = (v105 ^ 0x43565F70) + v84 - ((2 * ((v105 ^ 0x43565F70) + v84) + 1107632132) & 0xD1D278E0) + 166448242;
  v119 = v97 ^ 0xC0B28CEA ^ v105;
  v120 = (v105 ^ v117 ^ v111 ^ v115 ^ 0x44A8232) + v119;
  v121 = v78 ^ 0x4EDE4DEB ^ v105;
  v122 = (((v114 ^ 0x3340E7E) + v121) ^ 0x20404B14)
       - v107
       - ((2 * ((v114 ^ 0x3340E7E) + v121)) & 0xBF7F69D6)
       + v113
       + (v120 ^ 0xFFDE5FF5)
       + ((2 * v120) & 0xFFBCBFEA)
       - 1709154290;
  v123 = (v106 ^ 0xD473B673) + (v116 ^ 0x41D15857 ^ (v122 - ((2 * v122 - 2135032702) & 0x8E58591E) - 2020922672)) + 1;
  v124 = (v108 ^ 0x8740C23F) + (v123 ^ 0x5EFBBFAF) + ((2 * v123) & 0xBDF77F5E) - 1593556911;
  v125 = (v109 ^ v118 ^ 0x6ADE726C ^ (v124 - ((2 * v124) & 0x5607AAF2) + 721671545)) - 762027389;
  v126 = (v110 ^ 0x4A04D6B1) + (v125 ^ 0xEBE78FE6) + ((2 * v125) & 0xD7CF1FCC) + 337145883;
  v127 = ((2 * v126) & 0xBE5FEF6C) + (v126 ^ 0xDF2FF7B6);
  v128 = v112 + v127 - ((2 * (v112 + v127) + 1245193110) & 0x86A4F99C) + 1752075929;
  v129 = ((2 * ((v128 ^ 0x43527CCE) + (v117 ^ 0xBAA3B567))) & 0x3F2FFFFE)
       + (((v128 ^ 0x43527CCE) + (v117 ^ 0xBAA3B567)) ^ 0x9F97FFFF);
  v130 = ((2 * ((v128 ^ 0x43527CCE) + (v115 ^ 0xFB9491BD))) & 0xD15CF7F4)
       + (((v128 ^ 0x43527CCE) + (v115 ^ 0xFB9491BD)) ^ 0xE8AE7BFA);
  v131 = ((2 * (v113 - 2101179879 + (v128 ^ 0x43527CCE))) & 0xBFFADFFC)
       + ((v113 - 2101179879 + (v128 ^ 0x43527CCE)) ^ 0xDFFD6FFE);
  v132 = ((2 * ((v128 ^ 0x43527CCE) + (v118 ^ 0x68E93C70))) & 0xFFDF77B2)
       + (((v128 ^ 0x43527CCE) + (v118 ^ 0x68E93C70)) ^ 0xFFEFBBD9);
  HIDWORD(v133) = v129 + 1;
  LODWORD(v133) = v129 + 1617428481;
  v134 = (v133 >> 2) + 135852032 - ((2 * (v133 >> 2)) & 0x1031F28A) + 2373;
  HIDWORD(v133) = v134 ^ 0x945;
  LODWORD(v133) = v134 ^ 0x818F000;
  v135 = (v133 >> 12) - ((2 * (v133 >> 12)) & 0xD968B64A) + 1823759141;
  v136 = ((2 * ((v128 ^ 0x43527CCE) + (v109 ^ 0x29349B65))) & 0xB3B8EFA0)
       + (((v128 ^ 0x43527CCE) + (v109 ^ 0x29349B65)) ^ 0x59DC77D0);
  v137 = v121 + (v128 ^ 0xBCAD8331) - 499254284 - ((2 * (v121 + (v128 ^ 0xBCAD8331) + 1)) & 0xC47BF7E6);
  v138 = (v128 ^ 0x43527CCE) + v119 + 85648036 - ((2 * ((v128 ^ 0x43527CCE) + v119)) & 0xA35C548);
  HIDWORD(v133) = v135 ^ 0x5B25;
  LODWORD(v133) = v135 ^ 0x6CB40000;
  v139 = ((2 * (v128 ^ v114)) & 0x2FEF6FBC ^ 0xCC6520) + (v128 ^ v114 ^ 0x5791C56E);
  v140 = ((2 * (v128 ^ v106)) & 0xFEFF1E34 ^ 0xD0BC0A04) + (v128 ^ v106 ^ 0x97A1BA58);
  v141 = (v128 ^ 0x12FC7D38 ^ ((v133 >> 18) + 1370358262 - ((2 * (v133 >> 18)) & 0xA35C03EC))) + (v137 ^ 0xE23DFBF3);
  v142 = v139
       + v130
       + ((2 * (v128 ^ v111)) & 0x8EF3757C ^ 0x4007550)
       + (v128 ^ v111 ^ 0x7DFFC017)
       + 1463328152
       + (v141 ^ 0x5FF9F9FE);
  v143 = v142 + ((2 * v141) & 0xBFF3F3FC);
  v144 = v128 ^ v110;
  v145 = (v138 ^ 0x38E41B88 ^ (v143 - 2 * ((v143 + 11368916) & 0x3DFEF92E ^ v142 & 2) - 1095994624)) - v131;
  v146 = (v107
        - 2010873663
        + (v128 ^ 0x43527CCE)
        - 418080783
        - ((2 * (v107 - 2010873663 + (v128 ^ 0x43527CCE))) & 0xCE292FE2)) ^ 0x93955F2E ^ (v145
                                                                                        - ((2 * v145 - 1074077700) & 0xE90391BE)
                                                                                        + 1417623773);
  v147 = ((v146 + (v108 ^ 0xC412BEF1 ^ v128)) ^ 0x7FFEFBF3)
       - (v140
        + v136
        + ((2 * ((v128 ^ 0x43527CCE) + (v116 ^ 0x6FD74D8))) & 0xA7FFBEA0)
        + (((v128 ^ 0x43527CCE) + (v116 ^ 0x6FD74D8)) ^ 0x53FFDF50))
       + ((2 * (v146 + (v108 ^ 0xC412BEF1 ^ v128))) & 0xFFFDF7E6)
       + 418333754;
  v148 = (v132 + 1066023) ^ 0xB0D81854 ^ (v147 - ((2 * v147 + 685460506) & 0x61B030A8) - 985285023);
  v149 = (v144 ^ 0x956AA7F) + ((v148 + 1232548366 - ((2 * v148) & 0x92EE641C)) ^ 0x4977320E) + 1;
  v150 = (v149 ^ 0xF62D75F4) + v127 + ((2 * v149) & 0xEC5AEBE8);
  v151 = v150 - ((2 * v150 + 1430594732) & 0xF7F062F2) + 647676879;
  v152 = ((2 * v151) & 0x275ADAEE ^ 0x64808CC) + (v151 ^ 0x78896919);
  v153 = (_DWORD)v152 + v131 - ((2 * ((_DWORD)v152 + v131) + 413811990) & 0xE034FFAC);
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[v155 ^ 0x13] - 12))(v153, (v138 ^ 0x51AE2A4)- 1817350793- (_DWORD)v152+ 2121069335- ((2 * ((v138 ^ 0x51AE2A4) - 1817350793 - (_DWORD)v152)) & 0xFCD9E62E), v140 - (_DWORD)v152 - ((2 * (v140 - (_DWORD)v152) + 677100730) & 0x8D12099A), (v153 + 2087690849), v152, (_DWORD)v152 + v139 - ((2 * ((_DWORD)v152 + v139) - 1464486570) & 0xD5684560), (_DWORD)v152 + v130 - ((2 * ((_DWORD)v152 + v130) + 122170654) & 0x4260FF30) + 617911847, (v144 ^ 0xF6A95580)- 1817350793- (_DWORD)v152- ((2 * ((v144 ^ 0xF6A95580) - 1817350793 - (_DWORD)v152)) & 0xB8F60B00), a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

void sub_18CBB1128()
{
  JUMPOUT(0x18CBB0064);
}

uint64_t sub_18CBB1154(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  char a70;
  char a71;
  char a72;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  uint64_t v84;

  LODWORD(a52) = v72;
  HIDWORD(a53) = v81;
  LODWORD(a54) = v80;
  HIDWORD(a56) = v77;
  HIDWORD(v84) = v79;
  LODWORD(a34) = v76;
  LODWORD(a58) = v78;
  HIDWORD(a32) = v75;
  LOBYTE(STACK[0x368]) = LOBYTE(STACK[0x3C8]) ^ LOBYTE(STACK[0x390]) ^ *(_BYTE *)((LODWORD(STACK[0x11F0]) ^ 0x8B7B7E7BB3192611)
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x11F0]) ^ 0xCDEADFEE)) & 0xFDE7F3FE)
                                                                                + a13
                                                                                + 0x264DBC49E78A8DFCLL) ^ *(_BYTE *)((LODWORD(STACK[0x1E10]) ^ 0x779F2BFFBA310031) + ((2 * (LODWORD(STACK[0x1E10]) ^ 0xCDEADFEE)) & 0xEFB7BFBE) + a13 + 0x3A2A0EC5EEA2A81CLL) ^ 0x35;
  LOBYTE(STACK[0x531]) = *(_BYTE *)((LODWORD(STACK[0x1374]) ^ 0x69FDFFC70217A001)
                                  + a13
                                  + ((2 * (LODWORD(STACK[0x1374]) ^ 0xCDEADFEE)) & 0x19FFAFFDELL)
                                  + 0x47CB3AFD9681080CLL) ^ LOBYTE(STACK[0x559]) ^ LOBYTE(STACK[0x591]) ^ *(_BYTE *)((LODWORD(STACK[0xA24]) ^ 0x7BB25D5F72F92099) + a13 + ((2 * (LODWORD(STACK[0xA24]) ^ 0xCDEADFEE)) & 0x17E27FEEELL) + 0x3616DD65A76A8884) ^ 0x35;
  LOBYTE(STACK[0x6FA]) = LOBYTE(STACK[0x75A]) ^ LOBYTE(STACK[0x722]) ^ *(_BYTE *)((LODWORD(STACK[0x14F8]) ^ 0x6BFFEAFFB2312051)
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x14F8]) ^ 0xCDEADFEE)) & 0xFFB7FF7E)
                                                                                + a13
                                                                                + 0x45C94FC5E6A2883CLL) ^ *(_BYTE *)((LODWORD(STACK[0xBA8]) ^ 0x47078F7DA2169A3DLL) + ((2 * (LODWORD(STACK[0xBA8]) ^ 0xCDEADFEE)) & 0xDFF88BA6) + a13 + 0x6AC1AB47F6824228) ^ 0x35;
  LOBYTE(STACK[0x8C3]) = a71 ^ *(_BYTE *)((LODWORD(STACK[0xD2C]) ^ 0x7BBEEFFF3214290CLL)
                                        + a13
                                        + ((2 * (LODWORD(STACK[0xD2C]) ^ 0xCDEADFEE)) & 0x1FFFDEDC4)
                                        + 0x360A4AC5667F9119) ^ *(_BYTE *)((LODWORD(STACK[0x167C]) ^ 0xEDFD9F7E5055C890)
                                                                           + a13
                                                                           + ((2
                                                                             * (LODWORD(STACK[0x167C]) ^ 0xCDEADFEE)) & 0x13B7E2EFCLL)
                                                                           - 0x3C3464B937408F83) ^ LOBYTE(STACK[0x21B]) ^ 0x35;
  LOBYTE(STACK[0x384]) = LOBYTE(STACK[0x3AC]) ^ LOBYTE(STACK[0x3E4]) ^ *(_BYTE *)((LODWORD(STACK[0xEB0]) ^ 0xFFFE6E2B1A953319)
                                                                                + a13
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0xEB0]) ^ 0xCDEADFEE)) & 0x1AEFFD9EELL)
                                                                                - 0x4E353366710164FCLL) ^ *(_BYTE *)((LODWORD(STACK[0x1800]) ^ 0x77ABDFFB1558F093) + a13 + ((2 * (LODWORD(STACK[0x1800]) ^ 0xCDEADFEE)) & 0x1B1645EFALL) + 0x3A1D5AC98DCC587ELL) ^ 0x35;
  LOBYTE(STACK[0x54D]) = LOBYTE(STACK[0x575]) ^ LOBYTE(STACK[0x5AD]) ^ *(_BYTE *)((LODWORD(STACK[0x1034]) ^ 0x53F77DB7F231AC37)
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x1034]) ^ 0xCDEADFEE)) & 0x7FB6E7B2)
                                                                                + a13
                                                                                + 0x5DD1BD0E26A31422) ^ *(_BYTE *)((LODWORD(STACK[0x1984]) ^ 0xFDFF73FF9F5CA103) + ((2 * (LODWORD(STACK[0x1984]) ^ 0xCDEADFEE)) & 0xA56CFDDA) + a13 - 0x4C363939EC37F6F2) ^ 0x35;
  LOBYTE(STACK[0x716]) = LOBYTE(STACK[0x776]) ^ *(_BYTE *)((LODWORD(STACK[0x1B08]) ^ 0xFC5EFE7F3215E881)
                                                         + a13
                                                         + ((2 * (LODWORD(STACK[0x1B08]) ^ 0xCDEADFEE)) & 0x1FFFE6EDELL)
                                                         - 0x4A95C3BA9980AF74) ^ *(_BYTE *)((LODWORD(STACK[0x11B8]) ^ 0xDFBDBDB776BD7033)
                                                                                            + a13
                                                                                            + ((2
                                                                                              * (LODWORD(STACK[0x11B8]) ^ 0xCDEADFEE)) & 0x176AF5FBALL)
                                                                                            - 0x2DF482F254D927E2) ^ LOBYTE(STACK[0x73E]) ^ 0x35;
  a70 = a72 ^ LOBYTE(STACK[0x237]) ^ *(_BYTE *)((LODWORD(STACK[0x133C]) ^ 0xDFBD3DFB30112481)
                                              + a13
                                              + ((2 * (LODWORD(STACK[0x133C]) ^ 0xCDEADFEE)) & 0x1FBF7F6DELL)
                                              - 0x2DF40336977D7374) ^ *(_BYTE *)((LODWORD(STACK[0x1C8C]) ^ 0x7FFD9B7F32552609)
                                                                                 + a13
                                                                                 + ((2
                                                                                   * (LODWORD(STACK[0x1C8C]) ^ 0xCDEADFEE)) & 0x1FF7FF3CELL)
                                                                                 + 0x31CB9F4566BE8E14) ^ 0x35;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x378]) = 53;
  LOBYTE(STACK[0x370]) = 53;
  LODWORD(v84) = v73 + 1725812192;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(qword_1E2538EC0[v74] - 12))(53, 457, 41765899, 2443359173, 1800, &a65, 2960517107, 1008633853, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           v84,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           __PAIR64__(a7, v82),
           a56,
           __PAIR64__(a2, a4),
           a58,
           a59);
}

uint64_t sub_18CBB18F4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  int v58;
  int v59;
  int v60;
  uint64_t v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  uint64_t (*v65)(void);

  v62 = (v60 - ((2 * v60 + 738443208) & 0x7766FA26) + 1370840311) ^ 0x3BB37DAB;
  v63 = *(_DWORD *)(v61 + 4 * ((((2722 * v62) & 0xFDBDF1FC) + ((1361 * v62) ^ 0x7EDEF8FE) - 2126221445) % 0x12E0)) ^ 0xB7AE8AB6;
  v64 = v63 - ((2 * v63 + 374804154) & 0x163BB3C8) - 162963135;
  v65 = (uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1543 * (v60 + 1 != v58 + 256)) ^ v59)) - 12);
  *(&a58 + (457 * v60 + 1230577732) % 0x708u) = byte_18CF35F60[(((4424 * (v64 ^ (v64 >> 7) ^ (v64 >> 3) ^ 0x42F29945)) & 0xF19FD6D8)
                                                              + ((2212 * (v64 ^ (v64 >> 7) ^ (v64 >> 3) ^ 0x42F29945)) ^ 0xF8CFEB6D)
                                                              + 122354471)
                                                             % 0x97F] ^ 0xD1;
  return v65();
}

uint64_t sub_18CBB1A80@<X0>(int a1@<W1>, unsigned int a2@<W2>, int a3@<W3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;
  unint64_t v16;
  unsigned int v17;
  int v18;
  char v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t (*v36)(void);

  v11 = v5 * v9
      - 768014465
      - ((((v5 * v9 - 768014465) * (unint64_t)a2) >> 32) >> 10) * a3;
  v12 = (((2 * (*(unsigned __int8 *)(a4 + v11) ^ 0x35)) & 0x148)
       + (*(unsigned __int8 *)(a4 + v11) ^ 0x35 ^ ((v6 ^ 0x151) - 1345095192)))
      * v9
      + 528239740;
  v13 = *(unsigned __int8 *)(a4 + v12 - (((v12 * (unint64_t)a2) >> 32) >> 10) * a3);
  v14 = (((2 * ~v13) & 0xFC) + v13) * v7 - 278712;
  v15 = *(unsigned __int8 *)(v10 + v14 - (((v14 * (unint64_t)v8) >> 32) >> 10) * a1);
  HIDWORD(v16) = v15 ^ 0x70;
  LODWORD(v16) = ~v15 << 24;
  v17 = (v16 >> 31) - ((2 * (v16 >> 31)) & 0x2A) - 107;
  v18 = (((v17 & 0xFC) >> 2) ^ 0x50) + ((v17 >> 1) & 0x6A ^ 0x4A) - 117;
  v19 = 2 * ((v18 & (v17 ^ 0x95)) - ((2 * (v18 & (v17 ^ 0x95))) & 0x26));
  v20 = (((v18 + (v17 ^ 0x95)) ^ 0xD7)
                        + ((2 * (v18 + (v17 ^ 0x95))) & 0xAE)
                        + ((v19 - 90) ^ 0x23)
                        + ((2 * (v19 - 90)) & 0xF4 ^ 0xBB)
                        - 91);
  v21 = v17 ^ 0xC8 ^ ((~(v20 >> 3) | 0xE9) + (v20 >> 4) + 44);
  v22 = (((2 * v21) & 0xCC) + (v21 ^ 0x7FFFEB66)) * v7 + 16286956;
  v23 = *(unsigned __int8 *)(v10 + v22 - (((v22 * (unint64_t)v8) >> 32) >> 10) * a1);
  v24 = (2 * ((v23 ^ 0x5A) & 0x7F) + (v23 ^ 0x5FF7B725)) * v9 - 1362501495;
  v25 = *(unsigned __int8 *)(a4 + v24 - (((v24 * (unint64_t)a2) >> 32) >> 10) * a3);
  v26 = (((2 * (v25 ^ 0x7E)) & 0x14E) + (v25 ^ 0x5F65FFC1)) * v7 - 1296840812;
  LOBYTE(v26) = *(_BYTE *)(v10 + v26 - (((v26 * (unint64_t)v8) >> 32) >> 10) * a1) ^ 0xF0;
  LOBYTE(v26) = (-97 * v26 - ((62 * v26) & 0xF7) + 123) ^ 0x97;
  v27 = ((v26 ^ 0xFF7EBFFF) + 2 * v26) * v7 + 1560944465;
  v28 = *(unsigned __int8 *)(v10 + v27 - (((v27 * (unint64_t)v8) >> 32) >> 10) * a1);
  v29 = 23 * (v28 ^ 0xFFFFFFF0) - ((14 * v28) & 0x16) - 117;
  v30 = v29 ^ 0x28 ^ (((2 * ((v29 >> 3) & 9 ^ 0xFFFFFF88)) & 0x10) - ((v29 >> 3) & 9 ^ 0xFFFFFF88) - 95);
  v31 = (((2 * v30) & 0x136) + (v30 ^ 0x754F939B)) * v9 - 1795966067;
  v32 = *(unsigned __int8 *)(a4 + v31 - (((v31 * (unint64_t)a2) >> 32) >> 10) * a3);
  v33 = (((2 * (v32 ^ 0x25)) & 0xFFFFFFDF) + (v32 ^ 0x6EE3FBDA)) * v9 + 185026201;
  *(_BYTE *)(a4
           + v5 * v9
           - 767455097
           - ((((v5 * v9 - 767455097) * (unint64_t)a2) >> 32) >> 10) * a3) = *(_BYTE *)(a4 + v33 - (((v33 * (unint64_t)a2) >> 32) >> 10) * a3);
  LODWORD(v11) = (((2 * (*(unsigned __int8 *)(a4 + v11) ^ 1)) & 0x12) + (*(unsigned __int8 *)(a4 + v11) ^ 0x4FF6FF3C))
               * v9
               + 1075232047;
  LODWORD(v11) = *(unsigned __int8 *)(a4
                                    + v11
                                    - (((v11 * (unint64_t)a2) >> 32) >> 10) * a3);
  LODWORD(v11) = (((2 * (v11 ^ 0x8D)) & 0xFFFFFFBF) + (v11 ^ 0x76BFF672)) * v7 - 313597660;
  LODWORD(v11) = *(unsigned __int8 *)(v10
                                    + v11
                                    - (((v11 * (unint64_t)v8) >> 32) >> 10) * a1);
  HIDWORD(v16) = v11 ^ 0x70;
  LODWORD(v16) = ~(_DWORD)v11 << 24;
  v34 = ((v16 >> 31) - ((2 * (v16 >> 31)) & 0x92) - 55);
  LODWORD(v11) = (((2 * (((v16 >> 31) - ((2 * (v16 >> 31)) & 0xFFFFFF92) - 55) ^ (v34 >> 4) ^ (v34 >> 6) ^ 0x3C)) & 0x176)
                + ((((v16 >> 31) - ((2 * (v16 >> 31)) & 0x92) - 55) ^ (v34 >> 4) ^ (v34 >> 6)) ^ 0xFFBBFE87))
               * v9
               + 2036774509;
  LODWORD(v11) = *(unsigned __int8 *)(a4
                                    + v11
                                    - (((v11 * (unint64_t)a2) >> 32) >> 10) * a3);
  LODWORD(v11) = (((2 * (v11 ^ 0xA2)) & 0xFFFFFFF7) + (v11 ^ 0x6DDE775D)) * v7 - 1443337376;
  LODWORD(v11) = *(unsigned __int8 *)(v10
                                    + v11
                                    - (((v11 * (unint64_t)v8) >> 32) >> 10) * a1) ^ 0xFFFFFFF0;
  LODWORD(v11) = 23 * v11 - ((46 * v11) & 0xFFFFFFD8) + 108;
  v35 = ((v11 >> 3) & 9 ^ 0xFFFFFFFE) + ((v11 >> 2) & 0x10) + 2;
  LODWORD(v11) = v11 ^ 0x2D ^ ((v35 & 0x70 ^ 0x20) + (v35 ^ 0x5B) - ((v35 ^ 0x5B) & 0x72));
  LODWORD(v11) = (((2 * v11) & 0x16C) + (v11 ^ 0x1EE7F8B6)) * v9 - 739819942;
  LODWORD(v11) = *(unsigned __int8 *)(a4
                                    + v11
                                    - (((v11 * (unint64_t)a2) >> 32) >> 10) * a3) ^ 0x35;
  LODWORD(v11) = (((2 * v11) & 0x12E) + (v11 ^ 0x2DFEF297)) * v9 - 471534415;
  v36 = (uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((486 * (v5 == 1016684344)) ^ v6)) - 12);
  *(_BYTE *)(a4
           + v5 * v9
           - 767776825
           - ((((v5 * v9 - 767776825) * (unint64_t)a2) >> 32) >> 10) * a3) = *(_BYTE *)(a4 + v11 - (((v11 * (unint64_t)a2) >> 32) >> 10) * a3);
  return v36();
}

uint64_t sub_18CBB1FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  unsigned __int8 a68;
  unsigned __int8 a72;
  int v72;
  uint64_t v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  uint64_t v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;

  HIDWORD(a45) = 4 * (v72 ^ 0x1E1);
  HIDWORD(a34) = -4233477;
  v74 = *(unsigned __int8 *)((LODWORD(STACK[0x178C]) ^ 0xEFEBDECD3076A091)
                           + a63
                           + ((2 * (LODWORD(STACK[0x178C]) ^ 0xCDEADFEE)) & 0x1FB38FEFELL)
                           + 0x1014213202638081) ^ LOBYTE(STACK[0x563]) ^ 0xAF;
  v75 = a68 ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x1484]) ^ 0x7DFF7BFFBA173C37)
                                        + ((2 * (LODWORD(STACK[0x1484]) ^ 0xCDEADFEE)) & 0xEFFBC7B2)
                                        + a63
                                        - 0x7DFF7BFF77FDE3D9);
  v76 = LOBYTE(STACK[0x39A]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x1608]) ^ 0x3F3F7EE43406AC21)
                                                         + a63
                                                         + ((2 * (LODWORD(STACK[0x1608]) ^ 0xCDEADFEE)) & 0x1F3D8E79ELL)
                                                         - 0x3F3F7EE4F9EC73CFLL);
  v77 = *(unsigned __int8 *)((LODWORD(STACK[0x1300]) ^ 0x7FDFBFDF2239AC90)
                           + a63
                           + ((2 * (LODWORD(STACK[0x1300]) ^ 0xCDEADFEE)) & 0x1DFA6E6FCLL)
                           - 0x7FDFBFDFEFD3737ELL) ^ 0x9A;
  v78 = (((v74 - ((v74 << ((BYTE4(a45) - 120) ^ 0xFD)) & 0x164)) << 16) + 984743936) ^ 0x3AB20000;
  v79 = (((v76 - ((2 * v76) & 0xF2)) << 8) + 2128128) ^ 0x207900;
  v80 = (v79 - 1543986477 - ((2 * v79) & 0x47F14400)) ^ 0xA3F8A2D3 | (v78 - 137560522 - ((2 * v78) & 0x6F980000)) ^ 0xF7CCFE36;
  v81 = (v80 + 1695720919 - ((2 * v80) & 0x4A254BAE)) ^ 0x6512A5D7 | (v75 + 1266102699 - ((2 * v75) & 0x156)) ^ 0x4B7731AB;
  v82 = (((v81 - ((2 * v81) & 0x705470)) << 8) + 942290944) ^ 0x382A3800;
  v83 = (v82 + 763929304 - ((2 * v82) & 0x5B114400)) ^ 0x2D88A2D8 | (v77 + 1607271547 - ((2 * v77) & 0xF6)) ^ 0x5FCD047B;
  *(_DWORD *)(*a64 - 0x5C1335008418C527) = ((LOBYTE(STACK[0x710]) ^ 0x35)
                                            - ((2 * (LOBYTE(STACK[0x710]) ^ 0x35)) & 0xA)
                                            - 1046315515) ^ 0x8F38327B ^ (v83 - ((2 * v83) & 0x6E12720) - 2089774192);
  v84 = LOBYTE(STACK[0x57F]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x1D9C]) ^ 0x6F6FD76C32013874)
                                                         + a63
                                                         + ((2 * (LODWORD(STACK[0x1D9C]) ^ 0xCDEADFEE)) & 0x1FFD7CF34)
                                                         - 0x6F6FD76CFFEBE79ALL);
  v85 = *(unsigned __int8 *)((LODWORD(STACK[0x1C18]) ^ 0xD6FB7BFD62052050)
                           + a63
                           + ((2 * (LODWORD(STACK[0x1C18]) ^ 0xCDEADFEE)) & 0x15FDFFF7CLL)
                           + 0x2904840250100042) ^ LOBYTE(STACK[0x3B6]) ^ 0xAF;
  v86 = a72 ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x1A94]) ^ 0xFFE7F70E311D7117)
                                        + a63
                                        + ((2 * (LODWORD(STACK[0x1A94]) ^ 0xCDEADFEE)) & 0x1F9EF5DF2)
                                        + 0x1808F103085107);
  v87 = (((v84 - ((2 * v84) & 0xFFFFFFE3)) << 16) + 2029060096) ^ 0x78F10000;
  v88 = (((v85 - (a7 & (2 * v85))) << 8) - 1454950144) ^ 0xA9473900;
  v89 = (v88 - 1305656242 - ((2 * v88) & 0x645A8800)) ^ 0xB22D444E | (v87 - 71522473 - ((2 * v87) & 0x77780000)) ^ 0xFBBCA757;
  v90 = (v89 + 2029037412 - ((2 * v89) & 0xF1E14EC8)) ^ 0x78F0A764 | (v86 - 505695816 - ((2 * v86) & 0x170)) ^ 0xE1DBB1B8;
  v91 = LOBYTE(STACK[0x72C]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x1910]) ^ 0x96AC7BFD34102011)
                                                         + a63
                                                         + ((2 * (LODWORD(STACK[0x1910]) ^ 0xCDEADFEE)) & 0x1F3F5FFFELL)
                                                         + 0x6953840206050001);
  v92 = (((v90 - ((2 * v90) & 0x34E166)) << 8) + 443593472) ^ 0x1A70B300;
  v93 = (v92 + 1832372791 - ((2 * v92) & 0xDA6F9400)) ^ 0x6D37CA37 | (v91 + 1952444259 - ((2 * v91) & 0xC6)) ^ 0x745FEF63;
  *(_DWORD *)(*a64 - 0x5C1335008418C517) = v93 - 840245266 - ((2 * v93) & 0x9BD5BFDC);
  v94 = *(unsigned __int8 *)((LODWORD(STACK[0xCB8]) ^ 0x5E5EFEFF98550451)
                           + ((2 * (LODWORD(STACK[0xCB8]) ^ 0xCDEADFEE)) & 0xAB7FB77E)
                           + a63
                           - 0x5E5EFEFF55BFDBBFLL);
  v95 = ((2 * (v94 ^ 0x92)) & 0xFFFFFFEF) + (v94 ^ 0xF7FDF6D);
  v96 = *(unsigned __int8 *)((LODWORD(STACK[0x9B0]) ^ 0x3EF4BFFC401F3075)
                           + a63
                           + ((2 * (LODWORD(STACK[0x9B0]) ^ 0xCDEADFEE)) & 0x11BEBDF36)
                           - 0x3EF4BFFC8DF5EF9BLL) ^ LOBYTE(STACK[0x748]) ^ 0xAF;
  v97 = LOBYTE(STACK[0x59B]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0xE3C]) ^ 0x4E7FBFBB1A95D412)
                                                         + a63
                                                         + ((2 * (LODWORD(STACK[0xE3C]) ^ 0xCDEADFEE)) & 0x1AEFE17F8)
                                                         - 0x4E7FBFBBD77F0BFCLL);
  v98 = (((v97 - ((2 * v97) & 0x116)) << 8) + 1365543680) ^ 0x51648B00;
  v99 = ((LOBYTE(STACK[0x3D2]) ^ 0x35) - 1328085113 - ((2 * (LOBYTE(STACK[0x3D2]) ^ 0x35)) & 0xFFFFFF0F)) ^ 0xB0D70787;
  v100 = (v98 + 590282016 - ((2 * v98) & 0x465DFA00)) ^ 0x232EFD20 | v99;
  v101 = (v100 ^ 0xFE7B7F) + v95 + ((2 * v100) & 0xFCF6FE);
  v102 = (((v99 & (v95 - 260038647)) - ((2 * (v99 & (v95 - 260038647))) & 0x14EF22)) << 9) - 1796267520;
  v103 = *(unsigned __int8 *)((LODWORD(STACK[0xB34]) ^ 0x7E35DFE51A15A811)
                            + a63
                            + ((2 * (LODWORD(STACK[0xB34]) ^ 0xCDEADFEE)) & 0x1AFFEEFFELL)
                            - 0x7E35DFE5D7FF77FFLL) ^ 0x9A;
  v104 = ((v102 ^ 0x4EE2401)
        + ((2 * v102) & 0xDFFDF000 ^ 0xF623BFFF)
        + (((v101 << 8) - 2119923200) ^ 0x7B9DD6BD)
        + ((2 * ((v101 << 8) - 2119923200)) & 0xF73BAC00)
        - 194960573) | (v103 + 15399397 - ((2 * v103) & 0x1CA)) ^ 0xEAF9E5;
  v105 = (((v104 - ((2 * v104) & 0x95548A) + 4893253) ^ ((LOBYTE(STACK[0x209]) ^ 0x35)
                                                       - ((2 * (LOBYTE(STACK[0x209]) ^ 0x35)) & 0x64)
                                                       + 16695090)) << 8) ^ 0xB4157700;
  v106 = (v105 - 1080051247 - ((2 * v105) & 0x7F3F7200)) ^ 0xBF9FB9D1 | (v96 - 1207087621 - ((2 * v96) & 0xFFFFFFF7)) ^ 0xB80D4DFB;
  *(_DWORD *)(*a64 - 0x5C1335008418C507) = v106 - 840245266 - ((2 * v106) & 0x9BD5BFDC);
  LODWORD(v146) = (*(unsigned __int8 *)(v73 - 117) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v73 - 117) ^ 0x3E)) & 0x1EC);
  v107 = *(unsigned __int8 *)((LODWORD(STACK[0x19FC]) ^ 0x73E69F7F2F144095)
                            + a63
                            + ((2 * (LODWORD(STACK[0x19FC]) ^ 0xCDEADFEE)) & 0x1C5FD3EF6)
                            - 0x73E69F7FE2FE9F7BLL);
  HIDWORD(v150) = (*(unsigned __int8 *)(v73 - 120) ^ 0x3E)
                + 1388346255
                - ((2 * (*(unsigned __int8 *)(v73 - 120) ^ 0x3E)) & 0xFFFFFF1F);
  v108 = (LOBYTE(STACK[0x2CB]) ^ 0xAF ^ v107) - ((2 * (LOBYTE(STACK[0x2CB]) ^ 0xAF ^ v107)) & 0x1B8);
  HIDWORD(v146) = 696;
  v109 = (*(unsigned __int8 *)(v73 - 118) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v73 - 118) ^ 0x3E)) & 0x78);
  v110 = *(unsigned __int8 *)((LODWORD(STACK[0x1878]) ^ 0x45DAD8AF3E5D1809)
                            + a63
                            + ((2 * (LODWORD(STACK[0x1878]) ^ 0xCDEADFEE)) & 0x1E76F8FCELL)
                            - 0x45DAD8AFF3B7C7E7) ^ 0x9A;
  HIDWORD(v147) = v110 - ((2 * v110) & 0x1AA);
  LODWORD(v150) = 147;
  v149 = (LODWORD(STACK[0x194C]) ^ 0x6AFDF823AAEF3619)
       + ((2 * (LODWORD(STACK[0x194C]) ^ 0xCDEADFEE)) & 0xCE0BD3EE)
       + a63;
  HIDWORD(a40) = 1490;
  v148 = (LODWORD(STACK[0x1644]) ^ 0xBFBDFB8F3258E821)
       + a63
       + ((2 * (LODWORD(STACK[0x1644]) ^ 0xCDEADFEE)) & 0x1FF646F9ELL);
  LODWORD(v147) = 136;
  v111 = ((((v109 << 8) - 1287177216) ^ 0xB3473C00)
        - 457241811
        - ((2 * (((v109 << 8) - 1287177216) ^ 0xB3473C00)) & 0x497E1600)) ^ 0xE4BF0B2D | (((((_DWORD)v146 << 16) - 655360) ^ 0xFFF60000)
                                                                                        - 602709904
                                                                                        - ((2
                                                                                          * ((((_DWORD)v146 << 16)
                                                                                            - 655360) ^ 0xFFF60000)) & 0xB8260000)) ^ 0xDC136070;
  v112 = (v111 - 423870275 - ((2 * v111) & 0xCD78817A)) ^ 0xE6BC40BD | ((*(unsigned __int8 *)(v73 - 119) ^ 0x3E)
                                                                      + 1162864727
                                                                      - ((2 * (*(unsigned __int8 *)(v73 - 119) ^ 0x3E)) & 0xAE)) ^ 0x454FE857;
  v113 = (((v112 - ((2 * v112) & 0x8E0AB6)) << 8) + 1191533312) ^ 0x47055B00;
  v114 = v113 - 726915169 - ((2 * v113) & 0xA9584E00);
  v115 = LOBYTE(STACK[0x79B]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0xE0C]) ^ 0xE89B3D3D289FA069)
                                                          + a63
                                                          + ((2 * (LODWORD(STACK[0xE0C]) ^ 0xCDEADFEE)) & 0x1CAEAFF0ELL)
                                                          + 0x1764C2C21A8A8079);
  v116 = v115 - ((2 * v115) & 0x44444444);
  v117 = ((LOBYTE(STACK[0x80A]) ^ 0x35) - 441110883 - ((2 * (LOBYTE(STACK[0x80A]) ^ 0x35)) & 0x13A)) ^ 0xE5B52E9D | ((((v108 << 8) - 1237459968) ^ 0xB63DDC00) - 1633368089 - ((2 * (((v108 << 8) - 1237459968) ^ 0xB63DDC00)) & 0x3D498E00)) ^ 0x9EA4C7E7;
  v118 = v117 - ((2 * v117) & 0xD090);
  v119 = LOBYTE(STACK[0x5D2]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0xC88]) ^ 0xFCFBFD7722011843)
                                                          + a63
                                                          + ((2 * (LODWORD(STACK[0xC88]) ^ 0xCDEADFEE)) & 0x1DFD78F5ALL)
                                                          + 0x304028810143853);
  v120 = v119 - ((2 * v119) & 0x128);
  v121 = LOBYTE(STACK[0x641]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x16F4]) ^ 0x7F6B6DFE30176072)
                                                          + a63
                                                          + ((2 * (LODWORD(STACK[0x16F4]) ^ 0xCDEADFEE)) & 0x1FBFB7F38)
                                                          - 0x7F6B6DFEFDFDBF9CLL);
  v122 = LOBYTE(STACK[0x478]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0x1570]) ^ 0x8EEFDDFCF0552005)
                                                          + ((2 * (LODWORD(STACK[0x1570]) ^ 0xCDEADFEE)) & 0x7B7FFFD6)
                                                          + a63
                                                          + 0x71102203C2400015);
  v123 = LOBYTE(STACK[0x409]) ^ 0xAF ^ *(unsigned __int8 *)((LODWORD(STACK[0xB04]) ^ 0x31B5B65F22556040)
                                                          + a63
                                                          + ((2 * (LODWORD(STACK[0xB04]) ^ 0xCDEADFEE)) & 0x1DF7F7F5CLL)
                                                          - 0x31B5B65FEFBFBFAELL);
  v124 = ((((v120 << 8) + 782668800) ^ 0x2EA69400)
        - 348100583
        + (~(2 * (((v120 << 8) + 782668800) ^ 0x2EA69400)) | 0xA97F2FFF)
        + 1) ^ 0xEB406819 | ((((v116 << 16) - 1105068032) ^ 0xBE220000)
                           + 1358512080
                           - ((2 * (((v116 << 16) - 1105068032) ^ 0xBE220000)) & 0x21F20000)) ^ 0x50F93FD0;
  v125 = *(unsigned __int8 *)((LODWORD(STACK[0x980]) ^ 0xDAFE3BF7F2877071)
                            + ((2 * (LODWORD(STACK[0x980]) ^ 0xCDEADFEE)) & 0x7EDB5F3E)
                            + a63
                            + 0x2501C408C0925061) ^ LOBYTE(STACK[0x240]) ^ 0xAF;
  v126 = (((((v118 + 59464) ^ (HIDWORD(v147) + 8917)) << 16) ^ 0xCA9D0000)
        + 359443825
        - ((2 * ((((v118 + 59464) ^ (HIDWORD(v147) + 8917)) << 16) ^ 0xCA9D0000)) & 0x2AD80000)) ^ 0x156CAD71 | (((((v121 + 224668 - ((2 * v121) & 0xB6)) << 8) + 114432) ^ 0x36F5B00) - 65547654 - ((2 * ((((v121 + 224668 - ((2 * v121) & 0xB6)) << 8) + 114432) ^ 0x36F5B00)) & 0x782FA400)) ^ 0xFC17D27A;
  v127 = (v124 - 2122961011 - ((2 * v124) & 0x2EC5F1A)) ^ 0x81762F8D | (v123 + 105282250 - ((2 * v123) & 0x194)) ^ 0x6467ACA;
  v128 = (((v127 - ((2 * v127) & 0xAE804C)) << 8) - 683661824) ^ 0xD7402600;
  v129 = (v126 + 681187659 - ((2 * v126) & 0x51343296)) ^ 0x289A194B | (v122 - 1363689782 - ((2 * v122) & 0x194)) ^ 0xAEB7BECA;
  v130 = LODWORD(STACK[0xAF0]) ^ ((v114 ^ 0xD4AC279F | HIDWORD(v150) ^ 0x52C07B8F)
                                - ((2 * (v114 ^ 0xD4AC279F | HIDWORD(v150) ^ 0x52C07B8F)) & 0x5DAD9F6A)
                                - 1361653835) ^ (v125 - ((2 * v125) & 0x1F8) + 1186689788);
  v131 = *(unsigned __int8 *)(v149 - 0x6AFDF8236705E9F7);
  v132 = LOBYTE(STACK[0x5C9]);
  v133 = *(unsigned __int8 *)(v148 + 0x40420470004DC831);
  v134 = *(unsigned __int8 *)((LODWORD(STACK[0x17C8]) ^ 0x7DFEFFDF36973001)
                            + a63
                            + ((2 * (LODWORD(STACK[0x17C8]) ^ 0xCDEADFEE)) & 0x1F6FBDFDELL)
                            - 0x7DFEFFDFFB7DEFEFLL);
  v135 = LOBYTE(STACK[0x792]);
  v136 = LOBYTE(STACK[0x253]);
  v137 = LOBYTE(STACK[0x400]);
  v138 = *(unsigned __int8 *)((LODWORD(STACK[0x14C0]) ^ 0x46FCFEEF3F55AA90)
                            + a63
                            + ((2 * (LODWORD(STACK[0x14C0]) ^ 0xCDEADFEE)) & 0x1E57EEAFCLL)
                            - 0x46FCFEEFF2BF757ELL);
  *(_DWORD *)(*a64 - 0x5C13350084191667) = v130 ^ (v128 - ((2 * v128) & 0xD878EA00) + 1815901562) ^ 0x81B362E1 ^ (v129 - ((2 * v129) & 0xBC555A4) + 98740946);
  v139 = (v131 ^ v136 ^ 0xAF) - ((2 * (v131 ^ v136 ^ 0xAF)) & 0xC4);
  v140 = ((((v134 ^ v135 ^ 0xAF) - ((2 * (v134 ^ v135 ^ 0xAF)) & 0x30)) << 8) - 1574627328) ^ 0xA2251800;
  v141 = ((((v139 << 16) - 731774976) ^ 0xD4620000)
        + 34265122
        - ((2 * (((v139 << 16) - 731774976) ^ 0xD4620000)) & 0x4140000)) ^ 0x20AD822 | (v140
                                                                                      + 1329041776
                                                                                      - ((2 * v140) & 0x1E6F2200)) ^ 0x4F379170;
  v142 = (v141 + 300819278 - ((2 * v141) & 0x23DC469C)) ^ 0x11EE234E | ((v132 ^ 0xAF ^ v133)
                                                                      + 284242992
                                                                      - ((2 * (v132 ^ 0xAF ^ v133)) & 0x60)) ^ 0x10F13430;
  v143 = (((v142 - ((2 * v142) & 0x76CB3C)) << 8) + 996515328) ^ 0x3B659E00;
  v144 = (v143 + 2000028025 - ((2 * v143) & 0xEE6C0200)) ^ 0x77360179 | ((v137 ^ 0xAF ^ v138)
                                                                       + 349346098
                                                                       - ((2 * (v137 ^ 0xAF ^ v138)) & 0x64)) ^ 0x14D29932;
  *(_DWORD *)(*a64 - 0x5C1335008418C597) = v144 - 840245266 - ((2 * v144) & 0x9BD5BFDC);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[HIDWORD(a45) ^ 0xC8] - 4))(175, v137, 175, a64, 1607707621, 359443825, 1358512080, 105282250, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           0xEE00000249,
           v146,
           v147,
           v148,
           202418848,
           a40,
           v149,
           v150,
           0x24000000409,
           1607707621,
           a45,
           0x13D8C8E760C506E2,
           0x7071305245A737B9,
           0x1C468AF27238D3EALL,
           0x78301B266752FF5ELL,
           0x2C6344EE322B531ELL,
           0x4B61D285394B5A7CLL);
}

void sub_18CBB3760()
{
  JUMPOUT(0x18CBB20F8);
}

uint64_t sub_18CBB3768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  _QWORD *a65;
  char a66;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;

  v67 = ((a59 - 41) ^ 0x3B2) * v66;
  v68 = (((v66 - 1755748148) >> 2) ^ 0xDFF63B3F) + (((v66 - 1755748148) >> 1) & 0x3FEC767E);
  v69 = v67 + 1491214216;
  v70 = v67 + 1491214313;
  v71 = (v67 + 1491214313) / 0x55C;
  v72 = (v67 + 1491214216) % 0x55C;
  v73 = v67 + 1491214507;
  v74 = (v67 + 1491214507) / 0x55C;
  v67 += 1491237496;
  v75 = (v69 + 194) % 0x55C;
  v76 = *((_DWORD *)&STACK[0x8D0] + v73 - 1372 * v74) ^ 0xCDEADFEE;
  v77 = *((_DWORD *)&STACK[0x8D0] + v70 - 1372 * v71) ^ 0xCDEADFEE;
  v78 = *((_DWORD *)&STACK[0x8D0] + (v67 + 194) % 0x55C);
  v79 = *((_DWORD *)&STACK[0x8D0] + v72) ^ 0xCDEADFEE;
  v80 = *(unsigned __int8 *)((v76 ^ 0xFD5FF5BF9F377DF5) + a64 + ((2 * v76) & 0x13E6EFBEALL) + 0x2A00A4060C8820BLL);
  v81 = *((_DWORD *)&STACK[0x8D0] + (v67 + 97) % 0x55C);
  v82 = *(unsigned __int8 *)((v79 ^ 0xDD4FFF5EF4395FDALL) + a64 + ((2 * v79) & 0x1E872BFB4) + 0x22B000A10BC6A026);
  v83 = *(unsigned __int8 *)((*((unsigned int *)&STACK[0x8D0] + (v67 + 291) % 0x55C) ^ 0x36BEEF6F73042015)
                           + a64
                           + ((2 * (*((_DWORD *)&STACK[0x8D0] + (v67 + 291) % 0x55C) ^ 0xCDEADFEE)) & 0x17DDDFFF6)
                           - 0x36BEEF6FBEEEFFFBLL);
  LODWORD(v79) = *(unsigned __int8 *)((v78 ^ 0x3F775EFA32042755)
                                    + a64
                                    + ((2 * (v78 ^ 0xCDEADFEE)) & 0x1FFDDF176)
                                    - 0x3F775EFAFFEEF8BBLL);
  v84 = *(&a66 + (457 * v66 + 782496669) % 0x708u) ^ 0xAF ^ *(unsigned __int8 *)((v77 ^ 0xFFDF5A2BFDFB2BFFLL)
                                                                                                + a64
                                                                                                + ((2 * v77) & 0x1FBF657FELL)
                                                                                                + 0x20A5D40204D401);
  v85 = *(unsigned __int8 *)((v81 ^ 0x6EBFDF9FA2155031)
                           + ((2 * (v81 ^ 0xCDEADFEE)) & 0xDFFF1FBE)
                           + a64
                           - 0x6EBFDF9F6FFF8FDFLL);
  v86 = *(&a66 + (457 * v66 + 782497126) % 0x708u) ^ 0xAF ^ *(unsigned __int8 *)((*((unsigned int *)&STACK[0x8D0] + v75) ^ 0xDF5C5EED32392115)
                                                                                                + a64
                                                                                                + ((2
                                                                                                  * (*((_DWORD *)&STACK[0x8D0] + v75) ^ 0xCDEADFEE)) & 0x1FFA7FDF6)
                                                                                                + 0x20A3A112002C0105);
  v87 = *(&a66 + (457 * v66 + 782497583) % 0x708u);
  v88 = *(unsigned __int8 *)((*((unsigned int *)&STACK[0x8D0] + v67 % 0x55C) ^ 0xFBD3FF6F35B93D15)
                           + a64
                           + ((2 * (*((_DWORD *)&STACK[0x8D0] + v67 % 0x55C) ^ 0xCDEADFEE)) & 0x1F0A7C5F6)
                           + 0x42C009007AC1D05);
  v89 = (v80 ^ v87 ^ 0xAF) - ((2 * (v80 ^ v87 ^ 0xAF)) & 0x72);
  v90 = *(&a66 + (457 * v66 + 782496212) % 0x708u) ^ 0xAF ^ v82;
  v91 = (((v86 + (~(2 * v86) | 0xFFFE6F)) << 8) - 1161836288) ^ 0xBABFC800;
  v92 = (v91 + 648627832 - ((2 * v91) & 0x1528C00)) ^ 0x26A94678 | ((((v89 << 16) + 188284928) ^ 0xB390000)
                                                                  - 2093037758
                                                                  - ((2 * (((v89 << 16) + 188284928) ^ 0xB390000)) & 0x67C0000)) ^ 0x833EC742;
  v93 = (v92 - 1132174719 - ((2 * v92) & 0x7908C502)) ^ 0xBC846281 | (v84 + 1244682371 - ((2 * v84) & 0xFFFFFF07)) ^ 0x4A305883;
  v94 = (((v93 - ((2 * v93) & 0x15FCBE)) << 8) - 1963041024) ^ 0x8AFE5F00;
  v95 = (v94 - 50726303 - ((2 * v94) & 0xF9F3F400)) ^ 0xFCF9FA61 | (v90 - 1546092185 - ((2 * v90) & 0xCE)) ^ 0xA3D88167;
  v96 = *(&a66 + (457 * v66 + 782607263) % 0x708u);
  v97 = *(&a66 + (457 * v66 + 782605892) % 0x708u);
  v98 = *(&a66 + (457 * v66 + 782606349) % 0x708u);
  LODWORD(v76) = *(&a66 + (457 * v66 + 782606806) % 0x708u);
  *(_DWORD *)(((4 * (v68 + 552464382)) | ((unint64_t)(v68 + 552464382 < 0xE42B3D) << 34))
            + *a65
            - 0x5C13350087A9C35BLL) = *((_DWORD *)&STACK[0x8D0] + (97 * (v68 + 552464382) - 1450443037) % 0x55C) ^ 0xD098B6F8 ^ (v95 - 795298056 - ((2 * v95) & 0xA1316DF0));
  v99 = (v83 ^ v96 ^ 0xAF) + 2748688 - ((2 * (v83 ^ v96 ^ 0xAF)) & 0x1B2);
  v100 = ((((v99 << 8) - 210688) ^ 0x29EDD900) - 1726593683 - ((2 * (((v99 << 8) - 210688) ^ 0x29EDD900)) & 0x322C8A00)) ^ 0x9916456D | ((v79 ^ 0x9A) - 437786230 - ((2 * (v79 ^ 0x9A)) & 0x114)) ^ 0xE5E7E98A;
  v101 = (v85 ^ v98 ^ 0xAF) - ((2 * (v85 ^ v98 ^ 0xAF)) & 0x1D8);
  v102 = ((v76 ^ 0x35) - ((2 * (v76 ^ 0x35)) & 0x160) + 9136) ^ (v100 - ((2 * v100) & 0x8E) + 71);
  v103 = (((v102 << 16) ^ 0x23F70000) + 549956630 - ((2 * ((v102 << 16) ^ 0x23F70000)) & 0x418E0000)) ^ 0x20C7AC16 | ((((v101 << 8) - 1716982784) ^ 0x99A8EC00) + 168610752 - ((2 * (((v101 << 8) - 1716982784) ^ 0x99A8EC00)) & 0x14199600)) ^ 0xA0CCBC0;
  v104 = (v103 + 1941494546 - ((2 * v103) & 0xE771B624)) ^ 0x73B8DB12 | ((v88 ^ v97 ^ 0xAF)
                                                                       + 1480644925
                                                                       - ((2 * (v88 ^ v97 ^ 0xAF)) & 0x7A)) ^ 0x5840D93D;
  *(_DWORD *)(((4 * (v68 + 1117346493)) | ((unint64_t)(v68 + 1117346493 < 0x228F81C8) << 34))
            + *a65
            - 0x5C1335010E571D87) = v104 - 840245266 - ((2 * v104) & 0x9BD5BFDC);
  HIDWORD(a45) = a59 - 41;
  return ((uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(1216 * ((v66 - 1755748144) < 0x20)) ^ a59] - 8))(1800, 549956630, &a66, 1372, 1480644925, 53, 168610752, 973640231, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_18CBB3F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  unsigned int v64;
  int v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;

  HIDWORD(v70) = a8 + 21;
  LODWORD(v70) = ((HIDWORD(a45) + 235) ^ 0xC5F7750B) + a8;
  v71 = (v70 >> 5) - ((2 * (v70 >> 5)) & 0x954C8462) - 895073743;
  HIDWORD(v70) = v71 ^ 0x231;
  LODWORD(v70) = v71 ^ 0xCAA64000;
  v72 = (v70 >> 13) - ((2 * (v70 >> 13)) & 0x44C3D84C) - 1570640858;
  v73 = (((a8 - 973640199) >> 2) + 305686652 - (((a8 - 973640199) >> 1) & 0x2470D0F8)) ^ 0x1238687C;
  HIDWORD(v70) = v72 ^ 0x2C26;
  LODWORD(v70) = v72 ^ 0xA261C000;
  v74 = ((194 * v73) & 0xBD3F4EFE) + ((v73 * v68) ^ 0xDE9FA77F) + 559987073;
  v75 = v74 - (((v74 * (unint64_t)v64) >> 32) >> 10) * a4;
  v76 = ((v70 >> 14) - 1248845602 - ((2 * (v70 >> 14)) & 0x6B2041BC)) ^ 0xB59020DE;
  v77 = *(unsigned __int8 *)(a3 + 457 * a8 + 1723544708 - (457 * a8 + 1723544708) / 0x708u * a1) ^ v67 ^ *(unsigned __int8 *)((*(unsigned int *)(v66 + 4 * (a8 * v68 + 46274232 - ((((a8 * v68 + 46274232) * (unint64_t)v64) >> 32) >> 10) * a4)) ^ 0xFFE9B7F73600229DLL) + a63 + ((2 * (*(_DWORD *)(v66 + 4 * (a8 * v68 + 46274232 - ((((a8 * v68 + 46274232) * (unint64_t)v64) >> 32) >> 10) * a4)) ^ 0xCDEADFEE)) & 0x1F7D5FAE6) + 0x1648080415028DLL);
  v78 = ((194 * v76) & 0xFFFBDAFA) + 133418 + ((v76 * v68) ^ 0xFFFDED7D) + 2393;
  v79 = v77 - ((2 * v77) & 0xE0);
  v80 = *(unsigned __int8 *)(a3 + 457 * a8 + 1723543337 - (457 * a8 + 1723543337) / 0x708u * a1) ^ a6;
  v81 = *(_DWORD *)(v66 + 4 * (v78 - (((v78 * (unint64_t)v64) >> 32) >> 10) * (_DWORD)a4)) ^ 0xCDEADFEE;
  v82 = *(unsigned __int8 *)(a3 + 457 * a8 + 1723544251 - (457 * a8 + 1723544251) / 0x708u * a1) ^ v67 ^ *(unsigned __int8 *)((*(unsigned int *)(v66 + 4 * (a8 * v68 + 46274135 - ((((a8 * v68 + 46274135) * (unint64_t)v64) >> 32) >> 10) * a4)) ^ 0xFFE7FFB730352195) + a63 + ((2 * (*(_DWORD *)(v66 + 4 * (a8 * v68 + 46274135 - ((((a8 * v68 + 46274135) * (unint64_t)v64) >> 32) >> 10) * a4)) ^ 0xCDEADFEE)) & 0x1FBBFFCF6) + 0x18004802200185);
  v83 = (((v82 - ((2 * v82) & 0x50)) << 8) - 4904960) ^ 0xFFB52800;
  v84 = (v83 - 179460259 - ((2 * v83) & 0x6A9B4E00)) ^ 0xF54DA75D | ((((v79 << 16) + 108003328) ^ 0x6700000)
                                                                   - 2053040257
                                                                   - ((2 * (((v79 << 16) + 108003328) ^ 0x6700000)) & 0xB420000)) ^ 0x85A1177F;
  v85 = (2 * v84) & 0x659B691A;
  v86 = v84 - 221399923 - v85;
  v87 = *(unsigned __int8 *)(a3 + 457 * a8 + 1723543794 - (457 * a8 + 1723543794) / 0x708u * a1) ^ v67 ^ *(unsigned __int8 *)((*(unsigned int *)(v66 + 4 * (a8 * v68 + 46274038 - ((((a8 * v68 + 46274038) * (unint64_t)v64) >> 32) >> 10) * a4)) ^ 0xFDECEDA926176CB1) + a63 + ((2 * (*(_DWORD *)(v66 + 4 * (a8 * v68 + 46274038 - ((((a8 * v68 + 46274038) * (unint64_t)v64) >> 32) >> 10) * a4)) ^ 0xCDEADFEE)) & 0x1D7FB66BELL) + 0x213125614024CA1);
  v88 = v86 ^ 0xF2CDB48D | (v87 - 684293365 - ((2 * v87) & 0x16)) ^ 0xD736830B;
  LODWORD(v81) = *(unsigned __int8 *)((v81 ^ 0x7F757D6EFFB367FFLL)
                                    + a63
                                    + ((2 * v81) & 0x1FF66CFFELL)
                                    - 0x7F757D6EFFB367FFLL) ^ v65;
  v89 = (((v88 + 8958960 - ((2 * v88) & 0x1167A0)) << 8) - 0x2000) ^ 0x88B3D000;
  v90 = (v89 + 1553277056 - ((2 * v89) & 0xB92A4000)) ^ 0x5C952080 | (v80 - 919347685 - ((2 * v80) & 0x36)) ^ 0xC933DE1B;
  *(_DWORD *)(*a64
            + 4
            * (((((a8 - 973640199) >> 2) + 305686652 - (((a8 - 973640199) >> 1) & 0x2470D0F8)) ^ 0x3BB37CFBE4CF9EC7)
             + ((2 * v73) & 0x1EDEFED76))
            - 0x4AE128F05FF8F153) = (v81 - ((2 * v81) & 0x100) - 1307673216) ^ *(_DWORD *)(v66 + 4 * v75) ^ 0x9A56AF52 ^ (v90 - ((2 * v90) & 0x50B1A5A4) + 676909778);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 + 8 * ((47 * ((a8 - 973640195) < 0x60)) ^ HIDWORD(a45))) - 8))(a1, 3375619611, a3, a4, v86, a6, v85, (a8 + 4), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_18CBB448C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  char a65;
  int v65;
  unsigned int v66;
  unint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  int v85;
  uint64_t v86;
  unint64_t v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  uint64_t v92;
  unsigned int v93;
  unsigned int v95;

  v95 = (((v65 - 983819217) >> 1) & 0x73FDBFFE) + (((v65 - 983819217) >> 2) ^ 0x79FEDFFF);
  HIDWORD(a45) = (457 * v65 + 1366781210) % 0x708u;
  v66 = (97 * v65 - 941073636) % 0x55Cu;
  v67 = &STACK[0x8D0];
  v68 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 - 941090514) % 0x55Cu) ^ 0xCDEADFEE;
  v69 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 - 941090611) % 0x55Cu) ^ 0xCDEADFEE;
  v70 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 - 941074719 + 590 * (a59 ^ 0x4BCu)) % 0x55C) ^ 0xCDEADFEE;
  LODWORD(v70) = *(unsigned __int8 *)((v70 ^ 0x765E1DFBBDCBFFB7)
                                    + a63
                                    + ((2 * v70) & 0x17B97FF6ELL)
                                    - 0x765E1DFBBDCBFFB7);
  v71 = *((_DWORD *)&STACK[0x8D0] + v66) ^ 0xCDEADFEE;
  v72 = *((unsigned int *)&STACK[0x8D0] + v66) ^ 0x76EFFFFF3317A029;
  v73 = *(unsigned __int8 *)((*((unsigned int *)v67 + (97 * v65 - 941073442) % 0x55Cu) ^ 0xF1EF7CBE930C0F10)
                           + ((2 * (*((_DWORD *)v67 + (97 * v65 - 941073442) % 0x55Cu) ^ 0xCDEADFEE)) & 0xBDCDA1FC)
                           + a63
                           + 0xE108341A1192F02);
  v74 = *(unsigned __int8 *)(v72 + a63 + ((2 * v71) & 0x1FDFAFF8ELL) - 0x76EFFFFFFEFD7FC7);
  v75 = (457 * v65 + 1366779839) % 0x708u;
  v76 = *(unsigned __int8 *)((*((unsigned int *)v67 + (97 * v65 - 941073733) % 0x55Cu) ^ 0x579BFFFFB210E157)
                           + ((2 * (*((_DWORD *)v67 + (97 * v65 - 941073733) % 0x55Cu) ^ 0xCDEADFEE)) & 0xFFF47D72)
                           + a63
                           - 0x579BFFFF7FFA3EB9);
  v77 = *(unsigned __int8 *)((v69 ^ 0x25E7FE1BFF2F7FDDLL) + a63 + ((2 * v69) & 0x1FE5EFFBALL) - 0x25E7FE1BFF2F7FDDLL) ^ *(&a65 + (457 * v65 + 1366700321) % 0x708u) ^ 0xAF;
  v78 = *(unsigned __int8 *)((v68 ^ 0xBC7FA9BAF77FFE27) + a63 + ((2 * v68) & 0x1EEFFFC4ELL) + 0x43805645088001D9) ^ *(&a65 + (457 * v65 + 1366700778) % 0x708u);
  v79 = *(&a65 + (457 * v65 + 1366699864) % 0x708u) ^ *(unsigned __int8 *)((*((unsigned int *)v67
                                                                                             + (97 * v65 - 941090708)
                                                                                             % 0x55Cu) ^ 0xC77EB7DBA2153033)
                                                                                          + ((2
                                                                                            * (*((_DWORD *)v67
                                                                                               + (97 * v65 - 941090708)
                                                                                               % 0x55Cu) ^ 0xCDEADFEE)) & 0xDFFFDFBA)
                                                                                          + a63
                                                                                          + 0x3881482490001023);
  v80 = ((((v78 ^ 0xAF) - ((2 * v78) & 0x20)) << 16) + 907018240) ^ 0x36100000;
  v81 = (((v77 - ((2 * v77) & 0x8C)) << 8) - 2082060800) ^ 0x83E64600;
  v82 = (v81 - 1155264805 - ((2 * v81) & 0x76481C00)) ^ 0xBB240EDB;
  v83 = (v80 + 469358098 - ((2 * v80) & 0x37F20000)) ^ 0x1BF9D612 | v82;
  v84 = v82 | ((v79 ^ 0xAF) - 1277821936 - ((2 * v79) & 0x20)) ^ 0xB3D5FC10;
  v85 = (v83 + 797155328 - ((2 * v83) & 0x5F0750C0) + 2144) ^ 0x2F83A000;
  v86 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 - 941090805) % 0x55Cu) ^ 0xCDEADFEE;
  HIDWORD(v87) = (v84 - ((2 * v84) & 0x5AC) + 2774) ^ 0xAD6;
  LODWORD(v87) = v85;
  v88 = (v87 >> 12) - ((2 * (v87 >> 12)) & 0x12C8F68C) + 157580102;
  HIDWORD(v87) = v88 ^ 0x47B46;
  LODWORD(v87) = v88 ^ 0x9600000;
  v89 = ((((v87 >> 20) - ((2 * (v87 >> 20)) & 0x4EC4EC)) << 8) + 660764160) ^ 0x27627600;
  v90 = (v89 - 744567601 - ((2 * v89) & 0xA73D9800)) ^ 0xD39ECCCF | *(&a65
                                                                                     + (457 * v65 + 1366699407) % 0x708u) ^ 0xAF ^ *(unsigned __int8 *)((v86 ^ 0x7CFFD05FCC5F4DBFLL) + a63 + ((2 * v86) & 0x198BE9B7ELL) - 0x7CFFD05FCC5F4DBFLL);
  v91 = *(&a65 + HIDWORD(a45));
  LODWORD(v86) = *(&a65 + (457 * v65 + 1366780753) % 0x708u);
  LODWORD(v68) = *(&a65 + (457 * v65 + 1366780296) % 0x708u);
  v92 = *(&a65 + v75);
  *(_DWORD *)(((4 * (v95 - 948176075)) | ((unint64_t)(v95 - 948176075 < 0x417ADB34) << 34))
            + *a64
            - 0x5C1335018A048337) = *((_DWORD *)&STACK[0x8D0] + (97 * (v95 - 948176075) + 812864076) % 0x55C) ^ 0x9DB1F96A ^ (v90 - 1649280662 - ((2 * v90) & 0x3B63F2D4));
  LODWORD(v70) = (v86 ^ 0xAF ^ v70) - ((2 * (v86 ^ 0xAF ^ v70)) & 0x54);
  v93 = ((((v91 ^ 0xAF ^ v73) - ((2 * (v91 ^ 0xAF ^ v73)) & 0x194)) << 16) - 775290880) ^ 0xD1CA0000;
  LODWORD(v70) = (((((_DWORD)v70 << 8) + 1284319744) ^ 0x4C8D2A00)
                - 964721240
                - ((2 * ((((_DWORD)v70 << 8) + 1284319744) ^ 0x4C8D2A00)) & 0xCFF0A00)) ^ 0xC67F85A8 | (v93 + 1537997168 - ((2 * v93) & 0x37560000)) ^ 0x5BABF970;
  LODWORD(v70) = (v70 - 971563414 - ((2 * v70) & 0xC2E3CD4)) ^ 0xC6171E6A | ((v68 ^ 0x35)
                                                                           - 1983866162
                                                                           - ((2 * (v68 ^ 0x35)) & 0x19C)) ^ 0x89C09ACE;
  LODWORD(v70) = ((((_DWORD)v70 - ((2 * (_DWORD)v70) & 0x716EB0) + 3716952) ^ ((v74 ^ 0x9A)
                                                                             - ((2 * (v74 ^ 0x9A)) & 0x60)
                                                                             + 14767920)) << 8) ^ 0xD9E06800;
  LODWORD(v70) = (v70 - 1236721392 + (~(2 * v70) | 0x936DBDFF) + 1) ^ 0xB6492110 | ((v76 ^ v92 ^ 0xAF)
                                                                                  + 1497875398
                                                                                  - ((2 * (v76 ^ v92 ^ 0xAF)) & 0x18C)) ^ 0x5947C3C6;
  *(_DWORD *)(((4 * (v95 - 466545364)) | ((unint64_t)(v95 - 466545364 < 0x5E2FE107) << 34))
            + *a64
            - 0x5C133501FCD89A83) = v70 - 840245266 - ((2 * v70) & 0x9BD5BFDC);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(641 * ((v65 - 983819213) < 0xB0)) ^ a59] - 4))(1372, 1497875398, 1537997168, 2443359173, 2311101134, v74, v92, v75, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_18CBB4CC4(int a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  int v64;
  uint64_t v65;
  int v66;
  unsigned int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unint64_t v85;
  int v86;
  int v87;

  v74 = (((((v66 - 1015121341) & 0x3C81837F ^ 0xB0D56953) + v64) >> 2) ^ 0x7FB3FEFF)
      + (((((v66 - 1015121341) & 0x3C81837F ^ 0xB0D56953) + v64) >> 1) & 0x7F67FDFE);
  v75 = *(unsigned __int8 *)(v65
                           + 457 * v64
                           - 1392248410
                           - ((((457 * v64 - 1392248410) * (unint64_t)a4) >> 32) >> 10)
                           * v68) ^ v71 ^ *(unsigned __int8 *)((*(unsigned int *)(v69
                                                                                + 4
                                                                                * (v64 * v73
                                                                                 + 14613130
                                                                                 - ((((v64 * v73 + 14613130)
                                                                                                  * (unint64_t)v67) >> 32) >> 10)
                                                                                 * a1)) ^ 0xEBBEBBDF295130D2)
                                                             + v70
                                                             + ((2
                                                               * (*(_DWORD *)(v69
                                                                            + 4
                                                                            * (v64 * v73
                                                                             + 14613130
                                                                             - ((((v64 * v73 + 14613130)
                                                                                              * (unint64_t)v67) >> 32) >> 10)
                                                                             * a1)) ^ 0xCDEADFEE)) & 0x1C977DE78)
                                                             + 0x144144201B4410C4);
  v76 = *(unsigned __int8 *)(v65
                           + 457 * v64
                           - 1392247953
                           - ((((457 * v64 - 1392247953) * (unint64_t)a4) >> 32) >> 10)
                           * v68) ^ v71 ^ *(unsigned __int8 *)((*(unsigned int *)(v69
                                                                                + 4
                                                                                * (v64 * v73
                                                                                 + 14613227
                                                                                 - ((((v64 * v73 + 14613227)
                                                                                                  * (unint64_t)v67) >> 32) >> 10)
                                                                                 * a1)) ^ 0xCDEFFAEB772B3310)
                                                             + v70
                                                             + ((2
                                                               * (*(_DWORD *)(v69
                                                                            + 4
                                                                            * (v64 * v73
                                                                             + 14613227
                                                                             - ((((v64 * v73 + 14613227)
                                                                                              * (unint64_t)v67) >> 32) >> 10)
                                                                             * a1)) ^ 0xCDEADFEE)) & 0x17583D9FCLL)
                                                             + 0x32100514453E1302);
  v77 = *(unsigned __int8 *)(v65
                           + 457 * v64
                           - 1392248867
                           - ((((457 * v64 - 1392248867) * (unint64_t)a4) >> 32) >> 10)
                           * v68) ^ v71 ^ *(unsigned __int8 *)((*(unsigned int *)(v69
                                                                                + 4
                                                                                * (v64 * v73
                                                                                 + 14613033
                                                                                 - ((((v64 * v73 + 14613033)
                                                                                                  * (unint64_t)v67) >> 32) >> 10)
                                                                                 * a1)) ^ 0x7FDFEFDF15FEE03BLL)
                                                             + v70
                                                             + ((2
                                                               * (*(_DWORD *)(v69
                                                                            + 4
                                                                            * (v64 * v73
                                                                             + 14613033
                                                                             - ((((v64 * v73 + 14613033)
                                                                                              * (unint64_t)v67) >> 32) >> 10)
                                                                             * a1)) ^ 0xCDEADFEE)) & 0x1B0287FAALL)
                                                             - 0x7FDFEFDFD8143FD5);
  v78 = (((v76 - ((2 * v76) & 0x1D4)) << 16) + 1391067136) ^ 0x52EA0000;
  v79 = (((v75 - ((2 * v75) & 0xFFFFFF87)) << 8) + 1536934656) ^ 0x5B9BC300;
  v80 = (v78 + 159748351 - ((2 * v78) & 0x130A0000)) ^ 0x98590FF | (v79 - 390378020 - ((2 * v79) & 0x51769A00)) ^ 0xE8BB4DDC;
  v81 = (v80 - 2058176291 - ((2 * v80) & 0xAA571BA)) ^ 0x8552B8DD | (v77 + 1183141481 - ((2 * v77) & 0xD2)) ^ 0x46854E69;
  v82 = *(unsigned __int8 *)(v65
                           + 457 * v64
                           - 1392249324
                           - ((((457 * v64 - 1392249324) * (unint64_t)a4) >> 32) >> 10)
                           * v68) ^ v71 ^ *(unsigned __int8 *)((*(unsigned int *)(v69
                                                                                + 4
                                                                                * (v64 * v73
                                                                                 + 14612936
                                                                                 - ((((v64 * v73 + 14612936)
                                                                                                  * (unint64_t)v67) >> 32) >> 10)
                                                                                 * a1)) ^ 0x7ABFFA3F2AD40493)
                                                             + v70
                                                             + ((2
                                                               * (*(_DWORD *)(v69
                                                                            + 4
                                                                            * (v64 * v73
                                                                             + 14612936
                                                                             - ((((v64 * v73 + 14612936)
                                                                                              * (unint64_t)v67) >> 32) >> 10)
                                                                             * a1)) ^ 0xCDEADFEE)) & 0x1CE7DB6FALL)
                                                             - 0x7ABFFA3FE73EDB7DLL);
  v83 = (((((v81 - ((2 * v81) & 0xBC325C)) << 8) - 568775168) ^ 0xDE192E00)
       - 1515059021
       - ((2 * ((((v81 - ((2 * v81) & 0xBC325C)) << 8) - 568775168) ^ 0xDE192E00)) & 0x4B641000)) ^ 0xA5B208B3 | (v82 + 866642929 - ((2 * v82) & 0xFFFFFFE3)) ^ 0x33A7EBF1;
  v84 = (v83 + 2124698422 - ((2 * v83) & 0xFD48A98C) + 400) ^ *(_DWORD *)(v69
                                                                        + 4
                                                                        * (v74 * v73
                                                                         - 1664306375
                                                                         - ((((v74 * v73 - 1664306375)
                                                                                          * (unint64_t)v67) >> 32) >> 10)
                                                                         * a1));
  HIDWORD(v85) = v84 ^ 0x328;
  LODWORD(v85) = v84 ^ 0xB34E8800;
  v86 = (v85 >> 11) - ((2 * (v85 >> 11)) & 0x8C1EA08A) + 1175408709;
  HIDWORD(v85) = v86 ^ 0x60F5045;
  LODWORD(v85) = v86 ^ 0x40000000;
  v87 = (v85 >> 29) - ((2 * (v85 >> 29)) & 0xFBF5D946) + 2113596579;
  HIDWORD(v85) = v87 ^ 0xFAECA3;
  LODWORD(v85) = v87 ^ 0x7D000000;
  *(_DWORD *)(((4 * (v74 - 1143460493)) | ((unint64_t)(v74 - 1143460493 < 0x3B8C2C76) << 34))
            + *a64
            - 0x5C1335017249C83FLL) = (v85 >> 24) - 840245266 - ((2 * (v85 >> 24)) & 0x9BD5BFDC);
  return ((uint64_t (*)(void))(*(_QWORD *)(v72
                                        + 8
                                        * (((2 * ((v64 - 1328190704) < 0xE0)) | (32
                                                                                             * ((v64 - 1328190704) < 0xE0))) ^ v66))
                            - 4))();
}

uint64_t sub_18CBB5158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  char *v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  uint64_t v80;
  unsigned int v81;
  unsigned int v82;
  uint64_t v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;

  v68 = ((a46 + 30) + 1452221458 - ((2 * (a46 + 30)) & 0x24)) ^ 0x568F2412;
  v69 = &a65;
  v70 = *(&a65 + (((914 * v68) & 0x1BF7FE) + ((457 * v68) ^ 0x7FFDFBFFu) - 2147088319) % 0x708);
  v71 = *(_DWORD *)(v67 + 4 * ((1361 * (((2 * ~v70) & 0x1DEu) + v70) + 4459997) % 0x12E0));
  v72 = (2 * ((v71 ^ 0x8DE6BD5D) * (v71 ^ 0x8DE6BD5D) - ((2 * (v71 ^ 0x8DE6BD5D) * (v71 ^ 0x8DE6BD5D)) & 0x6AE2DF64))
       + 1793253220) ^ 0x6AE2DF64;
  v73 = (v72 - ((2 * v72) & 0x47A4833C) - 1546501729) ^ v71;
  v74 = HIBYTE(v73) ^ 0xFD;
  v75 = (((v73 >> 15) & 8) + (BYTE2(v73) ^ 0xFFFFFFEC) + 2111900156) ^ 0x75E90DAB;
  v76 = (((2 * v75) & 0x1010141A) - v75 + 1431705074) ^ 0x5D5E11FA;
  v77 = (v73 & 0x21 ^ 0x9EC30001) + (v73 & 0xDE ^ 0x1089085);
  LOWORD(v73) = ((2 * (BYTE1(v73) ^ 0x8F)) & 0x92) - (BYTE1(v73) ^ 0x8F) - 6218;
  v78 = (v73 & 0x2D15 ^ 0x2E720801) + (v73 & 0x12EA ^ 0x52A3);
  v79 = ((914 * v76) & 0xDDEF567A) + ((457 * v76) ^ 0xEEF7AB3D) + 285904899;
  v80 = 2443359173 * v79;
  v81 = (((914 * v74) & 0x1E67A) + ((457 * v74) ^ 0x6AEEF33Du) - 1793900293) % 0x708;
  v82 = v79 % 0x708;
  v83 = (((914 * ((v77 - 1) ^ 0x9FCB90E4)) & 0x69FBB6) + ((457 * ((v77 - 1) ^ 0x9FCB90E4)) ^ 0xDD74FDDB) + 579681637)
      % 0x708;
  v84 = (((914 * ((v78 - 1) ^ 0x2E727D27)) & 0xF7FD7F6) + ((457 * ((v78 - 1) ^ 0x2E727D27)) ^ 0x5FBFEBFBu) - 1606267067)
      % 0x708;
  v85 = *(&a65 + v82) ^ 0x35;
  v86 = ((((v69[v81] ^ 0x35) - ((2 * v69[v81]) & 0x94)) << 16) + 575275008) ^ 0x224A0000;
  v87 = (((v85 - ((2 * v85) & 0xFFFFFFEF)) << 8) - 170461440) ^ 0xF5D6F700;
  v88 = (v87 - 314174969 - ((2 * v87) & 0x100C2400)) ^ 0xED461207 | (v86 + 538835435 - ((2 * v86) & 0x403A0000)) ^ 0x201DF9EB;
  LODWORD(v69) = (v88 - 942465900 - ((2 * v88) & 0xFA63928)) ^ 0xC7D31C94 | ((v69[v84] ^ 0x35)
                                                                           - 1588985342
                                                                           - ((2 * v69[v84]) & 4)) ^ 0xA14A0202;
  LODWORD(v69) = ((((_DWORD)v69 - ((2 * (_DWORD)v69) & 0x5992D4)) << 8) - 1396086272) ^ 0xACC96A00;
  v89 = *(&a65 + v83) ^ 0x35;
  LODWORD(v69) = ((_DWORD)v69 + 1482264197 - ((2 * (_DWORD)v69) & 0xB0B31C00)) ^ 0x58598E85 | (v89
                                                                                             + 1901576646
                                                                                             - ((2 * v89) & 0x18C)) ^ 0x7157C1C6;
  LODWORD(v69) = a52 ^ 0xE67BC567 ^ ((_DWORD)v69 - 428096153 - ((2 * (_DWORD)v69) & 0xCCF78ACE));
  *((_DWORD *)&STACK[0x8D0] + (97 * a46 + 1431856222) % 0x55Cu) = (_DWORD)v69
                                                                - 840245266
                                                                - ((2 * (_DWORD)v69) & 0x9BD5BFDC);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 + 8 * ((1731 * (a46 != 1623525345)) ^ v65)) - 4))(3352501396, 2705981954, 538835435, v83, 1606413307, 6945718, v80, (a46 + 1), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_18CBB5640@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  int v61;
  uint64_t v62;

  *(_DWORD *)(*a57 + 4 * (v59 + 127 * (v57 ^ 0x25A)) - 0x5C1335027F1EDB5BLL) = *(_DWORD *)(v58
                                                                                         + 4
                                                                                         * ((_DWORD)v59 * a1
                                                                                          - 122780726
                                                                                          - ((((v59 * a1 - 122780726) * (unint64_t)v60) >> 32) >> 10)
                                                                                          * v61));
  return ((uint64_t (*)(void))(*(_QWORD *)(v62 + 8 * (((4 * (v59 == 2126610677)) | (32 * (v59 == 2126610677))) ^ v57))
                            - 4))();
}

uint64_t sub_18CBB56C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,unsigned int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a67;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;

  v70 = ((a47 + 25) + 808719906 - (((a47 + 25) << (((v67 + 100) & 0xE7) + 58)) & 0x44)) ^ 0x30341622;
  v71 = *(&a67 + (((914 * v70) & 0xF73B8) + ((457 * v70) ^ 0x5FFFB9DCu) - 1610331548) % 0x708);
  v72 = ((v71 ^ 0x35) - ((2 * v71) & 0x84) + 1444787522) ^ *(_DWORD *)(v69
                                                                     + 4
                                                                     * ((1361 * ((v71 ^ 0x7D3FFF3E) + 2 * (v71 ^ 0xC1u))
                                                                       + 521385583)
                                                                      % 0x12E0));
  v73 = (-484640518 - (BYTE1(v72) ^ 0xAE | 0xE31CF8FA) + (BYTE1(v72) ^ 0xAE | 0x1CE30705)) ^ 0xCE33744;
  v74 = ((914 * (HIBYTE(v72) ^ 0x95)) & 0x2ADBE) + ((457 * (HIBYTE(v72) ^ 0x95)) ^ 0x3F5F56DF) - 1063066527;
  v75 = BYTE2(v72) ^ 0x5A;
  v76 = ((914 * ((((2 * v73) | 0x52F70EBA) - v73 - 695961437) ^ 0x397BB757)) & 0x798677C6)
      + ((457 * ((((2 * v73) | 0x52F70EBA) - v73 - 695961437) ^ 0x397BB757)) ^ 0x3CC33BE3)
      - 1019281571;
  v77 = (((2 * (v72 ^ 0x75197)) & 0xAA37A) - (v72 ^ 0x75197) - 453892030) ^ 0xE4F57936;
  v78 = ((914 * v77) & 0x6BFDE7BC) + ((457 * v77) ^ 0x75FEF3DE) - 1979496606;
  v79 = *(&a67 + v74 % 0x708) ^ 0x35;
  v80 = *(&a67 + (((914 * v75) & 0x36D9C) + ((457 * v75) ^ 0xDCBFB6CE) + 591561842) % 0x708) ^ 0x35;
  v81 = *(&a67 + v76 % 0x708);
  v82 = *(&a67 + v78 % 0x708);
  v83 = (((v79 - ((2 * v79) & 0x130)) << 16) + 1217921024) ^ 0x48980000;
  v84 = (((v80 - 2 * (v80 & 7)) << 8) + 735053568) ^ 0x2BD00700;
  v85 = (v84 + 1053780282 - ((2 * v84) & 0x7D9ED200)) ^ 0x3ECF693A | (v83 - 1084725707 - ((2 * v83) & 0x7EB00000)) ^ 0xBF586635;
  v86 = (v85 + 1360643066 - ((2 * v85) & 0xA23387F4)) ^ 0x5119C3FA | ((v81 ^ 0x35)
                                                                    - 1143076202
                                                                    - ((2 * (v81 ^ 0x35)) & 0x12C)) ^ 0xBBDE0A96;
  v87 = (((v86 + 8958960 - ((2 * v86) & 0x11764E)) << 8) + 472832) ^ 0x88BB2700;
  v88 = (v87 + 980256466 - ((2 * v87) & 0x74DB0C00)) ^ 0x3A6D86D2 | ((v82 ^ 0x35)
                                                                   + 172615390
                                                                   - ((2 * (v82 ^ 0x35)) & 0x1BC)) ^ 0xA49E6DE;
  *((_DWORD *)&STACK[0x8D0] + (97 * a47 + 2061230201) % 0x55C) = a57 ^ 0xBB42FC3F ^ (v88
                                                                                   - ((2 * v88) & 0xAF30B892)
                                                                                   - 677880759);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * ((1376 * (a47 == 332974566)) ^ v67)) - 4))(172615390, 3151891094, 1360643066, 1053780282, 479639, 3810326778, a47, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_18CBB5B50@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  uint64_t v62;

  *(_DWORD *)(*a57 + 4 * v59 - 0x5C1335023DC1E8DFLL) = *(_DWORD *)(v57
                                                                 + 4
                                                                 * ((_DWORD)v59 * v60
                                                                  + 700181614
                                                                  - ((((v59 * v60 + 700181614)
                                                                                   * (unint64_t)v61) >> 32) >> 10)
                                                                  * v58));
  return ((uint64_t (*)(void))(*(_QWORD *)(v62
                                        + 8
                                        * (int)(((v59 != 1852458449) * ((a1 + 2135284022) & 0x80BA21CF ^ 0x1D1)) ^ a1))
                            - 12))();
}

uint64_t sub_18CBB5BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,unsigned int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  int v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;

  v69 = ((a47 + 71) - 841877590 - (((v66 - 180) ^ 0x4D) & (2 * (a47 + 71)))) ^ 0xCDD1F7AA;
  v70 = (((914 * v69) & 0xFEEFA) + ((457 * v69) ^ 0x2B87F77D) - 730067773) % 0x708;
  v71 = *(_DWORD *)(v68
                  + 4
                  * ((1361
                    * (((2 * (*(&a66 + v70) ^ 0x40)) & 0x1F8)
                     + (*(&a66 + v70) ^ 0xBAEDEEBE))
                    + 892682160)
                   % 0x12E0));
  v72 = ((HIWORD(v71) & 0x6C ^ 0x99012129) + (HIWORD(v71) & 0x93) - 1) ^ 0x990121E8;
  v73 = (479798241 - (v71 ^ 0x22C8412C | 0x1C9923E1) + (v71 ^ 0x22C8412C | 0xE366DC1E)) ^ 0xC1AE9D0A;
  v74 = (((v71 >> 8) & 0xA2 ^ 0xDCE04881) + ((v71 >> 8) & 0x5D) - 1) ^ 0xDCE048B8;
  v75 = *(&a66
                         + (((914 * (HIBYTE(v71) ^ 0x46)) & 0x3EEFE)
                          + ((457 * (HIBYTE(v71) ^ 0x46)) ^ 0xED9DF77F)
                          + 308560833)
                         % 0x708);
  v76 = *(&a66 + (((914 * v73) & 0xFC7ECF1E) + ((457 * v73) ^ 0xFE3F678F) + 29545393) % 0x708);
  v77 = *(&a66 + (((914 * v74) & 0x72F8B776) + ((457 * v74) ^ 0x397C5BBB) - 964305019) % 0x708);
  v78 = *(&a66 + (((914 * v72) & 0x6ECDCFA6) + ((457 * v72) ^ 0x3766E7D3) - 929344659) % 0x708);
  v79 = ((((v78 ^ 0x35) + 3816188 - ((2 * (v78 ^ 0x35)) & 0x1C4)) << 8) - 6656) ^ 0x3A3AE200;
  v80 = (v79 + 1641384672 - ((2 * v79) & 0x43AB1400)) ^ 0x61D58AE0 | ((((((v75 ^ 0x35) - ((2 * v75) & 0x84)) << 16)
                                                                      - 532545536) ^ 0xE0420000)
                                                                    + 370762824
                                                                    - ((2
                                                                      * ((((v75 ^ 0x35) - ((2 * v75) & 0x84)) << 16)
                                                                       - 532545536)) & 0x2C320000)) ^ 0x16196448;
  v81 = (v80 - 539035008 - ((2 * v80) & 0xBFBDF500)) ^ 0xDFDEFA80 | ((v77 ^ 0x35)
                                                                   - 1975319372
                                                                   - ((2 * (v77 ^ 0x35)) & 0x168)) ^ 0x8A4304B4;
  v82 = (((v81 + 431569 - ((2 * v81) & 0xD2B9A)) << 8) - 1024) ^ 0x695CD00;
  v83 = (v82 + 1859739939 + (~(2 * v82) | 0x224D3DFF) + 1) ^ 0x6ED96123 | ((v76 ^ 0x35)
                                                                         - 1061370192
                                                                         - ((2 * (v76 ^ 0x35)) & 0x160)) ^ 0xC0BCC6B0;
  *((_DWORD *)&STACK[0x8D0] + (97 * a47 - 1683758361) % 0x55C) = a54 ^ 0x2514F8A9 ^ (v83
                                                                                   - ((2 * v83) & 0xF18C4906)
                                                                                   - 121232253);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 + 8 * ((29 * (a47 != 1168586936)) ^ v66)) - 8))(1859739939, 3755932288, 2319647924, 370762824, 3705686145, a47, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_18CBB6040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  int v64;
  int v65;
  unsigned int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  *(_DWORD *)(*a64 + 4 * v69 - 0x5C1335022A15CB6BLL) = *(_DWORD *)(v68
                                                                 + 4
                                                                 * ((_DWORD)v69 * v65
                                                                  + 113932459
                                                                  - ((((v69 * v65 + 113932459)
                                                                                   * (unint64_t)v66) >> 32) >> 10)
                                                                  * v67));
  return ((uint64_t (*)(void))(*(_QWORD *)(v70 + 8 * (((v69 == 1769946228) * (v64 - 223)) ^ v64)) - 12))();
}

uint64_t sub_18CBB60B0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  int v62;
  int v63;
  unint64_t v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  __int16 v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  int v76;
  uint64_t v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;

  v61 = ((a41 - 82) - 640464282 - ((2 * (a41 + 174)) & 0xCC)) ^ 0xD9D34A66;
  v62 = *(&a59 + (((914 * v61) & 0xD9CE6) + ((457 * v61) ^ 0x78FECE73) - 2029701683) % 0x708);
  v63 = *(_DWORD *)(v60 + 4 * ((1361 * (((2 * (v62 ^ 0x40)) & 0xF4) + (v62 ^ 0x75DAFF3Fu)) + 1861969566) % 0x12E0));
  HIDWORD(v64) = v63 ^ 0x8AB6;
  LODWORD(v64) = v63 ^ 0xB7AE0000;
  v65 = (v64 >> 16) - ((2 * (v64 >> 16)) & 0xF522EC88) - 91130300;
  v66 = ((16 * v65) & 0xED3E7FE0 ^ 0xA9166440) + ((8 * v65) ^ 0x22148DD7);
  v67 = (v66 - ((2 * v66 + 410605730) & 0x45EF2250) + 1865694587) ^ v65;
  v68 = (v67 ^ 0x27) + (v67 & 0xC1 ^ 0xC7C0) - ((v67 ^ 0x27) & 0xFFC1);
  v69 = ((v67 >> 23) & 0x15A ^ 0x52) + (HIBYTE(v67) ^ 0xE2F6994);
  v70 = (((2 * (((BYTE2(v67) ^ 0x49) + (HIWORD(v67) & 0xCD ^ 0x8C6CF084) - ((BYTE2(v67) ^ 0x49) & 0xCD)) ^ 0x8EE830C9)) | 0x127B090C)
       - (((BYTE2(v67) ^ 0x49) + (HIWORD(v67) & 0xCD ^ 0x8C6CF084) - ((BYTE2(v67) ^ 0x49) & 0xCD)) ^ 0x8EE830C9)
       + 1992457082) ^ 0x8BB944AC;
  v71 = (v69 - ((2 * v69 + 1671507750) & 0x5A200EA0) - 1629446429) ^ 0xAD100750;
  v72 = ((v68 & 0x40F5 ^ 0xC66F0030) + (v68 & 0x3F0A ^ 0x1000230B) - 1) ^ 0xD66F64F4;
  v73 = ((914 * v70) & 0x5AD6F3CA) + ((457 * v70) ^ 0x2D6B79E5) - 761872037;
  v74 = (((2 * (BYTE1(v67) ^ 4)) | 0x1B131354) - (BYTE1(v67) ^ 4) + 1651930710) & 0x1FFFFFFF ^ 0x1D898922;
  v75 = (457 * v74) ^ 0xFFF7FFE1;
  v76 = (914 * v74) & 0x7FEFFFC2;
  v77 = (((914 * v72) & 0x799BFFE) + ((457 * v72) ^ 0xFFCCDFFF) + 3496769) % 0x708;
  v78 = (v76 + v75 + 670559) % 0x708;
  v79 = *(&a59 + v73 % 0x708) ^ 0x35;
  v80 = *(&a59 + (((914 * v71) & 0xDF7BD3F6) + ((457 * v71) ^ 0x6FBDE9FB) - 1874717179) % 0x708) ^ 0x35;
  v81 = (((v80 - ((2 * v80) & 0x4A)) << 16) - 601554944) ^ 0xDC250000;
  v82 = (((v79 + (~(2 * v79) | 0xFFFE13)) << 8) + 1669789440) ^ 0x6386F600;
  v83 = (v81 + 2068773557 - ((2 * v81) & 0x769C0000)) ^ 0x7B4EFAB5 | (v82 + 2109369684 - ((2 * v82) & 0x4DA00)) ^ 0x7DBA6D54;
  v84 = *(&a59 + v78) ^ 0x35;
  v85 = (v83 - 1602716718 - ((2 * v83) & 0x40F0F7A4)) ^ 0xA0787BD2 | (v84 - 574143167 - ((2 * v84) & 0x82)) ^ 0xDDC74541;
  v86 = (((v85 - ((2 * v85) & 0x5D29B4)) << 8) - 1365976576) ^ 0xAE94DA00;
  v87 = *(&a59 + v77) ^ 0x35;
  v88 = (v86 - 1181128915 - ((2 * v86) & 0x7332CE00)) ^ 0xB999672D | (v87 + 535373732 - ((2 * v87) & 0x148)) ^ 0x1FE927A4;
  *((_DWORD *)&STACK[0x8D0] + (((a1 + 193) ^ 0x185u) * a41 + 1696379118) % 0x55C) = a48 ^ 0x5CD1F4ED ^ (v88 - ((2 * v88) & 0x6157F892) + 816577609);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * ((199 * (a41 == 1886466385)) ^ a1)) - 12))(v77, 3720824129, 2692250578, 2068773557, v73 / 0x708uLL, 2420250117, 3533095259, 1512050336, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_18CBB6630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  unsigned int v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  *(_DWORD *)(*a64 + 4 * v67 - 0x5C133501882B606BLL) = *(_DWORD *)(v68
                                                                 + 4
                                                                 * (v65
                                                                  + 132
                                                                  + 97 * (_DWORD)v67
                                                                  + 1564316931
                                                                  - ((((v65
                                                                                                  + 132
                                                                                                  + 97 * v67
                                                                                                  + 1564316931)
                                                                                   * (unint64_t)v64) >> 32) >> 10)
                                                                  * v66));
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * ((908 * (v67 == 1090823604)) ^ v65)) - 12))();
}

uint64_t sub_18CBB66A8@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, uint64_t a3@<X7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;

  v65 = ((a44 + 22) - 1101839811 - (((a44 + 22) << (a4 - 103)) & 0x7A)) ^ 0xBE53423D;
  v66 = (((914 * v65) & 0xEF8FA) + ((457 * v65) ^ 0xF67F7C7D) + 159680451) % 0x708;
  v67 = *(_DWORD *)(v64
                  + 4
                  * ((1361
                    * (((2 * (*(&a62 + v66) ^ 0x66666666)) & 0x16A)
                     + (*(&a62 + v66) ^ 0xBD77EDD1))
                    - 1250474674)
                   % 0x12E0)) ^ 0xB7AE8AB6;
  v68 = v67 - ((2 * v67 + 1468112052) & 0x944CF70A) - 169391649;
  v69 = ((BYTE1(v68) ^ 0x140A0A53) - ((2 * (BYTE1(v68) ^ 0x140A0A53)) & 0x40018) + 603423756) ^ 0x37FD8E48;
  v70 = ((914 * (HIBYTE(v68) ^ 0x40)) & 0x18FB6) + ((457 * (HIBYTE(v68) ^ 0x40)) ^ 0xFEFEC7DB) + 17003365;
  v71 = HIWORD(v68) & 0x77;
  v72 = ((BYTE2(v68) ^ 0x26) + (v71 ^ 0x551) - ((BYTE2(v68) ^ 0x26) & 0x77777777)) ^ 0x510;
  v73 = ((v68 ^ 0x82202D) - ((2 * (v68 ^ 0x82202D)) & 0x10441A8) + 1558148052) ^ 0x5C5D53D6;
  v74 = (457 * v73) ^ 0x67173B62;
  v75 = 914 * v73;
  v76 = *(&a62 + (((914 * v69) & 0xE3ABFFCE) + ((457 * v69) ^ 0xF1D5FFE7) + 237779801) % 0x708);
  v77 = *(&a62 + v70 % 0x708) ^ 0x35;
  v78 = *(&a62 + (((914 * v72) & 0xBED52) + ((457 * v72) ^ 0x2E75F6A9u) - 779336553) % 0x708);
  v79 = ((v75 & 0xCE2E76C4) + v74 - 1729429538) % 0x708;
  v80 = (((v77 - ((2 * v77) & 0x5E)) << 16) - 198246400) ^ 0xF42F0000;
  v81 = ((((v78 ^ 0x35) - ((2 * v78) & 0x180)) << 8) - 1624129536) ^ 0x9F31C000;
  v82 = (v81 - 1888522748 - ((2 * v81) & 0x1EDEDC00)) ^ 0x8F6F6E04 | (v80 - 2116520046 - ((2 * v80) & 0x3B00000)) ^ 0x81D87792;
  v83 = (v82 - 1425713834 - ((2 * v82) & 0x560AAAAC)) ^ 0xAB055556 | ((v76 ^ 0x35)
                                                                    + 1361851957
                                                                    - ((2 * (v76 ^ 0x35)) & 0x6A)) ^ 0x512C3635;
  v84 = *(&a62 + v79);
  v85 = (((v83 + 6548169 - ((2 * v83) & 0xC7D58A)) << 8) - 1024) ^ 0x63EAC500;
  v86 = (v85 - 1090744288 - ((2 * v85) & 0x7DF92000)) ^ 0xBEFC9020 | ((v84 ^ 0x35)
                                                                    + 2026043541
                                                                    - ((2 * (v84 ^ 0x35)) & 0x12A)) ^ 0x78C2F895;
  *((_DWORD *)&STACK[0x8D0] + (a44 * v62 - 1200114602) % 0x55Cu) = a57 ^ (v86 - ((2 * v86) & 0xCD102568) + 1720193716) ^ 0xF723962F;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 + 8 * ((1881 * (a44 == 1916327145)) ^ a4)) - 12))(6548169, 2869253462, 1361851957, v71, (a44 + 1), a1, a2, a3, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_18CBB6B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  unsigned int v64;
  int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;

  *(_DWORD *)(*a64 + 4 * v68 - 0x5C1335014B233957) = *(_DWORD *)(v66
                                                                 + 4
                                                                 * (97 * (_DWORD)v68
                                                                  + 625465104
                                                                  - ((((97 * v68 + 625465104)
                                                                                   * (unint64_t)v64) >> 32) >> 10)
                                                                  * v65));
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * ((824 * (v68 == 834834415)) ^ v67))
                            - (v67 + 216)
                            + 1533))();
}

uint64_t sub_18CBB6BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,unsigned int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;

  v70 = (((v67 + 46) ^ 0xC52EC4FC) + (a49 + 14) - ((2 * (a49 + 14)) & 0x196)) ^ 0xC52EC2CB;
  v71 = *(&a66 + (((914 * v70) & 0xC74F6) + ((457 * v70) ^ 0xAFFE3A7B) + 1342556613) % 0x708);
  v72 = ((v71 ^ 0x1B) - ((2 * (v71 ^ 0x1B)) & 0x170) - 695860552) ^ *(_DWORD *)(v69
                                                                              + 4
                                                                              * ((1361
                                                                                * (((2 * (v71 ^ 0x31)) & 0xFFFFFFE3)
                                                                                 + (v71 ^ 0x75D2FAC6))
                                                                                - 1720673467)
                                                                               % 0x12E0));
  v73 = (((2 * (v72 ^ 0x2F)) & 0x152) - (v72 ^ 0x2F) + 1568273238) ^ 0x5FD9F3F6;
  v74 = (v73 - ((2 * v73) & 0x4003D4C) + 726564518) ^ 0x29EE7EB6;
  v75 = (((v72 >> 8) & 0x64 ^ 0x241) + ((v72 >> 8) & 0x9B) - 1) ^ 0x2EE;
  v76 = *(&a66
                         + (((914 * (BYTE2(v72) ^ 0xB1)) & 0x1CDFE)
                          + ((457 * (BYTE2(v72) ^ 0xB1)) ^ 0x5FEEE6FFu)
                          - 1609345983)
                         % 0x708) ^ 0x35;
  v77 = *(&a66
                         + (((914 * (HIBYTE(v72) ^ 0xEF)) & 0x1FD7E)
                          + ((457 * (HIBYTE(v72) ^ 0xEF)) ^ 0xDF52FEBF)
                          + 548355201)
                         % 0x708) ^ 0x35;
  v78 = (((v77 - ((2 * v77) & 0xA6)) << 16) + 1985150976) ^ 0x76530000;
  v79 = (((v76 + 407983 - ((2 * v76) & 0x16E)) << 8) + 591872) ^ 0x642B700;
  v80 = (v78 - 1193866332 - ((2 * v78) & 0x71AE0000)) ^ 0xB8D70BA4 | (v79 - 494411640 - ((2 * v79) & 0x450FC000)) ^ 0xE287E088;
  v81 = *(&a66 + (((914 * v75) & 0xB2E16) + ((457 * v75) ^ 0x2FBD970Bu) - 800807883) % 0x708) ^ 0x35;
  v82 = a49 * v66 + 1229281870;
  v83 = (((((v80 + 1219128196 - ((2 * v80) & 0x1154D708)) ^ 0x48AA6B84 | (v81 - 409494593 - ((2 * v81) & 0xFFFFFF7F)) ^ 0xE7979BBF)
         - ((2
           * ((v80 + 1219128196 - ((2 * v80) & 0x1154D708)) ^ 0x48AA6B84 | (v81 - 409494593 - ((2 * v81) & 0xFFFFFF7F)) ^ 0xE7979BBF)) & 0xF61034)) << 8)
       - 83355136) ^ 0xFB081A00;
  v84 = *(&a66 + (((914 * v74) & 0xEEFBEEF4) + ((457 * v74) ^ 0xF77DF77A) + 142885830) % 0x708) ^ 0x35;
  v85 = (v83 + 1326814778 - ((2 * v83) & 0x9E2B2C00)) ^ 0x4F15963A | (v84 - 1737628850 - ((2 * v84) & 0x9C)) ^ 0x986DE34E;
  *((_DWORD *)&STACK[0x8D0] + v82 % 0x55C) = a56 ^ 0x9F9BDBE8 ^ (v85 - ((2 * v85) & 0x718A4D6C) + 952444598);
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * ((318 * (a49 == 474385393)) ^ v67)) - 12))(1326814778, v82 / 0x55CuLL, 3885472703, 1219128196, 407983, a49, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_18CBB7034@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  uint64_t v57;
  unsigned int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;

  *(_DWORD *)(*a57 + 4 * v60 - 0x5C133501272E81B3) = *(_DWORD *)(v57
                                                                 + 4
                                                                 * (97 * (_DWORD)v60
                                                                  - 1925800615
                                                                  - ((((97 * v60 - 1925800615)
                                                                                   * (unint64_t)v58) >> 32) >> 10)
                                                                  * v59));
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * (((v60 == 684024070) * (a1 - 1488)) ^ a1)) - 8))();
}

uint64_t sub_18CBB70A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned int a49,uint64_t a50,uint64_t a51,int a52,int a53,int a54,int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  char a68;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;

  v72 = ((a49 - 94) - 24552068 - (((a49 + 162) << (((v68 - 6) & 0xD5) - 20)) & 0xF8)) ^ 0xFE895D7C;
  v73 = (((914 * v72) & 0xAF3F6) + ((457 * v72) ^ 0x6FF579FB) - 1878095291) % 0x708;
  v74 = *(_DWORD *)(v71
                  + 4
                  * ((1361
                    * (2 * ((*(&a68 + v73) ^ 0x17) & 0x7F)
                     + (*(&a68 + v73) ^ 0x74FFDB68u))
                    - 68142032)
                   % 0x12E0));
  v75 = ((v74 ^ 0x2F) - ((2 * (v74 ^ 0x2F)) & 0x74) + 1338) ^ 0x58F;
  v76 = ((v74 >> 8) & 0xC5 ^ 0x4328A41) + ((v74 >> 8) & 0x3A ^ 0x80091011) - 1;
  v77 = (1084068179 - (BYTE2(v74) ^ 0xC9 | 0x409D9153) + (BYTE2(v74) ^ 0xC9 | 0xBF626EAC)) ^ 0xBF2A6EE6;
  v78 = HIBYTE(v74) ^ 0x44;
  v79 = (457 * v78) ^ 0xBBD1F75B;
  v80 = (((2 * v77) & 0x51F48868) - v77 + 386251723) ^ 0x174DBBEB;
  v81 = (457 * v80) ^ 0x6DE6EFEFu;
  v82 = *(&a68
                         + (((914 * v78) & 0x3EEB6)
                                        + v79
                                        + 1144013797
                                        - 1800
                                        * ((2386093
                                          * (unint64_t)(((914 * v78) & 0x3EEB6) + v79 + 1144013797)) >> 32))) ^ 0x35;
  v83 = *(&a68 + (((914 * v75) & 0xCF87FB5A) + ((457 * v75) ^ 0xE7C3FDAD) + 406732179) % 0x708);
  v84 = *(&a68 + (((914 * v80) & 0xDBCDDFDE) + v81 - 1843705007) % 0x708) ^ 0x35;
  v85 = *(&a68
                         + (((914 * (v76 ^ 0x843B9AD5)) & 0xFEFBE)
                          + ((457 * (v76 ^ 0x843B9AD5)) ^ 0xEBEFF7DF)
                          + 336741217)
                         % 0x708);
  v86 = (((v82 - ((2 * v82) & 0xAAAAAAAA)) << 16) - 749404160) ^ 0xD3550000;
  v87 = (((v84 - ((2 * v84) & 0xD8)) << 8) - 1641190400) ^ 0x9E2D6C00;
  v88 = (v87 - 112430904 - ((2 * v87) & 0x7298E000)) ^ 0xF94C70C8 | (v86 + 743852263 - ((2 * v86) & 0x58AC0000)) ^ 0x2C5648E7;
  v89 = (v88 - 1911980161 - ((2 * v88) & 0x1C12FEFE)) ^ 0x8E097F7F | ((v85 ^ 0x35)
                                                                    + 1108988491
                                                                    - ((2 * (v85 ^ 0x35)) & 0x96)) ^ 0x4219D24B;
  v90 = (((v89 - ((2 * v89) & 0xEBA4FE)) << 8) + 1976729344) ^ 0x75D27F00;
  v91 = (v90 - 1076322433 - ((2 * v90) & 0x7FB13E00)) ^ 0xBFD89F7F | ((v83 ^ 0x35) + 1747926527 - 2 * (v83 ^ 0x35)) ^ 0x682F3DFF;
  v92 = (v91 - 473245450 - ((2 * v91) & 0xC795B1EC)) ^ a52;
  *((_DWORD *)&STACK[0x8D0] + (a49 * v69 - 645055134) % 0x55C) = a55 ^ a63 ^ 0xC6E44C21 ^ ((v92 ^ 0xE3CAD8F6)
                                                                                         + 1199033214
                                                                                         - 2
                                                                                         * ((v92 ^ 0xE3CAD8F6) & 0x4777CB7F ^ v92 & 1));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 + 8 * ((1522 * (a49 != 1733492829)) ^ v68)) - 12))(743852263, v79, 2451262289, v81, 3958372319, a49, 1084068179, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_18CBB7554@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  unsigned int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  *(_DWORD *)(*a57 + 4 * v60 - 0x5C1335017F6F2E3BLL) = *(_DWORD *)(v59
                                                                 + 4
                                                                 * (97 * (_DWORD)v60
                                                                  + 823394167
                                                                  - ((((97 * v60 + 823394167)
                                                                                   * (unint64_t)v57) >> 32) >> 10)
                                                                  * v58));
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * (((16 * (v60 != 1054183976)) | ((v60 != 1054183976) << 6)) ^ a1))
                            - 12))();
}

uint64_t sub_18CBB75C4@<X0>(uint64_t a1@<X6>, uint64_t a2@<X7>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,unsigned int a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,int a52,int a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;

  v66 = ((a45 - 38) + 1151091266 - ((2 * (a45 + 218)) & 0x84)) ^ 0x449C4242;
  v67 = (((914 * v66) & 0xBFBB4) + ((v66 * (((a3 - 2035992864) & 0x795ACBDE) - 523)) ^ 0xF57DFDDA) + 176555622) % 0x708;
  v68 = *(_DWORD *)(v65
                  + 4
                  * ((1361
                    * ((*(&a63 + v67) ^ 0x97E6FD1D) + 2 * (*(&a63 + v67) ^ 0xE2))
                    + 1827907409)
                   % 0x12E0));
  v69 = ((v68 ^ 0x7EEAE864)
       + (v68 & 0x38 ^ 0x1001018)
       - ((v68 ^ 0x7EEAE864) & 0x5A006838)) ^ 0x8DEAB255;
  v70 = ((HIWORD(v68) & 0xCB ^ 0xB79F320A) + (HIWORD(v68) & 0x34 ^ 0x31) - 1) ^ 0x339F2ECA;
  v71 = v69 - ((2 * v69) & 0x50006720) - 1385237616;
  v72 = ((2 * v70) | 0xE086B2D8) - v70;
  v73 = (((2 * (BYTE1(v68) ^ 0x97500FB)) | 0xC2946B6C) - (BYTE1(v68) ^ 0x97500FB) + 515230282) ^ 0xE83F35B6;
  v74 = (((914 * (v71 ^ 0x56ED19B)) & 0xBB7EBDFE) + ((457 * (v71 ^ 0x56ED19B)) ^ 0xDDBF5EFF) + 574807105) % 0x708;
  v75 = *(&a63
                         + (((914 * (HIBYTE(v68) ^ 0xEA)) & 0x1FFEE)
                          + ((457 * (HIBYTE(v68) ^ 0xEA)) ^ 0xDEA2FFF7)
                          + 559889225)
                         % 0x708);
  v76 = *(&a63
                         + (((914 * ((v72 + 264021652) ^ 0x74434544)) & 0xCFFDBE9E)
                          + ((457 * ((v72 + 264021652) ^ 0x74434544)) ^ 0xE7FEDF4F)
                          + 402873329)
                         % 0x708) ^ 0x35;
  v77 = ((((v75 ^ 0x35) - ((2 * (v75 ^ 0x35)) & 0x4C)) << 16) + 1042677760) ^ 0x3E260000;
  v78 = a45 * v63 + 1975891610;
  v79 = (((v76 - ((2 * v76) & 0x168)) << 8) + 1381872640) ^ 0x525DB400;
  v80 = (v77 + 12511822 - ((2 * v77) & 0x17C0000)) ^ 0xBEEA4E | (v79 + 340940858 - ((2 * v79) & 0x28A4B000)) ^ 0x1452583A;
  v81 = *(&a63 + (((914 * v73) & 0x53373BFA) + ((457 * v73) ^ 0x299B9DFD) - 697918141) % 0x708) ^ 0x35;
  v82 = (v80 - 386125511 - ((2 * v80) & 0xD1F86272)) ^ 0xE8FC3139 | (v81 + 1729089414 - ((2 * v81) & 0x10C)) ^ 0x670FCF86;
  v83 = *(&a63 + v74);
  v84 = (((v82 - ((2 * v82) & 0x3AF5B4)) << 8) - 1652893184) ^ 0x9D7ADA00;
  v85 = (v84 + 623224051 - ((2 * v84) & 0x4A4B4800)) ^ 0x2525A4F3 | ((v83 ^ 0x35)
                                                                   - 556004128
                                                                   - ((2 * (v83 ^ 0x35)) & 0x1C0)) ^ 0xDEDC0CE0;
  *((_DWORD *)&STACK[0x8D0] + v78 % 0x55C) = a50 ^ a53 ^ a52 ^ 0x1823A641 ^ (v85 - ((2 * v85) & 0x7FBBE79A) - 1075973171);
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 + 8 * ((1071 * (a45 == 2016418853)) ^ a3)) - 12))(623224051, v78 / 0x55CuLL, 3908841785, 1729089414, 3489513118, a45, a1, a2, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_18CBB7A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  uint64_t v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;

  *(_DWORD *)(*a64 + 4 * ((((v65 - 963) | 0x32C) ^ 0x3FFFFFFF97C7D760) + v68) - 0x5C13350084191667) = *(_DWORD *)(v64 + 4 * (97 * (_DWORD)v68 - 2102084471 - ((((97 * v68 - 2102084471) * (unint64_t)v66) >> 32) >> 10) * v67));
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * ((45 * (v68 != 1748513750)) ^ v65)) - 4))();
}

uint64_t sub_18CBB7B20@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,unsigned int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  int v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v62 = ((a1 ^ 0xA1A5E22E) + (a43 - 30) - ((2 * (a43 + 226)) & 0x26)) ^ 0xA1A5E113;
  v63 = (((914 * v62) & 0x73B62) + ((457 * v62) ^ 0xB7839DB1) + 1216374415) % 0x708;
  v64 = *(_DWORD *)(v61
                  + 4
                  * ((1361
                    * (((2 * (*(&a59 + v63) ^ 0x40)) & 0x1F0)
                     + (*(&a59 + v63) ^ 0xCF6FFDBF))
                    + 768497626)
                   % 0x12E0)) ^ 0xB7AE8AB6;
  v65 = (2 * v64 + 670994672) & 0x506FB300;
  v64 -= 63495688;
  v66 = v64;
  v67 = v64 - v65;
  v68 = (v66 ^ 0xB7) - ((2 * (v66 ^ 0xB7)) & 0xAAAAAAAA);
  v69 = ((v67 >> 8) & 0xE3 ^ 0x4C212360) + ((v67 >> 8) & 0x1C ^ 0x9210180D) - 1;
  v70 = ((v69 & 0x487 ^ 0x712A404) + (v69 & 0x378 ^ 0x8001271) - 1) ^ 0xF12B566;
  v71 = BYTE2(v67) ^ 0xAF;
  v72 = (457 * v71) ^ 0x496FDFFFu;
  v73 = ((914 * ((v68 + 4437) ^ 0x1131)) & 0x73EE3FEE) + ((457 * ((v68 + 4437) ^ 0x1131)) ^ 0x39F71FF7) - 972350647;
  v74 = (457 * v70) ^ 0x736FF1EFu;
  v75 = v73 / 0x708uLL;
  v76 = *(&a59 + (((914 * v71) & 0xFFFFBFFF) + v72 - 1231922367) % 0x708);
  v77 = *(&a59
                         + (((914 * (HIBYTE(v67) ^ 0xD1)) & 0xFE8E)
                          + ((457 * (HIBYTE(v67) ^ 0xD1)) ^ 0xC7F67F47)
                          + 940293113)
                         % 0x708) ^ 0x35;
  v78 = (((v77 - ((2 * v77) & 0x40)) << 16) + 1797259264) ^ 0x6B200000;
  v79 = ((((v76 ^ 0x35) + 8809915 - ((2 * (v76 ^ 0x35)) & 0x140)) << 8) - 6912) ^ 0x866DA000;
  v80 = (v79 + 1498213616 - ((2 * v79) & 0x3299D800)) ^ 0x594CECF0 | (v78 + 1520258136 + (~(2 * v78) | 0xCAC5FFFF) + 1) ^ 0x5A9D4C58;
  v81 = *(&a59 + (((914 * v70) & 0x5FE3DE) + v74 - 1936570031) % 0x708) ^ 0x35;
  v82 = (v80 - 1875812358 - ((2 * v80) & 0x2062BFF4)) ^ 0x90315FFA | (v81 - 338455566 - ((2 * v81) & 0x1E4)) ^ 0xEBD393F2;
  v83 = (((v82 - ((2 * v82) & 0xC1F5E8)) << 8) + 1627059200) ^ 0x60FAF400;
  v84 = *(&a59 + v73 % 0x708) ^ 0x35;
  v85 = (v83 - 617755273 - ((2 * v83) & 0xB65B9A00)) ^ 0xDB2DCD77 | (v84 + 41107854 - ((2 * v84) & 0x11C)) ^ 0x273418E;
  v86 = (a43 * v59 - 40533598) % 0x55C;
  v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * ((127 * (a43 != 841700381)) ^ a1)) - 8);
  *((_DWORD *)&STACK[0x8D0] + v86) = a51 ^ 0xCE5C7A17 ^ (v85 - ((2 * v85) & 0xFBB4ADDC) + 2111461102);
  return v87(v86, 2419154938, v74, v75, 940293113, v72, 6284254, a43, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_18CBB7F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  unsigned int v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  *(_DWORD *)(*a64 + 4 * v68 - 0x5C13350195072ADBLL) = *(_DWORD *)(v67
                                                                 + 4
                                                                 * (97 * (_DWORD)v68
                                                                  + 627788111
                                                                  - ((((97 * v68 + 627788111)
                                                                                   * (unint64_t)v64) >> 32) >> 10)
                                                                  * v66));
  return ((uint64_t (*)(void))(*(_QWORD *)(v69
                                        + 8 * (v65 | (2 * ((((v65 - 423) | 0x18Cu) ^ 0x19FLL) + v68 != 1144756561))))
                            - 4))();
}

uint64_t sub_18CBB8018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  char a66;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  uint64_t v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  uint64_t v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;

  v70 = ((a51 + 18) + 1006071527 - (((v66 ^ 0xF9) + 103) & (2 * (a51 + 18)))) ^ 0x3BF76EE7;
  v71 = (((914 * v70) & 0xF7F76) + ((457 * v70) ^ 0xEB77BFBB) + 344736901) % 0x708;
  v72 = *(_DWORD *)(v69
                  + 4
                  * ((1361
                    * (((2 * (*(&a66 + v71) ^ 0xE)) & 0x17C)
                     + (*(&a66 + v71) ^ 0xBF1EB3B1))
                    - 303795608)
                   % 0x12E0));
  v73 = (-1194579236 - (BYTE1(v72) ^ 0x62242027 | 0xB8CC2ADC) + (BYTE1(v72) ^ 0x62242027 | 0x4733D523)) ^ 0x2517F50B;
  v74 = (v72 ^ 0x29 | 0x67DFF1A2) - (v72 ^ 0x29 | 0x98200E5D) - 1742729635;
  v75 = HIBYTE(v72) ^ 0xC8;
  v76 = (914 * v75) & 0xC8EC;
  v77 = (BYTE2(v72) ^ 0xBC | 0xFE516D61) - (BYTE2(v72) ^ 0xBC | 0x1AE929E) + 28218014;
  v78 = ((v77 & 0x8451417D ^ 0x8421003C) + (v77 & 0x7A002E82 ^ 0x58040601) - 1) ^ 0x22746B60;
  v79 = ((v74 & 0x14733A0 ^ 0x80632721) + (v74 & 0x6698C05F) - 1) ^ 0xE7BCD6F9;
  v80 = ((914 * v79) & 0x93FEFCDE) + ((457 * v79) ^ 0xC9FF7E6F) + 906149073;
  v81 = *(&a66 + (v76 + ((457 * v75) ^ 0x7FFE6476) - 2147232054) % 0x708) ^ 0x35;
  v82 = *(&a66 + (((914 * v78) & 0xBFEFEAFA) + ((457 * v78) ^ 0xDFF7F57D) + 537544131) % 0x708) ^ 0x35;
  v83 = (((v81 - ((2 * v81) & 0xF4)) << 16) - 2122711040) ^ 0x817A0000;
  v84 = (((v82 - ((2 * v82) & 0x4C)) << 8) - 1757600256) ^ 0x973D2600;
  v85 = (v84 + 2057382854 - ((2 * v84) & 0x75425600)) ^ 0x7AA12BC6 | (v83 - 2141503146 - ((2 * v83) & 0xB60000)) ^ 0x805B4156;
  v86 = (a51 * v67 + 778232274) % 0x55Cu;
  v87 = *(&a66 + (((914 * v73) & 0x9AFE7DEA) + ((457 * v73) ^ 0xCD7F3EF5) + 847445067) % 0x708);
  v88 = *(&a66 + v80 % 0x708);
  v89 = (v85 + 1698606842 - ((2 * v85) & 0xCA7D5DF4)) ^ 0x653EAEFA | ((v87 ^ 0x35)
                                                                    - 368392541
                                                                    - ((2 * (v87 ^ 0x35)) & 0x146)) ^ 0xEA0AC6A3;
  v90 = (((v89 + 14232773 - ((2 * v89) & 0xB277FE)) << 8) + 997888) ^ 0xD93BFF00;
  v91 = (v90 - 1255311497 - ((2 * v90) & 0x6A5AEE00)) ^ 0xB52D7777 | ((v88 ^ 0x35)
                                                                    + 1272954585
                                                                    - ((2 * (v88 ^ 0x35)) & 0x1B2)) ^ 0x4BDFBED9;
  *((_DWORD *)&STACK[0x8D0] + v86) = a63 ^ 0x1A722258 ^ (v91 - ((2 * v91) & 0x71CB4B40) - 1192909408);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * ((39 * (a51 != 744703469)) ^ v66)) - 4))(3039655799, v86, 3926574755, 1698606842, 3220171514, v76, 2216755260, (a51 + 1), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_18CBB84DC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  uint64_t v57;
  int v58;
  unsigned int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;

  *(_DWORD *)(*a57 + 4 * v61 - 0x5C1335015CD0BA9BLL) = *(_DWORD *)(v57
                                                                 + 4
                                                                 * (97 * (_DWORD)v61
                                                                  + 2023324511
                                                                  - ((((97 * v61 + 2023324511)
                                                                                   * (unint64_t)v59) >> 32) >> 10)
                                                                  * v60));
  return ((uint64_t (*)(void))(*(_QWORD *)(v62 + 8 * (((v61 != 908979520) * v58) ^ a1)) - 4))();
}

uint64_t sub_18CBB8548@<X0>(uint64_t a1@<X6>, uint64_t a2@<X7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  int v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;

  v63 = ((a46 - 124) - 636681204 - (((a46 + 132) & 0xD ^ a46 & 1) << ((a3 + 50) ^ 0x98))) ^ 0xDA0D040C;
  v64 = (((914 * v63) & 0x33BFFFC) + ((457 * v63) ^ 0x419DFFFE) - 1100610494) % 0x708;
  v65 = *(_DWORD *)(v62
                  + 4
                  * ((1361
                    * (((2 * (*(&a60 + v64) ^ 0x60)) & 0xFFFFFFDF)
                     + (*(&a60 + v64) ^ 0xADCFFD8F))
                    - 242656129)
                   % 0x12E0));
  v66 = ((BYTE2(v65) ^ 0xFB) - ((2 * (BYTE2(v65) ^ 0xFB)) & 0x77777777) + 527185851) ^ 0x7BEC558E;
  v67 = (((2 * v66) | 0xA8B626AE) - v66 + 732228777) ^ 0xB0DB7157;
  v68 = ((v65 ^ 0x7D) + (v65 & 0x5B ^ 0x502) - ((v65 ^ 0x7D) & 0x5B)) ^ 0x58A;
  v69 = ((914 * v68) & 0x1DBCEC) + ((457 * v68) ^ 0xAA6EDE76) + 1435720906;
  v70 = *(&a60
                         + (((914 * (HIBYTE(v65) ^ 0xD3)) & 0x21F9C)
                          + ((457 * (HIBYTE(v65) ^ 0xD3)) ^ 0xFFFF0FCE)
                          + 207730)
                         % 0x708) ^ 0x35;
  v71 = *(&a60 + (((914 * v67) & 0xFFEFFDEE) + ((457 * v67) ^ 0x7FF7FEF7) - 2146812855) % 0x708) ^ 0x35;
  v72 = (((v70 - ((2 * v70) & 0x16)) << 16) + 2047541248) ^ 0x7A0B0000;
  v73 = (((v71 - 2 * (v71 & 7)) << 8) - 321648896) ^ 0xECD40700;
  v74 = (v73 - 1931239961 - ((2 * v73) & 0x19C73A00)) ^ 0x8CE39DE7 | (v72 - 794575086 - ((2 * v72) & 0x21460000)) ^ 0xD0A3BF12;
  v75 = *(&a60
                         + (((914 * (BYTE1(v65) ^ 0xE7)) & 0x3FE54)
                          + ((457 * (BYTE1(v65) ^ 0xE7)) ^ 0xF6CBFF2A)
                          + 154549270)
                         % 0x708);
  v76 = *(&a60 + v69 % 0x708);
  v77 = (v74 - 1578985395 - ((2 * v74) & 0x43C5309A)) ^ 0xA1E2984D | ((v75 ^ 0x35)
                                                                    + 1920741411
                                                                    - ((2 * (v75 ^ 0x35)) & 0x46)) ^ 0x727C3023;
  v78 = (((v77 - ((2 * v77) & 0x7A35C8)) << 8) - 1122311168) ^ 0xBD1AE400;
  v79 = (v78 + 789470900 - ((2 * v78) & 0x5E1CBC00)) ^ 0x2F0E5EB4 | ((v76 ^ 0x35)
                                                                   + 713512248
                                                                   - ((2 * (v76 ^ 0x35)) & 0x70)) ^ 0x2A875538;
  *((_DWORD *)&STACK[0x8D0] + (a46 * v60 + 1249031940) % 0x55Cu) = a52 ^ (v79 - ((2 * v79) & 0x445137D6) - 1574396949) ^ 0x9FD83BD3;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 + 8 * ((254 * (a46 == 961239931)) ^ a3)) - 4))(713512248, 1920741411, 53, 3500392210, 2363727335, (a46 + 1), a1, a2, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_18CBB8988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  int v64;
  unsigned int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  *(_DWORD *)(*a64 + 4 * (v67 + ((v64 + 2079757410) & 0x84096FD7)) - 0x5C1335020042EE4BLL) = *(_DWORD *)(v68 + 4 * (97 * (_DWORD)v67 - 49632282 - ((((97 * v67 - 49632282) * (unint64_t)v65) >> 32) >> 10) * v66));
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * ((1098 * (v67 == 1594520409)) ^ v64)) - 4))();
}

uint64_t sub_18CBB8A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,unsigned int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unint64_t v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  int v85;
  int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;

  v70 = ((a52 + 123) - 1745541839 - ((2 * (a52 + 123)) & 0x62)) ^ 0x97F52531;
  v71 = (((914 * v70) & 0x14BBBA) + (v66 ^ 0xFFDA580E ^ (457 * v70)) + 2729571) % 0x708;
  v72 = *(_DWORD *)(v69
                  + 4
                  * ((1361
                    * (((2 * (*(&a66 + v71) ^ 0x62)) & 0x1CC)
                     + (*(&a66 + v71) ^ 0xFF1FFF8C))
                    - 1493964177)
                   % 0x12E0));
  HIDWORD(v73) = v72 ^ 0x7AE8AB6;
  LODWORD(v73) = v72 ^ 0xB0000000;
  v74 = (v73 >> 27) - ((2 * (v73 >> 27)) & 0x2C81C10) - 2124149240;
  v75 = ((BYTE1(v74) ^ 0x10591E81) - ((2 * (BYTE1(v74) ^ 0x10591E81)) & 0x8210BA) + 1313311069) ^ 0x7E07972C;
  v76 = (((2 * (BYTE2(v74) ^ 0x47D18C9F)) | 0xE1EE1ABE) - (BYTE2(v74) ^ 0x47D18C9F) - 1895239007) ^ 0x3726815B;
  v77 = ((v73 >> 27) - ((2 * (v73 >> 27)) & 0x10) + 8) ^ 0x818542F6;
  v78 = ((2 * v77) & 0x30281A6) - v77 - 1367571924;
  v79 = (v75 - ((2 * v75) & 0x4072337A) + 981031357) ^ 0x1A6059B5;
  LOBYTE(v77) = (2 * ((v73 >> 27) - ((2 * (v73 >> 27)) & 0x10) + 8)) ^ 0x10;
  v80 = ((_BYTE)v77
       - 2 * (v77 & 0x7E ^ (2 * ((v73 >> 27) - ((2 * (v73 >> 27)) & 0x10) + 8)) & 0xA)
       + 116) & 0x80;
  v81 = v80 ^ 0xBD5D9DEE;
  v82 = (v78 ^ 0x2FF9C12C) + 2 * v80;
  v83 = v81 + 1117938194;
  v84 = (457 * v79) ^ 0xD75F46AF;
  v85 = *(&a66
                         + (((914 * (HIBYTE(v74) ^ 0xE6)) & 0x1F7FC)
                          + ((457 * (HIBYTE(v74) ^ 0xE6)) ^ 0x63FEFBFE)
                          - 1677508798)
                         % 0x708u) ^ 0x35;
  v86 = *(&a66 + (((914 * v76) & 0x737F778E) + ((457 * v76) ^ 0xB9BFBBC7) + 1178763129) % 0x708) ^ 0x35;
  v87 = (((v85 - ((2 * v85) & 0xCCCCCCCC)) << 16) + 1097203712) ^ 0x41660000;
  v88 = (((v86 + 1648088 - ((2 * v86) & 0x19A)) << 8) - 2816) ^ 0x1925CD00;
  v89 = (v88 - 365243164 - ((2 * v88) & 0x5475A800)) ^ 0xEA3AD4E4 | (v87 + 1793660153 - ((2 * v87) & 0x55D20000)) ^ 0x6AE914F9;
  v90 = *(&a66 + (((914 * v79) & 0xAEBE8D5E) + v84 + 681768081) % 0x708) ^ 0x35;
  v91 = *(&a66
                         + (457 * (((2 * (v82 + v83)) & 0xFBFFBFBE) + ((v82 + v83) ^ 0x7DFFDFDF)) + 305748713) % 0x708);
  v92 = (v89 - 493886803 - ((2 * v89) & 0x451FC55A)) ^ 0xE28FE2AD | (v90 + 1461435148 - ((2 * v90) & 0x18)) ^ 0x571BBB0C;
  v93 = (((v92 - ((2 * v92) & 0x801BA0)) << 8) - 1072836608) ^ 0xC00DD000;
  v94 = (v93 + 1587916908 - ((2 * v93) & 0xBD4B6000)) ^ 0x5EA5B06C | ((v91 ^ 0x35)
                                                                    + 662840948
                                                                    - ((2 * (v91 ^ 0x35)) & 0xE8)) ^ 0x27822674;
  *((_DWORD *)&STACK[0x8D0] + (a52 * v67 + 1877949339) % 0x55C) = a59 ^ (v94 - ((2 * v94) & 0x5828B634) + 739531546) ^ 0x27778039;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * ((722 * (a52 == 1264702340)) ^ v66)) - 4))(662840948, 1461435148, 1677655038, v84, 4227841982, a52, 46668816, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_18CBB8F0C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  unsigned int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  *(_DWORD *)(*a57 + 4 * v60 - 0x5C1335011AAA8817) = *(_DWORD *)(v59
                                                                 + 4
                                                                 * (97 * (_DWORD)v60
                                                                  - 1129055648
                                                                  - ((((97 * v60 - 1129055648)
                                                                                   * (unint64_t)v57) >> 32) >> 10)
                                                                  * v58));
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * (((16 * (v60 != 631532191)) | (32 * (v60 != 631532191))) ^ a1))
                            - 12))();
}

uint64_t sub_18CBB8F7C@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,unsigned int a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  int v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;

  v64 = ((a47 - 12) - 760792028 - (((a47 + 244) << (a2 - 24)) & 0x48)) ^ 0xD2A73C24;
  v65 = *(&a61 + (((914 * v64) & 0x15DF3C) + ((457 * v64) ^ 0x795AEF9E) - 2035739486) % 0x708);
  v66 = (v65 ^ 0x35) - ((2 * (v65 ^ 0x35)) & 0x16);
  v67 = (*(_DWORD *)(v63 + 4
                         * ((1361 * (((2 * (v65 ^ 0x85)) & 0xFFFFFF3F) + (v65 ^ 0x77FEEE3A)) + 235303281) % 0x12E0)) ^ 0xB7AE8AB6)
      + ((((v66 - 32976373) ^ 0x1B6EC3A8) + 1) ^ 0x692EFABF)
      + ((2 * (((v66 - 32976373) ^ 0x1B6EC3A8) + 1)) & 0xD25DF57E)
      - 1764686527;
  v68 = v67 - ((2 * v67) & 0x93FB12FC) - 906131074;
  v69 = (((2 * (v68 ^ 0x62)) & 0xFFFFFFCF) - (v68 ^ 0x62) + 694198040) ^ 0x8C3087FD;
  v70 = ((BYTE1(v68) ^ 0x87) - ((2 * (BYTE1(v68) ^ 0x87)) & 0x134) - 876240486) ^ 0xC8C5A39E;
  v71 = ((BYTE2(v68) ^ 0x3B) - 1255536335 - ((2 * (BYTE2(v68) ^ 0x3B)) & 0x62)) ^ 0xB52A09F6;
  v72 = (v69 - ((2 * v69) & 0x4A00297A) + 1033901245) ^ 0x98F00CA5;
  v73 = (((2 * v70) & 0x20038B6) - v70 + 511419300) ^ 0x1D7BA1A6;
  v74 = ((914 * (HIBYTE(v68) ^ 0x89)) & 0x2CDFC) + ((457 * (HIBYTE(v68) ^ 0x89)) ^ 0xFFF766FE);
  v75 = ((914 * v73) & 0x39FFFF58) + ((457 * v73) ^ 0x9CFFFFAC) + 1661090708;
  v76 = *(&a61 + (((914 * v71) & 0xEE73B7FC) + ((457 * v71) ^ 0x7739DBFE) - 2000134334) % 0x708) ^ 0x35;
  v77 = *(&a61 + (v74 + 709698) % 0x708) ^ 0x35;
  v78 = (((914 * v72) & 0xEFD7C7DC) + ((457 * v72) ^ 0xF7EBE3EE) + 135681874) % 0x708;
  v79 = (a47 * v61 + 1720853876) % 0x55C;
  v80 = (((v77 - ((2 * v77) & 0x9A)) << 16) - 1437794304) ^ 0xAA4D0000;
  v81 = (((v76 - ((2 * v76) & 0xA0)) << 8) + 268914688) ^ 0x10075000;
  v82 = (v80 + 1267932940 - ((2 * v80) & 0x17260000)) ^ 0x4B931F0C | (v81 - 2138490775 - ((2 * v81) & 0x1127000)) ^ 0x80893869;
  v83 = *(&a61 + v75 % 0x708) ^ 0x35;
  v84 = (v82 + 709320451 - ((2 * v82) & 0x548EBE06)) ^ 0x2A475F03 | (v83 - 811963103 + (~(2 * v83) | 0xFFFFFFBD) + 1) ^ 0xCF9A6D21;
  v85 = (((v84 - ((2 * v84) & 0x866E36)) << 8) - 1019798784) ^ 0xC3371B00;
  v86 = *(&a61 + v78) ^ 0x35;
  v87 = (v85 - 945935628 - ((2 * v85) & 0x8F3C5400)) ^ 0xC79E2AF4 | (v86 - 310974384 - ((2 * v86) & 0xA0)) ^ 0xED76E850;
  *((_DWORD *)&STACK[0x8D0] + v79) = a52 ^ (v87 - ((2 * v87) & 0xCB0B12B4) - 444233382) ^ 0xD469275D;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 + 8 * ((301 * (a47 == 425039627)) ^ a2)) - 12))(v78, 160, v79, 3483004193, 709320451, 1267932940, a47, a1, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_18CBB9488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  int v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  int v68;
  uint64_t v69;

  *(_DWORD *)(*a64 + 4 * v66 - 0x5C1335022767081BLL) = *(_DWORD *)(v65
                                                                 + 4
                                                                 * (((15 * (v64 ^ 0x64F)) ^ 0x47DDC63C)
                                                                  + 97 * (_DWORD)v66
                                                                  - ((((((15 * (v64 ^ 0x64F)) ^ 0x47DDC63Cu)
                                                                                    + 97 * (_DWORD)v66)
                                                                                   * (unint64_t)v67) >> 32) >> 10)
                                                                  * v68));
  return (*(uint64_t (**)(void))(v69 + 8 * ((204 * (v66 != 1758690720)) ^ v64)))();
}

uint64_t sub_18CBB9508@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  unsigned int v62;
  char *v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  uint64_t v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  uint64_t v76;
  unsigned int v77;
  int v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;

  v61 = ((a46 + 78) + 1670447876 - ((2 * (a46 + 78)) & 8)) ^ 0x63910304;
  v62 = (((914 * v61) & 0x7AE8FEE) + ((457 * v61) ^ 0x37D747F7u) - 936592311) % 0x708;
  v63 = &a58;
  v64 = *(_DWORD *)(v60
                  + 4
                  * ((1361
                    * (((2 * (v63[v62] ^ 0x24)) & 0xDE) + (v63[v62] ^ 0xCD9DDFCB))
                    - 603090796)
                   % 0x12E0));
  v65 = HIBYTE(v64) ^ 0x1D;
  v66 = -249984313 - (BYTE1(v64) ^ 0x3C) + ((2 * (BYTE1(v64) ^ 0x3C)) & 0x66666666);
  v67 = ((HIWORD(v64) & 0x45 ^ 0xBEFD1F01) + (HIWORD(v64) & 0xBA ^ 0x89) - 1) ^ 0xAAC797E5;
  v68 = ((2 * v67) & 0x8515C8E) - v67;
  v69 = (a46 * v58 - 311846350);
  v70 = *(_DWORD *)(v60
                                   + 4
                                   * ((1361
                                     * (((2 * (v63[v62] ^ 0x24)) & 0xDE)
                                      + (v63[v62] ^ 0xCD9DDFCB))
                                     - 603090796)
                                    % 0x12E0)) ^ 0x7D;
  v71 = (457 * v70) ^ 0xBEEDFEE1;
  v72 = ((914 * v65) & 0x14FFC) + ((457 * v65) ^ 0x3F96A7FE);
  v73 = (914 * v70) & 0x3FDC2;
  v74 = (v68 + 1372803512) ^ 0x45E9D9AA;
  v75 = v72 - 1066691774;
  v76 = (457 * v74) ^ 0x73DF737Fu;
  v77 = (v66 + 5) ^ 0xF1198AC7;
  v78 = 457 * v77;
  v79 = 914 * v77;
  v80 = (914 * v74) & 0xE7BEE6FE;
  v81 = v78 ^ 0xF6EA3B3F;
  if (v69 >= 0xFFFFFAA4)
    v82 = a46 * v58 - 122722185;
  else
    v82 = ((v69 % 0x55C) ^ 0x5F7DFDF9) - 1412969744 + ((2 * (v69 % 0x55C)) & 0xBF2);
  v83 = (v73 + v71 + 1091845215) % 0x708;
  v84 = *(&a58 + v75 % 0x708) ^ 0x35;
  v85 = *(&a58 + (v80 + v76 - 1943877695) % 0x708) ^ 0x35;
  v86 = (((v84 - ((2 * v84) & 0x66666666)) << 16) - 1607270400) ^ 0xA0330000;
  v87 = (((v85 - ((2 * v85) & 0xEC)) << 8) - 161909248) ^ 0xF6597600;
  v88 = (v87 - 763339104 - ((2 * v87) & 0x2500BC00)) ^ 0xD2805EA0 | (v86 - 365053012 - ((2 * v86) & 0x547A0000)) ^ 0xEA3DBBAC;
  v89 = *(&a58 + ((v79 & 0x4767E) + v81 + 152567809) % 0x708) ^ 0x35;
  v90 = (v88 + 1946026591 - ((2 * v88) & 0xE7FC04BE)) ^ 0x73FE025F | (v89 - 519183705 - ((2 * v89) & 0x14E)) ^ 0xE10DE2A7;
  v91 = (((v90 - ((2 * v90) & 0xC28A58)) << 8) + 1631923200) ^ 0x61452C00;
  v92 = *(&a58 + v83) ^ 0x35;
  v93 = (v91 - 1668916062 - ((2 * v91) & 0x390CB800)) ^ 0x9C865CA2 | (v92 + 2037799047 - ((2 * v92) & 0xFFFFFF0F)) ^ 0x79765887;
  *((_DWORD *)&STACK[0x8D0] + v82 - 189122793) = a54 ^ (v93 - ((2 * v93) & 0xCFBDF9E4) + 1742666994) ^ 0x44F4CDED;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 + 8 * ((19 * (a46 != 2128559793)) ^ a1)) - 12))(3775783591, 3531628192, ((v69 % 0x55C) ^ 0x5F7DFDF9) - 1412969744 + ((2 * (v69 % 0x55C)) & 0xBF2), v81, v76, 1944023935, 86012, v69, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_18CBB9994@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  *(_DWORD *)(*a57 + 4 * v58 - 0x5C133501D81F3E5BLL) = *(_DWORD *)(v57
                                                                 + 4
                                                                 * ((97 * (int)v58 - 899229329)
                                                                  % (a1 + 1177)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v59 + 8 * ((1992 * (v58 == 1426167088)) ^ a1)) - 12))();
}

uint64_t sub_18CBB9A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,unsigned int a55,uint64_t a56,int a57,int a58,int a59,int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a68;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  int v79;
  uint64_t v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  uint64_t v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;

  v72 = *(&a68
                         + (((914 * (a55 - 46)) & 0x3DBEE)
                          + (v68 ^ 0xEA241435)
                          + ((457 * (a55 - 46)) ^ 0x15DFEDF7))
                         % 0x708);
  v73 = 1361 * (((2 * (v72 ^ 0x38)) & 0xD6) + (v72 ^ 0xFF3D7743)) + 175176823;
  v74 = ((2 * (v72 ^ 0x79)) & 0xFFFFFFF7) + (v72 ^ 0xFFD9DB86);
  v75 = (v74 - 1949388887 + ((2 * ((v74 + 392) & 0x623 ^ (v74 | 0x7FFFFFFC))) ^ 0x20A02007)) ^ *(_DWORD *)(v71 + 4 * (v73 % 0x12E0));
  v76 = (BYTE1(v75) ^ 0xD0 | 0x5E36B296) - (BYTE1(v75) ^ 0xD0 | 0xA1C94D69) - 1580642967;
  v77 = ((v76 & 0x1636B229 ^ 0x226E9201) + (v76 ^ 0x9D91643E) - ((v76 ^ 0x9D91643E) & 0xB6FFB629)) ^ 0x75586084;
  v78 = ((BYTE2(v75) ^ 0x46) - ((2 * (BYTE2(v75) ^ 0x46)) & 0x116) + 2443) ^ 0x9CA;
  v79 = HIBYTE(v75) ^ 0xF2;
  v80 = (457 * v79) ^ 0x77FB7FFDu;
  v81 = (1680566891 - (v75 ^ 0x39 | 0x642B6A6B) + (v75 ^ 0x39 | 0x9BD49594)) ^ 0x9FD65185;
  v82 = (((2 * v81) | 0xA21A186A) - v81 + 787674059) ^ 0xD50FC893;
  v83 = (457 * v82) ^ 0xFA8FFFFF;
  v84 = (914 * v79);
  v85 = (914 * v82) & 0xF51FFFFE;
  v86 = ((914 * v77) & 0x7DDB2E7A) + ((457 * v77) ^ 0xBEED973D) + 1091871747;
  v87 = (v84 & 0x2FFFA) + v80 - 2012824765;
  v88 = v85 + v83 + 91372353;
  v89 = *(&a68 + v87 % 0x708) ^ 0x35;
  v90 = *(&a68 + (((914 * v78) & 0xCFFDAEB6) + ((457 * v78) ^ 0x67FED75B) - 1744608283) % 0x708) ^ 0x35;
  v91 = (((v89 - ((2 * v89) & 0x19C)) << 16) + 701366272) ^ 0x29CE0000;
  v92 = (((v90 - ((2 * v90) & 0xC)) << 8) + 937035264) ^ 0x37DA0600;
  v93 = (v92 - 1741034385 - ((2 * v92) & 0x3073D800)) ^ 0x9839EC6F | (v91 + 517309215 - ((2 * v91) & 0x3DAA0000)) ^ 0x1ED5831F;
  v94 = *(&a68 + v88 % 0x708);
  v95 = *(&a68 + v86 % 0x708) ^ 0x35;
  v96 = (v93 - 2069248649 - ((2 * v93) & 0x9538AEE)) ^ 0x84A9C577 | (v95 - 2092275569 - ((2 * v95) & 0xFFFFFF1F)) ^ 0x834A688F;
  v97 = (((v96 - ((2 * v96) & 0xFAD9BA)) << 8) + 2104286464) ^ 0x7D6CDD00;
  v98 = (v97 + 645474418 - ((2 * v97) & 0x4CF25000)) ^ 0x26792872 | ((v94 ^ 0x35)
                                                                   - 2129978128
                                                                   - ((2 * (v94 ^ 0x35)) & 0x1E0)) ^ 0x810B1CF0;
  *((_DWORD *)&STACK[0x8D0] + (a55 * v69 + 761758610) % 0x55C) = a60 ^ a59 ^ a58 ^ 0x5BE98B82 ^ (v98
                                                                                               - ((2 * v98) & 0xC8E75288)
                                                                                               - 462182076);
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 + 8 * ((353 * (a55 == 1409043501)) ^ v68)) - 4))(517309215, v87 / 0x708uLL, v80, v84, 4203741183, 1680566891, a55, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_18CBB9EEC@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  *(_DWORD *)(*a57 + 4 * v60 - 0x5C1335026BF7B883) = *(_DWORD *)(v59
                                                                 + 4
                                                                 * (97 * (_DWORD)v60
                                                                  - 920427995
                                                                  - ((((97 * v60 - 920427995)
                                                                                   * (unint64_t)a1) >> 32) >> 10)
                                                                  * v58));
  return ((uint64_t (*)(void))(*(_QWORD *)(v61 + 8 * ((19 * (v60 != 2046277818)) ^ v57)) - 4))();
}

uint64_t sub_18CBB9F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,uint64_t a57,int a58,uint64_t a59,uint64_t a60,int a61,int a62,int a63)
{
  char a66;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  uint64_t v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  uint64_t v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;

  v70 = ((a56 + ((v67 + 49) & 0xEB) + 120)
       - 49017277
       - ((2 * (a56 + ((v67 + 248501297) & 0xF1302FEB) - 1672)) & 0x86)) ^ 0xFD140E43;
  v71 = *(&a66 + (((914 * v70) & 0xEB37E) + ((457 * v70) ^ 0xFF5F59BF) + 10791553) % 0x708);
  v72 = (((v71 ^ 0x35) - ((2 * (v71 ^ 0x35)) & 0x7C) - 729250498) ^ 0x3B9E348D)
      + (*(_DWORD *)(v69 + 4 * ((1361 * (((2 * (v71 ^ 6)) & 0x15E) + (v71 ^ 0xED6ED3E9)) - 1240803354) % 0x12E0)) ^ 0xB7AE8AB6);
  v73 = v72 - ((2 * v72) & 0x7046D4E8) + 941845108;
  v74 = (((v73 >> 8) & 0x1D) + ((v73 >> 8) & 0xE2 ^ 0xFB59CC43) - 1) ^ 0xB9C9CEE2;
  v75 = ((BYTE2(v73) ^ 0x6F) - 2051377101 - ((2 * (BYTE2(v73) ^ 0x6F)) & 0x66666666)) ^ 0x85BA786E;
  v76 = (1653546848 - (v74 | 0x628F1F60) + (v74 | 0x9D70E09F)) ^ 0xDFE0E20F;
  v77 = ((914 * (HIBYTE(v73) ^ 0x43)) & 0x27F62) + ((457 * (HIBYTE(v73) ^ 0x43)) ^ 0x3FBB3FB1) - 1069089905;
  v78 = ((v73 ^ 0x20801148) - ((2 * (v73 ^ 0x20801148)) & 0x400020C2) - 149309855) ^ 0xD799A705;
  v79 = (((914 * v78) & 0xB7FDC8FC) + ((457 * v78) ^ 0xDBFEE47E) + 604198594) % 0x708;
  v80 = (((914 * v76) & 0xA3FBCEFE) + ((457 * v76) ^ 0x51FDE77F) - 1375448127) % 0x708;
  v81 = (a56 * v66 - 1819458621) % 0x55Cu;
  v82 = *(&a66 + v77 % 0x708) ^ 0x35;
  v83 = *(&a66 + (((914 * v75) & 0xF6D3DF3A) + ((457 * v75) ^ 0xFB69EF9D) + 77089699) % 0x708) ^ 0x35;
  v84 = (((v82 - ((2 * v82) & 0x2A)) << 16) + 1981087744) ^ 0x76150000;
  v85 = (((v83 - ((2 * v83) & 0xFFFFFFE3)) << 8) - 112398080) ^ 0xF94CF100;
  v86 = *(&a66 + v79);
  v87 = (v85 + 1009756207 - ((2 * v85) & 0x785F5000)) ^ 0x3C2FA82F | (v84 - 984618952 - ((2 * v84) & 0xA9E0000)) ^ 0xC54FE838;
  v88 = *(&a66 + v80) ^ 0x35;
  v89 = (v87 - 2012606486 - ((2 * v87) & 0x10141FD4)) ^ 0x880A0FEA | (v88 + 1536318011 - ((2 * v88) & 0x76)) ^ 0x5B925A3B;
  v90 = (((v89 - ((2 * v89) & 0x60A9B0)) << 8) + 810866688) ^ 0x3054D800;
  v91 = (v90 - 1197982648 - ((2 * v90) & 0x71307800)) ^ 0xB8983C48 | ((v86 ^ 0x35)
                                                                    + 2038238733
                                                                    - ((2 * (v86 ^ 0x35)) & 0x1A)) ^ 0x797D0E0D;
  *((_DWORD *)&STACK[0x8D0] + v81) = a58 ^ a63 ^ a61 ^ 0x9A2EEE72 ^ (v91
                                                                                 - ((2 * v91) & 0x21E1076C)
                                                                                 + 284197814);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 + 8 * ((1361 * (a56 == 1568488028)) ^ v67)) - 4))(v81, 2038238733, v86, 2282360810, 3310348344, 1009756207, 3690914942, 2243590195, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_18CBBA434@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  unsigned int v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  int v63;
  unsigned int v64;

  v62 = v58 - (((v58 + 509779112) & 0x3580F33E ^ v58 & 4) << (a1 - 42)) - 740061214;
  *(_DWORD *)(*a57 + 4 * ((v62 ^ 0x3F7FD8FF686FA4D5) + ((2 * (v62 ^ 0x3580F33A)) & 0xBBDEAFDE)) - 0x5A1298FDFBD67623) = *(_DWORD *)(v60 + 4 * (97 * v58 + 56246260 - ((((97 * v58 + 56246260) * (unint64_t)v57) >> 32) >> 10) * v59));
  v63 = ((2 * v62) ^ 0x6B01E674) - ((2 * ((2 * v62) ^ 0x6B01E674)) & 0x48B1765C) + 609794862;
  v64 = (v62 ^ 0xCA7F04F7) + 102810 + (v63 & 0xFFFFEF9A ^ 0xDBA6C56C) + ((2 * v63) & 0xFFFCDC04 ^ 0x48B05404);
  return ((uint64_t (*)(void))(*(_QWORD *)(v61
                                        + 8
                                        * (a1 + 4 * (((2 * v64) & 0xF73FFFF8) + (v64 ^ 0x7B9FFFFC) - 2074083324 < 0x100)))
                            - 8))();
}

uint64_t sub_18CBBA5B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;

  v68 = byte_18CF35F60[(((4424 * ((1805264682 - (((_BYTE)a3 + (_BYTE)v67 + 1) & 0x52)) ^ 0x6B9A2701)) & 0xCEDEB558)
                                       + ((2212 * ((1805264682 - (((_BYTE)a3 + (_BYTE)v67 + 1) & 0x52)) ^ 0x6B9A2701)) ^ 0x676F5AAC)
                                       - 1731345024)
                                      % 0x97F] ^ 0xFFFFFFF0;
  v69 = 23 * v68 - ((46 * (_BYTE)v68) & 0x3C) + 30;
  v70 = v69 ^ 0x5E ^ (((v69 >> 3) & 1 | 0x4A) - ((v69 >> 3) & 8 | 0x35) + 53);
  v71 = *(&a66
                         + (457 * (((2 * v70) & 0x1F6) + (v70 ^ 0xFC7FAEFB)) + 1074978093) % 0x708) ^ 0x35;
  v72 = (v71 - 1418784915 - ((2 * v71) & 0xDA)) ^ 0xAB6F0F6D | (((a33 + 969995687) & 0xFFFFFF00)
                                                              - ((2 * (a33 + 969995687)) & 0x891FE200)
                                                              + 1150284244) ^ 0x448FF1D4;
  *((_DWORD *)&STACK[0x8D0] + (580953523 * v66 - 517916883) % 0x55Cu) = v72 - 840245266 - ((2 * v72) & 0x9BD5BFDC);
  return ((uint64_t (*)(void))(qword_1E2538EC0[a3 + 1090 + v67] - 12))();
}

void sub_18CBBA7D4()
{
  JUMPOUT(0x18CBBA678);
}

uint64_t sub_18CBBA7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  int v64;

  *(_DWORD *)(*a64 + 4 * a5 - 0x5C133501330DABFBLL) = *((_DWORD *)&STACK[0x8D0]
                                                      + ((int)a5 * (v64 - 997) + 1834047495) % 0x55Cu);
  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((415 * (a5 == 733818776)) ^ v64)) - 12))();
}

uint64_t sub_18CBBA85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  int v66;
  unsigned int *v67;
  unsigned int v68;
  int v69;
  int v70;
  unint64_t v71;
  unsigned int v72;
  int v73;
  unsigned int v74;

  v68 = ((a34 & 0xFFFFFF00 ^ 0x3D616B00)
       + (a34 & 0xA834CF00 ^ 0x801484D1)
       - ((a34 & 0xFFFFFF00 ^ 0x3D616B00) & 0xA834CF00)) ^ 0x24744F11;
  v69 = *(&a66
                         + (((914 * ((1465642797 - ((((v66 - 24) ^ 0x8F) - 1095) & 0x427AEE00)) ^ 0x575BEF2D)) & 0xFBDB7E)
                          + ((457 * ((1465642797 - ((((v66 - 24) ^ 0x8F) - 1095) & 0x427AEE00)) ^ 0x575BEF2D)) ^ 0x4FFDEDBFu)
                          - 1341778303)
                         % 0x708);
  v70 = byte_18CF35F60[(2212 * (((2 * (v69 ^ 8)) & 0xFFFFFF7F) + (v69 ^ 0x78CFFAF7)) + 451765668)
                                      % 0x97F];
  HIDWORD(v71) = v70 ^ 0x70;
  LODWORD(v71) = ~v70 << 24;
  v72 = ((v71 >> 31) - ((2 * (v71 >> 31)) & 0x4A) - 91);
  v73 = ((v71 >> 31) - ((2 * (v71 >> 31)) & 0x4A) - 91) ^ (v72 >> 6) ^ (v72 >> 4) ^ 0xAD;
  v74 = (v73 + 1844306738 - ((2 * v73) & 0x64)) ^ 0x6DEDE332 | (((2 * v68) & 0x31A10F80)
                                                                               - v68
                                                                               - 416319486) ^ 0xE7BA6CC2;
  *v67 = (v74 - ((2 * v74) & 0xCEEDDA32) - 411636455) ^ 0x2A9C3242;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))qword_1E2538EC0[v66 - 24])(1844306738, 1465642797, 3471694386);
}

void sub_18CBBAA8C()
{
  JUMPOUT(0x18CBBA954);
}

uint64_t sub_18CBBAA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  int v64;
  uint64_t v65;
  uint64_t v66;

  *(_DWORD *)(*a64 + 4 * v65 - 0x5C13350086E20E27) = *((_DWORD *)&STACK[0x8D0] + (97 * (int)v65 - 1133385636) % 0x55Cu);
  return ((uint64_t (*)(void))(*(_QWORD *)(v66 + 8 * (((v65 == 11684643) * (v64 - 1086)) ^ v64)) - 4))();
}

uint64_t sub_18CBBAB18@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  int v58;
  uint64_t v59;
  uint64_t (*v60)(void);

  *(&a58 + (457 * v58 + 710719628) % 0x708u) = *(&a58
                                               + (457
                                                * (((2
                                                   * (*(&a58 + (457 * v58 + 710719628) % 0x708u) ^ 0x35)) & 0x1CA)
                                                 + ((a1 + 1696423598) & 0x9AE2A16F ^ 0xCF7FBCAA ^ *(&a58 + (457 * v58 + 710719628) % 0x708u) ^ 0x35))
                                                - 1795111301)
                                               % 0x708);
  v60 = *(uint64_t (**)(void))(v59 + 8 * ((126 * (v58 == 1614932243)) ^ a1));
  *(&a58 + (457 * v58 + 710840276) % 0x708u) = *(&a58
                                               + (457
                                                * (((2
                                                   * (*(&a58 + (457 * v58 + 710840276) % 0x708u) ^ 0x35)) & 0xBA)
                                                 + (*(&a58 + (457 * v58 + 710840276) % 0x708u) ^ 0xFDBFEF68))
                                                + 73395771)
                                               % 0x708);
  return v60();
}

uint64_t sub_18CBBAC2C()
{
  int v0;
  int v1;
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v4 + (v0 * v1 - 599737790) % (((2 * v5) ^ 0xECu) + 1174)) = *(_BYTE *)(v4
                                                                                  + v0 * v1
                                                                                  - 599500150
                                                                                  - ((((v0 * v1 - 599500150) * (unint64_t)v2) >> 32) >> 10)
                                                                                  * v3);
  return (*(uint64_t (**)(void))(v6 + 8 * ((990 * (v0 == 1420437773)) ^ v5)))();
}

uint64_t sub_18CBBAC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  int v65;
  uint64_t v66;
  int v67;
  unsigned int v68;

  v67 = *(&a65 + (1210457682 * (((v65 + 334677385) & 0xEC0D3E75) - 1192) + 871766750) % 0x708) ^ 0x35;
  v68 = (v67 - 17367581 - ((2 * v67) & 0xFFFFFFC7)) ^ 0xFEF6FDE3 | (((1505110712 - a33) & 0xFFFFFF00)
                                                                  - ((2 * (1505110712 - a33)) & 0xD227F000)
                                                                  - 384567142) ^ 0xE913F89A;
  LODWORD(STACK[0x8D0]) = v68 - 840245266 - ((2 * v68) & 0x9BD5BFDC);
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v66 + 8 * v65))(2443359173, 1800, &a65, 53, 2844689134, 3205573259, 1372, &STACK[0x8D0]);
}

void sub_18CBBADD4()
{
  JUMPOUT(0x18CBBAD54);
}

uint64_t sub_18CBBADDC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  int v61;
  unint64_t v62;
  int v63;

  v60 = *((_DWORD *)&STACK[0x8D0] + (97 * v58 - 84510245) % 0x55Cu);
  HIDWORD(v62) = v58 + 89068783;
  LODWORD(v62) = v58 - 45148945;
  v61 = v62 >> 27;
  HIDWORD(v62) = v61;
  LODWORD(v62) = (v61 + a1 - ((v61 << ((-121 * (v57 ^ 0x72)) ^ 0x94)) & 0x67FE9940)) ^ a1;
  v63 = ((2 * (v62 >> 5)) & 0xF9DEDFDE) + ((v62 >> 5) ^ 0xFCEF6FEF);
  *(_DWORD *)(((4 * (v63 + 2080309207)) | ((unint64_t)((v63 + 2080309207) < 0x78EE6FC6) << 34))
            + *a57
            - 0x5C13350267D2D57FLL) = v60;
  return (*(uint64_t (**)(void))(v59 + 8 * ((7 * ((v63 + 51416798) > 0xFF)) ^ v57)))();
}

uint64_t sub_18CBBAEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  int v65;
  unsigned int v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  unsigned int v72;

  v71 = v69 - 15;
  v72 = ((LOBYTE(STACK[0x370]) ^ 0x35) - 2035899548 - ((2 * (LOBYTE(STACK[0x370]) ^ 0x35)) & 0xC8)) ^ 0x86A6A364 | ((a34 & 0xFFFFFF00 ^ 0x6FBA3900 | 0xC1A1F19) - (v71 ^ 0xF3E5E160 | a34 & 0xFFFFFF00 ^ 0x6FBA3900) - 203038490) ^ 0xBFDB2319;
  *(_DWORD *)(v68
            + 4
            * (1502118999 * v65
             + 323345161
             - ((((1502118999 * v65 + 323345161) * (unint64_t)v66) >> 32) >> 10)
             * v67)) = v72 - 840245266 - ((2 * v72) & 0x9BD5BFDC);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(*(_QWORD *)(v70 + 8 * (v71 ^ 0x13))
                                                                                               - 4))(323345161, 726648049, 2443359173, 1800, &a65, 53, 200);
}

void sub_18CBBB018()
{
  JUMPOUT(0x18CBBAF98);
}

uint64_t sub_18CBBB020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _QWORD *a64;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;

  *(_DWORD *)(*a64 + 4 * v66 - 0x5C1335025AA54797) = *((_DWORD *)&STACK[0x8D0]
                                                       + ((((v65 - 390) | 0x285) - 548) * v66 + 1832304512)
                                                       % 0x55C);
  return ((uint64_t (*)(void))(*(_QWORD *)(v67 + 8 * ((2013 * (v66 + 1 == v64 + 256)) ^ v65)) - 4))();
}

uint64_t sub_18CBBB0A4@<X0>(unsigned int a1@<W8>, uint64_t a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,_QWORD *a57)
{
  int v57;
  uint64_t v58;
  int v59;
  int v60;
  unsigned int v61;

  *a3 = 2047018587;
  v60 = byte_18CF35F60[(((234 * (215 * (v59 ^ 0x286) + 1567)) ^ 0xFF734FDB) + 13059981) % 0x97F] ^ 0xFC;
  v61 = 97 * (((2 * v60) & 0x1F8) + (v60 ^ 0x7F67F1FC)) - 1180843728;
  *(_DWORD *)(v58 + 4 * (v61 - (((v61 * (unint64_t)a1) >> 32) >> 10) * v57)) = *(_DWORD *)(*a57 - 0x5C13350084191667);
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(62 * ((v59 ^ 0x4B00AE57u) + 2021437166 > 0xC37D5AC1)) ^ v59 ^ 0x4D1]
                                                                                       - 4))(0xA3ECCAFE3A71ABD9, 557509, 4294438887, 1348292464, 234);
}

void sub_18CBBB298()
{
  JUMPOUT(0x18CBBB19CLL);
}

uint64_t sub_18CBBB2A4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, int a5@<W4>, unsigned int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,unsigned int a60,int a61,int a62,_QWORD *a63)
{
  int v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  _BOOL4 v73;

  v70 = (v66 + (a62 + 18) - 2 * ((a62 - 673144558) & a5 ^ (a62 - 673144702) & 8)) ^ v66;
  v71 = ((v70 * v67) & v68) + ((v70 * v69) ^ a3) + a2;
  *(_DWORD *)(((4 * (a62 - 673144702)) | ((unint64_t)(a62 - 673144702 < a4) << 34)) + *a63 + a1) = *(_DWORD *)(v64 + 4 * (v71 - (((v71 * (unint64_t)a6) >> 32) >> 10) * v63));
  v73 = a60 <= 0xB0FD47F9 || a62 + 947952140 <= a60;
  return ((uint64_t (*)(void))(qword_1E2538EC0[v73 | (4 * v73) | (v65 + 341)] - 8))();
}

void sub_18CBBB35C()
{
  JUMPOUT(0x18CBBB2C4);
}

uint64_t sub_18CBBB368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int v63;

  return ((uint64_t (*)(void))(qword_1E2538EC0[v63 ^ (1129 * ((a63 - 1219898733) < 0x2FC69581))] - 12))();
}

void sub_18CBBB3AC()
{
  JUMPOUT(0x18CBBB15CLL);
}

void sub_18CBBB3D0()
{
  int v0;
  uint64_t v1;
  void *v2;

  free(v2);
  *(_DWORD *)(v1 + 8) = v0;
}

uint64_t sub_18CBBB420(uint64_t result)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  int v6;
  int v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;

  v1 = 1856021207 * ((((2 * result) | 0x4840409B3328D17ELL) - result + 0x5BDFDFB2666B9741) ^ 0x4934B7D6D7FDBE41);
  v2 = *(_DWORD *)(result + 12) - v1;
  v3 = *(_QWORD *)(result + 24) ^ v1;
  v4 = *(_QWORD *)(result + 16) + v1;
  v5 = *(_DWORD *)(result + 36) ^ v1;
  v6 = *(_DWORD *)(result + 4) ^ v1;
  v7 = *(_DWORD *)(result + 8) ^ v1;
  v8 = v4 == v3;
  v9 = v4 > v3;
  v10 = v8;
  if ((v5 & 1) == 0)
    v9 = v10;
  if (!v9)
    v2 = v6;
  *(_DWORD *)result = v7 ^ v2;
  return result;
}

void sub_18CBBB4BC(uint64_t a1)
{
  __asm { BR              X13 }
}

void sub_18CBBB578(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  _DWORD *v5;
  unsigned int v6;
  _BYTE v7[32];
  uint64_t v8;
  __int128 v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;

  v6 = ((v7 & 0xBE9DF940 | ~(v7 | 0xBE9DF940)) ^ 0x52F8FAFC) * v1;
  memset(v7, 0, sizeof(v7));
  v8 = v2;
  v9 = 0u;
  v11 = v6 ^ 0x1D49DC7F;
  v12 = (v3 + v4) ^ v6;
  v13 = a1;
  sub_18CA8D39C();
  *v5 = v10;
}

void sub_18CBBB678(_QWORD *a1)
{
  BOOL v1;
  int v3;

  if (a1[4])
    v1 = a1[1] == 0;
  else
    v1 = 1;
  v3 = !v1 && a1[2] != 0;
  __asm { BR              X12 }
}

void sub_18CBBB720(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  _QWORD v7[4];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  int v13;
  uint64_t v14;

  v14 = 0x483CF90335B0B89FLL;
  v7[0] = 0;
  v7[1] = &v6;
  v9 = v2;
  v10 = 0;
  v5 = 562267567
     * (((v7 ^ 0x5A23AF60 | 0xAF18922F)
       - (v7 ^ 0x5A23AF60)
       + ((v7 ^ 0x5A23AF60) & 0x50E76DD0)) ^ 0xE6A1C10C);
  v7[3] = 0;
  v8 = v1;
  v12 = v5 ^ 0xCC933444;
  v13 = (v3 + 765) ^ v5;
  v7[2] = a1;
  sub_18CA8D39C();
  *(_DWORD *)(v4 + 4) = v11;
}

void sub_18CBBB7EC(_DWORD *a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  uint64_t v4;

  v1 = 230600693 * (a1 ^ 0xD23C862B);
  v2 = *a1 ^ v1;
  v3 = ((a1[7] + v1) & 0xFFFFFFF0) - 1926684720;
  v4 = qword_1E2538EC0[(120
                      * (malloc_type_malloc(((2 * v3) & 0x9D7F55E0) + (v3 ^ 0xCEBFAAF6) + 826299674, 0x6F4887E1uLL) != 0)) ^ v2]
     - (((v2 - 100) | 0x22u) ^ 0x27ELL);
  __asm { BR              X8 }
}

uint64_t sub_18CBBB8CC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((250 * ((((23 * (v0 ^ 0x26E)) ^ (v1 == 1926684720)) & 1) == 0)) ^ v0))
                            - 12))();
}

uint64_t sub_18CBBB948@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v12 = v7 < v6;
  *(_BYTE *)(v10 + (v1 + a1)) = *(_BYTE *)(v2 + ((v1 + a1) & 0xFLL)) ^ *(_BYTE *)(*(_QWORD *)(v9 + 16)
                                                                                              + (v1 + a1)) ^ *(_BYTE *)(v3 + ((v1 + a1) & 0xFLL)) ^ (-39 * ((v1 + a1) & 0xF)) ^ *(_BYTE *)(((v1 + a1) & 0xFLL) + v4 + 2);
  v13 = v1 + 1584200507 + ((4 * v5) ^ 0x824);
  v14 = v12 ^ (v13 < v6);
  v15 = v13 < v7;
  if (!v14)
    v12 = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((v12 * v8) ^ v5)) - 12))();
}

uint64_t sub_18CBBB9D8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  _BOOL4 v10;

  *(_BYTE *)(v7 + (v1 + a1)) = *(_BYTE *)(v2 + ((v1 + a1) & 0xFLL)) ^ *(_BYTE *)(v3 + ((v1 + a1) & 0xFLL)) ^ *(_BYTE *)(((v1 + a1) & 0xFLL) + v4 + 2) ^ (-39 * ((v1 + a1) & 0xF)) ^ 0x80;
  v9 = v6 - 1823612095 + (v5 ^ 0x350);
  if ((v1 + 1156333955) < 0x620D90C3 != v9 < 0x620D90C3)
    v10 = v9 < 0x620D90C3;
  else
    v10 = v1 + 1156333955 < v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((61 * v10) ^ v5)) - 4))();
}

uint64_t sub_18CBBBA74@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;

  v13 = v3 + 1;
  v14 = (v13 + a3);
  v15 = (((v7 + 76) | 0x84) - 653) & v14;
  *(_BYTE *)(v11 + v14) = *(_BYTE *)(v5 + v15) ^ *(_BYTE *)(v4 + v15) ^ *(_BYTE *)(v15 + v6 + 2) ^ (v15 * v10);
  v16 = v13 + v9 < a1;
  if (a1 < v8 != v13 + v9 < v8)
    v16 = a1 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((v16 * a2) ^ v7)) - 4))();
}

uint64_t sub_18CBBBAF0()
{
  int v0;
  void *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((54 * (((((v0 ^ 0x36) - 334) ^ (v1 == &unk_18CF28E45)) & 1) == 0)) ^ v0))
                            - 8))();
}

void sub_18CBBBB4C(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v5;
  _BOOL4 v7;

  v5 = ((v2 + 11) & 0xF) - (((v2 + 11) << ((((v1 - 28) | 0x30) ^ 0x42) + v1 + 115)) & 4);
  v7 = v3 != a1 && v5 == 0;
  __asm { BR              X8 }
}

uint64_t sub_18CBBBBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  int v32;
  uint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  unint64_t v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  _BYTE *v81;
  int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  _BOOL4 v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t (*v110)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v35 - 200) = v33;
  v36 = (v31 - 17);
  v37 = v34[12];
  v38 = byte_18CF2C040[v34[8] ^ 0x17] + 2 * ((v34[8] ^ 0xFFFFFFD6) + 1) + (((v34[8] ^ 0xFFFFFFD6) + 1) ^ 0x7F);
  v39 = (v38 - ((2 * v38 + 94) & (v36 ^ 5)) + 92) ^ 0x29;
  v40 = (((v39 - ((2 * v39) & 0x6E)) << 24) + 922746880) ^ 0x37000000;
  v41 = byte_18CF2D280[v34[9] ^ 0xECLL];
  v42 = byte_18CF3A2A0[v34[11] ^ 0xFALL] + 49;
  v43 = (v40 - ((2 * v40) & 0x77777777) - 1156752054) ^ 0xBB0D5D4A | ((~(2 * v42) | 0xFFFFFE1D)
                                                                    + v42
                                                                    + 389486834) ^ 0x173718F1;
  HIDWORD(v44) = ~v41;
  LODWORD(v44) = (v41 ^ 0xFFFFFF9F) << 24;
  v45 = (((2 * ((v37 ^ 0x31) + 1)) & 0x84)
       + byte_18CF2C040[v37 ^ 0xF0]
       + (((v37 ^ 0x31) + 1) ^ 0xFFFFFFC2)
       - 2 * ((byte_18CF2C040[v37 ^ 0xF0] + (((v37 ^ 0x31) + 1) ^ 0xFFFFFFC2)) & 3)
       - 17) ^ 0x73;
  v46 = (((v45 - ((2 * v45) & 0xFFFFFFBF)) << 24) + 1593835520) ^ 0x5F000000;
  v47 = (v46 - ((2 * v46) & 0x78000000) + 1008995490) ^ 0x3C240CA2 | ((byte_18CF3A2A0[v34[15] ^ 0xE1]
                                                                                      + 49)
                                                                    - ((2 * (byte_18CF3A2A0[v34[15] ^ 0xE1] + 49)) & 0x19C)
                                                                    + 704363214) ^ 0x29FBBACE;
  LODWORD(v37) = ((((((v44 >> 27) - ((2 * (v44 >> 27)) & 0x88) - 60) ^ 0x5E)
                  - ((2 * (((v44 >> 27) - ((2 * (v44 >> 27)) & 0x88) - 60) ^ 0x5E)) & 0x1D4)) << 16)
                + 1961492480) ^ 0x74EA0000;
  v48 = (v37 - ((2 * v37) & 0x35340000) - 1701176168) ^ 0x9A9A1C98 | (v43 - ((2 * v43) & 0x43E6236E) + 569577911) ^ 0x21F311B7;
  v49 = v48 - ((2 * v48) & 0x47929CD2) + 600395369;
  v50 = byte_18CF2C040[*v34 ^ 0x70] + (*v34 ^ 0xFFFFFFB1) - 82;
  v51 = (2 * (v50 & 0x3F) + (v50 ^ 0x3F) - ((2 * (2 * (v50 & 0x3F) + (v50 ^ 0x3F)) - 124) & 0x9E) - 111) ^ 0x12;
  v52 = (((v51 - ((2 * v51) & 0x20)) << 24) + 0x10000000) ^ 0x10000000;
  v53 = v34[4];
  v54 = byte_18CF3A2A0[v34[3] ^ 0xABLL] + 49;
  v55 = (v52 - ((2 * v52) & 0x2E000000) - 1758781145) ^ 0x972B2127 | ((~(2 * v54) | 0xFFFFFE47)
                                                                    + v54
                                                                    - 472349475) ^ 0xE3D884DC;
  v56 = byte_18CF2D280[v34[5] ^ 0x86];
  LODWORD(v37) = v53 ^ ((v53 ^ 0x2B) - ((2 * (v53 ^ 0x2B) + 2) & 0x14) + 11) ^ ((v53 ^ 0x3B)
                                                                              + (~(2 * (v53 ^ 0x3B) + 2) | 0xFFFFFFF9)
                                                                              - 107);
  v57 = byte_18CF2C040[v53 ^ 0xFA] + (((v37 ^ 0x5D) + 16) ^ 0x42) - ((2 * ((v37 ^ 0x5D) + 16)) & 0x7A) + 1;
  HIDWORD(v44) = ~v56;
  LODWORD(v44) = (v56 ^ 0xFFFFFF9F) << 24;
  LODWORD(v37) = ((((((v44 >> 27) - ((2 * (v44 >> 27)) & 0x72) + 57) ^ 0xA8)
                  - ((2 * (((v44 >> 27) - ((2 * (v44 >> 27)) & 0x72) + 57) ^ 0xA8)) & 0x158)) << 16)
                + 430702592) ^ 0x19AC0000;
  v58 = (v57 - ((2 * v57 - 42) & 0xE6) - 34) ^ 0xE8;
  v59 = (((v58 - ((2 * v58) & 0x1A)) << 24) + 218103808) ^ 0xD000000;
  v60 = (v59 - ((2 * v59) & 0xA000000) + 91689685) ^ 0x57712D5 | (v37 - ((2 * v37) & 0x7EDC0000) + 2137916019) ^ 0x7F6E0273;
  v61 = v60 - ((2 * v60) & 0xEF05AF2C) - 142420074;
  v62 = byte_18CF35C60[v34[10] ^ 0x53] ^ 0x4E;
  v63 = (((v62 - ((2 * v62) & 0xE0)) << 8) + 726691840) ^ 0x2B507000;
  v64 = v49 ^ 0x23C94E69 | (v63 - ((2 * v63) & 0x60D4800) + 50767101) ^ 0x306A4FD;
  v65 = byte_18CF3A2A0[v34[7] ^ 0x62];
  v66 = byte_18CF2D280[v34[13] ^ 0x77];
  v67 = (v65 - ((2 * (_BYTE)v65 + 34) & 0x30) - 55) ^ 0x62;
  v68 = v61 ^ 0xF782D796 | (v67 - ((2 * v67) & 0xDA) + 577796205) ^ 0x2270786D;
  HIDWORD(v44) = ~v66;
  LODWORD(v44) = (v66 ^ 0xFFFFFF9F) << 24;
  v69 = ((((((v44 >> 27) - ((2 * (v44 >> 27)) & 0xD8) - 20) ^ 0x4B)
         - ((2 * (((v44 >> 27) - ((2 * (v44 >> 27)) & 0xD8) - 20) ^ 0x4B)) & 0xD4)) << 16)
       + 409600000) ^ 0x186A0000;
  v70 = (v69 - ((2 * v69) & 0x1AB20000) + 223961334) ^ 0xD5960F6 | (v47 - ((2 * v47) & 0x93D280F4) - 907460486) ^ 0xC9E9407A;
  v71 = v70 - ((2 * v70) & 0xF741FEF4);
  v72 = byte_18CF35C60[v34[6] ^ 0xCDLL] ^ 0x93;
  v73 = (((v72 - ((2 * v72) & 0x1A8)) << 8) - 688925696) ^ 0xD6EFD400;
  v74 = (v68 - ((2 * v68) & 0x148E6E50) - 1975044312) ^ 0x8A473728 | (v73 - ((2 * v73) & 0x17FDAC00) - 872491500) ^ 0xCBFED614;
  v75 = byte_18CF35C60[v34[2] ^ 0xD4] ^ 0x47;
  v76 = (((v75 - ((2 * v75) & 0x11C)) << 8) + 1891995136) ^ 0x70C58E00;
  v77 = v34[1];
  LODWORD(v53) = -1468674499
               - ((v77 ^ 0x6DBAFAA2)
                + 2 * (v77 ^ 0x5D))
               - ((1534457496 - 2 * ((v77 ^ 0x6DBAFAA2) + 2 * (v77 ^ 0x5D))) & 0x7575A5E2);
  v78 = (v77 ^ 0x10) - ((2 * (v77 ^ 0x10)) & 0x74) - 2072438726;
  LODWORD(v53) = byte_18CF2D280[(v78 ^ v53 ^ 0xA18C5BE7 ^ ((v78 ^ 0x7B86E7C5)
                                                                       - ((2 * (v78 ^ 0x7B86E7C5) + 2) & 0x3E9F2258)
                                                                       + 525308205))
                              + 77];
  HIDWORD(v44) = ~(_DWORD)v53;
  LODWORD(v44) = (v53 ^ 0xFFFFFF9F) << 24;
  *(_QWORD *)(v35 - 208) = v34;
  LODWORD(v37) = (v44 >> 27) - ((2 * (v44 >> 27)) & 0x1A) - 115;
  v79 = (v76 - ((2 * v76) & 0x628CC200) + 826696125) ^ 0x314661BD | (v55 - ((2 * v55) & 0x36C949E2) - 1687902991) ^ 0x9B64A4F1;
  LODWORD(v37) = ((((v37 ^ 0x59) - ((2 * (_DWORD)v37) & 0x4C)) << 16) - 853147648) ^ 0xCD260000;
  v80 = (v37 - ((2 * v37) & 0x1AE60000) + 1299415180) ^ 0x4D73808C | (v79 - ((2 * v79) & 0x4FE5DC70) - 1477251528) ^ 0xA7F2EE38;
  LODWORD(v37) = byte_18CF35C60[v34[14] ^ 0x4ELL] ^ 0xF6;
  LODWORD(v37) = ((((_DWORD)v37 - ((2 * (_DWORD)v37) & 0x1C8)) << 8) + 1425597440) ^ 0x54F8E400;
  HIDWORD(a24) = (v37 - ((2 * v37) & 0x58098200) - 1408974354) ^ 0xAC04C1EE;
  LODWORD(v37) = ((v71 - 73334918) ^ 0xFBA0FF7A | HIDWORD(a24))
               - ((2 * ((v71 - 73334918) ^ 0xFBA0FF7A | HIDWORD(a24))) & 0x84020B12)
               + 1107363209;
  LODWORD(v53) = ((2 * v37) ^ 0x9F25AE8A) - ((2 * ((2 * v37) ^ 0x9F25AE8A)) & 0x123D5378) + 958310844;
  *(_DWORD *)(v35 - 216) = (2 * v74) & 0xD03C0FA2;
  *(_DWORD *)(v35 - 224) = v74 + 1746798545;
  *(_DWORD *)(v35 - 232) = v80 - 2128846527;
  *(_DWORD *)(v35 - 228) = (2 * v80) & 0x238C282;
  *(_DWORD *)(v35 - 240) = (2
                          * ((((v37 ^ 0x4F92D745) + 227791549) ^ 0xBFAF4FEF)
                           + ((2 * ((v37 ^ 0x4F92D745) + 227791549)) & 0x7F5E9FDE)
                           + (v53 & 0x1B27A57A ^ 0x1906C25B)
                           + ((2 * v53) & 0x364F0830 ^ 0xCDF2FFCF))
                          + 10525022) & 0x958B50C;
  LODWORD(a22) = v32;
  v81 = *(_BYTE **)(v35 - 200);
  v82 = *v81;
  *v81 = v82 ^ 0x55;
  v83 = 2014341611 * ((v82 ^ 0x6FFBFF4E) + ((2 * v82) & 0x9C)) + 501705505;
  v84 = (v83 ^ 0xBD9D4F59) + 1113764007 + ((2 * v83) & 0x7B3A9EB2);
  v85 = v84 % 0x101 + 282271771 + (~(2 * (v84 % 0x101)) | 0xFFFFFFCB);
  v86 = (v85 & 0x28 ^ 9) - (v85 & 0x46) + 277211221;
  v87 = (((2 * (v85 & 0x191 ^ 0x110)) | 0x48497066) - (v85 & 0x191 ^ 0x110) + 1541097421) ^ 0x2D847813;
  v88 = ((v84 & 0x9C9C2391) - ((2 * v84) & 0x10084022) + 1761983513) ^ 0xBA280EA7 ^ (((2 * v87) & 0x4AE518C2)
                                                                                   - v87
                                                                                   + 1519219614) | ((v84 & 0x6363DC6E)
                                                                                                  - ((2 * v84) & 0xC686988C)
                                                                                                  + 2002480214) ^ 0x5DE3D5BF ^ ((v86 & 0x80AAF8 ^ 0x281810B9) + (v86 ^ 0x12A1AB44) - ((v86 ^ 0x12A1AB44) & 0x44AF8));
  v89 = ((v88 - ((2 * v88) & 0x5C380026) - 1373896685) ^ 0x5EFF4A7A) - 828153160;
  v90 = (v89 ^ 0x180FFF76) + 2078559509 + ((2 * v89) & 0x301FFEEC) - 403701622;
  v91 = v90 - ((2 * v90) & 0x9D1743AA) - 829709867;
  v92 = (v91 ^ 0xA2A5FF3) + 1970758880 - ((2 * ((v91 ^ 0xA2A5FF3) - 253539735)) & 0x92834EE);
  v93 = (v91 ^ 0xA2A5FF3) + 909559972 + (~(2 * ((v91 ^ 0xA2A5FF3) - 828153160)) | 0x30D93427);
  v94 = (((v91 ^ 0xA2A5FF3) + 520106715 - ((2 * (v91 ^ 0xA2A5FF3)) & 0x3E0065B6)) ^ 0x1F0032DB) >> 31;
  v95 = ((2 * v94) & 0xF7AFFF2A) + (v94 ^ 0x7BD7FF95);
  v96 = (((2 * (v95 + 107)) & 0x1F4) + ((v95 + 107) ^ 0x1CFFFFFA) - 486539258) % 0xBD;
  v97 = v95 + (v96 ^ 0xFFFFFF21) - ((2 * v96) & 0xBC) + 74;
  v98 = ((2 * v96) & 0xFE) + (v96 ^ 0x53FFCD7F) + ((2 * v97) & 0x1F0);
  v99 = v98
      + (v97 ^ 0xFD7FDDF8)
      - ((2 * (v98 + (v97 ^ 0xFD7FDDF8)) + 1560324370) & 0x92952C54)
      + 2009787059;
  v100 = v91 ^ 0x8F34A361;
  v101 = v99 ^ (((2 * v91) ^ 0x1454BFE6) - 2 * (((2 * v91) ^ 0x1454BFE6) & 0x69E6499C ^ (2 * v91) & 0x18) - 370783867);
  v102 = v92 ^ 0x84941A77;
  v103 = 2 * (((v101 ^ 0x20ACDFAF) & v102) - ((2 * ((v101 ^ 0x20ACDFAF) & v102)) & 0x1D95C880)) - 1651128192;
  v104 = (v92 ^ 0xA438C5D8 ^ v101) + (v103 ^ 0x63706F28) + 18503768 + ((2 * v103) & 0xFDCB4F50 ^ 0x390B0100);
  v105 = v100 ^ (v93 + 1) ^ 0x93AF4209 ^ (v104 - ((2 * v104) & 0x158D2CC4) + 180786786);
  v106 = v105 - ((2 * v105 + 2084372786) & 0xD319264A) + 665523134;
  v107 = (v32 + 1692156007) > 0x4C69B2FD;
  if ((v32 + 1692156007) < 0x4C69B2FC)
    v107 = 1;
  v108 = (((v106 ^ 0x698C9325) + v102) ^ 0xF7FAE7F9)
       + ((2 * v106) ^ 0x7E3B36FB)
       + ((4 * v106) & 0xA5BBDE9C ^ 0x5BCDB36B)
       + ((2 * ((v106 ^ 0x698C9325) + v102)) & 0xEFF5CFF2)
       + 1;
  v109 = v100 ^ 0x63A6CCD6 ^ v106;
  v110 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(int)((47 * v107) ^ v36)] - 12);
  HIDWORD(a27) = (v64 - ((2 * v64) & 0xC5757562) - 491078991) ^ 0xF9769E05;
  return v110(902172332, v36, v110, v108 - ((2 * v108 + 902172332) & 0x59DDBC94) + 131196320, (v36 - 675), v109, 876751309, 47, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

void sub_18CBBCC28()
{
  JUMPOUT(0x18CBBC628);
}

uint64_t sub_18CBBCC34()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (28 * ((v2 ^ 0x3F6FDFD6) + (v0 & 0x7EDFBFA0) == 1064296406))))
                            - 8))();
}

uint64_t sub_18CBBCC3C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;

  *(_DWORD *)(v6 - 228) = *(_DWORD *)(v6 - 232) - *(_DWORD *)(v6 - 228);
  v7 = **(unsigned __int8 **)(v6 - 200) ^ 0xB728133D;
  v8 = v7 & 0x65 ^ 0x25;
  v9 = ((v7 & 0xFFFFFF9A ^ 9) + 63) ^ 0x50 | v8;
  v10 = (v5 ^ 0x698C9325) + 1770820389 - ((2 * (v5 ^ 0x698C9325) + 2) & 0xD319264A) + 1;
  v11 = (v9 - 2 * (v9 & 0x17 ^ v8 & 1) - 106) ^ 0xC3;
  v12 = a4 ^ 0xE06DE71C ^ (v11 - ((2 * v11) & 0xAC) + 1283668310);
  v13 = ((4 * ((v10 >> 1) & 1)) | 0x309E6F21) - (v10 & 3);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(qword_1E2538EC0[(73
                                                                                     * ((v13 & 0x1C ^ 0xC340800C)
                                                                                      + (v13 ^ 0x3C2D1910)
                                                                                      - ((v13 ^ 0x3C2D1910) & 0x800621C) != -940338132)) | (a5 + 104)]
                                                                    - 4))(23, 195, 172, v12 - ((2 * v12 + 332235984) & 0x59DDBC94) - 153771854);
}

void sub_18CBBCDD0()
{
  JUMPOUT(0x18CBBCCD0);
}

uint64_t sub_18CBBCDE0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD, _QWORD *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v21 = (**(unsigned __int8 **)(v20 - 208) ^ 0x7FFFDDFB)
      + ((**(unsigned __int8 **)(v20 - 208) << ((a5 - 96) & 0xF3 ^ 0x51)) & 0x1F6)
      + 2026900469;
  v22 = v19 ^ 0xA007B287 ^ (1577634329 * v21 - ((-732535794 - 1139698638 * v21) & 0x93164344) - 1279896663);
  v23 = v22 + ((v22 % 0x101) ^ 0xEF17FABF) + ((2 * (v22 % 0x101)) & 0x17E) + 283641153;
  v24 = (a4 ^ 0xD4406501 ^ (v23 - ((2 * v23) & 0xF15D7696) + 2024717131)) + (a6 ^ 0xF4D0EE74);
  v25 = (v24 ^ 0x76FF23F1) + v18 + ((2 * v24) & 0xEDFE47E2);
  v26 = v25 - ((2 * v25 + 418544366) & 0xB1DDBC68) - 446162005;
  v27 = (v26 ^ 0x53EF10B8) + v18 - ((2 * ((v26 ^ 0x53EF10B8) + v18) + 116441810) & 0x214376DA);
  v28 = (v26 ^ 0xAC10EF47)
      + (a6 ^ 0xF4D0EE74)
      - 1849816599
      - ((2 * ((v26 ^ 0xAC10EF47) + (a6 ^ 0xF4D0EE74))) & 0x237C13D2);
  HIDWORD(v29) = v26 ^ 0xC10EF47;
  LODWORD(v29) = v26 ^ 0xA0000000;
  v30 = a4 ^ 0xFE310D ^ v26;
  v31 = ((v29 >> 29) ^ 0xFB372BF7)
      + ((2 * (v29 >> 29)) & 0xF66E57EE)
      + (((v28 ^ 0x91BE09E9) + v30) ^ 0xA0A00880)
      - ((2 * ((v28 ^ 0x91BE09E9) + v30)) & 0xBEBFEEFE)
      + 1;
  v32 = v31 - ((2 * v31 - 934177008) & 0xAC36DDCC) - 1169933714;
  v33 = v32 ^ (v27 - 1810228010);
  v34 = v33 ^ 0xB73167FB ^ v28;
  v35 = (uint64_t (*)(_QWORD, _QWORD *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(int)a5 + 92] - 4);
  return v35(v35, qword_1E2538EC0, 4191141874, (v33 ^ 0xDEBDF4DE) + v30 - 1393631670 - ((2 * ((v33 ^ 0xDEBDF4DE) + v30)) & 0x59DDBC94), a5, v34, v32, 3562431502, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

void sub_18CBBD10C()
{
  JUMPOUT(0x18CBBCEACLL);
}

uint64_t sub_18CBBD11C@<X0>(int a1@<W8>)
{
  char v1;

  return ((uint64_t (*)(void))(qword_1E2538EC0[a1 | (14 * (v1 & 1))] - 8))();
}

uint64_t sub_18CBBD1B8@<X0>(int a1@<W8>)
{
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((14 * ((v1 + 1) & 1)) | a1)) - 8))();
}

uint64_t sub_18CBBD21C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unint64_t v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  void *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v194;
  unsigned int v195;

  v35 = (v32 - 402655048) & 0xFFFC755B;
  *(_DWORD *)(v34 - 232) = v35;
  v36 = (((v32 - 309) | 0x4C) ^ 0xCF1EB045)
      + 1016084021 * (a6 ^ 0xF8329ACC)
      - (((v35 ^ 0x9EDC1C33) * (a6 ^ 0xF8329ACC)) & 0x9E3D6232);
  v37 = (((-933363712 * (a4 ^ 0xACEEDE4A) - ((-1866727424 * (a4 ^ 0xACEEDE4A)) & 0xE4200000) - 233828719) ^ 0xF2100E91) & 0xFFFE0000 | ((1146020911 * (a4 ^ 0xACEEDE4A) - ((144558174 * (a4 ^ 0xACEEDE4A)) & 0x50DD21C8) + 678334692) >> 15)) ^ 0x50DD;
  v38 = v37 - ((2 * v37) & 0xF698E12A) + 2068607125;
  HIDWORD(v39) = v30 ^ 0x125;
  LODWORD(v39) = (-1610171903 * (v30 ^ 0x698C9325) + 1834706944 - ((1074623490 * (v30 ^ 0x698C9325)) & 0xDAB6D208) + 260) ^ 0x6D5B6800;
  v40 = ((-212945416 * v31 - ((1721592816 * v31 + 620180848) & 0x5D720E40) - 2127257124) ^ 0xAEB90724) & 0xFFFFFFF8 | ((-26618177 * v31 - ((-53236354 * v31 - 1264654674) & 0xE51587AE) + 1289369390) >> 29);
  v41 = ((2 * v40) & 0x9BFFCFFA ^ 2) + (v40 ^ 0xCDFFE7FE);
  v42 = (((-1875495680 * (a6 ^ 0xF8329ACC) - ((7105024 * (a6 ^ 0xF8329ACC)) & 0x14AE9800) + 173493346) ^ 0xA574C62) & 0xFFFFFF00 | HIBYTE(v36)) ^ 0xCF;
  v43 = v42 - ((2 * v42) & 0xEEC0EC5E) + 2002810415;
  v44 = 14579667 * (v43 ^ 0x7760762F) - ((29159334 * (v43 ^ 0x7760762F)) & 0xCB65EE62) + 1706227505;
  v45 = 1524019463 * v41 - ((900555278 * v41 + 507082282) & 0x55EA199C) - 1173239837;
  v46 = v38 ^ 0x7B4C7095;
  v47 = 1123232339 * (v38 ^ 0x7B4C7095) - ((-2048502618 * (v38 ^ 0x7B4C7095)) & 0xFD702862) + 2125993009;
  v48 = HIBYTE(v44);
  v49 = (v38 ^ v43 ^ 0x4049773 ^ ((v39 >> 9) - ((2 * (v39 >> 9)) & 0x10512392) + 136876489)) - v41 - 838866947;
  v50 = ((2 * v49) & 0xF7B3DCF6) + (v49 ^ 0xFBD9EE7B);
  v51 = 1087408779 * v50 - ((-2120149738 * v50 - 2074449298) & 0x910413C4) + 179257113;
  v52 = ((-1592453632 * v50 - ((1110060032 * v50 + 886365184) & 0x4194A400) + 2067054634) ^ 0x20CA522A) & 0xFFFFFE00 | (v51 >> 23);
  v53 = ((2 * v52) & 0x6BFC7A3A ^ 0x222) + (v52 ^ 0x35FE3C8C);
  v54 = ((710082560 * v46 - ((1420165120 * v46) & 0x85120000) - 1031169849) ^ 0xC28998C7) & 0xFFFF0000 | HIWORD(v47);
  v55 = ((-562572544 * (v43 ^ 0x7760762F) - ((485467648 * (v43 ^ 0x7760762F)) & 0x1EDBA000) + 258855165) ^ 0xF6DD0FD) & 0xFFFFFF00 | HIBYTE(v44);
  v56 = ((2 * v55) & 0xB76BFF36 ^ 2) + (v55 ^ 0xDBB5FFFE);
  v57 = (1800962944 * v41 - ((1454442240 * v41 + 482022656) & 0x50806E00) + 916308436) ^ 0x9E3F4AF7 ^ (((v45 >> 25) ^ 0x20000015) - ((2 * ((v45 >> 25) ^ 0x20000015)) & 0x46) + 377453987);
  v58 = -940840365 * v57 - ((265802918 * v57) & 0x15C56B36) - 1964853861;
  v59 = (v54 ^ 0x67E31166)
      + ((2 * v54) & 0xCFC6DFBC ^ 0xDD30)
      + v56
      + ((v57 - 905854237 + v53) ^ 0x8440A830)
      - ((2 * (v57 - 905854237 + v53)) & 0xF77EAF9E)
      + 1;
  HIDWORD(v39) = ~(v51 >> 23);
  LODWORD(v39) = (738402791 * v53 - ((1476805582 * v53 + 482229162) & 0x4789F02C) - 232516117) ^ 0x23C4F816;
  v60 = ((2 * (v39 >> 1)) & 0xD90F8BAE) + ((v39 >> 1) ^ 0x6C87C5D7);
  v61 = 696254464 * v57 - ((318767104 * v57) & 0x1D000000) - 1899990395;
  HIDWORD(v39) = v48 ^ 1;
  LODWORD(v39) = (1342801329 * v56 - ((-1609364638 * v56 + 970423722) & 0xBB88C2EE) + 2058362956) ^ 0x5DC46174;
  v62 = ((2 * (v39 >> 2)) & 0x37DBFFFC) + ((v39 >> 2) ^ 0x1BEDFFFE) + v60;
  v63 = 378602653 * v60 - ((757205306 * v60 - 1850040758) & 0x8BF31A9E) + 248962164;
  v64 = (((-423624704 * v59 - ((-847249408 * v59 + 150994944) & 0x85800000) + 1199003653) ^ 0xC2F75805) & 0xFFC00000 | ((-1077198949 * v59 - ((127303478 * v59 + 44411940) & 0x6BFD636) + 1018347821) >> 10)) ^ 0x20D7FA;
  v65 = v64 - ((2 * v64) & 0x9CCD0286) + 1315340611;
  v66 = ((2 * ((v61 ^ 0x8EC07285) & 0xFF800000 | (v58 >> 9))) & 0xA7BEFCB0 ^ 0x8AE0B0)
      + (((v61 ^ 0x8EC07285) & 0xFF800000 | (v58 >> 9)) ^ 0x539A0F02);
  v67 = (v65 ^ (v62 - 1318088276 + (~(2 * v62 + 1863611478) | 0x8C3550FF)) ^ 0x7783D6C3) - v66 + 1407155800;
  v68 = -1660944384 * v60 - ((973078528 * v60 + 1241513984) & 0x42000000) + 1188016200;
  v69 = (((800795648 * (((2 * v67) & 0xF83BFDFA) + (v67 ^ 0xFC1DFEFD))
         - ((1601591296 * (((2 * v67) & 0xF83BFDFA) + (v67 ^ 0xFC1DFEFD)) + 1153107968) & 0x9AF61800)
         - 271019840) ^ 0xCD7B0CC0) & 0xFFFFFC00 | ((1783361227 * (((2 * v67) & 0xF83BFDFA) + (v67 ^ 0xFC1DFEFD))
                                                   - ((345496982 * (((2 * v67) & 0xF83BFDFA) + (v67 ^ 0xFC1DFEFD))
                                                     + 907095746) & 0x23FC9F6A)
                                                   + 1292298006) >> 22)) ^ 0x247;
  v70 = v69 - ((2 * v69) & 0x169B4FB6) + 189638619;
  v71 = (-2089625072 * v66 - ((115717152 * v66 + 176313600) & 0x9F62BA0)) & 0xFFFFFFF0 | ((137833889 * v66
                                                                                         - ((275667778 * v66 + 614999376) & 0x801D2BE2)
                                                                                         - 765286247) >> 28);
  v72 = (((-2044743680 * (v65 ^ 0x4E668143) - ((205479936 * (v65 ^ 0x4E668143)) & 0x2C696000) - 1774928729) ^ 0x9634BCA7) & 0xFFFFF000 | ((-1160224261 * (v65 ^ 0x4E668143) - ((95470582 * (v65 ^ 0x4E668143)) & 0xAD86E1C) - 2056505586) >> 20)) ^ 0x856;
  v73 = v72 - ((2 * v72) & 0x57D929E2) - 1410558735;
  v74 = ((v68 ^ 0x21CFB048) & 0xFF000000 | (v63 >> 8)) ^ 0x45F98D;
  v75 = v74 - ((2 * v74) & 0x362838C4) + 454302818;
  v76 = ((2 * ((v75 ^ 0x1B141C62) + (v73 ^ 0x54136B0E) + 1)) & 0x4BFF21F6)
      + (((v75 ^ 0x1B141C62) + (v73 ^ 0x54136B0E) + 1) ^ 0xA5FF90FB);
  v77 = (v76 - ((2 * v76 + 642319456) & 0x968569D2) - 563661031) ^ v70;
  v78 = (((2 * v77) ^ 0x801E2664) - ((2 * ((2 * v77) ^ 0x801E2664)) & 0x7B20BCC) + 131663334) & 0x6839368 ^ 0x31228;
  v79 = v78 - ((2 * v78) & 0x70090) + 947104859;
  v80 = v75 ^ (((v71 - 1438891952) ^ 0x84FB15DC) - ((2 * ((v71 - 1438891952) ^ 0x84FB15DC)) & 0x5A50A8F4) - 1389865862) ^ v73;
  v81 = 2 * (((v79 ^ 0x3EF1BF13) & (v77 ^ 0xC34EDA86)) - ((2 * ((v79 ^ 0x3EF1BF13) & (v77 ^ 0xC34EDA86))) & 0x5681D74A))
      + 1451349834;
  LODWORD(a24) = v80;
  v82 = (v77 ^ 0xFDBF6595 ^ v79) + (v81 ^ 0xDDE62805) + 1956118705 + ((2 * v81) & 0x16CFFE9C ^ 0x403AE94);
  v83 = (v70 ^ v80 ^ 0xE96284CD) + (v82 ^ 0x7F5EBEFB) + ((2 * v82) & 0xFEBD7DF6) - 2136915706;
  v84 = ((2 * v83) & 0x3DBF3EEC) + (v83 ^ 0x1EDF9F76);
  LODWORD(a21) = v84 - 826046601;
  v85 = v84 - 826046601 - ((2 * v84 + 60208638) & 0x9F058F0);
  v86 = (v73 ^ 0xABEC94F1)
      + (v85 ^ 0x7B07D387)
      + 1839835111
      - ((2 * ((v73 ^ 0xABEC94F1) + (v85 ^ 0x7B07D387) + 1)) & 0xDB534FCC);
  v87 = 880936289 * (v85 ^ 0x84F82C78) - ((688130754 * (v85 ^ 0x84F82C78)) & 0x3688C150) - 1690017624;
  v88 = (v87 & 0xEAE83807 ^ 0x9F57E7F8) + 476427202 + ((2 * (v87 & 0xEAE83807 ^ 0x9F57E7F8)) & 0x10C06002 ^ 0xD7F4F87F);
  v89 = ((v87 & 0x1517C7F8 ^ 0x14174070) - ((2 * (v87 & 0x1517C7F8 ^ 0x14174070)) & 0x202B0EA0) - 126501033) ^ 0xF836AFDC;
  v90 = (v89 | 0xED61858E) - (v89 | 0x129E7A71) + 312375921;
  HIDWORD(v39) = v88 ^ 0x1B3C1;
  LODWORD(v39) = v88 ^ 0x1C640000;
  v91 = (v39 >> 18) - ((2 * (v39 >> 18)) & 0x7F310734) + 1066959770;
  HIDWORD(v39) = v90 ^ 0x195DD;
  LODWORD(v39) = v90 ^ 0xE8300000;
  v92 = ((v39 >> 18) - ((2 * (v39 >> 18)) & 0xDA2DE77E) - 317262913) ^ v91;
  HIDWORD(v39) = v92 ^ 0x911;
  LODWORD(v39) = v92 ^ 0xC46D4000;
  v93 = (v39 >> 14) - ((2 * (v39 >> 14)) & 0xDA41A0BE) + 1830867039;
  HIDWORD(v39) = v93 ^ 0xF08BD3;
  LODWORD(v39) = v93 ^ 0x89000000;
  v94 = (v39 >> 24) - ((2 * (v39 >> 24)) & 0xFFA6B290) - 2926264;
  HIDWORD(v39) = v94 ^ 0x5D;
  LODWORD(v39) = v94 ^ 0xE814A100;
  v95 = v39 >> 8;
  v96 = v95 + 2011399270;
  v97 = v95 + 2011399270 - ((2 * v95) & 0xEFC708CC);
  LODWORD(a23) = v85 ^ v70 ^ v80;
  LODWORD(a28) = v85 ^ v70;
  v98 = -1415786763 * (a28 ^ 0x8FB58BA3) - ((1463393770 * (a28 ^ 0x8FB58BA3)) & 0xB5817192) + 1522579657;
  v99 = -856731648 * (v85 ^ v70 ^ 0x8FB58BA3) - ((-1713463296 * (v85 ^ v70 ^ 0x8FB58BA3)) & 0xBF780000) + 1606156402;
  v100 = (((251002880 * (a23 ^ 0x9265574A) - ((502005760 * (a23 ^ 0x9265574A)) & 0xF2E40000) + 2037545418) ^ 0x797279CA) & 0xFFFE0000 | ((2068940667 * (a23 ^ 0x9265574A) - ((-157085962 * (a23 ^ 0x9265574A)) & 0xA9B9CA34) - 723720934) >> 15)) ^ 0x1A9B9;
  v101 = v100 - ((2 * v100) & 0xAFCE945A) - 672708051;
  v102 = ((2 * (v99 ^ 0x5FBC0072 | (v98 >> 20))) & 0xE5FEF7BC ^ 0x318) + ((v99 ^ 0x5FBC0072 | (v98 >> 20)) ^ 0x72FF7E72);
  HIDWORD(v39) = v96 ^ 2;
  LODWORD(v39) = v97 ^ 0x77E38464;
  v103 = (((((~(50331648 * (v86 ^ 0x6DA9A7E6)) | 0xF7FFFFFF) - 780140544 * (v86 ^ 0x6DA9A7E6) + 70333539) | 1) ^ 0x4313463) & 0xFF800000 | ((-1027952221 * (v86 ^ 0x6DA9A7E6) - ((91579206 * (v86 ^ 0x6DA9A7E6)) & 0x73C4ABF6) + 971134459) >> 9)) ^ 0x1CF12A;
  v104 = v103 - ((2 * v103) & 0x3D195EA8) + 512536404;
  v105 = (v104 ^ 0xA830A352 ^ ((v39 >> 2) - ((2 * (v39 >> 2)) & 0x6D78180C) - 1229190138)) - v102;
  v106 = v101 ^ 0x6D2144FC ^ (v105 - ((2 * v105 + 1711208380) & 0x758C1DA2) + 767920815);
  v107 = 1389985351 * v106 - ((632487054 * v106) & 0x2FD8BBAC) + 401366486;
  v108 = -1849688064 * v106 - ((595591168 * v106) & 0xE0FFFFFF) + 1886317990;
  v109 = v104 ^ 0x1E8CAF54;
  v110 = -79426321 * (v104 ^ 0x1E8CAF54) - ((914889182 * (v104 ^ 0x1E8CAF54)) & 0x2B87CE14) + 365160202;
  v111 = ((2 * (v108 ^ 0x706EEDA6 | (v107 >> 10))) & 0x97FBFDDE ^ 0xBF40E)
       + ((v108 ^ 0x706EEDA6 | (v107 >> 10)) ^ 0x4BF805F8);
  v112 = ((1753325024 * v109 - ((285424576 * v109) & 0x1D4B2480) - 1901751734) ^ 0x8EA5924A) & 0xFFFFFFE0 | (v110 >> 27);
  v113 = ((1224502400 * (v101 ^ 0xD7E74A2D) - ((-1845962496 * (v101 ^ 0xD7E74A2D)) & 0x93502300) - 911732259) ^ 0xC9A811DD) & 0xFFFFFF80 | ((-594413351 * (v101 ^ 0xD7E74A2D) - ((-1188826702 * (v101 ^ 0xD7E74A2D)) & 0xCF11CCA6) + 1737025107) >> 25);
  v114 = ((2 * v113) & 0x7E8DEF74 ^ 0x64) + (v113 ^ 0x3F46F789);
  v115 = ((911135744 * v102 - ((1822271488 * v102 + 932204544) & 0x5F377000) + 191094962) ^ 0x2F9BB8B2) & 0xFFFFFC00 | ((2005767093 * v102 - ((253437802 * v102 + 65922068) & 0x8E80030) + 376107554) >> 22);
  v116 = ((2 * v115) & 0xFFFDDF6E ^ 0x422) + (v115 ^ 0x7FFEEDA6);
  v117 = v114 - v116 + (v112 ^ 0xFBEDD76E) + ((2 * v112) & 0xF7DBAED8) - v111 - 292945305;
  v118 = 50301917 * v117 - ((100603834 * v117 - 291151062) & 0xC5E3B772) + 1514442062;
  v119 = 1946157056 * v117 - ((-402653184 * v117 - 1476395008) & 0xB0000000) - 1371008777;
  v120 = ((v118 >> 5) & 0x7BFFED4 ^ 0x3178ED4) + ((v118 >> 6) ^ 0xF6543804);
  v121 = v120
       + (((v120 + 136315030) | v119 ^ 0x5A4810F7) ^ 0x92A49000)
       - ((2 * ((v120 + 136315030) | v119 ^ 0x5A4810F7)) & 0xDAB6DFFE)
       + 1;
  v122 = (v119 ^ ((v119 ^ 0xA5B7EF08) - ((2 * (v119 ^ 0xA5B7EF08) + 2) & 0x60000000) + 805697192) ^ 0x6489A425 ^ (v121 - ((2 * v121 + 183951658) & 0x1D8884EA) - 2076200182))
       + v120
       + 136315030;
  v123 = ((2 * v122) & 0x77ACFF9A) + (v122 ^ 0x3BD67FCD);
  v124 = (((~(-1980411904 * v116 - 67907584) | 0x4DC38FFF) - 990205952 * v116 + 1461199573) ^ 0xD91E3AD4) & 0xFFFFF800 | ((850960213 * v116 - ((1701920426 * v116 + 1071611514) & 0x5C35B7D2) + 1309317926) >> 21);
  v125 = v124 ^ 0x3FAE6F8E;
  v126 = (2 * v124) & 0x7F5CDDFC ^ 0xE0;
  v127 = (((~(386451328 * v111 + 526172032) | 0xC5330B7F) - 880516160 * v111 + 1830083119) ^ 0x9D667A6E) & 0xFFFFFFC0 | ((-2094132849 * v111 - ((106701598 * v111 + 645755646) & 0xBED1A18E) + 1923582534) >> 26);
  v128 = ((2 * v127) & 0xB7752FEC ^ 0x6C) + (v127 ^ 0x5BBA97C1);
  v129 = (((543529984 * v114 - ((1087059968 * v114 - 1991159808) & 0xD655A800) + 802389429) ^ 0x6B2AD5B5) & 0xFFFFFC00 | ((-1077405337 * v114 - ((2140156622 * v114 - 1713220524) & 0x9890A0B8) - 1724286330) >> 22)) ^ 0x131;
  v130 = v129 - 377758255;
  v131 = v129
       - 377758255
       - 2
       * (v129 & 0x697BDDCF ^ ((-1077405337 * v114 - ((2140156622 * v114 - 1713220524) & 0x9890A0B8) - 1724286330) >> 22) & 0xC)
       - 14;
  v132 = (v125
        + v126
        + v128
        - v123
        - 70783884
        - ((2 * (v125 + v126 + v128 - v123 - 70783884) + 1229658314) & 0xC98CAFE2)
        + 158065750) ^ v131;
  v133 = -1223029457 * (v131 ^ 0xE97BDDC3) - ((775166558 * (v131 ^ 0xE97BDDC3)) & 0x2C48556E) + 371468983;
  v134 = ((v130 << 30) | 0xBFFFFFFF) + (v131 << 29) + 1586303823;
  v135 = ((1629226368 * v128 - ((37227264 * v128 + 296250880) & 0x1FB0F300) - 1196642073) ^ 0xFD879E7) & 0xFFFFFF80 | ((-893241333 * v128 - ((-1786482666 * v128 - 224177956) & 0xF4422212) - 210585225) >> 25);
  v136 = ((2 * v135) & 0x7C6B7DEE ^ 0xEA) + (v135 ^ 0xBE35BE8A);
  v137 = (v134 ^ 0xBE8D134E) & 0xE0000000 | (v133 >> 3);
  v138 = v137 ^ 0x652AB81D;
  v139 = (2 * v137) & 0xCFDC7A96 ^ 0x5880A84;
  v140 = (((v132 << 29) ^ 0xA0000000) + 728030612) & 0xE0000000 | ((1305977431 * (v132 ^ 0x8DBD8A32)
                                                                  - ((-1683012434 * (v132 ^ 0x8DBD8A32)) & 0xA70ACE92)
                                                                  + 1401251657) >> 3);
  v141 = ((2 * v140) & 0xEDDAF2A4 ^ 0x4C05080) + (v140 ^ 0x7C9DD5BB);
  HIDWORD(v39) = v123 + 3;
  LODWORD(v39) = (417622369 * v123 - ((835244738 * v123 - 1653277530) & 0xD74B4CEE) + 979379402) ^ 0xEBA5A670;
  v142 = (v39 >> 4) - ((2 * (v39 >> 4)) & 0x587A18E) + 46387399;
  v143 = ((v138 + v139 - 1743666507 + (v142 ^ 0x2C3D0C7)) ^ 0x6DFF5ED5)
       - v136
       + ((2 * (v138 + v139 - 1743666507 + (v142 ^ 0x2C3D0C7))) & 0xDBFEBDAA)
       - v141
       - 1778282080;
  v144 = v143 - ((2 * v143 + 1648660392) & 0x5CCB98A4) - 544730074;
  v145 = -1879407275
       * (((2 * (v136 + 1103773962 + (v142 ^ 0xFD3C2F38))) & 0xA9FCF4BE)
        + ((v136 + 1103773962 + (v142 ^ 0xFD3C2F38)) ^ 0xD4FE7A5F))
       - v141;
  v146 = (v145 - ((2 * v145 - 299173490) & 0xC6F4C878) + 1519378691) ^ v144;
  v147 = (v146 ^ 0x9A566A04) - 2 * (((v146 ^ 0x9A566A04) + 523163008) & 0x2F4A80FE ^ v146 & 0x10) + 242833006;
  v148 = v147 ^ 0x2F4A80EE;
  v149 = 2133795187 * (v147 ^ 0x2F4A80EE) - ((-27376922 * (v147 ^ 0x2F4A80EE)) & 0xABE2DB24) + 1441885586;
  v150 = v147 ^ v142;
  LODWORD(v194) = v147 ^ v144;
  HIDWORD(v194) = v147;
  v151 = v147 ^ v144 ^ 0x812F4CBC;
  v195 = (v147 ^ 0xD0B57F11) + v141 - ((2 * ((v147 ^ 0xD0B57F11) + v141) + 304418142) & 0xFBE3FF62) - 2029746592;
  LODWORD(a29) = v150;
  v152 = -536870912 * ((3 * (v150 ^ 0x29)) & 3) + 805306368 * (v150 ^ 0x2D895029);
  v153 = -712382909 * (v150 ^ 0x2D895029) - ((722717830 * (v150 ^ 0x2D895029)) & 0x3E2F3BE4) - 1625842190;
  v154 = (((374975488 * v151 - ((749950976 * v151) & 0x4BBB7000) - 1512195546) ^ 0xA5DDBA26) & 0xFFFFFC00 | ((205887083 * v151 - ((411774166 * v151) & 0x9744B484) - 878552510) >> 22)) ^ 0x32E;
  v155 = v154 - ((2 * v154) & 0x463739EC);
  v156 = ((-54753844 * v148 - ((-109507688 * v148) & 0xEC0D7100) - 167331711) ^ 0xF606B881) & 0xFFFFFFFC | (v149 >> 30);
  v157 = v156 ^ 0x41F7AFFC;
  v158 = (2 * v156) & 0x83EF5FFA;
  v159 = ((v152 + 1015287289) ^ 0x3C840DF9) & 0xF0000000 | (v153 >> 4);
  v160 = ((2 * v159) & 0xBFEF2FCE ^ 0x13E2238E) + (v159 ^ 0x5606EE38);
  v161 = v155 - 1558471434;
  v162 = v158 ^ 2;
  v163 = ((-113947008 * (v195 ^ 0xFDF1FFB1) - ((845847808 * (v195 ^ 0xFDF1FFB1)) & 0x344B6200) + 438677818) ^ 0x1A25B13A) & 0xFFFFFF80 | ((-1712166243 * (v195 ^ 0xFDF1FFB1) - ((870634810 * (v195 ^ 0xFDF1FFB1)) & 0x624C8126) + 824590483) >> 25);
  v164 = ((2 * v163) & 0xB3BF97EE ^ 0x20) + (v163 ^ 0xD9DFCBEF);
  v165 = v161 ^ (v157
               + v162
               - v160
               - v164
               - 1684432927
               - 2
               * ((v157 + v162 - v160 - v164 - 136334367) & 0x49A2E8DF ^ (v157 + v162 - v160 - v164 - 1684432927) & 0x19)
               - 1511455546);
  v166 = (((1744830464 * (v165 ^ 0xEAB97430) - ((-805306368 * v165) & 0xC0000000) - 536543939) ^ 0xE004FD3D) & 0xF8000000 | ((391565357 * (v165 ^ 0xEAB97430) - ((783130714 * (v165 ^ 0xEAB97430)) & 0xCFCE9532) - 404272487) >> 5)) ^ 0x73F3A54;
  v167 = v166 - ((2 * v166) & 0x3AE0755A) - 1653589331;
  v168 = (((-1526726656 * v160 - ((1241513984 * v160 + 973078528) & 0xF4000000) - 1747656280) ^ 0x7AD4E1A8) & 0xFF000000 | ((1924794533 * v160 - ((-445378230 * v160 + 1504428090) & 0x9EFA49BA) + 2085815546) >> 8)) ^ 0x4F7D24;
  v169 = v168 - ((2 * v168) & 0xEE614D0) - 2022503832;
  v170 = ((-1690698368 * (v161 ^ 0xA31B9CF6) - ((913570560 * (v161 ^ 0xA31B9CF6)) & 0x76727D00) + 993607334) ^ 0x3B393EA6) & 0xFFFFFF80 | ((-482970629 * (v161 ^ 0xA31B9CF6) - ((107800566 * (v161 ^ 0xA31B9CF6)) & 0x126BF3BE) - 1992951329) >> 25);
  v171 = ((2 * v170) & 0xFFDBB79A ^ 0x88) + (v170 ^ 0xFFEDDB89);
  v172 = (((36826112 * v164 - ((73652224 * v164 + 1868732416) & 0x8457E800) - 102940143) ^ 0x422BF611) & 0xFFFFFC00 | ((1312853115 * v164 - ((-1669261066 * v164 + 1549523110) & 0xEC560138) - 1537676049) >> 22)) ^ 0x3D8;
  v173 = v172 - ((2 * v172) & 0x2410BE00) - 1844945152;
  v174 = v173 ^ 0x92085F00;
  v175 = 1193314462 * (v173 ^ 0x92085F00);
  v176 = 596657231 * (v173 ^ 0x92085F00) - (v175 & 0x9C449476) + 1310870075;
  v177 = v171 + 1188915 + (v169 ^ v173 ^ 0x880B6FC5 ^ v167);
  v178 = ((v175 - ((239145276 * v174) & 0x2E7D84C4) - 1757494685) ^ 0x973EC263) & 0xFFFFFFFE | (v176 >> 31);
  v179 = ((2 * v178) & 0xBFBDF4FE) + (v178 ^ 0x5FDEFA7F);
  v180 = ((-762533440 * (v167 ^ 0x9D703AAD) - ((-1525066880 * (v167 ^ 0x9D703AAD)) & 0x949F8C00) + 1246742037) ^ 0x4A4FC615) & 0xFFFFFFC0 | ((1598698151 * (v167 ^ 0x9D703AAD) - ((-1097570994 * (v167 ^ 0x9D703AAD)) & 0x9508256C) + 1250169526) >> 26);
  v181 = (((v177 << 31) - ((v177 ^ 0x39ABFDBE) << 30) + 1094433429) ^ 0xC13BBA95) & 0xC0000000 | ((-457433129
                                                                                                 * (((2 * v177) & 0x7357FB7C)
                                                                                                  + (v177 ^ 0x39ABFDBE))
                                                                                                 - ((158875566 * (((2 * v177) & 0x7357FB7C) + (v177 ^ 0x39ABFDBE)) + 446154460) & 0x10FE4BF4)
                                                                                                 - 1244984984) >> 2);
  v182 = ((2 * v181) & 0xDFBD9FFC ^ 0x443D92FC) + (v181 ^ 0x4DC10680);
  v183 = v179 - (((2 * v180) & 0xEB2BC7BE ^ 0x24) + (v180 ^ 0xF595E3CD));
  v184 = 2
       * (((v182 - 1876873214) & (v183 - 1783174816)) - ((2 * ((v182 - 1876873214) & (v183 - 1783174816))) & 0x14F7BA0))
       - 2125497440;
  v185 = ((-1809575680 * v171 - ((675815936 * v171 + 254199296) & 0x2A8B0E00) - 589763983) ^ 0x15458771) & 0xFFFFFF00 | ((-1584126959 * v171 - ((1126713378 * v171 + 495920838) & 0x6D8BAA7C) - 980588383) >> 24);
  v186 = v183
       - (((2 * v185) & 0xF3FEDFEE ^ 0x6C)
        + (v185 ^ 0xF9FF6FC1))
       + v182
       + (v184 ^ 0xA7CF118B)
       - 1833662383
       + ((2 * v184) & 0xB2FF2BA8 ^ 0xFD61DCFF);
  v187 = ((-117440512 * v186 - ((1912602624 * v186 + 1543503872) & 0x66666666) + 566496594) ^ 0x33C40D52 | ((202176761 * v186 - ((404353522 * v186 - 1587045412) & 0xEADA602C) + 1176567300) >> 8)) ^ 0x756D30;
  HIDWORD(a30) = v187 - ((2 * v187) & 0xA660D478) - 751801796;
  v188 = malloc(0x408uLL);
  *(_QWORD *)(v34 - 216) = v188;
  return ((uint64_t (*)(void *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * ((38 * (v188 != 0)) ^ v32)) - 8))(v188, 0, v189, v190, v191, v192, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           v194,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_18CBBF81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,unsigned int a33,int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  unsigned int v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unint64_t v138;
  int v139;
  int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  int v205;
  int v206;
  unsigned int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  int v221;
  int v222;
  unsigned int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  unsigned int v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  uint64_t v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unsigned int v244;
  unsigned int v245;

  v48 = ((v44 ^ v45)
       - 214451299
       + v46
       - 2 * (((v44 ^ v45) - 214451299 + v46) & 0x2A64384F ^ (v44 ^ v45) & 2)
       - 1436272563) ^ (((v42 - 235327160) & 0xFFFFFF7F) - ((2 * (v42 - 235327160)) & 0x24CB2656) - 1838836821);
  v49 = v48 ^ 0x2B92D797 ^ HIDWORD(a30);
  v50 = v48 ^ 0x754B7817;
  v51 = 2 * (((v48 ^ 0x754B7817) & (v44 ^ v45)) - ((2 * ((v48 ^ 0x754B7817) & (v44 ^ v45))) & 0x50B4826)) - 2062858202;
  HIDWORD(v243) = v48 ^ 0x2B92D797;
  v52 = (v44 ^ 0x57D83033 ^ v48 ^ 0x2B92D797) + (v51 ^ 0xBEE7B6D3) - 1005387509 + ((2 * v51) & 0x77D9FDE8 ^ 0x2109048);
  v53 = v52 - ((2 * v52) & 0x7F25218C) - 1080913722;
  v54 = (-1337075410 * (v48 ^ 0x754B7817)) & 0xF137444C;
  v55 = -122347593 * (v53 ^ 0xBF9290C6) - ((-244695186 * (v53 ^ 0xBF9290C6)) & 0x9BAE90A2) - 841529263;
  *(_DWORD *)(v47 - 224) = HIBYTE(v48) ^ 0x26DC3A4C;
  HIDWORD(a13) = (v41 ^ v40)
               + (v48 ^ 0x8AB487E8)
               + 1
               - ((2 * ((v41 ^ v40) + (v48 ^ 0x8AB487E8) + 1)) & 0x161F5D78)
               - 1961906500;
  v56 = ((-657676288 * (HIDWORD(a13) ^ 0x8B0FAEBC)
        - ((832131072 * (HIDWORD(a13) ^ 0x8B0FAEBC)) & 0x4D3EE000)
        - 1499499548) ^ 0xA69F73E4) & 0xFFFFF800 | ((-1810163307 * (HIDWORD(a13) ^ 0x8B0FAEBC)
                                                   - ((674640682 * (HIDWORD(a13) ^ 0x8B0FAEBC)) & 0xE8C662F6)
                                                   + 1952657787) >> 21);
  v57 = ((2 * v56) & 0x766E5FFE ^ 0x746) + (v56 ^ 0x3B372C5C);
  HIDWORD(v241) = v49;
  v58 = ((81629920 * v50 - ((163259840 * v50) & 0xE2B42140) - 245755741) ^ 0xF15A10A3) & 0xFFFFFFE0 | ((v54 - 1478945943 * v50 + 124018137) >> 27);
  v59 = ((1752367280 * (v49 ^ 0x8DE9C5BC) - ((283509088 * (v49 ^ 0x8DE9C5BC)) & 0x1346B6C0) - 1985782936) ^ 0x89A35B68) & 0xFFFFFFF0 | ((-1232654325 * (v49 ^ 0x8DE9C5BC) - ((1829658646 * (v49 ^ 0x8DE9C5BC)) & 0x626F9450) - 1321743832) >> 28);
  v60 = ((2 * v59) & 0xE9DDDBDE ^ 0x16) + (v59 ^ 0x74EEEDE4);
  HIDWORD(v239) = v53;
  v61 = (((((v53 << 31) - ((v53 ^ 0xBF9290C6) << 28)) & 0x80000000) - 1207959552 * (v53 ^ 0xBF9290C6) + 1138455247) ^ 0x43DB72CF) & 0xF8000000 | (v55 >> 5);
  v62 = ((2 * v61) & 0xFFECBF6E ^ 0xCCC3404) + (v61 ^ 0xF998E5F5);
  v63 = 1342177280 * v60 - ((-1610612736 * v60 - 1610612736) & 0xC0000000) + 971672754;
  v64 = (v58 ^ 0xF27A7BE7)
      + ((2 * v58) & 0xE4F4F7CE)
      - v60
      + v57
      + ((2 * v57 - 1986945022) ^ 0x30421)
      - ((2 * (2 * v57 - 1986945022)) & 0xFFF9F7BC)
      - v62
      + 2095857638;
  v65 = 750347751 * v62 - ((1500695502 * v62 + 1801117118) & 0x422E0572) + 1455714712;
  v66 = ((1520435200 * v64 - ((-1254096896 * v64 + 994050048) & 0xB3000000) + 1999568499) ^ 0xD98EFE73) & 0xFFE00000 | ((-1219675435 * v64 - ((1855616426 * v64 + 1871038938) & 0x798695AE) + 1954951108) >> 11);
  v67 = ((2 * v66) & 0xFF97BF4A ^ 0x73042) + (v66 ^ 0x7FCC47CC);
  v68 = (v63 & 0xF8C28032 ^ 0x173D7FCD) + (v63 ^ 0x1615734D) + ((v63 >> 28 << 29) ^ 0xC0000002);
  v69 = (v68 - ((2 * v68) & 0xCDC980C2) - 421216159) ^ (207109717 * v60
                                                      - ((414219434 * v60 - 1580844214) & 0x844BE1E4)
                                                      - 1828122985);
  v70 = (v55 >> 5 << 31) - (v62 << 30);
  v71 = 104925595 * v67 - ((209851190 * v67 - 1684302798) & 0xC4271E58) - 1344186043;
  v72 = ((v63 ^ 0xE9EA8CB2) & 0xF0000000 | (v69 >> 4)) ^ 0xA4C1309;
  v73 = v72 - ((2 * v72) & 0x509CF448) + 676231716;
  v74 = ((-1524891648 * v57 - ((1245184000 * v57 + 1245184000) & 0x59980000) + 300569524) ^ 0xACCE53B4) & 0xFFFC0000 | ((-1730565817 * v57 - ((833835662 * v57 + 464958094) & 0xA0A2ECB4) - 567488607) >> 14);
  v75 = ((2 * v74) & 0xFFEB74B6 ^ 0x20082) + (v74 ^ 0x7FF6FB1E);
  v76 = 1915976565 * (v73 ^ 0x284E7A24) - ((610727658 * (v73 ^ 0x284E7A24)) & 0x2FBABB4C) + 400383398;
  v77 = v75 - v67 - ((2 * (v75 - v67) - 5485932) & 0xDFE2A74C) - 272140048;
  v78 = ((2 * (v70 & 0xC0000000 | (v65 >> 2))) & 0xFEFFEBFE ^ 0x908B815C)
      + ((v70 & 0xC0000000 | (v65 >> 2)) ^ 0x373A3551);
  v79 = ((2 * ((v73 ^ 0xC7BF2982 ^ v77) - v78 + 2139092479)) & 0xFDBFBFF6)
      + (((v73 ^ 0xC7BF2982 ^ v77) - v78 + 2139092479) ^ 0x7EDFDFFB);
  v80 = 1811939328 * v67 - ((1476395008 * v67 + 1207959552) & 0x48000000) - 1990799519;
  LOBYTE(v67) = (v76 >> 10) & 0x16;
  v81 = -583008256 * (v73 ^ 0x284E7A24) - ((-1166016512 * (v73 ^ 0x284E7A24)) & 0xEC800000) + 1987171941;
  v82 = (((1145044992 * v79 - ((142606336 * v79 + 713031680) & 0x50800000) - 41462555) ^ 0xA84754E5) & 0xFFC00000 | ((1383441681 * v79 - ((619399714 * v79 + 136098474) & 0x739E9864) - 1109547641) >> 10)) ^ 0xE73D3;
  v83 = v82 - ((2 * v82) & 0x3CE4666C) + 510800694;
  v84 = ((344057825 * v78 - ((688115650 * v78 + 807494594) & 0x2E843B2A) + 793956214) ^ 0x97421D95) >> (v67 ^ 0x16);
  v85 = v84 - ((2 * v84) & 0x2DE0B632);
  v86 = ((2 * ((v80 ^ 0x2556CF61) & 0xFC000000 | (v71 >> 6))) & 0xEF6DDF9E ^ 0x7009C18)
      + (((v80 ^ 0x2556CF61) & 0xFC000000 | (v71 >> 6)) ^ 0x743EA1F3);
  v87 = ((2 * ((v81 ^ 0x7671D665) & 0xFFC00000 | (v76 >> 10))) & 0x3F59FDFA ^ 0x9ECAA)
      + (((v81 ^ 0x7671D665) & 0xFFC00000 | (v76 >> 10)) ^ 0x1FA909AA)
      + v86;
  v88 = v87 - ((2 * v87 + 288891496) & 0x2C4A0076) - 20901521;
  v89 = v83 ^ 0x1E723336;
  v90 = -1539020255 * (v83 ^ 0x1E723336) - ((1216926786 * (v83 ^ 0x1E723336)) & 0x5E6C6488) - 1355402684;
  v91 = ((((v85 + 384850713) ^ 0x16F05B19) >> v67)
       - ((2 * (((v85 + 384850713) ^ 0x16F05B19) >> v67)) & 0x660120D0)
       - 1291808664) ^ (127894528 * v78 - ((255789056 * v78 + 93259776) & 0x55D10000) + 1840252716);
  v92 = 2 * (((v83 ^ 0x1E723336) & (v88 ^ 0x9625003B)) - ((2 * ((v83 ^ 0x1E723336) & (v88 ^ 0x9625003B))) & 0x64906152))
      - 460299950;
  v93 = (v88 ^ 0x8857330D ^ v83) + (v92 ^ 0x9D2FBCFD) - 2042617263 + ((2 * v92) & 0xF37FBB5C ^ 0xC1208204);
  v94 = (v91 ^ 0x6617ECBB) + (v93 ^ 0x5D7EEDF7) + ((2 * v93) & 0xBAFDDBEE) - 1568599542;
  v95 = ((2 * v94) & 0x9FF52F7E) + (v94 ^ 0x4FFA97BF);
  v96 = (((1359478784 * v89 - ((34603008 * v89) & 0xA000000) - 2063115840) ^ 0x850759C0) & 0xFFF80000 | (v90 >> 13)) ^ 0x579B1;
  v97 = v96 + 602140516 - 2 * (v96 & 0x23E3EF6E ^ (v90 >> 13) & 0xA);
  v98 = (((1895932224 * v86 - ((570638976 * v86 + 759675520) & 0x3B408700) + 1413751036) ^ 0x9DA043BC) & 0xFFFFFFC0 | ((-641464699 * v86 - ((-1282929398 * v86 - 441114902) & 0xDD245AE4) - 512967449) >> 26)) ^ 0x1B;
  v99 = v98 - ((2 * v98) & 0x5FE7150A) - 1342993787;
  v100 = (((-1013153792 * v95 - ((121176064 * v95 + 494469120) & 0x13B60000) + 1217910987) ^ 0x89DB58CB) & 0xFFFF8000 | ((1315276601 * v95 - ((-1664414094 * v95 - 173606158) & 0xB3D1FD74) - 725844941) >> 17)) ^ 0x6CF4;
  v101 = v100 - ((2 * v100) & 0xD35BAB5C) + 1773000110;
  v102 = (((v91 ^ 0x99E81344) * v43 - ((999817216 * (v91 ^ 0x99E81344)) & 0x97500000) + 1269468154) ^ 0x4BAA8BFA) & 0xFFFC0000 | ((-1396742285 * (v91 ^ 0x99E81344) - ((427740902 * (v91 ^ 0x99E81344)) & 0x1DB411E0) + 249170160) >> 14);
  v103 = (v99 ^ 0xAFF38A85) + (v102 ^ 0x7FD3CC52) - 2144597818 + ((2 * v102) & 0xFFA7EE74 ^ 0x6650);
  v104 = (((v99 ^ 0x8C1065E1 ^ v97) - 1128244245) ^ 0x54BFB36F)
       + ((2 * ((v99 ^ 0x8C1065E1 ^ v97) - 1128244245)) & 0xA97F66DE)
       - 1421849454
       + (v101 ^ 0x96522A51);
  v105 = (v103 ^ 0x4CF773D7) + ((2 * v103) & 0x99EEE7AE) - 1291285463 + (v97 ^ 0x23E3EF64);
  v106 = v101 ^ (v105 - ((2 * v105) & 0xCF0EA50E) + 1736921735);
  v107 = (((2 * v104) & 0x33CEBFF8)
        + (v104 ^ 0x99E75FFC)
        - ((2 * (((2 * v104) & 0x33CEBFF8) + (v104 ^ 0x99E75FFC)) - 1992222050) & 0xF79734F2)
        - 1066653752) ^ v106;
  v108 = (((2 * v107) ^ 0xEBC23AA0) - ((2 * ((2 * v107) ^ 0xEBC23AA0)) & 0x4E9DCF7C) + 1733224383) & 0x41614930;
  v109 = (v107 ^ 0xD551B9C8) + (v108 ^ 0xBEAFBA4F) + ((2 * v108) ^ 0x82808260) + 1049729;
  v110 = v109 - ((2 * v109) & 0xA5066162) - 763154255;
  v111 = (v101 ^ 0x69ADD5AE) + (v110 ^ 0x2D7CCF4E);
  HIDWORD(v240) = v110;
  v112 = v110 ^ 0xD28330B1;
  LODWORD(v238) = v110 ^ v97;
  v113 = v110 ^ v97 ^ 0xF160DFD5;
  v245 = (v110 ^ 0xD28330B1)
       + (v106 ^ 0xE2A8729)
       - ((2 * ((v110 ^ 0xD28330B1) + (v106 ^ 0xE2A8729))) & 0x5D800AA0)
       + 784336208;
  v114 = v245 ^ 0x2EC00550;
  v115 = -1346651313 * v114 - ((1601664670 * v114) & 0x9F5F8CCC) + 1336919654;
  LODWORD(v240) = v112;
  v116 = ((-1696595968 * v112 - ((901775360 * v112) & 0xD3C00000) - 370922461) ^ 0xE9E42C23) & 0xFFE00000 | ((1120222423 * v112 - ((-2054522450 * v112) & 0xC0144852) - 536206295) >> 11);
  v117 = ((2 * v116) & 0xDF7FFFFC ^ 0x380288) + (v116 ^ 0x6FA3FEBA);
  v118 = ++v111 + 660551338;
  v119 = v111 + 660551338 - ((2 * v111) & 0x4EBE6D54);
  *(_DWORD *)(v47 - 208) = v119;
  v120 = ((((v118 << 30) ^ 0x40000000) + 1618040473) & 0xC0000000 | ((1826555235 * (v119 ^ 0x275F36AA)
                                                                    - ((431884998 * (v119 ^ 0x275F36AA)) & 0x2E64D878u)
                                                                    + 389180476) >> 2)) ^ 0x5CC9B0F;
  v121 = ((-671391744 * v113 - ((804700160 * v113) & 0x2749C000) - 1817906746) ^ 0x93A4F1C6) & 0xFFFFE000 | ((1607909339 * (v238 ^ 0xF160DFD5) - ((1068335030 * (v238 ^ 0xF160DFD5)) & 0x3CF390CA) + 511297637) >> 19);
  v122 = ((2 * v121) & 0xF7FB76F2 ^ 0x692) + (v121 ^ 0x7BFDB8B6);
  v123 = (((-314834944 * v114 - ((444071936 * v114) & 0x3CE00000) - 1636775281) ^ 0x9E70CA8F) & 0xFFFC0000 | (v115 >> 14)) ^ 0x13EBF;
  v124 = v120 - ((2 * v120) & 0x96AEC442) - 883465695;
  v125 = v123 - ((2 * v123) & 0x11F46DF8) + 150615804;
  v126 = v125 ^ v124 ^ (v117 + v122 - ((2 * (v117 + v122) + 679774482) & 0x2DF29056) - 1422160716) ^ 0x55541CF6;
  v127 = 1072965527 * v122 - ((1072189230 * v122 + 1055258946) & 0x38AD913A) + 1539949886;
  v128 = 1215363459 * (v125 ^ 0x8FA36FC) + 1647470460 - ((-1864240378 * (v125 ^ 0x8FA36FC)) & 0xC464CEFA);
  v129 = -794928128 * v122 - ((-1589856256 * v122 - 1746597888) & 0xC50CB000) - 1367810707;
  v130 = ((2053472256 * v126 - ((-188022784 * v126) & 0xF8770000) - 63196846) ^ 0xFC3BB152) & 0xFFFF8000 | ((21558475 * v126 - ((43116950 * v126) & 0xCE768D8C) + 1731937990) >> 17);
  v131 = ((2 * v130) & 0xB1677B4E ^ 0x630A) + (v130 ^ 0x58B38E3A);
  v132 = ((-629145600 * (v124 ^ 0xCB576221) - ((-1258291200 * (v124 ^ 0xCB576221)) & 0x9B000000) - 844655893) ^ 0xCDA792EB) & 0xFF800000 | ((-1710066763 * (v124 ^ 0xCB576221) - ((874833770 * (v124 ^ 0xCB576221)) & 0x42ECEDB2) - 1586071847) >> 9);
  v133 = ((2 * v132) & 0x1A5BAF6E ^ 0x12666) + (v132 ^ 0x8D7D6C8C);
  v134 = (v129 ^ 0xE286596D) & 0xFFFFFC00 | (v127 >> 22);
  v135 = v134 ^ 0x7EBF9D0C;
  v136 = (2 * v134) & 0xFD7F3EFA ^ 0x4E3;
  v137 = 380182225 * v131 - ((760364450 * v131 - 275566254) & 0xE13053E4) - 396246373;
  HIDWORD(v138) = ~(v115 >> 14);
  LODWORD(v138) = (v128 + 1) ^ 0x6232677C;
  v139 = ((2 * (v138 >> 1)) & 0xEFFFFB7E) + ((v138 >> 1) ^ 0x77FFFDBF);
  v140 = v135 + v136 - v139 - v133 - v131 - 89319386;
  v141 = -1457598208 * v131 - ((37593600 * v131 + 53563904) & 0xB188C00) + 1327820763;
  v142 = -1729065245 * v139 - ((836836806 * v139 - 1671161018) & 0xF327B44A) + 1204152264;
  v143 = ((389545984 * v140 - ((779091968 * v140 + 49283072) & 0x2C300000) + 2006201228) ^ 0x961C338C) & 0xFFF80000 | ((-687930649 * v140 - ((771622350 * v140 + 627046494) & 0x2B724FE0u) - 395762657) >> 13);
  v144 = ((2 * v143) & 0xFECEBDFA ^ 0x1992) + (v143 ^ 0x7F67F334);
  v145 = -973078528 * v139 - ((201326592 * v139 + 201326592) & 0x38000000) + 1658733507;
  v146 = ((2 * ((v141 ^ 0x858C46DB) & 0xFFFFFF00 | HIBYTE(v137))) & 0xBFFEE6BA ^ 0xA0)
       + (((v141 ^ 0x858C46DB) & 0xFFFFFF00 | HIBYTE(v137)) ^ 0xDFFF73AD);
  v147 = ((314966016 * v133 - ((629932032 * v133 - 1796472832) & 0x9BB40000) - 1739559286) ^ 0x4DDA6E8A) & 0xFFFE0000 | ((1900120419 * v133 - ((-494726458 * v133 - 1531229578) & 0xF0CBF1A4) - 893149683) >> 15);
  v148 = 522275959 * v146 - ((1044551918 * v146 - 804681846) & 0xED38DE9E) + 1587622676;
  v149 = ((v145 ^ 0x1CDE43C3) & 0xFE000000 | (v142 >> 7)) ^ 0x1F327B4;
  v150 = (v147 ^ 0xDF5F8FBC) + ((2 * v147) & 0xBEBEFEEE ^ 0xE086) - v146 - v144 - 529915072;
  v151 = v149 - ((2 * v149) & 0xF52CC0E6) - 90808205;
  v152 = v151 ^ 0x666478AB ^ (v150 - ((2 * v150 + 1060790086) & 0x39E431B0) + 1016023163);
  v153 = 1476017789 * v152 - ((-1342931718 * v152) & 0xFC950332) - 28671591;
  v154 = -948961280 * v146 - ((-1897922560 * v146 + 2023751680) & 0x94800000) - 2036939979;
  v155 = 2096758784 * v152 - ((-101449728 * v152) & 0xD7640000);
  v156 = ((2 * ((v154 ^ 0x4A46C335) & 0xFFF00000 | (v148 >> 12))) & 0xFEF3FDFE ^ 0x2D18C)
       + (((v154 ^ 0x4A46C335) & 0xFFF00000 | (v148 >> 12)) ^ 0xFF7E9739);
  v157 = (-48234496 * (v151 ^ 0xFA966073) - ((171966464 * (v151 ^ 0xFA966073)) & 0x8000000) + 69115292) ^ 0x41E9D9C | ((-1100636183 * (v151 ^ 0xFA966073) - ((2093694930 * (v151 ^ 0xFA966073)) & 0xEC46F3FA) + 1982036477) >> 11);
  v158 = ((-436207616 * v144 - ((1275068416 * v144 + 1677721600) & 0x66666666) + 1681593348) ^ 0xB23B1404 | ((-2121011469 * v144 - ((52944358 * v144 + 1553285042) & 0x581CDB7C) - 1705439849) >> 7)) ^ 0x1581CDB;
  v159 = v158 - ((2 * v158) & 0x217BE26) + 17555219;
  v160 = (v157 ^ 0xF7AF2A80) + ((2 * v157) & 0xEF43DDDE ^ 0x188DE) + 140382482 + (v159 ^ 0xFEF420EC);
  v161 = (v160 ^ 0x1D7F157F) + v156 + ((2 * v160) & 0x3AFE2AFE);
  v162 = (((v155 + 1806853736) ^ 0x6BB26668) & 0xFFFE0000 | (v153 >> 15)) ^ 0x1FC95;
  v163 = ((2 * (v156 + 8782082 + (v159 ^ 0xFEF420EC))) & 0xFCFF9AFE)
       + ((v156 + 8782082 + (v159 ^ 0xFEF420EC)) ^ 0xFE7FCD7F);
  v164 = v162 - ((2 * v162) & 0xA92F5A88) + 1419226436;
  v165 = (v161 - ((2 * v161 + 1175312132) & 0x41DF9304) - 2080983804) ^ v164;
  v166 = v164 ^ 0x5497AD44;
  v167 = ((2 * ((v164 ^ 0x5497AD44) + 2135976919 * v163 - 1625926313)) & 0x77FD7D60)
       + (((v164 ^ 0x5497AD44) + 2135976919 * v163 - 1625926313) ^ 0xBBFEBEB0);
  v168 = v165 ^ 0xD189EB75 ^ (v167 - ((2 * v167 + 2137205210) & 0x4BE31F66) - 1516034912);
  v169 = v168 - ((2 * v168 + 818194472) & 0xA80F6EE0) + 1818889092;
  LODWORD(a12) = v159;
  HIDWORD(v237) = v169 ^ v159;
  v170 = v169 ^ v159 ^ 0xD50C6863;
  v171 = 1810017955 * v170 - ((130374982 * v170) & 0x53D8792) - 2103524407;
  LODWORD(v239) = (v169 ^ 0xD407B770)
                + (v165 ^ 0xF47864C6)
                - ((2 * ((v169 ^ 0xD407B770) + (v165 ^ 0xF47864C6))) & 0x596FDE0)
                - 2100592912;
  LODWORD(v242) = v166 + (v169 ^ 0x2BF8488F) + 1 - ((2 * (v166 + (v169 ^ 0x2BF8488F) + 1)) & 0x30B987AA) - 1738751019;
  v172 = (((1744830464 * (v169 ^ 0xD407B770) - ((-805306368 * v169) & 0xA0000000) + 1465398309) ^ 0x57583425) & 0xF8000000 | ((773267245 * (v169 ^ 0xD407B770) - ((1546534490 * (v169 ^ 0xD407B770)) & 0xACB27B28) - 698794604) >> 5)) ^ 0x6B2C9EC;
  v173 = (((-731906048 * v170 - ((146800640 * v170) & 0x1E800000) - 1890805744) ^ 0x8F4C9810) & 0xFFE00000 | (v171 >> 11)) ^ 0x1053D8;
  v174 = v173 - 2 * (v173 & 0x3275A0C5 ^ (v171 >> 11) & 4);
  v175 = ((112596424 * (v242 ^ 0x985CC3D5) - ((225192848 * (v242 ^ 0x985CC3D5)) & 0x6E2F49F0) + 924296441) ^ 0x3717A4F9) & 0xFFFFFFF8 | ((550945465 * (v242 ^ 0x985CC3D5) - ((1101890930 * (v242 ^ 0x985CC3D5)) & 0x713CCFA2) - 1197578287) >> 29);
  v176 = ((2 * v175) & 0x75576CEE ^ 0xA) + (v175 ^ 0x3AABB672);
  v177 = ((633339904 * (v239 ^ 0x82CB7EF0) - ((1266679808 * (v239 ^ 0x82CB7EF0)) & 0x90800000) - 932105261) ^ 0xC87133D3) & 0xFFC00000 | ((879101079 * (v239 ^ 0x82CB7EF0) - ((1758202158 * (v239 ^ 0x82CB7EF0)) & 0xFBE6BD64) - 34382158) >> 10);
  v178 = ((2 * v177) & 0x96EEFBFA ^ 0x6EF9AA) + (v177 ^ 0xCB48012A);
  v179 = ((v172 - ((2 * v172) & 0x337D998) - 2120487732) ^ (v174 - 1300913983) ^ 0x33EE4C0D) + 984331890 - v176 + 5;
  v180 = (v179 ^ 0xDF3367BE) + v178 + ((2 * v179) & 0xBE66CF7C);
  v181 = (~(50331648 * v176 + 452984832) | 0xB7FFFFFF) + 25165824 * v176;
  v182 = (((-1107559936 * v178 - ((2079847424 * v178 - 36709376) & 0xD83D6000) + 1795595967) ^ 0x6C1EB0BF) & 0xFFFFFE00 | ((-1931543043 * v178 - ((431881210 * v178 + 201254894) & 0x14D5107E) + 1080687670) >> 23)) ^ 0x14;
  v183 = v182 - ((2 * v182) & 0x4DCB3D2E);
  v184 = ((-1376911360 * ((v174 - 1300913983) ^ 0xB275A0C1)
         - ((1541144576 * ((v174 - 1300913983) ^ 0xB275A0C1)) & 0xC09C0000)
         - 531666505) ^ 0xE04F69B7) & 0xFFFE0000 | ((-298690825 * ((v174 - 1300913983) ^ 0xB275A0C1)
                                                   - ((1550101998 * ((v174 - 1300913983) ^ 0xB275A0C1)) & 0x5E3EE784)
                                                   - 1356893246) >> 15);
  v185 = ((2 * v184) & 0xFD97FD26 ^ 0x2BC24) + (v184 ^ 0x7ECAA0AD);
  v186 = ((-2124889280 * v180 - ((45188736 * v180 - 368951168) & 0xF4FCD480) + 1870629505) ^ 0x7A7E6A41) & 0xFFFFFFC0 | ((973431565 * (v180 - 1380007984) - ((1946863130 * (v180 - 1380007984) - 607277598) & 0xE7FB976E) - 505109848) >> 26);
  v187 = ((2 * v186) & 0xFE6D9D5E ^ 0x58) + (v186 ^ 0x7F36CE93);
  v188 = ((1124467203 * v176 - ((-2046032890 * v176 + 428596534) & 0xB6A25166) + 1746343758) >> 9) ^ 0x6DA894;
  v189 = v185 + v187 - ((2 * (v185 + v187) + 66741628) & 0x1ED800F0) - 1855376586;
  v190 = v183 - 1494901097;
  v191 = (v183 - 1494901097) ^ 0xA6E59E97;
  v192 = (v188 | (v181 + 1907684568) ^ 0x2434F4D7)
       - 2 * ((v188 | (v181 + 1907684568) ^ 0x2434F4D7) & 0x251A819F ^ v188 & 0x17)
       - 1524989560;
  v193 = v192 ^ 0xA51A8188;
  v194 = -1207959552 * (v192 ^ 0xA51A8188) - ((-268435456 * v192) & 0x40000000);
  v195 = v190 ^ v192 ^ 0x8C931F67 ^ v189;
  v196 = ((1963065344 * v187 - ((-368836608 * v187 - 817627136) & 0xCB500000) - 850663611) ^ 0x65A9E745) & 0xFFFE0000 | ((-690701695 * v187 - ((-1381403390 * v187 + 1083533218) & 0xF3966B62) - 1709839998) >> 15);
  v197 = ((2 * v196) & 0xEEEFFFE8 ^ 0x3E728) + (v196 ^ 0x77760C62);
  v198 = ((v194 + 552428860) ^ 0x20ED653C) & 0xF8000000 | ((65312375 * v193
                                                          - ((130624750 * v193) & 0xDE1D2318)
                                                          - 284257908) >> 5);
  v199 = v198 ^ 0xEABD2B22;
  v200 = (2 * v198) & 0xDB8ABF5C ^ 0xA80A918;
  v201 = 188298539 * v197 - 2 * ((188298539 * v197 + 495353348) & 0x1BDD9047 ^ (188298539 * v197) & 3) - 1184625080;
  v202 = ((705111040 * v195 - ((336480256 * v195) & 0x1B8FE000) + 231207757) ^ 0xDC7F34D) & 0xFFFFFC00 | ((986350025 * v195 - ((1972700050 * v195) & 0xFD5C5A8A) - 22139579) >> 22);
  v203 = ((2 * v202) & 0xEBBFFD8E ^ 0x584) + (v202 ^ 0xF5DFFD3D);
  v204 = (((1014923264 * v191 - ((2029846528 * v191) & 0x52080000) + 688137577) ^ 0x29042569) & 0xFFFF8000 | ((-1559987971 * v191 - ((1174991354 * v191) & 0xA0ADE2BC) + 1347875166) >> 17)) ^ 0x282B;
  v205 = v199
       + v200
       + v197
       - v203
       - 77814348
       - ((2 * (v199 + v200 + v197 - v203 - 77814348) + 713814754) & 0x243324B2)
       + 660573130;
  v206 = 1296744448 * v197 - ((446005248 * v197 + 1057095680) & 0x28520000) + 866790773;
  v207 = v204 - ((2 * v204) & 0xFC0AA19C) - 33206066;
  v208 = v207 ^ 0x6C1CC297 ^ v205;
  v209 = ((v206 ^ 0x94292D75) & 0xFFFFC000 | (v201 >> 18)) ^ 0x6F7;
  v210 = ((821788416 * (v207 ^ 0xFE0550CE) - ((1643576832 * (v207 ^ 0xFE0550CE)) & 0x4FC00200) + 668991752) ^ 0x27E00108) & 0xFFFFFF00 | ((875625343 * (v207 ^ 0xFE0550CE) - ((1751250686 * (v207 ^ 0xFE0550CE)) & 0x7336C0B2) + 966484057) >> 24);
  v211 = (((-1723287504 * v203 - ((848392288 * v203 - 1613601440) & 0x9AB074A0) - 1656656632) ^ 0x4D583A58) & 0xFFFFFFF0 | ((-1181447293 * v203 - ((858330886 * v203 + 704456278) & 0x3B4B3752) + 312749780) >> 28)) ^ 9;
  v212 = (((1342177280 * v208 - ((-1610612736 * v208) & 0xC0000000) - 377675876) ^ 0xE97D1F9C) & 0xF0000000 | ((-1193894635 * v208 - ((1907178026 * v208) & 0x5C058E46u) + 771933987) >> 4)) ^ 0x2E02C72;
  v213 = v211 - ((2 * v211) & 0x7805C170) + 1006821560;
  v214 = v213 ^ 0x3C02E0B8;
  v215 = (v210 ^ 0xDF6FFFD4) + ((2 * v210) & 0xBEDFFFDA ^ 0x52) + 546308115 + (v213 ^ 0x3C02E0B8);
  v216 = v209 - ((2 * v209) & 0x7F4D6B88) - 1079593532;
  v217 = v212 - ((2 * v212) & 0xE71753A8) - 208950828;
  v218 = (v215 ^ 0xBEF7DDBD)
       + ((2 * v215) & 0x7DEFBB7A)
       + (((v217 ^ 0xF38BA9D4) + (v216 ^ 0xBFA6B5C4)) ^ 0x90124109)
       - ((2 * ((v217 ^ 0xF38BA9D4) + (v216 ^ 0xBFA6B5C4))) & 0xDFDB7DEC)
       + 1;
  v219 = v218 - ((2 * v218 + 1642840690) & 0xA18544F4) - 2118614093;
  v220 = ((1461042146 * (v216 ^ 0x83A4557C ^ v213)) & 0xCEFBB7FE)
       + ((730521073 * (v216 ^ 0x83A4557C ^ v213)) ^ 0x677DDBFF)
       - 1736301567
       + (v217 ^ 0xF38BA9D4);
  v221 = (v220 - ((2 * v220) & 0x3DA7B956) + 517201067) ^ 0x42DAF7A5 ^ v219;
  v222 = v221 - ((2 * v221 + 51659550) & 0x496D7E0) + 265653631;
  v223 = 2
       * (((v222 ^ 0x24B6BF0) & (v219 ^ 0xD0C2A27A)) - ((2 * ((v222 ^ 0x24B6BF0) & (v219 ^ 0xD0C2A27A))) & 0x74F5B7AC))
       - 185223252;
  v244 = (v222 ^ 0x24B6BF0) + v214 - ((2 * ((v222 ^ 0x24B6BF0) + v214)) & 0x9897CE22) + 1280042769;
  v224 = (v219 ^ 0xD289C98A ^ v222) + (v223 ^ 0x6B7A7B30) + 1617965924 + ((2 * v223) & 0x3F1F9938 ^ 0x290B0918);
  *(_DWORD *)(v47 - 240) = v224 - ((2 * v224) & 0x2DA6F382) - 1764525631;
  v225 = *(_DWORD *)(v47 - 232) + 402887561;
  HIDWORD(v238) = v222 ^ a34;
  v226 = ((v222 ^ a34 ^ 0xB1FBFE03)
        - 420371833
        - ((2 * (v222 ^ a34 ^ 0xB1FBFE03) + 1900277970) & 0x5C9F543C)
        + v225
        - 994) ^ 0xB1FBFE03;
  v227 = (v226 - ((2 * v226 + 1900277970) & 0x5C9F543C) - 420371833) ^ 0xB1FBFE03;
  v228 = *(_DWORD *)(v47 - 228);
  LODWORD(v241) = v228 ^ 0xE1ACC49;
  LODWORD(a16) = v228 ^ 0x811C618F;
  v229 = ((v227 - ((2 * v227 + 1900277970) & 0x5C9F543C) - 420371833) ^ 0xAE4FAA1E) + (v228 ^ 0x811C618F);
  *(_DWORD *)(v47 - 228) = HIBYTE(a33) ^ 0x5827C53F;
  LODWORD(v243) = v169;
  *(_DWORD *)(v47 - 232) = HIBYTE(v169) ^ 0xEB3C2B48;
  v230 = -1095231619
       * ((((((2 * v229) & 0xDEF9FFAC) + (v229 ^ 0xEF7CFFD6)) & 0xFFFFFFFE)
         - ((2 * (((2 * v229) & 0xDEF9FFAC) + (v229 ^ 0xEF7CFFD6)) + 17170516) & 0x15B7F9E0)
         + 459210011) ^ 0x15D264D8);
  LODWORD(v237) = a31 + 19;
  HIDWORD(v242) = v222;
  LODWORD(a15) = v222 ^ v217;
  v231 = *(unsigned int *)(v47 - 240);
  v232 = (v230 - ((v230 << ((v225 - 74) ^ 0x99)) & 0x376231AC) + 464591062) ^ *(_DWORD *)(v47 - 224);
  v233 = -1117768823 - (v232 & 0x15 ^ 0x42A1881D | 0xBD603389) + (v232 & 0x15 ^ 0x42A1881D | 0x429FCC76);
  v234 = (((2 * (v232 & 0xEA ^ 0xF1412784)) & 0xC00044DC) - (v232 & 0xEA ^ 0xF1412784) + 424906113) ^ 0xEC96AA6F;
  v235 = (((2 * v234) & 0x84C) - v234 + 1154796504) ^ 0x4050CB58 | v233 ^ 0x3E446E;
  *(_DWORD *)(*(_QWORD *)(v47 - 216)
            + 4 * ((v230 - (((_BYTE)v230 << ((v225 - 74) ^ 0x99)) & 0xAC) - 42) ^ 0xD6u)) = a40 ^ a29 ^ a32 ^ v97 ^ v245 ^ *(_DWORD *)(v47 - 208) ^ v217 ^ v244 ^ v231 ^ 0xE5A6F535 ^ dword_18CF39EA0[*(_DWORD *)(v47 - 232) ^ *(_DWORD *)(v47 - 228) ^ 0x3EB1427 ^ (v235 - ((2 * v235) & 0x61E1F410) - 1326384632)];
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))qword_1E2538EC0[v225])(v231, v217, 1117768822, 4047579012, 3221243100, 424906113, 3969297007, 2124, a9, v237, v238, a12, a13, v239, a15, a16, v240, v241, v242,
           v243,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

void sub_18CBC21F8()
{
  JUMPOUT(0x18CBC20F4);
}

uint64_t sub_18CBC2204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v30 = malloc(0x408uLL);
  return ((uint64_t (*)(void *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))qword_1E2538EC0[(((((v29 - 64) | 0x104) + 665) ^ 0x3D6) * (v30 == 0)) | v29])(v30, 0, v31, v32, v33, v34, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_18CBC2268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,int a22,int a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,unsigned __int8 a42)
{
  int v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  unsigned __int8 v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;

  v45 = ((a36 ^ *(_DWORD *)(v44 - 240) ^ 0xFF70EBE9)
       - ((2 * (a36 ^ *(_DWORD *)(v44 - 240) ^ 0xFF70EBE9) + 2126621732) & 0x7D67C480)
       + 2115287122) ^ 0xFB14B186;
  LOBYTE(v45) = ((v45 - ((2 * v45 + 36) & 0x80) + 82) ^ 0x40) + (a33 ^ 0x86);
  LOBYTE(v45) = (v45 ^ 0x5F) - 95 + ((2 * v45) & 0xBE);
  HIDWORD(a9) = a22 ^ a23;
  v46 = 0x80 - -95 * (((v45 & 0xFE) - ((2 * v45) & 0xD0) + 104) ^ 0x55);
  v47 = ((unsigned __int16)(a22 ^ a23) >> 8) ^ 0x61 ^ a42 ^ v46;
  v48 = (((((((unsigned __int16)(a22 ^ a23) >> 8) ^ 0x61 ^ a42 ^ v46) & 0x20) + (v47 ^ 0xE2)) | 0xDDAFB800)
       - ((v47 ^ 0xE2) & 0x20)) ^ 0xF1A7BA24;
  v49 = ((((2 * ((v42 + 348) ^ 0x18AB584 ^ v47)) & 0x20001CA) - ((v42 + 348) ^ 0x18AB584 ^ v47) + 1993077018) ^ 0xDE1CC6D0)
      + 1;
  v50 = (v49 ^ 0x77343FFF)
      + ((2 * v49) & 0x6E287FFE)
      + dword_18CF35020[(((2 * v48) & 0x40000072) - v48 - 819257402) ^ 0xE3231D31];
  *(_DWORD *)(a1 + 4 * (v46 ^ 0x80u)) = a31 ^ a19 ^ a20 ^ 0x1AFEE87A ^ (v50
                                                                        - ((2 * v50 + 557565942) & 0x2898E628)
                                                                        + 82466575);
  return ((uint64_t (*)(uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * v42) - 12))(3475709894, 3810729265, dword_18CF35020, 3726427856, 1999912959, 1848147966, 557565942, 681109032, a9);
}

void sub_18CBC24B8()
{
  JUMPOUT(0x18CBC2408);
}

uint64_t sub_18CBC24C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = malloc(0x408uLL);
  return ((uint64_t (*)(void *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * ((201 * (v32 != 0)) ^ v29)) - ((((v29 - 1017) | 4u) + 506) ^ (v29 - 511))))(v32, 0, v33, v34, v35, v36, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           v31,
           a29);
}

uint64_t sub_18CBC2528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, int a19, char a20,unsigned int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  int v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;

  v46 = (((2 * ((v43 - 8) ^ 0x4A)) | 0xC8) - ((v43 - 8) ^ 0x4A) + 28) ^ 0xA3;
  v47 = (((2 * (a20 & 0x22 ^ 0x20)) | 0x48) - (a20 & 0x22 ^ 0x20) - 36) ^ 0x24;
  v48 = (v47 - ((2 * v47) & 0xA4) + 83) ^ ((v46 | 0xF4) - (v46 | 0xB) + 11) ^ 0xE0 | ((a20 & 0x45 ^ 7)
                                                                                    + (a20 & 0x98 ^ 0x99)
                                                                                    - 1) ^ 0x4F;
  v49 = v48 - ((2 * v48) & 0x7A) - 67;
  v50 = ((2 * v49) ^ 0xAE) - 2 * (((2 * v49) ^ 0xAE) & 0x58 ^ (2 * v49) & 0x10) + 72;
  v51 = (v50 & 0xFE ^ 0xAF)
      + (((v49 ^ 0x57) - 2 * ((v49 ^ 0x57) & 0xFD ^ v49 & 8) - 11) ^ 0xA)
      + ((2 * v50) & 0xCC ^ 0x80);
  v52 = v51 + 25 - ((2 * (v51 + 25)) & 0x7A) - 67;
  v53 = ((2 * v52) ^ 0xAE) - 2 * (((2 * v52) ^ 0xAE) & 0x58 ^ (2 * v52) & 0x10) + 72;
  v54 = (v53 & 0xFE ^ 0xAF)
      + (((v52 ^ 0x57) - 2 * ((v52 ^ 0x57) & 0xFD ^ v52 & 8) - 11) ^ 0xA)
      + ((2 * v53) & 0xCC ^ 0x80)
      + 25;
  v55 = v54 - ((2 * v54) & 0x7A) - 67;
  v56 = ((2 * v55) ^ 0xAE) - 2 * (((2 * v55) ^ 0xAE) & 0x58 ^ (2 * v55) & 0x10) + 72;
  v57 = (v56 & 0xFE ^ 0xAF)
      + (((v55 ^ 0x57) - 2 * ((v55 ^ 0x57) & 0xFD ^ v55 & 8) - 11) ^ 0xA)
      + ((2 * v56) & 0xCC ^ 0x80)
      + 25;
  v58 = ((v57 - ((2 * v57) & 0x7A) - 67) ^ 0xBD) + a16;
  v59 = (((((2 * v58) & 0x4C) + (v58 ^ 0x26)) & 0xFE) - ((2 * (((2 * v58) & 0x4C) + (v58 ^ 0x26)) - 76) & 0x88) + 30) ^ 0xB7;
  *(_DWORD *)(a1 + 4 * ((-13 - 29 * v59 - ((-58 * v59) & 0xE6)) ^ 0xF3u)) = a43 ^ a28 ^ *(_DWORD *)(v45 - 240) ^ (v43 - 1121606899) ^ dword_18CF27CB0[((-13 - 29 * v59 - ((-58 * v59) & 0xE6)) ^ ((a22 ^ a35 ^ a21) >> 16) ^ 4) ^ 0xE6];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v44 + 8 * ((v43 - 8) ^ 0x18)) - 4))(243);
}

void sub_18CBC2990()
{
  JUMPOUT(0x18CBC2948);
}

uint64_t sub_18CBC29A0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  int v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v23 = a1 - 655;
  v24 = malloc(0x404uLL);
  return (*(uint64_t (**)(void *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((1286 * (v24 != 0)) ^ v23)))(v24, 0, v25, v26, v27, v28, 0, 0, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22);
}

uint64_t sub_18CBC2A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,char a40)
{
  int v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;

  *(_QWORD *)(v44 - 240) = v42;
  v45 = ((a20 ^ a26 ^ 0x58) - ((2 * (a20 ^ a26 ^ 0x58) + 126) & 0xAE) - 106) ^ 0x10;
  v46 = (v45 - ((2 * v45 + 126) & 0xAE) - 106) ^ 0x10;
  v47 = (v46 - ((2 * v46 + 126) & 0xAE) - 106) & 0xFE ^ 0x64;
  v48 = (((2 * v47) & 0xD4) - v47 - 107) ^ 0xE6;
  v49 = -22 * v48;
  *(_DWORD *)(a1 + 4 * ((-70 - 11 * v48 - (v49 & (v40 - 63))) ^ 0xBAu)) = a33 ^ *(_DWORD *)(v44 - 208) ^ a15 ^ 0xE75DDD9C ^ dword_18CF2F300[(((2 * ((v41 ^ a40 ^ (-70 - 11 * v48 - (v49 & (v40 - 63)))) ^ 0x480541AF)) & 0x8262) - ((v41 ^ a40 ^ (-70 - 11 * v48 - (v49 & (v40 - 63)))) ^ 0x480541AF) + 1750572750) ^ 0x2052DFF2];
  return ((uint64_t (*)(uint64_t, _DWORD *, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * v40) - 12))(542302194, dword_18CF2F300, 3881688476, 186);
}

void sub_18CBC2B94()
{
  JUMPOUT(0x18CBC2B30);
}

uint64_t sub_18CBC2BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = malloc(0x404uLL);
  return (*(uint64_t (**)(void *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((((((v29 + 69) ^ (v31 == 0)) & 1) == 0) * (v29 + 205)) ^ v29)))(v31, 0, v32, v33, v34, v35, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_18CBC2C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, int a13, int a14, unsigned int a15, int a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,int a35,int a36,int a37,int a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  int v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  char v51;
  char v52;
  char v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v50 = ((a34 ^ a46 ^ 0x4D) + 56 + (~(2 * (a34 ^ a46 ^ 0x4D) - 68) | 0x4D)) ^ 0x83;
  v51 = (v50 + 56 + (~(2 * v50 - 68) | 0x4D)) ^ 0x83;
  v52 = ((v51 + 56 + (~(2 * v51 - 68) | 0x4D)) ^ 0x59) + a28;
  v53 = (v52 ^ 0x67) - 103 + ((2 * v52) & 0xCE);
  v54 = *(_DWORD *)(v48 - 232) ^ *(_DWORD *)(v48 - 228) ^ *(_DWORD *)(v48 - 224) ^ (0x80 - -89 * (((v53 & 0xFE) - ((2 * v53) & 0x98) + 76) ^ 0x8B));
  v55 = dword_18CF391A0[v54 ^ 0x95C7D49B];
  v56 = a16 ^ a22 ^ (v46 + 317) ^ 0x3BDu;
  v57 = a27 ^ a39 ^ a36 ^ a35 ^ a15 ^ a17 ^ a12 ^ v56;
  v58 = v57 ^ v54 ^ 0x55F27BB2 ^ v55;
  *(_DWORD *)(a1 + 4 * ((0x80 - -89 * (((v53 & 0xFE) - ((2 * v53) & 0x98) + 76) ^ 0x8B)) ^ 0x80u)) = v58;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v47 + 8 * (v46 + 317)) - 12))(v58, v55, v57, v56, a1, a15, a17, a12);
}

void sub_18CBC2DAC()
{
  JUMPOUT(0x18CBC2D44);
}

uint64_t sub_18CBC2DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = malloc(0x404uLL);
  return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * (((v31 != 0) * ((v29 - 233) ^ (v29 - 169) ^ 0x128)) ^ v29)) - 8))(v31, a5, v32, v33, v34, v35, 0, 0, a9, a10, a11, a5, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_18CBC2E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,uint64_t a26,int a27)
{
  char v27;
  int v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  int v35;
  char v36;
  int v37;
  unsigned int v38;
  unsigned int v39;

  *(_QWORD *)(v29 - 208) = a1;
  v30 = ((a12 ^ 0xE9) - 2 * (((a12 ^ 0xE9) - 42) & 0x1F ^ (a12 ^ 0xE9) & 1) - 12) ^ 0xE9;
  v31 = (v30 - 2 * ((v30 - 42) & 0x1F ^ v30 & 1) - 12) ^ 0xE9;
  *(_DWORD *)(v29 - 228) = a27 ^ 0x681E07EF;
  v32 = ((v31 - 2 * ((v31 - 42) & 0x1F ^ v31 & 1) - 12) ^ 0x1E) + (a27 ^ 0xEF);
  v33 = (v32 ^ 0xFB) + 5 + ((2 * v32) & 0xF6);
  v34 = ((v33 & 0xFE) - ((2 * v33) & 0x7C) + 62) ^ 0xB1;
  v35 = 270 * (v28 ^ 0x199);
  *(_DWORD *)(v29 - 224) = v35;
  v36 = v35 ^ 0xC9;
  v37 = (((v36 - 30) * v34 - ((2 * (v36 - 30) * v34) & 0x9A) + 77) ^ v27);
  v38 = (-1195836327 - (v37 ^ 0x29 | 0xB8B8FC59) + (v37 ^ 0x29 | 0x474703A6)) ^ 0x7530AA2;
  v39 = ((v37 ^ 0x46) - ((2 * (v37 ^ 0x46)) & 0xFFFFFF8F) + 973793991) ^ 0x88C478E7;
  *(_DWORD *)(*(_QWORD *)(v29 - 208)
            + 4 * (((v36 - 30) * v34 - ((2 * (v36 - 30) * v34) & 0x9A) + 77) ^ 0x4Du)) = a25 ^ a16 ^ a15 ^ (((2 * v38) | 0x7C5FC0EE) - v38 - 1043325047) ^ 0xF46C6443 ^ dword_18CF38CA0[(v39 - ((2 * v39) & 0x61842486) + 1020418627) ^ 0x8E1CC89D];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *))(qword_1E2538EC0[v28] - 8))(2086650094, 3251642249, 70, 973793991, 2294577383, 1636050054, 1020418627, dword_18CF38CA0);
}

void sub_18CBC3080()
{
  JUMPOUT(0x18CBC2FD0);
}

uint64_t sub_18CBC3088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  int v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v30 = *(_DWORD *)(v29 - 224);
  v31 = malloc(0x404uLL);
  return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(23 * (v31 == 0)) ^ v30] - ((v30 ^ 0x1Eu) + (unint64_t)(v30 - 1002)) + 1712))(v31, a12, v32, v33, v34, v35, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_18CBC30F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,__int16 a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,uint64_t a33,uint64_t a34,int a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  int v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  unsigned int v49;

  v45 = (((a28 ^ a16 ^ 0x1F) - ((2 * (a28 ^ a16 ^ 0x1F) - 78) & 0xFA) - 42) ^ 0xFD) + a26;
  v46 = ((v45 & 0xFE) + 122 - ((2 * v45) & 0x98) - 45) ^ 0x6E;
  v47 = -37 * v46 - 30;
  v48 = -74 * v46;
  v49 = dword_18CF26A20[(v43 + 12) ^ 0x5A6 ^ ((v47 - (v48 & 0xC4)) ^ a10 ^ a36)]
      + (((v47 - (v48 & 0xC4)) ^ a10 ^ a36) ^ 0xD472026D)
      - 217264802;
  *(_DWORD *)(a1 + 4 * ((v47 - (v48 & 0xC4)) ^ 0xE2u)) = a32 ^ a12 ^ a43 ^ 0x8E7A6C13 ^ (v49 - ((2 * v49) & 0xB5682D2A) - 625731947);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * v43) - 4))(3043503402, 3669235349);
}

void sub_18CBC3290()
{
  JUMPOUT(0x18CBC322CLL);
}

uint64_t sub_18CBC32A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = malloc(0x404uLL);
  return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * ((235 * (v31 != 0)) ^ v29)) - (((v29 + 252) | 0x91u) ^ 0x6FDLL)))(v31, a12, v32, v33, v34, v35, 0, a8, a9, a10, a11, a12, a13, a14, a8, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_18CBC3304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned __int8 a10, int a11, int a12, int a13, int a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  int v35;
  char v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;

  *(_QWORD *)(v37 - 224) = a1;
  v38 = ((a14 ^ 0x8DAE91B0) - 2 * (((a14 ^ 0x8DAE91B0) + 991077342) & 0x2E4FAA1F ^ a14 & 1) + 1768050172) ^ 0x8DAE91B0;
  v39 = ((v38 - 2 * ((v38 + 991077342) & 0x2E4FAA1F ^ a14 & 1) + 1768050172) ^ 0xAE4FAA1E) + *(_DWORD *)(v37 - 228);
  LOBYTE(v39) = (v39 ^ 0x3F) - 63 + ((2 * v39) & 0x7E);
  LOBYTE(v39) = ((v39 & 0xFE) - ((2 * v39) & 0xC0) - 32) ^ 0x93;
  v40 = (((v36 & 0x7C ^ 0x36C447B) - 1) & 0x304447C | v36 & 0x80) ^ 0x30444F0 | (((2 * ((a10 ^ a25) & 3 ^ 0x6A06020A)) & 0x40C0004)
                                                                               - ((a10 ^ a25) & 3 ^ 0x6A06020A)
                                                                               - 333849799) ^ 0x861FD933;
  v41 = v40 - ((2 * v40) & 0x4480095E) - 1572690513;
  v42 = ((18 - a11) & 0x20000000 ^ 0x75DFFE77) + 2 * ((18 - a11) & 0x20000000);
  v43 = v42 - 1615610898;
  v44 = v42 - 1977613943;
  v45 = -1955350308 - v42;
  v46 = (57 * v39 + ((v35 + 66) ^ 0xAA) - ((114 * v39) & 0x32));
  v47 = dword_18CF2D380[v41 ^ 0xA242A5F8 ^ v46];
  v48 = v47 - ((2 * v47 + 314516916) & 0xF69D5E5C) + 78529032;
  v49 = a12 ^ a17 ^ v48 ^ (((8 * v48) ^ 0xDA757970)
                         + 1530482247
                         - 2 * (((8 * v48) ^ 0xDA757970) & 0x5B394E48 ^ (8 * v48) & 8));
  if ((v44 & ~v49) != 0)
    v50 = v45;
  else
    v50 = v43;
  *(_DWORD *)(*(_QWORD *)(v37 - 224) + 4 * (v46 ^ 0x99u)) = ((a35 & 0xDFFFFFFF ^ 0xFA984FF)
                                                             + (a35 & 0xC85EC106 ^ 0xE0564100)
                                                             - ((a35 & 0xDFFFFFFF ^ 0xFA984FF) & 0xC85EC106)) ^ 0x866482E8 ^ ((v49 ^ 0xFA0B09DD) - 362003045 + v50 - ((2 * ((v49 ^ 0xFA0B09DD) - 362003045 + v50)) & 0x35FE7028) - 1694549996);
  return ((uint64_t (*)(uint64_t))(qword_1E2538EC0[v35] - 12))(1530482247);
}

void sub_18CBC3620()
{
  JUMPOUT(0x18CBC356CLL);
}

uint64_t sub_18CBC3630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  int v36;
  unsigned __int8 *v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  __int16 v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  uint64_t v58;
  int v59;
  unsigned __int8 *v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  char v67;
  int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  unsigned int v204;
  int v205;
  int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  unint64_t v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  int v245;
  BOOL v246;
  int v247;
  int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  int v252;
  unint64_t v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  unsigned int v263;
  int v264;
  unint64_t v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  unsigned int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  int v275;
  int v276;
  unsigned int v277;
  int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  uint64_t v296;
  unsigned int v297;
  unsigned int v298;
  uint64_t v299;
  int v300;
  int v301;
  int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  int v312;
  _BYTE *v313;
  int v314;
  int v315;
  int v316;
  char v317;
  char v318;
  int v319;
  __int16 v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unint64_t v325;
  int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  int v330;
  unsigned int v331;
  int v332;
  int v333;
  unsigned int v334;
  uint64_t v335;
  int v336;
  unsigned int v337;
  int v338;
  uint64_t v340;
  uint64_t v341;
  int v342;
  __int128 v343;

  v34 = (v32 - 1295) | 0x298;
  HIDWORD(v35) = HIDWORD(a32) ^ 0x82C78;
  LODWORD(v35) = HIDWORD(a32) ^ 0x84F00000;
  *(_DWORD *)(v33 - 228) = v34;
  HIDWORD(v341) = (v35 >> 20) + 1542605602 + ~((v34 - 1209756794) & (2 * (v35 >> 20)));
  HIDWORD(a13) = -396296192;
  HIDWORD(v340) = HIDWORD(a17) ^ 0xD82562EB;
  LODWORD(v340) = a17 + 1;
  v36 = 4 * *(_DWORD *)(v33 - 228);
  *(_DWORD *)(v33 - 232) = v36;
  LODWORD(a32) = (v36 ^ 0xFFFFF503) & 0x9E395B7B ^ 0x9E395B7F;
  v37 = *(unsigned __int8 **)(v33 - 200);
  v38 = (-18
       - 17 * ((a32 - 479180246 - ((2 * a32) & 0xC6E09454)) ^ 0x2A)
       - ((-34 * ((a32 - 479180246 - ((2 * a32) & 0xC6E09454)) ^ 0x2A)) & 0xFFFFFFDC)) ^ v37[((_DWORD)a32
                                                                                            - 479180246
                                                                                            - ((2 * (_DWORD)a32) & 0xC6E09454)) ^ 0xE3704A2A];
  v39 = (2 * v38) ^ 0xFFFFFF95;
  v40 = (4 * v38) & 0xFFFFFFB4 ^ 0xFFFFFFDF;
  v41 = byte_18CF2C040[((-18
                                        - 17 * ((a32 + 42 - ((2 * a32) & 0x54)) ^ 0x2A)
                                        - ((-34 * ((a32 + 42 - ((2 * a32) & 0x54)) ^ 0x2A)) & 0xDC)) ^ v37[((_DWORD)a32 - 479180246 - ((2 * (_DWORD)a32) & 0xC6E09454)) ^ 0xE3704A2A]) ^ 0x26]
      + (v38 ^ 0x18)
      - 82;
  v42 = (v41 ^ 0xFFFFFFE7) + v39 + v40 + ((2 * v41) & 0xFFFFFFCF);
  v43 = (v42 + 1 - 2 * ((v42 + 117) & 0x76 ^ (v42 + 1) & 2) - 24) ^ 0x36;
  v44 = (((v43 - ((2 * v43) & 0x58)) << 24) + 738197504) ^ 0x2C000000;
  v45 = byte_18CF35C60[v37[14] ^ 0xF0];
  v46 = ((((v45 ^ 0xA5) - ((2 * (v45 ^ 0xA5)) & 0x18A)) << 8) + 1308738816) ^ 0x4E01C500;
  v47 = byte_18CF3A2A0[v37[15] ^ 0xFE];
  v48 = (v44 - 1943426145 - ((2 * v44) & 0x18000000)) ^ 0x8C29AB9F | (v46 + 195342960 - ((2 * v46) & 0x17496400)) ^ 0xBA4B270;
  v49 = v48 - 405896007 - ((2 * v48) & 0xCF9D0972);
  v50 = byte_18CF35C60[v37[2] ^ 0x52];
  v51 = byte_18CF2D280[v37[5] ^ 0x98];
  HIDWORD(a30) = 9;
  v52 = v49 ^ 0xE7CE84B9 | ((v47 + 49) + 1422406617 - ((2 * (v47 + 49)) & 0x1B2)) ^ 0x54C833D9;
  *((_QWORD *)&v343 + 1) = v52 - 984106978 - ((2 * v52) & 0x8AAF703C);
  v53 = (v37[9] ^ 0x45) - ((2 * (v37[9] ^ 0x45)) & 0xC6) + 7011;
  v54 = ((((v50 ^ 0x8F) - ((2 * (v50 ^ 0x8F)) & 0xA6)) << 8) + 302142208) ^ 0x12025300;
  v342 = v54 + 1507997120 - ((2 * v54) & 0x33C46A00);
  v55 = byte_18CF2D280[((v53 & 0x112 ^ 0xD940CFEF) - ((2 * (v53 & 0x112 ^ 0xD940CFEF)) & 0x28181A6) - 1580216109) ^ 0x86BF5CDD ^ ((((v53 & 0xED ^ 0xFFFFFFFA) + 700074736) & 0x1F8 ^ 0x6E204223) - (((v53 & 0xED ^ 0xFFFFFFFA) + 700074736) & 0x8A0805) - 1868953596)];
  v56 = (((32 * ~v51) ^ 0xFFFFFFFB) - ((2 * ((32 * ~v51) ^ 0xFFFFFFFB) - 10) & 0xA8) - 41) ^ (v51 >> 3) ^ 0xCF;
  v57 = (((v56 - ((2 * v56) & 0xD4)) << 16) + 1533673472) ^ 0x5B6A0000;
  HIDWORD(v35) = ~v55;
  LODWORD(v35) = (v55 ^ 0xFFFFFF9F) << 24;
  v58 = (v37[8] - ((2 * v37[8]) & 0xC0) + 781263968) ^ 0xB21DCAC5;
  LODWORD(v58) = (((v58 ^ 0x5E) + 1) ^ 0x77)
               + ((2 * ((v58 ^ 0x5E) + 1)) & 0xFFFFFFEF)
               + byte_18CF2C040[v58 ^ 0x9C8CEE9FLL];
  v59 = v58 + (~(2 * v58 + 46) | 0xDB);
  v60 = v37;
  v61 = ((((((v35 >> 27) + (~(2 * (v35 >> 27)) | 0xE3) + 15) ^ 0x57)
         - ((2 * (((v35 >> 27) + (~(2 * (v35 >> 27)) | 0xE3) + 15) ^ 0x57)) & 0x24)) << 16)
       + 219283456) ^ 0xD120000;
  v62 = (((((v59 + 74) ^ 0x16) - ((2 * ((v59 + 74) ^ 0x16)) & 0x8C)) << 24) - 973078528) ^ 0xC6000000;
  v63 = (v62 + 1641889331 - ((2 * v62) & 0xC2000000)) ^ 0x61DD3E33 | (v61 - 1063997856 - ((2 * v61) & 0x1280000)) ^ 0xC094AE60;
  v64 = v63 - 1209148241 - ((2 * v63) & 0x6FDBB95E);
  v65 = byte_18CF2C040[v37[4] ^ 0x58] + 2 * ((v37[4] ^ 0x2AFF7A99) + 1) + (((v37[4] ^ 0x2AFF7A99) + 1) ^ 0x7F);
  LODWORD(v58) = (v65 - ((2 * v65 + 94) & 0xB2) - 120) ^ 4;
  LODWORD(v58) = ((((_DWORD)v58 - ((2 * (_DWORD)v58) & 0x38)) << 24) + 469762048) ^ 0x1C000000;
  v66 = (v58 - 1369534089 + (~(2 * v58) | 0xA3FFFFFF) + 1) ^ 0xAE5E9177 | (v57 + 1964826672 - ((2 * v57) & 0x6A380000)) ^ 0x751CE030;
  LODWORD(a26) = 6;
  LOBYTE(v63) = byte_18CF3A2A0[(v37[3] - ((2 * v37[3]) & 0x1A2) - 308831023) ^ 0xED979C5E];
  v67 = v63 + 49 - ((2 * (v63 + 49)) & 0x8E) + 71;
  v68 = v37[11];
  v69 = ((2 * v68) & 0xFFFFFFCF) + (v68 ^ 0xABFF8FE7);
  v70 = 2 * ((v68 & 0x45) - ((2 * (v68 & 0x45)) & 0x42)) + 1525611842;
  v71 = byte_18CF35C60[v37[6] ^ 0xB1] ^ 0x8C;
  v72 = (((v71 - ((2 * v71) & 0xFFFFFF8F)) << 8) - 1260665088) ^ 0xB4DBC700;
  v73 = (v70 ^ 0x95702805) - v69 - 1329429595 + ((2 * v70) & 0x951DAA8C ^ 0x951DAA84);
  v74 = (v69 + 1409314841) ^ (-2037693563 - v69 - ((1476337614 - 2 * v69) & 0xB517673C)) ^ 0xB0D49987 ^ (v73 - ((2 * v73 + 1463578102) & 0xD4BE5432) - 1778556652);
  v75 = ((v74 + 1417934642 - ((2 * v74) & 0xA907EE64)) ^ 0x5483F732) + 69;
  v76 = v75 - ((2 * v75) & 0x85920736) - 1027013733;
  HIDWORD(a18) = 13;
  HIDWORD(v35) = v76 ^ 0x3345;
  LODWORD(v35) = v76 ^ 0xCE608000;
  v77 = (v35 >> 14) - ((2 * (v35 >> 14)) & 0x1D32AF94) + 244930506;
  HIDWORD(v35) = v77 ^ 0x1656C;
  LODWORD(v35) = v77 ^ 0xCDE00000;
  LODWORD(v58) = (v66 + 1764188045 - ((2 * v66) & 0xD24EBF1A)) ^ 0x69275F8D | (v72 + 200661762 - ((2 * v72) & 0x17EBB600)) ^ 0xBF5DB02;
  v78 = v58 + 2031404941 - ((2 * v58) & 0xF2298F1A);
  LODWORD(v58) = v37[13] ^ 0xCB54DE2E;
  v79 = 2 * (v37[13] ^ 0xA61EE9E5);
  LODWORD(v37) = v79 & 0x194;
  v80 = (v79 ^ 2) - ((2 * (v79 ^ 2)) & 0x4C) - 90;
  v81 = (v80 & 0xFFFFFF9A) - ((2 * v80) & 0x30) - 68;
  v82 = ((v81 & 0xDE ^ 0xC3) + (v81 ^ 0x3C) - ((v81 ^ 0x3C) & 0xDA)) ^ 0xDD;
  v83 = byte_18CF3A2A0[((v35 >> 18) - 783581695 - ((2 * (v35 >> 18)) & 0xA296FC02)) ^ 0xD14B7E88]
      + 49;
  v84 = v64 ^ 0xB7EDDCAF | (v83 - 255652208 - ((2 * v83) & 0x120)) ^ 0xF0C30E90;
  v85 = byte_18CF2D280[(_DWORD)v58 + (_DWORD)v37 + (v82 ^ 0x80200184) - ((2 * v82) & 0xF6) - 1265950721];
  LODWORD(v58) = v84 + 898281543 - ((2 * v84) & 0x6B15608E);
  HIDWORD(v35) = ~v85;
  LODWORD(v35) = (v85 ^ 0xFFFFFF9F) << 24;
  v86 = (v35 >> 27) - ((2 * (v35 >> 27)) & 0x4E) + 39;
  v87 = ((((v86 ^ 0x98) - ((2 * v86) & 0xC2)) << 16) - 396296192) ^ 0xE8610000;
  v88 = (v87 - 1065940664 - ((2 * v87) & 0xEE0000)) ^ 0xC0770948 | DWORD2(v343) ^ 0xC557B81E;
  v89 = byte_18CF2D280[v60[1] ^ 0xA0];
  HIDWORD(v35) = ~v89;
  LODWORD(v35) = (v89 ^ 0xFFFFFF9F) << 24;
  v90 = ((((((v35 >> 27) - ((2 * (v35 >> 27)) & 0xA) - 123) ^ 0x97)
         - ((2 * (((v35 >> 27) - ((2 * (v35 >> 27)) & 0xA) - 123) ^ 0x97)) & 0x52)) << 16)
       - 1423376384) ^ 0xAB290000;
  v91 = (v90 - 811650674 - ((2 * v90) & 0x1F3E0000)) ^ 0xCF9F318E;
  v92 = (((*v60 ^ 0x7E30F54D) + 1) ^ 0x7E) + byte_18CF2C040[*v60 ^ 0x8CLL] + 4 * (((*v60 ^ 0x7E30F54Du) + 1) >> 1);
  v93 = v92 - 2 * ((v92 + 48) & 0x5F ^ v92 & 4) + 11;
  LODWORD(v343) = -1640408197;
  *(_QWORD *)((char *)&v343 + 4) = 7;
  v94 = (((2 * (v67 & 0xF7 ^ 0x90104B4F)) | 0xB629A0E4) - (v67 & 0xF7 ^ 0x90104B4F) + 619392910) ^ 0x4B049B7A | v342 ^ 0x59E235C0;
  v95 = ((((v93 ^ 0x60) - ((2 * (v93 ^ 0x60)) & 0xFFFFFFC3)) << 24) + 1627389952) ^ 0x61000000;
  v96 = ((v67 & 8) + v91 + 2090319108 - ((2 * v91) & 0x792F7A08)) ^ 0x7C97BD04 | (v94
                                                                                - 652887276
                                                                                - ((2 * v94) & 0x322B7628)) ^ 0xD915BB14;
  LODWORD(a19) = 10;
  v97 = v88 - ((2 * v88) & 0xAC39780A) + 1444723717;
  v98 = (v96 + 1621320562 - ((2 * v96) & 0xC146C6E4)) ^ 0x60A36372 | (v95 - 695386698 - ((2 * v95) & 0xAC000000)) ^ 0xD68D3DB6;
  LODWORD(v37) = byte_18CF3A2A0[v60[7] ^ 0xBD] + 49;
  v99 = v78 ^ 0x7914C78D | (v37 - 1782331756 - ((2 * (_DWORD)v37) & 0x128)) ^ 0x95C3C694;
  v100 = byte_18CF35C60[v60[10] ^ 0x17] ^ 0xCA;
  v101 = (((v100 - ((2 * v100) & 0x18A)) << 8) - 123222784) ^ 0xF8A7C500;
  LODWORD(v58) = v58 ^ 0x358AB047 | (v101 + 1404428473 - ((2 * v101) & 0x276BC000)) ^ 0x53B5E0B9;
  LODWORD(v37) = a20 ^ HIDWORD(a20) ^ a18 ^ (v98 - ((2 * v98) & 0x2A4A6FBE) + 354760671);
  v102 = HIDWORD(a20) ^ HIDWORD(a32) ^ a20;
  v103 = v102 ^ a27 ^ (v99 - ((2 * v99) & 0xA14DBD4C) - 794370394);
  v104 = v102 ^ HIDWORD(a27) ^ (v58 - ((2 * v58) & 0xA8D8ED42) + 1416394401);
  v105 = v102 ^ a30 ^ v97;
  HIDWORD(v35) = v37 ^ 0xD82E9;
  LODWORD(v35) = v37 ^ 0x10F00000;
  LODWORD(v58) = ((v35 >> 20) - ((2 * (v35 >> 20)) & 0xBCACF026) - 564758509) ^ HIDWORD(v341);
  HIDWORD(v35) = v58 ^ 0x8C;
  LODWORD(v35) = v58 ^ 0x5ECCB000;
  v106 = (v35 >> 12) - ((2 * (v35 >> 12)) & 0x9BAE241A) - 841543155;
  v107 = *(_QWORD *)(v33 - 224);
  v108 = *(_QWORD *)(v33 - 208);
  v109 = *(_DWORD *)(v107 + 4 * (v105 ^ 0xFBu)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v104) ^ 0xA5u)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v103) ^ 0xE1u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v106) ^ 0x58));
  v110 = *(_DWORD *)(a12 + 4 * (HIBYTE(v105) ^ 0xD5));
  v111 = (v110 & 0x2000 ^ 0xBF5BEFFF) + 2 * (v110 & 0x2000);
  v112 = *(_DWORD *)(v108 + 4 * (BYTE2(v106) ^ 0x32u)) ^ 0xFAEFD7B7;
  v113 = *(_DWORD *)(v108 + 4 * (BYTE2(v105) ^ 0x9Au));
  v114 = *(_DWORD *)(a12 + 4 * (HIBYTE(v104) ^ 0x21));
  v115 = *(_DWORD *)(v107 + 4 * (((v35 >> 12) - ((2 * (v35 >> 12)) & 0x1A) + 13) ^ 0x7Fu)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v103) ^ 0xFC)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v104) ^ 0x83u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v105) ^ 0xA0u));
  LODWORD(v37) = v113 ^ *(_DWORD *)(v107 + 4 * (v103 ^ 0x85u));
  v116 = *(_DWORD *)(a28 + 4 * (BYTE1(v103) ^ 0xCu));
  v117 = HIWORD(v103);
  v118 = *(_DWORD *)(v107 + 4 * (v104 ^ 0x38u));
  v119 = v37 ^ v114;
  v120 = v111 + 1878980329;
  v121 = *(_DWORD *)(a28 + 4 * (BYTE1(v106) ^ 0xE4u)) ^ v119;
  if (((v111 + 1084493825) & v112) + 925332512 - ((2 * ((v111 + 1084493825) & v112)) & 0x6E4EC000) != 925332512)
    v120 = -290007321 - v111;
  v122 = v118 ^ v116 ^ (1608442227
                      - (v110 & 0xFFFFDFFF ^ 0xE1DF0DF0 | 0x5FDEE173)
                      + (v110 & 0xFFFFDFFF ^ 0xE1DF0DF0 | 0xA0211E8C)) ^ (v112
                                                                        - 794486504
                                                                        + v120
                                                                        - ((2 * (v112 - 794486504 + v120)) & 0xE2D80F20)
                                                                        + 1902905232);
  v123 = *(_DWORD *)(v108 + 4 * (BYTE2(v115) ^ 0x16u));
  v124 = v123 & 0x40000000 | ((v123 & 0x40000000u) >> 30 << 31);
  v125 = (v123 & 0xBFFFFFFF ^ 0x302F5F0E | 0x2EDAE1F4) - (v123 & 0xBFFFFFFF ^ 0x302F5F0E | 0xD1251E0B) - 786096629;
  v126 = ((v122 ^ 0xC1942911) >> (v117 & 0x18))
       + 1544136834
       - ((2 * ((v122 ^ 0xC1942911) >> (v117 & 0x18))) & 0xB8135104);
  v127 = ((v126 ^ 0x5C09A882) >> (v117 & 0x18 ^ 0x18))
       - ((2 * ((v126 ^ 0x5C09A882) >> (v117 & 0x18 ^ 0x18))) & 0x66666666);
  v128 = v124 - 2035095071;
  v129 = (v125 & 0x592DE0DD ^ 0x59258001) + (v125 & 0xA6D21F22 ^ 0x24920901) - 1;
  v130 = *(_DWORD *)(a12 + 4 * (HIBYTE(v109) ^ 0x72)) ^ 0xE5F6DC92;
  if (((v124 + 0x40000000) & v130) != 0)
    v128 = 1051388368 - (v124 | 0x37F7FFEF);
  v131 = *(_DWORD *)(a28 + 4 * (BYTE1(v121) ^ 0x18u)) ^ v129 ^ (v130
                                                                - 1186130401
                                                                + v128
                                                                - ((2 * (v130 - 1186130401 + v128)) & 0x82D0F612)
                                                                + 1097366281) ^ *(_DWORD *)(v107
                                                                                          + 4
                                                                                          * (v122 ^ 0x11u));
  v132 = *(_DWORD *)(v107 + 4 * (v109 ^ 0xABu));
  v133 = *(_DWORD *)(a28 + 4 * (BYTE1(v109) ^ 0xA0u)) ^ *(_DWORD *)(v107 + 4 * (v115 ^ 0x2Bu)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v121) ^ 0xF9)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v122) ^ 0x94u));
  v134 = *(_DWORD *)(v108 + 4 * (BYTE2(v109) ^ 0xCDu)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v115) ^ 0xF9u)) ^ *(_DWORD *)(v107 + 4 * (v121 ^ 0x4Bu)) ^ *(_DWORD *)(a12 + 4 * ((v127 - 77) ^ 0xB3u));
  v135 = *(_DWORD *)(a12 + 4 * (HIBYTE(v115) ^ 0x83)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v121) ^ 0x1Eu)) ^ v132 ^ *(_DWORD *)(a28 + 4 * (BYTE1(v122) ^ 0x29u));
  v136 = (v134 ^ 0xB0B0836C) + 1;
  v134 ^= 0x860BDA91;
  v137 = v134 + (v136 ^ 0x57FFBF7D) + ((2 * v136) & 0xAFFF7EFA) - 1476378493;
  v138 = ((v137 + 1670917341 + (~(2 * v137) | 0x38CFA647)) ^ 0x9C67D320) + v134;
  v139 = v138 - ((2 * v138) & 0xA6ED3168) - 747202380;
  v140 = *(_DWORD *)(v108 + 4 * (BYTE2(v139) ^ 0x76u));
  v141 = *(_DWORD *)(v108 + 4 * (BYTE2(v135) ^ 0xB8u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v131) ^ 0x3F)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v133) ^ 0x4Cu)) ^ *(_DWORD *)(v107 + 4 * (v139 ^ 0xB4u));
  v142 = *(_DWORD *)(a12 + 4 * (HIBYTE(v139) ^ 0xD3));
  v143 = *(_DWORD *)(a28 + 4 * (BYTE1(v139) ^ 0x98u)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v133) ^ 0xADu)) ^ *(_DWORD *)(v107 + 4 * (v131 ^ 0x48u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v135) ^ 0xBD));
  v144 = *(_DWORD *)(a12 + 4 * (HIBYTE(v133) ^ 0xC2)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v131) ^ 0x3Du)) ^ *(_DWORD *)(v107 + 4 * (v135 ^ 0x92u)) ^ v140;
  v145 = *(_DWORD *)(v107 + 4 * (v133 ^ 0x48u)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v131) ^ 0x79u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v135) ^ 0x8Eu)) ^ v142;
  v146 = *(_DWORD *)(v107 + 4 * (v145 ^ 0x3Eu)) ^ 0xB6C558E3;
  v147 = *(_DWORD *)(a12 + 4 * (HIBYTE(v141) ^ 8)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v143) ^ 0x6Bu)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v144) ^ 0x4Cu)) ^ 0x30CE8272;
  v148 = v146 + v147;
  v149 = (v147 & v146) - ((2 * (v147 & v146)) & 0x54BF9FC2);
  v150 = *(_DWORD *)(v107 + 4 * (v141 ^ 0xE6u));
  v151 = *(_DWORD *)(a12 + 4 * (HIBYTE(v143) ^ 0x33)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v144) ^ 0xCDu)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v145) ^ 0xEAu));
  v152 = (((v151 & 0xA7993134 ^ 0x44CF1091) - 1) & 0xA0470134 ^ 0xB0008611)
       + (((v151 & 0xA7993134 ^ 0x44CF1091) - 1) ^ 0x45E719EC)
       - ((((v151 & 0xA7993134 ^ 0x44CF1091) - 1) ^ 0x45E719EC) & 0xA0010174);
  v153 = ((2 * (v151 & 0x5866CECB ^ 0x204EC2)) | 0x87AF79FC) - (v151 & 0x5866CECB ^ 0x204EC2) + 1009271554;
  v154 = ((v153 & 0x9433C1A ^ 0x8423C01) + (v153 & 0xF6BCC3E5) - 1) ^ 0xDBF34C7E | v152 ^ 0x91E78E39;
  v155 = v154 + 621843898 - ((2 * v154) & 0x4A212B74);
  v156 = v155 ^ 0x251095BA;
  v157 = (v150 ^ 0x6C2A32A6 ^ v155) + (v155 ^ 0x251095BA) + 1;
  v158 = v148 ^ 0x9FB7149D;
  v159 = (2 * v148) & 0x3F6E293A;
  v160 = v150 ^ ((v150 ^ 0x493AA71C) - ((2 * (v150 ^ 0x493AA71C) + 2) & 0xD33EE960) - 375425871) ^ 0x40A445F8 ^ (v157 - ((2 * v157) & 0x3FFCD356) + 536766891);
  v161 = *(_DWORD *)(a28 + 4 * (BYTE1(v141) ^ 0x8Eu));
  v162 = *(_DWORD *)(v108 + 4 * (BYTE2(v141) ^ 0xD8u));
  v163 = v160 + v156 - ((2 * (v160 + v156)) & 0x911C4F96) + 1217275851;
  v164 = v158
       + v159
       + ((2 * v149 - 725639230) ^ 0xD61F9EEB)
       + ((2 * (2 * v149 - 725639230)) & 0xFABFFDAC ^ 0x57C0C27B)
       + 1;
  v165 = v164 - ((2 * v164 + 55694452) & 0x6FC1ACA) + 1629943711;
  v166 = *(_DWORD *)(a28 + 4 * (BYTE1(v143) ^ 0xDAu));
  v167 = *(_DWORD *)(a12 + 4 * (HIBYTE(v144) ^ 0x77)) ^ v161 ^ *(_DWORD *)(v108 + 4 * (BYTE2(v145) ^ 0x89u)) ^ *(_DWORD *)(v107 + 4 * (v143 ^ 0xE5u));
  v168 = *(_DWORD *)(a12 + 4 * (HIBYTE(v145) ^ 0xBE)) ^ v162 ^ *(_DWORD *)(v107 + 4
                                                                                  * (v144 ^ 0x3Cu)) ^ v166;
  v169 = *(_DWORD *)(v108 + 4 * (BYTE2(v168) ^ 0x94u));
  v170 = *(_DWORD *)(a12 + 4 * (HIBYTE(v168) ^ 0x4C));
  v171 = *(_DWORD *)(v108 + 4 * (BYTE2(v163) ^ 0x55u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v167) ^ 0x75u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v165) ^ 0xB5)) ^ *(_DWORD *)(v107 + 4 * (v168 ^ 0x37u));
  v172 = *(_DWORD *)(a12 + 4 * (HIBYTE(v163) ^ 0x4B)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v167) ^ 0x16u)) ^ 0x1F190B25;
  v173 = *(_DWORD *)(a28 + 4 * (BYTE1(v168) ^ 0x45u)) ^ 0x2FD78957;
  v174 = 2 * ((v173 & v172) - ((2 * (v173 & v172)) & 0x24F32B4)) + 38744756;
  v175 = ((2 * (v173 + v172)) & 0x777FFCA6)
       + ((v173 + v172) ^ 0xBBBFFE53)
       + (v174 ^ 0x52472ABD)
       + ((2 * v174) & 0x5FEFCFEC ^ 0xFB71BA97);
  v176 = (v175 - ((2 * v175 + 678417226) & 0x23978A3A) + 100904642) ^ *(_DWORD *)(v107
                                                                                + 4 * (v165 ^ 0xB5u));
  v177 = *(_DWORD *)(a12 + 4 * (HIBYTE(v167) ^ 0x74)) ^ v169 ^ *(_DWORD *)(a28 + 4 * (BYTE1(v165) ^ 0x34u)) ^ *(_DWORD *)(v107 + 4 * (v163 ^ 0x6Fu));
  v178 = *(_DWORD *)(a28 + 4 * (BYTE1(v163) ^ 0x1Eu)) ^ v170 ^ *(_DWORD *)(v107 + 4
                                                                                  * (v167 ^ 0x98u)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v165) ^ 0xC5u));
  v179 = *(_DWORD *)(v108 + 4 * (BYTE2(v176) ^ 4u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v177) ^ 0xF9u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v171) ^ 0x47)) ^ *(_DWORD *)(v107 + 4 * (((v178 & 0x25) + 4456447 + (v178 & 0xDA ^ 0xB9B8D04B)) ^ 0xB9FCD005));
  v180 = *(_DWORD *)(v108 + 4 * (BYTE2(v171) ^ 0xDAu));
  v181 = *(_DWORD *)(a28 + 4 * (BYTE1(v171) ^ 0x6Fu));
  v182 = *(_DWORD *)(v108 + 4 * (BYTE2(v177) ^ 0x1Cu)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v178) ^ 0x66u)) ^ *(_DWORD *)(v107 + 4 * (v171 ^ 0x44u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v176) ^ 0x65));
  v183 = *(_DWORD *)(a12 + 4 * (HIBYTE(v177) ^ 0xB6)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v178) ^ 0x83u)) ^ v181;
  v184 = *(_DWORD *)(a12 + 4 * (HIBYTE(v178) ^ 0x7C)) ^ v180;
  v185 = (-961932044 - (v183 & 0x6A9DFF5C ^ 0x628C4808 | 0xC6AA14F4) + (v183 & 0x6A9DFF5C ^ 0x628C4808 | 0x3955EB0B)) ^ 0xF9D13E41;
  v186 = (((2 * (v183 & 0x956200A3 ^ 0x56432222)) | 0xB6B794D8) - (v183 & 0x956200A3 ^ 0x56432222) + 614741396) ^ (((2 * v185) | 0x7B2CB484) - v185 - 1033263682) ^ *(_DWORD *)(v107 + 4 * (v176 ^ 0x8Fu));
  v187 = v184 ^ *(_DWORD *)(v107 + 4 * (v177 ^ 0xE9u)) ^ *(_DWORD *)(a28 + 4
                                                                                            * (BYTE1(v176) ^ 0x11u));
  v188 = *(_DWORD *)(v108 + 4 * (BYTE2(v187) ^ 0xDu)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v186) ^ 0xAA));
  v189 = *(_DWORD *)(a28 + 4 * (BYTE1(v187) ^ 0x3Eu)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v182) ^ 0x88)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v186) ^ 3u)) ^ *(_DWORD *)(v107 + 4 * (v179 ^ 0x99u));
  v190 = *(_DWORD *)(v107 + 4 * (v186 ^ 0xDEu));
  v191 = *(_DWORD *)(a12 + 4 * (HIBYTE(v179) ^ 0x4A)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v182) ^ 0x92u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v186) ^ 0xADu)) ^ *(_DWORD *)(v107 + 4 * (v187 ^ 0x4Eu));
  v192 = v188 ^ *(_DWORD *)(a28 + 4 * (BYTE1(v179) ^ 0x2Du)) ^ *(_DWORD *)(v107 + 4
                                                                                  * (v182 ^ 0xE8u));
  v193 = *(_DWORD *)(a28 + 4 * (BYTE1(v182) ^ 0xA1u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v187) ^ 0x42)) ^ v190 ^ *(_DWORD *)(v108 + 4 * (BYTE2(v179) ^ 0x98u));
  v194 = *(_DWORD *)(a12 + 4 * (HIBYTE(v189) ^ 0xF6));
  v195 = *(_DWORD *)(v108 + 4 * (BYTE2(v192) ^ 0xD2u));
  v196 = (2 * (v194 & 0x100000)) ^ 0x200000 | v194 & 0x100000;
  v197 = (((2 * (v194 & 0xFFEFFFFF ^ 0x788712F3)) | 0xFAE40B80) - (v194 & 0xFFEFFFFF ^ 0x788712F3) - 2104624576) ^ 0xE4528DA0;
  v198 = ((2 * v197) & 0x553EDF16) - v197;
  v199 = *(_DWORD *)(a28 + 4 * (BYTE1(v191) ^ 0xFBu));
  v200 = *(_DWORD *)(a12 + 4 * (HIBYTE(v192) ^ 0xC8));
  v201 = *(_DWORD *)(v107 + 4 * (v193 ^ 0x8Au)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v192) ^ 0xD8u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v191) ^ 0xF8));
  v202 = v196 + 2087032425;
  v203 = *(_DWORD *)(v108 + 4 * (BYTE2(v193) ^ 0xD4u));
  if (((v196 - 0x100000) & (v195 ^ 0xFAE00000))
     - 75713350
     - ((2 * ((v196 - 0x100000) & (v195 ^ 0xFAE00000))) & 0xF6F96944) != -75713350)
    v202 = 2089129577 - v196;
  v204 = (v195 ^ 0xFAEFD7B7) - 2088081001 + v202 - ((2 * ((v195 ^ 0xFAEFD7B7) - 2088081001 + v202)) & 0xC13F5004);
  v205 = *(_DWORD *)(a28 + 4 * (BYTE1(v193) ^ 0x3Cu));
  v206 = v199 ^ 0x2FD78957;
  v207 = *(_DWORD *)(v107 + 4 * (v191 ^ 0x2Du));
  v208 = v207 ^ v205 ^ (v198 + 1432391796) ^ (v204 + 1621075970);
  v209 = (v203 ^ v200 ^ ((v203 ^ v200 ^ 0xE0E6F4DA) - ((2 * (v203 ^ v200 ^ 0xE0E6F4DA) + 2) & 0xC35B09B6) - 508721956) ^ (v206 + (v199 ^ 0xCF317D8D ^ v203 ^ v200) + 1 - ((2 * (v206 + (v199 ^ 0xCF317D8D ^ v203 ^ v200) + 1)) & 0x44E37CB4) + 577879642) ^ 0xDCC531A4)
       + v206;
  v210 = (v209 - ((2 * v209) & 0xC4ED5E76) + 1651945275) ^ *(_DWORD *)(v107 + 4 * (v189 ^ 0x54u));
  v211 = v192;
  v212 = *(_DWORD *)(v108 + 4 * (BYTE2(v191) ^ 0xC5u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v193) ^ 0xC));
  v213 = v212 ^ *(_DWORD *)(a28 + 4 * (BYTE1(v189) ^ 0x80u)) ^ *(_DWORD *)(v107
                                                                           + 4
                                                                           * (((v211 ^ 0x56444288)
                                                                             + (v192 & 0xE2 ^ 0x8918AD62)
                                                                             - ((v211 ^ 0x56444288) & 0x440442E2)) ^ 0x9B58AD3F));
  v214 = 2 * v210;
  if ((v208 & 4) != 0)
    v216 = 252;
  else
    v216 = 4;
  v215 = (v214 ^ 0xA967EFB0) - ((2 * (v214 ^ 0xA967EFB0)) & 0x29C8C708);
  v217 = (v210 & 0x5DCB65B7 ^ 0x2F3CBA6F)
       + (v214 & 0xB3168B6E ^ 0xA1068B20)
       + ((v215 + 1424253828) & 0x2B00C04E ^ 0x22C05DD)
       + ((2 * (v215 + 1424253828)) & 0x5201000C ^ 0xFFFFFFF7)
       + 1;
  v218 = (v217 - ((2 * v217 + 254309534) & 0x1139ABC4) + 540086321) ^ ((v210 & 0xA2349A48 ^ 0x76800264)
                                                                     + (v210 & 0x22209800 ^ 0x162D903)
                                                                     - ((v210 & 0xA2349A48 ^ 0x76800264) & 0x26A09804));
  v219 = v201 ^ *(_DWORD *)(v108 + 4 * (BYTE2(v189) ^ 0x5Cu));
  v220 = (v201 ^ *(_BYTE *)(v108 + 4 * (BYTE2(v189) ^ 0x5Cu))) ^ 0x22F79828;
  v221 = (((2 * v220) & 0x448F00EA) - v220 - 1732740726) ^ 0xBE277DB1;
  v222 = *(_DWORD *)(v108 + 4 * (BYTE2(v218) ^ 0xDAu)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v208) ^ 0x71)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v213) ^ 0x5Cu)) ^ *(_DWORD *)(v107 + 4 * ((((2 * v221) | 0xD6A725D8) - v221 - 1800639212) ^ 0x6F3B0E00));
  v223 = ((v216 + (v208 ^ 0x71E1CD68)) ^ 0x7C) + ((2 * (v216 + (v208 ^ 0x71E1CD68))) & 0xF8) + 132;
  v224 = *(_DWORD *)(a12 + 4 * (HIBYTE(v218) ^ 0xDB)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v219) ^ 0xE2u)) ^ *(_DWORD *)(v107 + 4 * ((v223 - 138262311 - ((2 * v223) & 0x1B2)) ^ 0xF7C248DD)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v213) ^ 0x40u));
  v225 = *(_DWORD *)(a12 + 4 * (HIBYTE(v213) ^ 0x9B)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v219) ^ 0x11u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v208) ^ 0xCDu)) ^ *(_DWORD *)(v107 + 4 * (v218 ^ 0x81u));
  HIDWORD(v226) = v189 ^ 0xBDA91;
  LODWORD(v226) = v189 ^ 0x86000000;
  v227 = (v226 >> 22) - ((2 * (v226 >> 22)) & 0xFF32561A) + 2140744461;
  HIDWORD(v226) = v227 ^ 0x138;
  LODWORD(v226) = v227 ^ 0x50A32400;
  v228 = (v226 >> 10) - ((2 * (v226 >> 10)) & 0xC6EB4E64) - 478828750;
  v229 = *(_DWORD *)(v107 + 4 * (((v226 >> 10) - ((2 * (v226 >> 10)) & 0x64) + 50) ^ 0x74u)) ^ 0xB6C558E3;
  v230 = v205 ^ v195 ^ v207 ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v228) ^ 0x1E));
  v231 = v201 ^ *(_DWORD *)(v108 + 4 * (BYTE2(v228) ^ 0x69u));
  v232 = ((v229 | v200 ^ 0xE5F6DC92) - ((2 * (v229 | v200 ^ 0xE5F6DC92)) & 0x47F0FB88) + 603487684) ^ ((v229 & (v200 ^ 0xE5F6DC92)) - ((2 * (v229 & (v200 ^ 0xE5F6DC92))) & 0xABA17DE0) + 1439743728) ^ ((v206 & (v203 ^ 0xFAEFD7B7)) - ((2 * (v206 & (v203 ^ 0xFAEFD7B7))) & 0xCD69A482) - 424357311) ^ ((v206 | v203 ^ 0xFAEFD7B7) - ((2 * (v206 | v203 ^ 0xFAEFD7B7)) & 0x288BAE46) - 1807362269);
  v233 = v212 ^ *(_DWORD *)(v107 + 4 * (v211 ^ 0x55u)) ^ *(_DWORD *)(a28 + 4 * (BYTE1(v228) ^ 0x33u));
  v234 = ((v233 & 0xFCC100B0 ^ 0x80010091) + (v233 & 0x336FF4F) - 1) ^ (-(v233 & 0x80000) - 1958182113);
  v235 = *(_DWORD *)(v108 + 4 * (BYTE2(v230) ^ 0x46u)) ^ 0xFAEFD7B7;
  v236 = *(_DWORD *)(a12 + 4 * (HIBYTE(v231) ^ 0x2F)) ^ 0xE5F6DC92;
  v237 = (v236 & v235) - ((2 * (v236 & v235)) & 0x6457550A);
  v238 = ((v236 + v235) ^ 0xEF796BFE)
       + ((2 * (v236 + v235)) & 0xDEF2D7FC)
       + ((2 * v237 - 464038646) ^ 0x74D76509)
       + ((2 * (2 * v237 - 464038646)) & 0xDEFF9FF8 ^ 0x375175EF)
       + 1;
  v239 = *(_DWORD *)(a28 + 4 * (BYTE1(v232) ^ 0xA6u)) ^ *(_DWORD *)(v107 + 4 * (v234 ^ 0x6Au)) ^ (v238 - ((2 * v238 + 837630) & 0xA6ACE98) - 2059678901);
  v240 = *(_DWORD *)(a12 + 4 * (HIBYTE(v232) ^ 0x93)) ^ *(_DWORD *)(v108
                                                                    + 4
                                                                    * (((v234 ^ 0x320460C) >> 16) ^ 0x29u));
  v241 = *(_DWORD *)(v107 + 4 * ~(_BYTE)v231) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v230) ^ 0x5F)) ^ *(_DWORD *)(a28 + 4 * (((unsigned __int16)(v234 ^ 0x460C) >> 8) ^ 0x99u)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v232) ^ 0x4Du));
  v242 = (v240 & 0x10 ^ 0x7FBFD5FF) + 2 * (v240 & 0x10);
  v243 = (-1527662033 - (v240 & 0xFFFFFFEF ^ 0xC378DA0B | 0xA4F1BA2F) + (v240 & 0xFFFFFFEF ^ 0xC378DA0B | 0x5B0E45D0)) ^ 0xC72F94F6;
  v244 = ((2 * v243) | 0xE82D317E) - v243;
  v245 = *(_DWORD *)(a28 + 4 * (BYTE1(v231) ^ 0xE2u));
  v246 = ((v242 - 2143278591) & (v245 ^ 0x2FD78950))
       - 1990096911
       - ((2 * ((v242 - 2143278591) & (v245 ^ 0x2FD78950))) & 0x12C30FC0) == -1990096911;
  v247 = v242 - 1310913;
  v248 = -9721027 - v242;
  if (v246)
    v248 = v247;
  v249 = (v244 + 199845697) ^ *(_DWORD *)(v107 + 4 * (v230 ^ 0x3Au)) ^ ((v245 ^ 0x2FD78957)
                                                                                         - 2141967678
                                                                                         + v248
                                                                                         - ((2
                                                                                           * ((v245 ^ 0x2FD78957)
                                                                                            - 2141967678
                                                                                            + v248)) & 0xF1E08F28)
                                                                                         + 2029012884);
  v250 = *(_DWORD *)(a28 + 4 * (BYTE1(v230) ^ 0xB8u)) ^ *(_DWORD *)(a12 + 4 * (HIBYTE(v234) ^ 0x90)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v231) ^ 0x11u)) ^ *(_DWORD *)(v107 + 4 * (v232 ^ 0x39u));
  v251 = (*(_DWORD *)(a12 + 4 * (HIBYTE(v219) ^ 0x2F)) ^ *(_DWORD *)(v108 + 4 * (BYTE2(v208) ^ 0xE1u)) ^ *(_DWORD *)(v107 + 4 * (v213 ^ 0xE5u)) ^ 0x9D3DED93 ^ *(_DWORD *)(a28 + 4 * (BYTE1(v218) ^ 0x9Cu)))
       + 187173966;
  v252 = ((2 * v222) ^ 0xC17B522) - 2 * (((2 * v222) ^ 0xC17B522) & 0x21695A9E ^ (2 * v222) & 4) - 1586931046;
  HIDWORD(v253) = v224 ^ 0x3DA91;
  LODWORD(v253) = v224 ^ 0x86080000;
  v254 = (v253 >> 18) - ((2 * (v253 >> 18)) & 0x20CF1612) + 275221257;
  v255 = (((v252 & 0x4041002 | v252 & 0x8180E180 ^ 0x181) + 138543111) & 0x8584F18A ^ 0x584F008) + (v222 ^ 0x86B2F7F9);
  v256 = ((2 * v255) & 0xFFFA57FA) + (v255 ^ 0x7FFD2BFD);
  v257 = ((2 * v251) & 0xF3AE6B3C) + (v251 ^ 0xF9D7359E) + (v239 ^ 0x78EE7E05);
  v258 = v257 - ((2 * v257 + 206673094) & 0x2180449C) - 1763119951;
  v259 = v249 ^ 0x7A6387C0;
  if ((v249 & 2) != 0)
    v260 = -2;
  else
    v260 = 2;
  v261 = v260 + v259 - ((2 * (v260 + v259)) & 0x5DDEEA86) + 787445059;
  v262 = v258 ^ 0x4130CFCA;
  v263 = (-818646825 * v262) ^ 0xAFF9DFDF;
  v264 = (510189998 * v262) & 0x5FF3BFBE;
  HIDWORD(v265) = v254 ^ 0x61C;
  LODWORD(v265) = v254 ^ 0x99ADC000;
  v266 = ((2 * v261) & 0xDABEBBA6 ^ 0xD2008106) + (v261 ^ 0x165F1D54);
  v267 = (((v265 >> 14) - ((2 * (v265 >> 14)) & 0xA56B0DD0) - 759855384) ^ 0xB30C9407) - 1070568364;
  v268 = ((2 * v267) & 0xDDDC7BAC) + (v267 ^ 0x6EEE3DD6) - v266;
  v269 = ((2 * v241) & 0xB675FBEE ^ 0x80611A60) + (v241 ^ 0x1F4A72CF);
  v270 = (((2 * v225) ^ 0xC17B522) - ((2 * ((2 * v225) ^ 0xC17B522)) & 0xBF9DAF0) - 2047021703) & 0xBA6A0020 ^ 0x12620020;
  v271 = ((((v270 - ((2 * v270) & 0x60D00000) + 1961402712) & 0x59E80020 ^ 0x4C0273 | (v270
                                                                                     - ((2 * v270) & 0x60D00000)
                                                                                     + 1961402712) & 0xA6120000)
         - 1) ^ 0x76E60252)
       + (v225 ^ 0x139A6933);
  v272 = (v256 - v269 - ((2 * (v256 - v269) + 377201652) & 0x1BB23A9E) + 1763110729) ^ 0xE9121C04;
  v273 = ((1743057845 * v272) ^ 0xF1F97DF1) + ((-808851606 * v272) & 0xE3F2FBE2);
  v274 = ((2 * v271) & 0x77EFFCFA) + (v271 ^ 0x3BF7FE7D) + (v250 ^ 0x315096DC);
  v275 = (v274 - ((2 * v274 + 135267080) & 0x6C695364) + 2050796342) ^ 0x9B5AEC9;
  v276 = 292393685 * v275 - 1299677274 - ((584787370 * v275) & 0x6510FF4C);
  v277 = (v268 - ((2 * v268 - 52281350) & 0xC328156A) - 536532302) ^ 0x5DC92232;
  v278 = -1775446584 - 762590379 * v277 - ((622302890 * v277) & 0x2C59AB90);
  v279 = v264 - v273 + v263 + 1107271186;
  v280 = v279 + (v276 ^ 0xB2887FA6) - ((2 * (v279 + (v276 ^ 0xB2887FA6))) & 0x1A0533F4) + 218274298;
  v281 = v273 + 235307535 + (v278 ^ 0x962CD5C8);
  v282 = (v281 ^ 0xAFEC6F6F)
       + (v280 ^ 0xF2FD6605)
       + ((2 * v281) & 0x5FD8DEDE)
       - 2
       * (((v281 ^ 0xAFEC6F6F) + (v280 ^ 0xF2FD6605) + ((2 * v281) & 0x5FD8DEDE) + 1343459474) & 0x775C905F ^ ((v281 ^ 0xAFEC6F6F) + (v280 ^ 0xF2FD6605)) & 1)
       - 948952848;
  v283 = v282 ^ v280;
  v284 = v276 ^ v278 ^ 0x24A4AA6E;
  v285 = v279 + v284 + 550674412 - ((2 * (v279 + v284)) & 0x41A53FD8);
  v286 = ((2 * ((v285 ^ 0x20D29FEC) + v284)) & 0x7F2FD7F4) + (((v285 ^ 0x20D29FEC) + v284) ^ 0x3F97EBFA);
  v287 = (v285 ^ 0xA57369B7 ^ v283) + 1;
  v288 = ((2 * (v287 + (v282 ^ 0x775C905E))) & 0xFF7FDFEE) + ((v287 + (v282 ^ 0x775C905E)) ^ 0x7FBFEFF7);
  v289 = v286 - v288;
  v290 = v288 + v269 + ((2 * v288 + 8396818) ^ 0x9044D011) - ((2 * (2 * v288 + 8396818)) & 0xDF765FDC);
  v291 = ((2 * (v287 + (v239 ^ 0x871181FA))) & 0xFF3FFB34) + ((v287 + (v239 ^ 0x871181FA)) ^ 0xFF9FFD9A);
  v292 = v290 - ((2 * v290 + 2109256204) & 0xA61BB84C) + 300561708;
  v293 = (v250 ^ 0xCEAF6923)
       + (((v283 ^ 0x85A1F65B) + 1076364286 + v289) ^ 0x7DEECB6F)
       + ((2 * ((v283 ^ 0x85A1F65B) + 1076364286 + v289)) & 0xFBDD96DE)
       - 2112801647;
  v294 = ((2 * v293) & 0xBD37BB9E) + (v293 ^ 0x5E9BDDCF);
  v295 = v291 - ((2 * v291 + 1043298766) & 0xD4B2E262) + 158412312;
  v296 = *(_QWORD *)(v33 - 240);
  v297 = v266 - v289 - ((2 * (v266 - v289) + 1553177246) & 0xF757978C) - 1443522283;
  v298 = v294 - ((2 * v294 - 1918167714) & 0xF3118242) - 1067562032;
  v299 = *(_QWORD *)(v33 - 216);
  v300 = *(_DWORD *)(v296 + 4 * (BYTE2(v292) ^ 0xDu)) ^ HIDWORD(a19) ^ *(_DWORD *)(v299 + 4 * (HIBYTE(v295) ^ 0xEA)) ^ *(_DWORD *)(a16 + 4 * (BYTE1(v297) ^ 0xCBu)) ^ *(_DWORD *)(a15 + 4 * (v298 ^ 0x21u));
  HIDWORD(v265) = v300 ^ 0xFB53D;
  LODWORD(v265) = v300 ^ 0x50000000;
  v301 = (v265 >> 25) + 1559690815 + (~(2 * (v265 >> 25)) | 0x46120383);
  v302 = HIDWORD(a19) ^ HIDWORD(a26) ^ *(_DWORD *)(a16 + 4 * (BYTE1(v295) ^ 0x71u)) ^ *(_DWORD *)(v299
                                                                                                  + 4 * (HIBYTE(v297) ^ 0x7B)) ^ *(_DWORD *)(a15 + 4 * (v292 ^ 0x26u)) ^ *(_DWORD *)(v296 + 4 * (BYTE2(v298) ^ 0x88u));
  HIDWORD(v265) = v301 ^ 0xFFFFFFFB;
  LODWORD(v265) = v301 ^ 0x52BAC500;
  v303 = HIDWORD(a17) ^ HIDWORD(a26) ^ HIDWORD(a19);
  v304 = v303 ^ *(_DWORD *)(v296 + 4 * (BYTE2(v297) ^ 0xABu)) ^ *(_DWORD *)(v299 + 4 * (HIBYTE(v292) ^ 0xD3)) ^ *(_DWORD *)(a15 + 4 * (v295 ^ 0x31u)) ^ *(_DWORD *)(a16 + 4 * (BYTE1(v298) ^ 0xC1u));
  v305 = HIDWORD(a17) ^ HIDWORD(a26) ^ ((v265 >> 7) - ((2 * (v265 >> 7)) & 0xE4FCBD20) + 1920884368);
  v306 = v303 ^ *(_DWORD *)(a15 + 4 * (v297 ^ 0xC6u)) ^ *(_DWORD *)(v296 + 4
                                                                                            * (BYTE2(v295) ^ 0x59u)) ^ *(_DWORD *)(a16 + 4 * (BYTE1(v292) ^ 0xDCu)) ^ *(_DWORD *)(v299 + 4 * (HIBYTE(v298) ^ 0xF9));
  v307 = (v302 ^ (v340 + (HIDWORD(v340) ^ v302) - ((2 * (v340 + (HIDWORD(v340) ^ v302))) & 0x160A74A4) - 1962591662) ^ ((v302 ^ 0xAA6525A) - ((2 * (v302 ^ 0xAA6525A) + 2) & 0x75606C0) - 2085944479) ^ 0xFDF79497)
       + a17;
  v308 = v307 - ((2 * v307) & 0x7AA17186) - 1118783293;
  v309 = ((v308 & 0x64C6102B ^ 0x6052395B) + (v308 & 0x1801C484 ^ 0x10481) - 1) ^ 0x4493287B;
  v310 = (-159055418 - (v309 | 0xF68501C6) + (v309 | 0x97AFE39)) ^ ((v308 & 0x83382B50 ^ 0x7EEFD6FF)
                                                                  - ((2 * (v308 & 0x83382B50 ^ 0x7EEFD6FF)) & 0x6104220)
                                                                  - 1635708820);
  LOBYTE(v309) = byte_18CF35640[HIBYTE(v304) ^ 0xDALL];
  v311 = (((8 * v308) ^ 0xD77A17A0) - 1678651491 - ((2 * ((8 * v308) ^ 0xD77A17A0)) & 0x37E39F30)) ^ 0x9BF1CF9D | (((v308 >> 5) & 4 ^ 0x4C) - ((v308 >> 5) & 4) + ((v308 >> 5) ^ 1)) ^ 0x4A;
  v312 = v311 - ((2 * v311) & 0xB0) - 40;
  v313 = *(_BYTE **)(v33 - 200);
  v313[4] = HIBYTE(v304) ^ (((2 * (~(_BYTE)v309 & 0xD4)) | 0xC) - (~(_BYTE)v309 & 0xD4)) ^ 0x3B ^ ((v309 & 0x2B ^ 0xD5)
                                                                                                 - ((2 * (v309 & 0x2B ^ 0xD5)) & 0xCA)
                                                                                                 - 27);
  HIDWORD(v265) = v312 ^ 1;
  LODWORD(v265) = (v312 ^ 0xFFFFFFBF) << 24;
  v314 = byte_18CF284C0[((v265 >> 27) - ((2 * (v265 >> 27)) & 0xC8) + 100) ^ 0xD4];
  HIDWORD(v265) = v314 ^ 8;
  LODWORD(v265) = ~v314 << 24;
  v315 = (v265 >> 28) - ((2 * (v265 >> 28)) & 0xFFFFFF9C);
  HIDWORD(v265) = (v315 - 50) ^ 0x4E;
  LODWORD(v265) = (49 - v315) << 24;
  HIDWORD(v265) = (95
                 - ((2 * ((((v315 - 50) >> 7) & 1 | 0x36) ^ ((v315 - 50) >> 4))) ^ 0x76)) ^ ((v265 >> 31) - ((2 * (v265 >> 31)) & 0xFFFFFFBC) - 34);
  LODWORD(v265) = (HIDWORD(v265) ^ 0xFFFFFFF7) << 24;
  v313[11] = ((v265 >> 25) - ((2 * (v265 >> 25)) & 0x34) + 26) ^ 0xCB;
  v316 = (HIWORD(v306) & 0xDE ^ 0x304A6307) - (HIWORD(v306) & 0x21) + 26220576;
  v317 = byte_18CF50330[v316 ^ 0x31DA7B29] ^ 0x11;
  if ((v316 ^ 0x31DA7B00u) < 0x80)
    v318 = -4;
  else
    v318 = 4;
  v313[13] = (v318 + v317 - ((2 * (v318 + v317)) & 0xB4) + 90) ^ 0x89;
  v319 = byte_18CF35640[HIBYTE(v306) ^ 0x4ELL];
  v320 = (BYTE1(v306) ^ 0xC07C) + ((v306 >> 8) & 0x52 ^ 0x2F02) - ((BYTE1(v306) ^ 0xC07C) & 0x52);
  v321 = ((v306 >> 7) & 4) + (BYTE1(v306) ^ 0xFFFFFF8E) - 1893839362;
  v322 = (((v321 & 0xE0A0222 ^ 0x10603203) + (v321 & 0x10045DD) - 1) ^ 0xE09588DF) + 1;
  v323 = ((v320 & 0x7B3 ^ 0x96A20003) + (v320 & 0x384C ^ 0x8400841) - 1) ^ 0x9EE227C1;
  v324 = v323 + (v322 ^ 0xF3637D7F) + ((2 * v322) & 0xE6C6FAFE) + 211583617;
  HIDWORD(v325) = v319 ^ 1;
  LODWORD(v325) = (v319 ^ 0x80) << 24;
  v326 = (v325 >> 26) - ((2 * (v325 >> 26)) & 0xFFFFFFD0) + 104;
  v313[a32] = HIBYTE(v306) ^ ((v326 & 0xC0) >> 6) ^ (((4 * v326) ^ 0xA0)
                                                                                  - ((8 * v326) & 0xB0)
                                                                                  - 37) ^ 0x1F;
  LOBYTE(v326) = byte_18CF38B70[((v324 - ((2 * v324) & 0x4B8F4322) + 633840017) ^ 0xDA385E6D) + v323];
  v327 = (((2 * (BYTE1(v304) ^ 0x2A)) | 0xEB7B880A) - (BYTE1(v304) ^ 0x2A) + 172112891) ^ 0x74BD901C;
  v328 = (-2031792555 - (v327 | 0x86E54E55) + (v327 | 0x791AB1AA)) ^ 0x7E51A86;
  LOBYTE(v326) = v326 ^ ((v326 ^ 0x9C) - ((2 * (v326 ^ 0x9C) + 106) & 0x66) - 88) ^ ((v326 ^ 0x68)
                                                                                   - ((2 * (v326 ^ 0x68) + 2) & 0x50)
                                                                                   + 41) ^ 0xC;
  v313[14] = BYTE1(v306) ^ (v326 - ((2 * v326 + 40) & 0x20) - 124) ^ 0x8F;
  v329 = (BYTE1(v304) ^ 0xB51200F3) + ((v304 >> 8) & 0x4D ^ 0x4AA1100C) - ((BYTE1(v304) ^ 0xB51200F3) & 0x1502004D);
  v313[1] = byte_18CF50330[((BYTE2(v305) ^ 0x5DB9470C) - ((2 * (BYTE2(v305) ^ 0x5DB9470C)) & 0x2B6086DEu) - 1213047953) ^ 0xEA0B1C4ALL] ^ 0x53;
  v330 = v329 ^ ((v329 ^ 0x154EEFA3) - ((2 * (v329 ^ 0x154EEFA3) + 2) & 0x55A5EAF0) + 718468473);
  v331 = ((v308 >> 23) & 0x12A ^ 0x20) + (HIBYTE(v308) ^ 0xBC7EE7CF);
  v313[6] = BYTE1(v304) ^ byte_18CF38B70[(v330 ^ 0xBFEC5893 ^ (v328 - ((2 * v328 + 6) & 0xFF1F7B6E) + 2140126650)) + 2] ^ 0xFB;
  v332 = (((v305 >> 8) & 3 ^ 0x1DA5B203) - ((v305 >> 8) & 3) + BYTE1(v305)) ^ 0x1F2CB227;
  v313[2] = BYTE1(v305) ^ 0x49 ^ byte_18CF38B70[(v332 - ((2 * v332) & 0x10000ACu) - 1048419242) ^ 0xC30B64C3];
  v313[9] = byte_18CF50330[(((2 * (BYTE2(v310) ^ 0x454478D5)) & 0x8288A006) - (BYTE2(v310) ^ 0x454478D5) - 1400231684) ^ 0xE9CE505ALL] ^ 0xD5;
  v333 = 2 * v331 - ((4 * v331 + 172) & 0x9C) + 420;
  v334 = v331 + (v333 & 0xAE ^ 0xB1018B) + ((2 * v333) & 0x154 ^ 0xFFFFFEEB) + 1;
  v335 = v334 - 1752138146 + (~(2 * v334 - 2053099654) | 0x567F32BF);
  v313[8] = byte_18CF35640[v335 ^ 0x54C066AB] ^ v335 ^ 0x7A;
  LODWORD(v335) = BYTE1(v310) ^ 0x4E;
  v336 = v335
       + (((BYTE1(v310) ^ 0xFFFFFFC9) + 1) ^ 0x7FAFF2C6)
       + ((2 * ((BYTE1(v310) ^ 0xFFFFFFC9) + 1)) & 0xFF5FE58C)
       - 2142237382;
  LODWORD(v335) = ((v336 - ((2 * v336) & 0x40F025BA) + 544740061) ^ 0xDF87ED2D) + v335;
  LOBYTE(v335) = (((v335 + 64) & 0x7D ^ 0x8B) - ((v335 + 64 - ((2 * v335) & 0x80)) & 0x82)) ^ byte_18CF38B70[((_DWORD)v335 + 393947968 - ((2 * (_DWORD)v335) & 0x2EF65680)) ^ 0x177B2B42];
  LOBYTE(v335) = (26 - ((v335 & 0x11) + (v335 | 0x1B))) ^ 0x5A | (40 - ((v335 & 8) + (v335 | 0xFD))) ^ 0x21;
  v337 = (((v306 >> 3) ^ 0xD)
        + ((v306 >> 3) & 0x1C ^ 0x6EDFFD90)
        - (((v306 >> 3) ^ 0xD) & 0x1C)) ^ 0x6EDFFD92 | (((32 * v306) ^ 0x44DA0360)
                                                                       - 258508686
                                                                       - ((2 * ((32 * v306) ^ 0x44DA0360)) & 0xE12EF0C0)) ^ 0xF0977872;
  v338 = v337 - ((2 * v337) & 0x78) - 68;
  HIDWORD(v325) = v338 ^ 0xD;
  LODWORD(v325) = (v338 ^ 0x60) << 24;
  v313[10] = (v335 - ((2 * v335) & 0xDA) - 19) ^ 0xED;
  LODWORD(v335) = (BYTE2(v304) ^ 0xBF | 0x602DE03A) - (BYTE2(v304) ^ 0xBF | 0x9FD21FC5) - 1613619259;
  v313[5] = byte_18CF50330[((v335 & 0x402C5BA9 ^ 0x9C01981) + (v335 & 0x2001A456 ^ 0x2132053) - 1) ^ 0x6BFED9F6] ^ 0x20;
  LODWORD(v335) = byte_18CF284C0[((v325 >> 29) + (~(2 * (v325 >> 29)) | 0xF7) - 123) ^ 0xF0];
  HIDWORD(v325) = v335 ^ 8;
  LODWORD(v325) = ~(_DWORD)v335 << 24;
  LODWORD(v335) = (v325 >> 28) - ((2 * (v325 >> 28)) & 0xFFFFFFAE);
  LOBYTE(v338) = ((4 * ((v335 - 41) >> 1)) ^ 0xF6) + ((v335 - 41) & 0x7F ^ 0x85);
  v313[15] = (40 - v335) & 0x80 ^ (((((_DWORD)v335 - 41) & 0x80) != 0) | 0xBE) ^ ((v335 - 41) >> 4) ^ ((v338 & 0xF8 ^ 0xD0) + (v338 ^ 0x28) - ((v338 ^ 0x28) & 0xF8)) ^ 0xE3;
  v313[*((_QWORD *)&v343 + 1)] = HIBYTE(v305) ^ ~byte_18CF35640[HIBYTE(v305) ^ 0x46];
  LODWORD(v335) = ((v304 & 0xD4 ^ 0x9DBB5385) - (v304 | 0xFFFFFFD4) - 2) ^ 0xADB286DD;
  LODWORD(v335) = byte_18CF284C0[(v335 - ((2 * (_DWORD)v335) & 0x40002756) - 489669717) ^ 0xD2D9EEA3];
  HIDWORD(v325) = v335 ^ 8;
  LODWORD(v325) = ~(_DWORD)v335 << 24;
  v313[7] = ((v325 >> 28) - ((2 * (v325 >> 28)) & 0xEA) + 117) ^ (((v325 >> 28)
                                                                                  - ((2 * (v325 >> 28)) & 0xEA)
                                                                                  + 117) >> 7) ^ (((v325 >> 28) - ((2 * (v325 >> 28)) & 0xEA) + 117) >> 4) ^ 0x2F;
  LODWORD(v335) = byte_18CF284C0[(1052464094
                                - (v305 ^ 0xEA | 0x3EBB53DE)
                                + (v305 ^ 0xEA | 0xC144AC21)) ^ 0xC144AC09];
  HIDWORD(v325) = v335 ^ 8;
  LODWORD(v325) = ~(_DWORD)v335 << 24;
  LODWORD(v335) = (v325 >> 28) - ((2 * (v325 >> 28)) & 0xFFFFFF8C) + 70;
  v313[3] = v335 ^ (((v325 >> 28) - ((2 * (v325 >> 28)) & 0x8C) + 70) >> 4) ^ (((v335 & 0x80) != 0) | 0x3E) ^ 0x5D;
  LODWORD(v341) = a22 + 410160491;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(qword_1E2538EC0[(1596 * ((a22 + 410160491) > 0x10)) ^ (*(_DWORD *)(v33 - 228) - 119)] - 8))(13, a12, 4294967196, byte_18CF35640, 78, 218, v107, a15, a9, a10, v340, a12, a13, v341, a15, a16, a17, a18, a19,
           a20,
           11,
           1,
           4,
           v343,
           *((_QWORD *)&v343 + 1),
           a26,
           a27,
           a28,
           8,
           a30,
           3,
           a32);
}

void sub_18CBC7720()
{
  JUMPOUT(0x18CBC36D0);
}

void sub_18CBC7764(int a1, void *a2, int a3, int a4, int a5, int a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,uint64_t a35,int a36,int a37,uint64_t a38,uint64_t a39)
{
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v47;

  v47 = v39;
  free(v40);
  free(a8);
  free(v41);
  free(a2);
  free(a7);
  free(v43);
  free(*(void **)(v42 - 216));
  free(v47);
  JUMPOUT(0x18CBC77DCLL);
}

uint64_t sub_18CBC7884@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  _BYTE *v12;
  unsigned int v13;

  v11 = v6 < v4;
  if (v11 == v7 - 1908388312 < v4)
    v11 = v7 - 1908388312 < v6;
  v12 = (_BYTE *)(v9 + (v7 | ((unint64_t)(v7 < v5) << 32)) - 200210036);
  v13 = (((v9 + v7 - 200210036) ^ *(_DWORD *)(*(_QWORD *)(v3 + 1464) + (*(_DWORD *)(v2 + 1984) & a1))) & 0x7FFFFFFF)
      * v1;
  *v12 ^= byte_18CF372F0[(v7 - 200210036) & (v8 ^ 0x2C0) | (16 * (((v13 ^ HIWORD(v13)) * v1) >> 24))] ^ (95 * (v13 ^ BYTE2(v13)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((28 * !v11) ^ v8)) - 8))();
}

uint64_t sub_18CBC7958()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (23 * (v1 == 174210216)))) - 35 * (v0 ^ 0x17Bu) + 696))();
}

uint64_t sub_18CBC799C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  unint64_t v11;

  v9 = (char *)(v7 + (v5 + 826299658));
  v10 = *v9;
  LODWORD(v9) = ((v9 ^ *(_DWORD *)(*(_QWORD *)(v3 + 1464) + (*(_DWORD *)(v2 + 1984) & a1))) & 0x7FFFFFFF)
              * v1;
  v11 = (v9 ^ (v9 >> 16)) * v1;
  **(_BYTE **)(v6 + 8) = byte_18CF51850[v11 >> 24] ^ v10 ^ byte_18CF2C960[(v11 >> 24) + 2] ^ byte_18CF4EAC0[(v11 >> 24) + 1] ^ v11 ^ (85 * BYTE3(v11));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * (v4 - 539)) - 4))(-1243892352);
}

void sub_18CBC7A78()
{
  void *v0;

  free(v0);
  JUMPOUT(0x18CBC7A80);
}

char *sub_18CBC7AC0(char *result, char *a2, unint64_t a3)
{
  unint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  BOOL v11;
  char v12;
  unint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
      return (char *)((uint64_t (*)(void))((char *)&loc_18CBC7B94 + 4 * byte_18CF269C0[a3 & 7]))();
  }
  else
  {
    v3 = -(int)result & 7;
    switch((int)v3)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        v4 = *result++;
        *a2++ = v4;
LABEL_6:
        v5 = *result++;
        *a2++ = v5;
LABEL_7:
        v6 = *result++;
        *a2++ = v6;
LABEL_8:
        v7 = *result++;
        *a2++ = v7;
LABEL_9:
        v8 = *result++;
        *a2++ = v8;
LABEL_10:
        v9 = *result++;
        *a2++ = v9;
LABEL_11:
        v10 = *result++;
        *a2++ = v10;
        break;
      default:
        break;
    }
    v11 = a3 >= v3;
    v12 = a3 - v3;
    if (!v11)
      v12 = 0;
    v13 = v12 & 7;
    switch(v13)
    {
      case 0uLL:
        return result;
      case 1uLL:
        goto LABEL_24;
      case 2uLL:
        goto LABEL_23;
      case 3uLL:
        goto LABEL_22;
      case 4uLL:
        goto LABEL_21;
      case 5uLL:
        goto LABEL_20;
      case 6uLL:
        goto LABEL_19;
      case 7uLL:
        v14 = *result++;
        *a2++ = v14;
LABEL_19:
        v15 = *result++;
        *a2++ = v15;
LABEL_20:
        v16 = *result++;
        *a2++ = v16;
LABEL_21:
        v17 = *result++;
        *a2++ = v17;
LABEL_22:
        v18 = *result++;
        *a2++ = v18;
LABEL_23:
        v19 = *result++;
        *a2++ = v19;
LABEL_24:
        *a2 = *result;
        break;
      default:
        result = (char *)((uint64_t (*)(void))((char *)&loc_18CBC7BE0 + 4 * byte_18CF269CF[(v13 >> 3) & 7]))();
        break;
    }
  }
  return result;
}

_BYTE *sub_18CBC7C80(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_18CBC7D10 + 4 * byte_18CF269E6[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

uint64_t get_aks_client_connection()
{
  uint64_t result;

  if (get_aks_client_dispatch_queue_onceToken != -1)
    dispatch_once(&get_aks_client_dispatch_queue_onceToken, &__block_literal_global_168);
  dispatch_sync((dispatch_queue_t)get_aks_client_dispatch_queue_connection_queue, &__block_literal_global_150);
  result = get_aks_client_connection_connection;
  if (!get_aks_client_connection_connection)
  {
    syslog(3, "failed to open connection to %s\n", "AppleKeyStore");
    return get_aks_client_connection_connection;
  }
  return result;
}

void __get_aks_client_connection_block_invoke()
{
  if (!get_aks_client_connection_connection)
    get_aks_client_connection_connection = _copy_aks_client_connection("IOService:/IOResources/AppleKeyStore", "AppleKeyStore");
}

dispatch_queue_t __get_aks_client_dispatch_queue_block_invoke()
{
  dispatch_queue_t result;

  result = dispatch_queue_create("aks-client-queue", 0);
  get_aks_client_dispatch_queue_connection_queue = (uint64_t)result;
  return result;
}

uint64_t _copy_aks_client_connection(char *path, const char *a2)
{
  mach_port_t v3;
  io_service_t v4;
  task_port_t *v5;
  io_object_t v6;
  kern_return_t v7;
  const __CFDictionary *v8;
  io_service_t MatchingService;
  io_object_t v10;
  uint64_t result;
  kern_return_t v12;
  io_connect_t connect;

  connect = 0;
  v3 = *MEMORY[0x1E0CBBAB8];
  v4 = IORegistryEntryFromPath(*MEMORY[0x1E0CBBAB8], path);
  v5 = (task_port_t *)MEMORY[0x1E0C83DA0];
  if (!v4 || (v6 = v4, v7 = IOServiceOpen(v4, *MEMORY[0x1E0C83DA0], 0, &connect), IOObjectRelease(v6), v7))
  {
    v8 = IOServiceMatching(a2);
    MatchingService = IOServiceGetMatchingService(v3, v8);
    if (MatchingService)
    {
      v10 = MatchingService;
      IOServiceOpen(MatchingService, *v5, 0, &connect);
      IOObjectRelease(v10);
    }
  }
  result = connect;
  if (connect)
  {
    v12 = IOConnectCallMethod(connect, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    result = connect;
    if (v12)
    {
      IOServiceClose(connect);
      return 0;
    }
  }
  return result;
}

uint64_t aks_absinthe_generate(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, size_t *a7)
{
  uint64_t v7;
  mach_port_t aks_client_connection;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  mach_port_t v17;
  size_t v19;
  int v20;
  char *v21;
  uint64_t input[2];

  input[1] = *MEMORY[0x1E0C80C00];
  v21 = 0;
  input[0] = a1;
  v20 = 0;
  v7 = 3758097090;
  if (a2 && a6 && a7)
  {
    aks_client_connection = get_aks_client_connection();
    if (aks_client_connection)
    {
      v17 = aks_client_connection;
      aks_pack_data(&v21, (unsigned int *)&v20, 2, v12, v13, v14, v15, v16, a2);
      v19 = *a7;
      v7 = IOConnectCallMethod(v17, 0x51u, input, 1u, v21, v20, 0, 0, a6, &v19);
      if (!(_DWORD)v7)
        *a7 = (int)v19;
    }
    else
    {
      fprintf((FILE *)*MEMORY[0x1E0C80C20], "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_absinthe_generate", ":", 3253, "", 0, "", "");
      v7 = 3758097084;
    }
  }
  free(v21);
  return v7;
}

char *aks_copy_packed_data(_DWORD *a1, const void *a2, int a3)
{
  char *v3;
  int v5;
  size_t v6;
  int __s;

  v3 = (char *)(a1 + 1);
  if (a2)
  {
    *a1 = a3;
    memcpy(a1 + 1, a2, a3);
    v3 += a3;
    v5 = -a3;
    v6 = -a3 & 3;
    if ((v5 & 3) != 0)
    {
      __s = 0;
      memset_s(&__s, 4uLL, 0, 4uLL);
      memcpy(v3, &__s, v6);
      v3 += v6;
    }
  }
  else
  {
    *a1 = 0;
  }
  return v3;
}

char *aks_pack_data(char **a1, unsigned int *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned int v12;
  int v13;
  uint64_t *v14;
  char *result;
  char *v16;
  int v17;
  uint64_t v18;
  const void **v19;
  const void *v20;
  uint64_t *v21;
  const void **v22;

  v21 = &a9;
  v12 = 4;
  if (a3)
  {
    v13 = a3;
    do
    {
      v14 = v21;
      v21 += 2;
      v12 += *((_DWORD *)v14 + 2) + (-*((_DWORD *)v14 + 2) & 3) + 4;
      --v13;
    }
    while (v13);
  }
  result = (char *)calloc(1uLL, v12);
  v16 = result;
  v22 = (const void **)&a9;
  v17 = 0;
  if (a3)
  {
    v18 = 4;
    do
    {
      v19 = v22;
      v20 = *v22;
      v22 += 2;
      result = aks_copy_packed_data(&v16[v18], v20, *((_DWORD *)v19 + 2));
      v18 = result - v16;
      ++v17;
    }
    while (a3 != v17);
  }
  *(_DWORD *)v16 = v17;
  *a1 = v16;
  *a2 = v12;
  return result;
}

void AMSCore::init(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  int v6;
  unsigned __int8 v7;
  int v8;
  unsigned __int8 v9;
  int v10;
  unsigned __int8 v11;
  int v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  std::system_error_vtbl *v15;
  uint64_t v16;
  uint64_t v17;
  std::system_error_vtbl *v18;
  std::system_error_vtbl *v19;
  std::ios_base *v20;
  uint64_t v21;
  unsigned int *v22;
  char *v23;
  char *v24;
  std::system_error_vtbl *v25;
  unsigned __int8 v26;
  std::__shared_weak_count *v27;
  unint64_t *p_shared_owners;
  unint64_t v29;
  unsigned int *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *imp;
  unint64_t *v38;
  unint64_t v39;
  std::system_error_vtbl *v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  char *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unsigned int *v54;
  unsigned int *v55;
  uint64_t v56;
  uint64_t v57;
  std::runtime_error *v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unsigned int *v62;
  unsigned int *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t *v66;
  unsigned int *v67;
  unsigned int *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t *v71;
  unsigned int *v72;
  unsigned int *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t *v76;
  unsigned int *v77;
  unsigned int *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t *v81;
  unsigned int *v82;
  unsigned int *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t *v86;
  unsigned int *v87;
  unsigned int *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t *v91;
  unsigned int *v92;
  unsigned int *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t *v96;
  unsigned int *v97;
  unsigned int *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t *v101;
  unsigned int *v102;
  unsigned int *v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t *v106;
  unsigned int *v107;
  unsigned int *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t *v111;
  unsigned int *v112;
  unsigned int *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t *v116;
  unsigned int *v117;
  unsigned int *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t *v121;
  unint64_t *v122;
  unint64_t v123;
  std::__shared_weak_count *v124;
  unint64_t *v125;
  unint64_t v126;
  unsigned int *v127;
  unsigned int *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t *v131;
  unsigned int *v132;
  unsigned int *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t *v136;
  unsigned int *v137;
  unsigned int *v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t *v141;
  std::runtime_error v142;
  __int128 v143;
  std::__shared_weak_count *v144;
  std::runtime_error v145;
  std::error_code ec;
  unsigned int **v147;
  unsigned int *v148;
  uint64_t v149;
  __int128 v150;
  char v151;
  _BYTE __what_arg[32];
  unsigned int **v153;
  unsigned int *v154;
  uint64_t v155;
  __int128 v156;
  char v157;
  std::system_error v158;
  unsigned int **v159;
  unsigned int *v160;
  uint64_t v161;
  __int128 v162;
  __int128 __p;
  __int128 v164;
  int v165;
  uint64_t v166[22];
  std::error_code v167;

  do
  if ((v4 & 1) == 0)
  {
    v5 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
    if ((v5 & 1) == 0 && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton))
    {
      std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
      qword_1ECEAC7C8 = 0;
      qword_1ECEAC7D0 = 0;
      byte_1ECEAC7D8 = 0;
      __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
    }
    std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
    v6 = byte_1ECEAC7D8;
    std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
    if (!v6)
    {
      v23 = (char *)operator new(0x38uLL);
      *((_QWORD *)v23 + 1) = 0;
      *((_QWORD *)v23 + 2) = 0;
      *(_QWORD *)v23 = &off_1E2522FF8;
      *((_QWORD *)v23 + 3) = &unk_1E2521448;
      v24 = (char *)operator new(0x28uLL);
      *((_QWORD *)v23 + 4) = v24;
      *(_OWORD *)(v23 + 40) = xmmword_18CF51AA0;
      strcpy(v24, "com.apple.AppleMediaServicesCore");
      *(_QWORD *)__what_arg = v23 + 24;
      *(_QWORD *)&__what_arg[8] = v23;
      v25 = (std::system_error_vtbl *)operator new(0x38uLL);
      v25->~system_error_0 = 0;
      v25->what = 0;
      v25->~system_error = (void (__cdecl *)(std::system_error *__hidden))&off_1E2522F88;
      v25[1].~system_error = (void (__cdecl *)(std::system_error *__hidden))&off_1E25213D0;
      LODWORD(v25[1].~system_error_0) = 2;
      v25[1].what = (const char *(__cdecl *)(const std::runtime_error *__hidden))(v23 + 24);
      v25[2].~system_error = (void (__cdecl *)(std::system_error *__hidden))v23;
      v158.__vftable = v25 + 1;
      v158.__imp_.__imp_ = (const char *)v25;
      LOBYTE(__p) = 1;
      v142 = v158.std::runtime_error;
      v158.__vftable = 0;
      v158.__imp_.__imp_ = 0;
      v26 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
      if ((v26 & 1) == 0 && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton))
      {
        std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
        qword_1ECEAC7C8 = 0;
        qword_1ECEAC7D0 = 0;
        byte_1ECEAC7D8 = 0;
        __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
      }
      std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
      v27 = (std::__shared_weak_count *)qword_1ECEAC7D0;
      *(std::runtime_error *)&qword_1ECEAC7C8 = v142;
      if (v27)
      {
        p_shared_owners = (unint64_t *)&v27->__shared_owners_;
        do
          v29 = __ldaxr(p_shared_owners);
        while (__stlxr(v29 - 1, p_shared_owners));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      byte_1ECEAC7D8 = 1;
      std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
    }
    v7 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_13IDataProviderEEERDavE9singleton);
    if ((v7 & 1) == 0
      && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_13IDataProviderEEERDavE9singleton))
    {
      std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_13IDataProviderEEERDavE9singleton);
      xmmword_1ECEABB08 = 0uLL;
      byte_1ECEABB18 = 0;
      __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_13IDataProviderEEERDavE9singleton);
    }
    std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_13IDataProviderEEERDavE9singleton);
    v8 = byte_1ECEABB18;
    std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_13IDataProviderEEERDavE9singleton);
    if (!v8)
    {
      v33 = (char *)operator new(0xE0uLL);
      *((_QWORD *)v33 + 1) = 0;
      *((_QWORD *)v33 + 2) = 0;
      *(_QWORD *)v33 = &off_1E2522C40;
      *((_QWORD *)v33 + 3) = &off_1E2520E90;
      *((_OWORD *)v33 + 3) = 0u;
      *((_OWORD *)v33 + 4) = 0u;
      *((_OWORD *)v33 + 5) = 0u;
      *((_OWORD *)v33 + 6) = 0u;
      *((_OWORD *)v33 + 7) = 0u;
      *((_OWORD *)v33 + 8) = 0u;
      *((_OWORD *)v33 + 9) = 0u;
      *((_OWORD *)v33 + 10) = 0u;
      *((_OWORD *)v33 + 11) = 0u;
      *((_OWORD *)v33 + 12) = 0u;
      *((_OWORD *)v33 + 13) = 0u;
      *((_OWORD *)v33 + 2) = 0u;
      std::__shared_mutex_base::__shared_mutex_base((std::__shared_mutex_base *)(v33 + 32));
      *((_QWORD *)v33 + 27) = 0;
      *((_QWORD *)v33 + 26) = 0;
      *((_QWORD *)v33 + 25) = v33 + 208;
      v158.__vftable = (std::system_error_vtbl *)(v33 + 24);
      v158.__imp_.__imp_ = v33;
      LOBYTE(__p) = 1;
      *(std::runtime_error *)__what_arg = v158.std::runtime_error;
      v158.__vftable = 0;
      v158.__imp_.__imp_ = 0;
      AMSCore::ServiceProvider<AMSCore::IDataProvider>::setDefault((uint64_t)__what_arg);
      v34 = *(std::__shared_weak_count **)&__what_arg[8];
      if (*(_QWORD *)&__what_arg[8])
      {
        v35 = (unint64_t *)(*(_QWORD *)&__what_arg[8] + 8);
        do
          v36 = __ldaxr(v35);
        while (__stlxr(v36 - 1, v35));
        if (!v36)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      if ((_BYTE)__p)
      {
        imp = (std::__shared_weak_count *)v158.__imp_.__imp_;
        if (v158.__imp_.__imp_)
        {
          v38 = (unint64_t *)(v158.__imp_.__imp_ + 8);
          do
            v39 = __ldaxr(v38);
          while (__stlxr(v39 - 1, v38));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))imp->__on_zero_shared)(imp);
            std::__shared_weak_count::__release_weak(imp);
          }
        }
      }
      else
      {
        ((void (*)(std::system_error *))v158.~system_error)(&v158);
      }
    }
    v9 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_17IAnisetteProviderEEERDavE9singleton);
    if ((v9 & 1) == 0
      && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_17IAnisetteProviderEEERDavE9singleton))
    {
      std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_17IAnisetteProviderEEERDavE9singleton);
      xmmword_1ECEAC288 = 0uLL;
      byte_1ECEAC298 = 0;
      __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_17IAnisetteProviderEEERDavE9singleton);
    }
    std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_17IAnisetteProviderEEERDavE9singleton);
    v10 = byte_1ECEAC298;
    std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_17IAnisetteProviderEEERDavE9singleton);
    if (!v10)
    {
      v40 = (std::system_error_vtbl *)operator new(0x20uLL);
      v40->~system_error_0 = 0;
      v40->what = 0;
      v40->~system_error = (void (__cdecl *)(std::system_error *__hidden))&off_1E2522D58;
      v40[1].~system_error = (void (__cdecl *)(std::system_error *__hidden))&off_1E2520FB8;
      v158.__vftable = v40 + 1;
      v158.__imp_.__imp_ = (const char *)v40;
      LOBYTE(__p) = 1;
      *(std::runtime_error *)__what_arg = v158.std::runtime_error;
      v158.__vftable = 0;
      v158.__imp_.__imp_ = 0;
      AMSCore::ServiceProvider<AMSCore::IAnisetteProvider>::setDefault((uint64_t)__what_arg);
      v41 = *(std::__shared_weak_count **)&__what_arg[8];
      if (*(_QWORD *)&__what_arg[8])
      {
        v42 = (unint64_t *)(*(_QWORD *)&__what_arg[8] + 8);
        do
          v43 = __ldaxr(v42);
        while (__stlxr(v43 - 1, v42));
        if (!v43)
        {
          ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
          std::__shared_weak_count::__release_weak(v41);
        }
      }
      if ((_BYTE)__p)
      {
        v44 = (std::__shared_weak_count *)v158.__imp_.__imp_;
        if (v158.__imp_.__imp_)
        {
          v45 = (unint64_t *)(v158.__imp_.__imp_ + 8);
          do
            v46 = __ldaxr(v45);
          while (__stlxr(v46 - 1, v45));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
            std::__shared_weak_count::__release_weak(v44);
          }
        }
      }
      else
      {
        ((void (*)(std::system_error *))v158.~system_error)(&v158);
      }
    }
    v11 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_11IDeviceInfoEEERDavE9singleton);
    if ((v11 & 1) == 0
      && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_11IDeviceInfoEEERDavE9singleton))
    {
      std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_11IDeviceInfoEEERDavE9singleton);
      xmmword_1ECEABA48 = 0uLL;
      byte_1ECEABA58 = 0;
      __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_11IDeviceInfoEEERDavE9singleton);
    }
    std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_11IDeviceInfoEEERDavE9singleton);
    v12 = byte_1ECEABA58;
    std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_11IDeviceInfoEEERDavE9singleton);
    if (!v12)
    {
      v47 = (char *)operator new(0x78uLL);
      *((_QWORD *)v47 + 1) = 0;
      *((_QWORD *)v47 + 2) = 0;
      *(_QWORD *)v47 = &off_1E2522930;
      v158.__vftable = (std::system_error_vtbl *)AMSCore::AppleDeviceInfo::AppleDeviceInfo((AMSCore::AppleDeviceInfo *)(v47 + 24));
      v158.__imp_.__imp_ = v47;
      LOBYTE(__p) = 1;
      *(std::runtime_error *)__what_arg = v158.std::runtime_error;
      v158.__vftable = 0;
      v158.__imp_.__imp_ = 0;
      AMSCore::ServiceProvider<AMSCore::IDeviceInfo>::setDefault((uint64_t)__what_arg);
      v48 = *(std::__shared_weak_count **)&__what_arg[8];
      if (*(_QWORD *)&__what_arg[8])
      {
        v49 = (unint64_t *)(*(_QWORD *)&__what_arg[8] + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (!v50)
        {
          ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
          std::__shared_weak_count::__release_weak(v48);
        }
      }
      if ((_BYTE)__p)
      {
        v51 = (std::__shared_weak_count *)v158.__imp_.__imp_;
        if (v158.__imp_.__imp_)
        {
          v52 = (unint64_t *)(v158.__imp_.__imp_ + 8);
          do
            v53 = __ldaxr(v52);
          while (__stlxr(v53 - 1, v52));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
            std::__shared_weak_count::__release_weak(v51);
          }
        }
      }
      else
      {
        ((void (*)(std::system_error *))v158.~system_error)(&v158);
      }
    }
    AMSCore::defaultInitProvider<AMSCore::IHTTPProvider>((uint64_t)&v145);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        if (v157)
          goto LABEL_119;
        goto LABEL_14;
      }
    }
    if (v157)
    {
LABEL_119:
      std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
      v158.__ec_ = *(std::error_code *)&__what_arg[16];
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v153;
      v160 = v154;
      v161 = v155;
      if (v155)
      {
        *((_QWORD *)v154 + 2) = &v160;
        v153 = &v154;
        v154 = 0;
        v155 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v156;
      v156 = 0uLL;
      std::runtime_error::runtime_error(&v145, &v158);
      ec = v158.__ec_;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v54 = v160;
      v147 = v159;
      v148 = v160;
      v149 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v148;
        v54 = 0;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v147 = &v148;
      }
      v150 = v162;
      v162 = 0uLL;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v54);
      MEMORY[0x18D7898AC](&v158);
      std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
      *(std::error_code *)(a2 + 16) = ec;
      *(_QWORD *)a2 = off_1E2521330;
      v55 = v148;
      *(_QWORD *)(a2 + 32) = v147;
      *(_QWORD *)(a2 + 40) = v55;
      v56 = a2 + 40;
      v57 = v149;
      *(_QWORD *)(a2 + 48) = v149;
      if (v57)
      {
        *((_QWORD *)v55 + 2) = v56;
        v55 = 0;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = v56;
      }
      *(_OWORD *)(a2 + 56) = v150;
      v150 = 0uLL;
      *(_BYTE *)(a2 + 72) = 0;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v55);
      v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
      if (v157)
      {
        *(_QWORD *)__what_arg = off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
        if (*((_QWORD *)&v156 + 1))
        {
          v60 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
          do
            v61 = __ldaxr(v60);
          while (__stlxr(v61 - 1, v60));
LABEL_519:
          if (!v61)
          {
            ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
            std::__shared_weak_count::__release_weak(v59);
          }
          goto LABEL_521;
        }
        goto LABEL_521;
      }
      goto LABEL_522;
    }
LABEL_14:
    AMSCore::defaultInitProvider<AMSCore::IKeybagProvider>((uint64_t)&v145);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        if (v157)
          goto LABEL_144;
        goto LABEL_17;
      }
    }
    if (v157)
    {
LABEL_144:
      std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
      v158.__ec_ = *(std::error_code *)&__what_arg[16];
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v153;
      v160 = v154;
      v161 = v155;
      if (v155)
      {
        *((_QWORD *)v154 + 2) = &v160;
        v153 = &v154;
        v154 = 0;
        v155 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v156;
      v156 = 0uLL;
      std::runtime_error::runtime_error(&v145, &v158);
      ec = v158.__ec_;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v62 = v160;
      v147 = v159;
      v148 = v160;
      v149 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v148;
        v62 = 0;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v147 = &v148;
      }
      v150 = v162;
      v162 = 0uLL;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v62);
      MEMORY[0x18D7898AC](&v158);
      std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
      *(std::error_code *)(a2 + 16) = ec;
      *(_QWORD *)a2 = off_1E2521330;
      v63 = v148;
      *(_QWORD *)(a2 + 32) = v147;
      *(_QWORD *)(a2 + 40) = v63;
      v64 = a2 + 40;
      v65 = v149;
      *(_QWORD *)(a2 + 48) = v149;
      if (v65)
      {
        *((_QWORD *)v63 + 2) = v64;
        v63 = 0;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = v64;
      }
      *(_OWORD *)(a2 + 56) = v150;
      v150 = 0uLL;
      *(_BYTE *)(a2 + 72) = 0;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v63);
      v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
      if (v157)
      {
        *(_QWORD *)__what_arg = off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
        if (*((_QWORD *)&v156 + 1))
        {
          v66 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
          do
            v61 = __ldaxr(v66);
          while (__stlxr(v61 - 1, v66));
          goto LABEL_519;
        }
LABEL_521:
        std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v153, v154);
        v58 = (std::runtime_error *)MEMORY[0x18D7898AC](__what_arg);
      }
LABEL_522:
      if (*(_BYTE *)(a2 + 72))
        return;
      goto LABEL_523;
    }
LABEL_17:
    AMSCore::defaultInitProvider<AMSCore::IMescalProvider>((uint64_t)&v145);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        if (v157)
          goto LABEL_168;
        goto LABEL_20;
      }
    }
    if (v157)
    {
LABEL_168:
      std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
      v158.__ec_ = *(std::error_code *)&__what_arg[16];
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v153;
      v160 = v154;
      v161 = v155;
      if (v155)
      {
        *((_QWORD *)v154 + 2) = &v160;
        v153 = &v154;
        v154 = 0;
        v155 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v156;
      v156 = 0uLL;
      std::runtime_error::runtime_error(&v145, &v158);
      ec = v158.__ec_;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v67 = v160;
      v147 = v159;
      v148 = v160;
      v149 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v148;
        v67 = 0;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v147 = &v148;
      }
      v150 = v162;
      v162 = 0uLL;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v67);
      MEMORY[0x18D7898AC](&v158);
      std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
      *(std::error_code *)(a2 + 16) = ec;
      *(_QWORD *)a2 = off_1E2521330;
      v68 = v148;
      *(_QWORD *)(a2 + 32) = v147;
      *(_QWORD *)(a2 + 40) = v68;
      v69 = a2 + 40;
      v70 = v149;
      *(_QWORD *)(a2 + 48) = v149;
      if (v70)
      {
        *((_QWORD *)v68 + 2) = v69;
        v68 = 0;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = v69;
      }
      *(_OWORD *)(a2 + 56) = v150;
      v150 = 0uLL;
      *(_BYTE *)(a2 + 72) = 0;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v68);
      v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
      if (v157)
      {
        *(_QWORD *)__what_arg = off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
        if (*((_QWORD *)&v156 + 1))
        {
          v71 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
          do
            v61 = __ldaxr(v71);
          while (__stlxr(v61 - 1, v71));
          goto LABEL_519;
        }
        goto LABEL_521;
      }
      goto LABEL_522;
    }
LABEL_20:
    AMSCore::defaultInitProvider<AMSCore::IMetricsSamplingProvider>((uint64_t)&v145);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        if (v157)
          goto LABEL_192;
        goto LABEL_23;
      }
    }
    if (v157)
    {
LABEL_192:
      std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
      v158.__ec_ = *(std::error_code *)&__what_arg[16];
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v153;
      v160 = v154;
      v161 = v155;
      if (v155)
      {
        *((_QWORD *)v154 + 2) = &v160;
        v153 = &v154;
        v154 = 0;
        v155 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v156;
      v156 = 0uLL;
      std::runtime_error::runtime_error(&v145, &v158);
      ec = v158.__ec_;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v72 = v160;
      v147 = v159;
      v148 = v160;
      v149 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v148;
        v72 = 0;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v147 = &v148;
      }
      v150 = v162;
      v162 = 0uLL;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v72);
      MEMORY[0x18D7898AC](&v158);
      std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
      *(std::error_code *)(a2 + 16) = ec;
      *(_QWORD *)a2 = off_1E2521330;
      v73 = v148;
      *(_QWORD *)(a2 + 32) = v147;
      *(_QWORD *)(a2 + 40) = v73;
      v74 = a2 + 40;
      v75 = v149;
      *(_QWORD *)(a2 + 48) = v149;
      if (v75)
      {
        *((_QWORD *)v73 + 2) = v74;
        v73 = 0;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = v74;
      }
      *(_OWORD *)(a2 + 56) = v150;
      v150 = 0uLL;
      *(_BYTE *)(a2 + 72) = 0;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v73);
      v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
      if (v157)
      {
        *(_QWORD *)__what_arg = off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
        if (*((_QWORD *)&v156 + 1))
        {
          v76 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
          do
            v61 = __ldaxr(v76);
          while (__stlxr(v61 - 1, v76));
          goto LABEL_519;
        }
        goto LABEL_521;
      }
      goto LABEL_522;
    }
LABEL_23:
    AMSCore::defaultInitProvider<AMSCore::INotificationCenter>((uint64_t)&v145);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        if (v157)
          goto LABEL_216;
        goto LABEL_26;
      }
    }
    if (v157)
    {
LABEL_216:
      std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
      v158.__ec_ = *(std::error_code *)&__what_arg[16];
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v153;
      v160 = v154;
      v161 = v155;
      if (v155)
      {
        *((_QWORD *)v154 + 2) = &v160;
        v153 = &v154;
        v154 = 0;
        v155 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v156;
      v156 = 0uLL;
      std::runtime_error::runtime_error(&v145, &v158);
      ec = v158.__ec_;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v77 = v160;
      v147 = v159;
      v148 = v160;
      v149 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v148;
        v77 = 0;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v147 = &v148;
      }
      v150 = v162;
      v162 = 0uLL;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v77);
      MEMORY[0x18D7898AC](&v158);
      std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
      *(std::error_code *)(a2 + 16) = ec;
      *(_QWORD *)a2 = off_1E2521330;
      v78 = v148;
      *(_QWORD *)(a2 + 32) = v147;
      *(_QWORD *)(a2 + 40) = v78;
      v79 = a2 + 40;
      v80 = v149;
      *(_QWORD *)(a2 + 48) = v149;
      if (v80)
      {
        *((_QWORD *)v78 + 2) = v79;
        v78 = 0;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = v79;
      }
      *(_OWORD *)(a2 + 56) = v150;
      v150 = 0uLL;
      *(_BYTE *)(a2 + 72) = 0;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v78);
      v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
      if (v157)
      {
        *(_QWORD *)__what_arg = off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
        if (*((_QWORD *)&v156 + 1))
        {
          v81 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
          do
            v61 = __ldaxr(v81);
          while (__stlxr(v61 - 1, v81));
          goto LABEL_519;
        }
        goto LABEL_521;
      }
      goto LABEL_522;
    }
LABEL_26:
    AMSCore::defaultInitProvider<AMSCore::IAccountProvider>((uint64_t)&v145);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        if (v157)
          goto LABEL_240;
        goto LABEL_29;
      }
    }
    if (v157)
    {
LABEL_240:
      std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
      v158.__ec_ = *(std::error_code *)&__what_arg[16];
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v153;
      v160 = v154;
      v161 = v155;
      if (v155)
      {
        *((_QWORD *)v154 + 2) = &v160;
        v153 = &v154;
        v154 = 0;
        v155 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v156;
      v156 = 0uLL;
      std::runtime_error::runtime_error(&v145, &v158);
      ec = v158.__ec_;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v82 = v160;
      v147 = v159;
      v148 = v160;
      v149 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v148;
        v82 = 0;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v147 = &v148;
      }
      v150 = v162;
      v162 = 0uLL;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v82);
      MEMORY[0x18D7898AC](&v158);
      std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
      *(std::error_code *)(a2 + 16) = ec;
      *(_QWORD *)a2 = off_1E2521330;
      v83 = v148;
      *(_QWORD *)(a2 + 32) = v147;
      *(_QWORD *)(a2 + 40) = v83;
      v84 = a2 + 40;
      v85 = v149;
      *(_QWORD *)(a2 + 48) = v149;
      if (v85)
      {
        *((_QWORD *)v83 + 2) = v84;
        v83 = 0;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = v84;
      }
      *(_OWORD *)(a2 + 56) = v150;
      v150 = 0uLL;
      *(_BYTE *)(a2 + 72) = 0;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v83);
      v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
      if (v157)
      {
        *(_QWORD *)__what_arg = off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
        if (*((_QWORD *)&v156 + 1))
        {
          v86 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
          do
            v61 = __ldaxr(v86);
          while (__stlxr(v61 - 1, v86));
          goto LABEL_519;
        }
        goto LABEL_521;
      }
      goto LABEL_522;
    }
LABEL_29:
    AMSCore::defaultInitProvider<AMSCore::IHTTPCacheProvider>(&v145);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        if (v157)
          goto LABEL_264;
        goto LABEL_32;
      }
    }
    if (v157)
    {
LABEL_264:
      std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
      v158.__ec_ = *(std::error_code *)&__what_arg[16];
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v153;
      v160 = v154;
      v161 = v155;
      if (v155)
      {
        *((_QWORD *)v154 + 2) = &v160;
        v153 = &v154;
        v154 = 0;
        v155 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v156;
      v156 = 0uLL;
      std::runtime_error::runtime_error(&v145, &v158);
      ec = v158.__ec_;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v87 = v160;
      v147 = v159;
      v148 = v160;
      v149 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v148;
        v87 = 0;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v147 = &v148;
      }
      v150 = v162;
      v162 = 0uLL;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v87);
      MEMORY[0x18D7898AC](&v158);
      std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
      *(std::error_code *)(a2 + 16) = ec;
      *(_QWORD *)a2 = off_1E2521330;
      v88 = v148;
      *(_QWORD *)(a2 + 32) = v147;
      *(_QWORD *)(a2 + 40) = v88;
      v89 = a2 + 40;
      v90 = v149;
      *(_QWORD *)(a2 + 48) = v149;
      if (v90)
      {
        *((_QWORD *)v88 + 2) = v89;
        v88 = 0;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = v89;
      }
      *(_OWORD *)(a2 + 56) = v150;
      v150 = 0uLL;
      *(_BYTE *)(a2 + 72) = 0;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v88);
      v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
      if (v157)
      {
        *(_QWORD *)__what_arg = off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
        if (*((_QWORD *)&v156 + 1))
        {
          v91 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
          do
            v61 = __ldaxr(v91);
          while (__stlxr(v61 - 1, v91));
          goto LABEL_519;
        }
        goto LABEL_521;
      }
      goto LABEL_522;
    }
LABEL_32:
    AMSCore::defaultInitProvider<AMSCore::IOpenURLProvider>((uint64_t)&v145);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        if (v157)
          goto LABEL_288;
        goto LABEL_35;
      }
    }
    if (v157)
    {
LABEL_288:
      std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
      v158.__ec_ = *(std::error_code *)&__what_arg[16];
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v153;
      v160 = v154;
      v161 = v155;
      if (v155)
      {
        *((_QWORD *)v154 + 2) = &v160;
        v153 = &v154;
        v154 = 0;
        v155 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v156;
      v156 = 0uLL;
      std::runtime_error::runtime_error(&v145, &v158);
      ec = v158.__ec_;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v92 = v160;
      v147 = v159;
      v148 = v160;
      v149 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v148;
        v92 = 0;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v147 = &v148;
      }
      v150 = v162;
      v162 = 0uLL;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v92);
      MEMORY[0x18D7898AC](&v158);
      std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
      *(std::error_code *)(a2 + 16) = ec;
      *(_QWORD *)a2 = off_1E2521330;
      v93 = v148;
      *(_QWORD *)(a2 + 32) = v147;
      *(_QWORD *)(a2 + 40) = v93;
      v94 = a2 + 40;
      v95 = v149;
      *(_QWORD *)(a2 + 48) = v149;
      if (v95)
      {
        *((_QWORD *)v93 + 2) = v94;
        v93 = 0;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = v94;
      }
      *(_OWORD *)(a2 + 56) = v150;
      v150 = 0uLL;
      *(_BYTE *)(a2 + 72) = 0;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v93);
      v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
      if (v157)
      {
        *(_QWORD *)__what_arg = off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
        if (*((_QWORD *)&v156 + 1))
        {
          v96 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
          do
            v61 = __ldaxr(v96);
          while (__stlxr(v61 - 1, v96));
          goto LABEL_519;
        }
        goto LABEL_521;
      }
      goto LABEL_522;
    }
LABEL_35:
    AMSCore::defaultInitProvider<AMSCore::IPrivacyProvider>((uint64_t)&v145);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        if (v157)
          goto LABEL_312;
        goto LABEL_38;
      }
    }
    if (v157)
    {
LABEL_312:
      std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
      v158.__ec_ = *(std::error_code *)&__what_arg[16];
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v153;
      v160 = v154;
      v161 = v155;
      if (v155)
      {
        *((_QWORD *)v154 + 2) = &v160;
        v153 = &v154;
        v154 = 0;
        v155 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v156;
      v156 = 0uLL;
      std::runtime_error::runtime_error(&v145, &v158);
      ec = v158.__ec_;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v97 = v160;
      v147 = v159;
      v148 = v160;
      v149 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v148;
        v97 = 0;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v147 = &v148;
      }
      v150 = v162;
      v162 = 0uLL;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v97);
      MEMORY[0x18D7898AC](&v158);
      std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
      *(std::error_code *)(a2 + 16) = ec;
      *(_QWORD *)a2 = off_1E2521330;
      v98 = v148;
      *(_QWORD *)(a2 + 32) = v147;
      *(_QWORD *)(a2 + 40) = v98;
      v99 = a2 + 40;
      v100 = v149;
      *(_QWORD *)(a2 + 48) = v149;
      if (v100)
      {
        *((_QWORD *)v98 + 2) = v99;
        v98 = 0;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = v99;
      }
      *(_OWORD *)(a2 + 56) = v150;
      v150 = 0uLL;
      *(_BYTE *)(a2 + 72) = 0;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v98);
      v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
      if (v157)
      {
        *(_QWORD *)__what_arg = off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
        if (*((_QWORD *)&v156 + 1))
        {
          v101 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
          do
            v61 = __ldaxr(v101);
          while (__stlxr(v61 - 1, v101));
          goto LABEL_519;
        }
        goto LABEL_521;
      }
      goto LABEL_522;
    }
LABEL_38:
    AMSCore::defaultInitProvider<AMSCore::ISchedulingProvider>((uint64_t)&v145);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        if (v157)
          goto LABEL_336;
        goto LABEL_41;
      }
    }
    if (v157)
    {
LABEL_336:
      std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
      v158.__ec_ = *(std::error_code *)&__what_arg[16];
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v153;
      v160 = v154;
      v161 = v155;
      if (v155)
      {
        *((_QWORD *)v154 + 2) = &v160;
        v153 = &v154;
        v154 = 0;
        v155 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v156;
      v156 = 0uLL;
      std::runtime_error::runtime_error(&v145, &v158);
      ec = v158.__ec_;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v102 = v160;
      v147 = v159;
      v148 = v160;
      v149 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v148;
        v102 = 0;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v147 = &v148;
      }
      v150 = v162;
      v162 = 0uLL;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v102);
      MEMORY[0x18D7898AC](&v158);
      std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
      *(std::error_code *)(a2 + 16) = ec;
      *(_QWORD *)a2 = off_1E2521330;
      v103 = v148;
      *(_QWORD *)(a2 + 32) = v147;
      *(_QWORD *)(a2 + 40) = v103;
      v104 = a2 + 40;
      v105 = v149;
      *(_QWORD *)(a2 + 48) = v149;
      if (v105)
      {
        *((_QWORD *)v103 + 2) = v104;
        v103 = 0;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = v104;
      }
      *(_OWORD *)(a2 + 56) = v150;
      v150 = 0uLL;
      *(_BYTE *)(a2 + 72) = 0;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v103);
      v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
      if (v157)
      {
        *(_QWORD *)__what_arg = off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
        if (*((_QWORD *)&v156 + 1))
        {
          v106 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
          do
            v61 = __ldaxr(v106);
          while (__stlxr(v61 - 1, v106));
          goto LABEL_519;
        }
        goto LABEL_521;
      }
      goto LABEL_522;
    }
LABEL_41:
    AMSCore::defaultInitProvider<AMSCore::RandomProvider>((uint64_t)&v145);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        if (v157)
          goto LABEL_360;
        goto LABEL_44;
      }
    }
    if (v157)
    {
LABEL_360:
      std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
      v158.__ec_ = *(std::error_code *)&__what_arg[16];
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v153;
      v160 = v154;
      v161 = v155;
      if (v155)
      {
        *((_QWORD *)v154 + 2) = &v160;
        v153 = &v154;
        v154 = 0;
        v155 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v156;
      v156 = 0uLL;
      std::runtime_error::runtime_error(&v145, &v158);
      ec = v158.__ec_;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v107 = v160;
      v147 = v159;
      v148 = v160;
      v149 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v148;
        v107 = 0;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v147 = &v148;
      }
      v150 = v162;
      v162 = 0uLL;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v107);
      MEMORY[0x18D7898AC](&v158);
      std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
      *(std::error_code *)(a2 + 16) = ec;
      *(_QWORD *)a2 = off_1E2521330;
      v108 = v148;
      *(_QWORD *)(a2 + 32) = v147;
      *(_QWORD *)(a2 + 40) = v108;
      v109 = a2 + 40;
      v110 = v149;
      *(_QWORD *)(a2 + 48) = v149;
      if (v110)
      {
        *((_QWORD *)v108 + 2) = v109;
        v108 = 0;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = v109;
      }
      *(_OWORD *)(a2 + 56) = v150;
      v150 = 0uLL;
      *(_BYTE *)(a2 + 72) = 0;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v108);
      v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
      if (v157)
      {
        *(_QWORD *)__what_arg = off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
        if (*((_QWORD *)&v156 + 1))
        {
          v111 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
          do
            v61 = __ldaxr(v111);
          while (__stlxr(v61 - 1, v111));
          goto LABEL_519;
        }
        goto LABEL_521;
      }
      goto LABEL_522;
    }
LABEL_44:
    AMSCore::defaultInitProvider<AMSCore::Trace::Tracer>((uint64_t)&v145);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        if (v157)
          goto LABEL_384;
        goto LABEL_47;
      }
    }
    if (v157)
    {
LABEL_384:
      std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
      v158.__ec_ = *(std::error_code *)&__what_arg[16];
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v153;
      v160 = v154;
      v161 = v155;
      if (v155)
      {
        *((_QWORD *)v154 + 2) = &v160;
        v153 = &v154;
        v154 = 0;
        v155 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v156;
      v156 = 0uLL;
      std::runtime_error::runtime_error(&v145, &v158);
      ec = v158.__ec_;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v112 = v160;
      v147 = v159;
      v148 = v160;
      v149 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v148;
        v112 = 0;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v147 = &v148;
      }
      v150 = v162;
      v162 = 0uLL;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v112);
      MEMORY[0x18D7898AC](&v158);
      std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
      *(std::error_code *)(a2 + 16) = ec;
      *(_QWORD *)a2 = off_1E2521330;
      v113 = v148;
      *(_QWORD *)(a2 + 32) = v147;
      *(_QWORD *)(a2 + 40) = v113;
      v114 = a2 + 40;
      v115 = v149;
      *(_QWORD *)(a2 + 48) = v149;
      if (v115)
      {
        *((_QWORD *)v113 + 2) = v114;
        v113 = 0;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = v114;
      }
      *(_OWORD *)(a2 + 56) = v150;
      v150 = 0uLL;
      *(_BYTE *)(a2 + 72) = 0;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v113);
      v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
      if (v157)
      {
        *(_QWORD *)__what_arg = off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
        if (*((_QWORD *)&v156 + 1))
        {
          v116 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
          do
            v61 = __ldaxr(v116);
          while (__stlxr(v61 - 1, v116));
          goto LABEL_519;
        }
        goto LABEL_521;
      }
      goto LABEL_522;
    }
LABEL_47:
    AMSCore::defaultInitProvider<AMSCore::StructuredData::IStructuredDataProvider>((uint64_t)&v145);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        if (v157)
          goto LABEL_406;
        goto LABEL_50;
      }
    }
    if (v157)
    {
LABEL_406:
      std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
      v158.__ec_ = *(std::error_code *)&__what_arg[16];
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v153;
      v160 = v154;
      v161 = v155;
      if (v155)
      {
        *((_QWORD *)v154 + 2) = &v160;
        v153 = &v154;
        v154 = 0;
        v155 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v156;
      v156 = 0uLL;
      std::runtime_error::runtime_error(&v145, &v158);
      ec = v158.__ec_;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v117 = v160;
      v147 = v159;
      v148 = v160;
      v149 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v148;
        v117 = 0;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v147 = &v148;
      }
      v150 = v162;
      v162 = 0uLL;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v117);
      MEMORY[0x18D7898AC](&v158);
      std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
      *(std::error_code *)(a2 + 16) = ec;
      *(_QWORD *)a2 = off_1E2521330;
      v118 = v148;
      *(_QWORD *)(a2 + 32) = v147;
      *(_QWORD *)(a2 + 40) = v118;
      v119 = a2 + 40;
      v120 = v149;
      *(_QWORD *)(a2 + 48) = v149;
      if (v120)
      {
        *((_QWORD *)v118 + 2) = v119;
        v118 = 0;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 32) = v119;
      }
      *(_OWORD *)(a2 + 56) = v150;
      v150 = 0uLL;
      *(_BYTE *)(a2 + 72) = 0;
      v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v118);
      v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
      if (v157)
      {
        *(_QWORD *)__what_arg = off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
        if (*((_QWORD *)&v156 + 1))
        {
          v121 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
          do
            v61 = __ldaxr(v121);
          while (__stlxr(v61 - 1, v121));
          goto LABEL_519;
        }
        goto LABEL_521;
      }
      goto LABEL_522;
    }
LABEL_50:
    v13 = *(_QWORD *)(a1 + 24);
    if (!v13)
      std::__throw_bad_function_call[abi:fe180100]();
    (*(void (**)(__int128 *__return_ptr))(*(_QWORD *)v13 + 48))(&v143);
    AMSCore::defaultInitProvider<AMSCore::IMetricsProvider,AMSCore::BagService>((uint64_t)&v145, &v143);
    if (v151)
    {
      __what_arg[0] = 0;
      v157 = 0;
    }
    else
    {
      std::runtime_error::runtime_error(&v158, &v145);
      v158.__ec_ = ec;
      v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v159 = v147;
      v160 = v148;
      v161 = v149;
      if (v149)
      {
        *((_QWORD *)v148 + 2) = &v160;
        v147 = &v148;
        v148 = 0;
        v149 = 0;
      }
      else
      {
        v159 = &v160;
      }
      v162 = v150;
      v150 = 0uLL;
      LOBYTE(__p) = 0;
      std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
      *(std::error_code *)&__what_arg[16] = v158.__ec_;
      *(_QWORD *)__what_arg = off_1E2521330;
      v153 = v159;
      v154 = v160;
      v155 = v161;
      if (v161)
      {
        *((_QWORD *)v160 + 2) = &v154;
        v159 = &v160;
        v160 = 0;
        v161 = 0;
      }
      else
      {
        v153 = &v154;
      }
      v156 = v162;
      v162 = 0uLL;
      v157 = 1;
      if (!(_BYTE)__p)
        ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
      if (!v151)
      {
        ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
        v14 = v144;
        if (!v144)
          goto LABEL_442;
LABEL_438:
        v122 = (unint64_t *)&v14->__shared_owners_;
        do
          v123 = __ldaxr(v122);
        while (__stlxr(v123 - 1, v122));
        if (!v123)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
LABEL_442:
        v124 = (std::__shared_weak_count *)*((_QWORD *)&v143 + 1);
        if (*((_QWORD *)&v143 + 1))
        {
          v125 = (unint64_t *)(*((_QWORD *)&v143 + 1) + 8);
          do
            v126 = __ldaxr(v125);
          while (__stlxr(v126 - 1, v125));
          if (!v126)
          {
            ((void (*)(std::__shared_weak_count *))v124->__on_zero_shared)(v124);
            std::__shared_weak_count::__release_weak(v124);
          }
        }
        if (v157)
        {
          std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
          v158.__ec_ = *(std::error_code *)&__what_arg[16];
          v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
          v159 = v153;
          v160 = v154;
          v161 = v155;
          if (v155)
          {
            *((_QWORD *)v154 + 2) = &v160;
            v153 = &v154;
            v154 = 0;
            v155 = 0;
          }
          else
          {
            v159 = &v160;
          }
          v162 = v156;
          v156 = 0uLL;
          std::runtime_error::runtime_error(&v145, &v158);
          ec = v158.__ec_;
          v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
          v127 = v160;
          v147 = v159;
          v148 = v160;
          v149 = v161;
          if (v161)
          {
            *((_QWORD *)v160 + 2) = &v148;
            v127 = 0;
            v159 = &v160;
            v160 = 0;
            v161 = 0;
          }
          else
          {
            v147 = &v148;
          }
          v150 = v162;
          v162 = 0uLL;
          v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
          std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v127);
          MEMORY[0x18D7898AC](&v158);
          std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
          *(std::error_code *)(a2 + 16) = ec;
          *(_QWORD *)a2 = off_1E2521330;
          v128 = v148;
          *(_QWORD *)(a2 + 32) = v147;
          *(_QWORD *)(a2 + 40) = v128;
          v129 = a2 + 40;
          v130 = v149;
          *(_QWORD *)(a2 + 48) = v149;
          if (v130)
          {
            *((_QWORD *)v128 + 2) = v129;
            v128 = 0;
            v147 = &v148;
            v148 = 0;
            v149 = 0;
          }
          else
          {
            *(_QWORD *)(a2 + 32) = v129;
          }
          *(_OWORD *)(a2 + 56) = v150;
          v150 = 0uLL;
          *(_BYTE *)(a2 + 72) = 0;
          v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
          std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v128);
          v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
          if (v157)
          {
            *(_QWORD *)__what_arg = off_1E2521330;
            v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
            if (*((_QWORD *)&v156 + 1))
            {
              v131 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
              do
                v61 = __ldaxr(v131);
              while (__stlxr(v61 - 1, v131));
              goto LABEL_519;
            }
            goto LABEL_521;
          }
          goto LABEL_522;
        }
        AMSCore::defaultInitProvider<AMSCore::MetricsIdentifierProvider>((uint64_t)&v145);
        if (v151)
        {
          __what_arg[0] = 0;
          v157 = 0;
        }
        else
        {
          std::runtime_error::runtime_error(&v158, &v145);
          v158.__ec_ = ec;
          v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
          v159 = v147;
          v160 = v148;
          v161 = v149;
          if (v149)
          {
            *((_QWORD *)v148 + 2) = &v160;
            v147 = &v148;
            v148 = 0;
            v149 = 0;
          }
          else
          {
            v159 = &v160;
          }
          v162 = v150;
          v150 = 0uLL;
          LOBYTE(__p) = 0;
          std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
          *(std::error_code *)&__what_arg[16] = v158.__ec_;
          *(_QWORD *)__what_arg = off_1E2521330;
          v153 = v159;
          v154 = v160;
          v155 = v161;
          if (v161)
          {
            *((_QWORD *)v160 + 2) = &v154;
            v159 = &v160;
            v160 = 0;
            v161 = 0;
          }
          else
          {
            v153 = &v154;
          }
          v156 = v162;
          v162 = 0uLL;
          v157 = 1;
          if (!(_BYTE)__p)
            ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
          if (!v151)
          {
            ((void (*)(std::runtime_error *))v145.~runtime_error)(&v145);
            if (v157)
              goto LABEL_484;
            goto LABEL_453;
          }
        }
        if (v157)
        {
LABEL_484:
          std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
          v158.__ec_ = *(std::error_code *)&__what_arg[16];
          v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
          v159 = v153;
          v160 = v154;
          v161 = v155;
          if (v155)
          {
            *((_QWORD *)v154 + 2) = &v160;
            v153 = &v154;
            v154 = 0;
            v155 = 0;
          }
          else
          {
            v159 = &v160;
          }
          v162 = v156;
          v156 = 0uLL;
          std::runtime_error::runtime_error(&v145, &v158);
          ec = v158.__ec_;
          v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
          v132 = v160;
          v147 = v159;
          v148 = v160;
          v149 = v161;
          if (v161)
          {
            *((_QWORD *)v160 + 2) = &v148;
            v132 = 0;
            v159 = &v160;
            v160 = 0;
            v161 = 0;
          }
          else
          {
            v147 = &v148;
          }
          v150 = v162;
          v162 = 0uLL;
          v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
          std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v132);
          MEMORY[0x18D7898AC](&v158);
          std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
          *(std::error_code *)(a2 + 16) = ec;
          *(_QWORD *)a2 = off_1E2521330;
          v133 = v148;
          *(_QWORD *)(a2 + 32) = v147;
          *(_QWORD *)(a2 + 40) = v133;
          v134 = a2 + 40;
          v135 = v149;
          *(_QWORD *)(a2 + 48) = v149;
          if (v135)
          {
            *((_QWORD *)v133 + 2) = v134;
            v133 = 0;
            v147 = &v148;
            v148 = 0;
            v149 = 0;
          }
          else
          {
            *(_QWORD *)(a2 + 32) = v134;
          }
          *(_OWORD *)(a2 + 56) = v150;
          v150 = 0uLL;
          *(_BYTE *)(a2 + 72) = 0;
          v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
          std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v133);
          v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
          if (v157)
          {
            *(_QWORD *)__what_arg = off_1E2521330;
            v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
            if (*((_QWORD *)&v156 + 1))
            {
              v136 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
              do
                v61 = __ldaxr(v136);
              while (__stlxr(v61 - 1, v136));
              goto LABEL_519;
            }
            goto LABEL_521;
          }
          goto LABEL_522;
        }
LABEL_453:
        AMSCore::defaultInitProvider<AMSCore::ICancellationContextProvider>((uint64_t)&v145);
        if (v151)
        {
          __what_arg[0] = 0;
          v157 = 0;
        }
        else
        {
          std::runtime_error::runtime_error(&v158, &v145);
          v158.__ec_ = ec;
          v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
          v159 = v147;
          v160 = v148;
          v161 = v149;
          if (v149)
          {
            *((_QWORD *)v148 + 2) = &v160;
            v147 = &v148;
            v148 = 0;
            v149 = 0;
          }
          else
          {
            v159 = &v160;
          }
          v162 = v150;
          v150 = 0uLL;
          LOBYTE(__p) = 0;
          v58 = std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
          *(std::error_code *)&__what_arg[16] = v158.__ec_;
          *(_QWORD *)__what_arg = off_1E2521330;
          v153 = v159;
          v154 = v160;
          v155 = v161;
          if (v161)
          {
            *((_QWORD *)v160 + 2) = &v154;
            v159 = &v160;
            v160 = 0;
            v161 = 0;
          }
          else
          {
            v153 = &v154;
          }
          v156 = v162;
          v162 = 0uLL;
          v157 = 1;
          if (!(_BYTE)__p)
            ((void (*)(AMSCore::Error *))v158.~system_error)((AMSCore::Error *)&v158);
          if (!v151)
          {
            v58 = (std::runtime_error *)((uint64_t (*)(std::runtime_error *))v145.~runtime_error)(&v145);
            if (v157)
              goto LABEL_506;
            goto LABEL_456;
          }
        }
        if (v157)
        {
LABEL_506:
          std::runtime_error::runtime_error(&v158, (const std::runtime_error *)__what_arg);
          v158.__ec_ = *(std::error_code *)&__what_arg[16];
          v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
          v159 = v153;
          v160 = v154;
          v161 = v155;
          if (v155)
          {
            *((_QWORD *)v154 + 2) = &v160;
            v153 = &v154;
            v154 = 0;
            v155 = 0;
          }
          else
          {
            v159 = &v160;
          }
          v162 = v156;
          v156 = 0uLL;
          std::runtime_error::runtime_error(&v145, &v158);
          ec = v158.__ec_;
          v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
          v137 = v160;
          v147 = v159;
          v148 = v160;
          v149 = v161;
          if (v161)
          {
            *((_QWORD *)v160 + 2) = &v148;
            v137 = 0;
            v159 = &v160;
            v160 = 0;
            v161 = 0;
          }
          else
          {
            v147 = &v148;
          }
          v150 = v162;
          v162 = 0uLL;
          v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
          std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v137);
          MEMORY[0x18D7898AC](&v158);
          std::runtime_error::runtime_error((std::runtime_error *)a2, &v145);
          *(std::error_code *)(a2 + 16) = ec;
          *(_QWORD *)a2 = off_1E2521330;
          v138 = v148;
          *(_QWORD *)(a2 + 32) = v147;
          *(_QWORD *)(a2 + 40) = v138;
          v139 = a2 + 40;
          v140 = v149;
          *(_QWORD *)(a2 + 48) = v149;
          if (v140)
          {
            *((_QWORD *)v138 + 2) = v139;
            v138 = 0;
            v147 = &v148;
            v148 = 0;
            v149 = 0;
          }
          else
          {
            *(_QWORD *)(a2 + 32) = v139;
          }
          *(_OWORD *)(a2 + 56) = v150;
          v150 = 0uLL;
          *(_BYTE *)(a2 + 72) = 0;
          v145.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
          std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v147, v138);
          v58 = (std::runtime_error *)MEMORY[0x18D7898AC](&v145);
          if (v157)
          {
            *(_QWORD *)__what_arg = off_1E2521330;
            v59 = (std::__shared_weak_count *)*((_QWORD *)&v156 + 1);
            if (*((_QWORD *)&v156 + 1))
            {
              v141 = (unint64_t *)(*((_QWORD *)&v156 + 1) + 8);
              do
                v61 = __ldaxr(v141);
              while (__stlxr(v61 - 1, v141));
              goto LABEL_519;
            }
            goto LABEL_521;
          }
          goto LABEL_522;
        }
LABEL_456:
        *(_BYTE *)(a2 + 72) = 1;
        if (*(_BYTE *)(a2 + 72))
          return;
LABEL_523:
        AMSCore::shutdown((AMSCore *)v58);
        return;
      }
    }
    v14 = v144;
    if (!v144)
      goto LABEL_442;
    goto LABEL_438;
  }
  v15 = (std::system_error_vtbl *)MEMORY[0x1E0DE4FE0];
  v16 = MEMORY[0x1E0DE4FE0] + 64;
  v17 = MEMORY[0x1E0DE4F60];
  v18 = *(std::system_error_vtbl **)(MEMORY[0x1E0DE4F60] + 8);
  v19 = *(std::system_error_vtbl **)(MEMORY[0x1E0DE4F60] + 16);
  v166[0] = MEMORY[0x1E0DE4FE0] + 64;
  v158.__vftable = v18;
  *(std::system_error_vtbl **)((char *)&v158.__vftable + (unint64_t)v18[-1].~system_error) = v19;
  v20 = (std::ios_base *)((char *)&v158 + (unint64_t)v158.__vftable[-1].~system_error);
  std::ios_base::init(v20, &v158.__imp_);
  v20[1].__vftable = 0;
  v20[1].__fmtflags_ = -1;
  v158.__vftable = v15 + 1;
  v166[0] = v16;
  std::streambuf::basic_streambuf();
  v21 = MEMORY[0x1E0DE4FB8];
  v158.__imp_.__imp_ = (const char *)(MEMORY[0x1E0DE4FB8] + 16);
  __p = 0u;
  v164 = 0u;
  v165 = 16;
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v158, (uint64_t)"AMSCore has already been initialized.", 37);
  std::stringbuf::str[abi:fe180100]((uint64_t)&v158.__imp_, (std::string *)__what_arg);
  v158.__vftable = *(std::system_error_vtbl **)v17;
  *(std::system_error_vtbl **)((char *)&v158.__vftable + (unint64_t)v158.__vftable[-1].~system_error) = *(std::system_error_vtbl **)(v17 + 24);
  v158.__imp_.__imp_ = (const char *)(v21 + 16);
  if (SBYTE7(v164) < 0)
    operator delete((void *)__p);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x18D789B58](v166);
  v167.__cat_ = (const std::error_category *)&AMSCore::Error::Category::generic(void)::instance;
  *(_QWORD *)&v167.__val_ = 2;
  std::system_error::system_error(&v158, v167, (const std::string *)__what_arg);
  if ((__what_arg[23] & 0x80000000) != 0)
    operator delete(*(void **)__what_arg);
  v160 = 0;
  v161 = 0;
  v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
  v159 = &v160;
  v162 = 0uLL;
  std::runtime_error::runtime_error((std::runtime_error *)__what_arg, &v158);
  *(std::error_code *)&__what_arg[16] = v158.__ec_;
  *(_QWORD *)__what_arg = off_1E2521330;
  v22 = v160;
  v153 = v159;
  v154 = v160;
  v155 = v161;
  if (v161)
  {
    *((_QWORD *)v160 + 2) = &v154;
    v22 = 0;
    v159 = &v160;
    v160 = 0;
    v161 = 0;
  }
  else
  {
    v153 = &v154;
  }
  v156 = v162;
  v162 = 0uLL;
  v158.__vftable = (std::system_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v159, v22);
  MEMORY[0x18D7898AC](&v158);
  std::runtime_error::runtime_error((std::runtime_error *)a2, (const std::runtime_error *)__what_arg);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)&__what_arg[16];
  *(_QWORD *)a2 = off_1E2521330;
  v30 = v154;
  *(_QWORD *)(a2 + 32) = v153;
  *(_QWORD *)(a2 + 40) = v30;
  v31 = a2 + 40;
  v32 = v155;
  *(_QWORD *)(a2 + 48) = v155;
  if (v32)
  {
    *((_QWORD *)v30 + 2) = v31;
    v30 = 0;
    v153 = &v154;
    v154 = 0;
    v155 = 0;
  }
  else
  {
    *(_QWORD *)(a2 + 32) = v31;
  }
  *(_OWORD *)(a2 + 56) = v156;
  v156 = 0uLL;
  *(_BYTE *)(a2 + 72) = 0;
  *(_QWORD *)__what_arg = off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v153, v30);
  MEMORY[0x18D7898AC](__what_arg);
}

void sub_18CBCB9F0(void *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x18D789B58](v1);
  __clang_call_terminate(a1);
}

void AMSCore::defaultInitProvider<AMSCore::IHTTPProvider>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *shared_weak_owners;
  unint64_t v8;
  unint64_t *p_shared_weak_owners;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  char v23;

  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_13IHTTPProviderEEERDavE9singleton);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_13IHTTPProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_13IHTTPProviderEEERDavE9singleton);
    xmmword_1ECEABBC8 = 0uLL;
    byte_1ECEABBD8 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_13IHTTPProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_13IHTTPProviderEEERDavE9singleton);
  v3 = byte_1ECEABBD8;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_13IHTTPProviderEEERDavE9singleton);
  if (!v3)
  {
    v4 = (std::__shared_weak_count *)operator new(0x40uLL);
    v4->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    v4->__shared_weak_owners_ = 0;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&off_1E2522A48;
    v6 = v4 + 1;
    AMSCore::AppleHTTPProvider::AppleHTTPProvider((AMSCore::AppleHTTPProvider *)&v4[1]);
    shared_weak_owners = (std::__shared_weak_count *)v4[1].__shared_weak_owners_;
    if (shared_weak_owners)
    {
      if (shared_weak_owners->__shared_owners_ != -1)
        goto LABEL_17;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      p_shared_weak_owners = (unint64_t *)&v4->__shared_weak_owners_;
      do
        v10 = __ldxr(p_shared_weak_owners);
      while (__stxr(v10 + 1, p_shared_weak_owners));
      v4[1].__shared_owners_ = (uint64_t)v6;
      v4[1].__shared_weak_owners_ = (uint64_t)v4;
      std::__shared_weak_count::__release_weak(shared_weak_owners);
    }
    else
    {
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      v12 = (unint64_t *)&v4->__shared_weak_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      v4[1].__shared_owners_ = (uint64_t)v6;
      v4[1].__shared_weak_owners_ = (uint64_t)v4;
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
LABEL_17:
    *(_QWORD *)&v22 = v4 + 1;
    *((_QWORD *)&v22 + 1) = v4;
    v23 = 1;
    v21 = v22;
    v22 = 0uLL;
    AMSCore::ServiceProvider<AMSCore::IHTTPProvider>::setDefault((uint64_t)&v21);
    v15 = (std::__shared_weak_count *)*((_QWORD *)&v21 + 1);
    if (!*((_QWORD *)&v21 + 1))
      goto LABEL_21;
    v16 = (unint64_t *)(*((_QWORD *)&v21 + 1) + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
      if (v23)
        goto LABEL_22;
    }
    else
    {
LABEL_21:
      if (v23)
      {
LABEL_22:
        v18 = (std::__shared_weak_count *)*((_QWORD *)&v22 + 1);
        if (*((_QWORD *)&v22 + 1))
        {
          v19 = (unint64_t *)(*((_QWORD *)&v22 + 1) + 8);
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
        goto LABEL_3;
      }
    }
    (*(void (**)(__int128 *))v22)(&v22);
  }
LABEL_3:
  *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBCBC44(void *a1)
{
  __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_13IHTTPProviderEEERDavE9singleton);
  __clang_call_terminate(a1);
}

void AMSCore::defaultInitProvider<AMSCore::IKeybagProvider>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  unsigned __int8 v4;
  std::runtime_error_vtbl *v5;
  uint64_t v6;
  std::runtime_error_vtbl *v7;
  uint64_t v8;
  uint64_t v9;
  std::runtime_error_vtbl *v10;
  std::runtime_error_vtbl *v11;
  std::ios_base *v12;
  uint64_t v13;
  void (__cdecl *v14)(std::runtime_error *__hidden);
  unsigned __int8 v15;
  unsigned int *v16;
  char *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  std::runtime_error_vtbl *v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *imp;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  AMSCore::AppleHardwareInfo *v32;
  std::runtime_error v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  std::runtime_error v39[2];
  unsigned int *v40[4];
  std::__shared_weak_count *v41;
  __int128 __p;
  __int128 v43;
  int v44;
  uint64_t v45[20];
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  int v47;
  unsigned int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IKeybagProviderEEERDavE9singleton);
  if ((v2 & 1) == 0)
    goto LABEL_41;
  while (1)
  {
    std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IKeybagProviderEEERDavE9singleton);
    v3 = byte_1ECEABE18;
    std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IKeybagProviderEEERDavE9singleton);
    if (v3)
      goto LABEL_3;
    if ((v4 & 1) == 0)
    {
      if ((_DWORD)v32)
      {
        AMSCore::AppleHardwareInfo::make(v32);
      }
    }
    if (byte_1ECEAB868)
    {
      v34 = AMSCore::AppleHardwareInfo::get(void)::hardware;
      v35 = qword_1ECEAB830;
      v36 = byte_1ECEAB868;
      v5 = (std::runtime_error_vtbl *)operator new(0x38uLL);
      v5->~runtime_error_0 = 0;
      v5->what = 0;
      v5->~runtime_error = (void (__cdecl *)(std::runtime_error *__hidden))&off_1E2522B60;
      *(_OWORD *)&v5[1].~runtime_error_0 = AMSCore::AppleHardwareInfo::get(void)::hardware;
      v5[2].~runtime_error = (void (__cdecl *)(std::runtime_error *__hidden))qword_1ECEAB830;
      v5[1].~runtime_error = (void (__cdecl *)(std::runtime_error *__hidden))&off_1E2520E30;
      v39[0].__vftable = v5 + 1;
      v39[0].__imp_.__imp_ = (const char *)v5;
      LOBYTE(__p) = 1;
      goto LABEL_28;
    }
    AMSCore::Error::Error((std::runtime_error *)&v34, (const std::runtime_error *)&AMSCore::AppleHardwareInfo::get(void)::hardware);
    v36 = 0;
    AMSCore::ServiceProvider<AMSCore::Logger>::getDefault(&v37);
    v6 = v37;
    if (*(int *)(v37 + 8) <= 3)
    {
      v7 = (std::runtime_error_vtbl *)MEMORY[0x1E0DE4FE0];
      v8 = MEMORY[0x1E0DE4FE0] + 64;
      v9 = MEMORY[0x1E0DE4F60];
      v10 = *(std::runtime_error_vtbl **)(MEMORY[0x1E0DE4F60] + 8);
      v11 = *(std::runtime_error_vtbl **)(MEMORY[0x1E0DE4F60] + 16);
      v45[0] = MEMORY[0x1E0DE4FE0] + 64;
      v39[0].__vftable = v10;
      *(std::runtime_error_vtbl **)((char *)&v39[0].__vftable + (unint64_t)v10[-1].~runtime_error) = v11;
      v12 = (std::ios_base *)((char *)v39 + (unint64_t)v39[0].__vftable[-1].~runtime_error);
      std::ios_base::init(v12, &v39[0].__imp_);
      v12[1].__vftable = 0;
      v12[1].__fmtflags_ = -1;
      v39[0].__vftable = v7 + 1;
      v45[0] = v8;
      std::streambuf::basic_streambuf();
      v13 = MEMORY[0x1E0DE4FB8];
      v39[0].__imp_.__imp_ = (const char *)(MEMORY[0x1E0DE4FB8] + 16);
      __p = 0u;
      v43 = 0u;
      v44 = 16;
      v14 = v39[0].__vftable[-1].~runtime_error;
      if ((v15 & 1) == 0
      {
      }
      std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v39, (uint64_t)"Failed to make default keybag provider, unable to get hardwareInfo: ", 68);
      AMSCore::operator<<(v39, (uint64_t)&v34);
      v16 = v40[2];
      v17 = (char *)v39 + (unint64_t)v39[0].__vftable[-1].~runtime_error;
      if ((v17[32] & 5) != 0)
      {
        v18 = -1;
      }
      else
      {
        (*(void (**)(std::chrono::duration<long long, std::ratio<1, 1000000>>::rep *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v17 + 5) + 32))(&rep, *((_QWORD *)v17 + 5), 0, 1, 16);
        v18 = v50;
      }
      rep = std::chrono::system_clock::now().__d_.__rep_;
      v47 = 3;
      v48 = v16;
      v49 = v18;
      (*(void (**)(_QWORD, const char *, uint64_t, std::chrono::duration<long long, std::ratio<1, 1000000>>::rep *))(**(_QWORD **)(v6 + 16) + 16))(*(_QWORD *)(v6 + 16), "fairplay", 8, &rep);
      v39[0].__vftable = *(std::runtime_error_vtbl **)v9;
      *(std::runtime_error_vtbl **)((char *)&v39[0].__vftable + (unint64_t)v39[0].__vftable[-1].~runtime_error) = *(std::runtime_error_vtbl **)(v9 + 24);
      v39[0].__imp_.__imp_ = (const char *)(v13 + 16);
      if (SBYTE7(v43) < 0)
        operator delete((void *)__p);
      std::streambuf::~streambuf();
      std::ostream::~ostream();
      MEMORY[0x18D789B58](v45);
    }
    v19 = v38;
    if (v38)
    {
      p_shared_owners = (unint64_t *)&v38->__shared_owners_;
      do
        v21 = __ldaxr(p_shared_owners);
      while (__stlxr(v21 - 1, p_shared_owners));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (!v36)
      break;
    __break(1u);
LABEL_41:
    if (__cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IKeybagProviderEEERDavE9singleton))
    {
      std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IKeybagProviderEEERDavE9singleton);
      xmmword_1ECEABE08 = 0uLL;
      byte_1ECEABE18 = 0;
      __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IKeybagProviderEEERDavE9singleton);
    }
  }
  v22 = (std::runtime_error_vtbl *)operator new(0x68uLL);
  v22->~runtime_error_0 = 0;
  v22->what = 0;
  v22->~runtime_error = (void (__cdecl *)(std::runtime_error *__hidden))&off_1E2522AF0;
  v22[1].~runtime_error = (void (__cdecl *)(std::runtime_error *__hidden))&off_1E2520BD8;
  AMSCore::Error::Error(v39, (const std::runtime_error *)&v34);
  AMSCore::Error::Error<>((uint64_t)&v22[1].~runtime_error_0, (uint64_t)v39, 662, (const std::error_category *)&AMSCore::Error::Category::fairplay(void)::instance);
  v39[0].__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v23 = v41;
  if (v41)
  {
    v24 = (unint64_t *)&v41->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)v40, v40[1]);
  MEMORY[0x18D7898AC](v39);
  v39[0].__vftable = v22 + 1;
  v39[0].__imp_.__imp_ = (const char *)v22;
  LOBYTE(__p) = 1;
  if (!v36)
    (*(void (**)(__int128 *))v34)(&v34);
LABEL_28:
  v33 = v39[0];
  v39[0] = 0uLL;
  AMSCore::ServiceProvider<AMSCore::IKeybagProvider>::setDefault((uint64_t)&v33);
  imp = (std::__shared_weak_count *)v33.__imp_.__imp_;
  if (v33.__imp_.__imp_)
  {
    v27 = (unint64_t *)(v33.__imp_.__imp_ + 8);
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))imp->__on_zero_shared)(imp);
      std::__shared_weak_count::__release_weak(imp);
      if ((_BYTE)__p)
        goto LABEL_33;
LABEL_39:
      ((void (*)(std::runtime_error *))v39[0].~runtime_error)(v39);
      goto LABEL_3;
    }
  }
  if (!(_BYTE)__p)
    goto LABEL_39;
LABEL_33:
  v29 = (std::__shared_weak_count *)v39[0].__imp_.__imp_;
  if (v39[0].__imp_.__imp_)
  {
    v30 = (unint64_t *)(v39[0].__imp_.__imp_ + 8);
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
LABEL_3:
  *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBCC1BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,char a23)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  __clang_call_terminate(exception_object);
}

void AMSCore::defaultInitProvider<AMSCore::IMescalProvider>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  char *v4;
  uint64_t v5;
  int v6;
  int v7;
  std::string::size_type v8;
  std::system_error_vtbl *v9;
  uint64_t v10;
  std::system_error_vtbl *v11;
  std::system_error_vtbl *v12;
  std::ios_base *v13;
  void (__cdecl *v14)(std::system_error *__hidden);
  unsigned __int8 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  std::__shared_weak_count *size;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  unsigned __int8 v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *imp;
  unint64_t *v30;
  unint64_t v31;
  std::runtime_error v32;
  unsigned int **v33;
  unsigned int *v34;
  uint64_t v35;
  std::string __what_arg;
  std::system_error v37;
  unsigned int **v38;
  unsigned int *v39;
  uint64_t v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  void *__p[2];
  __int128 v44;
  int v45;
  uint64_t v46[20];
  _QWORD v47[3];
  __int128 v48;
  uint64_t v49;
  uint64_t v50[3];
  int v51;
  uint64_t v52;
  uint64_t v53;
  std::error_code v54;

  v53 = *MEMORY[0x1E0C80C00];
  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
  if ((v2 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
    qword_1ECEABEC8 = 0;
    qword_1ECEABED0 = 0;
    byte_1ECEABED8 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
  v3 = byte_1ECEABED8;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
  if (!v3)
  {
    v4 = (char *)operator new(0x98uLL);
    *((_QWORD *)v4 + 1) = 0;
    *((_QWORD *)v4 + 2) = 0;
    *(_QWORD *)v4 = &off_1E2522B98;
    v5 = operator new();
    *(_QWORD *)v5 = &off_1E2520700;
    *(_QWORD *)(v5 + 8) = 0;
    *(_BYTE *)(v5 + 16) = 0;
    *(_BYTE *)(v5 + 88) = 0;
    memset(v47, 0, sizeof(v47));
    cp2g1b9ro(v5 + 8, (uint64_t)v47);
    v7 = v6;
    if (v6)
    {
      AMSCore::ServiceProvider<AMSCore::Logger>::getDefault(&__what_arg);
      v8 = __what_arg.__r_.__value_.__r.__words[0];
      if (*(int *)(__what_arg.__r_.__value_.__r.__words[0] + 8) <= 4)
      {
        v9 = (std::system_error_vtbl *)MEMORY[0x1E0DE4FE0];
        v10 = MEMORY[0x1E0DE4FE0] + 64;
        v11 = *(std::system_error_vtbl **)(MEMORY[0x1E0DE4F60] + 8);
        v12 = *(std::system_error_vtbl **)(MEMORY[0x1E0DE4F60] + 16);
        v46[0] = MEMORY[0x1E0DE4FE0] + 64;
        v37.__vftable = v11;
        *(std::system_error_vtbl **)((char *)&v37.__vftable + (unint64_t)v11[-1].~system_error) = v12;
        v13 = (std::ios_base *)((char *)&v37 + (unint64_t)v37.__vftable[-1].~system_error);
        std::ios_base::init(v13, &v37.__imp_);
        v13[1].__vftable = 0;
        v13[1].__fmtflags_ = -1;
        v37.__vftable = v9 + 1;
        v46[0] = v10;
        std::streambuf::basic_streambuf();
        v37.__imp_.__imp_ = (const char *)(MEMORY[0x1E0DE4FB8] + 16);
        *(_OWORD *)__p = 0u;
        v44 = 0u;
        v45 = 16;
        v14 = v37.__vftable[-1].~system_error;
        if ((v15 & 1) == 0
        {
        }
        std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v37, (uint64_t)"FairPlay Mescal init failed! with status: ", 42);
        std::ostream::operator<<();
        v16 = v40;
        v17 = (char *)&v37 + (unint64_t)v37.__vftable[-1].~system_error;
        if ((v17[32] & 5) != 0)
        {
          v18 = -1;
        }
        else
        {
          (*(void (**)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t, uint64_t))(**((_QWORD **)v17 + 5)
                                                                                           + 32))(&v48, *((_QWORD *)v17 + 5), 0, 1, 16);
          v18 = v52;
        }
        *(std::chrono::system_clock::time_point *)&v48 = std::chrono::system_clock::now();
        DWORD2(v48) = 4;
        v49 = v16;
        v50[0] = v18;
        (*(void (**)(_QWORD, const char *, uint64_t, __int128 *))(**(_QWORD **)(v8 + 16) + 16))(*(_QWORD *)(v8 + 16), "fairplay", 8, &v48);
        v37.__vftable = (std::system_error_vtbl *)*MEMORY[0x1E0DE4F60];
        *(std::system_error_vtbl **)((char *)&v37.__vftable + (unint64_t)v37.__vftable[-1].~system_error) = *(std::system_error_vtbl **)(MEMORY[0x1E0DE4F60] + 24);
        v37.__imp_.__imp_ = (const char *)(MEMORY[0x1E0DE4FB8] + 16);
        if (SBYTE7(v44) < 0)
          operator delete(__p[0]);
        std::streambuf::~streambuf();
        std::ostream::~ostream();
        MEMORY[0x18D789B58](v46);
      }
      size = (std::__shared_weak_count *)__what_arg.__r_.__value_.__l.__size_;
      if (__what_arg.__r_.__value_.__l.__size_)
      {
        v20 = (unint64_t *)(__what_arg.__r_.__value_.__l.__size_ + 8);
        do
          v21 = __ldaxr(v20);
        while (__stlxr(v21 - 1, v20));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
          std::__shared_weak_count::__release_weak(size);
        }
      }
      HIBYTE(v49) = 5;
      strcpy((char *)&v48, "CCode");
      v50[0] = v7;
      v51 = 3;
      v34 = 0;
      v35 = 0;
      v33 = &v34;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,AMSCore::Any> const&>((uint64_t **)&v33, (uint64_t *)&v34, (const void **)&v48, &v48);
      AMSCore::StringUtils::join<>(&__what_arg);
      v54.__cat_ = (const std::error_category *)&AMSCore::Error::Category::fairplay(void)::instance;
      *(_QWORD *)&v54.__val_ = 600;
      std::system_error::system_error(&v37, v54, &__what_arg);
      if (SHIBYTE(__what_arg.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__what_arg.__r_.__value_.__l.__data_);
      v37.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v38 = v33;
      v39 = v34;
      v40 = v35;
      if (v35)
      {
        *((_QWORD *)v34 + 2) = &v39;
        v33 = &v34;
        v34 = 0;
        v35 = 0;
      }
      else
      {
        v38 = &v39;
      }
      v41 = 0;
      v42 = 0;
      std::optional<AMSCore::Error>::operator=[abi:fe180100]<AMSCore::Error,void>(v5 + 16, (uint64_t)&v37);
      v37.__vftable = (std::system_error_vtbl *)off_1E2521330;
      v22 = v42;
      if (v42)
      {
        p_shared_owners = (unint64_t *)&v42->__shared_owners_;
        do
          v24 = __ldaxr(p_shared_owners);
        while (__stlxr(v24 - 1, p_shared_owners));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v38, v39);
      MEMORY[0x18D7898AC](&v37);
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v33, v34);
      if (v51 != -1)
        ((void (*)(std::string *, uint64_t *))off_1E253D240[v51])(&__what_arg, v50);
      v51 = -1;
      if (SHIBYTE(v49) < 0)
        operator delete((void *)v48);
    }
    *((_QWORD *)v4 + 3) = &off_1E2520E60;
    *((_QWORD *)v4 + 4) = 850045863;
    *(_OWORD *)(v4 + 40) = 0u;
    *(_OWORD *)(v4 + 56) = 0u;
    *(_OWORD *)(v4 + 72) = 0u;
    *(_OWORD *)(v4 + 81) = 0u;
    *((_QWORD *)v4 + 13) = v4 + 104;
    *((_QWORD *)v4 + 14) = v4 + 104;
    *((_QWORD *)v4 + 15) = 0;
    *((_QWORD *)v4 + 16) = v5;
    v4[136] = 0;
    v4[144] = 0;
    v37.__vftable = (std::system_error_vtbl *)(v4 + 24);
    v37.__imp_.__imp_ = v4;
    LOBYTE(__p[0]) = 1;
    v32 = v37.std::runtime_error;
    v37.__vftable = 0;
    v37.__imp_.__imp_ = 0;
    v25 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
    if ((v25 & 1) == 0
      && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton))
    {
      std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
      qword_1ECEABEC8 = 0;
      qword_1ECEABED0 = 0;
      byte_1ECEABED8 = 0;
      __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
    }
    std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
    v26 = (std::__shared_weak_count *)qword_1ECEABED0;
    *(std::runtime_error *)&qword_1ECEABEC8 = v32;
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldaxr(v27);
      while (__stlxr(v28 - 1, v27));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
    byte_1ECEABED8 = 1;
    std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
    if (LOBYTE(__p[0]))
    {
      imp = (std::__shared_weak_count *)v37.__imp_.__imp_;
      if (v37.__imp_.__imp_)
      {
        v30 = (unint64_t *)(v37.__imp_.__imp_ + 8);
        do
          v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))imp->__on_zero_shared)(imp);
          std::__shared_weak_count::__release_weak(imp);
        }
      }
    }
    else
    {
      ((void (*)(std::system_error *))v37.~system_error)(&v37);
    }
  }
  *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBCC8D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  __clang_call_terminate(exception_object);
}

void AMSCore::defaultInitProvider<AMSCore::IMetricsSamplingProvider>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  _QWORD *v4;
  _QWORD *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  char v14;

  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_24IMetricsSamplingProviderEEERDavE9singleton);
  if ((v2 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_24IMetricsSamplingProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_24IMetricsSamplingProviderEEERDavE9singleton);
    xmmword_1ECEAC588 = 0uLL;
    byte_1ECEAC598 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_24IMetricsSamplingProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_24IMetricsSamplingProviderEEERDavE9singleton);
  v3 = byte_1ECEAC598;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_24IMetricsSamplingProviderEEERDavE9singleton);
  if (!v3)
  {
    v4 = (_QWORD *)operator new();
    *v4 = &off_1E2520798;
    v5 = operator new(0x48uLL);
    v5[1] = 0;
    v5[2] = 0;
    *v5 = &off_1E2522FC0;
    v5[3] = &off_1E25213F0;
    v5[4] = v4;
    v5[5] = &off_1E2521E40;
    v5[8] = v5 + 5;
    *(_QWORD *)&v13 = v5 + 3;
    *((_QWORD *)&v13 + 1) = v5;
    v14 = 1;
    v12 = v13;
    v13 = 0uLL;
    AMSCore::ServiceProvider<AMSCore::IMetricsSamplingProvider>::setDefault((uint64_t)&v12);
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
    if (!*((_QWORD *)&v12 + 1))
      goto LABEL_8;
    v7 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      if (v14)
        goto LABEL_9;
    }
    else
    {
LABEL_8:
      if (v14)
      {
LABEL_9:
        v9 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
        if (*((_QWORD *)&v13 + 1))
        {
          v10 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
          do
            v11 = __ldaxr(v10);
          while (__stlxr(v11 - 1, v10));
          if (!v11)
          {
            ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
            std::__shared_weak_count::__release_weak(v9);
          }
        }
        goto LABEL_3;
      }
    }
    (*(void (**)(__int128 *))v13)(&v13);
  }
LABEL_3:
  *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBCCBB0(void *a1)
{
  __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_24IMetricsSamplingProviderEEERDavE9singleton);
  __clang_call_terminate(a1);
}

void AMSCore::defaultInitProvider<AMSCore::INotificationCenter>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  char *v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  char v13;

  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
  if ((v2 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
    xmmword_1ECEAC408 = 0uLL;
    byte_1ECEAC418 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
  v3 = byte_1ECEAC418;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
  if (!v3)
  {
    v4 = (char *)operator new(0x80uLL);
    *((_QWORD *)v4 + 1) = 0;
    *((_QWORD *)v4 + 2) = 0;
    *(_QWORD *)v4 = &off_1E2522D90;
    *((_QWORD *)v4 + 3) = &off_1E2521008;
    *((_QWORD *)v4 + 4) = 850045863;
    *(_OWORD *)(v4 + 40) = 0u;
    *(_OWORD *)(v4 + 56) = 0u;
    *(_OWORD *)(v4 + 72) = 0u;
    *((_QWORD *)v4 + 14) = 0;
    *((_QWORD *)v4 + 15) = 0;
    *((_QWORD *)v4 + 13) = 0;
    *((_QWORD *)v4 + 11) = 0;
    *((_QWORD *)v4 + 12) = v4 + 104;
    *(_QWORD *)&v12 = v4 + 24;
    *((_QWORD *)&v12 + 1) = v4;
    v13 = 1;
    v11 = v12;
    v12 = 0uLL;
    AMSCore::ServiceProvider<AMSCore::INotificationCenter>::setDefault((uint64_t)&v11);
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (!*((_QWORD *)&v11 + 1))
      goto LABEL_8;
    v6 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v13)
        goto LABEL_9;
    }
    else
    {
LABEL_8:
      if (v13)
      {
LABEL_9:
        v8 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
        if (*((_QWORD *)&v12 + 1))
        {
          v9 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
          do
            v10 = __ldaxr(v9);
          while (__stlxr(v10 - 1, v9));
          if (!v10)
          {
            ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
            std::__shared_weak_count::__release_weak(v8);
          }
        }
        goto LABEL_3;
      }
    }
    (*(void (**)(__int128 *))v12)(&v12);
  }
LABEL_3:
  *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBCCD80(void *a1)
{
  __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
  __clang_call_terminate(a1);
}

void AMSCore::defaultInitProvider<AMSCore::IAccountProvider>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t i;
  const char *v16;
  size_t v17;
  size_t v18;
  void *p_dst;
  uint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  int v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v54;
  size_t v55;
  size_t v56;
  void *v57;
  size_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  uint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t v67;
  unint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t *p_shared_weak_owners;
  unint64_t v72;
  unint64_t v73;
  unsigned __int8 v74;
  __int128 v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t *v84;
  void *__dst;
  std::__shared_weak_count *v86;
  int64_t v87;
  char v88;
  uint64_t v89;
  void *__p;
  char v91;
  char v92;

  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
  if ((v2 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
    qword_1ECEABF88 = 0;
    qword_1ECEABF90 = 0;
    byte_1ECEABF98 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
  v3 = byte_1ECEABF98;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
  if (v3)
    goto LABEL_3;
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)v4 = &off_1E25210A8;
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 48) = 850045863;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 104) = 0u;
  *(_OWORD *)(v4 + 120) = 0u;
  *(_QWORD *)(v4 + 152) = 0;
  *(_QWORD *)(v4 + 144) = 0;
  *(_OWORD *)(v4 + 160) = 0u;
  v84 = (uint64_t *)(v4 + 160);
  *(_OWORD *)(v4 + 176) = 0u;
  v82 = v4;
  v83 = (uint64_t *)(v4 + 176);
  *(_QWORD *)(v4 + 136) = v4 + 144;
  *(_QWORD *)(v4 + 192) = 850045863;
  *(_OWORD *)(v4 + 200) = 0u;
  *(_OWORD *)(v4 + 216) = 0u;
  *(_OWORD *)(v4 + 232) = 0u;
  *(_OWORD *)(v4 + 241) = 0u;
  *(_QWORD *)(v4 + 264) = v4 + 264;
  *(_QWORD *)(v4 + 272) = v4 + 264;
  *(_QWORD *)(v4 + 280) = 0;
  LOBYTE(__dst) = 0;
  v88 = 0;
  v89 = 0;
  __p = (void *)0x6C61636F6CLL;
  v91 = 5;
  v5 = operator new(0xC0uLL);
  v5[1] = 0;
  v5[2] = 0;
  *v5 = &off_1E2522850;
  v6 = std::construct_at[abi:fe180100]<AMSCore::MediaAccount,AMSCore::AccountIdentity,AMSCore::MediaAccount*>((uint64_t)(v5 + 3), (uint64_t)&__dst);
  v7 = *(std::__shared_weak_count **)(v4 + 168);
  *(_QWORD *)(v4 + 160) = v6;
  *(_QWORD *)(v4 + 168) = v5;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
      if ((v91 & 0x80000000) == 0)
        goto LABEL_10;
      goto LABEL_9;
    }
  }
  if (v91 < 0)
LABEL_9:
    operator delete(__p);
LABEL_10:
  if (v88 && SHIBYTE(v87) < 0)
    operator delete(__dst);
  LOBYTE(__dst) = 0;
  v88 = 0;
  v89 = 0;
  __p = (void *)0x6C61636F6CLL;
  v91 = 5;
  v10 = operator new(0xC0uLL);
  v10[2] = 0;
  *v10 = &off_1E2522850;
  v10[1] = 0;
  v11 = std::construct_at[abi:fe180100]<AMSCore::MediaAccount,AMSCore::AccountIdentity,AMSCore::MediaAccount*>((uint64_t)(v10 + 3), (uint64_t)&__dst);
  v12 = *(std::__shared_weak_count **)(v4 + 184);
  *(_QWORD *)(v4 + 176) = v11;
  *(_QWORD *)(v4 + 184) = v10;
  if (!v12)
    goto LABEL_17;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (v14)
  {
LABEL_17:
    if ((v91 & 0x80000000) == 0)
      goto LABEL_19;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (v91 < 0)
LABEL_18:
    operator delete(__p);
LABEL_19:
  if (v88 && SHIBYTE(v87) < 0)
    operator delete(__dst);
  for (i = 0; i != 7; ++i)
  {
    v16 = _ZGRN7AMSCore11IBundleInfo22KnownClientIdentifiersE_[i];
    v17 = strlen(v16);
    if (v17 > 0x7FFFFFFFFFFFFFF7)
      std::string::__throw_length_error[abi:fe180100]();
    v18 = v17;
    if (v17 >= 0x17)
    {
      v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v17 | 7) != 0x17)
        v20 = v17 | 7;
      v21 = v20 + 1;
      p_dst = operator new(v20 + 1);
      v86 = (std::__shared_weak_count *)v18;
      v87 = v21 | 0x8000000000000000;
      __dst = p_dst;
LABEL_31:
      memmove(p_dst, v16, v18);
      goto LABEL_32;
    }
    HIBYTE(v87) = v17;
    p_dst = &__dst;
    if (v17)
      goto LABEL_31;
LABEL_32:
    *((_BYTE *)p_dst + v18) = 0;
    v22 = (std::__shared_weak_count *)HIBYTE(v87);
    if (v87 < 0)
      v22 = v86;
    if (v22 == (std::__shared_weak_count *)62)
    {
      v40 = (uint64_t *)__dst;
      if (v87 >= 0)
        v40 = (uint64_t *)&__dst;
      v41 = *v40;
      v42 = v40[1];
      v43 = v40[2];
      v44 = v40[3];
      v45 = v40[4];
      v46 = v40[5];
      v47 = v40[6];
      v32 = *(uint64_t *)((char *)v40 + 54);
      v38 = v41 == 0x6C7070612E6D6F63
         && v42 == 0x4D656C7070412E65
         && v43 == 0x7672655361696465
         && v44 == 0x65726F4373656369
         && v45 == 0x41616964654D492ELL
         && v46 == 0x612E746E756F6363
         && v47 == 0x5365726F74537070;
      v39 = 0x786F62646E615365;
    }
    else
    {
      v23 = 0;
      if (v22 != (std::__shared_weak_count *)59)
        goto LABEL_84;
      v24 = (uint64_t *)__dst;
      if (v87 >= 0)
        v24 = (uint64_t *)&__dst;
      v25 = *v24;
      v26 = v24[1];
      v27 = v24[2];
      v28 = v24[3];
      v29 = v24[4];
      v30 = v24[5];
      v31 = v24[6];
      v32 = *(uint64_t *)((char *)v24 + 51);
      v38 = v25 == 0x6C7070612E6D6F63
         && v26 == 0x4D656C7070412E65
         && v27 == 0x7672655361696465
         && v28 == 0x65726F4373656369
         && v29 == 0x41616964654D492ELL
         && v30 == 0x612E746E756F6363
         && v31 == 0x4265726F74537070;
      v39 = 0x6174654265726F74;
    }
    v23 = v38 && v32 == v39;
LABEL_84:
    if (SHIBYTE(v87) < 0)
    {
      operator delete(__dst);
      if (v23)
      {
LABEL_86:
        v54 = *v83;
        v55 = strlen(v16);
        if (v55 > 0x7FFFFFFFFFFFFFF7)
          std::string::__throw_length_error[abi:fe180100]();
        v56 = v55;
        if (v55 >= 0x17)
        {
          v59 = (v55 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v55 | 7) != 0x17)
            v59 = v55 | 7;
          v60 = v59 + 1;
          v57 = operator new(v59 + 1);
          v86 = (std::__shared_weak_count *)v56;
          v87 = v60 | 0x8000000000000000;
          __dst = v57;
LABEL_102:
          memmove(v57, v16, v56);
          goto LABEL_103;
        }
        HIBYTE(v87) = v55;
        v57 = &__dst;
        if (v55)
          goto LABEL_102;
        goto LABEL_103;
      }
    }
    else if (v23)
    {
      goto LABEL_86;
    }
    v54 = *v84;
    v58 = strlen(v16);
    if (v58 > 0x7FFFFFFFFFFFFFF7)
      std::string::__throw_length_error[abi:fe180100]();
    v56 = v58;
    if (v58 >= 0x17)
    {
      v61 = (v58 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v58 | 7) != 0x17)
        v61 = v58 | 7;
      v62 = v61 + 1;
      v57 = operator new(v61 + 1);
      v86 = (std::__shared_weak_count *)v56;
      v87 = v62 | 0x8000000000000000;
      __dst = v57;
      goto LABEL_102;
    }
    HIBYTE(v87) = v58;
    v57 = &__dst;
    if (v58)
      goto LABEL_102;
LABEL_103:
    *((_BYTE *)v57 + v56) = 0;
    (*(void (**)(uint64_t, uint64_t, void **))(*(_QWORD *)v54 + 152))(v54, 1, &__dst);
    if (SHIBYTE(v87) < 0)
      operator delete(__dst);
  }
  v63 = (std::__shared_weak_count *)operator new();
  v63->__shared_owners_ = 0;
  v64 = (unint64_t *)&v63->__shared_owners_;
  v63->__vftable = (std::__shared_weak_count_vtbl *)&off_1E2523298;
  v65 = v82;
  v63->__shared_weak_owners_ = 0;
  v63[1].__vftable = (std::__shared_weak_count_vtbl *)v82;
  v66 = *(std::__shared_weak_count **)(v82 + 16);
  if (!v66)
  {
    do
      v70 = __ldxr(v64);
    while (__stxr(v70 + 1, v64));
    p_shared_weak_owners = (unint64_t *)&v63->__shared_weak_owners_;
    do
      v72 = __ldxr(p_shared_weak_owners);
    while (__stxr(v72 + 1, p_shared_weak_owners));
    *(_QWORD *)(v82 + 8) = v82;
    *(_QWORD *)(v82 + 16) = v63;
    goto LABEL_115;
  }
  if (v66->__shared_owners_ == -1)
  {
    do
      v67 = __ldxr(v64);
    while (__stxr(v67 + 1, v64));
    v68 = (unint64_t *)&v63->__shared_weak_owners_;
    do
      v69 = __ldxr(v68);
    while (__stxr(v69 + 1, v68));
    *(_QWORD *)(v82 + 8) = v82;
    *(_QWORD *)(v82 + 16) = v63;
    std::__shared_weak_count::__release_weak(v66);
    do
LABEL_115:
      v73 = __ldaxr(v64);
    while (__stlxr(v73 - 1, v64));
    if (!v73)
    {
      ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
      std::__shared_weak_count::__release_weak(v63);
    }
  }
  v92 = 1;
  __dst = 0;
  v86 = 0;
  v74 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
  if ((v74 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
    qword_1ECEABF88 = 0;
    qword_1ECEABF90 = 0;
    byte_1ECEABF98 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
    v65 = v82;
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
  *(_QWORD *)&v75 = v65;
  *((_QWORD *)&v75 + 1) = v63;
  v76 = (std::__shared_weak_count *)qword_1ECEABF90;
  *(_OWORD *)&qword_1ECEABF88 = v75;
  if (v76)
  {
    v77 = (unint64_t *)&v76->__shared_owners_;
    do
      v78 = __ldaxr(v77);
    while (__stlxr(v78 - 1, v77));
    if (!v78)
    {
      ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
      std::__shared_weak_count::__release_weak(v76);
    }
  }
  byte_1ECEABF98 = 1;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
  if (v92)
  {
    v79 = v86;
    if (v86)
    {
      v80 = (unint64_t *)&v86->__shared_owners_;
      do
        v81 = __ldaxr(v80);
      while (__stlxr(v81 - 1, v80));
      if (!v81)
      {
        ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
        std::__shared_weak_count::__release_weak(v79);
      }
    }
  }
  else
  {
    (*(void (**)(void **))__dst)(&__dst);
  }
LABEL_3:
  *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBCD604(void *a1)
{
  __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
  __clang_call_terminate(a1);
}

void sub_18CBCD628(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  (*(void (**)(uint64_t))(*(_QWORD *)a14 + 8))(a14);
  __clang_call_terminate(a1);
}

void sub_18CBCD644(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, std::mutex *a11, _QWORD *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  std::__shared_weak_count *v22;
  void *v24;
  std::__shared_weak_count *v25;

  std::__shared_weak_count::~__shared_weak_count(v22);
  operator delete(v24);
  AMSCore::AccountIdentity::~AccountIdentity(&__p);
  AMSCore::AwaitableMutex::~AwaitableMutex(a10);
  std::shared_ptr<AMSCore::AppleSchedulingProvider>::~shared_ptr[abi:fe180100](a15);
  std::shared_ptr<AMSCore::AppleSchedulingProvider>::~shared_ptr[abi:fe180100](a16);
  std::__tree<std::__value_type<std::string,std::shared_ptr<AMSCore::IHTTPCookieProvider>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<AMSCore::IHTTPCookieProvider>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<AMSCore::IHTTPCookieProvider>>>>::destroy(*(_QWORD *)(a14 + 144));
  AMSCore::Subject<std::string const&,AMSCore::AccountChangedMetadata>::~Subject(a11);
  std::vector<std::unique_ptr<AMSCore::IMediaAccount>>::~vector[abi:fe180100](a12);
  v25 = *(std::__shared_weak_count **)(a14 + 16);
  if (v25)
    std::__shared_weak_count::__release_weak(v25);
  MEMORY[0x18D789BDC](a14, 0x10A1C40F5969409);
  __clang_call_terminate(a1);
}

void AMSCore::defaultInitProvider<AMSCore::IHTTPCacheProvider>(std::runtime_error *a1)
{
  unsigned __int8 v2;
  int v3;
  std::runtime_error_vtbl *v4;
  uint64_t v5;
  char *v6;
  unsigned int *v7;
  unsigned int *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *imp;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::runtime_error_vtbl *v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  std::runtime_error *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unsigned int *v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unsigned int *v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unsigned int *v40;
  unsigned int *v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unsigned int *v45;
  unsigned int *v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  unsigned int *v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unsigned int *v57;
  unsigned int *v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unsigned int *v62;
  unsigned int *v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unsigned int *v67;
  unsigned int *v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  std::__libcpp_refstring *v73;
  uint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  std::runtime_error_vtbl *v78;
  std::__libcpp_refstring *p_imp;
  uint64_t v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  char *v84;
  _QWORD *v85;
  std::runtime_error_vtbl *v86;
  std::runtime_error_vtbl *v87;
  const char *v88;
  uint64_t v89;
  unint64_t *v90;
  unint64_t v91;
  std::runtime_error v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  std::__shared_weak_count *v96;
  unint64_t *v97;
  unint64_t v98;
  std::runtime_error *p_p;
  uint64_t v100;
  std::__shared_weak_count *v101;
  unint64_t *v102;
  unint64_t v103;
  std::__shared_weak_count *v104;
  unint64_t *v105;
  unint64_t v106;
  std::__shared_weak_count *v107;
  unint64_t *v108;
  unint64_t v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  unsigned int *v113;
  std::runtime_error *v114;
  unsigned int *v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  std::runtime_error_vtbl *v119;
  int v120;
  unsigned __int8 v121;
  std::__shared_weak_count *v122;
  unint64_t *v123;
  unint64_t v124;
  unsigned int *v125;
  unsigned int *v126;
  std::runtime_error_vtbl *v127;
  std::__libcpp_refstring *v128;
  std::__shared_weak_count *v129;
  unint64_t *v130;
  unint64_t v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  unint64_t v134;
  std::runtime_error v135;
  std::runtime_error *v136;
  std::runtime_error v137;
  std::runtime_error v138;
  unsigned int **v139;
  unsigned int *v140;
  std::__libcpp_refstring *v141;
  __int128 v142;
  char v143;
  std::runtime_error v144[2];
  unsigned int **v145;
  unsigned int *v146;
  std::__libcpp_refstring *v147;
  __int128 v148;
  char v149;
  std::runtime_error v150;
  std::runtime_error v151;
  unsigned int **v152;
  unsigned int *v153;
  std::__libcpp_refstring *v154;
  __int128 v155;
  _BYTE v156[32];
  unsigned int **v157;
  unsigned int *v158;
  std::__libcpp_refstring *v159;
  __int128 v160;
  char v161;
  _BYTE v162[32];
  unsigned int **v163;
  unsigned int *v164;
  std::__libcpp_refstring *v165;
  __int128 v166;
  char v167;
  std::runtime_error v168;
  std::runtime_error v169;
  unsigned int **v170;
  unsigned int *v171;
  std::__libcpp_refstring *v172;
  __int128 v173;
  char v174;
  std::runtime_error v175;
  std::runtime_error v176;
  unsigned int **v177;
  unsigned int *v178;
  std::__libcpp_refstring *v179;
  __int128 v180;
  char v181;
  std::runtime_error __p;
  std::runtime_error v183;
  unsigned int **v184;
  unsigned int *v185;
  std::__libcpp_refstring *v186;
  __int128 v187;
  char v188;
  char v189;
  std::runtime_error v190;
  std::runtime_error v191;
  unsigned int **v192;
  unsigned int *v193;
  std::__libcpp_refstring *v194;
  __int128 v195;
  unsigned __int8 v196;
  uint64_t v197;

  v197 = *MEMORY[0x1E0C80C00];
  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
  if ((v2 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
    qword_1ECEAC348 = 0;
    qword_1ECEAC350 = 0;
    byte_1ECEAC358 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
  v3 = byte_1ECEAC358;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
  if (v3)
    goto LABEL_383;
  v136 = a1;
  v162[23] = 9;
  strcpy(v162, "HTTPCache");
  v156[23] = 0;
  v156[0] = 0;
  AMSCore::ServiceProvider<AMSCore::IDataProvider>::getDefault(v144);
  v4 = v144[0].__vftable;
  __p.__imp_.__imp_ = 0;
  __p.__vftable = 0;
  v183.__vftable = 0;
  v5 = v162[23];
  if (v162[23] >= 0)
    v6 = v162;
  else
    v6 = *(char **)v162;
  if (v162[23] < 0)
    v5 = *(_QWORD *)&v162[8];
  std::string::append[abi:fe180100]<char const*,0>((unint64_t)&__p, v6, &v6[v5]);
  (*((void (**)(std::runtime_error *__return_ptr, std::runtime_error_vtbl *, std::runtime_error *))v4->~runtime_error
   + 2))(&v190, v4, &__p);
  if (SHIBYTE(v183.__vftable) < 0)
    operator delete(__p.__vftable);
  if (v196)
  {
    AMSCore::SQLiteDatabase::make((uint64_t)&__p, (char *)&v190, (uint64_t)v156);
  }
  else
  {
    std::runtime_error::runtime_error(&v175, &v190);
    v176 = v191;
    v175.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v177 = v192;
    v178 = v193;
    v179 = v194;
    if (v194)
    {
      *((_QWORD *)v193 + 2) = &v178;
      v192 = &v193;
      v193 = 0;
      v194 = 0;
    }
    else
    {
      v177 = &v178;
    }
    v180 = v195;
    v195 = 0uLL;
    v181 = 1;
    std::runtime_error::runtime_error(&__p, &v175);
    v183 = v176;
    __p.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v184 = v177;
    v185 = v178;
    v186 = v179;
    if (v179)
    {
      *((_QWORD *)v178 + 2) = &v185;
      v177 = &v178;
      v178 = 0;
      v179 = 0;
    }
    else
    {
      v184 = &v185;
    }
    v187 = v180;
    v180 = 0uLL;
    std::runtime_error::runtime_error(&v168, &__p);
    v169 = v183;
    v168.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v7 = v185;
    v170 = v184;
    v171 = v185;
    v172 = v186;
    if (v186)
    {
      *((_QWORD *)v185 + 2) = &v171;
      v7 = 0;
      v184 = &v185;
      v185 = 0;
      v186 = 0;
    }
    else
    {
      v170 = &v171;
    }
    v173 = v187;
    v187 = 0uLL;
    __p.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v184, v7);
    MEMORY[0x18D7898AC](&__p);
    std::runtime_error::runtime_error(&__p, &v168);
    v183 = v169;
    __p.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v8 = v171;
    v184 = v170;
    v185 = v171;
    v186 = v172;
    if (v172)
    {
      *((_QWORD *)v171 + 2) = &v185;
      v8 = 0;
      v170 = &v171;
      v171 = 0;
      v172 = 0;
    }
    else
    {
      v184 = &v185;
    }
    v187 = v173;
    v173 = 0uLL;
    v189 = 0;
    v168.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v170, v8);
    MEMORY[0x18D7898AC](&v168);
    if (v181)
    {
      v175.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v9 = (std::__shared_weak_count *)*((_QWORD *)&v180 + 1);
      if (*((_QWORD *)&v180 + 1))
      {
        v10 = (unint64_t *)(*((_QWORD *)&v180 + 1) + 8);
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v177, v178);
      MEMORY[0x18D7898AC](&v175);
    }
  }
  if (v196)
  {
    if (SHIBYTE(v191.__vftable) < 0)
      operator delete(v190.__vftable);
    imp = (std::__shared_weak_count *)v144[0].__imp_.__imp_;
    if (!v144[0].__imp_.__imp_)
    {
LABEL_40:
      if ((v156[23] & 0x80000000) == 0)
        goto LABEL_41;
LABEL_60:
      operator delete(*(void **)v156);
      if ((v162[23] & 0x80000000) == 0)
        goto LABEL_42;
      goto LABEL_61;
    }
  }
  else
  {
    ((void (*)(std::runtime_error *))v190.~runtime_error)(&v190);
    imp = (std::__shared_weak_count *)v144[0].__imp_.__imp_;
    if (!v144[0].__imp_.__imp_)
      goto LABEL_40;
  }
  p_shared_owners = (unint64_t *)&imp->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (v14)
    goto LABEL_40;
  ((void (*)(std::__shared_weak_count *))imp->__on_zero_shared)(imp);
  std::__shared_weak_count::__release_weak(imp);
  if ((v156[23] & 0x80000000) != 0)
    goto LABEL_60;
LABEL_41:
  if ((v162[23] & 0x80000000) == 0)
    goto LABEL_42;
LABEL_61:
  operator delete(*(void **)v162);
LABEL_42:
  if (v189)
  {
    LOBYTE(v175.__vftable) = 0;
    v181 = 0;
    goto LABEL_44;
  }
  std::runtime_error::runtime_error(&v190, &__p);
  v191 = v183;
  v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v192 = v184;
  v193 = v185;
  v194 = v186;
  if (v186)
  {
    *((_QWORD *)v185 + 2) = &v193;
    v184 = &v185;
    v185 = 0;
    v186 = 0;
  }
  else
  {
    v192 = &v193;
  }
  v195 = v187;
  v187 = 0uLL;
  v196 = 1;
  std::runtime_error::runtime_error((std::runtime_error *)v162, &v190);
  *(std::runtime_error *)&v162[16] = v191;
  *(_QWORD *)v162 = off_1E2521330;
  v163 = v192;
  v164 = v193;
  v165 = v194;
  if (v194)
  {
    *((_QWORD *)v193 + 2) = &v164;
    v192 = &v193;
    v193 = 0;
    v194 = 0;
  }
  else
  {
    v163 = &v164;
  }
  v166 = v195;
  v195 = 0uLL;
  AMSCore::Error::Error<char [18]>((uint64_t)&v168, (uint64_t)v162, 105, (const std::error_category *)&AMSCore::Error::Category::accounts(void)::instance);
  std::runtime_error::runtime_error(&v175, &v168);
  v176 = v169;
  v175.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v26 = v171;
  v177 = v170;
  v178 = v171;
  v179 = v172;
  if (v172)
  {
    *((_QWORD *)v171 + 2) = &v178;
    v170 = &v171;
    v171 = 0;
    v172 = 0;
    v26 = 0;
  }
  else
  {
    v177 = &v178;
  }
  v180 = v173;
  v173 = 0uLL;
  v181 = 1;
  v168.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v170, v26);
  MEMORY[0x18D7898AC](&v168);
  *(_QWORD *)v162 = off_1E2521330;
  v27 = (std::__shared_weak_count *)*((_QWORD *)&v166 + 1);
  if (*((_QWORD *)&v166 + 1))
  {
    v28 = (unint64_t *)(*((_QWORD *)&v166 + 1) + 8);
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v163, v164);
  MEMORY[0x18D7898AC](v162);
  if (v196)
  {
    v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v30 = (std::__shared_weak_count *)*((_QWORD *)&v195 + 1);
    if (*((_QWORD *)&v195 + 1))
    {
      v31 = (unint64_t *)(*((_QWORD *)&v195 + 1) + 8);
      do
        v32 = __ldaxr(v31);
      while (__stlxr(v32 - 1, v31));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v192, v193);
    MEMORY[0x18D7898AC](&v190);
  }
  if (!v181)
  {
LABEL_44:
    AMSCore::ServiceProvider<AMSCore::IDataProvider>::getDefault(&v168);
    v15 = v168.__vftable;
    v190.__vftable = 0;
    v190.__imp_.__imp_ = 0;
    v191.__vftable = 0;
    std::string::append[abi:fe180100]<char const*,0>((unint64_t)&v190, "HTTPCache", "");
    (*((void (**)(std::runtime_error *__return_ptr, std::runtime_error_vtbl *, std::runtime_error *))v15->~runtime_error
     + 2))(&v175, v15, &v190);
    if (SHIBYTE(v191.__vftable) < 0)
    {
      operator delete(v190.__vftable);
      v16 = (std::__shared_weak_count *)v168.__imp_.__imp_;
      if (!v168.__imp_.__imp_)
        goto LABEL_53;
    }
    else
    {
      v16 = (std::__shared_weak_count *)v168.__imp_.__imp_;
      if (!v168.__imp_.__imp_)
        goto LABEL_53;
    }
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
      if (v181)
        goto LABEL_54;
      goto LABEL_85;
    }
LABEL_53:
    if (v181)
    {
LABEL_54:
      LOBYTE(v168.__vftable) = 0;
      v174 = 0;
      goto LABEL_55;
    }
LABEL_85:
    std::runtime_error::runtime_error(&v190, &v175);
    v191 = v176;
    v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v192 = v177;
    v193 = v178;
    v194 = v179;
    if (v179)
    {
      *((_QWORD *)v178 + 2) = &v193;
      v177 = &v178;
      v178 = 0;
      v179 = 0;
    }
    else
    {
      v192 = &v193;
    }
    v195 = v180;
    v180 = 0uLL;
    v196 = 1;
    std::runtime_error::runtime_error((std::runtime_error *)v156, &v190);
    *(std::runtime_error *)&v156[16] = v191;
    *(_QWORD *)v156 = off_1E2521330;
    v157 = v192;
    v158 = v193;
    v159 = v194;
    if (v194)
    {
      *((_QWORD *)v193 + 2) = &v158;
      v192 = &v193;
      v193 = 0;
      v194 = 0;
    }
    else
    {
      v157 = &v158;
    }
    v160 = v195;
    v195 = 0uLL;
    AMSCore::Error::Error<char [18]>((uint64_t)v162, (uint64_t)v156, 105, (const std::error_category *)&AMSCore::Error::Category::accounts(void)::instance);
    std::runtime_error::runtime_error(&v168, (const std::runtime_error *)v162);
    v169 = *(std::runtime_error *)&v162[16];
    v168.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v33 = v164;
    v170 = v163;
    v171 = v164;
    v172 = v165;
    if (v165)
    {
      *((_QWORD *)v164 + 2) = &v171;
      v163 = &v164;
      v164 = 0;
      v165 = 0;
      v33 = 0;
    }
    else
    {
      v170 = &v171;
    }
    v173 = v166;
    v166 = 0uLL;
    v174 = 1;
    *(_QWORD *)v162 = off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v163, v33);
    MEMORY[0x18D7898AC](v162);
    *(_QWORD *)v156 = off_1E2521330;
    v34 = (std::__shared_weak_count *)*((_QWORD *)&v160 + 1);
    if (*((_QWORD *)&v160 + 1))
    {
      v35 = (unint64_t *)(*((_QWORD *)&v160 + 1) + 8);
      do
        v36 = __ldaxr(v35);
      while (__stlxr(v36 - 1, v35));
      if (!v36)
      {
        ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
        std::__shared_weak_count::__release_weak(v34);
      }
    }
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v157, v158);
    MEMORY[0x18D7898AC](v156);
    if (v196)
    {
      v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v37 = (std::__shared_weak_count *)*((_QWORD *)&v195 + 1);
      if (*((_QWORD *)&v195 + 1))
      {
        v38 = (unint64_t *)(*((_QWORD *)&v195 + 1) + 8);
        do
          v39 = __ldaxr(v38);
        while (__stlxr(v39 - 1, v38));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v192, v193);
      MEMORY[0x18D7898AC](&v190);
    }
    if (v174)
    {
      std::runtime_error::runtime_error(&v190, &v168);
      v191 = v169;
      v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v192 = v170;
      v193 = v171;
      v194 = v172;
      if (v172)
      {
        *((_QWORD *)v171 + 2) = &v193;
        v170 = &v171;
        v171 = 0;
        v172 = 0;
      }
      else
      {
        v192 = &v193;
      }
      v195 = v173;
      v173 = 0uLL;
      std::runtime_error::runtime_error((std::runtime_error *)v162, &v190);
      *(std::runtime_error *)&v162[16] = v191;
      *(_QWORD *)v162 = off_1E2521330;
      v57 = v193;
      v163 = v192;
      v164 = v193;
      v165 = v194;
      if (v194)
      {
        *((_QWORD *)v193 + 2) = &v164;
        v57 = 0;
        v192 = &v193;
        v193 = 0;
        v194 = 0;
      }
      else
      {
        v163 = &v164;
      }
      v166 = v195;
      v195 = 0uLL;
      v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v192, v57);
      MEMORY[0x18D7898AC](&v190);
      std::runtime_error::runtime_error(&v137, (const std::runtime_error *)v162);
      v138 = *(std::runtime_error *)&v162[16];
      v137.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v58 = v164;
      v139 = v163;
      v140 = v164;
      v141 = v165;
      if (v165)
      {
        *((_QWORD *)v164 + 2) = &v140;
        v58 = 0;
        v163 = &v164;
        v164 = 0;
        v165 = 0;
      }
      else
      {
        v139 = &v140;
      }
      v142 = v166;
      v166 = 0uLL;
      v143 = 0;
      *(_QWORD *)v162 = off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v163, v58);
      MEMORY[0x18D7898AC](v162);
      if (v174)
      {
        v168.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
        v59 = (std::__shared_weak_count *)*((_QWORD *)&v173 + 1);
        if (*((_QWORD *)&v173 + 1))
        {
          v60 = (unint64_t *)(*((_QWORD *)&v173 + 1) + 8);
          do
            v61 = __ldaxr(v60);
          while (__stlxr(v61 - 1, v60));
          if (!v61)
          {
            ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
            std::__shared_weak_count::__release_weak(v59);
          }
        }
        std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v170, v171);
        MEMORY[0x18D7898AC](&v168);
        if (v181)
          goto LABEL_275;
        goto LABEL_321;
      }
      goto LABEL_274;
    }
LABEL_55:
    if (!v189)
      goto LABEL_391;
    *(_QWORD *)v162 = operator new(0xF0uLL);
    *(_OWORD *)&v162[8] = xmmword_18CF51AB0;
    strcpy(*(char **)v162, "CREATE TABLE IF NOT EXISTS \"HTTPCache\" (\"accountIdentifier\" TEXT NOT NULL,\"key\" TEXT NOT NULL,\"url\" TEXT NOT NULL,\"headers\" BLOB NOT NULL,\"response\" BLOB NOT NULL,\"createdAt\" INTEGER NOT NULL,PRIMARY KEY (\"key\", \"accountIdentifier\"))");
    v191.__imp_.__imp_ = 0;
    AMSCore::SQLiteDatabase::exec((uint64_t)&v168, (sqlite3 **)&__p, (uint64_t)v162, &v190);
    v19 = (std::runtime_error *)v191.__imp_.__imp_;
    if ((std::runtime_error *)v191.__imp_.__imp_ == &v190)
    {
      v20 = 4;
      v19 = &v190;
    }
    else
    {
      if (!v191.__imp_.__imp_)
        goto LABEL_64;
      v20 = 5;
    }
    (*((void (**)(void))&v19->~runtime_error + v20))();
LABEL_64:
    if ((v162[23] & 0x80000000) != 0)
    {
      operator delete(*(void **)v162);
      if (v174)
        goto LABEL_66;
    }
    else if (v174)
    {
LABEL_66:
      v162[0] = 0;
      v167 = 0;
LABEL_67:
      if (v189)
      {
        *(_QWORD *)v162 = operator new(0xB0uLL);
        *(_OWORD *)&v162[8] = xmmword_18CF51AC0;
        strcpy(*(char **)v162, "REPLACE INTO \"HTTPCache\" (\"accountIdentifier\", \"key\", \"url\", \"headers\", \"response\", \"createdAt\")VALUES (:accountIdentifier, :key, :url, :headers, :response, :createdAt)");
        *(std::runtime_error *)v156 = __p;
        if (__p.__imp_.__imp_)
        {
          v21 = (unint64_t *)(__p.__imp_.__imp_ + 8);
          do
            v22 = __ldxr(v21);
          while (__stxr(v22 + 1, v21));
        }
        AMSCore::SQLiteStatement::make((uint64_t)&v190, (uint64_t)v156, (uint64_t)v162);
        v23 = *(std::__shared_weak_count **)&v156[8];
        if (*(_QWORD *)&v156[8])
        {
          v24 = (unint64_t *)(*(_QWORD *)&v156[8] + 8);
          do
            v25 = __ldaxr(v24);
          while (__stlxr(v25 - 1, v24));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
            std::__shared_weak_count::__release_weak(v23);
          }
        }
        if ((v162[23] & 0x80000000) != 0)
          operator delete(*(void **)v162);
        AMSCore::nestedError<std::expected<AMSCore::SQLiteStatement,AMSCore::Error> &,char const(&)[32]>(v162, (uint64_t)&v190, 105, (const std::error_category *)&AMSCore::Error::Category::accounts(void)::instance, "error creating insert statement");
        if (v167)
        {
          std::runtime_error::runtime_error((std::runtime_error *)v156, (const std::runtime_error *)v162);
          *(_OWORD *)&v156[16] = *(_OWORD *)&v162[16];
          *(_QWORD *)v156 = off_1E2521330;
          v157 = v163;
          v158 = v164;
          v159 = v165;
          if (v165)
          {
            *((_QWORD *)v164 + 2) = &v158;
            v163 = &v164;
            v164 = 0;
            v165 = 0;
          }
          else
          {
            v157 = &v158;
          }
          v160 = v166;
          v166 = 0uLL;
          std::runtime_error::runtime_error(v144, (const std::runtime_error *)v156);
          v144[1] = *(std::runtime_error *)&v156[16];
          v144[0].__vftable = (std::runtime_error_vtbl *)off_1E2521330;
          v40 = v158;
          v145 = v157;
          v146 = v158;
          v147 = v159;
          if (v159)
          {
            *((_QWORD *)v158 + 2) = &v146;
            v40 = 0;
            v157 = &v158;
            v158 = 0;
            v159 = 0;
          }
          else
          {
            v145 = &v146;
          }
          v148 = v160;
          v160 = 0uLL;
          *(_QWORD *)v156 = off_1E2521330;
          std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v157, v40);
          MEMORY[0x18D7898AC](v156);
          std::runtime_error::runtime_error(&v137, v144);
          v138 = v144[1];
          v137.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
          v41 = v146;
          v139 = v145;
          v140 = v146;
          v141 = v147;
          if (v147)
          {
            *((_QWORD *)v146 + 2) = &v140;
            v41 = 0;
            v145 = &v146;
            v146 = 0;
            v147 = 0;
          }
          else
          {
            v139 = &v140;
          }
          v142 = v148;
          v148 = 0uLL;
          v143 = 0;
          v144[0].__vftable = (std::runtime_error_vtbl *)off_1E2521330;
          std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v145, v41);
          MEMORY[0x18D7898AC](v144);
          if (v167)
          {
            *(_QWORD *)v162 = off_1E2521330;
            v42 = (std::__shared_weak_count *)*((_QWORD *)&v166 + 1);
            if (*((_QWORD *)&v166 + 1))
            {
              v43 = (unint64_t *)(*((_QWORD *)&v166 + 1) + 8);
              do
                v44 = __ldaxr(v43);
              while (__stlxr(v44 - 1, v43));
              if (!v44)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v163, v164);
            MEMORY[0x18D7898AC](v162);
          }
          goto LABEL_258;
        }
        if (v189)
        {
          *(_QWORD *)v156 = operator new(0xA0uLL);
          *(_OWORD *)&v156[8] = xmmword_18CF51AD0;
          strcpy(*(char **)v156, "SELECT \"accountIdentifier\", \"url\", \"headers\", \"response\", \"createdAt\"FROM \"HTTPCache\"WHERE (\"key\" IS :key AND \"accountIdentifier\" IS :accountIdentifier)");
          AMSCore::SQLiteDatabase::prepare((uint64_t)v162, (uint64_t)__p.__vftable, (std::__shared_weak_count *)__p.__imp_.__imp_, (uint64_t)v156);
          if ((v156[23] & 0x80000000) != 0)
            operator delete(*(void **)v156);
          AMSCore::nestedError<std::expected<AMSCore::SQLiteStatement,AMSCore::Error> &,char const(&)[30]>(v156, (uint64_t)v162, 105, (const std::error_category *)&AMSCore::Error::Category::accounts(void)::instance);
          if (v161)
          {
            std::runtime_error::runtime_error(v144, (const std::runtime_error *)v156);
            v144[1] = *(std::runtime_error *)&v156[16];
            v144[0].__vftable = (std::runtime_error_vtbl *)off_1E2521330;
            v145 = v157;
            v146 = v158;
            v147 = v159;
            if (v159)
            {
              *((_QWORD *)v158 + 2) = &v146;
              v157 = &v158;
              v158 = 0;
              v159 = 0;
            }
            else
            {
              v145 = &v146;
            }
            v148 = v160;
            v160 = 0uLL;
            std::runtime_error::runtime_error(&v150, v144);
            v151 = v144[1];
            v150.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
            v67 = v146;
            v152 = v145;
            v153 = v146;
            v154 = v147;
            if (v147)
            {
              *((_QWORD *)v146 + 2) = &v153;
              v67 = 0;
              v145 = &v146;
              v146 = 0;
              v147 = 0;
            }
            else
            {
              v152 = &v153;
            }
            v155 = v148;
            v148 = 0uLL;
            v144[0].__vftable = (std::runtime_error_vtbl *)off_1E2521330;
            std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v145, v67);
            MEMORY[0x18D7898AC](v144);
            std::runtime_error::runtime_error(&v137, &v150);
            v138 = v151;
            v137.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
            v68 = v153;
            v139 = v152;
            v140 = v153;
            v141 = v154;
            if (v154)
            {
              *((_QWORD *)v153 + 2) = &v140;
              v68 = 0;
              v152 = &v153;
              v153 = 0;
              v154 = 0;
            }
            else
            {
              v139 = &v140;
            }
            v142 = v155;
            v155 = 0uLL;
            v143 = 0;
            v150.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
            std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v152, v68);
            MEMORY[0x18D7898AC](&v150);
            if (v161)
            {
              *(_QWORD *)v156 = off_1E2521330;
              v69 = (std::__shared_weak_count *)*((_QWORD *)&v160 + 1);
              if (*((_QWORD *)&v160 + 1))
              {
                v70 = (unint64_t *)(*((_QWORD *)&v160 + 1) + 8);
                do
                  v71 = __ldaxr(v70);
                while (__stlxr(v71 - 1, v70));
                if (!v71)
                {
                  ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
                  std::__shared_weak_count::__release_weak(v69);
                }
              }
              std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v157, v158);
              MEMORY[0x18D7898AC](v156);
            }
LABEL_243:
            if (!v167)
            {
              (**(void (***)(_BYTE *))v162)(v162);
              goto LABEL_258;
            }
            v72 = *(_QWORD *)&v162[16];
            *(_QWORD *)&v162[16] = 0;
            if (v72)
            {
              *(_QWORD *)v156 = v72;
              if (!v165)
                std::__throw_bad_function_call[abi:fe180100]();
              (*((void (**)(std::__libcpp_refstring *, _BYTE *))v165->__imp_ + 6))(v165, v156);
            }
            v73 = v165;
            if (v165 == (std::__libcpp_refstring *)&v162[24])
            {
              v74 = 4;
              v73 = (std::__libcpp_refstring *)&v162[24];
            }
            else
            {
              if (!v165)
              {
LABEL_253:
                v75 = *(std::__shared_weak_count **)&v162[8];
                if (*(_QWORD *)&v162[8])
                {
                  v76 = (unint64_t *)(*(_QWORD *)&v162[8] + 8);
                  do
                    v77 = __ldaxr(v76);
                  while (__stlxr(v77 - 1, v76));
                  if (!v77)
                  {
                    ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
                    std::__shared_weak_count::__release_weak(v75);
                  }
                }
LABEL_258:
                if (!v196)
                {
                  ((void (*)(std::runtime_error *))v190.~runtime_error)(&v190);
                  goto LABEL_273;
                }
                v78 = v191.__vftable;
                v191.__vftable = 0;
                if (v78)
                {
                  *(_QWORD *)v162 = v78;
                  if (!v194)
                    std::__throw_bad_function_call[abi:fe180100]();
                  (*((void (**)(std::__libcpp_refstring *, _BYTE *))v194->__imp_ + 6))(v194, v162);
                }
                p_imp = v194;
                if (v194 == &v191.__imp_)
                {
                  v80 = 4;
                  p_imp = &v191.__imp_;
                }
                else
                {
                  if (!v194)
                  {
LABEL_268:
                    v81 = (std::__shared_weak_count *)v190.__imp_.__imp_;
                    if (v190.__imp_.__imp_)
                    {
                      v82 = (unint64_t *)(v190.__imp_.__imp_ + 8);
                      do
                        v83 = __ldaxr(v82);
                      while (__stlxr(v83 - 1, v82));
                      if (!v83)
                      {
                        ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
                        std::__shared_weak_count::__release_weak(v81);
                      }
                    }
                    goto LABEL_273;
                  }
                  v80 = 5;
                }
                (*(void (**)(void))&p_imp->__imp_[8 * v80])();
                goto LABEL_268;
              }
              v74 = 5;
            }
            (*(void (**)(void))&v73->__imp_[8 * v74])();
            goto LABEL_253;
          }
          if (v189)
          {
            v144[0].__vftable = (std::runtime_error_vtbl *)operator new(0x48uLL);
            *(_OWORD *)&v144[0].__imp_.__imp_ = xmmword_18CF51AE0;
            strcpy((char *)v144[0].__vftable, "DELETE FROM \"HTTPCache\"WHERE \"accountIdentifier\" IS :accountIdentifier");
            AMSCore::SQLiteDatabase::prepare((uint64_t)v156, (uint64_t)__p.__vftable, (std::__shared_weak_count *)__p.__imp_.__imp_, (uint64_t)v144);
            if (SHIBYTE(v144[1].__vftable) < 0)
              operator delete(v144[0].__vftable);
            AMSCore::nestedError<std::expected<AMSCore::SQLiteStatement,AMSCore::Error> &,char const(&)[32]>(v144, (uint64_t)v156, 105, (const std::error_category *)&AMSCore::Error::Category::accounts(void)::instance, "error creating delete statement");
            if (v149)
            {
              AMSCore::Unexpected<AMSCore::Error,AMSCore::Error>((uint64_t)&v150, (uint64_t)v144);
              std::expected<std::unique_ptr<AMSCore::IHTTPCacheDataAccessObject>,AMSCore::Error>::expected[abi:fe180100]<AMSCore::Error>(&v137, (uint64_t)&v150);
              std::unexpected<AMSCore::Error>::~unexpected((uint64_t)&v150);
            }
            std::optional<AMSCore::Error>::~optional((uint64_t)v144);
            if (v189)
            {
              if (v167 && v196 && v161)
              {
                std::make_unique[abi:fe180100]<AMSCore::HTTPCacheDataAccessObject,AMSCore::SQLiteDatabase,AMSCore::SQLiteStatement,AMSCore::SQLiteStatement,AMSCore::SQLiteStatement>((uint64_t *)v144, (uint64_t)&__p, (__int128 *)v162, (__int128 *)&v190, (__int128 *)v156);
                v137.__vftable = v144[0].__vftable;
                v143 = 1;
                if (v161)
                  std::__destroy_at[abi:fe180100]<AMSCore::SQLiteStatement,0>(v156);
                else
                  (**(void (***)(_BYTE *))v156)(v156);
                goto LABEL_243;
              }
            }
          }
        }
      }
LABEL_391:
      __break(1u);
      return;
    }
    std::runtime_error::runtime_error(&v190, &v168);
    v191 = v169;
    v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v192 = v170;
    v193 = v171;
    v194 = v172;
    if (v172)
    {
      *((_QWORD *)v171 + 2) = &v193;
      v170 = &v171;
      v171 = 0;
      v172 = 0;
    }
    else
    {
      v192 = &v193;
    }
    v195 = v173;
    v173 = 0uLL;
    v196 = 1;
    std::runtime_error::runtime_error(v144, &v190);
    v144[1] = v191;
    v144[0].__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v145 = v192;
    v146 = v193;
    v147 = v194;
    if (v194)
    {
      *((_QWORD *)v193 + 2) = &v146;
      v192 = &v193;
      v193 = 0;
      v194 = 0;
    }
    else
    {
      v145 = &v146;
    }
    v148 = v195;
    v195 = 0uLL;
    AMSCore::Error::Error<char [32]>((uint64_t)v156, (uint64_t)v144, 105, (const std::error_category *)&AMSCore::Error::Category::accounts(void)::instance, "error creating create statement");
    std::runtime_error::runtime_error((std::runtime_error *)v162, (const std::runtime_error *)v156);
    *(_OWORD *)&v162[16] = *(_OWORD *)&v156[16];
    *(_QWORD *)v162 = off_1E2521330;
    v50 = v158;
    v163 = v157;
    v164 = v158;
    v165 = v159;
    if (v159)
    {
      *((_QWORD *)v158 + 2) = &v164;
      v157 = &v158;
      v158 = 0;
      v159 = 0;
      v50 = 0;
    }
    else
    {
      v163 = &v164;
    }
    v166 = v160;
    v160 = 0uLL;
    v167 = 1;
    *(_QWORD *)v156 = off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v157, v50);
    MEMORY[0x18D7898AC](v156);
    v144[0].__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v51 = (std::__shared_weak_count *)*((_QWORD *)&v148 + 1);
    if (*((_QWORD *)&v148 + 1))
    {
      v52 = (unint64_t *)(*((_QWORD *)&v148 + 1) + 8);
      do
        v53 = __ldaxr(v52);
      while (__stlxr(v53 - 1, v52));
      if (!v53)
      {
        ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
        std::__shared_weak_count::__release_weak(v51);
      }
    }
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v145, v146);
    MEMORY[0x18D7898AC](v144);
    if (v196)
    {
      v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v54 = (std::__shared_weak_count *)*((_QWORD *)&v195 + 1);
      if (*((_QWORD *)&v195 + 1))
      {
        v55 = (unint64_t *)(*((_QWORD *)&v195 + 1) + 8);
        do
          v56 = __ldaxr(v55);
        while (__stlxr(v56 - 1, v55));
        if (!v56)
        {
          ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
          std::__shared_weak_count::__release_weak(v54);
        }
      }
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v192, v193);
      MEMORY[0x18D7898AC](&v190);
    }
    if (v167)
    {
      std::runtime_error::runtime_error(&v190, (const std::runtime_error *)v162);
      v191 = *(std::runtime_error *)&v162[16];
      v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v192 = v163;
      v193 = v164;
      v194 = v165;
      if (v165)
      {
        *((_QWORD *)v164 + 2) = &v193;
        v163 = &v164;
        v164 = 0;
        v165 = 0;
      }
      else
      {
        v192 = &v193;
      }
      v195 = v166;
      v166 = 0uLL;
      std::runtime_error::runtime_error((std::runtime_error *)v156, &v190);
      *(std::runtime_error *)&v156[16] = v191;
      v62 = v193;
      *(_QWORD *)v156 = off_1E2521330;
      v157 = v192;
      v158 = v193;
      v159 = v194;
      if (v194)
      {
        *((_QWORD *)v193 + 2) = &v158;
        v62 = 0;
        v192 = &v193;
        v193 = 0;
        v194 = 0;
      }
      else
      {
        v157 = &v158;
      }
      v160 = v195;
      v195 = 0uLL;
      v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v192, v62);
      MEMORY[0x18D7898AC](&v190);
      std::runtime_error::runtime_error(&v137, (const std::runtime_error *)v156);
      v138 = *(std::runtime_error *)&v156[16];
      v137.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v63 = v158;
      v139 = v157;
      v140 = v158;
      v141 = v159;
      if (v159)
      {
        *((_QWORD *)v158 + 2) = &v140;
        v63 = 0;
        v157 = &v158;
        v158 = 0;
        v159 = 0;
      }
      else
      {
        v139 = &v140;
      }
      v142 = v160;
      v160 = 0uLL;
      v143 = 0;
      *(_QWORD *)v156 = off_1E2521330;
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v157, v63);
      MEMORY[0x18D7898AC](v156);
      if (v167)
      {
        *(_QWORD *)v162 = off_1E2521330;
        v64 = (std::__shared_weak_count *)*((_QWORD *)&v166 + 1);
        if (*((_QWORD *)&v166 + 1))
        {
          v65 = (unint64_t *)(*((_QWORD *)&v166 + 1) + 8);
          do
            v66 = __ldaxr(v65);
          while (__stlxr(v66 - 1, v65));
          if (!v66)
          {
            ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
            std::__shared_weak_count::__release_weak(v64);
          }
        }
        std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v163, v164);
        MEMORY[0x18D7898AC](v162);
      }
LABEL_273:
      if (!v174)
      {
        ((void (*)(std::runtime_error *))v168.~runtime_error)(&v168);
        if (v181)
          goto LABEL_275;
        goto LABEL_321;
      }
LABEL_274:
      if (v181)
      {
LABEL_275:
        if ((SHIBYTE(v176.__vftable) & 0x80000000) == 0)
          goto LABEL_276;
        operator delete(v175.__vftable);
        if (!v189)
          goto LABEL_322;
LABEL_277:
        AMSCore::SQLiteDatabase::~SQLiteDatabase((AMSCore::SQLiteDatabase *)&__p);
        if (v143)
          goto LABEL_278;
        goto LABEL_323;
      }
LABEL_321:
      ((void (*)(std::runtime_error *))v175.~runtime_error)(&v175);
      if (!v189)
        goto LABEL_322;
      goto LABEL_277;
    }
    goto LABEL_67;
  }
  std::runtime_error::runtime_error(&v190, &v175);
  v191 = v176;
  v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v192 = v177;
  v193 = v178;
  v194 = v179;
  if (v179)
  {
    *((_QWORD *)v178 + 2) = &v193;
    v177 = &v178;
    v178 = 0;
    v179 = 0;
  }
  else
  {
    v192 = &v193;
  }
  v195 = v180;
  v180 = 0uLL;
  std::runtime_error::runtime_error(&v168, &v190);
  v169 = v191;
  v168.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v45 = v193;
  v170 = v192;
  v171 = v193;
  v172 = v194;
  if (v194)
  {
    *((_QWORD *)v193 + 2) = &v171;
    v45 = 0;
    v192 = &v193;
    v193 = 0;
    v194 = 0;
  }
  else
  {
    v170 = &v171;
  }
  v173 = v195;
  v195 = 0uLL;
  v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v192, v45);
  MEMORY[0x18D7898AC](&v190);
  std::runtime_error::runtime_error(&v137, &v168);
  v138 = v169;
  v137.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v46 = v171;
  v139 = v170;
  v140 = v171;
  v141 = v172;
  if (v172)
  {
    *((_QWORD *)v171 + 2) = &v140;
    v46 = 0;
    v170 = &v171;
    v171 = 0;
    v172 = 0;
  }
  else
  {
    v139 = &v140;
  }
  v142 = v173;
  v173 = 0uLL;
  v143 = 0;
  v168.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v170, v46);
  MEMORY[0x18D7898AC](&v168);
  if (v181)
  {
    v175.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v47 = (std::__shared_weak_count *)*((_QWORD *)&v180 + 1);
    if (*((_QWORD *)&v180 + 1))
    {
      v48 = (unint64_t *)(*((_QWORD *)&v180 + 1) + 8);
      do
        v49 = __ldaxr(v48);
      while (__stlxr(v49 - 1, v48));
      if (!v49)
      {
        ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
        std::__shared_weak_count::__release_weak(v47);
      }
    }
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v177, v178);
    MEMORY[0x18D7898AC](&v175);
    if (!v189)
      goto LABEL_322;
    goto LABEL_277;
  }
LABEL_276:
  if (v189)
    goto LABEL_277;
LABEL_322:
  ((void (*)(std::runtime_error *))__p.~runtime_error)(&__p);
  if (v143)
  {
LABEL_278:
    v84 = (char *)operator new(0xB8uLL);
    *((_QWORD *)v84 + 1) = 0;
    *((_QWORD *)v84 + 2) = 0;
    *(_QWORD *)v84 = &off_1E2522A80;
    *(_QWORD *)v156 = v137.__vftable;
    if (v137.__vftable)
    {
      v85 = (_QWORD *)operator new();
      v86 = v137.__vftable;
      *v85 = &off_1E2523308;
      v85[1] = 0;
      v85[2] = 0;
      v85[3] = v86;
    }
    else
    {
      v85 = 0;
    }
    *(_QWORD *)&v156[8] = v85;
    v137.__vftable = 0;
    *((_QWORD *)v84 + 21) = 0;
    *((_QWORD *)v84 + 3) = &off_1E2520B60;
    *((_OWORD *)v84 + 2) = *(_OWORD *)v156;
    *(_QWORD *)v156 = 0;
    *(_QWORD *)&v156[8] = 0;
    *((_QWORD *)v84 + 6) = 0;
    *((_QWORD *)v84 + 8) = 850045863;
    *((_QWORD *)v84 + 7) = 0;
    *(_OWORD *)(v84 + 72) = 0u;
    *(_OWORD *)(v84 + 88) = 0u;
    *(_OWORD *)(v84 + 104) = 0u;
    *(_OWORD *)(v84 + 113) = 0u;
    *((_QWORD *)v84 + 17) = v84 + 136;
    *((_QWORD *)v84 + 18) = v84 + 136;
    *((_QWORD *)v84 + 22) = 0;
    *((_QWORD *)v84 + 19) = 0;
    *((_QWORD *)v84 + 20) = v84 + 168;
    AMSCore::ServiceProvider<AMSCore::IAccountProvider>::getDefault(&v175);
    v87 = v175.__vftable;
    v88 = (const char *)*((_QWORD *)v84 + 4);
    v89 = *((_QWORD *)v84 + 5);
    if (v89)
    {
      v90 = (unint64_t *)(v89 + 8);
      do
        v91 = __ldxr(v90);
      while (__stxr(v91 + 1, v90));
    }
    *(_QWORD *)v162 = 0;
    *(_QWORD *)&v162[8] = 0;
    __p.__vftable = (std::runtime_error_vtbl *)&off_1E2521868;
    __p.__imp_.__imp_ = v88;
    v168.__vftable = 0;
    v168.__imp_.__imp_ = 0;
    v183.__vftable = (std::runtime_error_vtbl *)v89;
    v183.__imp_.__imp_ = (const char *)&__p;
    (*((void (**)(std::runtime_error *__return_ptr, std::runtime_error_vtbl *, std::runtime_error *))v87->~runtime_error
     + 9))(&v190, v87, &__p);
    v92 = v190;
    v190.__vftable = 0;
    v190.__imp_.__imp_ = 0;
    v93 = (std::__shared_weak_count *)*((_QWORD *)v84 + 7);
    *((std::runtime_error *)v84 + 3) = v92;
    if (v93)
    {
      v94 = (unint64_t *)&v93->__shared_owners_;
      do
        v95 = __ldaxr(v94);
      while (__stlxr(v95 - 1, v94));
      if (!v95)
      {
        ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
        std::__shared_weak_count::__release_weak(v93);
      }
    }
    v96 = (std::__shared_weak_count *)v190.__imp_.__imp_;
    if (v190.__imp_.__imp_)
    {
      v97 = (unint64_t *)(v190.__imp_.__imp_ + 8);
      do
        v98 = __ldaxr(v97);
      while (__stlxr(v98 - 1, v97));
      if (!v98)
      {
        ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
        std::__shared_weak_count::__release_weak(v96);
      }
    }
    p_p = (std::runtime_error *)v183.__imp_.__imp_;
    if ((std::runtime_error *)v183.__imp_.__imp_ == &__p)
    {
      v100 = 4;
      p_p = &__p;
    }
    else
    {
      if (!v183.__imp_.__imp_)
        goto LABEL_299;
      v100 = 5;
    }
    (*((void (**)(void))&p_p->~runtime_error + v100))();
LABEL_299:
    v101 = (std::__shared_weak_count *)v168.__imp_.__imp_;
    if (v168.__imp_.__imp_)
    {
      v102 = (unint64_t *)(v168.__imp_.__imp_ + 8);
      do
        v103 = __ldaxr(v102);
      while (__stlxr(v103 - 1, v102));
      if (!v103)
      {
        ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
        std::__shared_weak_count::__release_weak(v101);
      }
    }
    v104 = *(std::__shared_weak_count **)&v162[8];
    if (*(_QWORD *)&v162[8])
    {
      v105 = (unint64_t *)(*(_QWORD *)&v162[8] + 8);
      do
        v106 = __ldaxr(v105);
      while (__stlxr(v106 - 1, v105));
      if (!v106)
      {
        ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
        std::__shared_weak_count::__release_weak(v104);
      }
    }
    v107 = (std::__shared_weak_count *)v175.__imp_.__imp_;
    if (v175.__imp_.__imp_)
    {
      v108 = (unint64_t *)(v175.__imp_.__imp_ + 8);
      do
        v109 = __ldaxr(v108);
      while (__stlxr(v109 - 1, v108));
      if (!v109)
      {
        ((void (*)(std::__shared_weak_count *))v107->__on_zero_shared)(v107);
        std::__shared_weak_count::__release_weak(v107);
      }
    }
    v110 = *(std::__shared_weak_count **)&v156[8];
    if (*(_QWORD *)&v156[8])
    {
      v111 = (unint64_t *)(*(_QWORD *)&v156[8] + 8);
      do
        v112 = __ldaxr(v111);
      while (__stlxr(v112 - 1, v111));
      if (!v112)
      {
        ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
        std::__shared_weak_count::__release_weak(v110);
      }
    }
    v190.__vftable = (std::runtime_error_vtbl *)(v84 + 24);
    v190.__imp_.__imp_ = v84;
    v196 = 1;
    goto LABEL_344;
  }
LABEL_323:
  std::runtime_error::runtime_error(&__p, &v137);
  v183 = v138;
  __p.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v184 = v139;
  v185 = v140;
  v186 = v141;
  if (v141)
  {
    *((_QWORD *)v140 + 2) = &v185;
    v139 = &v140;
    v140 = 0;
    v141 = 0;
  }
  else
  {
    v184 = &v185;
  }
  v187 = v142;
  v142 = 0uLL;
  v188 = 1;
  std::runtime_error::runtime_error(&v190, &__p);
  v191 = v183;
  v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v192 = v184;
  v193 = v185;
  v194 = v186;
  if (v186)
  {
    *((_QWORD *)v185 + 2) = &v193;
    v184 = &v185;
    v185 = 0;
    v186 = 0;
  }
  else
  {
    v192 = &v193;
  }
  v195 = v187;
  v187 = 0uLL;
  std::runtime_error::runtime_error(&v175, &v190);
  v176 = v191;
  v175.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v113 = v193;
  v177 = v192;
  v178 = v193;
  v179 = v194;
  if (v194)
  {
    *((_QWORD *)v193 + 2) = &v178;
    v113 = 0;
    v192 = &v193;
    v193 = 0;
    v194 = 0;
  }
  else
  {
    v177 = &v178;
  }
  v180 = v195;
  v195 = 0uLL;
  v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v192, v113);
  v114 = (std::runtime_error *)MEMORY[0x18D7898AC](&v190);
  std::runtime_error::runtime_error(v114, &v175);
  v191 = v176;
  v115 = v178;
  v190.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v192 = v177;
  v193 = v178;
  v194 = v179;
  if (v179)
  {
    *((_QWORD *)v178 + 2) = &v193;
    v115 = 0;
    v177 = &v178;
    v178 = 0;
    v179 = 0;
  }
  else
  {
    v192 = &v193;
  }
  v195 = v180;
  v180 = 0uLL;
  v196 = 0;
  v175.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v177, v115);
  MEMORY[0x18D7898AC](&v175);
  if (v188)
  {
    __p.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v116 = (std::__shared_weak_count *)*((_QWORD *)&v187 + 1);
    if (*((_QWORD *)&v187 + 1))
    {
      v117 = (unint64_t *)(*((_QWORD *)&v187 + 1) + 8);
      do
        v118 = __ldaxr(v117);
      while (__stlxr(v118 - 1, v117));
      if (!v118)
      {
        ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
        std::__shared_weak_count::__release_weak(v116);
      }
    }
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v184, v185);
    MEMORY[0x18D7898AC](&__p);
  }
LABEL_344:
  v119 = v137.__vftable;
  if (v143)
  {
    v137.__vftable = 0;
    if (v119)
      (*((void (**)(std::runtime_error_vtbl *))v119->~runtime_error + 1))(v119);
    v120 = v196;
    if (v196)
      goto LABEL_348;
  }
  else
  {
    ((void (*)(std::runtime_error *))v137.~runtime_error)(&v137);
    v120 = v196;
    if (v196)
    {
LABEL_348:
      v135 = v190;
      v190.__vftable = 0;
      v190.__imp_.__imp_ = 0;
      v121 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
      if ((v121 & 1) == 0
        && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton))
      {
        std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
        qword_1ECEAC348 = 0;
        qword_1ECEAC350 = 0;
        byte_1ECEAC358 = 0;
        __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
      }
      std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
      v122 = (std::__shared_weak_count *)qword_1ECEAC350;
      *(std::runtime_error *)&qword_1ECEAC348 = v135;
      if (v122)
      {
        v123 = (unint64_t *)&v122->__shared_owners_;
        do
          v124 = __ldaxr(v123);
        while (__stlxr(v124 - 1, v123));
        if (!v124)
        {
          ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
          std::__shared_weak_count::__release_weak(v122);
        }
      }
      byte_1ECEAC358 = 1;
      std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
      a1 = v136;
      goto LABEL_375;
    }
  }
  std::runtime_error::runtime_error(&__p, &v190);
  v183 = v191;
  __p.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v184 = v192;
  v185 = v193;
  v186 = v194;
  if (v194)
  {
    *((_QWORD *)v193 + 2) = &v185;
    v192 = &v193;
    v193 = 0;
    v194 = 0;
  }
  else
  {
    v184 = &v185;
  }
  v187 = v195;
  v195 = 0uLL;
  v188 = 1;
  std::runtime_error::runtime_error(&v175, &__p);
  v176 = v183;
  v175.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v177 = v184;
  v178 = v185;
  v179 = v186;
  if (v186)
  {
    *((_QWORD *)v185 + 2) = &v178;
    v184 = &v185;
    v185 = 0;
    v186 = 0;
  }
  else
  {
    v177 = &v178;
  }
  v180 = v187;
  v187 = 0uLL;
  std::runtime_error::runtime_error(&v168, &v175);
  v169 = v176;
  v168.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v125 = v178;
  v170 = v177;
  v171 = v178;
  v172 = v179;
  if (v179)
  {
    *((_QWORD *)v178 + 2) = &v171;
    v125 = 0;
    v177 = &v178;
    v178 = 0;
    v179 = 0;
  }
  else
  {
    v170 = &v171;
  }
  v173 = v180;
  v180 = 0uLL;
  v175.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v177, v125);
  MEMORY[0x18D7898AC](&v175);
  a1 = v136;
  std::runtime_error::runtime_error(v136, &v168);
  v136[1] = v169;
  v136->__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v126 = v171;
  v136[2].__vftable = (std::runtime_error_vtbl *)v170;
  v136[2].__imp_.__imp_ = (const char *)v126;
  v127 = (std::runtime_error_vtbl *)&v136[2].__imp_;
  v128 = v172;
  v136[3].__vftable = (std::runtime_error_vtbl *)v172;
  if (v128)
  {
    *((_QWORD *)v126 + 2) = v127;
    v126 = 0;
    v170 = &v171;
    v171 = 0;
    v172 = 0;
  }
  else
  {
    v136[2].__vftable = v127;
  }
  *(_OWORD *)&v136[3].__imp_.__imp_ = v173;
  v173 = 0uLL;
  LOBYTE(v136[4].__imp_.__imp_) = 0;
  v168.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v170, v126);
  MEMORY[0x18D7898AC](&v168);
  if (v188)
  {
    __p.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v129 = (std::__shared_weak_count *)*((_QWORD *)&v187 + 1);
    if (*((_QWORD *)&v187 + 1))
    {
      v130 = (unint64_t *)(*((_QWORD *)&v187 + 1) + 8);
      do
        v131 = __ldaxr(v130);
      while (__stlxr(v131 - 1, v130));
      if (!v131)
      {
        ((void (*)(std::__shared_weak_count *))v129->__on_zero_shared)(v129);
        std::__shared_weak_count::__release_weak(v129);
      }
    }
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v184, v185);
    MEMORY[0x18D7898AC](&__p);
    a1 = v136;
  }
LABEL_375:
  if (v196)
  {
    v132 = (std::__shared_weak_count *)v190.__imp_.__imp_;
    if (v190.__imp_.__imp_)
    {
      v133 = (unint64_t *)(v190.__imp_.__imp_ + 8);
      do
        v134 = __ldaxr(v133);
      while (__stlxr(v134 - 1, v133));
      if (!v134)
      {
        ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
        std::__shared_weak_count::__release_weak(v132);
      }
    }
  }
  else
  {
    ((void (*)(std::runtime_error *))v190.~runtime_error)(&v190);
  }
  if (v120)
LABEL_383:
    LOBYTE(a1[4].__imp_.__imp_) = 1;
}

void sub_18CBCFA9C(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void AMSCore::defaultInitProvider<AMSCore::IOpenURLProvider>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  char v12;

  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IOpenURLProviderEEERDavE9singleton);
  if ((v2 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IOpenURLProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IOpenURLProviderEEERDavE9singleton);
    xmmword_1ECEAC108 = 0uLL;
    byte_1ECEAC118 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IOpenURLProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IOpenURLProviderEEERDavE9singleton);
  v3 = byte_1ECEAC118;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IOpenURLProviderEEERDavE9singleton);
  if (!v3)
  {
    v12 = 1;
    v10 = 0u;
    v11 = 0u;
    AMSCore::ServiceProvider<AMSCore::IOpenURLProvider>::setDefault((uint64_t)&v10);
    v4 = (std::__shared_weak_count *)*((_QWORD *)&v10 + 1);
    if (!*((_QWORD *)&v10 + 1))
      goto LABEL_8;
    v5 = (unint64_t *)(*((_QWORD *)&v10 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      if (v12)
        goto LABEL_9;
    }
    else
    {
LABEL_8:
      if (v12)
      {
LABEL_9:
        v7 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
        if (*((_QWORD *)&v11 + 1))
        {
          v8 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
          do
            v9 = __ldaxr(v8);
          while (__stlxr(v9 - 1, v8));
          if (!v9)
          {
            ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
            std::__shared_weak_count::__release_weak(v7);
          }
        }
        goto LABEL_3;
      }
    }
    (*(void (**)(__int128 *))v11)(&v11);
  }
LABEL_3:
  *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBCFD44(void *a1)
{
  __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IOpenURLProviderEEERDavE9singleton);
  __clang_call_terminate(a1);
}

void AMSCore::defaultInitProvider<AMSCore::IPrivacyProvider>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  _QWORD *v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  char v13;

  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IPrivacyProviderEEERDavE9singleton);
  if ((v2 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IPrivacyProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IPrivacyProviderEEERDavE9singleton);
    xmmword_1ECEAC1C8 = 0uLL;
    byte_1ECEAC1D8 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IPrivacyProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IPrivacyProviderEEERDavE9singleton);
  v3 = byte_1ECEAC1D8;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IPrivacyProviderEEERDavE9singleton);
  if (!v3)
  {
    v4 = operator new(0x20uLL);
    v4[1] = 0;
    v4[2] = 0;
    *v4 = &off_1E25229D8;
    v4[3] = &off_1E2520A18;
    *(_QWORD *)&v12 = v4 + 3;
    *((_QWORD *)&v12 + 1) = v4;
    v13 = 1;
    v11 = v12;
    v12 = 0uLL;
    AMSCore::ServiceProvider<AMSCore::IPrivacyProvider>::setDefault((uint64_t)&v11);
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (!*((_QWORD *)&v11 + 1))
      goto LABEL_8;
    v6 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v13)
        goto LABEL_9;
    }
    else
    {
LABEL_8:
      if (v13)
      {
LABEL_9:
        v8 = (std::__shared_weak_count *)*((_QWORD *)&v12 + 1);
        if (*((_QWORD *)&v12 + 1))
        {
          v9 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
          do
            v10 = __ldaxr(v9);
          while (__stlxr(v10 - 1, v9));
          if (!v10)
          {
            ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
            std::__shared_weak_count::__release_weak(v8);
          }
        }
        goto LABEL_3;
      }
    }
    (*(void (**)(__int128 *))v12)(&v12);
  }
LABEL_3:
  *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBCFEE4(void *a1)
{
  __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IPrivacyProviderEEERDavE9singleton);
  __clang_call_terminate(a1);
}

void AMSCore::defaultInitProvider<AMSCore::ISchedulingProvider>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  int v4;
  std::__shared_weak_count *imp;
  unint64_t *v6;
  unint64_t v7;
  unsigned int *v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::runtime_error v18;
  std::runtime_error v19;
  __int128 v20;
  unsigned int **v21;
  unsigned int *v22;
  uint64_t v23;
  __int128 v24;
  std::runtime_error v25;
  __int128 v26;
  unsigned int **v27;
  unsigned int *v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  std::runtime_error v32;
  __int128 v33;
  unsigned int **v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  unsigned __int8 v38;
  std::runtime_error v39;
  __int128 v40;
  unsigned int **v41;
  unsigned int *v42;
  uint64_t v43;
  __int128 v44;

  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19ISchedulingProviderEEERDavE9singleton);
  if ((v2 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19ISchedulingProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19ISchedulingProviderEEERDavE9singleton);
    xmmword_1ECEAC4C8 = 0uLL;
    byte_1ECEAC4D8 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19ISchedulingProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19ISchedulingProviderEEERDavE9singleton);
  v3 = byte_1ECEAC4D8;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19ISchedulingProviderEEERDavE9singleton);
  if (v3)
    goto LABEL_36;
  AMSCore::ISchedulingProvider::makeDefault((uint64_t)&v32);
  v4 = v38;
  if (v38)
  {
    v18 = v32;
    v32.__vftable = 0;
    v32.__imp_.__imp_ = 0;
    AMSCore::ServiceProvider<AMSCore::ISchedulingProvider>::setDefault((uint64_t)&v18);
    imp = (std::__shared_weak_count *)v18.__imp_.__imp_;
    if (v18.__imp_.__imp_)
    {
      v6 = (unint64_t *)(v18.__imp_.__imp_ + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))imp->__on_zero_shared)(imp);
        std::__shared_weak_count::__release_weak(imp);
      }
    }
  }
  else
  {
    std::runtime_error::runtime_error(&v25, &v32);
    v26 = v33;
    v25.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v27 = v34;
    v28 = (unsigned int *)v35;
    v29 = v36;
    if (v36)
    {
      *(_QWORD *)(v35 + 16) = &v28;
      v34 = (unsigned int **)&v35;
      v35 = 0;
      v36 = 0;
    }
    else
    {
      v27 = &v28;
    }
    v30 = v37;
    v37 = 0uLL;
    v31 = 1;
    std::runtime_error::runtime_error(&v39, &v25);
    v40 = v26;
    v39.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v41 = v27;
    v42 = v28;
    v43 = v29;
    if (v29)
    {
      *((_QWORD *)v28 + 2) = &v42;
      v27 = &v28;
      v28 = 0;
      v29 = 0;
    }
    else
    {
      v41 = &v42;
    }
    v44 = v30;
    v30 = 0uLL;
    std::runtime_error::runtime_error(&v19, &v39);
    v20 = v40;
    v19.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v8 = v42;
    v21 = v41;
    v22 = v42;
    v23 = v43;
    if (v43)
    {
      *((_QWORD *)v42 + 2) = &v22;
      v8 = 0;
      v41 = &v42;
      v42 = 0;
      v43 = 0;
    }
    else
    {
      v21 = &v22;
    }
    v24 = v44;
    v44 = 0uLL;
    v39.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v41, v8);
    MEMORY[0x18D7898AC](&v39);
    std::runtime_error::runtime_error((std::runtime_error *)a1, &v19);
    *(_OWORD *)(a1 + 16) = v20;
    *(_QWORD *)a1 = off_1E2521330;
    v9 = v22;
    *(_QWORD *)(a1 + 32) = v21;
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a1 + 40;
    v11 = v23;
    *(_QWORD *)(a1 + 48) = v23;
    if (v11)
    {
      *((_QWORD *)v9 + 2) = v10;
      v9 = 0;
      v21 = &v22;
      v22 = 0;
      v23 = 0;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = v10;
    }
    *(_OWORD *)(a1 + 56) = v24;
    v24 = 0uLL;
    *(_BYTE *)(a1 + 72) = 0;
    v19.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v21, v9);
    MEMORY[0x18D7898AC](&v19);
    if (v31)
    {
      v25.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v12 = (std::__shared_weak_count *)*((_QWORD *)&v30 + 1);
      if (*((_QWORD *)&v30 + 1))
      {
        v13 = (unint64_t *)(*((_QWORD *)&v30 + 1) + 8);
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v27, v28);
      MEMORY[0x18D7898AC](&v25);
    }
  }
  if (v38)
  {
    v15 = (std::__shared_weak_count *)v32.__imp_.__imp_;
    if (v32.__imp_.__imp_)
    {
      v16 = (unint64_t *)(v32.__imp_.__imp_ + 8);
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  else
  {
    ((void (*)(std::runtime_error *))v32.~runtime_error)(&v32);
  }
  if (v4)
LABEL_36:
    *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBD02AC(void *a1)
{
  __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19ISchedulingProviderEEERDavE9singleton);
  __clang_call_terminate(a1);
}

void AMSCore::defaultInitProvider<AMSCore::RandomProvider>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  uint64_t v4;
  uint32_t v5;
  uint64_t v6;
  uint64_t i;
  int v8;
  _QWORD *v9;
  unsigned __int8 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void (**v15)(_QWORD);
  char v16;
  std::random_device v17;
  std::string __token;

  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
  if ((v2 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
    qword_1ECEABC88 = 0;
    qword_1ECEABC90 = 0;
    byte_1ECEABC98 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
  v3 = byte_1ECEABC98;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
  if (!v3)
  {
    v4 = operator new();
    bzero((void *)(v4 + 64), 0x9D0uLL);
    *(_QWORD *)v4 = &off_1E2520820;
    *(_QWORD *)(v4 + 8) = 850045863;
    *(_OWORD *)(v4 + 16) = 0u;
    *(_OWORD *)(v4 + 32) = 0u;
    *(_OWORD *)(v4 + 48) = 0u;
    *(_QWORD *)(v4 + 64) = 0;
    *((_BYTE *)&__token.__r_.__value_.__s + 23) = 12;
    strcpy((char *)&__token, "/dev/urandom");
    std::random_device::random_device(&v17, &__token);
    if (SHIBYTE(__token.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__token.__r_.__value_.__l.__data_);
    v5 = arc4random();
    *(_DWORD *)(v4 + 72) = v5;
    v6 = 1;
    for (i = 19; i != 642; ++i)
    {
      v8 = 1812433253 * (v5 ^ (v5 >> 30));
      v5 = v8 + v6;
      *(_DWORD *)(v4 + 4 * i) = i + v8 - 18;
      ++v6;
    }
    *(_QWORD *)(v4 + 2568) = 0;
    std::random_device::~random_device(&v17);
    v16 = 1;
    v9 = (_QWORD *)operator new();
    *v9 = &off_1E25231B8;
    v9[1] = 0;
    v9[2] = 0;
    v9[3] = v4;
    v15 = 0;
    v10 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
    if ((v10 & 1) == 0
      && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton))
    {
      std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
      qword_1ECEABC88 = 0;
      qword_1ECEABC90 = 0;
      byte_1ECEABC98 = 0;
      __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
    }
    std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
    *(_QWORD *)&v11 = v4;
    *((_QWORD *)&v11 + 1) = v9;
    v12 = (std::__shared_weak_count *)qword_1ECEABC90;
    *(_OWORD *)&qword_1ECEABC88 = v11;
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    byte_1ECEABC98 = 1;
    std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
    if (v16)
      v15 = 0;
    else
      (*v15)(&v15);
  }
  *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBD0578(void *a1)
{
  __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
  __clang_call_terminate(a1);
}

void sub_18CBD059C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if (!a18)
  {
    (*(void (**)(uint64_t *))a9)(&a9);
    _Unwind_Resume(exception_object);
  }
  if (!a9)
    _Unwind_Resume(exception_object);
  (*(void (**)(void))(*(_QWORD *)a9 + 8))();
  _Unwind_Resume(exception_object);
}

void sub_18CBD05E0(void *a1)
{
  uint64_t v1;
  std::mutex *v2;
  uint64_t v3;

  std::random_device::~random_device((std::random_device *)(v3 - 60));
  std::mutex::~mutex(v2);
  MEMORY[0x18D789BDC](v1, 0x1081C4001D5A959);
  __clang_call_terminate(a1);
}

void AMSCore::defaultInitProvider<AMSCore::Trace::Tracer>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  _QWORD *v4;
  uint64_t v5;
  unsigned __int8 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  char v14;

  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
    qword_1ECEAC708 = 0;
    qword_1ECEAC710 = 0;
    byte_1ECEAC718 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
  v3 = byte_1ECEAC718;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
  if (!v3)
  {
    v4 = operator new(0x190uLL);
    v4[1] = 0;
    v4[2] = 0;
    *v4 = &off_1E2522F50;
    v4[3] = off_1E2521358;
    *((_BYTE *)v4 + 32) = 0;
    v4[5] = 850045863;
    *((_OWORD *)v4 + 3) = 0u;
    *((_OWORD *)v4 + 4) = 0u;
    *((_OWORD *)v4 + 5) = 0u;
    v5 = MEMORY[0x1E0DE4A50];
    v4[12] = 0;
    v4[13] = v5;
    std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:fe180100]((uint64_t)(v4 + 14));
    *((_BYTE *)v4 + 392) = 1;
    *(_QWORD *)&v13 = v4 + 3;
    *((_QWORD *)&v13 + 1) = v4;
    v14 = 1;
    v12 = v13;
    v13 = 0uLL;
    v6 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
    if ((v6 & 1) == 0 && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton))
    {
      std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
      qword_1ECEAC708 = 0;
      qword_1ECEAC710 = 0;
      byte_1ECEAC718 = 0;
      __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
    }
    std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
    v7 = (std::__shared_weak_count *)qword_1ECEAC710;
    *(_OWORD *)&qword_1ECEAC708 = v12;
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    byte_1ECEAC718 = 1;
    std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
    if (*((_QWORD *)&v13 + 1))
    {
      v10 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v13 + 1) + 16))(*((_QWORD *)&v13 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v13 + 1));
      }
    }
  }
  *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBD0860(void *a1)
{
  __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
  __clang_call_terminate(a1);
}

void sub_18CBD0884(void *a1)
{
  std::__shared_weak_count *v1;
  std::mutex *v2;
  void *v4;

  std::mutex::~mutex(v2);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  __clang_call_terminate(a1);
}

void AMSCore::defaultInitProvider<AMSCore::StructuredData::IStructuredDataProvider>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  std::runtime_error_vtbl *v4;
  std::runtime_error_vtbl *v5;
  unsigned int *v6;
  unsigned int *v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  int v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *imp;
  unint64_t *v16;
  unint64_t v17;
  unsigned int *v18;
  unsigned int *v19;
  uint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::runtime_error v28;
  void *v29[2];
  uint64_t v30;
  std::runtime_error v31;
  __int128 v32;
  unsigned int **v33;
  unsigned int *v34;
  uint64_t v35;
  __int128 v36;
  char v37;
  std::runtime_error v38;
  __int128 v39;
  unsigned int **v40;
  unsigned int *v41;
  uint64_t v42;
  __int128 v43;
  std::runtime_error __p;
  __int128 v45;
  unsigned int **v46;
  unsigned int *v47;
  uint64_t v48;
  __int128 v49;
  char v50;
  std::runtime_error v51;
  __int128 v52;
  unsigned int **v53;
  unsigned int *v54;
  uint64_t v55;
  __int128 v56;
  unsigned __int8 v57;
  char v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14StructuredData23IStructuredDataProviderEEERDavE9singleton);
  if ((v2 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14StructuredData23IStructuredDataProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14StructuredData23IStructuredDataProviderEEERDavE9singleton);
    xmmword_1ECEABD48 = 0uLL;
    byte_1ECEABD58 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14StructuredData23IStructuredDataProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14StructuredData23IStructuredDataProviderEEERDavE9singleton);
  v3 = byte_1ECEABD58;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14StructuredData23IStructuredDataProviderEEERDavE9singleton);
  if (v3)
    goto LABEL_75;
  v29[0] = 0;
  v29[1] = 0;
  v30 = 0;
  BYTE7(v45) = 0;
  LOBYTE(__p.__vftable) = 0;
  AMSCore::SQLiteDatabase::make((uint64_t)&v51, (char *)v29, (uint64_t)&__p);
  if (SBYTE7(v45) < 0)
    operator delete(__p.__vftable);
  if (v58)
  {
    v4 = (std::runtime_error_vtbl *)operator new(0x108uLL);
    v4->~runtime_error_0 = 0;
    v4->what = 0;
    v4->~runtime_error = (void (__cdecl *)(std::runtime_error *__hidden))&off_1E25228C0;
    AMSCore::SQLiteDatabase::SQLiteDatabase((uint64_t)&v4[1], (uint64_t)&v51);
    __p.__vftable = v4 + 1;
    __p.__imp_.__imp_ = (const char *)v4;
    v5 = (std::runtime_error_vtbl *)operator new(0x30uLL);
    v5->~runtime_error_0 = 0;
    v5->what = 0;
    v5->~runtime_error = (void (__cdecl *)(std::runtime_error *__hidden))&off_1E25228F8;
    v5[1].~runtime_error = (void (__cdecl *)(std::runtime_error *__hidden))&off_1E25208D0;
    v5[1].~runtime_error_0 = (void (__cdecl *)(std::runtime_error *__hidden))&v4[1];
    v5[1].what = (const char *(__cdecl *)(const std::runtime_error *__hidden))v4;
    v31.__vftable = v5 + 1;
    v31.__imp_.__imp_ = (const char *)v5;
    v37 = 1;
  }
  else
  {
    std::runtime_error::runtime_error(&__p, &v51);
    v45 = v52;
    __p.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v46 = v53;
    v47 = v54;
    v48 = v55;
    if (v55)
    {
      *((_QWORD *)v54 + 2) = &v47;
      v53 = &v54;
      v54 = 0;
      v55 = 0;
    }
    else
    {
      v46 = &v47;
    }
    v49 = v56;
    v56 = 0uLL;
    v50 = 1;
    std::runtime_error::runtime_error(&v31, &__p);
    v32 = v45;
    v31.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v33 = v46;
    v34 = v47;
    v35 = v48;
    if (v48)
    {
      *((_QWORD *)v47 + 2) = &v34;
      v46 = &v47;
      v47 = 0;
      v48 = 0;
    }
    else
    {
      v33 = &v34;
    }
    v36 = v49;
    v49 = 0uLL;
    std::runtime_error::runtime_error(&v38, &v31);
    v39 = v32;
    v6 = v34;
    v38.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v40 = v33;
    v41 = v34;
    v42 = v35;
    if (v35)
    {
      *((_QWORD *)v34 + 2) = &v41;
      v6 = 0;
      v33 = &v34;
      v34 = 0;
      v35 = 0;
    }
    else
    {
      v40 = &v41;
    }
    v43 = v36;
    v36 = 0uLL;
    v31.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v33, v6);
    MEMORY[0x18D7898AC](&v31);
    std::runtime_error::runtime_error(&v31, &v38);
    v32 = v39;
    v31.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v7 = v41;
    v33 = v40;
    v34 = v41;
    v35 = v42;
    if (v42)
    {
      *((_QWORD *)v41 + 2) = &v34;
      v7 = 0;
      v40 = &v41;
      v41 = 0;
      v42 = 0;
    }
    else
    {
      v33 = &v34;
    }
    v36 = v43;
    v43 = 0uLL;
    v37 = 0;
    v38.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v40, v7);
    MEMORY[0x18D7898AC](&v38);
    if (v50)
    {
      __p.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v8 = (std::__shared_weak_count *)*((_QWORD *)&v49 + 1);
      if (*((_QWORD *)&v49 + 1))
      {
        v9 = (unint64_t *)(*((_QWORD *)&v49 + 1) + 8);
        do
          v10 = __ldaxr(v9);
        while (__stlxr(v10 - 1, v9));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v46, v47);
      MEMORY[0x18D7898AC](&__p);
    }
  }
  if (v58)
  {
    AMSCore::SQLiteDatabase::~SQLiteDatabase((AMSCore::SQLiteDatabase *)&v51);
    if (v37)
    {
LABEL_28:
      v51 = v31;
      v31.__vftable = 0;
      v31.__imp_.__imp_ = 0;
      v57 = 1;
      goto LABEL_29;
    }
  }
  else
  {
    ((void (*)(std::runtime_error *))v51.~runtime_error)(&v51);
    if (v37)
      goto LABEL_28;
  }
  std::runtime_error::runtime_error(&v51, &v31);
  v52 = v32;
  v51.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v53 = v33;
  v54 = v34;
  v55 = v35;
  if (v35)
  {
    *((_QWORD *)v34 + 2) = &v54;
    v33 = &v34;
    v34 = 0;
    v35 = 0;
  }
  else
  {
    v53 = &v54;
  }
  v56 = v36;
  v36 = 0uLL;
  v57 = 0;
  if (v37)
  {
    imp = (std::__shared_weak_count *)v31.__imp_.__imp_;
    if (v31.__imp_.__imp_)
    {
      v16 = (unint64_t *)(v31.__imp_.__imp_ + 8);
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))imp->__on_zero_shared)(imp);
        std::__shared_weak_count::__release_weak(imp);
      }
    }
  }
  else
  {
    ((void (*)(std::runtime_error *))v31.~runtime_error)(&v31);
  }
LABEL_29:
  if (SHIBYTE(v30) < 0)
  {
    operator delete(v29[0]);
    v11 = v57;
    if (v57)
      goto LABEL_31;
  }
  else
  {
    v11 = v57;
    if (v57)
    {
LABEL_31:
      v28 = v51;
      v51.__vftable = 0;
      v51.__imp_.__imp_ = 0;
      AMSCore::ServiceProvider<AMSCore::StructuredData::IStructuredDataProvider>::setDefault((uint64_t)&v28);
      v12 = (std::__shared_weak_count *)v28.__imp_.__imp_;
      if (v28.__imp_.__imp_)
      {
        v13 = (unint64_t *)(v28.__imp_.__imp_ + 8);
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      goto LABEL_67;
    }
  }
  std::runtime_error::runtime_error(&__p, &v51);
  v45 = v52;
  __p.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v46 = v53;
  v47 = v54;
  v48 = v55;
  if (v55)
  {
    *((_QWORD *)v54 + 2) = &v47;
    v53 = &v54;
    v54 = 0;
    v55 = 0;
  }
  else
  {
    v46 = &v47;
  }
  v49 = v56;
  v56 = 0uLL;
  v50 = 1;
  std::runtime_error::runtime_error(&v31, &__p);
  v32 = v45;
  v31.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v33 = v46;
  v34 = v47;
  v35 = v48;
  if (v48)
  {
    *((_QWORD *)v47 + 2) = &v34;
    v46 = &v47;
    v47 = 0;
    v48 = 0;
  }
  else
  {
    v33 = &v34;
  }
  v36 = v49;
  v49 = 0uLL;
  std::runtime_error::runtime_error(&v38, &v31);
  v39 = v32;
  v18 = v34;
  v38.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v40 = v33;
  v41 = v34;
  v42 = v35;
  if (v35)
  {
    *((_QWORD *)v34 + 2) = &v41;
    v18 = 0;
    v33 = &v34;
    v34 = 0;
    v35 = 0;
  }
  else
  {
    v40 = &v41;
  }
  v43 = v36;
  v36 = 0uLL;
  v31.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v33, v18);
  MEMORY[0x18D7898AC](&v31);
  std::runtime_error::runtime_error((std::runtime_error *)a1, &v38);
  *(_OWORD *)(a1 + 16) = v39;
  *(_QWORD *)a1 = off_1E2521330;
  v19 = v41;
  *(_QWORD *)(a1 + 32) = v40;
  *(_QWORD *)(a1 + 40) = v19;
  v20 = a1 + 40;
  v21 = v42;
  *(_QWORD *)(a1 + 48) = v42;
  if (v21)
  {
    *((_QWORD *)v19 + 2) = v20;
    v19 = 0;
    v40 = &v41;
    v41 = 0;
    v42 = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = v20;
  }
  *(_OWORD *)(a1 + 56) = v43;
  v43 = 0uLL;
  *(_BYTE *)(a1 + 72) = 0;
  v38.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v40, v19);
  MEMORY[0x18D7898AC](&v38);
  if (v50)
  {
    __p.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v22 = (std::__shared_weak_count *)*((_QWORD *)&v49 + 1);
    if (*((_QWORD *)&v49 + 1))
    {
      v23 = (unint64_t *)(*((_QWORD *)&v49 + 1) + 8);
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v46, v47);
    MEMORY[0x18D7898AC](&__p);
  }
LABEL_67:
  if (v57)
  {
    v25 = (std::__shared_weak_count *)v51.__imp_.__imp_;
    if (v51.__imp_.__imp_)
    {
      v26 = (unint64_t *)(v51.__imp_.__imp_ + 8);
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
  }
  else
  {
    ((void (*)(std::runtime_error *))v51.~runtime_error)(&v51);
  }
  if (v11)
LABEL_75:
    *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBD106C(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14StructuredData23IStructuredDataProviderEEERDavE9singleton);
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void AMSCore::defaultInitProvider<AMSCore::IMetricsProvider,AMSCore::BagService>(uint64_t a1, __int128 *a2)
{
  unsigned __int8 v4;
  int v5;
  __int128 v6;
  __int128 v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  std::__shared_weak_count *imp;
  unint64_t *v16;
  unint64_t v17;
  unsigned int *v18;
  unsigned int *v19;
  uint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::runtime_error v28;
  std::runtime_error v29;
  __int128 v30;
  unsigned int **v31;
  unsigned int *v32;
  uint64_t v33;
  __int128 v34;
  std::runtime_error v35;
  __int128 v36;
  unsigned int **v37;
  unsigned int *v38;
  uint64_t v39;
  __int128 v40;
  char v41;
  __int128 v42;
  __int128 v43;
  std::runtime_error v44;
  __int128 v45;
  unsigned int **v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  unsigned __int8 v50;
  std::runtime_error v51;
  __int128 v52;
  unsigned int **v53;
  unsigned int *v54;
  uint64_t v55;
  __int128 v56;

  v4 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
  if ((v4 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
    xmmword_1ECEAC048 = 0uLL;
    byte_1ECEAC058 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
  v5 = byte_1ECEAC058;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
  if (v5)
    goto LABEL_46;
  v6 = *a2;
  v7 = a2[1];
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v42 = v6;
  v43 = v7;
  *((_QWORD *)a2 + 2) = 0;
  *((_QWORD *)a2 + 3) = 0;
  AMSCore::IMetricsProvider::makeDefault((uint64_t)&v44, (uint64_t)&v42);
  v8 = (std::__shared_weak_count *)*((_QWORD *)&v43 + 1);
  if (*((_QWORD *)&v43 + 1))
  {
    v9 = (unint64_t *)(*((_QWORD *)&v43 + 1) + 8);
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v11 = (std::__shared_weak_count *)*((_QWORD *)&v42 + 1);
  if (!*((_QWORD *)&v42 + 1))
    goto LABEL_12;
  v12 = (unint64_t *)(*((_QWORD *)&v42 + 1) + 8);
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v14 = v50;
    if (v50)
      goto LABEL_13;
  }
  else
  {
LABEL_12:
    v14 = v50;
    if (v50)
    {
LABEL_13:
      v28 = v44;
      v44.__vftable = 0;
      v44.__imp_.__imp_ = 0;
      AMSCore::ServiceProvider<AMSCore::IMetricsProvider>::setDefault((uint64_t)&v28);
      imp = (std::__shared_weak_count *)v28.__imp_.__imp_;
      if (v28.__imp_.__imp_)
      {
        v16 = (unint64_t *)(v28.__imp_.__imp_ + 8);
        do
          v17 = __ldaxr(v16);
        while (__stlxr(v17 - 1, v16));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))imp->__on_zero_shared)(imp);
          std::__shared_weak_count::__release_weak(imp);
        }
      }
      goto LABEL_38;
    }
  }
  std::runtime_error::runtime_error(&v35, &v44);
  v36 = v45;
  v35.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v37 = v46;
  v38 = (unsigned int *)v47;
  v39 = v48;
  if (v48)
  {
    *(_QWORD *)(v47 + 16) = &v38;
    v46 = (unsigned int **)&v47;
    v47 = 0;
    v48 = 0;
  }
  else
  {
    v37 = &v38;
  }
  v40 = v49;
  v49 = 0uLL;
  v41 = 1;
  std::runtime_error::runtime_error(&v51, &v35);
  v52 = v36;
  v51.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v53 = v37;
  v54 = v38;
  v55 = v39;
  if (v39)
  {
    *((_QWORD *)v38 + 2) = &v54;
    v37 = &v38;
    v38 = 0;
    v39 = 0;
  }
  else
  {
    v53 = &v54;
  }
  v56 = v40;
  v40 = 0uLL;
  std::runtime_error::runtime_error(&v29, &v51);
  v30 = v52;
  v29.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v18 = v54;
  v31 = v53;
  v32 = v54;
  v33 = v55;
  if (v55)
  {
    *((_QWORD *)v54 + 2) = &v32;
    v18 = 0;
    v53 = &v54;
    v54 = 0;
    v55 = 0;
  }
  else
  {
    v31 = &v32;
  }
  v34 = v56;
  v56 = 0uLL;
  v51.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v53, v18);
  MEMORY[0x18D7898AC](&v51);
  std::runtime_error::runtime_error((std::runtime_error *)a1, &v29);
  *(_OWORD *)(a1 + 16) = v30;
  *(_QWORD *)a1 = off_1E2521330;
  v19 = v32;
  *(_QWORD *)(a1 + 32) = v31;
  *(_QWORD *)(a1 + 40) = v19;
  v20 = a1 + 40;
  v21 = v33;
  *(_QWORD *)(a1 + 48) = v33;
  if (v21)
  {
    *((_QWORD *)v19 + 2) = v20;
    v19 = 0;
    v31 = &v32;
    v32 = 0;
    v33 = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = v20;
  }
  *(_OWORD *)(a1 + 56) = v34;
  v34 = 0uLL;
  *(_BYTE *)(a1 + 72) = 0;
  v29.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v31, v19);
  MEMORY[0x18D7898AC](&v29);
  if (v41)
  {
    v35.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v22 = (std::__shared_weak_count *)*((_QWORD *)&v40 + 1);
    if (*((_QWORD *)&v40 + 1))
    {
      v23 = (unint64_t *)(*((_QWORD *)&v40 + 1) + 8);
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v37, v38);
    MEMORY[0x18D7898AC](&v35);
  }
LABEL_38:
  if (v50)
  {
    v25 = (std::__shared_weak_count *)v44.__imp_.__imp_;
    if (v44.__imp_.__imp_)
    {
      v26 = (unint64_t *)(v44.__imp_.__imp_ + 8);
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
  }
  else
  {
    ((void (*)(std::runtime_error *))v44.~runtime_error)(&v44);
  }
  if (v14)
LABEL_46:
    *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBD1518(void *a1)
{
  __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
  __clang_call_terminate(a1);
}

void AMSCore::defaultInitProvider<AMSCore::MetricsIdentifierProvider>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  int v4;
  std::__shared_weak_count *imp;
  unint64_t *v6;
  unint64_t v7;
  unsigned int *v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::runtime_error v18;
  std::runtime_error v19;
  __int128 v20;
  unsigned int **v21;
  unsigned int *v22;
  uint64_t v23;
  __int128 v24;
  std::runtime_error v25;
  __int128 v26;
  unsigned int **v27;
  unsigned int *v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  std::runtime_error v32;
  __int128 v33;
  unsigned int **v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  unsigned __int8 v38;
  std::runtime_error v39;
  __int128 v40;
  unsigned int **v41;
  unsigned int *v42;
  uint64_t v43;
  __int128 v44;

  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_25MetricsIdentifierProviderEEERDavE9singleton);
  if ((v2 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_25MetricsIdentifierProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_25MetricsIdentifierProviderEEERDavE9singleton);
    xmmword_1ECEAC648 = 0uLL;
    byte_1ECEAC658 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_25MetricsIdentifierProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_25MetricsIdentifierProviderEEERDavE9singleton);
  v3 = byte_1ECEAC658;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_25MetricsIdentifierProviderEEERDavE9singleton);
  if (v3)
    goto LABEL_36;
  AMSCore::MetricsIdentifierProvider::make((AMSCore::MetricsIdentifierProvider *)&v32);
  v4 = v38;
  if (v38)
  {
    v18 = v32;
    v32.__vftable = 0;
    v32.__imp_.__imp_ = 0;
    AMSCore::ServiceProvider<AMSCore::MetricsIdentifierProvider>::setDefault((uint64_t)&v18);
    imp = (std::__shared_weak_count *)v18.__imp_.__imp_;
    if (v18.__imp_.__imp_)
    {
      v6 = (unint64_t *)(v18.__imp_.__imp_ + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))imp->__on_zero_shared)(imp);
        std::__shared_weak_count::__release_weak(imp);
      }
    }
  }
  else
  {
    std::runtime_error::runtime_error(&v25, &v32);
    v26 = v33;
    v25.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v27 = v34;
    v28 = (unsigned int *)v35;
    v29 = v36;
    if (v36)
    {
      *(_QWORD *)(v35 + 16) = &v28;
      v34 = (unsigned int **)&v35;
      v35 = 0;
      v36 = 0;
    }
    else
    {
      v27 = &v28;
    }
    v30 = v37;
    v37 = 0uLL;
    v31 = 1;
    std::runtime_error::runtime_error(&v39, &v25);
    v40 = v26;
    v39.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v41 = v27;
    v42 = v28;
    v43 = v29;
    if (v29)
    {
      *((_QWORD *)v28 + 2) = &v42;
      v27 = &v28;
      v28 = 0;
      v29 = 0;
    }
    else
    {
      v41 = &v42;
    }
    v44 = v30;
    v30 = 0uLL;
    std::runtime_error::runtime_error(&v19, &v39);
    v20 = v40;
    v19.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v8 = v42;
    v21 = v41;
    v22 = v42;
    v23 = v43;
    if (v43)
    {
      *((_QWORD *)v42 + 2) = &v22;
      v8 = 0;
      v41 = &v42;
      v42 = 0;
      v43 = 0;
    }
    else
    {
      v21 = &v22;
    }
    v24 = v44;
    v44 = 0uLL;
    v39.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v41, v8);
    MEMORY[0x18D7898AC](&v39);
    std::runtime_error::runtime_error((std::runtime_error *)a1, &v19);
    *(_OWORD *)(a1 + 16) = v20;
    *(_QWORD *)a1 = off_1E2521330;
    v9 = v22;
    *(_QWORD *)(a1 + 32) = v21;
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a1 + 40;
    v11 = v23;
    *(_QWORD *)(a1 + 48) = v23;
    if (v11)
    {
      *((_QWORD *)v9 + 2) = v10;
      v9 = 0;
      v21 = &v22;
      v22 = 0;
      v23 = 0;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = v10;
    }
    *(_OWORD *)(a1 + 56) = v24;
    v24 = 0uLL;
    *(_BYTE *)(a1 + 72) = 0;
    v19.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v21, v9);
    MEMORY[0x18D7898AC](&v19);
    if (v31)
    {
      v25.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
      v12 = (std::__shared_weak_count *)*((_QWORD *)&v30 + 1);
      if (*((_QWORD *)&v30 + 1))
      {
        v13 = (unint64_t *)(*((_QWORD *)&v30 + 1) + 8);
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v27, v28);
      MEMORY[0x18D7898AC](&v25);
    }
  }
  if (v38)
  {
    v15 = (std::__shared_weak_count *)v32.__imp_.__imp_;
    if (v32.__imp_.__imp_)
    {
      v16 = (unint64_t *)(v32.__imp_.__imp_ + 8);
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  else
  {
    ((void (*)(std::runtime_error *))v32.~runtime_error)(&v32);
  }
  if (v4)
LABEL_36:
    *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBD18DC(void *a1)
{
  __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_25MetricsIdentifierProviderEEERDavE9singleton);
  __clang_call_terminate(a1);
}

void AMSCore::defaultInitProvider<AMSCore::ICancellationContextProvider>(uint64_t a1)
{
  unsigned __int8 v2;
  int v3;
  _QWORD *v4;
  unsigned __int8 v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  char v13;

  v2 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
  if ((v2 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
    qword_1ECEAB808 = 0;
    qword_1ECEAB810 = 0;
    byte_1ECEAB818 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
  v3 = byte_1ECEAB818;
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
  if (!v3)
  {
    v4 = operator new(0x20uLL);
    v4[1] = 0;
    v4[2] = 0;
    *v4 = &off_1E2522EA8;
    v4[3] = &off_1E25212D8;
    *(_QWORD *)&v12 = v4 + 3;
    *((_QWORD *)&v12 + 1) = v4;
    v13 = 1;
    v11 = v12;
    v12 = 0uLL;
    v5 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
    if ((v5 & 1) == 0
      && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton))
    {
      std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
      qword_1ECEAB808 = 0;
      qword_1ECEAB810 = 0;
      byte_1ECEAB818 = 0;
      __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
    }
    std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
    v6 = (std::__shared_weak_count *)qword_1ECEAB810;
    *(_OWORD *)&qword_1ECEAB808 = v11;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    byte_1ECEAB818 = 1;
    std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
    if (*((_QWORD *)&v12 + 1))
    {
      v9 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v12 + 1) + 16))(*((_QWORD *)&v12 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v12 + 1));
      }
    }
  }
  *(_BYTE *)(a1 + 72) = 1;
}

void sub_18CBD1AD8(void *a1)
{
  __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
  __clang_call_terminate(a1);
}

void AMSCore::shutdown(AMSCore *this)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  int v4;
  std::chrono::steady_clock::time_point v5;
  unsigned int v6;
  unsigned int v7;
  std::chrono::steady_clock::time_point v8;
  std::__cxx_contention_t v9;
  unsigned int v10;
  unsigned __int8 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unsigned __int8 v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unsigned __int8 v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unsigned __int8 v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unsigned __int8 v35;
  std::__shared_weak_count *v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unsigned __int8 v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unsigned __int8 v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  unsigned __int8 v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unsigned __int8 v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  unsigned __int8 v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unsigned __int8 v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unsigned __int8 v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  unsigned __int8 v70;
  __int128 v71;
  unint64_t *v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  unsigned __int8 v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  unsigned __int8 v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  unsigned __int8 v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  unsigned __int8 v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  unsigned __int8 v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  unsigned __int8 v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  unsigned __int8 v100;
  std::__shared_weak_count *v101;
  unint64_t *v102;
  unint64_t v103;
  unsigned __int8 v104;
  unsigned __int8 v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  unsigned __int8 v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  unsigned __int8 v113;
  std::__shared_weak_count *v114;
  unint64_t *v115;
  unint64_t v116;
  uint64_t v117;
  std::__shared_weak_count *v118;

  AMSCore::ServiceProvider<AMSCore::IHTTPProvider>::getDefaultOrNull(&v117);
  if (v117)
    (*(void (**)(uint64_t))(*(_QWORD *)v117 + 16))(v117);
  v1 = v118;
  if (v118)
  {
    p_shared_owners = (unint64_t *)&v118->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  v4 = atomic_load((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
  if (v4 >= 1)
  {
    do
    {
      v5.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
      v6 = 0;
      while (1)
      {
        v7 = atomic_load((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
        if (v7 != v4)
          break;
        if (v6 <= 0x3F)
        {
          ++v6;
        }
        else
        {
          v8.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_ - v5.__d_.__rep_;
          if (v8.__d_.__rep_ < 64001)
          {
            if (v8.__d_.__rep_ >= 4001)
              sched_yield();
          }
          else
          {
            v9 = std::__libcpp_atomic_monitor(&AMSCore::TaskCounter::getCount(void)::count);
            v10 = atomic_load((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
            if (v10 != v4)
              break;
            std::__libcpp_atomic_wait(&AMSCore::TaskCounter::getCount(void)::count, v9);
          }
        }
      }
      v4 = atomic_load((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
    }
    while (v4 > 0);
  }
  v11 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
  if ((v11 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
    xmmword_1ECEAC408 = 0uLL;
    byte_1ECEAC418 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
  v12 = xmmword_1ECEAC408;
  if (*((_QWORD *)&xmmword_1ECEAC408 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&xmmword_1ECEAC408 + 1) + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
  if ((_QWORD)v12)
    (*(void (**)(_QWORD))(*(_QWORD *)v12 + 32))(v12);
  if (*((_QWORD *)&v12 + 1))
  {
    v15 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v12 + 1) + 16))(*((_QWORD *)&v12 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v12 + 1));
    }
  }
  v17 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
  if ((v17 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
    xmmword_1ECEAC408 = 0uLL;
    byte_1ECEAC418 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
  v18 = (std::__shared_weak_count *)*((_QWORD *)&xmmword_1ECEAC408 + 1);
  xmmword_1ECEAC408 = 0uLL;
  if (v18)
  {
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  byte_1ECEAC418 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19INotificationCenterEEERDavE9singleton);
  AMSCore::ServiceProvider<AMSCore::ISchedulingProvider>::getDefaultOrNull(&v117);
  if (v117)
    (*(void (**)(uint64_t))(*(_QWORD *)v117 + 32))(v117);
  v21 = v118;
  if (v118)
  {
    v22 = (unint64_t *)&v118->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v24 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19ISchedulingProviderEEERDavE9singleton);
  if ((v24 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19ISchedulingProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19ISchedulingProviderEEERDavE9singleton);
    xmmword_1ECEAC4C8 = 0uLL;
    byte_1ECEAC4D8 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_19ISchedulingProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19ISchedulingProviderEEERDavE9singleton);
  v25 = (std::__shared_weak_count *)*((_QWORD *)&xmmword_1ECEAC4C8 + 1);
  xmmword_1ECEAC4C8 = 0uLL;
  if (v25)
  {
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  byte_1ECEAC4D8 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_19ISchedulingProviderEEERDavE9singleton);
  AMSCore::ServiceProvider<AMSCore::IHTTPProvider>::getDefaultOrNull(&v117);
  if (v117)
    (*(void (**)(uint64_t))(*(_QWORD *)v117 + 16))(v117);
  v28 = v118;
  if (v118)
  {
    v29 = (unint64_t *)&v118->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_13IHTTPProviderEEERDavE9singleton);
  if ((v31 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_13IHTTPProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_13IHTTPProviderEEERDavE9singleton);
    xmmword_1ECEABBC8 = 0uLL;
    byte_1ECEABBD8 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_13IHTTPProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_13IHTTPProviderEEERDavE9singleton);
  v32 = (std::__shared_weak_count *)*((_QWORD *)&xmmword_1ECEABBC8 + 1);
  xmmword_1ECEABBC8 = 0uLL;
  if (v32)
  {
    v33 = (unint64_t *)&v32->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  byte_1ECEABBD8 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_13IHTTPProviderEEERDavE9singleton);
  v35 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
  if ((v35 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
    qword_1ECEAC348 = 0;
    qword_1ECEAC350 = 0;
    byte_1ECEAC358 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
  v37 = qword_1ECEAC348;
  v36 = (std::__shared_weak_count *)qword_1ECEAC350;
  if (qword_1ECEAC350)
  {
    v38 = (unint64_t *)(qword_1ECEAC350 + 8);
    do
      v39 = __ldxr(v38);
    while (__stxr(v39 + 1, v38));
  }
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
  if (v37)
    (*(void (**)(uint64_t))(*(_QWORD *)v37 + 24))(v37);
  if (v36)
  {
    v40 = (unint64_t *)&v36->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
  v42 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
  if ((v42 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
    qword_1ECEAC348 = 0;
    qword_1ECEAC350 = 0;
    byte_1ECEAC358 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
  v43 = (std::__shared_weak_count *)qword_1ECEAC350;
  qword_1ECEAC348 = 0;
  qword_1ECEAC350 = 0;
  if (v43)
  {
    v44 = (unint64_t *)&v43->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
  byte_1ECEAC358 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_18IHTTPCacheProviderEEERDavE9singleton);
  v46 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
  if ((v46 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
    qword_1ECEABF88 = 0;
    qword_1ECEABF90 = 0;
    byte_1ECEABF98 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
  v47 = (std::__shared_weak_count *)qword_1ECEABF90;
  qword_1ECEABF88 = 0;
  qword_1ECEABF90 = 0;
  if (v47)
  {
    v48 = (unint64_t *)&v47->__shared_owners_;
    do
      v49 = __ldaxr(v48);
    while (__stlxr(v49 - 1, v48));
    if (!v49)
    {
      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
  byte_1ECEABF98 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IAccountProviderEEERDavE9singleton);
  v50 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_17IAnisetteProviderEEERDavE9singleton);
  if ((v50 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_17IAnisetteProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_17IAnisetteProviderEEERDavE9singleton);
    xmmword_1ECEAC288 = 0uLL;
    byte_1ECEAC298 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_17IAnisetteProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_17IAnisetteProviderEEERDavE9singleton);
  v51 = (std::__shared_weak_count *)*((_QWORD *)&xmmword_1ECEAC288 + 1);
  xmmword_1ECEAC288 = 0uLL;
  if (v51)
  {
    v52 = (unint64_t *)&v51->__shared_owners_;
    do
      v53 = __ldaxr(v52);
    while (__stlxr(v53 - 1, v52));
    if (!v53)
    {
      ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
      std::__shared_weak_count::__release_weak(v51);
    }
  }
  byte_1ECEAC298 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_17IAnisetteProviderEEERDavE9singleton);
  v54 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_13IDataProviderEEERDavE9singleton);
  if ((v54 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_13IDataProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_13IDataProviderEEERDavE9singleton);
    xmmword_1ECEABB08 = 0uLL;
    byte_1ECEABB18 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_13IDataProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_13IDataProviderEEERDavE9singleton);
  v55 = (std::__shared_weak_count *)*((_QWORD *)&xmmword_1ECEABB08 + 1);
  xmmword_1ECEABB08 = 0uLL;
  if (v55)
  {
    v56 = (unint64_t *)&v55->__shared_owners_;
    do
      v57 = __ldaxr(v56);
    while (__stlxr(v57 - 1, v56));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
      std::__shared_weak_count::__release_weak(v55);
    }
  }
  byte_1ECEABB18 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_13IDataProviderEEERDavE9singleton);
  v58 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_11IDeviceInfoEEERDavE9singleton);
  if ((v58 & 1) == 0 && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_11IDeviceInfoEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_11IDeviceInfoEEERDavE9singleton);
    xmmword_1ECEABA48 = 0uLL;
    byte_1ECEABA58 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_11IDeviceInfoEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_11IDeviceInfoEEERDavE9singleton);
  v59 = (std::__shared_weak_count *)*((_QWORD *)&xmmword_1ECEABA48 + 1);
  xmmword_1ECEABA48 = 0uLL;
  if (v59)
  {
    v60 = (unint64_t *)&v59->__shared_owners_;
    do
      v61 = __ldaxr(v60);
    while (__stlxr(v61 - 1, v60));
    if (!v61)
    {
      ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
      std::__shared_weak_count::__release_weak(v59);
    }
  }
  byte_1ECEABA58 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_11IDeviceInfoEEERDavE9singleton);
  v62 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IKeybagProviderEEERDavE9singleton);
  if ((v62 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IKeybagProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IKeybagProviderEEERDavE9singleton);
    xmmword_1ECEABE08 = 0uLL;
    byte_1ECEABE18 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IKeybagProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IKeybagProviderEEERDavE9singleton);
  v63 = (std::__shared_weak_count *)*((_QWORD *)&xmmword_1ECEABE08 + 1);
  xmmword_1ECEABE08 = 0uLL;
  if (v63)
  {
    v64 = (unint64_t *)&v63->__shared_owners_;
    do
      v65 = __ldaxr(v64);
    while (__stlxr(v65 - 1, v64));
    if (!v65)
    {
      ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
      std::__shared_weak_count::__release_weak(v63);
    }
  }
  byte_1ECEABE18 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IKeybagProviderEEERDavE9singleton);
  v66 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
  if ((v66 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
    qword_1ECEABEC8 = 0;
    qword_1ECEABED0 = 0;
    byte_1ECEABED8 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
  v67 = (std::__shared_weak_count *)qword_1ECEABED0;
  qword_1ECEABEC8 = 0;
  qword_1ECEABED0 = 0;
  if (v67)
  {
    v68 = (unint64_t *)&v67->__shared_owners_;
    do
      v69 = __ldaxr(v68);
    while (__stlxr(v69 - 1, v68));
    if (!v69)
    {
      ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
      std::__shared_weak_count::__release_weak(v67);
    }
  }
  byte_1ECEABED8 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_15IMescalProviderEEERDavE9singleton);
  v70 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
  if ((v70 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
    xmmword_1ECEAC048 = 0uLL;
    byte_1ECEAC058 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
  v71 = xmmword_1ECEAC048;
  if (*((_QWORD *)&xmmword_1ECEAC048 + 1))
  {
    v72 = (unint64_t *)(*((_QWORD *)&xmmword_1ECEAC048 + 1) + 8);
    do
      v73 = __ldxr(v72);
    while (__stxr(v73 + 1, v72));
  }
  std::__shared_mutex_base::unlock_shared(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
  if ((_QWORD)v71)
    (*(void (**)(_QWORD))(*(_QWORD *)v71 + 56))(v71);
  if (*((_QWORD *)&v71 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v71 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v71 + 1) + 16))(*((_QWORD *)&v71 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v71 + 1));
    }
  }
  v76 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
  if ((v76 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
    xmmword_1ECEAC048 = 0uLL;
    byte_1ECEAC058 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
  v77 = (std::__shared_weak_count *)*((_QWORD *)&xmmword_1ECEAC048 + 1);
  xmmword_1ECEAC048 = 0uLL;
  if (v77)
  {
    v78 = (unint64_t *)&v77->__shared_owners_;
    do
      v79 = __ldaxr(v78);
    while (__stlxr(v79 - 1, v78));
    if (!v79)
    {
      ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
      std::__shared_weak_count::__release_weak(v77);
    }
  }
  byte_1ECEAC058 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IMetricsProviderEEERDavE9singleton);
  v80 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_25MetricsIdentifierProviderEEERDavE9singleton);
  if ((v80 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_25MetricsIdentifierProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_25MetricsIdentifierProviderEEERDavE9singleton);
    xmmword_1ECEAC648 = 0uLL;
    byte_1ECEAC658 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_25MetricsIdentifierProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_25MetricsIdentifierProviderEEERDavE9singleton);
  v81 = (std::__shared_weak_count *)*((_QWORD *)&xmmword_1ECEAC648 + 1);
  xmmword_1ECEAC648 = 0uLL;
  if (v81)
  {
    v82 = (unint64_t *)&v81->__shared_owners_;
    do
      v83 = __ldaxr(v82);
    while (__stlxr(v83 - 1, v82));
    if (!v83)
    {
      ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
      std::__shared_weak_count::__release_weak(v81);
    }
  }
  byte_1ECEAC658 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_25MetricsIdentifierProviderEEERDavE9singleton);
  v84 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14StructuredData23IStructuredDataProviderEEERDavE9singleton);
  if ((v84 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14StructuredData23IStructuredDataProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14StructuredData23IStructuredDataProviderEEERDavE9singleton);
    xmmword_1ECEABD48 = 0uLL;
    byte_1ECEABD58 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14StructuredData23IStructuredDataProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14StructuredData23IStructuredDataProviderEEERDavE9singleton);
  v85 = (std::__shared_weak_count *)*((_QWORD *)&xmmword_1ECEABD48 + 1);
  xmmword_1ECEABD48 = 0uLL;
  if (v85)
  {
    v86 = (unint64_t *)&v85->__shared_owners_;
    do
      v87 = __ldaxr(v86);
    while (__stlxr(v87 - 1, v86));
    if (!v87)
    {
      ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
      std::__shared_weak_count::__release_weak(v85);
    }
  }
  byte_1ECEABD58 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14StructuredData23IStructuredDataProviderEEERDavE9singleton);
  v88 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_24IMetricsSamplingProviderEEERDavE9singleton);
  if ((v88 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_24IMetricsSamplingProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_24IMetricsSamplingProviderEEERDavE9singleton);
    xmmword_1ECEAC588 = 0uLL;
    byte_1ECEAC598 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_24IMetricsSamplingProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_24IMetricsSamplingProviderEEERDavE9singleton);
  v89 = (std::__shared_weak_count *)*((_QWORD *)&xmmword_1ECEAC588 + 1);
  xmmword_1ECEAC588 = 0uLL;
  if (v89)
  {
    v90 = (unint64_t *)&v89->__shared_owners_;
    do
      v91 = __ldaxr(v90);
    while (__stlxr(v91 - 1, v90));
    if (!v91)
    {
      ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
      std::__shared_weak_count::__release_weak(v89);
    }
  }
  byte_1ECEAC598 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_24IMetricsSamplingProviderEEERDavE9singleton);
  v92 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IOpenURLProviderEEERDavE9singleton);
  if ((v92 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IOpenURLProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IOpenURLProviderEEERDavE9singleton);
    xmmword_1ECEAC108 = 0uLL;
    byte_1ECEAC118 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IOpenURLProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IOpenURLProviderEEERDavE9singleton);
  v93 = (std::__shared_weak_count *)*((_QWORD *)&xmmword_1ECEAC108 + 1);
  xmmword_1ECEAC108 = 0uLL;
  if (v93)
  {
    v94 = (unint64_t *)&v93->__shared_owners_;
    do
      v95 = __ldaxr(v94);
    while (__stlxr(v95 - 1, v94));
    if (!v95)
    {
      ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
      std::__shared_weak_count::__release_weak(v93);
    }
  }
  byte_1ECEAC118 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IOpenURLProviderEEERDavE9singleton);
  v96 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IPrivacyProviderEEERDavE9singleton);
  if ((v96 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IPrivacyProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IPrivacyProviderEEERDavE9singleton);
    xmmword_1ECEAC1C8 = 0uLL;
    byte_1ECEAC1D8 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_16IPrivacyProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IPrivacyProviderEEERDavE9singleton);
  v97 = (std::__shared_weak_count *)*((_QWORD *)&xmmword_1ECEAC1C8 + 1);
  xmmword_1ECEAC1C8 = 0uLL;
  if (v97)
  {
    v98 = (unint64_t *)&v97->__shared_owners_;
    do
      v99 = __ldaxr(v98);
    while (__stlxr(v99 - 1, v98));
    if (!v99)
    {
      ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
      std::__shared_weak_count::__release_weak(v97);
    }
  }
  byte_1ECEAC1D8 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_16IPrivacyProviderEEERDavE9singleton);
  v100 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
  if ((v100 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
    qword_1ECEAB808 = 0;
    qword_1ECEAB810 = 0;
    byte_1ECEAB818 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
  v101 = (std::__shared_weak_count *)qword_1ECEAB810;
  qword_1ECEAB808 = 0;
  qword_1ECEAB810 = 0;
  if (v101)
  {
    v102 = (unint64_t *)&v101->__shared_owners_;
    do
      v103 = __ldaxr(v102);
    while (__stlxr(v103 - 1, v102));
    if (!v103)
    {
      ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
      std::__shared_weak_count::__release_weak(v101);
    }
  }
  byte_1ECEAB818 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_28ICancellationContextProviderEEERDavE9singleton);
  if ((v104 & 1) == 0
  {
    qword_1ECEAC870 = 0;
    qword_1ECEAC868 = 0;
  }
  std::__tree<std::__value_type<std::tuple<std::string,std::string,std::string,std::string,std::string>,std::shared_ptr<AMSCore::BagDataSource>>,std::__map_value_compare<std::tuple<std::string,std::string,std::string,std::string,std::string>,std::__value_type<std::tuple<std::string,std::string,std::string,std::string,std::string>,std::shared_ptr<AMSCore::BagDataSource>>,std::less<std::tuple<std::string,std::string,std::string,std::string,std::string>>,true>,std::allocator<std::__value_type<std::tuple<std::string,std::string,std::string,std::string,std::string>,std::shared_ptr<AMSCore::BagDataSource>>>>::destroy(qword_1ECEAC868);
  qword_1ECEAC870 = 0;
  qword_1ECEAC868 = 0;
  v105 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
  if ((v105 & 1) == 0
    && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
    qword_1ECEABC88 = 0;
    qword_1ECEABC90 = 0;
    byte_1ECEABC98 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
  v106 = (std::__shared_weak_count *)qword_1ECEABC90;
  qword_1ECEABC88 = 0;
  qword_1ECEABC90 = 0;
  if (v106)
  {
    v107 = (unint64_t *)&v106->__shared_owners_;
    do
      v108 = __ldaxr(v107);
    while (__stlxr(v108 - 1, v107));
    if (!v108)
    {
      ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
      std::__shared_weak_count::__release_weak(v106);
    }
  }
  byte_1ECEABC98 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_14RandomProviderEEERDavE9singleton);
  v109 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
  if ((v109 & 1) == 0 && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
    qword_1ECEAC708 = 0;
    qword_1ECEAC710 = 0;
    byte_1ECEAC718 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
  v110 = (std::__shared_weak_count *)qword_1ECEAC710;
  qword_1ECEAC708 = 0;
  qword_1ECEAC710 = 0;
  if (v110)
  {
    v111 = (unint64_t *)&v110->__shared_owners_;
    do
      v112 = __ldaxr(v111);
    while (__stlxr(v112 - 1, v111));
    if (!v112)
    {
      ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
      std::__shared_weak_count::__release_weak(v110);
    }
  }
  byte_1ECEAC718 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_5Trace6TracerEEERDavE9singleton);
  v113 = atomic_load((unsigned __int8 *)&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
  if ((v113 & 1) == 0 && __cxa_guard_acquire(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton))
  {
    std::__shared_mutex_base::__shared_mutex_base(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
    qword_1ECEAC7C8 = 0;
    qword_1ECEAC7D0 = 0;
    byte_1ECEAC7D8 = 0;
    __cxa_guard_release(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
  }
  std::__shared_mutex_base::lock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
  v114 = (std::__shared_weak_count *)qword_1ECEAC7D0;
  qword_1ECEAC7C8 = 0;
  qword_1ECEAC7D0 = 0;
  if (v114)
  {
    v115 = (unint64_t *)&v114->__shared_owners_;
    do
      v116 = __ldaxr(v115);
    while (__stlxr(v116 - 1, v115));
    if (!v116)
    {
      ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
      std::__shared_weak_count::__release_weak(v114);
    }
  }
  byte_1ECEAC7D8 = 0;
  std::__shared_mutex_base::unlock(&_ZZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
}

void sub_18CBD2CE4(void *a1)
{
  __cxa_guard_abort(&_ZGVZN7AMSCore12_GLOBAL__N_18getStateINS_6LoggerEEERDavE9singleton);
  __clang_call_terminate(a1);
}

void std::__shared_ptr_pointer<AMSCore::RandomProvider  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D789BDCLL);
}

uint64_t std::__shared_ptr_pointer<AMSCore::RandomProvider  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t std::__shared_ptr_pointer<AMSCore::RandomProvider  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN7AMSCore14RandomProviderEEE"
    || ((v3 & (unint64_t)"NSt3__114default_deleteIN7AMSCore14RandomProviderEEE" & 0x8000000000000000) != 0) != __OFSUB__(v3, "NSt3__114default_deleteIN7AMSCore14RandomProviderEEE")
    && !strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN7AMSCore14RandomProviderEEE" & 0x7FFFFFFFFFFFFFFFLL)))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void AMSCore::RandomProvider::~RandomProvider(AMSCore::RandomProvider *this)
{
  *(_QWORD *)this = &off_1E2520820;
  std::mutex::~mutex((std::mutex *)((char *)this + 8));
}

{
  *(_QWORD *)this = &off_1E2520820;
  std::mutex::~mutex((std::mutex *)((char *)this + 8));
  JUMPOUT(0x18D789BDCLL);
}

void AMSCore::operator==(uint64_t a1, uint64_t a2)
{
  int v3;
  std::string::size_type size;
  std::string::size_type v5;
  int v6;
  std::string *p_p;
  uint64_t v8;
  std::string *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  BOOL v15;
  std::string __p;
  char v17;
  std::string v18;
  unsigned __int8 v19;

  v18.__r_.__value_.__s.__data_[0] = 0;
  v19 = 0;
  if (!*(_BYTE *)(a1 + 24))
    return;
  if (*(char *)(a1 + 23) < 0)
    std::string::__init_copy_ctor_external(&v18, *(const std::string::value_type **)a1, *(_QWORD *)(a1 + 8));
  else
    v18 = *(std::string *)a1;
  v19 = 1;
  __p.__r_.__value_.__s.__data_[0] = 0;
  v17 = 0;
  if (!*(_BYTE *)(a2 + 24))
  {
    v3 = 1;
    goto LABEL_33;
  }
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
    v3 = v19;
    v17 = 1;
    if (!v19)
    {
      __break(1u);
      return;
    }
  }
  else
  {
    __p = *(std::string *)a2;
    v3 = 1;
    v17 = 1;
  }
  if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v18.__r_.__value_.__r.__words[2]);
  else
    size = v18.__r_.__value_.__l.__size_;
  v5 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  v6 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v5 = __p.__r_.__value_.__l.__size_;
  if (size != v5)
  {
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_33;
    goto LABEL_32;
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((*((_BYTE *)&v18.__r_.__value_.__s + 23) & 0x80) != 0)
  {
    memcmp(v18.__r_.__value_.__l.__data_, p_p, v18.__r_.__value_.__l.__size_);
    goto LABEL_31;
  }
  if (*((_BYTE *)&v18.__r_.__value_.__s + 23))
  {
    v8 = HIBYTE(v18.__r_.__value_.__r.__words[2]) - 1;
    v9 = &v18;
    do
    {
      v11 = v9->__r_.__value_.__s.__data_[0];
      v9 = (std::string *)((char *)v9 + 1);
      v10 = v11;
      v13 = p_p->__r_.__value_.__s.__data_[0];
      p_p = (std::string *)((char *)p_p + 1);
      v12 = v13;
      v15 = v8-- != 0;
    }
    while (v10 == v12 && v15);
LABEL_31:
    if ((v6 & 0x80000000) == 0)
      goto LABEL_33;
    goto LABEL_32;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
LABEL_32:
    operator delete(__p.__r_.__value_.__l.__data_);
    v3 = v19;
  }
LABEL_33:
  if (v3)
  {
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v18.__r_.__value_.__l.__data_);
  }
}

{
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 64))(a1);
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 64))(a2);
  v6 = v4[23];
  if ((v6 & 0x80u) == 0)
    v7 = v4[23];
  else
    v7 = *((_QWORD *)v4 + 1);
  v8 = *(unsigned __int8 *)(v5 + 23);
  v9 = (char)v8;
  if ((v8 & 0x80u) != 0)
    v8 = *(_QWORD *)(v5 + 8);
  if (v7 == v8)
  {
    if (v9 >= 0)
      v10 = (unsigned __int8 *)v5;
    else
      v10 = *(unsigned __int8 **)v5;
    if ((v6 & 0x80) != 0)
    {
      if (!memcmp(*(const void **)v4, v10, *((_QWORD *)v4 + 1)))
        return;
    }
    else
    {
      if (!v4[23])
        return;
      while (*v4 == *v10)
      {
        ++v4;
        ++v10;
        if (!--v6)
          return;
      }
    }
  }
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 72))(a1);
  v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 72))(a2);
  AMSCore::operator==(v11, v12);
}

void sub_18CBD31B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 && a14 < 0)
    operator delete(__p);
  if (a22)
  {
    if (a21 < 0)
      operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *AMSCore::operator<<(_QWORD *a1, uint64_t a2)
{
  char v4;
  const char *v5;
  uint64_t v6;
  int v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned __int8 v11;
  std::string *p_p;
  std::string::size_type size;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  std::string __p;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  __p.__r_.__value_.__s.__data_[0] = 0;
  v21 = 0;
  v22 = -1;
  v23 = 7824750;
  v24 = 3;
  AMSCore::operator==(a2, (uint64_t)&__p);
  if ((v4 & 1) != 0)
  {
    v5 = "{AccountIdentity.new}";
    v6 = 21;
    return std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)v5, v6);
  }
  __p.__r_.__value_.__s.__data_[0] = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0x6C61636F6CLL;
  v24 = 5;
  AMSCore::operator==(a2, (uint64_t)&__p);
  if (v7)
  {
    v5 = "{AccountIdentity.local}";
    v6 = 23;
    return std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)v5, v6);
  }
  __p.__r_.__value_.__s.__data_[0] = 123;
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&__p, 1);
  v8 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"\"altDSID: \"", 11);
  v9 = v8;
  if (!*(_BYTE *)(a2 + 24))
  {
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v8, (uint64_t)"nullopt", 7);
    goto LABEL_27;
  }
  v10 = *(_QWORD *)(*v8 - 24);
  if ((v11 & 1) == 0)
    goto LABEL_30;
  {
    if (*(_BYTE *)(a2 + 24))
    {
      AMSCore::StringUtils::toHashedString<std::string>(&__p, a2);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        size = __p.__r_.__value_.__l.__size_;
      std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v9, (uint64_t)p_p, size);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      goto LABEL_27;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    {
    }
  }
  if (!*(_BYTE *)(a2 + 24))
    goto LABEL_29;
  v14 = *(char *)(a2 + 23);
  if (v14 >= 0)
    v15 = a2;
  else
    v15 = *(_QWORD *)a2;
  if (v14 >= 0)
    v16 = *(unsigned __int8 *)(a2 + 23);
  else
    v16 = *(_QWORD *)(a2 + 8);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v9, v15, v16);
LABEL_27:
  v17 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"\", \"DSID\": \"", 12);
  __p.__r_.__value_.__r.__words[0] = a2 + 32;
  AMSCore::Log::operator<<(v17, (uint64_t **)&__p);
  v18 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"\", \"username\": \"", 16);
  __p.__r_.__value_.__r.__words[0] = a2 + 40;
  AMSCore::Log::operator<<(v18, (uint64_t *)&__p);
  __p.__r_.__value_.__s.__data_[0] = 34;
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&__p, 1);
  __p.__r_.__value_.__s.__data_[0] = 125;
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&__p, 1);
  return a1;
}

{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v3 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"{", 1);
  v4 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v3, (uint64_t)"\"identifier\": ", 14);
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 64))(a2);
  v6 = *(char *)(v5 + 23);
  if (v6 >= 0)
    v7 = v5;
  else
    v7 = *(_QWORD *)v5;
  if (v6 >= 0)
    v8 = *(unsigned __int8 *)(v5 + 23);
  else
    v8 = *(_QWORD *)(v5 + 8);
  v9 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v4, v7, v8);
  v10 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v9, (uint64_t)", \"identity\": ", 14);
  v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 72))(a2);
  v12 = AMSCore::operator<<(v10, v11);
  return std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v12, (uint64_t)"}", 1);
}

{
  uint64_t v4;
  uint64_t *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  size_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  if (*(_QWORD *)(a2 + 8))
  {
    v4 = 0;
    v5 = *(uint64_t **)a2;
    v6 = "";
    do
    {
      v10 = strlen(v6);
      v11 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)v6, v10);
      v12 = strlen(*(const char **)(a2 + 32));
      std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v11, *(_QWORD *)(a2 + 32), v12);
      if (*(_BYTE *)(a2 + 48))
      {
        v13 = (_QWORD *)std::ostream::operator<<();
        std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v13, (uint64_t)"_", 1);
      }
      v7 = *v5;
      v8 = v5[1];
      v5 += 3;
      std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, v7, v8);
      v9 = strlen(*(const char **)(a2 + 40));
      std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, *(_QWORD *)(a2 + 40), v9);
      v6 = *(const char **)(a2 + 24);
      ++v4;
    }
    while (v5 != (uint64_t *)(*(_QWORD *)a2 + 24 * *(_QWORD *)(a2 + 8)));
  }
  return a1;
}

{
  _QWORD *v4;
  _QWORD *v5;
  char v7;
  char v8;

  v7 = 123;
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&v7, 1);
  v4 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"\"url\": ", 7);
  v5 = AMSCore::operator<<(v4, a2);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v5, (uint64_t)", ", 2);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"\"inferDestination\": ", 20);
  std::ostream::operator<<();
  v8 = 125;
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&v8, 1);
  return a1;
}

{
  _QWORD *v4;
  const char *v5;
  size_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v15;
  char **v16;
  char v17;

  v4 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"{\"category\":\"", 13);
  v5 = (const char *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 16))(*(_QWORD *)(a2 + 24));
  v6 = strlen(v5);
  v7 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v4, (uint64_t)v5, v6);
  LOBYTE(v16) = 34;
  v8 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v7, (uint64_t)&v16, 1);
  LOBYTE(v16) = 44;
  v9 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v8, (uint64_t)&v16, 1);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v9, (uint64_t)"\"Code\":", 7);
  std::ostream::operator<<();
  if (*(_QWORD *)(a2 + 48))
  {
    v10 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)", \"UserInfo\": ", 14);
  }
  v11 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)", \"message\": \"", 14);
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
  v16 = (char **)&v15;
  v12 = AMSCore::Log::operator<<(v11, &v16);
  v17 = 34;
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v12, (uint64_t)&v17, 1);
  if (*(_QWORD *)(a2 + 56))
  {
    v13 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)", \"cause\": ", 11);
    AMSCore::operator<<(v13, *(_QWORD *)(a2 + 56));
  }
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"}", 1);
  return a1;
}

{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  void **v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  void *__p[2];
  unsigned __int8 v30;

  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"{", 1);
  v4 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"\"name\": \"", 9);
  v5 = *(char *)(a2 + 71);
  if (v5 >= 0)
    v6 = a2 + 48;
  else
    v6 = *(_QWORD *)(a2 + 48);
  if (v5 >= 0)
    v7 = *(unsigned __int8 *)(a2 + 71);
  else
    v7 = *(_QWORD *)(a2 + 56);
  v8 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v4, v6, v7);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v8, (uint64_t)"\",", 2);
  v9 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"\"value\": \"", 10);
  __p[0] = (void *)(a2 + 96);
  v10 = AMSCore::Log::operator<<(v9, (uint64_t *)__p);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v10, (uint64_t)"\",", 2);
  v11 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"\"domain\": \"", 11);
  v12 = *(char *)(a2 + 39);
  if (v12 >= 0)
    v13 = a2 + 16;
  else
    v13 = *(_QWORD *)(a2 + 16);
  if (v12 >= 0)
    v14 = *(unsigned __int8 *)(a2 + 39);
  else
    v14 = *(_QWORD *)(a2 + 24);
  v15 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v11, v13, v14);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v15, (uint64_t)"\",", 2);
  v16 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"\"path\": \"", 9);
  v17 = *(char *)(a2 + 95);
  if (v17 >= 0)
    v18 = a2 + 72;
  else
    v18 = *(_QWORD *)(a2 + 72);
  if (v17 >= 0)
    v19 = *(unsigned __int8 *)(a2 + 95);
  else
    v19 = *(_QWORD *)(a2 + 80);
  v20 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v16, v18, v19);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v20, (uint64_t)"\",", 2);
  if (*(_BYTE *)(a2 + 8))
  {
    v21 = *(_QWORD *)a2;
    v22 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"\"expiration\": \"", 15);
    AMSCore::stringify_time_s((uint64_t)__p, v21, 0);
    if ((v30 & 0x80u) == 0)
      v23 = __p;
    else
      v23 = (void **)__p[0];
    if ((v30 & 0x80u) == 0)
      v24 = v30;
    else
      v24 = (uint64_t)__p[1];
    v25 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v22, (uint64_t)v23, v24);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v25, (uint64_t)"\",", 2);
    if ((char)v30 < 0)
      operator delete(__p[0]);
  }
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"\"isSecureOnly\": ", 16);
  v26 = (_QWORD *)std::ostream::operator<<();
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v26, (uint64_t)",", 1);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"\"isSessionOnly\": ", 17);
  v27 = (_QWORD *)std::ostream::operator<<();
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v27, (uint64_t)",", 1);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)"}", 1);
  return a1;
}

{
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _OWORD *v19;
  std::string *v20;
  std::string::size_type v21;
  void *v22;
  unsigned __int8 v23;
  std::string::const_iterator v24;
  std::string *v25;
  int v26;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v29;
  std::string v31;
  std::string __p;

  v4 = *(_QWORD *)(*a1 - 24);
  if ((v5 & 1) == 0
  {
  }
  __p.__r_.__value_.__s.__data_[0] = 91;
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&__p, 1);
  v7 = *(uint64_t **)(a2 + 16);
  if (v7)
  {
    v8 = 0;
    while (1)
    {
      if (v8)
      {
        __p.__r_.__value_.__s.__data_[0] = 44;
        std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&__p, 1);
      }
      __p.__r_.__value_.__s.__data_[0] = 123;
      v9 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&__p, 1);
      v10 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v9, (uint64_t)"\"name\":", 7);
      __p.__r_.__value_.__s.__data_[0] = 34;
      v11 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v10, (uint64_t)&__p, 1);
      v12 = *((char *)v7 + 39);
      v13 = v12 >= 0 ? (uint64_t)(v7 + 2) : v7[2];
      v14 = v12 >= 0 ? *((unsigned __int8 *)v7 + 39) : v7[3];
      v15 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v11, v13, v14);
      __p.__r_.__value_.__s.__data_[0] = 34;
      v16 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v15, (uint64_t)&__p, 1);
      __p.__r_.__value_.__s.__data_[0] = 44;
      v17 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v16, (uint64_t)&__p, 1);
      v18 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v17, (uint64_t)"\"value\":", 8);
      __p.__r_.__value_.__s.__data_[0] = 34;
      std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v18, (uint64_t)&__p, 1);
      v19 = v7 + 5;
      if (v6 == 1)
        break;
      if (*((char *)v7 + 63) < 0)
      {
        std::string::__init_copy_ctor_external(&v31, (const std::string::value_type *)v7[5], v7[6]);
      }
      else
      {
        *(_OWORD *)&v31.__r_.__value_.__l.__data_ = *v19;
        v31.__r_.__value_.__r.__words[2] = v7[7];
      }
      v23 = HIBYTE(v31.__r_.__value_.__r.__words[2]);
      if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
      {
        if (v31.__r_.__value_.__l.__size_)
        {
          for (v24.__i_ = (std::__wrap_iter<const char *>::iterator_type)v31.__r_.__value_.__r.__words[0]; ; ++v24.__i_)
          {
LABEL_31:
            if ((v23 & 0x80) != 0)
            {
              v25 = (std::string *)v31.__r_.__value_.__r.__words[0];
              if (v24.__i_ == (std::__wrap_iter<const char *>::iterator_type)(v31.__r_.__value_.__r.__words[0]
                                                                             + v31.__r_.__value_.__l.__size_))
                break;
            }
            else
            {
              v25 = &v31;
              if (v24.__i_ == (char *)&v31 + v23)
                break;
            }
            if ((std::string *)v24.__i_ == v25 || *((_BYTE *)v24.__i_ - 1) != 92)
            {
              v26 = *v24.__i_;
              if (v26 == 92 || v26 == 34)
              {
                v24.__i_ = std::string::insert(&v31, v24, 92).__i_ + 1;
                v23 = HIBYTE(v31.__r_.__value_.__r.__words[2]);
              }
            }
          }
        }
      }
      else if (*((_BYTE *)&v31.__r_.__value_.__s + 23))
      {
        v24.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v31;
        goto LABEL_31;
      }
      __p = v31;
      memset(&v31, 0, sizeof(v31));
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        size = __p.__r_.__value_.__l.__size_;
      std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)p_p, size);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
        {
LABEL_50:
          v22 = (void *)v31.__r_.__value_.__r.__words[0];
LABEL_51:
          operator delete(v22);
        }
      }
      else if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
      {
        goto LABEL_50;
      }
LABEL_52:
      __p.__r_.__value_.__s.__data_[0] = 34;
      v29 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&__p, 1);
      __p.__r_.__value_.__s.__data_[0] = 125;
      std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v29, (uint64_t)&__p, 1);
      ++v8;
      v7 = (uint64_t *)*v7;
      if (!v7)
        goto LABEL_53;
    }
    AMSCore::StringUtils::toHashedString<std::string>(&__p, (uint64_t)v19);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v20 = &__p;
    else
      v20 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v21 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v21 = __p.__r_.__value_.__l.__size_;
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)v20, v21);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_52;
    v22 = (void *)__p.__r_.__value_.__r.__words[0];
    goto LABEL_51;
  }
LABEL_53:
  __p.__r_.__value_.__s.__data_[0] = 93;
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&__p, 1);
  return a1;
}

{
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v6 = *(unsigned __int8 *)(a2 + 151);
  v7 = *(_QWORD *)(a2 + 136);
  if ((v6 & 0x80u) == 0)
    v8 = a2 + 128;
  else
    v8 = *(_QWORD *)(a2 + 128);
  if ((v6 & 0x80u) == 0)
    v9 = v6;
  else
    v9 = v7;
  v10 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, v8, v9);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v10, (uint64_t)"://", 3);
  if (*(_BYTE *)(a2 + 56))
  {
    v11 = *(char *)(a2 + 55);
    if (v11 >= 0)
      v12 = a2 + 32;
    else
      v12 = *(_QWORD *)(a2 + 32);
    if (v11 >= 0)
      v13 = *(unsigned __int8 *)(a2 + 55);
    else
      v13 = *(_QWORD *)(a2 + 40);
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, v12, v13);
  }
  if (*(_BYTE *)(a2 + 98))
  {
    v27 = 58;
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&v27, 1);
    if (!*(_BYTE *)(a2 + 98))
      goto LABEL_50;
    std::ostream::operator<<();
  }
  v2 = *(unsigned __int8 **)(*a1 - 24);
  v3 = (unsigned __int8 *)&unk_1EE059000;
  if ((v14 & 1) == 0)
    goto LABEL_51;
  while (*std::ios_base::iword((std::ios_base *)&v2[(_QWORD)a1], *((_DWORD *)v3 + 436)) != 1)
  {
    if (*(_BYTE *)(a2 + 88))
    {
      v15 = *(char *)(a2 + 87);
      if (v15 >= 0)
        v16 = a2 + 64;
      else
        v16 = *(_QWORD *)(a2 + 64);
      if (v15 >= 0)
        v17 = *(unsigned __int8 *)(a2 + 87);
      else
        v17 = *(_QWORD *)(a2 + 72);
      std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, v16, v17);
    }
    if (*(_QWORD *)(a2 + 120))
    {
      v28 = 63;
      std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&v28, 1);
      v2 = (unsigned __int8 *)(a2 + 104);
      v3 = *(unsigned __int8 **)(a2 + 112);
      if (v3 != (unsigned __int8 *)(a2 + 104))
      {
        v18 = 1;
        do
        {
          if ((char)v3[39] < 0)
          {
            v19 = *((_QWORD *)v3 + 2);
            v20 = *((_QWORD *)v3 + 3);
          }
          else
          {
            v19 = (uint64_t)(v3 + 16);
            v20 = v3[39];
          }
          AMSCore::URL::encode(a1, v19, v20);
          v29 = 61;
          std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&v29, 1);
          if ((char)v3[63] < 0)
          {
            v21 = *((_QWORD *)v3 + 5);
            v22 = *((_QWORD *)v3 + 6);
          }
          else
          {
            v21 = (uint64_t)(v3 + 40);
            v22 = v3[63];
          }
          AMSCore::URL::encode(a1, v21, v22);
          if (v18 != *(_QWORD *)(a2 + 120))
          {
            v30 = 38;
            std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&v30, 1);
          }
          v3 = (unsigned __int8 *)*((_QWORD *)v3 + 1);
          ++v18;
        }
        while (v3 != v2);
      }
    }
    if (!*(_BYTE *)(a2 + 24))
      break;
    v31 = 35;
    std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)&v31, 1);
    if (*(_BYTE *)(a2 + 24))
    {
      v23 = *(char *)(a2 + 23);
      if (v23 >= 0)
        v24 = a2;
      else
        v24 = *(_QWORD *)a2;
      if (v23 >= 0)
        v25 = *(unsigned __int8 *)(a2 + 23);
      else
        v25 = *(_QWORD *)(a2 + 8);
      AMSCore::URL::encode(a1, v24, v25);
      return a1;
    }
LABEL_50:
    __break(1u);
LABEL_51:
    {
      *((_DWORD *)v3 + 436) = std::ios_base::xalloc();
    }
  }
  return a1;
}

uint64_t AMSCore::Log::operator<<(_QWORD *a1, uint64_t **a2)
{
  uint64_t *v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  std::ios_base *v11;
  uint64_t v12;
  _QWORD *v13;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v16;
  std::string *v17;
  std::string::size_type v18;
  _QWORD *v19;
  std::string __p;
  uint64_t v22;
  _QWORD v23[8];
  void *v24[2];
  __int128 v25;
  int v26;
  uint64_t v27[19];
  uint64_t v28;
  char v29;

  v3 = *a2;
  v4 = *(_QWORD *)(*a1 - 24);
  if ((v5 & 1) == 0
  {
  }
  v28 = *v3;
  v6 = MEMORY[0x1E0DE4FE0];
  v7 = MEMORY[0x1E0DE4FE0] + 64;
  v8 = (uint64_t *)MEMORY[0x1E0DE4F60];
  v9 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
  v10 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
  v27[0] = MEMORY[0x1E0DE4FE0] + 64;
  v22 = v9;
  *(_QWORD *)((char *)&v23[-1] + *(_QWORD *)(v9 - 24)) = v10;
  v11 = (std::ios_base *)((char *)&v23[-1] + *(_QWORD *)(v22 - 24));
  std::ios_base::init(v11, v23);
  v11[1].__vftable = 0;
  v11[1].__fmtflags_ = -1;
  v22 = v6 + 24;
  v27[0] = v7;
  std::streambuf::basic_streambuf();
  v12 = MEMORY[0x1E0DE4FB8];
  v23[0] = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)v24 = 0u;
  v25 = 0u;
  v26 = 16;
  v13 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v22, (uint64_t)"<H:", 3);
  AMSCore::StringUtils::toHexString(&__p, (uint64_t)&v28, 8);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  v16 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v13, (uint64_t)p_p, size);
  v29 = 62;
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v16, (uint64_t)&v29, 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  std::stringbuf::str[abi:fe180100]((uint64_t)v23, &__p);
  v22 = *v8;
  *(_QWORD *)((char *)&v23[-1] + *(_QWORD *)(v22 - 24)) = v8[3];
  v23[0] = v12 + 16;
  if (SBYTE7(v25) < 0)
    operator delete(v24[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x18D789B58](v27);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v17 = &__p;
  else
    v17 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v18 = __p.__r_.__value_.__l.__size_;
  v19 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)v17, v18);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return (uint64_t)v19;
}

void sub_18CBD36B0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  std::ostringstream::~ostringstream((uint64_t)&a15);
  __clang_call_terminate(a1);
}

_QWORD *AMSCore::Log::operator<<(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  std::string __p;

  v3 = *a2;
  v4 = *(_QWORD *)(*a1 - 24);
  if ((v5 & 1) == 0
  {
  }
  {
    AMSCore::StringUtils::toHashedString<std::string>(&__p, v3);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    v8 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    v9 = *(char *)(v3 + 23);
    if (v9 >= 0)
      v10 = v3;
    else
      v10 = *(_QWORD *)v3;
    if (v9 >= 0)
      v11 = *(unsigned __int8 *)(v3 + 23);
    else
      v11 = *(_QWORD *)(v3 + 8);
    return std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(a1, v10, v11);
  }
  return v8;
}

uint64_t AMSCore::StringUtils::toHashedString<std::string>(std::string *a1, uint64_t a2)
{
  int v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  std::ios_base *v11;
  uint64_t v12;
  _QWORD *v13;
  std::string *p_p;
  std::string::size_type size;
  _QWORD *v16;
  std::string __p;
  uint64_t v19;
  _QWORD v20[8];
  void *v21[2];
  __int128 v22;
  int v23;
  uint64_t v24[19];
  unint64_t v25;
  char v26;

  v3 = *(char *)(a2 + 23);
  if (v3 >= 0)
    v4 = (uint64_t *)a2;
  else
    v4 = *(uint64_t **)a2;
  if (v3 >= 0)
    v5 = *(unsigned __int8 *)(a2 + 23);
  else
    v5 = *(_QWORD *)(a2 + 8);
  v25 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:fe180100](v4, v5);
  v6 = MEMORY[0x1E0DE4FE0];
  v7 = MEMORY[0x1E0DE4FE0] + 64;
  v8 = (uint64_t *)MEMORY[0x1E0DE4F60];
  v9 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 8);
  v10 = *(_QWORD *)(MEMORY[0x1E0DE4F60] + 16);
  v24[0] = MEMORY[0x1E0DE4FE0] + 64;
  v19 = v9;
  *(_QWORD *)((char *)&v20[-1] + *(_QWORD *)(v9 - 24)) = v10;
  v11 = (std::ios_base *)((char *)&v20[-1] + *(_QWORD *)(v19 - 24));
  std::ios_base::init(v11, v20);
  v11[1].__vftable = 0;
  v11[1].__fmtflags_ = -1;
  v19 = v6 + 24;
  v24[0] = v7;
  std::streambuf::basic_streambuf();
  v12 = MEMORY[0x1E0DE4FB8];
  v20[0] = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)v21 = 0u;
  v22 = 0u;
  v23 = 16;
  v13 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v19, (uint64_t)"<H:", 3);
  AMSCore::StringUtils::toHexString(&__p, (uint64_t)&v25, 8);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  v16 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v13, (uint64_t)p_p, size);
  v26 = 62;
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(v16, (uint64_t)&v26, 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  std::stringbuf::str[abi:fe180100]((uint64_t)v20, a1);
  v19 = *v8;
  *(_QWORD *)((char *)&v20[-1] + *(_QWORD *)(v19 - 24)) = v8[3];
  v20[0] = v12 + 16;
  if (SBYTE7(v22) < 0)
    operator delete(v21[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18D789B58](v24);
}

void sub_18CBD39C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  std::ostringstream::~ostringstream((uint64_t)&a15);
  _Unwind_Resume(a1);
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:fe180100](uint64_t *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;

  if (a2 > 0x20)
  {
    if (a2 <= 0x40)
    {
      v5 = *(uint64_t *)((char *)a1 + a2 - 16);
      v6 = *a1 - 0x3C5A37A36834CED9 * (v5 + a2);
      v8 = a1[2];
      v7 = a1[3];
      v9 = __ROR8__(v6 + v7, 52);
      v10 = v6 + a1[1];
      v11 = __ROR8__(v10, 7);
      v12 = v10 + v8;
      v13 = *(uint64_t *)((char *)a1 + a2 - 32) + v8;
      v14 = *(uint64_t *)((char *)a1 + a2 - 8) + v7;
      v15 = __ROR8__(v14 + v13, 52);
      v16 = v11 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v5 + a2), 37) + v9;
      v17 = __ROR8__(v13, 37);
      v18 = *(uint64_t *)((char *)a1 + a2 - 24) + v13;
      v19 = __ROR8__(v18, 7);
      v20 = v16 + __ROR8__(v12, 31);
      v21 = v18 + v5;
      v22 = v21 + v14;
      v23 = 0x9AE16A3B2F90404FLL;
      v24 = 0xC3A5C85C97CB3127 * (v22 + v20) - 0x651E95C4D06FBFB1 * (v12 + v7 + v17 + v19 + v15 + __ROR8__(v21, 31));
      v25 = v20 - 0x3C5A37A36834CED9 * (v24 ^ (v24 >> 47));
      return (v25 ^ (v25 >> 47)) * v23;
    }
    v32 = 0x9DDFEA08EB382D69;
    v33 = *(uint64_t *)((char *)a1 + a2 - 48);
    v34 = *(uint64_t *)((char *)a1 + a2 - 40);
    v35 = *(uint64_t *)((char *)a1 + a2 - 24);
    v37 = *(uint64_t *)((char *)a1 + a2 - 64);
    v36 = *(uint64_t *)((char *)a1 + a2 - 56);
    v38 = *(uint64_t *)((char *)a1 + a2 - 16);
    v39 = *(uint64_t *)((char *)a1 + a2 - 8);
    v40 = v36 + v38;
    v41 = 0x9DDFEA08EB382D69
        * (v35 ^ ((0x9DDFEA08EB382D69 * (v35 ^ (v33 + a2))) >> 47) ^ (0x9DDFEA08EB382D69 * (v35 ^ (v33 + a2))));
    v42 = 0x9DDFEA08EB382D69 * (v41 ^ (v41 >> 47));
    v43 = v37 + a2 + v36 + v33;
    v44 = v43 + v34;
    v45 = __ROR8__(v43, 44) + v37 + a2 + __ROR8__(v34 + v37 + a2 - 0x622015F714C7D297 * (v41 ^ (v41 >> 47)), 21);
    v46 = v36 + v38 + *(uint64_t *)((char *)a1 + a2 - 32) - 0x4B6D499041670D8DLL;
    v47 = v46 + v35 + v38;
    v48 = __ROR8__(v47, 44);
    v49 = v47 + v39;
    v50 = v48 + v46 + __ROR8__(v46 + v34 + v39, 21);
    v52 = *a1;
    v51 = a1 + 4;
    v53 = v52 - 0x4B6D499041670D8DLL * v34;
    v54 = -(uint64_t)((a2 - 1) & 0xFFFFFFFFFFFFFFC0);
    do
    {
      v55 = *(v51 - 3);
      v56 = v53 + v44 + v40 + v55;
      v57 = v51[2];
      v58 = v51[3];
      v59 = v51[1];
      v40 = v59 + v44 - 0x4B6D499041670D8DLL * __ROR8__(v40 + v45 + v57, 42);
      v60 = v42 + v49;
      v61 = *(v51 - 2);
      v62 = *(v51 - 1);
      v63 = *(v51 - 4) - 0x4B6D499041670D8DLL * v45;
      v64 = v63 + v49 + v62;
      v65 = v63 + v55 + v61;
      v44 = v65 + v62;
      v66 = __ROR8__(v65, 44) + v63;
      v67 = (0xB492B66FBE98F273 * __ROR8__(v56, 37)) ^ v50;
      v53 = 0xB492B66FBE98F273 * __ROR8__(v60, 33);
      v45 = v66 + __ROR8__(v64 + v67, 21);
      v68 = v53 + v50 + *v51;
      v49 = v68 + v59 + v57 + v58;
      v50 = __ROR8__(v68 + v59 + v57, 44) + v68 + __ROR8__(v40 + v61 + v68 + v58, 21);
      v51 += 8;
      v42 = v67;
      v54 += 64;
    }
    while (v54);
    v69 = v53
        - 0x622015F714C7D297
        * ((0x9DDFEA08EB382D69
          * (v50 ^ ((0x9DDFEA08EB382D69 * (v50 ^ v45)) >> 47) ^ (0x9DDFEA08EB382D69 * (v50 ^ v45)))) ^ ((0x9DDFEA08EB382D69 * (v50 ^ ((0x9DDFEA08EB382D69 * (v50 ^ v45)) >> 47) ^ (0x9DDFEA08EB382D69 * (v50 ^ v45)))) >> 47));
    v70 = 0x9DDFEA08EB382D69
        * (v69 ^ (v67
                - 0x4B6D499041670D8DLL * (v40 ^ (v40 >> 47))
                - 0x622015F714C7D297
                * ((0x9DDFEA08EB382D69
                  * (v49 ^ ((0x9DDFEA08EB382D69 * (v49 ^ v44)) >> 47) ^ (0x9DDFEA08EB382D69 * (v49 ^ v44)))) ^ ((0x9DDFEA08EB382D69 * (v49 ^ ((0x9DDFEA08EB382D69 * (v49 ^ v44)) >> 47) ^ (0x9DDFEA08EB382D69 * (v49 ^ v44)))) >> 47))));
    v71 = 0x9DDFEA08EB382D69 * (v69 ^ (v70 >> 47) ^ v70);
    goto LABEL_13;
  }
  if (a2 > 0x10)
  {
    v26 = a1[1];
    v27 = 0xB492B66FBE98F273 * *a1;
    v28 = __ROR8__(0x9AE16A3B2F90404FLL * *(uint64_t *)((char *)a1 + a2 - 8), 30) + __ROR8__(v27 - v26, 43);
    v29 = v27 + a2 + __ROR8__(v26 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(uint64_t *)((char *)a1 + a2 - 8);
    v23 = 0x9DDFEA08EB382D69;
    v30 = 0x9DDFEA08EB382D69 * ((v28 - 0x3C5A37A36834CED9 * *(uint64_t *)((char *)a1 + a2 - 16)) ^ v29);
    v31 = v29 ^ (v30 >> 47) ^ v30;
LABEL_8:
    v25 = 0x9DDFEA08EB382D69 * v31;
    return (v25 ^ (v25 >> 47)) * v23;
  }
  if (a2 >= 9)
  {
    v2 = *(uint64_t *)((char *)a1 + a2 - 8);
    v3 = __ROR8__(v2 + a2, a2);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v3 ^ ((0x9DDFEA08EB382D69 * (v3 ^ *a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v3 ^ *a1)))) ^ ((0x9DDFEA08EB382D69 * (v3 ^ ((0x9DDFEA08EB382D69 * (v3 ^ *a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v3 ^ *a1)))) >> 47))) ^ v2;
  }
  if (a2 >= 4)
  {
    v72 = *(unsigned int *)((char *)a1 + a2 - 4);
    v23 = 0x9DDFEA08EB382D69;
    v73 = 0x9DDFEA08EB382D69 * (((8 * *(_DWORD *)a1) + a2) ^ v72);
    v31 = v72 ^ (v73 >> 47) ^ v73;
    goto LABEL_8;
  }
  v32 = 0x9AE16A3B2F90404FLL;
  if (a2)
  {
    v71 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                   * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
LABEL_13:
    v32 *= v71 ^ (v71 >> 47);
  }
  return v32;
}

void AMSCore::AccountProperties::~AccountProperties(unsigned int **this)
{
  void **v2;
  unsigned int *v3;
  void **v4;

  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)(this + 6), this[7]);
  v2 = (void **)this[3];
  if (v2)
  {
    do
    {
      v4 = (void **)*v2;
      if (*((char *)v2 + 39) < 0)
        operator delete(v2[2]);
      operator delete(v2);
      v2 = v4;
    }
    while (v4);
  }
  v3 = this[1];
  this[1] = 0;
  if (v3)
    operator delete(v3);
}

{
  void **v2;
  unsigned int *v3;
  void **v4;

  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)(this + 6), this[7]);
  v2 = (void **)this[3];
  if (v2)
  {
    do
    {
      v4 = (void **)*v2;
      if (*((char *)v2 + 39) < 0)
        operator delete(v2[2]);
      operator delete(v2);
      v2 = v4;
    }
    while (v4);
  }
  v3 = this[1];
  this[1] = 0;
  if (v3)
    operator delete(v3);
  JUMPOUT(0x18D789BDCLL);
}

uint64_t AMSCore::AccountProperties::getValues(AMSCore::AccountProperties *this)
{
  return (uint64_t)this + 48;
}

uint64_t *AMSCore::AccountProperties::getValue(uint64_t a1, void *__s1, size_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v7;
  int v8;
  uint64_t *v9;
  size_t v10;
  size_t v11;
  int v12;
  int v13;
  const void *v14;
  size_t v15;
  size_t v16;
  int v17;

  v3 = (uint64_t *)(a1 + 56);
  v4 = *(uint64_t **)(a1 + 56);
  if (!v4)
    return &AMSCore::Any::Null(void)::null;
  v7 = (uint64_t *)(a1 + 56);
  do
  {
    while (1)
    {
      v8 = *((char *)v4 + 55);
      v9 = v8 >= 0 ? v4 + 4 : (uint64_t *)v4[4];
      v10 = v8 >= 0 ? *((unsigned __int8 *)v4 + 55) : v4[5];
      v11 = v10 >= a3 ? a3 : v10;
      v12 = memcmp(__s1, v9, v11);
      if (v12)
        break;
      if (a3 <= v10)
        goto LABEL_17;
LABEL_3:
      v4 = (uint64_t *)v4[1];
      if (!v4)
        goto LABEL_18;
    }
    if ((v12 & 0x80000000) == 0)
      goto LABEL_3;
LABEL_17:
    v7 = v4;
    v4 = (uint64_t *)*v4;
  }
  while (v4);
LABEL_18:
  if (v7 == v3)
    return &AMSCore::Any::Null(void)::null;
  v13 = *((char *)v7 + 55);
  if (v13 >= 0)
    v14 = v7 + 4;
  else
    v14 = (const void *)v7[4];
  if (v13 >= 0)
    v15 = *((unsigned __int8 *)v7 + 55);
  else
    v15 = v7[5];
  if (v15 >= a3)
    v16 = a3;
  else
    v16 = v15;
  v17 = memcmp(__s1, v14, v16);
  if (v17)
  {
    if ((v17 & 0x80000000) == 0)
      return v7 + 7;
    return &AMSCore::Any::Null(void)::null;
  }
  else
  {
    if (a3 < v15)
      return &AMSCore::Any::Null(void)::null;
    return v7 + 7;
  }
}

uint64_t AMSCore::AccountProperties::getBoolValue(uint64_t a1, void *a2, unint64_t a3)
{
  unsigned __int8 v4[72];
  char v5;

  AMSCore::getValueByKey<BOOL,std::map<std::string,AMSCore::Any> const>((uint64_t)v4, (uint64_t *)(a1 + 48), a2, a3);
  if (v5)
    return v4[0] | 0x100u;
  (**(void (***)(unsigned __int8 *))v4)(v4);
  return 0;
}

std::runtime_error_vtbl *AMSCore::AccountProperties::getDoubleValue(uint64_t a1, void *__s1, unint64_t a3)
{
  int v3;
  double v4;
  unsigned int *v5;
  unsigned int *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unsigned int *v10;
  std::runtime_error v12;
  __int128 v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  std::runtime_error v19;
  __int128 v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  std::runtime_error v25;
  __int128 v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  char v31;
  std::runtime_error v32;
  __int128 v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  char v38;
  uint64_t v39[2];
  std::runtime_error v40;
  __int128 v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;

  v39[0] = (uint64_t)__s1;
  v39[1] = a3;
  AMSCore::getValueByKey((uint64_t)&v32, (uint64_t *)(a1 + 48), __s1, a3);
  if (v38)
  {
    v3 = (int)v32.__vftable[1].~runtime_error;
    if (v3 == -1)
      v3 = 0;
    switch(v3)
    {
      case 1:
        v4 = 0.0;
        if (LOBYTE(v32.~runtime_error))
          v4 = 1.0;
        break;
      case 2:
        v4 = *(double *)&v32.~runtime_error;
        break;
      case 3:
        v4 = (double)(uint64_t)v32.~runtime_error;
        break;
      case 4:
        v4 = (double)(unint64_t)v32.~runtime_error;
        break;
      default:
        LOBYTE(v40.__vftable) = 34;
        AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,char const(&)[32],std::string_view &,char>((uint64_t)&v25, 0xCu, "unable to find value with key \"", v39, &v40);
        std::runtime_error::runtime_error(&v12, &v25);
        v13 = v26;
        v12.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
        v10 = (unsigned int *)v28;
        v14 = v27;
        v15 = v28;
        v16 = v29;
        if (v29)
        {
          *(_QWORD *)(v28 + 16) = &v15;
          v27 = &v28;
          v28 = 0;
          v29 = 0;
          v10 = 0;
        }
        else
        {
          v14 = &v15;
        }
        v17 = v30;
        v30 = 0uLL;
        v18 = 0;
        v25.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
        goto LABEL_38;
    }
    *(double *)&v12.__vftable = v4;
    v18 = 1;
LABEL_31:
    if (v38)
      goto LABEL_32;
LABEL_39:
    ((void (*)(std::runtime_error *))v32.~runtime_error)(&v32);
    if (v18)
      return v12.__vftable;
    goto LABEL_40;
  }
  std::runtime_error::runtime_error(&v25, &v32);
  v26 = v33;
  v25.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v27 = v34;
  v28 = v35;
  v29 = v36;
  if (v36)
  {
    *(_QWORD *)(v35 + 16) = &v28;
    v34 = &v35;
    v35 = 0;
    v36 = 0;
  }
  else
  {
    v27 = &v28;
  }
  v30 = v37;
  v37 = 0uLL;
  v31 = 1;
  std::runtime_error::runtime_error(&v40, &v25);
  v41 = v26;
  v40.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v42 = v27;
  v43 = v28;
  v44 = v29;
  if (v29)
  {
    *(_QWORD *)(v28 + 16) = &v43;
    v27 = &v28;
    v28 = 0;
    v29 = 0;
  }
  else
  {
    v42 = &v43;
  }
  v45 = v30;
  v30 = 0uLL;
  std::runtime_error::runtime_error(&v19, &v40);
  v20 = v41;
  v19.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v5 = (unsigned int *)v43;
  v21 = v42;
  v22 = v43;
  v23 = v44;
  if (v44)
  {
    *(_QWORD *)(v43 + 16) = &v22;
    v5 = 0;
    v42 = &v43;
    v43 = 0;
    v44 = 0;
  }
  else
  {
    v21 = &v22;
  }
  v24 = v45;
  v45 = 0uLL;
  v40.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v42, v5);
  MEMORY[0x18D7898AC](&v40);
  std::runtime_error::runtime_error(&v12, &v19);
  v13 = v20;
  v12.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v6 = (unsigned int *)v22;
  v14 = v21;
  v15 = v22;
  v16 = v23;
  if (v23)
  {
    *(_QWORD *)(v22 + 16) = &v15;
    v6 = 0;
    v21 = &v22;
    v22 = 0;
    v23 = 0;
  }
  else
  {
    v14 = &v15;
  }
  v17 = v24;
  v24 = 0uLL;
  v18 = 0;
  v19.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v21, v6);
  MEMORY[0x18D7898AC](&v19);
  if (!v31)
    goto LABEL_31;
  v25.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v30 + 1);
  if (*((_QWORD *)&v30 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v30 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (unsigned int *)v28;
LABEL_38:
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v27, v10);
  MEMORY[0x18D7898AC](&v25);
  if (!v38)
    goto LABEL_39;
LABEL_32:
  if (v18)
    return v12.__vftable;
LABEL_40:
  ((void (*)(std::runtime_error *))v12.~runtime_error)(&v12);
  return 0;
}

void sub_18CBD4494(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void (**a39)(_QWORD),uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  if (!a48)
  {
    (*a39)(&a39);
    __clang_call_terminate(a1);
  }
  __clang_call_terminate(a1);
}

std::runtime_error_vtbl *AMSCore::AccountProperties::getSignedIntValue(uint64_t a1, void *__s1, unint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unsigned int *v10;
  unint64_t v11;
  std::runtime_error v13;
  __int128 v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  std::runtime_error v20;
  __int128 v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  std::runtime_error v26;
  __int128 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  char v32;
  std::runtime_error v33;
  __int128 v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  char v39;
  uint64_t v40[2];
  std::runtime_error v41;
  __int128 v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;

  v40[0] = (uint64_t)__s1;
  v40[1] = a3;
  AMSCore::getValueByKey((uint64_t)&v33, (uint64_t *)(a1 + 48), __s1, a3);
  if (v39)
  {
    v3 = (int)v33.__vftable[1].~runtime_error;
    if (v3 == -1)
      v3 = 0;
    switch(v3)
    {
      case 1:
        v11 = 0;
        LOBYTE(v4) = v33.~runtime_error;
        goto LABEL_31;
      case 2:
        v4 = (uint64_t)v33.~runtime_error;
        goto LABEL_30;
      case 3:
      case 4:
        v4 = (uint64_t)v33.~runtime_error;
        goto LABEL_30;
      case 7:
        v4 = (uint64_t)v33.~runtime_error / 1000;
LABEL_30:
        v11 = v4 & 0xFFFFFFFFFFFFFF00;
LABEL_31:
        v13.__vftable = (std::runtime_error_vtbl *)(v11 | v4);
        v19 = 1;
        break;
      default:
        LOBYTE(v41.__vftable) = 34;
        AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,char const(&)[32],std::string_view &,char>((uint64_t)&v26, 0xCu, "unable to find value with key \"", v40, &v41);
        std::runtime_error::runtime_error(&v13, &v26);
        v14 = v27;
        v13.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
        v10 = (unsigned int *)v29;
        v15 = v28;
        v16 = v29;
        v17 = v30;
        if (v30)
        {
          *(_QWORD *)(v29 + 16) = &v16;
          v28 = &v29;
          v29 = 0;
          v30 = 0;
          v10 = 0;
        }
        else
        {
          v15 = &v16;
        }
        v18 = v31;
        v31 = 0uLL;
        v19 = 0;
        v26.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
        goto LABEL_37;
    }
LABEL_32:
    if (v39)
      goto LABEL_33;
LABEL_38:
    ((void (*)(std::runtime_error *))v33.~runtime_error)(&v33);
    if (v19)
      return v13.__vftable;
    goto LABEL_39;
  }
  std::runtime_error::runtime_error(&v26, &v33);
  v27 = v34;
  v26.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v28 = v35;
  v29 = v36;
  v30 = v37;
  if (v37)
  {
    *(_QWORD *)(v36 + 16) = &v29;
    v35 = &v36;
    v36 = 0;
    v37 = 0;
  }
  else
  {
    v28 = &v29;
  }
  v31 = v38;
  v38 = 0uLL;
  v32 = 1;
  std::runtime_error::runtime_error(&v41, &v26);
  v42 = v27;
  v41.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v43 = v28;
  v44 = v29;
  v45 = v30;
  if (v30)
  {
    *(_QWORD *)(v29 + 16) = &v44;
    v28 = &v29;
    v29 = 0;
    v30 = 0;
  }
  else
  {
    v43 = &v44;
  }
  v46 = v31;
  v31 = 0uLL;
  std::runtime_error::runtime_error(&v20, &v41);
  v21 = v42;
  v20.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v5 = (unsigned int *)v44;
  v22 = v43;
  v23 = v44;
  v24 = v45;
  if (v45)
  {
    *(_QWORD *)(v44 + 16) = &v23;
    v5 = 0;
    v43 = &v44;
    v44 = 0;
    v45 = 0;
  }
  else
  {
    v22 = &v23;
  }
  v25 = v46;
  v46 = 0uLL;
  v41.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v43, v5);
  MEMORY[0x18D7898AC](&v41);
  std::runtime_error::runtime_error(&v13, &v20);
  v14 = v21;
  v13.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v6 = (unsigned int *)v23;
  v15 = v22;
  v16 = v23;
  v17 = v24;
  if (v24)
  {
    *(_QWORD *)(v23 + 16) = &v16;
    v6 = 0;
    v22 = &v23;
    v23 = 0;
    v24 = 0;
  }
  else
  {
    v15 = &v16;
  }
  v18 = v25;
  v25 = 0uLL;
  v19 = 0;
  v20.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v22, v6);
  MEMORY[0x18D7898AC](&v20);
  if (!v32)
    goto LABEL_32;
  v26.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v31 + 1);
  if (*((_QWORD *)&v31 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v31 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (unsigned int *)v29;
LABEL_37:
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v28, v10);
  MEMORY[0x18D7898AC](&v26);
  if (!v39)
    goto LABEL_38;
LABEL_33:
  if (v19)
    return v13.__vftable;
LABEL_39:
  ((void (*)(std::runtime_error *))v13.~runtime_error)(&v13);
  return 0;
}

void sub_18CBD48D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void (**a39)(_QWORD),uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  if (!a48)
  {
    (*a39)(&a39);
    __clang_call_terminate(a1);
  }
  __clang_call_terminate(a1);
}

std::runtime_error_vtbl *AMSCore::AccountProperties::getUnsignedIntValue(uint64_t a1, void *__s1, unint64_t a3)
{
  int v3;
  void (__cdecl *v4)(std::runtime_error *__hidden);
  unsigned int *v5;
  unsigned int *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unsigned int *v10;
  unint64_t v11;
  std::runtime_error v13;
  __int128 v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  std::runtime_error v20;
  __int128 v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  std::runtime_error v26;
  __int128 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  char v32;
  std::runtime_error v33;
  __int128 v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  char v39;
  uint64_t v40[2];
  std::runtime_error v41;
  __int128 v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;

  v40[0] = (uint64_t)__s1;
  v40[1] = a3;
  AMSCore::getValueByKey((uint64_t)&v33, (uint64_t *)(a1 + 48), __s1, a3);
  if (v39)
  {
    v3 = (int)v33.__vftable[1].~runtime_error;
    if (v3 == -1)
      v3 = 0;
    switch(v3)
    {
      case 1:
        v11 = 0;
        LOBYTE(v4) = v33.~runtime_error;
        goto LABEL_28;
      case 2:
        v4 = v33.~runtime_error;
        goto LABEL_27;
      case 3:
      case 4:
        v4 = v33.~runtime_error;
LABEL_27:
        v11 = (unint64_t)v4 & 0xFFFFFFFFFFFFFF00;
LABEL_28:
        v13.__vftable = (std::runtime_error_vtbl *)(v11 | v4);
        v19 = 1;
        break;
      default:
        LOBYTE(v41.__vftable) = 34;
        AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,char const(&)[32],std::string_view &,char>((uint64_t)&v26, 0xCu, "unable to find value with key \"", v40, &v41);
        std::runtime_error::runtime_error(&v13, &v26);
        v14 = v27;
        v13.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
        v10 = (unsigned int *)v29;
        v15 = v28;
        v16 = v29;
        v17 = v30;
        if (v30)
        {
          *(_QWORD *)(v29 + 16) = &v16;
          v28 = &v29;
          v29 = 0;
          v30 = 0;
          v10 = 0;
        }
        else
        {
          v15 = &v16;
        }
        v18 = v31;
        v31 = 0uLL;
        v19 = 0;
        v26.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
        goto LABEL_36;
    }
LABEL_29:
    if (v39)
      goto LABEL_30;
LABEL_37:
    ((void (*)(std::runtime_error *))v33.~runtime_error)(&v33);
    if (v19)
      return v13.__vftable;
    goto LABEL_38;
  }
  std::runtime_error::runtime_error(&v26, &v33);
  v27 = v34;
  v26.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v28 = v35;
  v29 = v36;
  v30 = v37;
  if (v37)
  {
    *(_QWORD *)(v36 + 16) = &v29;
    v35 = &v36;
    v36 = 0;
    v37 = 0;
  }
  else
  {
    v28 = &v29;
  }
  v31 = v38;
  v38 = 0uLL;
  v32 = 1;
  std::runtime_error::runtime_error(&v41, &v26);
  v42 = v27;
  v41.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v43 = v28;
  v44 = v29;
  v45 = v30;
  if (v30)
  {
    *(_QWORD *)(v29 + 16) = &v44;
    v28 = &v29;
    v29 = 0;
    v30 = 0;
  }
  else
  {
    v43 = &v44;
  }
  v46 = v31;
  v31 = 0uLL;
  std::runtime_error::runtime_error(&v20, &v41);
  v21 = v42;
  v20.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v5 = (unsigned int *)v44;
  v22 = v43;
  v23 = v44;
  v24 = v45;
  if (v45)
  {
    *(_QWORD *)(v44 + 16) = &v23;
    v5 = 0;
    v43 = &v44;
    v44 = 0;
    v45 = 0;
  }
  else
  {
    v22 = &v23;
  }
  v25 = v46;
  v46 = 0uLL;
  v41.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v43, v5);
  MEMORY[0x18D7898AC](&v41);
  std::runtime_error::runtime_error(&v13, &v20);
  v14 = v21;
  v13.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v6 = (unsigned int *)v23;
  v15 = v22;
  v16 = v23;
  v17 = v24;
  if (v24)
  {
    *(_QWORD *)(v23 + 16) = &v16;
    v6 = 0;
    v22 = &v23;
    v23 = 0;
    v24 = 0;
  }
  else
  {
    v15 = &v16;
  }
  v18 = v25;
  v25 = 0uLL;
  v19 = 0;
  v20.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v22, v6);
  MEMORY[0x18D7898AC](&v20);
  if (!v32)
    goto LABEL_29;
  v26.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v31 + 1);
  if (*((_QWORD *)&v31 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v31 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (unsigned int *)v29;
LABEL_36:
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v28, v10);
  MEMORY[0x18D7898AC](&v26);
  if (!v39)
    goto LABEL_37;
LABEL_30:
  if (v19)
    return v13.__vftable;
LABEL_38:
  ((void (*)(std::runtime_error *))v13.~runtime_error)(&v13);
  return 0;
}

void sub_18CBD4CE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void (**a39)(_QWORD),uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  if (!a48)
  {
    (*a39)(&a39);
    __clang_call_terminate(a1);
  }
  __clang_call_terminate(a1);
}

unint64_t AMSCore::AccountProperties::getMapValue(uint64_t a1, void *__s1, size_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v7;
  int v8;
  uint64_t *v9;
  size_t v10;
  size_t v11;
  int v12;
  int v13;
  const void *v14;
  size_t v15;
  size_t v16;
  int v17;
  uint64_t *v18;
  unint64_t v19;

  v3 = (uint64_t *)(a1 + 56);
  v4 = *(uint64_t **)(a1 + 56);
  if (!v4)
    goto LABEL_34;
  v7 = (uint64_t *)(a1 + 56);
  do
  {
    while (1)
    {
      v8 = *((char *)v4 + 55);
      v9 = v8 >= 0 ? v4 + 4 : (uint64_t *)v4[4];
      v10 = v8 >= 0 ? *((unsigned __int8 *)v4 + 55) : v4[5];
      v11 = v10 >= a3 ? a3 : v10;
      v12 = memcmp(__s1, v9, v11);
      if (v12)
        break;
      if (a3 <= v10)
        goto LABEL_17;
LABEL_3:
      v4 = (uint64_t *)v4[1];
      if (!v4)
        goto LABEL_18;
    }
    if ((v12 & 0x80000000) == 0)
      goto LABEL_3;
LABEL_17:
    v7 = v4;
    v4 = (uint64_t *)*v4;
  }
  while (v4);
LABEL_18:
  if (v7 == v3)
    goto LABEL_34;
  v13 = *((char *)v7 + 55);
  if (v13 >= 0)
    v14 = v7 + 4;
  else
    v14 = (const void *)v7[4];
  if (v13 >= 0)
    v15 = *((unsigned __int8 *)v7 + 55);
  else
    v15 = v7[5];
  if (v15 >= a3)
    v16 = a3;
  else
    v16 = v15;
  v17 = memcmp(__s1, v14, v16);
  if (v17)
  {
    if ((v17 & 0x80000000) == 0)
      goto LABEL_30;
LABEL_34:
    v18 = 0;
    v19 = 0;
  }
  else
  {
    if (a3 < v15)
      goto LABEL_34;
LABEL_30:
    v18 = v7 + 7;
    if (*((_DWORD *)v7 + 20) != 8)
      v18 = 0;
    v19 = (unint64_t)v18 & 0xFFFFFFFFFFFFFF00;
    v18 = (uint64_t *)v18;
  }
  return v19 | (unint64_t)v18;
}

uint64_t AMSCore::AccountProperties::getStringValue(uint64_t a1, void *a2, unint64_t a3)
{
  _QWORD v4[9];
  char v5;

  AMSCore::getValueByKey<std::string,std::map<std::string,AMSCore::Any> const>((uint64_t)v4, (uint64_t *)(a1 + 48), a2, a3);
  if (v5)
    return v4[0];
  (*(void (**)(_QWORD *))v4[0])(v4);
  return 0;
}

unint64_t AMSCore::AccountProperties::getVectorValue(uint64_t a1, void *__s1, size_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v7;
  int v8;
  uint64_t *v9;
  size_t v10;
  size_t v11;
  int v12;
  int v13;
  const void *v14;
  size_t v15;
  size_t v16;
  int v17;
  uint64_t *v18;
  unint64_t v19;

  v3 = (uint64_t *)(a1 + 56);
  v4 = *(uint64_t **)(a1 + 56);
  if (!v4)
    goto LABEL_34;
  v7 = (uint64_t *)(a1 + 56);
  do
  {
    while (1)
    {
      v8 = *((char *)v4 + 55);
      v9 = v8 >= 0 ? v4 + 4 : (uint64_t *)v4[4];
      v10 = v8 >= 0 ? *((unsigned __int8 *)v4 + 55) : v4[5];
      v11 = v10 >= a3 ? a3 : v10;
      v12 = memcmp(__s1, v9, v11);
      if (v12)
        break;
      if (a3 <= v10)
        goto LABEL_17;
LABEL_3:
      v4 = (uint64_t *)v4[1];
      if (!v4)
        goto LABEL_18;
    }
    if ((v12 & 0x80000000) == 0)
      goto LABEL_3;
LABEL_17:
    v7 = v4;
    v4 = (uint64_t *)*v4;
  }
  while (v4);
LABEL_18:
  if (v7 == v3)
    goto LABEL_34;
  v13 = *((char *)v7 + 55);
  if (v13 >= 0)
    v14 = v7 + 4;
  else
    v14 = (const void *)v7[4];
  if (v13 >= 0)
    v15 = *((unsigned __int8 *)v7 + 55);
  else
    v15 = v7[5];
  if (v15 >= a3)
    v16 = a3;
  else
    v16 = v15;
  v17 = memcmp(__s1, v14, v16);
  if (v17)
  {
    if ((v17 & 0x80000000) == 0)
      goto LABEL_30;
LABEL_34:
    v18 = 0;
    v19 = 0;
  }
  else
  {
    if (a3 < v15)
      goto LABEL_34;
LABEL_30:
    v18 = v7 + 7;
    if (*((_DWORD *)v7 + 20) != 9)
      v18 = 0;
    v19 = (unint64_t)v18 & 0xFFFFFFFFFFFFFF00;
    v18 = (uint64_t *)v18;
  }
  return v19 | (unint64_t)v18;
}

void AMSCore::AccountProperties::setModifiedProperties(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  BOOL v11;
  _BYTE v12[24];
  int v13;
  char v14;

  v2 = a2 + 1;
  v3 = (_QWORD *)*a2;
  if ((_QWORD *)*a2 != a2 + 1)
  {
    while (1)
    {
      if (*((char *)v3 + 55) < 0)
      {
        v5 = (void *)v3[4];
        v6 = v3[5];
      }
      else
      {
        v5 = v3 + 4;
        v6 = *((unsigned __int8 *)v3 + 55);
      }
      v12[0] = 0;
      v13 = -1;
      v7 = *((unsigned int *)v3 + 20);
      if ((_DWORD)v7 == -1)
        goto LABEL_11;
      ((void (*)(char *, _BYTE *, _QWORD *))off_1E253CAE8[v7])(&v14, v12, v3 + 7);
      v13 = v7;
      v8 = *((unsigned int *)v3 + 20);
      if ((_DWORD)v8 == -1)
        goto LABEL_11;
      if ((_DWORD)v8)
        break;
LABEL_12:
      AMSCore::AccountProperties::setValue(a1, v5, v6, (uint64_t)v12);
      if (v13 != -1)
        ((void (*)(char *, _BYTE *))off_1E253D240[v13])(&v14, v12);
      v13 = -1;
      v9 = (_QWORD *)v3[1];
      if (v9)
      {
        do
        {
          v10 = v9;
          v9 = (_QWORD *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          v10 = (_QWORD *)v3[2];
          v11 = *v10 == (_QWORD)v3;
          v3 = v10;
        }
        while (!v11);
      }
      v3 = v10;
      if (v10 == v2)
        return;
    }
    ((void (*)(char *, _QWORD *))off_1E253D240[v8])(&v14, v3 + 7);
LABEL_11:
    *((_DWORD *)v3 + 20) = 0;
    goto LABEL_12;
  }
}

void sub_18CBD50F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  AMSCore::Any::~Any((AMSCore::Any *)va);
  _Unwind_Resume(a1);
}

void AMSCore::AccountProperties::setValues(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t i;
  void **v12;

  v4 = a1 + 7;
  v5 = a1 + 6;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)(a1 + 6), (unsigned int *)a1[7]);
  *(v4 - 1) = *a2;
  v6 = a2 + 1;
  v7 = a2[1];
  *v4 = v7;
  v8 = a2[2];
  v4[1] = v8;
  if (v8)
  {
    *(_QWORD *)(v7 + 16) = v4;
    *a2 = v6;
    *v6 = 0;
    a2[2] = 0;
    if (!a1[4])
      return;
  }
  else
  {
    *v5 = v4;
    if (!a1[4])
      return;
  }
  v9 = (void **)a1[3];
  if (v9)
  {
    do
    {
      v12 = (void **)*v9;
      if (*((char *)v9 + 39) < 0)
        operator delete(v9[2]);
      operator delete(v9);
      v9 = v12;
    }
    while (v12);
  }
  a1[3] = 0;
  v10 = a1[2];
  if (v10)
  {
    for (i = 0; i != v10; ++i)
      *(_QWORD *)(a1[1] + 8 * i) = 0;
  }
  a1[4] = 0;
}

void AMSCore::AccountProperties::setValue(uint64_t a1, void *__s1, size_t a3, uint64_t a4)
{
  uint64_t **v8;
  uint64_t *v9;
  uint64_t *v10;
  int v11;
  uint64_t *v12;
  size_t v13;
  size_t v14;
  int v15;
  int v16;
  const void *v17;
  size_t v18;
  size_t v19;
  int v20;
  unsigned __int8 *v21;
  const void **v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  const void *__dst[2];
  unint64_t v27;

  v9 = (uint64_t *)(a1 + 56);
  v8 = *(uint64_t ***)(a1 + 56);
  if (!v8)
    goto LABEL_32;
  v10 = (uint64_t *)(a1 + 56);
  do
  {
    while (1)
    {
      v11 = *((char *)v8 + 55);
      v12 = v11 >= 0 ? (uint64_t *)(v8 + 4) : v8[4];
      v13 = v11 >= 0 ? *((unsigned __int8 *)v8 + 55) : (size_t)v8[5];
      v14 = v13 >= a3 ? a3 : v13;
      v15 = memcmp(__s1, v12, v14);
      if (v15)
        break;
      if (a3 <= v13)
        goto LABEL_17;
LABEL_3:
      v8 = (uint64_t **)v8[1];
      if (!v8)
        goto LABEL_18;
    }
    if ((v15 & 0x80000000) == 0)
      goto LABEL_3;
LABEL_17:
    v10 = (uint64_t *)v8;
    v8 = (uint64_t **)*v8;
  }
  while (v8);
LABEL_18:
  if (v10 == v9)
    goto LABEL_32;
  v16 = *((char *)v10 + 55);
  if (v16 >= 0)
    v17 = v10 + 4;
  else
    v17 = (const void *)v10[4];
  if (v16 >= 0)
    v18 = *((unsigned __int8 *)v10 + 55);
  else
    v18 = v10[5];
  if (v18 >= a3)
    v19 = a3;
  else
    v19 = v18;
  v20 = memcmp(__s1, v17, v19);
  if (v20)
  {
    if ((v20 & 0x80000000) == 0)
      goto LABEL_30;
LABEL_32:
    v21 = (unsigned __int8 *)&AMSCore::Any::Null(void)::null;
  }
  else
  {
    if (a3 < v18)
      goto LABEL_32;
LABEL_30:
    v21 = (unsigned __int8 *)(v10 + 7);
  }
  if ((AMSCore::operator==(v21, (unsigned __int8 *)a4) & 1) == 0)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8)
      std::string::__throw_length_error[abi:fe180100]();
    if (a3 >= 0x17)
    {
      v23 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((a3 | 7) != 0x17)
        v23 = a3 | 7;
      v24 = v23 + 1;
      v22 = (const void **)operator new(v23 + 1);
      __dst[1] = (const void *)a3;
      v27 = v24 | 0x8000000000000000;
      __dst[0] = v22;
    }
    else
    {
      HIBYTE(v27) = a3;
      v22 = __dst;
      if (!a3)
      {
LABEL_42:
        *((_BYTE *)v22 + a3) = 0;
        if ((*(_DWORD *)(a4 + 24) + 1) > 1)
        {
          std::map<std::string,AMSCore::Any>::insert_or_assign[abi:fe180100]<AMSCore::Any>((_QWORD **)v9 - 1, (const std::string::value_type **)__dst, a4);
        }
        else
        {
          v25 = std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::find<std::string>((uint64_t)(v9 - 1), __dst);
          if (v9 != v25)
            std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::erase(v9 - 1, (uint64_t)v25);
        }
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string>(a1 + 8, (uint64_t)__dst, (uint64_t)__dst);
        if (SHIBYTE(v27) < 0)
          operator delete((void *)__dst[0]);
        return;
      }
    }
    memmove(v22, __s1, a3);
    goto LABEL_42;
  }
}

void sub_18CBD53D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void AMSCore::AccountProperties::takeModifiedProperties(AMSCore::AccountProperties *this@<X0>, uint64_t **a2@<X8>)
{
  char *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  void *v10;
  unint64_t v11;
  void **v12;
  _QWORD *v13;
  _QWORD *v14;
  void **v15;
  size_t v16;
  const void *v17;
  size_t v18;
  uint64_t *v19;
  _QWORD *v20;
  int v21;
  uint64_t *v22;
  size_t v23;
  size_t v24;
  int v25;
  int v26;
  const void *v27;
  size_t v28;
  size_t v29;
  int v30;
  uint64_t *v31;
  char **v32;
  char *v33;
  char **v34;
  const void *v35;
  size_t v36;
  _QWORD *v37;
  const void *v38;
  const void *v39;
  int v40;
  const void *v41;
  size_t v42;
  size_t v43;
  int v44;
  int v45;
  char *v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t *v50;
  void **v51;
  void *v52;
  void **v53;
  char *v54;
  char **v55;
  void *__p[2];
  void *v57[2];
  int v58;
  void *v59;
  unint64_t v60;
  void *v61[2];
  int v62;
  char v63;

  a2[1] = 0;
  a2[2] = 0;
  v55 = (char **)(a2 + 1);
  *a2 = (uint64_t *)(a2 + 1);
  v5 = (_QWORD *)*((_QWORD *)this + 3);
  v4 = (char *)this + 24;
  v8 = (_QWORD *)*((_QWORD *)this + 1);
  v6 = (_QWORD *)((char *)this + 8);
  v7 = v8;
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v57 = 0u;
  v58 = 1065353216;
  v9 = *((_QWORD *)v4 - 1);
  *((_QWORD *)v4 - 1) = 0;
  *v6 = 0;
  v59 = v8;
  v60 = v9;
  v10 = (void *)*((_QWORD *)v4 + 1);
  v61[0] = v5;
  v61[1] = v10;
  v62 = *((_DWORD *)v4 + 4);
  if (v10)
  {
    v11 = v5[1];
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v11 >= v9)
        v11 %= v9;
    }
    else
    {
      v11 &= v9 - 1;
    }
    v7[v11] = v61;
    *(_QWORD *)v4 = 0;
    *((_QWORD *)v4 + 1) = 0;
  }
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__move_assign((uint64_t)v6, (uint64_t *)__p);
  v12 = (void **)v57[0];
  if (v57[0])
  {
    do
    {
      v15 = (void **)*v12;
      if (*((char *)v12 + 39) < 0)
        operator delete(v12[2]);
      operator delete(v12);
      v12 = v15;
    }
    while (v15);
  }
  if (__p[0])
    operator delete(__p[0]);
  v13 = v61[0];
  if (v61[0])
  {
    v14 = (_QWORD *)((char *)this + 56);
    v54 = (char *)this + 56;
    while (1)
    {
      v16 = *((unsigned __int8 *)v13 + 39);
      if (*((char *)v13 + 39) < 0)
      {
        v17 = (const void *)v13[2];
        v18 = v13[3];
        v19 = (uint64_t *)*v14;
        if (!*v14)
          goto LABEL_49;
      }
      else
      {
        v17 = v13 + 2;
        v18 = *((unsigned __int8 *)v13 + 39);
        v19 = (uint64_t *)*v14;
        if (!*v14)
        {
LABEL_49:
          v31 = &AMSCore::Any::Null(void)::null;
          goto LABEL_52;
        }
      }
      v20 = v14;
      do
      {
        while (1)
        {
          v21 = *((char *)v19 + 55);
          v22 = v21 >= 0 ? v19 + 4 : (uint64_t *)v19[4];
          v23 = v21 >= 0 ? *((unsigned __int8 *)v19 + 55) : v19[5];
          v24 = v23 >= v18 ? v18 : v23;
          v25 = memcmp(v17, v22, v24);
          if (v25)
            break;
          if (v18 <= v23)
            goto LABEL_36;
LABEL_22:
          v19 = (uint64_t *)v19[1];
          if (!v19)
            goto LABEL_37;
        }
        if ((v25 & 0x80000000) == 0)
          goto LABEL_22;
LABEL_36:
        v20 = v19;
        v19 = (uint64_t *)*v19;
      }
      while (v19);
LABEL_37:
      if (v20 == v14)
        goto LABEL_49;
      v26 = *((char *)v20 + 55);
      if (v26 >= 0)
        v27 = v20 + 4;
      else
        v27 = (const void *)v20[4];
      if (v26 >= 0)
        v28 = *((unsigned __int8 *)v20 + 55);
      else
        v28 = v20[5];
      if (v28 >= v18)
        v29 = v18;
      else
        v29 = v28;
      v30 = memcmp(v17, v27, v29);
      if (v30)
      {
        if (v30 < 0)
          goto LABEL_49;
LABEL_51:
        v31 = v20 + 7;
      }
      else
      {
        v31 = &AMSCore::Any::Null(void)::null;
        if (v18 >= v28)
          goto LABEL_51;
      }
LABEL_52:
      v32 = v55;
      v33 = *v55;
      v34 = v55;
      if (*v55)
      {
        if ((v16 & 0x80u) == 0)
          v35 = v13 + 2;
        else
          v35 = (const void *)v13[2];
        if ((v16 & 0x80u) == 0)
          v36 = v16;
        else
          v36 = v13[3];
        while (1)
        {
          v32 = (char **)v33;
          v39 = (const void *)*((_QWORD *)v33 + 4);
          v37 = v33 + 32;
          v38 = v39;
          v40 = *((char *)v37 + 23);
          if (v40 >= 0)
            v41 = v37;
          else
            v41 = v38;
          if (v40 >= 0)
            v42 = *((unsigned __int8 *)v37 + 23);
          else
            v42 = v37[1];
          if (v42 >= v36)
            v43 = v36;
          else
            v43 = v42;
          v44 = memcmp(v35, v41, v43);
          if (v44)
          {
            if (v44 < 0)
              goto LABEL_59;
LABEL_73:
            v45 = memcmp(v41, v35, v43);
            if (v45)
            {
              if ((v45 & 0x80000000) == 0)
                goto LABEL_16;
            }
            else if (v42 >= v36)
            {
              goto LABEL_16;
            }
            v33 = v32[1];
            if (!v33)
            {
              v34 = v32 + 1;
              break;
            }
          }
          else
          {
            if (v36 >= v42)
              goto LABEL_73;
LABEL_59:
            v33 = *v32;
            v34 = v32;
            if (!*v32)
              break;
          }
        }
      }
      v46 = (char *)operator new(0x58uLL);
      v47 = v46;
      if (*((char *)v13 + 39) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)(v46 + 32), (const std::string::value_type *)v13[2], v13[3]);
      }
      else
      {
        v48 = *((_OWORD *)v13 + 1);
        *((_QWORD *)v46 + 6) = v13[4];
        *((_OWORD *)v46 + 2) = v48;
      }
      v47[56] = 0;
      *((_DWORD *)v47 + 20) = -1;
      v49 = *((unsigned int *)v31 + 6);
      if ((_DWORD)v49 != -1)
      {
        ((void (*)(char *, char *, uint64_t *))off_1E253D1E0[v49])(&v63, v47 + 56, v31);
        *((_DWORD *)v47 + 20) = v49;
      }
      *(_QWORD *)v47 = 0;
      *((_QWORD *)v47 + 1) = 0;
      *((_QWORD *)v47 + 2) = v32;
      *v34 = v47;
      v50 = (uint64_t *)**a2;
      if (v50)
      {
        *a2 = v50;
        v47 = *v34;
      }
      std::__tree_balance_after_insert[abi:fe180100]<std::__tree_node_base<void *> *>(a2[1], (uint64_t *)v47);
      a2[2] = (uint64_t *)((char *)a2[2] + 1);
LABEL_16:
      v13 = (_QWORD *)*v13;
      v14 = v54;
      if (!v13)
      {
        v51 = (void **)v61[0];
        if (v61[0])
        {
          do
          {
            v53 = (void **)*v51;
            if (*((char *)v51 + 39) < 0)
              operator delete(v51[2]);
            operator delete(v51);
            v51 = v53;
          }
          while (v53);
        }
        break;
      }
    }
  }
  v52 = v59;
  v59 = 0;
  if (v52)
    operator delete(v52);
}

void sub_18CBD57C0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  void *v11;

  operator delete(v11);
  __clang_call_terminate(a1);
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__move_assign(uint64_t a1, uint64_t *a2)
{
  void **v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void **v16;

  if (*(_QWORD *)(a1 + 24))
  {
    v4 = *(void ***)(a1 + 16);
    if (v4)
    {
      do
      {
        v16 = (void **)*v4;
        if (*((char *)v4 + 39) < 0)
          operator delete(v4[2]);
        operator delete(v4);
        v4 = v16;
      }
      while (v16);
    }
    *(_QWORD *)(a1 + 16) = 0;
    v5 = *(_QWORD *)(a1 + 8);
    if (v5)
    {
      for (i = 0; i != v5; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
  v7 = *a2;
  *a2 = 0;
  v8 = *(void **)a1;
  *(_QWORD *)a1 = v7;
  if (v8)
    operator delete(v8);
  v11 = a2[2];
  v10 = a2 + 2;
  v9 = v11;
  v12 = *(v10 - 1);
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 8) = v12;
  *(v10 - 1) = 0;
  v13 = v10[1];
  *(_QWORD *)(a1 + 24) = v13;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v10 + 4);
  if (v13)
  {
    v14 = *(_QWORD *)(v9 + 8);
    v15 = *(_QWORD *)(a1 + 8);
    if ((v15 & (v15 - 1)) != 0)
    {
      if (v14 >= v15)
        v14 %= v15;
    }
    else
    {
      v14 &= v15 - 1;
    }
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v14) = a1 + 16;
    *v10 = 0;
    v10[1] = 0;
  }
}

uint64_t *std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::find<std::string>(uint64_t a1, const void **a2)
{
  uint64_t *v2;
  uint64_t *v3;
  int v4;
  const void *v5;
  size_t v6;
  uint64_t *v7;
  int v8;
  uint64_t *v9;
  size_t v10;
  size_t v11;
  int v12;
  int v13;
  const void *v14;
  size_t v15;
  size_t v16;
  int v17;

  v2 = (uint64_t *)(a1 + 8);
  v3 = *(uint64_t **)(a1 + 8);
  if (!v3)
    return v2;
  v4 = *((char *)a2 + 23);
  if (v4 >= 0)
    v5 = a2;
  else
    v5 = *a2;
  if (v4 >= 0)
    v6 = *((unsigned __int8 *)a2 + 23);
  else
    v6 = (size_t)a2[1];
  v7 = (uint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      v8 = *((char *)v3 + 55);
      v9 = v8 >= 0 ? v3 + 4 : (uint64_t *)v3[4];
      v10 = v8 >= 0 ? *((unsigned __int8 *)v3 + 55) : v3[5];
      v11 = v6 >= v10 ? v10 : v6;
      v12 = memcmp(v9, v5, v11);
      if (v12)
        break;
      if (v10 >= v6)
        goto LABEL_23;
LABEL_9:
      v3 = (uint64_t *)v3[1];
      if (!v3)
        goto LABEL_24;
    }
    if (v12 < 0)
      goto LABEL_9;
LABEL_23:
    v7 = v3;
    v3 = (uint64_t *)*v3;
  }
  while (v3);
LABEL_24:
  if (v7 == v2)
    return v2;
  v13 = *((char *)v7 + 55);
  if (v13 >= 0)
    v14 = v7 + 4;
  else
    v14 = (const void *)v7[4];
  if (v13 >= 0)
    v15 = *((unsigned __int8 *)v7 + 55);
  else
    v15 = v7[5];
  if (v15 >= v6)
    v16 = v6;
  else
    v16 = v15;
  v17 = memcmp(v5, v14, v16);
  if (!v17)
  {
    if (v6 >= v15)
      return v7;
    return v2;
  }
  if (v17 < 0)
    return v2;
  return v7;
}

void std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::erase(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  BOOL v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD **)(a2 + 8);
  if (v3)
  {
    do
    {
      v4 = v3;
      v3 = (_QWORD *)*v3;
    }
    while (v3);
  }
  else
  {
    v5 = (_QWORD *)a2;
    do
    {
      v4 = (_QWORD *)v5[2];
      v6 = *v4 == (_QWORD)v5;
      v5 = v4;
    }
    while (!v6);
  }
  if (*a1 == a2)
    *a1 = v4;
  v7 = (uint64_t *)a1[1];
  --a1[2];
  std::__tree_remove[abi:fe180100]<std::__tree_node_base<void *> *>(v7, (uint64_t *)a2);
  v8 = *(unsigned int *)(a2 + 80);
  if ((_DWORD)v8 != -1)
    ((void (*)(char *, uint64_t))off_1E253D240[v8])(&v9, a2 + 56);
  *(_DWORD *)(a2 + 80) = -1;
  if (*(char *)(a2 + 55) < 0)
    operator delete(*(void **)(a2 + 32));
  operator delete((void *)a2);
}

uint64_t *std::map<std::string,AMSCore::Any>::insert_or_assign[abi:fe180100]<AMSCore::Any>(_QWORD **a1, const std::string::value_type **a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t *v7;
  int v8;
  const std::string::value_type *v9;
  size_t v10;
  uint64_t *v11;
  int v12;
  uint64_t *v13;
  size_t v14;
  size_t v15;
  int v16;
  int v17;
  _QWORD *v18;
  size_t v19;
  size_t v20;
  int v21;
  uint64_t *result;
  uint64_t *v23;
  char *v24;
  std::string *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t *v31;
  char v32;

  v6 = (uint64_t *)(a1 + 1);
  v7 = a1[1];
  if (!v7)
    goto LABEL_39;
  v8 = *((char *)a2 + 23);
  if (v8 >= 0)
    v9 = (const std::string::value_type *)a2;
  else
    v9 = *a2;
  if (v8 >= 0)
    v10 = *((unsigned __int8 *)a2 + 23);
  else
    v10 = (size_t)a2[1];
  v11 = (uint64_t *)(a1 + 1);
  do
  {
    while (1)
    {
      v12 = *((char *)v7 + 55);
      v13 = v12 >= 0 ? v7 + 4 : (uint64_t *)v7[4];
      v14 = v12 >= 0 ? *((unsigned __int8 *)v7 + 55) : v7[5];
      v15 = v10 >= v14 ? v14 : v10;
      v16 = memcmp(v13, v9, v15);
      if (v16)
        break;
      if (v14 >= v10)
        goto LABEL_23;
LABEL_9:
      v7 = (uint64_t *)v7[1];
      if (!v7)
        goto LABEL_24;
    }
    if (v16 < 0)
      goto LABEL_9;
LABEL_23:
    v11 = v7;
    v7 = (uint64_t *)*v7;
  }
  while (v7);
LABEL_24:
  if (v11 == v6)
    goto LABEL_39;
  v17 = *((char *)v11 + 55);
  if (v17 >= 0)
    v18 = v11 + 4;
  else
    v18 = (_QWORD *)v11[4];
  if (v17 >= 0)
    v19 = *((unsigned __int8 *)v11 + 55);
  else
    v19 = v11[5];
  if (v19 >= v10)
    v20 = v10;
  else
    v20 = v19;
  v21 = memcmp(v9, v18, v20);
  if (v21)
  {
    if ((v21 & 0x80000000) == 0)
      return (uint64_t *)AMSCore::Any::operator=((uint64_t)(v11 + 7), a3);
LABEL_38:
    v6 = v11;
LABEL_39:
    result = std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::__find_equal<std::string>(a1, v6, &v31, &v30, (const void **)a2);
    if (!*result)
    {
      v23 = result;
      v24 = (char *)operator new(0x58uLL);
      v25 = (std::string *)(v24 + 32);
      if (*((char *)a2 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v25, *a2, (std::string::size_type)a2[1]);
      }
      else
      {
        *(_OWORD *)&v25->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
        *((_QWORD *)v24 + 6) = a2[2];
      }
      v24[56] = 0;
      *((_DWORD *)v24 + 20) = -1;
      v26 = *(unsigned int *)(a3 + 24);
      if ((_DWORD)v26 == -1
        || (((void (*)(char *))off_1E253CAE8[v26])(&v32),
            *((_DWORD *)v24 + 20) = v26,
            v27 = *(unsigned int *)(a3 + 24),
            (_DWORD)v27 == -1))
      {
LABEL_47:
        *(_DWORD *)(a3 + 24) = 0;
      }
      else if ((_DWORD)v27)
      {
        ((void (*)(char *, uint64_t))off_1E253D240[v27])(&v32, a3);
        goto LABEL_47;
      }
      v28 = v31;
      *(_QWORD *)v24 = 0;
      *((_QWORD *)v24 + 1) = 0;
      *((_QWORD *)v24 + 2) = v28;
      *v23 = (uint64_t)v24;
      v29 = (_QWORD *)**a1;
      if (v29)
      {
        *a1 = v29;
        v24 = (char *)*v23;
      }
      result = std::__tree_balance_after_insert[abi:fe180100]<std::__tree_node_base<void *> *>(a1[1], (uint64_t *)v24);
      a1[2] = (_QWORD *)((char *)a1[2] + 1);
    }
  }
  else
  {
    if (v10 < v19)
      goto LABEL_38;
    return (uint64_t *)AMSCore::Any::operator=((uint64_t)(v11 + 7), a3);
  }
  return result;
}

void sub_18CBD5D30(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  int v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  uint64_t **v14;
  uint64_t *i;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const void **v19;
  uint64_t *j;
  _QWORD *v21;
  _QWORD *v22;
  float v23;
  float v24;
  _BOOL8 v25;
  unint64_t v26;
  unint64_t v27;
  size_t prime;
  int8x8_t v29;
  unint64_t v30;
  uint8x8_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;

  v6 = *(char *)(a2 + 23);
  if (v6 >= 0)
    v7 = (uint64_t *)a2;
  else
    v7 = *(uint64_t **)a2;
  if (v6 >= 0)
    v8 = *(unsigned __int8 *)(a2 + 23);
  else
    v8 = *(_QWORD *)(a2 + 8);
  v9 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:fe180100](v7, v8);
  v10 = v9;
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v3 = v9;
      if (v9 >= v11)
        v3 = v9 % v11;
    }
    else
    {
      v3 = (v11 - 1) & v9;
    }
    v14 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v14)
    {
      for (i = *v14; i; i = (uint64_t *)*i)
      {
        v16 = i[1];
        if (v16 == v10)
        {
          v17 = *((unsigned __int8 *)i + 39);
          if ((v17 & 0x80u) == 0)
            v18 = *((unsigned __int8 *)i + 39);
          else
            v18 = i[3];
          if (v18 == v8)
          {
            v19 = (const void **)(i + 2);
            if ((v17 & 0x80) != 0)
            {
              if (!memcmp(*v19, v7, i[3]))
                return;
            }
            else
            {
              if (!*((_BYTE *)i + 39))
                return;
              for (j = v7; *(unsigned __int8 *)v19 == *(unsigned __int8 *)j; j = (uint64_t *)((char *)j + 1))
              {
                v19 = (const void **)((char *)v19 + 1);
                if (!--v17)
                  return;
              }
            }
          }
        }
        else
        {
          if (v13 <= 1)
          {
            v16 &= v11 - 1;
          }
          else if (v16 >= v11)
          {
            v16 %= v11;
          }
          if (v16 != v3)
            break;
        }
      }
    }
  }
  v21 = (_QWORD *)(a1 + 16);
  v22 = operator new(0x28uLL);
  *v22 = 0;
  v22[1] = v10;
  *((_OWORD *)v22 + 1) = *(_OWORD *)a3;
  v22[4] = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v23 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v24 = *(float *)(a1 + 32);
  if (!v11 || (float)(v24 * (float)v11) < v23)
  {
    v25 = 1;
    if (v11 >= 3)
      v25 = (v11 & (v11 - 1)) != 0;
    v26 = v25 | (2 * v11);
    v27 = vcvtps_u32_f32(v23 / v24);
    if (v26 <= v27)
      prime = v27;
    else
      prime = v26;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v29 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v29)
      goto LABEL_47;
    if (prime < *(_QWORD *)&v29)
    {
      v30 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v29 < 3uLL || (v31 = (uint8x8_t)vcnt_s8(v29), v31.i16[0] = vaddlv_u8(v31), v31.u32[0] > 1uLL))
      {
        v30 = std::__next_prime(v30);
      }
      else
      {
        v32 = 1 << -(char)__clz(v30 - 1);
        if (v30 >= 2)
          v30 = v32;
      }
      if (prime <= v30)
        prime = v30;
      if (prime < *(_QWORD *)&v29)
LABEL_47:
        std::__hash_table<std::string,AMSCore::StringUtils::CaseInsensitiveHash,AMSCore::StringUtils::CaseInsensitiveEqualTo,std::allocator<std::string>>::__do_rehash<true>(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v3 = v10 % v11;
      else
        v3 = v10;
    }
    else
    {
      v3 = (v11 - 1) & v10;
    }
  }
  v33 = *(_QWORD *)a1;
  v34 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v34)
  {
    *v22 = *v34;
LABEL_71:
    *v34 = v22;
    goto LABEL_72;
  }
  *v22 = *v21;
  *v21 = v22;
  *(_QWORD *)(v33 + 8 * v3) = v21;
  if (*v22)
  {
    v35 = *(_QWORD *)(*v22 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v35 >= v11)
        v35 %= v11;
    }
    else
    {
      v35 &= v11 - 1;
    }
    v34 = (_QWORD *)(*(_QWORD *)a1 + 8 * v35);
    goto LABEL_71;
  }
LABEL_72:
  ++*(_QWORD *)(a1 + 24);
}

void sub_18CBD6090(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::string,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>>::~unique_ptr[abi:fe180100]((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree_remove[abi:fe180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  int v5;
  uint64_t **v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;
  uint64_t **v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *a2;
  v3 = a2;
  if (*a2)
  {
    v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      v3 = a2;
      goto LABEL_7;
    }
    do
    {
      v3 = v4;
      v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  v2 = v3[1];
  if (v2)
  {
LABEL_7:
    v5 = 0;
    *(_QWORD *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  v5 = 1;
LABEL_8:
  v6 = (uint64_t **)v3[2];
  v7 = *v6;
  if (*v6 == v3)
  {
    *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      v7 = 0;
      result = (uint64_t *)v2;
    }
    else
    {
      v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    v9 = a2[2];
    v3[2] = v9;
    *(_QWORD *)(v9 + 8 * (*(_QWORD *)a2[2] != (_QWORD)a2)) = v3;
    v11 = *a2;
    v10 = a2[1];
    *(_QWORD *)(v11 + 16) = v3;
    *v3 = v11;
    v3[1] = v10;
    if (v10)
      *(_QWORD *)(v10 + 16) = v3;
    *((_BYTE *)v3 + 24) = *((_BYTE *)a2 + 24);
    if (result == a2)
      result = v3;
  }
  if (!v8 || !result)
    return result;
  if (!v5)
  {
    *(_BYTE *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    v14 = (uint64_t **)v7[2];
    if (*v14 != v7)
      break;
    if (*((_BYTE *)v7 + 24))
    {
      v16 = (_QWORD *)*v7;
      if (*v7)
        goto LABEL_50;
    }
    else
    {
      *((_BYTE *)v7 + 24) = 1;
      *((_BYTE *)v14 + 24) = 0;
      v20 = (uint64_t *)v7[1];
      *v14 = v20;
      if (v20)
        v20[2] = (uint64_t)v14;
      v7[2] = (uint64_t)v14[2];
      v14[2][*v14[2] != (_QWORD)v14] = (uint64_t)v7;
      v7[1] = (uint64_t)v14;
      v14[2] = v7;
      if (result == (uint64_t *)v14)
        result = v7;
      v7 = *v14;
      v16 = (_QWORD *)**v14;
      if (v16)
      {
LABEL_50:
        if (!*((_BYTE *)v16 + 24))
          goto LABEL_71;
      }
    }
    v21 = (uint64_t *)v7[1];
    if (v21 && !*((_BYTE *)v21 + 24))
    {
      if (v16 && !*((_BYTE *)v16 + 24))
      {
LABEL_71:
        v21 = v7;
      }
      else
      {
        *((_BYTE *)v21 + 24) = 1;
        *((_BYTE *)v7 + 24) = 0;
        v22 = *v21;
        v7[1] = *v21;
        if (v22)
          *(_QWORD *)(v22 + 16) = v7;
        v21[2] = v7[2];
        *(_QWORD *)(v7[2] + 8 * (*(_QWORD *)v7[2] != (_QWORD)v7)) = v21;
        *v21 = (uint64_t)v7;
        v7[2] = (uint64_t)v21;
        v16 = v7;
      }
      v27 = (uint64_t *)v21[2];
      *((_BYTE *)v21 + 24) = *((_BYTE *)v27 + 24);
      *((_BYTE *)v27 + 24) = 1;
      *((_BYTE *)v16 + 24) = 1;
      v28 = *v27;
      v29 = *(_QWORD *)(*v27 + 8);
      *v27 = v29;
      if (v29)
        *(_QWORD *)(v29 + 16) = v27;
      *(_QWORD *)(v28 + 16) = v27[2];
      *(_QWORD *)(v27[2] + 8 * (*(_QWORD *)v27[2] != (_QWORD)v27)) = v28;
      *(_QWORD *)(v28 + 8) = v27;
      v27[2] = v28;
      return result;
    }
    *((_BYTE *)v7 + 24) = 0;
    v12 = (uint64_t *)v7[2];
    if (*((_BYTE *)v12 + 24))
      v13 = v12 == result;
    else
      v13 = 1;
    if (v13)
      goto LABEL_61;
LABEL_26:
    v7 = *(uint64_t **)(v12[2] + 8 * (*(_QWORD *)v12[2] == (_QWORD)v12));
  }
  if (*((_BYTE *)v7 + 24))
  {
    v15 = (_QWORD *)*v7;
    if (!*v7)
    {
LABEL_40:
      v19 = (uint64_t *)v7[1];
      if (v19 && !*((_BYTE *)v19 + 24))
        goto LABEL_67;
      *((_BYTE *)v7 + 24) = 0;
      v12 = (uint64_t *)v7[2];
      if (v12 == result)
      {
        v12 = result;
LABEL_61:
        *((_BYTE *)v12 + 24) = 1;
        return result;
      }
      if (!*((_BYTE *)v12 + 24))
        goto LABEL_61;
      goto LABEL_26;
    }
  }
  else
  {
    *((_BYTE *)v7 + 24) = 1;
    *((_BYTE *)v14 + 24) = 0;
    v17 = v14[1];
    v18 = (uint64_t *)*v17;
    v14[1] = (uint64_t *)*v17;
    if (v18)
      v18[2] = (uint64_t)v14;
    v17[2] = (uint64_t)v14[2];
    v14[2][*v14[2] != (_QWORD)v14] = (uint64_t)v17;
    *v17 = (uint64_t)v14;
    v14[2] = v17;
    if (result == (uint64_t *)*v7)
      result = v7;
    v7 = *(uint64_t **)(*v7 + 8);
    v15 = (_QWORD *)*v7;
    if (!*v7)
      goto LABEL_40;
  }
  if (*((_BYTE *)v15 + 24))
    goto LABEL_40;
  v19 = (uint64_t *)v7[1];
  if (v19 && !*((_BYTE *)v19 + 24))
  {
LABEL_67:
    v15 = v7;
  }
  else
  {
    *((_BYTE *)v15 + 24) = 1;
    *((_BYTE *)v7 + 24) = 0;
    v23 = v15[1];
    *v7 = v23;
    if (v23)
      *(_QWORD *)(v23 + 16) = v7;
    v15[2] = v7[2];
    *(_QWORD *)(v7[2] + 8 * (*(_QWORD *)v7[2] != (_QWORD)v7)) = v15;
    v15[1] = v7;
    v7[2] = (uint64_t)v15;
    v19 = v7;
  }
  v24 = v15[2];
  *((_BYTE *)v15 + 24) = *(_BYTE *)(v24 + 24);
  *(_BYTE *)(v24 + 24) = 1;
  *((_BYTE *)v19 + 24) = 1;
  v25 = *(uint64_t **)(v24 + 8);
  v26 = *v25;
  *(_QWORD *)(v24 + 8) = *v25;
  if (v26)
    *(_QWORD *)(v26 + 16) = v24;
  v25[2] = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(*(_QWORD *)(v24 + 16) + 8 * (**(_QWORD **)(v24 + 16) != v24)) = v25;
  *v25 = v24;
  *(_QWORD *)(v24 + 16) = v25;
  return result;
}

void AMSCore::getValueByKey<std::string,std::map<std::string,AMSCore::Any> const>(uint64_t a1, uint64_t *a2, void *a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::runtime_error v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  std::runtime_error v21;
  __int128 v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  std::runtime_error v28;
  __int128 v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34;
  uint64_t v35[2];
  std::runtime_error v36;
  __int128 v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;

  v35[0] = (uint64_t)a3;
  v35[1] = a4;
  AMSCore::getValueByKey((uint64_t)&v28, a2, a3, a4);
  if (v34)
  {
    if (LODWORD(v28.__vftable[1].~runtime_error) == 5)
    {
      *(_QWORD *)a1 = v28.__vftable;
      *(_BYTE *)(a1 + 72) = 1;
      goto LABEL_28;
    }
    LOBYTE(v36.__vftable) = 34;
    AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,char const(&)[32],std::string_view &,char>((uint64_t)&v21, 0xCu, "unable to find value with key \"", v35, &v36);
    std::runtime_error::runtime_error((std::runtime_error *)a1, &v21);
    *(_OWORD *)(a1 + 16) = v22;
    *(_QWORD *)a1 = off_1E2521330;
    v5 = v24;
    *(_QWORD *)(a1 + 32) = v23;
    *(_QWORD *)(a1 + 40) = v5;
    v6 = a1 + 40;
    v7 = v25;
    *(_QWORD *)(a1 + 48) = v25;
    if (v7)
    {
      *(_QWORD *)(v5 + 16) = v6;
      v23 = &v24;
      v24 = 0;
      v25 = 0;
      v5 = 0;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = v6;
    }
    *(_OWORD *)(a1 + 56) = v26;
    v26 = 0uLL;
    *(_BYTE *)(a1 + 72) = 0;
    v21.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    goto LABEL_27;
  }
  std::runtime_error::runtime_error(&v21, &v28);
  v22 = v29;
  v21.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v23 = v30;
  v24 = v31;
  v25 = v32;
  if (v32)
  {
    *(_QWORD *)(v31 + 16) = &v24;
    v30 = &v31;
    v31 = 0;
    v32 = 0;
  }
  else
  {
    v23 = &v24;
  }
  v26 = v33;
  v33 = 0uLL;
  v27 = 1;
  std::runtime_error::runtime_error(&v36, &v21);
  v37 = v22;
  v36.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v38 = v23;
  v39 = v24;
  v40 = v25;
  if (v25)
  {
    *(_QWORD *)(v24 + 16) = &v39;
    v23 = &v24;
    v24 = 0;
    v25 = 0;
  }
  else
  {
    v38 = &v39;
  }
  v41 = v26;
  v26 = 0uLL;
  std::runtime_error::runtime_error(&v15, &v36);
  v16 = v37;
  v15.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v8 = (unsigned int *)v39;
  v17 = v38;
  v18 = v39;
  v19 = v40;
  if (v40)
  {
    *(_QWORD *)(v39 + 16) = &v18;
    v8 = 0;
    v38 = &v39;
    v39 = 0;
    v40 = 0;
  }
  else
  {
    v17 = &v18;
  }
  v20 = v41;
  v41 = 0uLL;
  v36.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v38, v8);
  MEMORY[0x18D7898AC](&v36);
  std::runtime_error::runtime_error((std::runtime_error *)a1, &v15);
  *(_OWORD *)(a1 + 16) = v16;
  *(_QWORD *)a1 = off_1E2521330;
  v9 = v18;
  *(_QWORD *)(a1 + 32) = v17;
  *(_QWORD *)(a1 + 40) = v9;
  v10 = a1 + 40;
  v11 = v19;
  *(_QWORD *)(a1 + 48) = v19;
  if (v11)
  {
    *(_QWORD *)(v9 + 16) = v10;
    v9 = 0;
    v17 = &v18;
    v18 = 0;
    v19 = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = v10;
  }
  *(_OWORD *)(a1 + 56) = v20;
  v20 = 0uLL;
  *(_BYTE *)(a1 + 72) = 0;
  v15.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v17, (unsigned int *)v9);
  MEMORY[0x18D7898AC](&v15);
  if (v27)
  {
    v21.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v12 = (std::__shared_weak_count *)*((_QWORD *)&v26 + 1);
    if (*((_QWORD *)&v26 + 1))
    {
      v13 = (unint64_t *)(*((_QWORD *)&v26 + 1) + 8);
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v5 = v24;
LABEL_27:
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v23, (unsigned int *)v5);
    MEMORY[0x18D7898AC](&v21);
  }
LABEL_28:
  if (!v34)
    ((void (*)(std::runtime_error *))v28.~runtime_error)(&v28);
}

void sub_18CBD6794(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void (**a29)(_QWORD),uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  if (!a38)
    (*a29)(&a29);
  _Unwind_Resume(exception_object);
}

uint64_t AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,char const(&)[32],std::string_view &,char>(uint64_t a1, unsigned int a2, const char *a3, uint64_t *a4, _BYTE *a5)
{
  std::system_error_vtbl *v10;
  uint64_t v11;
  uint64_t v12;
  std::system_error_vtbl *v13;
  std::system_error_vtbl *v14;
  std::ios_base *v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  std::string __what_arg;
  std::system_error v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  void *__p[2];
  __int128 v29;
  int v30;
  uint64_t v31[19];
  _BYTE v32[9];
  std::error_code v33;

  v10 = (std::system_error_vtbl *)MEMORY[0x1E0DE4FE0];
  v11 = MEMORY[0x1E0DE4FE0] + 64;
  v12 = MEMORY[0x1E0DE4F60];
  v13 = *(std::system_error_vtbl **)(MEMORY[0x1E0DE4F60] + 8);
  v14 = *(std::system_error_vtbl **)(MEMORY[0x1E0DE4F60] + 16);
  v31[0] = MEMORY[0x1E0DE4FE0] + 64;
  v23.__vftable = v13;
  *(std::system_error_vtbl **)((char *)&v23.__vftable + (unint64_t)v13[-1].~system_error) = v14;
  v15 = (std::ios_base *)((char *)&v23 + (unint64_t)v23.__vftable[-1].~system_error);
  std::ios_base::init(v15, &v23.__imp_);
  v15[1].__vftable = 0;
  v15[1].__fmtflags_ = -1;
  v23.__vftable = v10 + 1;
  v31[0] = v11;
  std::streambuf::basic_streambuf();
  v16 = MEMORY[0x1E0DE4FB8];
  v23.__imp_.__imp_ = (const char *)(MEMORY[0x1E0DE4FB8] + 16);
  *(_OWORD *)__p = 0u;
  v29 = 0u;
  v30 = 16;
  v17 = strlen(a3);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v23, (uint64_t)a3, v17);
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v23, *a4, a4[1]);
  v32[0] = *a5;
  std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v23, (uint64_t)v32, 1);
  std::stringbuf::str[abi:fe180100]((uint64_t)&v23.__imp_, &__what_arg);
  v23.__vftable = *(std::system_error_vtbl **)v12;
  *(std::system_error_vtbl **)((char *)&v23.__vftable + (unint64_t)v23.__vftable[-1].~system_error) = *(std::system_error_vtbl **)(v12 + 24);
  v23.__imp_.__imp_ = (const char *)(v16 + 16);
  if (SBYTE7(v29) < 0)
    operator delete(__p[0]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x18D789B58](v31);
  *(_QWORD *)&v33.__val_ = a2;
  v33.__cat_ = (const std::error_category *)&AMSCore::Error::Category::generic(void)::instance;
  std::system_error::system_error(&v23, v33, &__what_arg);
  if (SHIBYTE(__what_arg.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__what_arg.__r_.__value_.__l.__data_);
  v25 = 0;
  v26 = 0;
  v23.__vftable = (std::system_error_vtbl *)off_1E2521330;
  v24 = &v25;
  v27 = 0uLL;
  std::runtime_error::runtime_error((std::runtime_error *)a1, &v23);
  *(std::error_code *)(a1 + 16) = v23.__ec_;
  *(_QWORD *)a1 = off_1E2521330;
  v18 = v25;
  *(_QWORD *)(a1 + 32) = v24;
  *(_QWORD *)(a1 + 40) = v18;
  v19 = a1 + 40;
  v20 = v26;
  *(_QWORD *)(a1 + 48) = v26;
  if (v20)
  {
    *(_QWORD *)(v18 + 16) = v19;
    v18 = 0;
    v24 = &v25;
    v25 = 0;
    v26 = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = v19;
  }
  *(_OWORD *)(a1 + 56) = v27;
  v27 = 0uLL;
  v23.__vftable = (std::system_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v24, (unsigned int *)v18);
  return MEMORY[0x18D7898AC](&v23);
}

void sub_18CBD69F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_18CBD6A10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  std::ostream::~ostream();
  MEMORY[0x18D789B58](a10);
  __clang_call_terminate(a1);
}

void AMSCore::getValueByKey<BOOL,std::map<std::string,AMSCore::Any> const>(uint64_t a1, uint64_t *a2, void *a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::runtime_error v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  std::runtime_error v21;
  __int128 v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  std::runtime_error v28;
  __int128 v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34;
  uint64_t v35[2];
  std::runtime_error v36;
  __int128 v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;

  v35[0] = (uint64_t)a3;
  v35[1] = a4;
  AMSCore::getValueByKey((uint64_t)&v28, a2, a3, a4);
  if (v34)
  {
    if (LODWORD(v28.__vftable[1].~runtime_error) == 1)
    {
      *(_BYTE *)a1 = v28.~runtime_error;
      *(_BYTE *)(a1 + 72) = 1;
      goto LABEL_28;
    }
    LOBYTE(v36.__vftable) = 34;
    AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,char const(&)[32],std::string_view &,char>((uint64_t)&v21, 0xCu, "unable to find value with key \"", v35, &v36);
    std::runtime_error::runtime_error((std::runtime_error *)a1, &v21);
    *(_OWORD *)(a1 + 16) = v22;
    *(_QWORD *)a1 = off_1E2521330;
    v5 = v24;
    *(_QWORD *)(a1 + 32) = v23;
    *(_QWORD *)(a1 + 40) = v5;
    v6 = a1 + 40;
    v7 = v25;
    *(_QWORD *)(a1 + 48) = v25;
    if (v7)
    {
      *(_QWORD *)(v5 + 16) = v6;
      v23 = &v24;
      v24 = 0;
      v25 = 0;
      v5 = 0;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = v6;
    }
    *(_OWORD *)(a1 + 56) = v26;
    v26 = 0uLL;
    *(_BYTE *)(a1 + 72) = 0;
    v21.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    goto LABEL_27;
  }
  std::runtime_error::runtime_error(&v21, &v28);
  v22 = v29;
  v21.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v23 = v30;
  v24 = v31;
  v25 = v32;
  if (v32)
  {
    *(_QWORD *)(v31 + 16) = &v24;
    v30 = &v31;
    v31 = 0;
    v32 = 0;
  }
  else
  {
    v23 = &v24;
  }
  v26 = v33;
  v33 = 0uLL;
  v27 = 1;
  std::runtime_error::runtime_error(&v36, &v21);
  v37 = v22;
  v36.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v38 = v23;
  v39 = v24;
  v40 = v25;
  if (v25)
  {
    *(_QWORD *)(v24 + 16) = &v39;
    v23 = &v24;
    v24 = 0;
    v25 = 0;
  }
  else
  {
    v38 = &v39;
  }
  v41 = v26;
  v26 = 0uLL;
  std::runtime_error::runtime_error(&v15, &v36);
  v16 = v37;
  v15.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v8 = (unsigned int *)v39;
  v17 = v38;
  v18 = v39;
  v19 = v40;
  if (v40)
  {
    *(_QWORD *)(v39 + 16) = &v18;
    v8 = 0;
    v38 = &v39;
    v39 = 0;
    v40 = 0;
  }
  else
  {
    v17 = &v18;
  }
  v20 = v41;
  v41 = 0uLL;
  v36.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v38, v8);
  MEMORY[0x18D7898AC](&v36);
  std::runtime_error::runtime_error((std::runtime_error *)a1, &v15);
  *(_OWORD *)(a1 + 16) = v16;
  *(_QWORD *)a1 = off_1E2521330;
  v9 = v18;
  *(_QWORD *)(a1 + 32) = v17;
  *(_QWORD *)(a1 + 40) = v9;
  v10 = a1 + 40;
  v11 = v19;
  *(_QWORD *)(a1 + 48) = v19;
  if (v11)
  {
    *(_QWORD *)(v9 + 16) = v10;
    v9 = 0;
    v17 = &v18;
    v18 = 0;
    v19 = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = v10;
  }
  *(_OWORD *)(a1 + 56) = v20;
  v20 = 0uLL;
  *(_BYTE *)(a1 + 72) = 0;
  v15.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v17, (unsigned int *)v9);
  MEMORY[0x18D7898AC](&v15);
  if (v27)
  {
    v21.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v12 = (std::__shared_weak_count *)*((_QWORD *)&v26 + 1);
    if (*((_QWORD *)&v26 + 1))
    {
      v13 = (unint64_t *)(*((_QWORD *)&v26 + 1) + 8);
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v5 = v24;
LABEL_27:
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v23, (unsigned int *)v5);
    MEMORY[0x18D7898AC](&v21);
  }
LABEL_28:
  if (!v34)
    ((void (*)(std::runtime_error *))v28.~runtime_error)(&v28);
}

void sub_18CBD6D90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void (**a29)(_QWORD),uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  if (!a38)
    (*a29)(&a29);
  _Unwind_Resume(exception_object);
}

uint64_t std::unordered_set<std::string>::~unordered_set[abi:fe180100](uint64_t a1)
{
  void **v2;
  void *v3;
  void **v5;

  v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      v5 = (void **)*v2;
      if (*((char *)v2 + 39) < 0)
        operator delete(v2[2]);
      operator delete(v2);
      v2 = v5;
    }
    while (v5);
  }
  v3 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

void std::__shared_ptr_pointer<AMSCore::Task<std::unique_ptr<AMSCore::IiCloudAccount>,AMSCore::Error>::Promise *,AMSCore::Task<std::unique_ptr<AMSCore::IiCloudAccount>,AMSCore::Error>::Promise::get_return_object(void)::DetachPromise,std::allocator<AMSCore::Task<std::unique_ptr<AMSCore::IiCloudAccount>,AMSCore::Error>::Promise>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D789BDCLL);
}

uint64_t std::__shared_ptr_pointer<AMSCore::Task<std::unique_ptr<AMSCore::IiCloudAccount>,AMSCore::Error>::Promise *,AMSCore::Task<std::unique_ptr<AMSCore::IiCloudAccount>,AMSCore::Error>::Promise::get_return_object(void)::DetachPromise,std::allocator<AMSCore::Task<std::unique_ptr<AMSCore::IiCloudAccount>,AMSCore::Error>::Promise>>::__on_zero_shared(uint64_t result)
{
  uint64_t v1;
  unint64_t *v2;
  unint64_t v3;

  v1 = *(_QWORD *)(result + 24);
  v2 = (unint64_t *)(v1 + 96);
  do
    v3 = __ldaxr(v2);
  while (__stlxr(2uLL, v2));
  if (v3)
    return (*(uint64_t (**)(uint64_t))(v1 - 8))(v1 - 16);
  return result;
}

uint64_t std::__shared_ptr_pointer<AMSCore::Task<std::unique_ptr<AMSCore::IiCloudAccount>,AMSCore::Error>::Promise *,AMSCore::Task<std::unique_ptr<AMSCore::IiCloudAccount>,AMSCore::Error>::Promise::get_return_object(void)::DetachPromise,std::allocator<AMSCore::Task<std::unique_ptr<AMSCore::IiCloudAccount>,AMSCore::Error>::Promise>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN7AMSCore4TaskINSt3__110unique_ptrINS_14IiCloudAccountENS1_14default_deleteIS3_EEEENS_5ErrorEE7Pro"
                     "mise17get_return_objectEvE13DetachPromise"
    || ((v3 & (unint64_t)"ZN7AMSCore4TaskINSt3__110unique_ptrINS_14IiCloudAccountENS1_14default_deleteIS3_EEEENS_5"
                                "ErrorEE7Promise17get_return_objectEvE13DetachPromise" & 0x8000000000000000) != 0) != __OFSUB__(v3, "ZN7AMSCore4TaskINSt3__110unique_ptrINS_14IiCloudAccountENS1_14default_deleteIS3_EEEENS_5ErrorEE7Promise17get_return_objectEvE13DetachPromise")&& !strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN7AMSCore4TaskINSt3__110unique_ptrINS_14IiCloudAccountENS1_14default_deleteIS3_EEEENS_5ErrorEE7Promise17get_return_objectEvE13DetachPromise" & 0x7FFFFFFFFFFFFFFFLL)))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void AMSCore::AccountIdentity::~AccountIdentity(void **this)
{
  if (*((char *)this + 63) < 0)
  {
    operator delete(this[5]);
    if (!*((_BYTE *)this + 24))
      return;
  }
  else if (!*((_BYTE *)this + 24))
  {
    return;
  }
  if (*((char *)this + 23) < 0)
    operator delete(*this);
}

_BYTE *AMSCore::IAccountProvider::getActiveOrLocalMediaAccount(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  char *v6;
  unint64_t v7;
  std::string::size_type v8;
  const std::string::value_type *v9;
  std::string *v10;
  std::string *v11;
  _DWORD *v12;
  int v13;
  unsigned int v14;
  _QWORD *v15;
  std::runtime_error *v16;
  const std::string::value_type *v17;
  _BYTE *result;
  __int128 v19;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  const std::runtime_error *v24;
  char v25;
  std::runtime_error_vtbl *v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  std::__shared_weak_count *v36;
  unint64_t *p_shared_owners;
  unint64_t v38;
  uint64_t v39;
  int v40;
  const std::string::value_type *v41;
  std::string::size_type v42;
  __int128 v43;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  const std::runtime_error *v48;
  int v49;
  std::runtime_error_vtbl *v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  std::runtime_error *v72;
  std::runtime_error *v73;
  uint64_t v74;
  __int128 v75;

  v6 = (char *)operator new(0x1C0uLL);
  v7 = (unint64_t)v6;
  *(_QWORD *)v6 = AMSCore::IAccountProvider::getActiveOrLocalMediaAccount;
  *((_QWORD *)v6 + 1) = AMSCore::IAccountProvider::getActiveOrLocalMediaAccount;
  v71 = v6 + 360;
  v72 = (std::runtime_error *)(v6 + 232);
  v9 = *(const std::string::value_type **)a3;
  v8 = *(_QWORD *)(a3 + 8);
  v10 = (std::string *)(v6 + 312);
  v11 = (std::string *)(v6 + 336);
  v12 = v6 + 432;
  v73 = (std::runtime_error *)(v6 + 152);
  v74 = (uint64_t)(v6 + 16);
  *((_QWORD *)v6 + 47) = a2;
  *((_QWORD *)v6 + 48) = v9;
  *((_QWORD *)v6 + 49) = v8;
  *((_DWORD *)v6 + 108) = *(_DWORD *)(a3 + 16);
  *(_DWORD *)(v6 + 435) = *(_DWORD *)(a3 + 19);
  v13 = *(char *)(a3 + 23);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v6[440] = v13;
  do
    v14 = __ldaxr((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
  while (__stlxr(v14 + 1, (unsigned int *)&AMSCore::TaskCounter::getCount(void)::count));
  v6[24] = 0;
  v15 = v6 + 24;
  v6[104] = 0;
  *((_QWORD *)v6 + 14) = 0;
  *((_QWORD *)v6 + 18) = 0;
  std::shared_ptr<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise>::shared_ptr[abi:fe180100]<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise,AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::get_return_object(void)::DetachPromise,void>(&v75, v74);
  *a1 = v75;
  if (v13 < 0)
  {
    v17 = v9;
    v16 = v73;
    std::string::__init_copy_ctor_external(v10, v17, v8);
  }
  else
  {
    *(_QWORD *)(v7 + 312) = v9;
    *(_QWORD *)(v7 + 320) = v8;
    *(_DWORD *)(v7 + 328) = *v12;
    *(_DWORD *)(v7 + 331) = *(_DWORD *)((char *)v12 + 3);
    *(_BYTE *)(v7 + 335) = v13;
    v16 = v73;
  }
  result = (_BYTE *)(*(uint64_t (**)(uint64_t, std::string *))(*(_QWORD *)a2 + 32))(a2, v10);
  v19 = *(_OWORD *)(v7 + 152);
  *(_OWORD *)(v7 + 400) = v19;
  v16->__vftable = 0;
  v16->__imp_.__imp_ = 0;
  if (!atomic_load((unint64_t *)(v19 + 96)))
  {
    v71[79] = 0;
    v21 = (unint64_t *)(*(_QWORD *)(v7 + 400) + 96);
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v7, v21));
    if (!v22)
      return result;
  }
  v23 = *(_QWORD *)(v7 + 400);
  if (!*(_BYTE *)(v23 + 88))
    goto LABEL_86;
  v24 = (const std::runtime_error *)(v23 + 8);
  v25 = *(_BYTE *)(v23 + 80);
  if (v25)
  {
    v26 = v24->__vftable;
    v24->__vftable = 0;
    v72->__vftable = v26;
  }
  else
  {
    std::runtime_error::runtime_error(v72, v24);
    *(_OWORD *)(v7 + 248) = *(_OWORD *)(v23 + 24);
    *(_QWORD *)(v7 + 232) = off_1E2521330;
    v27 = (_QWORD *)(v23 + 48);
    v28 = *(_QWORD *)(v23 + 48);
    v29 = v7 + 272;
    *(_QWORD *)(v7 + 264) = *(_QWORD *)(v23 + 40);
    *(_QWORD *)(v7 + 272) = v28;
    v30 = *(_QWORD *)(v23 + 56);
    *(_QWORD *)(v7 + 280) = v30;
    if (v30)
    {
      *(_QWORD *)(v28 + 16) = v29;
      *(_QWORD *)(v23 + 40) = v27;
      *v27 = 0;
      *(_QWORD *)(v23 + 56) = 0;
    }
    else
    {
      *(_QWORD *)(v7 + 264) = v29;
    }
    v31 = *(_QWORD *)(v7 + 400);
    *(_OWORD *)(v7 + 288) = *(_OWORD *)(v31 + 64);
    *(_QWORD *)(v31 + 64) = 0;
    *(_QWORD *)(v31 + 72) = 0;
  }
  *(_BYTE *)(v7 + 304) = v25;
  v32 = *(_QWORD *)(v7 + 408);
  if (v32)
  {
    v33 = (unint64_t *)(v32 + 8);
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      v35 = *(std::__shared_weak_count **)(v7 + 408);
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
  v36 = *(std::__shared_weak_count **)(v7 + 160);
  if (!v36)
    goto LABEL_26;
  p_shared_owners = (unint64_t *)&v36->__shared_owners_;
  do
    v38 = __ldaxr(p_shared_owners);
  while (__stlxr(v38 - 1, p_shared_owners));
  if (!v38)
  {
    ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
    std::__shared_weak_count::__release_weak(v36);
    if ((*(char *)(v7 + 335) & 0x80000000) == 0)
    {
LABEL_27:
      if (!*(_BYTE *)(v7 + 304))
        goto LABEL_36;
      goto LABEL_31;
    }
  }
  else
  {
LABEL_26:
    if ((*(char *)(v7 + 335) & 0x80000000) == 0)
      goto LABEL_27;
  }
  operator delete(v10->__r_.__value_.__l.__data_);
  if (!*(_BYTE *)(v7 + 304))
    goto LABEL_36;
LABEL_31:
  if (*(_QWORD *)(v7 + 232))
  {
    if (*(_BYTE *)(v7 + 104))
    {
      v39 = *(_QWORD *)(v7 + 24);
      if (*(_BYTE *)(v7 + 96))
      {
        *v15 = 0;
        if (v39)
          (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
      }
      else
      {
        (*(void (**)(unint64_t))v39)(v7 + 24);
      }
    }
    *(_QWORD *)(v7 + 24) = *(_QWORD *)(v7 + 232);
    *(_BYTE *)(v7 + 96) = 1;
    *(_BYTE *)(v7 + 104) = 1;
    goto LABEL_77;
  }
LABEL_36:
  v40 = *(char *)(v7 + 440);
  v41 = *(const std::string::value_type **)(v7 + 384);
  v42 = *(_QWORD *)(v7 + 392);
  if (v40 < 0)
  {
    std::string::__init_copy_ctor_external(v11, v41, v42);
  }
  else
  {
    *(_QWORD *)(v7 + 336) = v41;
    *(_QWORD *)(v7 + 344) = v42;
    *(_DWORD *)(v7 + 352) = *v12;
    *(_DWORD *)(v7 + 355) = *(_DWORD *)((char *)v12 + 3);
    *(_BYTE *)(v7 + 359) = v40;
  }
  result = (_BYTE *)(*(uint64_t (**)(_QWORD, std::string *))(**(_QWORD **)(v7 + 376) + 48))(*(_QWORD *)(v7 + 376), v11);
  v43 = *(_OWORD *)v71;
  *(_OWORD *)(v7 + 416) = *(_OWORD *)v71;
  *(_QWORD *)v71 = 0;
  *((_QWORD *)v71 + 1) = 0;
  if (atomic_load((unint64_t *)(v43 + 96)))
    goto LABEL_43;
  v71[79] = 1;
  v45 = (unint64_t *)(*(_QWORD *)(v7 + 416) + 96);
  do
    v46 = __ldaxr(v45);
  while (__stlxr(v7, v45));
  if (v46)
  {
LABEL_43:
    v47 = *(_QWORD *)(v7 + 416);
    if (*(_BYTE *)(v47 + 88))
    {
      v48 = (const std::runtime_error *)(v47 + 8);
      v49 = *(unsigned __int8 *)(v47 + 80);
      if (*(_BYTE *)(v47 + 80))
      {
        v50 = v48->__vftable;
        v48->__vftable = 0;
        v16->__vftable = v50;
      }
      else
      {
        std::runtime_error::runtime_error(v16, v48);
        *(_OWORD *)(v7 + 168) = *(_OWORD *)(v47 + 24);
        v51 = (_QWORD *)(v47 + 48);
        v52 = *(_QWORD *)(v47 + 48);
        *(_QWORD *)(v7 + 192) = v52;
        v53 = v7 + 192;
        *(_QWORD *)(v7 + 152) = off_1E2521330;
        *(_QWORD *)(v7 + 184) = *(_QWORD *)(v47 + 40);
        v54 = *(_QWORD *)(v47 + 56);
        *(_QWORD *)(v7 + 200) = v54;
        if (v54)
        {
          *(_QWORD *)(v52 + 16) = v53;
          *(_QWORD *)(v47 + 40) = v51;
          *v51 = 0;
          *(_QWORD *)(v47 + 56) = 0;
        }
        else
        {
          *(_QWORD *)(v7 + 184) = v53;
        }
        v55 = *(_QWORD *)(v7 + 416);
        *(_OWORD *)(v7 + 208) = *(_OWORD *)(v55 + 64);
        *(_QWORD *)(v55 + 64) = 0;
        *(_QWORD *)(v55 + 72) = 0;
      }
      *(_BYTE *)(v7 + 224) = v49;
      if (*(_BYTE *)(v7 + 104))
      {
        v56 = *(_QWORD *)(v7 + 24);
        if (*(_BYTE *)(v7 + 96))
        {
          *v15 = 0;
          if (v56)
            (*(void (**)(uint64_t))(*(_QWORD *)v56 + 8))(v56);
        }
        else
        {
          (*(void (**)(unint64_t))v56)(v7 + 24);
        }
        *(_BYTE *)(v7 + 104) = 0;
        v49 = *(unsigned __int8 *)(v7 + 224);
      }
      if (v49)
      {
        v57 = *(_QWORD *)(v7 + 152);
        *(_QWORD *)(v7 + 152) = 0;
        *(_QWORD *)(v7 + 24) = v57;
        *(_BYTE *)(v7 + 96) = v49;
        *(_BYTE *)(v7 + 104) = 1;
      }
      else
      {
        std::runtime_error::runtime_error((std::runtime_error *)(v7 + 24), v16);
        v66 = (_QWORD *)(v7 + 192);
        v67 = *(_QWORD *)(v7 + 192);
        *(_QWORD *)(v7 + 64) = v67;
        v68 = v7 + 64;
        *(_OWORD *)(v7 + 40) = *(_OWORD *)(v7 + 168);
        *(_QWORD *)(v7 + 24) = off_1E2521330;
        *(_QWORD *)(v7 + 56) = *(_QWORD *)(v7 + 184);
        v69 = *(_QWORD *)(v7 + 200);
        *(_QWORD *)(v7 + 72) = v69;
        if (v69)
        {
          *(_QWORD *)(v67 + 16) = v68;
          *(_QWORD *)(v7 + 184) = v66;
          *v66 = 0;
          *(_QWORD *)(v7 + 200) = 0;
        }
        else
        {
          *(_QWORD *)(v7 + 56) = v68;
        }
        *(_OWORD *)(v7 + 80) = *(_OWORD *)(v7 + 208);
        *(_QWORD *)(v7 + 208) = 0;
        *(_QWORD *)(v7 + 216) = 0;
        v70 = *(_QWORD *)(v7 + 152);
        *(_BYTE *)(v7 + 96) = 0;
        *(_BYTE *)(v7 + 104) = 1;
        if (*(_BYTE *)(v7 + 224))
        {
          v16->__vftable = 0;
          if (v70)
            (*(void (**)(uint64_t))(*(_QWORD *)v70 + 8))(v70);
        }
        else
        {
          (*(void (**)(std::runtime_error *))v70)(v16);
        }
      }
      v58 = *(_QWORD *)(v7 + 424);
      if (v58)
      {
        v59 = (unint64_t *)(v58 + 8);
        do
          v60 = __ldaxr(v59);
        while (__stlxr(v60 - 1, v59));
        if (!v60)
        {
          v61 = *(std::__shared_weak_count **)(v7 + 424);
          ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
          std::__shared_weak_count::__release_weak(v61);
        }
      }
      v62 = *(std::__shared_weak_count **)(v7 + 368);
      if (!v62)
        goto LABEL_69;
      v63 = (unint64_t *)&v62->__shared_owners_;
      do
        v64 = __ldaxr(v63);
      while (__stlxr(v64 - 1, v63));
      if (!v64)
      {
        ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
        std::__shared_weak_count::__release_weak(v62);
        if ((*(char *)(v7 + 359) & 0x80000000) == 0)
        {
LABEL_71:
          v65 = *(_QWORD *)(v7 + 232);
          if (*(_BYTE *)(v7 + 304))
          {
            v72->__vftable = 0;
            if (v65)
              (*(void (**)(uint64_t))(*(_QWORD *)v65 + 8))(v65);
          }
          else
          {
            (*(void (**)(std::runtime_error *))v65)(v72);
          }
LABEL_77:
          *(_QWORD *)(v7 + 152) = v74;
          *(_QWORD *)v7 = 0;
          return AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::Awaiter::await_suspend(v16);
        }
      }
      else
      {
LABEL_69:
        if ((*(char *)(v7 + 359) & 0x80000000) == 0)
          goto LABEL_71;
      }
      operator delete(v11->__r_.__value_.__l.__data_);
      goto LABEL_71;
    }
LABEL_86:
    __break(1u);
  }
  return result;
}

void sub_18CBD7538(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _QWORD *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v14;

  v14 = *(_QWORD *)(v12 + 232);
  if (*(_BYTE *)(v12 + 304))
  {
    *a10 = 0;
    if (v14)
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
  }
  else
  {
    (*(void (**)(_QWORD *))v14)(a10);
  }
  __cxa_begin_catch(a1);
  AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::unhandled_exception();
}

void sub_18CBD7588()
{
  __cxa_end_catch();
  JUMPOUT(0x18CBD748CLL);
}

_BYTE *AMSCore::IAccountProvider::getActiveOrLocalMediaAccount(_BYTE *result)
{
  unint64_t v1;
  std::runtime_error *v2;
  std::runtime_error_vtbl **v3;
  std::string *v4;
  _BYTE *v5;
  uint64_t v6;
  const std::runtime_error *v7;
  int v8;
  std::runtime_error_vtbl *v9;
  uint64_t v10;
  const std::runtime_error *v11;
  char v12;
  std::runtime_error_vtbl *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  std::__shared_weak_count *v43;
  unint64_t *p_shared_owners;
  unint64_t v45;
  uint64_t v46;
  int v47;
  const std::string::value_type *v48;
  std::string::size_type v49;
  __int128 v50;
  unint64_t *v52;
  unint64_t v53;

  v1 = (unint64_t)result;
  v2 = (std::runtime_error *)(result + 152);
  v3 = (std::runtime_error_vtbl **)(result + 232);
  v4 = (std::string *)(result + 336);
  v5 = result + 16;
  if (result[439])
    goto LABEL_2;
  v10 = *((_QWORD *)result + 50);
  if (!*(_BYTE *)(v10 + 88))
  {
LABEL_78:
    __break(1u);
    return result;
  }
  v11 = (const std::runtime_error *)(v10 + 8);
  v12 = *(_BYTE *)(v10 + 80);
  if (v12)
  {
    v13 = v11->__vftable;
    v11->__vftable = 0;
    *v3 = v13;
  }
  else
  {
    std::runtime_error::runtime_error((std::runtime_error *)(result + 232), v11);
    *(_OWORD *)(v1 + 248) = *(_OWORD *)(v10 + 24);
    *(_QWORD *)(v1 + 232) = off_1E2521330;
    v18 = (_QWORD *)(v10 + 48);
    v19 = *(_QWORD *)(v10 + 48);
    v20 = v1 + 272;
    *(_QWORD *)(v1 + 264) = *(_QWORD *)(v10 + 40);
    *(_QWORD *)(v1 + 272) = v19;
    v21 = *(_QWORD *)(v10 + 56);
    *(_QWORD *)(v1 + 280) = v21;
    if (v21)
    {
      *(_QWORD *)(v19 + 16) = v20;
      *(_QWORD *)(v10 + 40) = v18;
      *v18 = 0;
      *(_QWORD *)(v10 + 56) = 0;
    }
    else
    {
      *(_QWORD *)(v1 + 264) = v20;
    }
    v38 = *(_QWORD *)(v1 + 400);
    *(_OWORD *)(v1 + 288) = *(_OWORD *)(v38 + 64);
    *(_QWORD *)(v38 + 64) = 0;
    *(_QWORD *)(v38 + 72) = 0;
  }
  *(_BYTE *)(v1 + 304) = v12;
  v39 = *(_QWORD *)(v1 + 408);
  if (v39)
  {
    v40 = (unint64_t *)(v39 + 8);
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      v42 = *(std::__shared_weak_count **)(v1 + 408);
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
    }
  }
  v43 = *(std::__shared_weak_count **)(v1 + 160);
  if (!v43)
    goto LABEL_57;
  p_shared_owners = (unint64_t *)&v43->__shared_owners_;
  do
    v45 = __ldaxr(p_shared_owners);
  while (__stlxr(v45 - 1, p_shared_owners));
  if (!v45)
  {
    ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
    std::__shared_weak_count::__release_weak(v43);
    if ((*(char *)(v1 + 335) & 0x80000000) == 0)
    {
LABEL_58:
      if (!*(_BYTE *)(v1 + 304))
        goto LABEL_67;
      goto LABEL_62;
    }
  }
  else
  {
LABEL_57:
    if ((*(char *)(v1 + 335) & 0x80000000) == 0)
      goto LABEL_58;
  }
  operator delete(*(void **)(v1 + 312));
  if (!*(_BYTE *)(v1 + 304))
    goto LABEL_67;
LABEL_62:
  if (*(_QWORD *)(v1 + 232))
  {
    if (*(_BYTE *)(v1 + 104))
    {
      v46 = *(_QWORD *)(v1 + 24);
      if (*(_BYTE *)(v1 + 96))
      {
        *(_QWORD *)(v1 + 24) = 0;
        if (v46)
          (*(void (**)(uint64_t))(*(_QWORD *)v46 + 8))(v46);
      }
      else
      {
        (*(void (**)(unint64_t))v46)(v1 + 24);
      }
    }
    *(_QWORD *)(v1 + 24) = *(_QWORD *)(v1 + 232);
    *(_BYTE *)(v1 + 96) = 1;
    *(_BYTE *)(v1 + 104) = 1;
    goto LABEL_77;
  }
LABEL_67:
  v47 = *(char *)(v1 + 440);
  v48 = *(const std::string::value_type **)(v1 + 384);
  v49 = *(_QWORD *)(v1 + 392);
  if (v47 < 0)
  {
    std::string::__init_copy_ctor_external(v4, v48, v49);
  }
  else
  {
    *(_QWORD *)(v1 + 336) = v48;
    *(_QWORD *)(v1 + 344) = v49;
    *(_DWORD *)(v1 + 352) = *(_DWORD *)(v1 + 432);
    *(_DWORD *)(v1 + 355) = *(_DWORD *)(v1 + 435);
    *(_BYTE *)(v1 + 359) = v47;
  }
  result = (_BYTE *)(*(uint64_t (**)(_QWORD, std::string *))(**(_QWORD **)(v1 + 376) + 48))(*(_QWORD *)(v1 + 376), v4);
  v50 = *(_OWORD *)(v1 + 360);
  *(_OWORD *)(v1 + 416) = v50;
  *(_QWORD *)(v1 + 360) = 0;
  *(_QWORD *)(v1 + 368) = 0;
  if (atomic_load((unint64_t *)(v50 + 96)))
    goto LABEL_2;
  *(_BYTE *)(v1 + 439) = 1;
  v52 = (unint64_t *)(*(_QWORD *)(v1 + 416) + 96);
  do
    v53 = __ldaxr(v52);
  while (__stlxr(v1, v52));
  if (v53)
  {
LABEL_2:
    v6 = *(_QWORD *)(v1 + 416);
    if (*(_BYTE *)(v6 + 88))
    {
      v7 = (const std::runtime_error *)(v6 + 8);
      v8 = *(unsigned __int8 *)(v6 + 80);
      if (*(_BYTE *)(v6 + 80))
      {
        v9 = v7->__vftable;
        v7->__vftable = 0;
        v2->__vftable = v9;
      }
      else
      {
        std::runtime_error::runtime_error(v2, v7);
        *(_OWORD *)(v1 + 168) = *(_OWORD *)(v6 + 24);
        v14 = (_QWORD *)(v6 + 48);
        v15 = *(_QWORD *)(v6 + 48);
        *(_QWORD *)(v1 + 192) = v15;
        v16 = v1 + 192;
        *(_QWORD *)(v1 + 152) = off_1E2521330;
        *(_QWORD *)(v1 + 184) = *(_QWORD *)(v6 + 40);
        v17 = *(_QWORD *)(v6 + 56);
        *(_QWORD *)(v1 + 200) = v17;
        if (v17)
        {
          *(_QWORD *)(v15 + 16) = v16;
          *(_QWORD *)(v6 + 40) = v14;
          *v14 = 0;
          *(_QWORD *)(v6 + 56) = 0;
        }
        else
        {
          *(_QWORD *)(v1 + 184) = v16;
        }
        v22 = *(_QWORD *)(v1 + 416);
        *(_OWORD *)(v1 + 208) = *(_OWORD *)(v22 + 64);
        *(_QWORD *)(v22 + 64) = 0;
        *(_QWORD *)(v22 + 72) = 0;
      }
      *(_BYTE *)(v1 + 224) = v8;
      if (*(_BYTE *)(v1 + 104))
      {
        v23 = *(_QWORD *)(v1 + 24);
        if (*(_BYTE *)(v1 + 96))
        {
          *(_QWORD *)(v1 + 24) = 0;
          if (v23)
            (*(void (**)(uint64_t))(*(_QWORD *)v23 + 8))(v23);
        }
        else
        {
          (*(void (**)(unint64_t))v23)(v1 + 24);
        }
        *(_BYTE *)(v1 + 104) = 0;
        v8 = *(unsigned __int8 *)(v1 + 224);
      }
      if (v8)
      {
        v24 = *(_QWORD *)(v1 + 152);
        *(_QWORD *)(v1 + 152) = 0;
        *(_QWORD *)(v1 + 24) = v24;
        *(_BYTE *)(v1 + 96) = v8;
        *(_BYTE *)(v1 + 104) = 1;
      }
      else
      {
        std::runtime_error::runtime_error((std::runtime_error *)(v1 + 24), v2);
        v33 = (_QWORD *)(v1 + 192);
        v34 = *(_QWORD *)(v1 + 192);
        *(_QWORD *)(v1 + 64) = v34;
        v35 = v1 + 64;
        *(_OWORD *)(v1 + 40) = *(_OWORD *)(v1 + 168);
        *(_QWORD *)(v1 + 24) = off_1E2521330;
        *(_QWORD *)(v1 + 56) = *(_QWORD *)(v1 + 184);
        v36 = *(_QWORD *)(v1 + 200);
        *(_QWORD *)(v1 + 72) = v36;
        if (v36)
        {
          *(_QWORD *)(v34 + 16) = v35;
          *(_QWORD *)(v1 + 184) = v33;
          *v33 = 0;
          *(_QWORD *)(v1 + 200) = 0;
        }
        else
        {
          *(_QWORD *)(v1 + 56) = v35;
        }
        *(_OWORD *)(v1 + 80) = *(_OWORD *)(v1 + 208);
        *(_QWORD *)(v1 + 208) = 0;
        *(_QWORD *)(v1 + 216) = 0;
        v37 = *(_QWORD *)(v1 + 152);
        *(_BYTE *)(v1 + 96) = 0;
        *(_BYTE *)(v1 + 104) = 1;
        if (*(_BYTE *)(v1 + 224))
        {
          v2->__vftable = 0;
          if (v37)
            (*(void (**)(uint64_t))(*(_QWORD *)v37 + 8))(v37);
        }
        else
        {
          (*(void (**)(std::runtime_error *))v37)(v2);
        }
      }
      v25 = *(_QWORD *)(v1 + 424);
      if (v25)
      {
        v26 = (unint64_t *)(v25 + 8);
        do
          v27 = __ldaxr(v26);
        while (__stlxr(v27 - 1, v26));
        if (!v27)
        {
          v28 = *(std::__shared_weak_count **)(v1 + 424);
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      v29 = *(std::__shared_weak_count **)(v1 + 368);
      if (!v29)
        goto LABEL_31;
      v30 = (unint64_t *)&v29->__shared_owners_;
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
        if ((*(char *)(v1 + 359) & 0x80000000) == 0)
        {
LABEL_33:
          v32 = *(_QWORD *)(v1 + 232);
          if (*(_BYTE *)(v1 + 304))
          {
            *v3 = 0;
            if (v32)
              (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
          }
          else
          {
            (*(void (**)(std::runtime_error_vtbl **))v32)(v3);
          }
LABEL_77:
          *(_QWORD *)(v1 + 152) = v5;
          *(_QWORD *)v1 = 0;
          return AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::Awaiter::await_suspend(v2);
        }
      }
      else
      {
LABEL_31:
        if ((*(char *)(v1 + 359) & 0x80000000) == 0)
          goto LABEL_33;
      }
      operator delete(v4->__r_.__value_.__l.__data_);
      goto LABEL_33;
    }
    goto LABEL_78;
  }
  return result;
}

void sub_18CBD7A7C(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 232);
  if (*(_BYTE *)(v1 + 304))
  {
    *v2 = 0;
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
  else
  {
    (*(void (**)(_QWORD *))v4)(v2);
  }
  __cxa_begin_catch(a1);
  AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::unhandled_exception();
}

void sub_18CBD7AC0()
{
  __cxa_end_catch();
  JUMPOUT(0x18CBD7A54);
}

void AMSCore::IAccountProvider::getActiveOrLocalMediaAccount(char *__p)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;

  v2 = __p + 232;
  if (!*(_QWORD *)__p)
    goto LABEL_30;
  if (__p[439])
  {
    v3 = *((_QWORD *)__p + 53);
    if (v3)
    {
      v4 = (unint64_t *)(v3 + 8);
      do
        v5 = __ldaxr(v4);
      while (__stlxr(v5 - 1, v4));
      if (!v5)
      {
        v6 = (std::__shared_weak_count *)*((_QWORD *)__p + 53);
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    v7 = (std::__shared_weak_count *)*((_QWORD *)__p + 46);
    if (!v7)
      goto LABEL_12;
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
      if ((__p[359] & 0x80000000) == 0)
      {
LABEL_14:
        v10 = *((_QWORD *)__p + 29);
        if (__p[304])
        {
          *v2 = 0;
          if (v10)
            (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
        }
        else
        {
          (*(void (**)(_QWORD *))v10)(v2);
        }
        goto LABEL_30;
      }
    }
    else
    {
LABEL_12:
      if ((__p[359] & 0x80000000) == 0)
        goto LABEL_14;
    }
    operator delete(*((void **)__p + 42));
    goto LABEL_14;
  }
  v11 = *((_QWORD *)__p + 51);
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      v14 = (std::__shared_weak_count *)*((_QWORD *)__p + 51);
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v15 = (std::__shared_weak_count *)*((_QWORD *)__p + 20);
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p[335] < 0)
    operator delete(*((void **)__p + 39));
LABEL_30:
  v18 = (char *)*((_QWORD *)__p + 18);
  if (v18 == __p + 120)
  {
    v19 = 4;
    v18 = __p + 120;
  }
  else
  {
    if (!v18)
      goto LABEL_35;
    v19 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v18 + 8 * v19))();
LABEL_35:
  if (__p[104])
  {
    v20 = *((_QWORD *)__p + 3);
    if (__p[96])
    {
      *((_QWORD *)__p + 3) = 0;
      if (v20)
        (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
    }
    else
    {
      (*(void (**)(char *))v20)(__p + 24);
    }
  }
  v21 = __p[440];
  do
  {
    v22 = __ldaxr((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
    v23 = v22 - 1;
  }
  while (__stlxr(v23, (unsigned int *)&AMSCore::TaskCounter::getCount(void)::count));
  if (!v23)
    MEMORY[0x18D789A68](&AMSCore::TaskCounter::getCount(void)::count);
  if (v21 < 0)
    operator delete(*((void **)__p + 48));
  operator delete(__p);
}

_QWORD *std::shared_ptr<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise>::shared_ptr[abi:fe180100]<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise,AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::get_return_object(void)::DetachPromise,void>(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = (_QWORD *)operator new();
  *v4 = &off_1E2523928;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_18CBD7D4C(void *a1)
{
  uint64_t v1;
  unint64_t *v2;
  unint64_t v3;

  __cxa_begin_catch(a1);
  v2 = (unint64_t *)(v1 + 96);
  do
    v3 = __ldaxr(v2);
  while (__stlxr(2uLL, v2));
  if (v3)
    (*(void (**)(uint64_t))(v1 - 8))(v1 - 16);
  __cxa_rethrow();
}

void sub_18CBD7D80(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::unhandled_exception()
{
  uint64_t v0;

  AMSCore::Error::makeFromCurrentException((AMSCore::Error *)&v0);
}

_BYTE *AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::Awaiter::await_suspend(_BYTE *result)
{
  _BYTE *v1;
  unint64_t *v2;
  void (**v3)(_QWORD);
  _QWORD *v4;
  uint64_t v5;
  const std::runtime_error *v6;
  char v7;
  std::runtime_error_vtbl *v8;
  _QWORD *v9;
  uint64_t v10;
  std::runtime_error_vtbl *v11;
  uint64_t v12;
  std::runtime_error v13;
  __int128 v14;
  uint64_t *v15;
  uint64_t v16;
  __int128 v18;
  char v19;
  _BYTE v20[24];
  _BYTE *v21;
  uint64_t v22;

  v1 = result;
  v22 = *MEMORY[0x1E0C80C00];
  v2 = (unint64_t *)(*(_QWORD *)result + 96);
  do
    v3 = (void (**)(_QWORD))__ldaxr(v2);
  while (__stlxr(1uLL, v2));
  if (v3)
  {
    if (v3 == (void (**)(_QWORD))2)
      return (_BYTE *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)result - 8))(*(_QWORD *)result - 16);
    v4 = (_QWORD *)(*(_QWORD *)result + 128);
    result = (_BYTE *)*v4;
    if (*v4)
    {
      if (result == (_BYTE *)(*(_QWORD *)v1 + 104))
      {
        v21 = v20;
        result = (_BYTE *)(*(uint64_t (**)(_BYTE *, _BYTE *))(*(_QWORD *)result + 24))(result, v20);
      }
      else
      {
        v21 = *(_BYTE **)(*(_QWORD *)v1 + 128);
        *v4 = 0;
      }
    }
    else
    {
      v21 = 0;
    }
    if (v21)
    {
      v5 = *(_QWORD *)v1;
      if (!*(_BYTE *)(*(_QWORD *)v1 + 88))
      {
        __break(1u);
        return result;
      }
      v6 = (const std::runtime_error *)(v5 + 8);
      v7 = *(_BYTE *)(v5 + 80);
      if (v7)
      {
        v8 = v6->__vftable;
        v6->__vftable = 0;
        v13.__vftable = v8;
      }
      else
      {
        std::runtime_error::runtime_error(&v13, v6);
        v9 = (_QWORD *)(v5 + 48);
        v10 = *(_QWORD *)(v5 + 48);
        v14 = *(_OWORD *)(v5 + 24);
        v13.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
        v15 = *(uint64_t **)(v5 + 40);
        v16 = v10;
        if (*(_QWORD *)(v5 + 56))
        {
          *(_QWORD *)(v10 + 16) = &v16;
          *(_QWORD *)(v5 + 40) = v9;
          *v9 = 0;
          *(_QWORD *)(v5 + 56) = 0;
        }
        else
        {
          v15 = &v16;
        }
        v18 = *(_OWORD *)(v5 + 64);
        *(_QWORD *)(v5 + 64) = 0;
        *(_QWORD *)(v5 + 72) = 0;
      }
      v19 = v7;
      if (!v21)
        std::__throw_bad_function_call[abi:fe180100]();
      (*(void (**)(_BYTE *, std::runtime_error *))(*(_QWORD *)v21 + 48))(v21, &v13);
      v11 = v13.__vftable;
      if (v19)
      {
        v13.__vftable = 0;
        if (v11)
          (*((void (**)(std::runtime_error_vtbl *))v11->~runtime_error + 1))(v11);
      }
      else
      {
        ((void (*)(std::runtime_error *))v13.~runtime_error)(&v13);
      }
    }
    else
    {
      (*v3)(v3);
    }
    result = v21;
    if (v21 == v20)
    {
      v12 = 4;
      result = v20;
    }
    else
    {
      if (!v21)
        return result;
      v12 = 5;
    }
    return (_BYTE *)(*(uint64_t (**)(void))(*(_QWORD *)result + 8 * v12))();
  }
  return result;
}

void sub_18CBD81E4(_Unwind_Exception *a1, int a2)
{
  if (a2)
    __clang_call_terminate(a1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_pointer<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise *,AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::get_return_object(void)::DetachPromise,std::allocator<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x18D789BDCLL);
}

uint64_t std::__shared_ptr_pointer<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise *,AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::get_return_object(void)::DetachPromise,std::allocator<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise>>::__on_zero_shared(uint64_t result)
{
  uint64_t v1;
  unint64_t *v2;
  unint64_t v3;

  v1 = *(_QWORD *)(result + 24);
  v2 = (unint64_t *)(v1 + 96);
  do
    v3 = __ldaxr(v2);
  while (__stlxr(2uLL, v2));
  if (v3)
    return (*(uint64_t (**)(uint64_t))(v1 - 8))(v1 - 16);
  return result;
}

uint64_t std::__shared_ptr_pointer<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise *,AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::get_return_object(void)::DetachPromise,std::allocator<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN7AMSCore4TaskINSt3__110unique_ptrINS_13IMediaAccountENS1_14default_deleteIS3_EEEENS_5ErrorEE7Prom"
                     "ise17get_return_objectEvE13DetachPromise"
    || ((v3 & (unint64_t)"ZN7AMSCore4TaskINSt3__110unique_ptrINS_13IMediaAccountENS1_14default_deleteIS3_EEEENS_5E"
                                "rrorEE7Promise17get_return_objectEvE13DetachPromise" & 0x8000000000000000) != 0) != __OFSUB__(v3, "ZN7AMSCore4TaskINSt3__110unique_ptrINS_13IMediaAccountENS1_14default_deleteIS3_EEEENS_5ErrorEE7Promise17get_return_objectEvE13DetachPromise")&& !strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN7AMSCore4TaskINSt3__110unique_ptrINS_13IMediaAccountENS1_14default_deleteIS3_EEEENS_5ErrorEE7Promise17get_return_objectEvE13DetachPromise" & 0x7FFFFFFFFFFFFFFFLL)))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void AMSCore::IAccountProvider::merge(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const void ***v8;
  const void ***v9;
  const void **v10;
  const void **v11;
  const void ***v12;
  BOOL v13;
  unsigned int **v14;
  unsigned int *v15[2];
  unsigned int **v16;
  unsigned int *v17[2];
  unsigned int **v18;
  unsigned int *v19;
  unsigned int *v20;

  v4 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 112))(*a1);
  (*(void (**)(unsigned int ***__return_ptr))(*(_QWORD *)v4 + 112))(&v18);
  if (*a2)
  {
    v5 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a2 + 112))(*a2);
    v6 = v5;
    v16 = v18;
    v17[0] = v19;
    v17[1] = v20;
    if (v20)
    {
      *((_QWORD *)v19 + 2) = v17;
      v18 = &v19;
      v19 = 0;
      v20 = 0;
    }
    else
    {
      v16 = v17;
    }
    (*(void (**)(uint64_t, unsigned int ***))(*(_QWORD *)v5 + 88))(v5, &v16);
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v16, v17[0]);
    v7 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 112))(*a1);
    v8 = (const void ***)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 16))(v6);
    v15[0] = 0;
    v15[1] = 0;
    v14 = v15;
    v9 = v8 + 1;
    v10 = *v8;
    if (*v8 != (const void **)(v8 + 1))
    {
      do
      {
        std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,AMSCore::Any> const&>((uint64_t **)&v14, (uint64_t *)v15, v10 + 4, (__int128 *)v10 + 2);
        v11 = (const void **)v10[1];
        if (v11)
        {
          do
          {
            v12 = (const void ***)v11;
            v11 = (const void **)*v11;
          }
          while (v11);
        }
        else
        {
          do
          {
            v12 = (const void ***)v10[2];
            v13 = *v12 == v10;
            v10 = (const void **)v12;
          }
          while (!v13);
        }
        v10 = (const void **)v12;
      }
      while (v12 != v9);
    }
    (*(void (**)(uint64_t, unsigned int ***))(*(_QWORD *)v7 + 96))(v7, &v14);
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v14, v15[0]);
  }
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v18, v19);
}

void sub_18CBD8438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, unsigned int *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, unsigned int *a17)
{
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&a10, a11);
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&a16, a17);
  _Unwind_Resume(a1);
}

void AMSCore::EphemeralAccountProvider::~EphemeralAccountProvider(AMSCore::EphemeralAccountProvider *this)
{
  AMSCore::EphemeralAccountProvider::~EphemeralAccountProvider(this);
  JUMPOUT(0x18D789BDCLL);
}

{
  std::mutex *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  std::__shared_weak_count *v17;
  _QWORD *v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;

  *(_QWORD *)this = &off_1E25210A8;
  v2 = (std::mutex *)((char *)this + 192);
  if (*((_QWORD *)this + 35))
  {
    v3 = (char *)this + 264;
    v5 = *((_QWORD *)this + 33);
    v4 = (char *)*((_QWORD *)this + 34);
    v6 = *(_QWORD *)v4;
    *(_QWORD *)(v6 + 8) = *(_QWORD *)(v5 + 8);
    **(_QWORD **)(v5 + 8) = v6;
    *((_QWORD *)this + 35) = 0;
    if (v4 != (char *)this + 264)
    {
      do
      {
        v7 = (char *)*((_QWORD *)v4 + 1);
        operator delete(v4);
        v4 = v7;
      }
      while (v7 != v3);
    }
  }
  std::mutex::~mutex(v2);
  v8 = (std::__shared_weak_count *)*((_QWORD *)this + 23);
  if (!v8)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    v11 = (std::__shared_weak_count *)*((_QWORD *)this + 21);
    if (!v11)
      goto LABEL_14;
  }
  else
  {
LABEL_8:
    v11 = (std::__shared_weak_count *)*((_QWORD *)this + 21);
    if (!v11)
      goto LABEL_14;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
LABEL_14:
  std::__tree<std::__value_type<std::string,std::shared_ptr<AMSCore::IHTTPCookieProvider>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<AMSCore::IHTTPCookieProvider>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<AMSCore::IHTTPCookieProvider>>>>::destroy(*((_QWORD *)this + 18));
  v14 = *((_QWORD *)this + 14);
  if (v14)
  {
    v15 = *((_QWORD *)this + 15);
    v16 = (void *)*((_QWORD *)this + 14);
    if (v15 != v14)
    {
      do
      {
        v17 = *(std::__shared_weak_count **)(v15 - 8);
        if (v17)
          std::__shared_weak_count::__release_weak(v17);
        v15 -= 16;
      }
      while (v15 != v14);
      v16 = (void *)*((_QWORD *)this + 14);
    }
    *((_QWORD *)this + 15) = v14;
    operator delete(v16);
  }
  std::mutex::~mutex((std::mutex *)((char *)this + 48));
  v18 = (_QWORD *)*((_QWORD *)this + 3);
  if (v18)
  {
    v19 = (_QWORD *)*((_QWORD *)this + 4);
    v20 = (void *)*((_QWORD *)this + 3);
    if (v19 != v18)
    {
      do
      {
        v22 = *--v19;
        v21 = v22;
        *v19 = 0;
        if (v22)
          (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
      }
      while (v19 != v18);
      v20 = (void *)*((_QWORD *)this + 3);
    }
    *((_QWORD *)this + 4) = v18;
    operator delete(v20);
  }
  v23 = (std::__shared_weak_count *)*((_QWORD *)this + 2);
  if (v23)
    std::__shared_weak_count::__release_weak(v23);
}

void AMSCore::EphemeralAccountProvider::createMediaAccount(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  void *__p[2];
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uuid_t out;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v4 = operator new();
  LOBYTE(__p[0]) = 0;
  v5 = *(unsigned __int8 *)(a1 + 24);
  if (*(_BYTE *)(a1 + 24))
  {
    *(_OWORD *)__p = *(_OWORD *)a1;
    v9 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
  }
  v6 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  memset(out, 0, sizeof(out));
  uuid_generate_random(out);
  v7 = (char *)operator new(0x28uLL);
  *(_QWORD *)(v7 + 31) = 0;
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  uuid_unparse_lower(out, v7 + 1);
  *v7 = 123;
  v7[37] = 125;
  *(_QWORD *)v4 = &off_1E2520648;
  *(_QWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 16) = xmmword_18CF51AF0;
  *(_BYTE *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 56) = 0;
  if (v5)
  {
    *(_OWORD *)(v4 + 32) = *(_OWORD *)__p;
    *(_QWORD *)(v4 + 48) = v9;
    HIBYTE(v9) = 0;
    __p[0] = 0;
    *(_BYTE *)(v4 + 56) = 1;
  }
  *(_QWORD *)(v4 + 152) = 0;
  *(_QWORD *)(v4 + 64) = v6;
  *(_OWORD *)(v4 + 72) = v10;
  *(_QWORD *)(v4 + 88) = v11;
  *(_QWORD *)(v4 + 96) = off_1E2520AA8;
  *(_OWORD *)(v4 + 104) = 0u;
  *(_OWORD *)(v4 + 120) = 0u;
  *(_DWORD *)(v4 + 136) = 1065353216;
  *(_QWORD *)(v4 + 160) = 0;
  *(_QWORD *)(v4 + 144) = v4 + 152;
  if (v5 && SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  *a2 = v4;
}

void sub_18CBD8650(_Unwind_Exception *exception_object, int a2, ...)
{
  uint64_t v2;
  void *v3;
  va_list va;

  va_start(va, a2);
  if (a2)
  {
    operator delete(v3);
    AMSCore::AccountIdentity::~AccountIdentity((void **)va);
    MEMORY[0x18D789BDC](v2, 0x10B3C40FF472039);
    __clang_call_terminate(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *AMSCore::EphemeralAccountProvider::getActiveiCloudAccount@<X0>(_OWORD *a1@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  char *v5;
  unsigned int v6;
  unint64_t *v7;
  _QWORD *v8;
  _QWORD *result;
  __int128 v10;
  void (**v11)(_QWORD);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  const std::runtime_error *v16;
  char v17;
  std::runtime_error_vtbl *v18;
  _QWORD *v19;
  uint64_t v20;
  std::runtime_error_vtbl *v21;
  uint64_t v22;
  std::runtime_error v23;
  __int128 v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v28;
  char v29;
  _BYTE v30[24];
  _BYTE *v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v3 = operator new(0xA8uLL);
  v4 = v3;
  *v3 = AMSCore::EphemeralAccountProvider::getActiveiCloudAccount;
  v3[1] = AMSCore::EphemeralAccountProvider::getActiveiCloudAccount;
  v5 = (char *)(v3 + 2);
  do
    v6 = __ldaxr((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
  while (__stlxr(v6 + 1, (unsigned int *)&AMSCore::TaskCounter::getCount(void)::count));
  v3[14] = 0;
  v7 = v3 + 14;
  *((_BYTE *)v3 + 24) = 0;
  v8 = v3 + 3;
  *((_BYTE *)v3 + 104) = 0;
  v3[18] = 0;
  result = (_QWORD *)operator new();
  *result = &off_1E2523960;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  *(_QWORD *)&v10 = v5;
  *((_QWORD *)&v10 + 1) = result;
  *a1 = v10;
  if (*((_BYTE *)v4 + 104))
  {
    result = (_QWORD *)v4[3];
    if (*((_BYTE *)v4 + 96))
    {
      *v8 = 0;
      if (result)
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
    }
    else
    {
      result = (_QWORD *)((uint64_t (*)(_QWORD *))*result)(v4 + 3);
    }
  }
  v4[3] = 0;
  *((_BYTE *)v4 + 96) = 1;
  *((_BYTE *)v4 + 104) = 1;
  v4[19] = v5;
  *v4 = 0;
  do
    v11 = (void (**)(_QWORD))__ldaxr(v7);
  while (__stlxr(1uLL, v7));
  if (v11)
  {
    if (v11 == (void (**)(_QWORD))2)
      return (_QWORD *)(*(uint64_t (**)(uint64_t))(v4[19] - 8))(v4[19] - 16);
    v12 = v4[19];
    v14 = *(_QWORD *)(v12 + 128);
    v13 = (_QWORD *)(v12 + 128);
    result = (_QWORD *)v14;
    if (v14)
    {
      if (result == (_QWORD *)(v4[19] + 104))
      {
        v31 = v30;
        result = (_QWORD *)(*(uint64_t (**)(_QWORD *, _BYTE *))(*result + 24))(result, v30);
      }
      else
      {
        v31 = result;
        *v13 = 0;
      }
    }
    else
    {
      v31 = 0;
    }
    if (v31)
    {
      v15 = v4[19];
      if (!*(_BYTE *)(v15 + 88))
      {
        __break(1u);
        return result;
      }
      v16 = (const std::runtime_error *)(v15 + 8);
      v17 = *(_BYTE *)(v15 + 80);
      if (v17)
      {
        v18 = v16->__vftable;
        v16->__vftable = 0;
        v23.__vftable = v18;
      }
      else
      {
        std::runtime_error::runtime_error(&v23, v16);
        v19 = (_QWORD *)(v15 + 48);
        v20 = *(_QWORD *)(v15 + 48);
        v24 = *(_OWORD *)(v15 + 24);
        v23.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
        v25 = *(uint64_t **)(v15 + 40);
        v26 = v20;
        if (*(_QWORD *)(v15 + 56))
        {
          *(_QWORD *)(v20 + 16) = &v26;
          *(_QWORD *)(v15 + 40) = v19;
          *v19 = 0;
          *(_QWORD *)(v15 + 56) = 0;
        }
        else
        {
          v25 = &v26;
        }
        v28 = *(_OWORD *)(v15 + 64);
        *(_QWORD *)(v15 + 64) = 0;
        *(_QWORD *)(v15 + 72) = 0;
      }
      v29 = v17;
      if (!v31)
        std::__throw_bad_function_call[abi:fe180100]();
      (*(void (**)(_BYTE *, std::runtime_error *))(*(_QWORD *)v31 + 48))(v31, &v23);
      v21 = v23.__vftable;
      if (v29)
      {
        v23.__vftable = 0;
        if (v21)
          (*((void (**)(std::runtime_error_vtbl *))v21->~runtime_error + 1))(v21);
      }
      else
      {
        ((void (*)(std::runtime_error *))v23.~runtime_error)(&v23);
      }
    }
    else
    {
      (*v11)(v11);
    }
    result = v31;
    if (v31 == v30)
    {
      v22 = 4;
      result = v30;
    }
    else
    {
      if (!v31)
        return result;
      v22 = 5;
    }
    return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v22))();
  }
  return result;
}

void sub_18CBD89C4(uint64_t a1, int a2)
{
  if (a2)
  {
    __cxa_end_catch();
    JUMPOUT(0x18CBD89E8);
  }
  JUMPOUT(0x18CBD89E0);
}

void sub_18CBD89D8(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  __clang_call_terminate(exception_object);
}

void AMSCore::EphemeralAccountProvider::getActiveMediaAccount(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  char *v6;
  char *v7;
  char *v8;
  _BYTE *v9;
  uint64_t v10;
  unsigned int v11;
  _QWORD *v12;
  unsigned __int8 *v13;
  unsigned __int8 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned __int8 v21;
  _QWORD *v22;
  std::mutex *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v6 = (char *)operator new(0xD0uLL);
  v7 = v6;
  *(_QWORD *)v6 = AMSCore::EphemeralAccountProvider::getActiveMediaAccount;
  *((_QWORD *)v6 + 1) = AMSCore::EphemeralAccountProvider::getActiveMediaAccount;
  v8 = v6 + 152;
  v9 = v6 + 176;
  v10 = (uint64_t)(v6 + 16);
  *((_QWORD *)v6 + 24) = a1;
  *(_OWORD *)(v6 + 152) = *(_OWORD *)a2;
  *((_QWORD *)v6 + 21) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  do
    v11 = __ldaxr((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
  while (__stlxr(v11 + 1, (unsigned int *)&AMSCore::TaskCounter::getCount(void)::count));
  v6[24] = 0;
  v12 = v6 + 24;
  v6[104] = 0;
  *((_QWORD *)v6 + 14) = 0;
  *((_QWORD *)v6 + 18) = 0;
  std::shared_ptr<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise>::shared_ptr[abi:fe180100]<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise,AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::get_return_object(void)::DetachPromise,void>(&v26, v10);
  *a3 = v26;
  v13 = (unsigned __int8 *)(a1 + 256);
  do
    v14 = __ldaxr(v13);
  while (__stxr(1u, v13));
  if ((v14 & 1) != 0)
  {
    v7[200] = 0;
    std::mutex::lock((std::mutex *)(*((_QWORD *)v7 + 24) + 192));
    v19 = *((_QWORD *)v7 + 24);
    if (*(_QWORD *)(v19 + 280))
      goto LABEL_18;
    v20 = (unsigned __int8 *)(v19 + 256);
    do
      v21 = __ldxr(v20);
    while (__stlxr(1u, v20));
    if ((v21 & 1) != 0)
    {
LABEL_18:
      v22 = operator new(0x18uLL);
      v23 = (std::mutex *)(*((_QWORD *)v7 + 24) + 192);
      v22[1] = v19 + 264;
      v22[2] = v7;
      v24 = *(_QWORD *)(v19 + 264);
      *v22 = v24;
      *(_QWORD *)(v24 + 8) = v22;
      *(_QWORD *)(v19 + 264) = v22;
      ++*(_QWORD *)(v19 + 280);
      std::mutex::unlock(v23);
      return;
    }
    std::mutex::unlock((std::mutex *)(*((_QWORD *)v7 + 24) + 192));
  }
  v15 = *((_QWORD *)v7 + 24);
  *((_QWORD *)v7 + 22) = v15 + 192;
  v7[184] = 1;
  v16 = *(_QWORD **)(v15 + 24);
  v17 = *(_QWORD **)(v15 + 32);
  if (v16 == v17)
  {
LABEL_9:
    if (v7[104])
    {
      v18 = *((_QWORD *)v7 + 3);
      if (v7[96])
      {
        *v12 = 0;
        if (v18)
          (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
      }
      else
      {
        (*(void (**)(char *))v18)(v7 + 24);
      }
    }
    *((_QWORD *)v7 + 3) = 0;
  }
  else
  {
    while (!(*(unsigned int (**)(_QWORD, char *))(*(_QWORD *)*v16 + 80))(*v16, v8))
    {
      if (++v16 == v17)
        goto LABEL_9;
    }
    (*(void (**)(__int128 *__return_ptr))(*(_QWORD *)*v16 + 48))(&v26);
    if (v7[104])
    {
      v25 = *((_QWORD *)v7 + 3);
      if (v7[96])
      {
        *v12 = 0;
        if (v25)
          (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
      }
      else
      {
        (*(void (**)(char *))v25)(v7 + 24);
      }
    }
    *((_QWORD *)v7 + 3) = v26;
  }
  v7[96] = 1;
  v7[104] = 1;
  AMSCore::AwaitableMutex::unlock((std::mutex *)(*((_QWORD *)v7 + 24) + 192));
  *((_QWORD *)v7 + 22) = v10;
  *(_QWORD *)v7 = 0;
  AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::Awaiter::await_suspend(v9);
}

void sub_18CBD8C58(void *a1)
{
  uint64_t v1;

  std::unique_lock<AMSCore::AwaitableMutex>::~unique_lock[abi:fe180100](v1);
  __cxa_begin_catch(a1);
  AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::unhandled_exception();
}

void sub_18CBD8C74()
{
  __cxa_end_catch();
  JUMPOUT(0x18CBD8C2CLL);
}

void AMSCore::EphemeralAccountProvider::getCookieProvider(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  char *v6;
  char *v7;
  std::mutex **v8;
  char *v9;
  unsigned int v10;
  void (***v11)(uint64_t);
  _QWORD *v12;
  __int128 v13;
  unsigned __int8 *v14;
  unsigned __int8 v15;
  const AMSCore::IMediaAccount *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  unsigned __int8 v25;
  _QWORD *v26;
  std::mutex *v27;
  uint64_t v28;
  char *v29;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  __int128 v36;
  std::string __p;

  v6 = (char *)operator new(0xC8uLL);
  v7 = v6;
  *(_QWORD *)v6 = AMSCore::EphemeralAccountProvider::getCookieProvider;
  *((_QWORD *)v6 + 1) = AMSCore::EphemeralAccountProvider::getCookieProvider;
  v8 = (std::mutex **)(v6 + 152);
  v9 = v6 + 16;
  *((_QWORD *)v6 + 21) = a1;
  *((_OWORD *)v6 + 11) = *(_OWORD *)a2;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  do
    v10 = __ldaxr((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
  while (__stlxr(v10 + 1, (unsigned int *)&AMSCore::TaskCounter::getCount(void)::count));
  *((_QWORD *)v6 + 14) = 0;
  v6[24] = 0;
  v11 = (void (***)(uint64_t))(v6 + 24);
  v6[104] = 0;
  *((_QWORD *)v6 + 18) = 0;
  v12 = (_QWORD *)operator new();
  *v12 = &off_1E25238B8;
  v12[1] = 0;
  v12[2] = 0;
  v12[3] = v9;
  *(_QWORD *)&v13 = v9;
  *((_QWORD *)&v13 + 1) = v12;
  *a3 = v13;
  v14 = (unsigned __int8 *)(a1 + 256);
  do
    v15 = __ldaxr(v14);
  while (__stxr(1u, v14));
  if ((v15 & 1) != 0)
  {
    v7[192] = 0;
    std::mutex::lock((std::mutex *)(*((_QWORD *)v7 + 21) + 192));
    v23 = *((_QWORD *)v7 + 21);
    if (*(_QWORD *)(v23 + 280))
      goto LABEL_19;
    v24 = (unsigned __int8 *)(v23 + 256);
    do
      v25 = __ldxr(v24);
    while (__stlxr(1u, v24));
    if ((v25 & 1) != 0)
    {
LABEL_19:
      v26 = operator new(0x18uLL);
      v27 = (std::mutex *)(*((_QWORD *)v7 + 21) + 192);
      v26[1] = v23 + 264;
      v26[2] = v7;
      v28 = *(_QWORD *)(v23 + 264);
      *v26 = v28;
      *(_QWORD *)(v28 + 8) = v26;
      *(_QWORD *)(v23 + 264) = v26;
      ++*(_QWORD *)(v23 + 280);
      std::mutex::unlock(v27);
      return;
    }
    std::mutex::unlock((std::mutex *)(*((_QWORD *)v7 + 21) + 192));
  }
  v16 = (const AMSCore::IMediaAccount *)*((_QWORD *)v7 + 22);
  *((_QWORD *)v7 + 19) = *((_QWORD *)v7 + 21) + 192;
  v7[160] = 1;
  AMSCore::EphemeralAccountProvider::getCookieProviderKey(&__p, v16);
  v17 = *((_QWORD *)v7 + 21);
  v18 = std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::find<std::string>(v17 + 136, (const void **)&__p.__r_.__value_.__l.__data_);
  if ((uint64_t *)(v17 + 144) == v18)
  {
    v29 = (char *)operator new(0x98uLL);
    *((_QWORD *)v29 + 1) = 0;
    *((_QWORD *)v29 + 2) = 0;
    *(_QWORD *)v29 = &off_1E2522E38;
    *((_QWORD *)v29 + 3) = &off_1E2521250;
    *((_QWORD *)v29 + 4) = 850045863;
    *(_OWORD *)(v29 + 40) = 0u;
    *(_OWORD *)(v29 + 56) = 0u;
    *(_OWORD *)(v29 + 72) = 0u;
    *((_QWORD *)v29 + 12) = 0;
    *((_QWORD *)v29 + 13) = v29 + 104;
    *(_OWORD *)(v29 + 81) = 0u;
    *((_QWORD *)v29 + 14) = v29 + 104;
    *((_QWORD *)v29 + 15) = 0;
    *((_QWORD *)v29 + 18) = 0;
    *((_QWORD *)v29 + 17) = 0;
    *((_QWORD *)v29 + 16) = v29 + 136;
    *(_QWORD *)&v36 = v29 + 24;
    *((_QWORD *)&v36 + 1) = v29;
    std::map<std::string,std::shared_ptr<AMSCore::IHTTPCookieProvider>>::insert_or_assign[abi:fe180100]<std::shared_ptr<AMSCore::EphemeralHTTPCookieProvider> &>((uint64_t ***)(v17 + 136), (uint64_t)&__p, (uint64_t *)&v36);
    if (v7[104])
    {
      if (v7[96])
      {
        v30 = (std::__shared_weak_count *)*((_QWORD *)v7 + 4);
        if (v30)
        {
          p_shared_owners = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldaxr(p_shared_owners);
          while (__stlxr(v32 - 1, p_shared_owners));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
      }
      else
      {
        (**v11)((uint64_t)(v7 + 24));
      }
    }
    *(_OWORD *)(v7 + 24) = v36;
  }
  else
  {
    v19 = v18;
    if (v7[104])
    {
      if (v7[96])
      {
        v20 = (std::__shared_weak_count *)*((_QWORD *)v7 + 4);
        if (v20)
        {
          v21 = (unint64_t *)&v20->__shared_owners_;
          do
            v22 = __ldaxr(v21);
          while (__stlxr(v22 - 1, v21));
          if (!v22)
          {
            ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
            std::__shared_weak_count::__release_weak(v20);
          }
        }
      }
      else
      {
        (**v11)((uint64_t)(v7 + 24));
      }
      v7[104] = 0;
    }
    *((_QWORD *)v7 + 3) = v19[7];
    v33 = v19[8];
    *((_QWORD *)v7 + 4) = v33;
    if (v33)
    {
      v34 = (unint64_t *)(v33 + 8);
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
    }
  }
  v7[96] = 1;
  v7[104] = 1;
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!v7[160])
      goto LABEL_40;
    goto LABEL_39;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if (v7[160])
LABEL_39:
    AMSCore::AwaitableMutex::unlock(*v8);
LABEL_40:
  *((_QWORD *)v7 + 19) = v9;
  *(_QWORD *)v7 = 0;
  AMSCore::Task<std::shared_ptr<AMSCore::IHTTPCookieProvider>,AMSCore::Error>::Promise::Awaiter::await_suspend(v8);
}

void sub_18CBD900C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v17;

  std::shared_ptr<AMSCore::AppleSchedulingProvider>::~shared_ptr[abi:fe180100]((uint64_t)&a9);
  if (a17 < 0)
    operator delete(__p);
  std::unique_lock<AMSCore::AwaitableMutex>::~unique_lock[abi:fe180100](v17);
  __cxa_begin_catch(a1);
  AMSCore::Task<std::shared_ptr<AMSCore::IHTTPCookieProvider>,AMSCore::Error>::Promise::unhandled_exception();
}

void sub_18CBD9054()
{
  __cxa_end_catch();
  JUMPOUT(0x18CBD8FE0);
}

void sub_18CBD9060(void *a1)
{
  uint64_t v1;
  unint64_t *v2;
  unint64_t v3;

  __cxa_begin_catch(a1);
  do
    v3 = __ldaxr(v2);
  while (__stlxr(2uLL, v2));
  if (v3)
    (*(void (**)(uint64_t))(v1 + 8))(v1);
  __cxa_rethrow();
}

void sub_18CBD9090(void *a1)
{
  __cxa_end_catch();
  __clang_call_terminate(a1);
}

void AMSCore::EphemeralAccountProvider::getLocalMediaAccount(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  char *v6;
  char *v7;
  uint64_t *v8;
  _BYTE *v9;
  uint64_t v10;
  unsigned int v11;
  unsigned __int8 *v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned __int8 v35;
  _QWORD *v36;
  std::mutex *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v55;
  __int128 v56;

  v6 = (char *)operator new(0xD0uLL);
  v7 = v6;
  *(_QWORD *)v6 = AMSCore::EphemeralAccountProvider::getLocalMediaAccount;
  *((_QWORD *)v6 + 1) = AMSCore::EphemeralAccountProvider::getLocalMediaAccount;
  v8 = (uint64_t *)(v6 + 152);
  v9 = v6 + 176;
  v10 = (uint64_t)(v6 + 16);
  *((_QWORD *)v6 + 24) = a1;
  *(_OWORD *)(v6 + 152) = *(_OWORD *)a2;
  *((_QWORD *)v6 + 21) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  do
    v11 = __ldaxr((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
  while (__stlxr(v11 + 1, (unsigned int *)&AMSCore::TaskCounter::getCount(void)::count));
  v6[24] = 0;
  v6[104] = 0;
  *((_QWORD *)v6 + 14) = 0;
  *((_QWORD *)v6 + 18) = 0;
  std::shared_ptr<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise>::shared_ptr[abi:fe180100]<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise,AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::get_return_object(void)::DetachPromise,void>(&v56, v10);
  *a3 = v56;
  v12 = (unsigned __int8 *)(a1 + 256);
  do
    v13 = __ldaxr(v12);
  while (__stxr(1u, v12));
  if ((v13 & 1) != 0)
  {
    v7[200] = 0;
    std::mutex::lock((std::mutex *)(*((_QWORD *)v7 + 24) + 192));
    v33 = *((_QWORD *)v7 + 24);
    if (*(_QWORD *)(v33 + 280))
      goto LABEL_41;
    v34 = (unsigned __int8 *)(v33 + 256);
    do
      v35 = __ldxr(v34);
    while (__stlxr(1u, v34));
    if ((v35 & 1) != 0)
    {
LABEL_41:
      v36 = operator new(0x18uLL);
      v37 = (std::mutex *)(*((_QWORD *)v7 + 24) + 192);
      v36[1] = v33 + 264;
      v36[2] = v7;
      v38 = *(_QWORD *)(v33 + 264);
      *v36 = v38;
      *(_QWORD *)(v38 + 8) = v36;
      *(_QWORD *)(v33 + 264) = v36;
      ++*(_QWORD *)(v33 + 280);
      std::mutex::unlock(v37);
      return;
    }
    std::mutex::unlock((std::mutex *)(*((_QWORD *)v7 + 24) + 192));
  }
  v14 = *((_QWORD *)v7 + 24);
  *((_QWORD *)v7 + 22) = v14 + 192;
  v7[184] = 1;
  v15 = v7[175];
  v16 = (char)v15;
  if ((v15 & 0x80u) != 0)
    v15 = *((_QWORD *)v7 + 20);
  if (v15 == 59)
  {
    if (v16 >= 0)
      v39 = v8;
    else
      v39 = (uint64_t *)*v8;
    v40 = *v39;
    v41 = v39[1];
    v42 = v39[2];
    v43 = v39[3];
    v44 = v39[4];
    v45 = v39[5];
    v46 = v39[6];
    v47 = *(uint64_t *)((char *)v39 + 51);
    if (v40 != 0x6C7070612E6D6F63
      || v41 != 0x4D656C7070412E65
      || v42 != 0x7672655361696465
      || v43 != 0x65726F4373656369
      || v44 != 0x41616964654D492ELL
      || v45 != 0x612E746E756F6363
      || v46 != 0x4265726F74537070
      || v47 != 0x6174654265726F74)
    {
      goto LABEL_35;
    }
LABEL_68:
    (*(void (**)(__int128 *__return_ptr))(**(_QWORD **)(v14 + 176) + 48))(&v56);
    goto LABEL_69;
  }
  if (v15 == 62)
  {
    v17 = v16 >= 0 ? v8 : (uint64_t *)*v8;
    v18 = *v17;
    v19 = v17[1];
    v20 = v17[2];
    v21 = v17[3];
    v22 = v17[4];
    v23 = v17[5];
    v24 = v17[6];
    v25 = *(uint64_t *)((char *)v17 + 54);
    v26 = v18 == 0x6C7070612E6D6F63 && v19 == 0x4D656C7070412E65;
    v27 = v26 && v20 == 0x7672655361696465;
    v28 = v27 && v21 == 0x65726F4373656369;
    v29 = v28 && v22 == 0x41616964654D492ELL;
    v30 = v29 && v23 == 0x612E746E756F6363;
    v31 = v30 && v24 == 0x5365726F74537070;
    if (v31 && v25 == 0x786F62646E615365)
      goto LABEL_68;
  }
LABEL_35:
  (*(void (**)(__int128 *__return_ptr))(**(_QWORD **)(v14 + 160) + 48))(&v56);
LABEL_69:
  if (v7[104])
  {
    v55 = *((_QWORD *)v7 + 3);
    if (v7[96])
    {
      *((_QWORD *)v7 + 3) = 0;
      if (v55)
        (*(void (**)(uint64_t))(*(_QWORD *)v55 + 8))(v55);
    }
    else
    {
      (*(void (**)(char *))v55)(v7 + 24);
    }
  }
  *((_QWORD *)v7 + 3) = v56;
  v7[96] = 1;
  v7[104] = 1;
  AMSCore::AwaitableMutex::unlock((std::mutex *)(*((_QWORD *)v7 + 24) + 192));
  *((_QWORD *)v7 + 22) = v10;
  *(_QWORD *)v7 = 0;
  AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::Awaiter::await_suspend(v9);
}

void sub_18CBD9464(void *a1)
{
  uint64_t v1;

  std::unique_lock<AMSCore::AwaitableMutex>::~unique_lock[abi:fe180100](v1);
  __cxa_begin_catch(a1);
  AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::unhandled_exception();
}

void sub_18CBD9484()
{
  __cxa_end_catch();
  JUMPOUT(0x18CBD9438);
}

void AMSCore::EphemeralAccountProvider::getMediaAccount(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  char *v6;
  unint64_t v7;
  void (*v8)(char *);
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int128 *v14;
  std::runtime_error_vtbl **v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  _QWORD *v20;
  unsigned __int8 *v21;
  unsigned __int8 v22;
  int v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;
  unint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  const std::runtime_error *v35;
  int v36;
  std::runtime_error_vtbl *v37;
  uint64_t v38;
  unsigned __int8 *v39;
  unsigned __int8 v40;
  _QWORD *v41;
  std::mutex *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  std::__shared_weak_count *v55;
  unint64_t *p_shared_owners;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;

  v6 = (char *)operator new(0x198uLL);
  v7 = (unint64_t)v6;
  v8 = AMSCore::EphemeralAccountProvider::getMediaAccount;
  *(_QWORD *)v6 = AMSCore::EphemeralAccountProvider::getMediaAccount;
  *((_QWORD *)v6 + 1) = AMSCore::EphemeralAccountProvider::getMediaAccount;
  v9 = (uint64_t *)(v6 + 312);
  v10 = v6 + 328;
  v11 = (uint64_t)(v6 + 16);
  *((_QWORD *)v6 + 43) = a1;
  v12 = *((unsigned __int8 *)a2 + 24);
  v6[343] = v12;
  if (v12)
  {
    v13 = *a2;
    *v9 = a2[1];
    *(_QWORD *)(v6 + 319) = *(uint64_t *)((char *)a2 + 15);
    LOBYTE(v8) = *((_BYTE *)a2 + 23);
    a2[1] = 0;
    a2[2] = 0;
    *a2 = 0;
  }
  else
  {
    v13 = 0;
  }
  v14 = (__int128 *)(v6 + 296);
  v6[400] = (char)v8;
  v15 = (std::runtime_error_vtbl **)(v6 + 152);
  v16 = (void **)(v6 + 232);
  v17 = a2[4];
  v18 = a2[5];
  *((_QWORD *)v6 + 44) = v13;
  *((_QWORD *)v6 + 45) = v17;
  *((_QWORD *)v6 + 46) = v18;
  *v10 = a2[6];
  *(_QWORD *)(v6 + 335) = *(uint64_t *)((char *)a2 + 55);
  v6[401] = *((_BYTE *)a2 + 63);
  a2[6] = 0;
  a2[7] = 0;
  a2[5] = 0;
  do
    v19 = __ldaxr((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
  while (__stlxr(v19 + 1, (unsigned int *)&AMSCore::TaskCounter::getCount(void)::count));
  v6[24] = 0;
  v20 = v6 + 24;
  v6[104] = 0;
  *((_QWORD *)v6 + 14) = 0;
  *((_QWORD *)v6 + 18) = 0;
  std::shared_ptr<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise>::shared_ptr[abi:fe180100]<AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise,AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::get_return_object(void)::DetachPromise,void>(&v63, v11);
  *a3 = v63;
  v21 = (unsigned __int8 *)(a1 + 256);
  do
    v22 = __ldaxr(v21);
  while (__stxr(1u, v21));
  if ((v22 & 1) != 0)
  {
    *(_BYTE *)(v7 + 327) = 0;
    std::mutex::lock((std::mutex *)(*(_QWORD *)(v7 + 344) + 192));
    v38 = *(_QWORD *)(v7 + 344);
    if (*(_QWORD *)(v38 + 280))
      goto LABEL_23;
    v39 = (unsigned __int8 *)(v38 + 256);
    do
      v40 = __ldxr(v39);
    while (__stlxr(1u, v39));
    if ((v40 & 1) != 0)
    {
LABEL_23:
      v41 = operator new(0x18uLL);
      v42 = (std::mutex *)(*(_QWORD *)(v7 + 344) + 192);
      v41[1] = v38 + 264;
      v41[2] = v7;
      v43 = *(_QWORD *)(v38 + 264);
      *v41 = v43;
      *(_QWORD *)(v43 + 8) = v41;
      *(_QWORD *)(v38 + 264) = v41;
      ++*(_QWORD *)(v38 + 280);
      std::mutex::unlock(v42);
      return;
    }
    std::mutex::unlock((std::mutex *)(*(_QWORD *)(v7 + 344) + 192));
  }
  v23 = *(unsigned __int8 *)(v7 + 343);
  *(_BYTE *)(v7 + 232) = 0;
  *(_BYTE *)(v7 + 256) = 0;
  v24 = *(_QWORD *)(v7 + 352);
  v25 = *(_BYTE *)(v7 + 400);
  if (v23)
  {
    v26 = *v9;
    *(_QWORD *)(v7 + 232) = v24;
    *(_QWORD *)(v7 + 240) = v26;
    *(_QWORD *)(v7 + 247) = *(uint64_t *)((char *)v9 + 7);
    *(_BYTE *)(v7 + 255) = v25;
    *v9 = 0;
    *(uint64_t *)((char *)v9 + 7) = 0;
    *(_BYTE *)(v7 + 256) = 1;
    v25 = 0;
    v24 = 0;
  }
  *(_QWORD *)(v7 + 376) = v24;
  *(_BYTE *)(v7 + 402) = v25;
  v27 = *(_BYTE *)(v7 + 401);
  v28 = *(_QWORD *)(v7 + 368);
  v29 = *(_QWORD **)(v7 + 344);
  *(_QWORD *)(v7 + 264) = *(_QWORD *)(v7 + 360);
  *(_QWORD *)(v7 + 272) = v28;
  *(_QWORD *)(v7 + 280) = *v10;
  *(_QWORD *)(v7 + 287) = *(_QWORD *)((char *)v10 + 7);
  *(_BYTE *)(v7 + 295) = v27;
  *v10 = 0;
  *(_QWORD *)((char *)v10 + 7) = 0;
  AMSCore::EphemeralAccountProvider::getMediaAccountUnlocked((_OWORD *)(v7 + 296), v29, v7 + 232);
  v30 = *v14;
  *(_OWORD *)(v7 + 384) = *v14;
  *(_QWORD *)v14 = 0;
  *(_QWORD *)(v7 + 304) = 0;
  if (atomic_load((unint64_t *)(v30 + 96)))
    goto LABEL_15;
  *(_BYTE *)(v7 + 327) = 1;
  v32 = (unint64_t *)(*(_QWORD *)(v7 + 384) + 96);
  do
    v33 = __ldaxr(v32);
  while (__stlxr(v7, v32));
  if (v33)
  {
LABEL_15:
    v34 = *(_QWORD *)(v7 + 384);
    if (!*(_BYTE *)(v34 + 88))
    {
      __break(1u);
      return;
    }
    v35 = (const std::runtime_error *)(v34 + 8);
    v36 = *(unsigned __int8 *)(v34 + 80);
    if (*(_BYTE *)(v34 + 80))
    {
      v37 = v35->__vftable;
      v35->__vftable = 0;
      *v15 = v37;
    }
    else
    {
      std::runtime_error::runtime_error((std::runtime_error *)(v7 + 152), v35);
      *(_OWORD *)(v7 + 168) = *(_OWORD *)(v34 + 24);
      v44 = (_QWORD *)(v34 + 48);
      v45 = *(_QWORD *)(v34 + 48);
      *(_QWORD *)(v7 + 192) = v45;
      v46 = v7 + 192;
      *(_QWORD *)(v7 + 152) = off_1E2521330;
      *(_QWORD *)(v7 + 184) = *(_QWORD *)(v34 + 40);
      v47 = *(_QWORD *)(v34 + 56);
      *(_QWORD *)(v7 + 200) = v47;
      if (v47)
      {
        *(_QWORD *)(v45 + 16) = v46;
        *(_QWORD *)(v34 + 40) = v44;
        *v44 = 0;
        *(_QWORD *)(v34 + 56) = 0;
      }
      else
      {
        *(_QWORD *)(v7 + 184) = v46;
      }
      v48 = *(_QWORD *)(v7 + 384);
      *(_OWORD *)(v7 + 208) = *(_OWORD *)(v48 + 64);
      *(_QWORD *)(v48 + 64) = 0;
      *(_QWORD *)(v48 + 72) = 0;
    }
    *(_BYTE *)(v7 + 224) = v36;
    if (*(_BYTE *)(v7 + 104))
    {
      v49 = *(_QWORD *)(v7 + 24);
      if (*(_BYTE *)(v7 + 96))
      {
        *v20 = 0;
        if (v49)
          (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
      }
      else
      {
        (*(void (**)(unint64_t))v49)(v7 + 24);
      }
      *(_BYTE *)(v7 + 104) = 0;
      v36 = *(unsigned __int8 *)(v7 + 224);
    }
    if (v36)
    {
      v50 = *(_QWORD *)(v7 + 152);
      *(_QWORD *)(v7 + 152) = 0;
      *(_QWORD *)(v7 + 24) = v50;
      *(_BYTE *)(v7 + 96) = v36;
      *(_BYTE *)(v7 + 104) = 1;
    }
    else
    {
      std::runtime_error::runtime_error((std::runtime_error *)(v7 + 24), (const std::runtime_error *)(v7 + 152));
      v58 = (_QWORD *)(v7 + 192);
      v59 = *(_QWORD *)(v7 + 192);
      *(_QWORD *)(v7 + 64) = v59;
      v60 = v7 + 64;
      *(_OWORD *)(v7 + 40) = *(_OWORD *)(v7 + 168);
      *(_QWORD *)(v7 + 24) = off_1E2521330;
      *(_QWORD *)(v7 + 56) = *(_QWORD *)(v7 + 184);
      v61 = *(_QWORD *)(v7 + 200);
      *(_QWORD *)(v7 + 72) = v61;
      if (v61)
      {
        *(_QWORD *)(v59 + 16) = v60;
        *(_QWORD *)(v7 + 184) = v58;
        *v58 = 0;
        *(_QWORD *)(v7 + 200) = 0;
      }
      else
      {
        *(_QWORD *)(v7 + 56) = v60;
      }
      *(_OWORD *)(v7 + 80) = *(_OWORD *)(v7 + 208);
      *(_QWORD *)(v7 + 208) = 0;
      *(_QWORD *)(v7 + 216) = 0;
      v62 = *(_QWORD *)(v7 + 152);
      *(_BYTE *)(v7 + 96) = 0;
      *(_BYTE *)(v7 + 104) = 1;
      if (*(_BYTE *)(v7 + 224))
      {
        *v15 = 0;
        if (v62)
          (*(void (**)(uint64_t))(*(_QWORD *)v62 + 8))(v62);
      }
      else
      {
        (*(void (**)(unint64_t))v62)(v7 + 152);
      }
    }
    v51 = *(_QWORD *)(v7 + 392);
    if (v51)
    {
      v52 = (unint64_t *)(v51 + 8);
      do
        v53 = __ldaxr(v52);
      while (__stlxr(v53 - 1, v52));
      if (!v53)
      {
        v54 = *(std::__shared_weak_count **)(v7 + 392);
        ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
        std::__shared_weak_count::__release_weak(v54);
      }
    }
    v55 = *(std::__shared_weak_count **)(v7 + 304);
    if (!v55)
      goto LABEL_45;
    p_shared_owners = (unint64_t *)&v55->__shared_owners_;
    do
      v57 = __ldaxr(p_shared_owners);
    while (__stlxr(v57 - 1, p_shared_owners));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
      std::__shared_weak_count::__release_weak(v55);
      if ((*(char *)(v7 + 295) & 0x80000000) == 0)
        goto LABEL_47;
    }
    else
    {
LABEL_45:
      if ((*(char *)(v7 + 295) & 0x80000000) == 0)
      {
LABEL_47:
        if (*(_BYTE *)(v7 + 256))
        {
          if (*(char *)(v7 + 255) < 0)
            operator delete(*v16);
        }
        AMSCore::AwaitableMutex::unlock((std::mutex *)(*(_QWORD *)(v7 + 344) + 192));
        *(_QWORD *)(v7 + 152) = v11;
        *(_QWORD *)v7 = 0;
        AMSCore::Task<std::unique_ptr<AMSCore::IMediaAccount>,AMSCore::Error>::Promise::Awaiter::await_suspend((_BYTE *)(v7 + 152));
        return;
      }
    }
    operator delete(*(void **)(v7 + 272));
    goto LABEL_47;
  }
}

void AMSCore::EphemeralAccountProvider::getMediaAccounts(AMSCore::EphemeralAccountProvider *this@<X0>, _OWORD *a2@<X8>)
{
  char *v4;
  char *v5;
  _BYTE *v6;
  char *v7;
  unsigned int v8;
  void **v9;
  _QWORD *v10;
  __int128 v11;
  unsigned __int8 *v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void (**v21)(uint64_t);
  void (**v22)(uint64_t);
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned __int8 v28;
  _QWORD *v29;
  std::mutex *v30;
  uint64_t v31;
  std::mutex *v32;
  uint64_t v33;
  __int128 v34;
  unint64_t v35;

  v4 = (char *)operator new(0xB8uLL);
  v5 = v4;
  *(_QWORD *)v4 = AMSCore::EphemeralAccountProvider::getMediaAccounts;
  *((_QWORD *)v4 + 1) = AMSCore::EphemeralAccountProvider::getMediaAccounts;
  v6 = v4 + 152;
  v7 = v4 + 16;
  *((_QWORD *)v4 + 21) = this;
  do
    v8 = __ldaxr((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
  while (__stlxr(v8 + 1, (unsigned int *)&AMSCore::TaskCounter::getCount(void)::count));
  *((_QWORD *)v4 + 14) = 0;
  v4[24] = 0;
  v9 = (void **)(v4 + 24);
  v4[104] = 0;
  *((_QWORD *)v4 + 18) = 0;
  v10 = (_QWORD *)operator new();
  *v10 = &off_1E2523AB0;
  v10[1] = 0;
  v10[2] = 0;
  v10[3] = v7;
  *(_QWORD *)&v11 = v7;
  *((_QWORD *)&v11 + 1) = v10;
  *a2 = v11;
  v12 = (unsigned __int8 *)this + 256;
  do
    v13 = __ldaxr(v12);
  while (__stxr(1u, v12));
  if ((v13 & 1) != 0)
  {
    v5[176] = 0;
    std::mutex::lock((std::mutex *)(*((_QWORD *)v5 + 21) + 192));
    v26 = *((_QWORD *)v5 + 21);
    if (*(_QWORD *)(v26 + 280))
      goto LABEL_27;
    v27 = (unsigned __int8 *)(v26 + 256);
    do
      v28 = __ldxr(v27);
    while (__stlxr(1u, v27));
    if ((v28 & 1) != 0)
    {
LABEL_27:
      v29 = operator new(0x18uLL);
      v30 = (std::mutex *)(*((_QWORD *)v5 + 21) + 192);
      v29[1] = v26 + 264;
      v29[2] = v5;
      v31 = *(_QWORD *)(v26 + 264);
      *v29 = v31;
      *(_QWORD *)(v31 + 8) = v29;
      *(_QWORD *)(v26 + 264) = v29;
      ++*(_QWORD *)(v26 + 280);
      std::mutex::unlock(v30);
      return;
    }
    std::mutex::unlock((std::mutex *)(*((_QWORD *)v5 + 21) + 192));
  }
  v14 = *((_QWORD *)v5 + 21);
  *((_QWORD *)v5 + 19) = v14 + 192;
  v5[160] = 1;
  v34 = 0uLL;
  v35 = 0;
  std::vector<std::unique_ptr<AMSCore::IMediaAccount>>::reserve((uint64_t)&v34, (uint64_t)(*(_QWORD *)(v14 + 32) - *(_QWORD *)(v14 + 24)) >> 3);
  v15 = *(_QWORD *)(v14 + 24);
  v16 = *(_QWORD *)(v14 + 32);
  while (v15 != v16)
  {
    (*(void (**)(uint64_t *__return_ptr))(**(_QWORD **)v15 + 48))(&v33);
    v17 = *((_QWORD *)&v34 + 1);
    if (*((_QWORD *)&v34 + 1) >= v35)
    {
      v19 = std::vector<std::unique_ptr<AMSCore::IMediaAccount>>::__emplace_back_slow_path<std::unique_ptr<AMSCore::IMediaAccount>>(&v34, &v33);
    }
    else
    {
      v18 = v33;
      v33 = 0;
      **((_QWORD **)&v34 + 1) = v18;
      v19 = (_QWORD *)(v17 + 8);
    }
    *((_QWORD *)&v34 + 1) = v19;
    v20 = v33;
    v33 = 0;
    if (v20)
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
    v15 += 8;
  }
  if (v5[104])
  {
    v21 = (void (**)(uint64_t))*((_QWORD *)v5 + 3);
    if (v5[96])
    {
      if (v21)
      {
        v22 = (void (**)(uint64_t))*((_QWORD *)v5 + 4);
        v23 = (void *)*((_QWORD *)v5 + 3);
        if (v22 != v21)
        {
          do
          {
            v25 = (uint64_t)*--v22;
            v24 = v25;
            *v22 = 0;
            if (v25)
              (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
          }
          while (v22 != v21);
          v23 = *v9;
        }
        *((_QWORD *)v5 + 4) = v21;
        operator delete(v23);
      }
    }
    else
    {
      (*v21)((uint64_t)(v5 + 24));
    }
  }
  v32 = (std::mutex *)(*((_QWORD *)v5 + 21) + 192);
  *(_OWORD *)(v5 + 24) = v34;
  *((_QWORD *)v5 + 5) = v35;
  v5[96] = 1;
  v5[104] = 1;
  AMSCore::AwaitableMutex::unlock(v32);
  *((_QWORD *)v5 + 19) = v7;
  *(_QWORD *)v5 = 0;
  v5[176] = 1;
  AMSCore::Task<std::vector<std::unique_ptr<AMSCore::IMediaAccount>>,AMSCore::Error>::Promise::Awaiter::await_suspend(v6);
}

void sub_18CBD9C5C(void *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  std::vector<std::unique_ptr<AMSCore::IMediaAccount>>::~vector[abi:fe180100]((uint64_t *)va);
  std::unique_lock<AMSCore::AwaitableMutex>::~unique_lock[abi:fe180100](v3);
  __cxa_begin_catch(a1);
  AMSCore::Task<std::vector<std::unique_ptr<AMSCore::IMediaAccount>>,AMSCore::Error>::Promise::unhandled_exception();
}

void sub_18CBD9CEC()
{
  __cxa_end_catch();
  JUMPOUT(0x18CBD9C24);
}

void sub_18CBD9CF4(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  AMSCore::Task<std::vector<std::unique_ptr<AMSCore::IMediaAccount>>,AMSCore::Error>::ValuePromise::~ValuePromise(v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *AMSCore::EphemeralAccountProvider::observe@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  char *v10;
  unint64_t *v11;
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  unint64_t *v21;
  unint64_t v22;
  char *v23;
  __int128 v24;
  char *v25;
  std::__shared_weak_count *v26;
  _QWORD *result;
  uint64_t v28;
  __int128 v29;
  _QWORD v30[3];
  _QWORD *v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v5 = (_QWORD *)a2[3];
  if (v5)
  {
    if (v5 == a2)
    {
      v31 = v30;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v30);
    }
    else
    {
      v31 = (_QWORD *)a2[3];
      a2[3] = 0;
    }
  }
  else
  {
    v31 = 0;
  }
  v6 = operator new(0x38uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_1E25230D8;
  v8 = v6 + 3;
  if (v31)
  {
    if (v31 == v30)
    {
      v6[6] = v8;
      (*(void (**)(_QWORD *, _QWORD *))(v30[0] + 24))(v30, v8);
    }
    else
    {
      v6[6] = v31;
      v31 = 0;
    }
  }
  else
  {
    v6[6] = 0;
  }
  *(_QWORD *)&v29 = v8;
  *((_QWORD *)&v29 + 1) = v7;
  std::mutex::lock((std::mutex *)(a1 + 48));
  v10 = *(char **)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  if ((unint64_t)v10 >= v9)
  {
    v14 = *(char **)(a1 + 112);
    v15 = (v10 - v14) >> 4;
    v16 = v15 + 1;
    if ((unint64_t)(v15 + 1) >> 60)
      std::vector<std::string>::__throw_length_error[abi:fe180100]();
    v17 = v9 - (_QWORD)v14;
    if (v17 >> 3 > v16)
      v16 = v17 >> 3;
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF0)
      v18 = 0xFFFFFFFFFFFFFFFLL;
    else
      v18 = v16;
    if (v18 >> 60)
      std::__throw_bad_array_new_length[abi:fe180100]();
    v19 = (char *)operator new(16 * v18);
    v20 = &v19[16 * v15];
    *(_OWORD *)v20 = v29;
    v7 = (_QWORD *)*((_QWORD *)&v29 + 1);
    if (*((_QWORD *)&v29 + 1))
    {
      v21 = (unint64_t *)(*((_QWORD *)&v29 + 1) + 16);
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      v14 = *(char **)(a1 + 112);
      v10 = *(char **)(a1 + 120);
    }
    v23 = &v19[16 * v18];
    v13 = v20 + 16;
    if (v10 == v14)
    {
      *(_QWORD *)(a1 + 112) = v20;
      *(_QWORD *)(a1 + 120) = v13;
      *(_QWORD *)(a1 + 128) = v23;
    }
    else
    {
      do
      {
        v24 = *((_OWORD *)v10 - 1);
        v10 -= 16;
        *((_OWORD *)v20 - 1) = v24;
        v20 -= 16;
        *(_QWORD *)v10 = 0;
        *((_QWORD *)v10 + 1) = 0;
      }
      while (v10 != v14);
      v14 = *(char **)(a1 + 112);
      v25 = *(char **)(a1 + 120);
      *(_QWORD *)(a1 + 112) = v20;
      *(_QWORD *)(a1 + 120) = v13;
      *(_QWORD *)(a1 + 128) = v23;
      while (v25 != v14)
      {
        v26 = (std::__shared_weak_count *)*((_QWORD *)v25 - 1);
        if (v26)
          std::__shared_weak_count::__release_weak(v26);
        v25 -= 16;
      }
    }
    if (v14)
    {
      operator delete(v14);
      v7 = (_QWORD *)*((_QWORD *)&v29 + 1);
      v8 = (_QWORD *)v29;
    }
    else
    {
      v8 = (_QWORD *)v29;
    }
  }
  else
  {
    *(_QWORD *)v10 = v8;
    *((_QWORD *)v10 + 1) = v7;
    v11 = v7 + 2;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    v13 = v10 + 16;
  }
  *(_QWORD *)(a1 + 120) = v13;
  *a3 = v8;
  a3[1] = v7;
  std::mutex::unlock((std::mutex *)(a1 + 48));
  result = v31;
  if (v31 == v30)
  {
    v28 = 4;
    result = v30;
  }
  else
  {
    if (!v31)
      return result;
    v28 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v28))();
}

void sub_18CBD9FA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a2)
    __clang_call_terminate(exception_object);
  _Unwind_Resume(exception_object);
}

void AMSCore::EphemeralAccountProvider::removeAccount(uint64_t a1@<X0>, uint64_t a2@<X1>, std::runtime_error *a3@<X8>)
{
  char *v6;
  char *v7;
  char *v8;
  std::runtime_error *v9;
  _QWORD *v10;
  unsigned int v11;
  void (***v12)(uint64_t);
  unsigned __int8 *v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  char v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned __int8 v24;
  _QWORD *v25;
  std::mutex *v26;
  uint64_t v27;
  std::runtime_error *v28;
  std::runtime_error_vtbl *v29;
  uint64_t v30;
  uint64_t v31;
  std::runtime_error_vtbl *v32;
  std::runtime_error_vtbl *v33;
  std::ios_base *v34;
  uint64_t v35;
  void (__cdecl *v36)(std::runtime_error *__hidden);
  unsigned __int8 v37;
  _QWORD *v38;
  __int128 v39;
  unsigned int *v40;
  unsigned int **v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  const AMSCore::IMediaAccount *v46;
  void **p_data;
  uint64_t v48;
  uint64_t *v49;
  __int128 v50;
  unint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t *v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  std::__shared_weak_count *v66;
  unint64_t *p_shared_owners;
  unint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  unsigned int v76;
  unint64_t *v77;
  unint64_t v78;
  std::__shared_weak_count *v79;
  _QWORD *v80;
  uint64_t v81;
  unsigned int *v82;
  unsigned int *v83;
  unsigned int **v84;
  char *v85;
  uint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  std::string *v90;
  char *v91;
  std::mutex **v92;
  std::runtime_error __p;
  __int128 v94;
  unsigned int **v95;
  unsigned int *v96;
  uint64_t v97;
  __int128 v98;
  std::runtime_error v99;
  __int128 v100;
  unsigned int **v101;
  unsigned int *v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  int v107;
  uint64_t v108[19];
  std::runtime_error v109;
  __int128 v110;
  unsigned int **v111;
  unsigned int *v112;
  uint64_t v113;
  __int128 v114;

  v6 = (char *)operator new(0x158uLL);
  v7 = v6;
  v8 = v6 + 296;
  *(_QWORD *)v6 = AMSCore::EphemeralAccountProvider::removeAccount;
  *((_QWORD *)v6 + 1) = AMSCore::EphemeralAccountProvider::removeAccount;
  v9 = (std::runtime_error *)(v6 + 152);
  v90 = (std::string *)(v6 + 232);
  v92 = (std::mutex **)(v6 + 256);
  v10 = v6 + 272;
  *((_QWORD *)v6 + 36) = a1;
  *(_OWORD *)(v6 + 296) = *(_OWORD *)a2;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  do
    v11 = __ldaxr((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
  while (__stlxr(v11 + 1, (unsigned int *)&AMSCore::TaskCounter::getCount(void)::count));
  v6[24] = 0;
  v12 = (void (***)(uint64_t))(v6 + 24);
  v6[104] = 0;
  *((_QWORD *)v6 + 14) = 0;
  *((_QWORD *)v6 + 18) = 0;
  v91 = v6 + 16;
  std::shared_ptr<AMSCore::Task<void,AMSCore::Error>::Promise>::shared_ptr[abi:fe180100]<AMSCore::Task<void,AMSCore::Error>::Promise,AMSCore::Task<void,AMSCore::Error>::Promise::get_return_object(void)::DetachPromise,void>(&v99, (uint64_t)(v6 + 16));
  *a3 = v99;
  v13 = (unsigned __int8 *)(a1 + 256);
  do
    v14 = __ldaxr(v13);
  while (__stxr(1u, v13));
  if ((v14 & 1) != 0)
  {
    v8[40] = 0;
    std::mutex::lock((std::mutex *)(*((_QWORD *)v7 + 36) + 192));
    v22 = *((_QWORD *)v7 + 36);
    if (*(_QWORD *)(v22 + 280))
      goto LABEL_21;
    v23 = (unsigned __int8 *)(v22 + 256);
    do
      v24 = __ldxr(v23);
    while (__stlxr(1u, v23));
    if ((v24 & 1) != 0)
    {
LABEL_21:
      v25 = operator new(0x18uLL);
      v26 = (std::mutex *)(*((_QWORD *)v7 + 36) + 192);
      v25[1] = v22 + 264;
      v25[2] = v7;
      v27 = *(_QWORD *)(v22 + 264);
      *v25 = v27;
      *(_QWORD *)(v27 + 8) = v25;
      *(_QWORD *)(v22 + 264) = v25;
      ++*(_QWORD *)(v22 + 280);
      std::mutex::unlock(v26);
      return;
    }
    std::mutex::unlock((std::mutex *)(*((_QWORD *)v7 + 36) + 192));
  }
  v15 = *((_QWORD *)v7 + 36);
  *((_QWORD *)v7 + 32) = v15 + 192;
  v7[264] = 1;
  v17 = *(uint64_t **)(v15 + 24);
  v16 = *(uint64_t **)(v15 + 32);
  if (v17 == v16)
    goto LABEL_22;
  while (1)
  {
    AMSCore::operator==(*v17, *(_QWORD *)v8);
    if ((v18 & 1) != 0)
      break;
    if (++v17 == v16)
    {
      v17 = v16;
      break;
    }
  }
  v19 = *(uint64_t **)(v15 + 32);
  if (v17 == v19)
  {
LABEL_22:
    v28 = v9;
    v29 = (std::runtime_error_vtbl *)MEMORY[0x1E0DE4FE0];
    v30 = MEMORY[0x1E0DE4FE0] + 64;
    v31 = MEMORY[0x1E0DE4F60];
    v32 = *(std::runtime_error_vtbl **)(MEMORY[0x1E0DE4F60] + 8);
    v33 = *(std::runtime_error_vtbl **)(MEMORY[0x1E0DE4F60] + 16);
    v108[0] = MEMORY[0x1E0DE4FE0] + 64;
    v99.__vftable = v32;
    *(std::runtime_error_vtbl **)((char *)&v99.__vftable + (unint64_t)v32[-1].~runtime_error) = v33;
    v34 = (std::ios_base *)((char *)&v99 + (unint64_t)v99.__vftable[-1].~runtime_error);
    std::ios_base::init(v34, &v99.__imp_);
    v34[1].__vftable = 0;
    v34[1].__fmtflags_ = -1;
    v99.__vftable = v29 + 1;
    v108[0] = v30;
    std::streambuf::basic_streambuf();
    v35 = MEMORY[0x1E0DE4FB8];
    v99.__imp_.__imp_ = (const char *)(MEMORY[0x1E0DE4FB8] + 16);
    v105 = 0u;
    v106 = 0u;
    v107 = 16;
    v36 = v99.__vftable[-1].~runtime_error;
    if ((v37 & 1) == 0
    {
    }
    v38 = std::__put_character_sequence[abi:fe180100]<char,std::char_traits<char>>(&v99, (uint64_t)"Attempting to delete a non-existent account. account = ", 55);
    AMSCore::operator<<(v38, *(_QWORD *)v8);
    v9 = v28;
    std::stringbuf::str[abi:fe180100]((uint64_t)&v99.__imp_, (std::string *)&__p);
    AMSCore::Unexpected<AMSCore::Error,AMSCore::ErrorCode,std::string>((uint64_t)&v109, 7u, (uint64_t)&__p);
    if (v7[104])
    {
      if (!v7[96])
        (**v12)((uint64_t)(v7 + 24));
      v7[104] = 0;
    }
    std::runtime_error::runtime_error((std::runtime_error *)(v7 + 24), &v109);
    v39 = v110;
    v41 = v111;
    v40 = v112;
    *((_QWORD *)v7 + 8) = v112;
    v42 = v7 + 64;
    *(_OWORD *)(v7 + 40) = v39;
    *((_QWORD *)v7 + 3) = off_1E2521330;
    *((_QWORD *)v7 + 7) = v41;
    v43 = v113;
    *((_QWORD *)v7 + 9) = v113;
    if (v43)
    {
      *((_QWORD *)v40 + 2) = v42;
      v111 = &v112;
      v112 = 0;
      v113 = 0;
      v40 = 0;
    }
    else
    {
      *((_QWORD *)v7 + 7) = v42;
    }
    *((_OWORD *)v7 + 5) = v114;
    v114 = 0uLL;
    v7[96] = 0;
    v7[104] = 1;
    v109.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v111, v40);
    MEMORY[0x18D7898AC](&v109);
    if (SBYTE7(v94) < 0)
      operator delete(__p.__vftable);
    v99.__vftable = *(std::runtime_error_vtbl **)v31;
    *(std::runtime_error_vtbl **)((char *)&v99.__vftable + (unint64_t)v99.__vftable[-1].~runtime_error) = *(std::runtime_error_vtbl **)(v31 + 24);
    v99.__imp_.__imp_ = (const char *)(v35 + 16);
    if (SBYTE7(v106) < 0)
      operator delete((void *)v105);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    MEMORY[0x18D789B58](v108);
    v60 = 3;
    goto LABEL_73;
  }
  v20 = v17 + 1;
  if (v17 + 1 != v19)
  {
    do
    {
      v17 = v20;
      v21 = *(v20 - 1);
      *(v20 - 1) = *v20;
      *v20 = 0;
      if (v21)
        (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
      v20 = v17 + 1;
    }
    while (v17 + 1 != v19);
    v19 = *(uint64_t **)(v15 + 32);
  }
  while (v19 != v17)
  {
    v45 = *--v19;
    v44 = v45;
    *v19 = 0;
    if (v45)
      (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
  }
  v46 = *(const AMSCore::IMediaAccount **)v8;
  *(_QWORD *)(v15 + 32) = v17;
  p_data = (void **)&v90->__r_.__value_.__l.__data_;
  AMSCore::EphemeralAccountProvider::getCookieProviderKey(v90, v46);
  v48 = *((_QWORD *)v7 + 36);
  v49 = std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::find<std::string>(v48 + 136, (const void **)&v90->__r_.__value_.__l.__data_);
  *((_QWORD *)v7 + 39) = v49;
  if ((uint64_t *)(v48 + 144) == v49)
    goto LABEL_65;
  (*(void (**)(uint64_t))(*(_QWORD *)v49[7] + 32))(v49[7]);
  v50 = *((_OWORD *)v7 + 17);
  *((_OWORD *)v7 + 20) = v50;
  *v10 = 0;
  v10[1] = 0;
  if (!atomic_load((unint64_t *)(v50 + 96)))
  {
    v8[40] = 1;
    v52 = (unint64_t *)(*((_QWORD *)v7 + 40) + 96);
    do
      v53 = __ldaxr(v52);
    while (__stlxr((unint64_t)v7, v52));
    if (!v53)
      return;
  }
  v54 = *((_QWORD *)v7 + 40);
  if (!*(_BYTE *)(v54 + 88))
  {
LABEL_123:
    __break(1u);
    return;
  }
  v55 = *(_BYTE *)(v54 + 80);
  if (!v55)
  {
    std::runtime_error::runtime_error(v9, (const std::runtime_error *)(v54 + 8));
    *(_OWORD *)(v7 + 168) = *(_OWORD *)(v54 + 24);
    v56 = (_QWORD *)(v54 + 48);
    v57 = *(_QWORD *)(v54 + 48);
    *((_QWORD *)v7 + 24) = v57;
    v58 = v7 + 192;
    *((_QWORD *)v7 + 19) = off_1E2521330;
    *((_QWORD *)v7 + 23) = *(_QWORD *)(v54 + 40);
    v59 = *(_QWORD *)(v54 + 56);
    *((_QWORD *)v7 + 25) = v59;
    if (v59)
    {
      *(_QWORD *)(v57 + 16) = v58;
      *(_QWORD *)(v54 + 40) = v56;
      *v56 = 0;
      *(_QWORD *)(v54 + 56) = 0;
    }
    else
    {
      *((_QWORD *)v7 + 23) = v58;
    }
    v61 = *((_QWORD *)v7 + 40);
    *((_OWORD *)v7 + 13) = *(_OWORD *)(v61 + 64);
    *(_QWORD *)(v61 + 64) = 0;
    *(_QWORD *)(v61 + 72) = 0;
  }
  v7[224] = v55;
  v62 = *((_QWORD *)v7 + 41);
  if (v62)
  {
    v63 = (unint64_t *)(v62 + 8);
    do
      v64 = __ldaxr(v63);
    while (__stlxr(v64 - 1, v63));
    if (!v64)
    {
      v65 = (std::__shared_weak_count *)*((_QWORD *)v7 + 41);
      ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
      std::__shared_weak_count::__release_weak(v65);
    }
  }
  v66 = (std::__shared_weak_count *)*((_QWORD *)v7 + 35);
  if (v66)
  {
    p_shared_owners = (unint64_t *)&v66->__shared_owners_;
    do
      v68 = __ldaxr(p_shared_owners);
    while (__stlxr(v68 - 1, p_shared_owners));
    if (!v68)
    {
      ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
      std::__shared_weak_count::__release_weak(v66);
    }
  }
  v69 = v7[224];
  if (v7[224])
  {
    std::__tree<std::__value_type<std::string,std::shared_ptr<AMSCore::IHTTPCookieProvider>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<AMSCore::IHTTPCookieProvider>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<AMSCore::IHTTPCookieProvider>>>>::erase((_QWORD *)(*((_QWORD *)v7 + 36) + 136), *((_QWORD *)v7 + 39));
    v60 = 0;
    if (v7[224])
      goto LABEL_63;
    goto LABEL_62;
  }
  std::runtime_error::runtime_error(&v99, v9);
  v80 = v7 + 192;
  v81 = *((_QWORD *)v7 + 24);
  v100 = *(_OWORD *)(v7 + 168);
  v99.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v101 = (unsigned int **)*((_QWORD *)v7 + 23);
  v102 = (unsigned int *)v81;
  v103 = *((_QWORD *)v7 + 25);
  if (v103)
  {
    *(_QWORD *)(v81 + 16) = &v102;
    *((_QWORD *)v7 + 23) = v80;
    *v80 = 0;
    *((_QWORD *)v7 + 25) = 0;
  }
  else
  {
    v101 = &v102;
  }
  v104 = *((_OWORD *)v7 + 13);
  *((_QWORD *)v7 + 26) = 0;
  *((_QWORD *)v7 + 27) = 0;
  LOBYTE(v105) = 1;
  std::runtime_error::runtime_error(&v109, &v99);
  v110 = v100;
  v109.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v111 = v101;
  v112 = v102;
  v113 = v103;
  if (v103)
  {
    *((_QWORD *)v102 + 2) = &v112;
    v101 = &v102;
    v102 = 0;
    v103 = 0;
  }
  else
  {
    v111 = &v112;
  }
  v114 = v104;
  v104 = 0uLL;
  std::runtime_error::runtime_error(&__p, &v109);
  v94 = v110;
  __p.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  v82 = v112;
  v95 = v111;
  v96 = v112;
  v97 = v113;
  if (v113)
  {
    *((_QWORD *)v112 + 2) = &v96;
    v82 = 0;
    v111 = &v112;
    v112 = 0;
    v113 = 0;
  }
  else
  {
    v95 = &v96;
  }
  v98 = v114;
  v114 = 0uLL;
  v109.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v111, v82);
  MEMORY[0x18D7898AC](&v109);
  if (v7[104])
  {
    if (!v7[96])
      (**v12)((uint64_t)(v7 + 24));
    v7[104] = 0;
  }
  std::runtime_error::runtime_error((std::runtime_error *)(v7 + 24), &__p);
  v84 = v95;
  v83 = v96;
  *((_QWORD *)v7 + 8) = v96;
  v85 = v7 + 64;
  *(_OWORD *)(v7 + 40) = v94;
  *((_QWORD *)v7 + 3) = off_1E2521330;
  *((_QWORD *)v7 + 7) = v84;
  v86 = v97;
  *((_QWORD *)v7 + 9) = v97;
  if (v86)
  {
    *((_QWORD *)v83 + 2) = v85;
    v83 = 0;
    v95 = &v96;
    v96 = 0;
    v97 = 0;
  }
  else
  {
    *((_QWORD *)v7 + 7) = v85;
  }
  p_data = (void **)&v90->__r_.__value_.__l.__data_;
  *((_OWORD *)v7 + 5) = v98;
  v98 = 0uLL;
  v7[96] = 0;
  v7[104] = 1;
  __p.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
  std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v95, v83);
  MEMORY[0x18D7898AC](&__p);
  if ((_BYTE)v105)
  {
    v99.__vftable = (std::runtime_error_vtbl *)off_1E2521330;
    v87 = (std::__shared_weak_count *)*((_QWORD *)&v104 + 1);
    if (*((_QWORD *)&v104 + 1))
    {
      v88 = (unint64_t *)(*((_QWORD *)&v104 + 1) + 8);
      do
        v89 = __ldaxr(v88);
      while (__stlxr(v89 - 1, v88));
      if (!v89)
      {
        ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
        std::__shared_weak_count::__release_weak(v87);
      }
    }
    std::__tree<std::__value_type<std::string,AMSCore::Any>,std::__map_value_compare<std::string,std::__value_type<std::string,AMSCore::Any>,std::less<void>,true>,std::allocator<std::__value_type<std::string,AMSCore::Any>>>::destroy((uint64_t)&v101, v102);
    MEMORY[0x18D7898AC](&v99);
  }
  v60 = 3;
  if (!v7[224])
LABEL_62:
    ((void (*)(std::runtime_error *))v9->~runtime_error)(v9);
LABEL_63:
  if (!v69)
    goto LABEL_69;
  if (!v7[264])
  {
    std::__throw_system_error(1, "unique_lock::unlock: not locked");
    goto LABEL_123;
  }
LABEL_65:
  AMSCore::AwaitableMutex::unlock(*v92);
  v70 = *((_QWORD *)v7 + 37);
  v7[264] = 0;
  v71 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v70 + 64))(v70);
  AMSCore::Subject<std::string const&,AMSCore::AccountChangedMetadata>::notify(*((_QWORD *)v7 + 36) + 48, v71, 2);
  if (v7[104] && !v7[96])
    (**v12)((uint64_t)(v7 + 24));
  v7[96] = 1;
  v7[104] = 1;
  v60 = 3;
LABEL_69:
  if (v7[255] < 0)
  {
    operator delete(*p_data);
    if (!v7[264])
      goto LABEL_74;
    goto LABEL_73;
  }
  if (v7[264])
LABEL_73:
    AMSCore::AwaitableMutex::unlock(*v92);
LABEL_74:
  if (v60 == 3)
  {
    *((_QWORD *)v7 + 19) = v91;
    *(_QWORD *)v7 = 0;
    AMSCore::Task<void,AMSCore::Error>::Promise::Awaiter::await_suspend(v9);
    return;
  }
  v72 = (char *)*((_QWORD *)v7 + 18);
  if (v72 == v7 + 120)
  {
    v73 = 4;
    v72 = v7 + 120;
  }
  else
  {
    if (!v72)
      goto LABEL_81;
    v73 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v72 + 8 * v73))();
LABEL_81:
  if (v7[104] && !v7[96])
    (**v12)((uint64_t)(v7 + 24));
  v74 = *((_QWORD *)v7 + 38);
  do
  {
    v75 = __ldaxr((unsigned int *)&AMSCore::TaskCounter::getCount(void)::count);
    v76 = v75 - 1;
  }
  while (__stlxr(v76, (unsigned int *)&AMSCore::TaskCounter::getCount(void)::count));
  if (!v76)
    MEMORY[0x18D789A68](&AMSCore::TaskCounter::getCount(void)::count);
  if (v74)
  {
    v77 = (unint64_t *)(*((_QWORD *)v7 + 38) + 8);
    do
      v78 = __ldaxr(v77);
    while (__stlxr(v78 - 1, v77));
    if (!v78)
    {
      v79 = (std::__shared_weak_count *)*((_QWORD *)v7 + 38);
      ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
      std::__shared_weak_count::__release_weak(v79);
    }
  }
  operator delete(v7);
}

